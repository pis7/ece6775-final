// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __cache_update_k_cajbC_H__
#define __cache_update_k_cajbC_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct cache_update_k_cajbC_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 24;
  static const unsigned AddressRange = 120;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(cache_update_k_cajbC_ram) {
        ram[0] = "0b000000000001010000101101";
        ram[1] = "0b000000010100011111101001";
        ram[2] = "0b111111011001001101111101";
        ram[3] = "0b000000010001101010000001";
        ram[4] = "0b111111111111010111101001";
        ram[5] = "0b000000010000011001010100";
        ram[6] = "0b111110101010100011011101";
        ram[7] = "0b111111100001000110011100";
        ram[8] = "0b111111101000101010101111";
        ram[9] = "0b000000000010110101100111";
        ram[10] = "0b111111110111011111001010";
        ram[11] = "0b111111111010101000111101";
        ram[12] = "0b001010010010010101100001";
        ram[13] = "0b110101000111111101001101";
        ram[14] = "0b001010000011101110101101";
        ram[15] = "0b101110111010001101110111";
        ram[16] = "0b110010110100111101010001";
        ram[17] = "0b110100110110010010000111";
        ram[18] = "0b110001011001000011011100";
        ram[19] = "0b111110100011011001100000";
        ram[20] = "0b110001111011001111100100";
        ram[21] = "0b110111010001110110001100";
        ram[22] = "0b000100000111100100101111";
        ram[23] = "0b111001110001100100011010";
        ram[24] = "0b001111001011010011010111";
        ram[25] = "0b111001110100100001111000";
        ram[26] = "0b111100100100100101010000";
        ram[27] = "0b110100011111010101101010";
        ram[28] = "0b111000010111110011010011";
        ram[29] = "0b111000110011111001000011";
        ram[30] = "0b111000101110000111011010";
        ram[31] = "0b111011010001011000100101";
        ram[32] = "0b000001001010001111110001";
        ram[33] = "0b111110010110110111111000";
        ram[34] = "0b000011101011100010001010";
        ram[35] = "0b111001111110100001101000";
        ram[36] = "0b000110000000011010011011";
        ram[37] = "0b000010010100001110110111";
        ram[38] = "0b000100101111101010011010";
        ram[39] = "0b111110011011110011111100";
        ram[40] = "0b111011111101110001100110";
        ram[41] = "0b111101101001011111110001";
        ram[42] = "0b111111001110000100111000";
        ram[43] = "0b111101110101110101110101";
        ram[44] = "0b110100011100001001111101";
        ram[45] = "0b000100000011111011000111";
        ram[46] = "0b000100110010000001001111";
        ram[47] = "0b111010000101101011000011";
        ram[48] = "0b111010111111010100101001";
        ram[49] = "0b000110100000110100000000";
        ram[50] = "0b111100110010000100010110";
        ram[51] = "0b111011101010110101110111";
        ram[52] = "0b000000101011001001001100";
        ram[53] = "0b000010001100011001111001";
        ram[54] = "0b111010000100010001100110";
        ram[55] = "0b000110101001110011001010";
        ram[56] = "0b000011001110100001100000";
        ram[57] = "0b000001011100011001111110";
        ram[58] = "0b000110110111101100001010";
        ram[59] = "0b111100000110001110000010";
        ram[60] = "0b000000100000011110011100";
        ram[61] = "0b000000000101010111000010";
        ram[62] = "0b000000000011110010001001";
        ram[63] = "0b111111011100101011111100";
        ram[64] = "0b111110101011110100001011";
        ram[65] = "0b000000001110110100011010";
        ram[66] = "0b111111111000000111100001";
        ram[67] = "0b000000000100011010100000";
        ram[68] = "0b111111100100111000100110";
        ram[69] = "0b111111100000001001111010";
        ram[70] = "0b000000111010111101011111";
        ram[71] = "0b111111101001111011011101";
        ram[72] = "0b110101101011011100111011";
        ram[73] = "0b111110001010100010000000";
        ram[74] = "0b000111111000001010101001";
        ram[75] = "0b000101001001011110111110";
        ram[76] = "0b111101001001010100010000";
        ram[77] = "0b111011100100101011111100";
        ram[78] = "0b001101100010011001000100";
        ram[79] = "0b111100101110110101110100";
        ram[80] = "0b000100001000110011010010";
        ram[81] = "0b111100111111011010110011";
        ram[82] = "0b110111000101011011110111";
        ram[83] = "0b111100101001111011100000";
        ram[84] = "0b110110100001001011101101";
        ram[85] = "0b111000011100101010100100";
        ram[86] = "0b010001100101000101011001";
        ram[87] = "0b001001001111000010110000";
        ram[88] = "0b000010100011001000101100";
        ram[89] = "0b110010000010001110100010";
        ram[90] = "0b001010010101011111100001";
        ram[91] = "0b111000001000010000101010";
        ram[92] = "0b000100111101010000011011";
        ram[93] = "0b111101110001001011110000";
        ram[94] = "0b110011001011011111101001";
        ram[95] = "0b110101110001111111110110";
        ram[96] = "0b000001111011101110101111";
        ram[97] = "0b110101101101100101101110";
        ram[98] = "0b001011010111100110100111";
        ram[99] = "0b111110110000110100011101";
        ram[100] = "0b111101000000000100110100";
        ram[101] = "0b111010011101000010110001";
        ram[102] = "0b000011000101001010110010";
        ram[103] = "0b111010111110110010001001";
        ram[104] = "0b111110110101011010000000";
        ram[105] = "0b111011011010100111000001";
        ram[106] = "0b110111010001110011110001";
        ram[107] = "0b111010010111001110110111";
        ram[108] = "0b000101010010001001001110";
        ram[109] = "0b111010011000100001001000";
        ram[110] = "0b000000110111110101100011";
        ram[111] = "0b111011110011111110010111";
        ram[112] = "0b111100011101001110010111";
        ram[113] = "0b000101100111111100101110";
        ram[114] = "0b000001011111111001001101";
        ram[115] = "0b000011110110101011101010";
        ram[116] = "0b111100001111100101001010";
        ram[117] = "0b111010010011100000100011";
        ram[118] = "0b000000000111000010010001";
        ram[119] = "0b111011010111101010111100";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(cache_update_k_cajbC) {


static const unsigned DataWidth = 24;
static const unsigned AddressRange = 120;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


cache_update_k_cajbC_ram* meminst;


SC_CTOR(cache_update_k_cajbC) {
meminst = new cache_update_k_cajbC_ram("cache_update_k_cajbC_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~cache_update_k_cajbC() {
    delete meminst;
}


};//endmodule
#endif
