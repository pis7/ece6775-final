// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module exp_38_18_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x_V,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [37:0] x_V;
output  [37:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
reg    ap_block_pp0_stage0_11001;
wire   [2:0] f_x_msb_4_h_table_V_address0;
reg    f_x_msb_4_h_table_V_ce0;
wire   [5:0] f_x_msb_4_h_table_V_q0;
wire   [2:0] f_x_msb_4_l_table_V_address0;
reg    f_x_msb_4_l_table_V_ce0;
wire   [6:0] f_x_msb_4_l_table_V_q0;
wire   [3:0] f_x_lsb_table_V_address0;
reg    f_x_lsb_table_V_ce0;
wire   [7:0] f_x_lsb_table_V_q0;
wire   [4:0] f_x_msb_3_table_V_address0;
reg    f_x_msb_3_table_V_ce0;
wire   [31:0] f_x_msb_3_table_V_q0;
wire   [7:0] f_x_msb_2_table_V_address0;
reg    f_x_msb_2_table_V_ce0;
wire   [45:0] f_x_msb_2_table_V_q0;
wire   [7:0] exp_x_msb_1_table_V_address0;
reg    exp_x_msb_1_table_V_ce0;
wire   [49:0] exp_x_msb_1_table_V_q0;
wire   [3:0] tmp_V_3_fu_276_p3;
reg   [3:0] tmp_V_3_reg_1130;
wire   [0:0] tmp_fu_306_p3;
reg   [0:0] tmp_reg_1135;
reg   [0:0] tmp_reg_1135_pp0_iter1_reg;
reg   [0:0] tmp_reg_1135_pp0_iter2_reg;
reg   [0:0] tmp_reg_1135_pp0_iter3_reg;
reg   [0:0] tmp_reg_1135_pp0_iter4_reg;
reg   [0:0] tmp_reg_1135_pp0_iter5_reg;
reg   [0:0] tmp_reg_1135_pp0_iter6_reg;
reg   [0:0] tmp_reg_1135_pp0_iter7_reg;
reg   [0:0] tmp_reg_1135_pp0_iter8_reg;
reg   [0:0] tmp_reg_1135_pp0_iter9_reg;
reg   [0:0] tmp_reg_1135_pp0_iter10_reg;
reg   [6:0] p_Result_18_reg_1141;
reg   [6:0] p_Result_18_reg_1141_pp0_iter1_reg;
reg   [6:0] p_Result_18_reg_1141_pp0_iter2_reg;
reg   [6:0] p_Result_18_reg_1141_pp0_iter3_reg;
reg   [6:0] p_Result_18_reg_1141_pp0_iter4_reg;
reg   [6:0] p_Result_18_reg_1141_pp0_iter5_reg;
reg   [6:0] p_Result_18_reg_1141_pp0_iter6_reg;
reg   [7:0] tmp_V_reg_1146;
reg   [7:0] tmp_V_reg_1146_pp0_iter1_reg;
reg   [7:0] tmp_V_reg_1146_pp0_iter2_reg;
reg   [7:0] tmp_V_reg_1146_pp0_iter3_reg;
reg   [7:0] tmp_V_reg_1146_pp0_iter4_reg;
wire   [4:0] tmp_V_1_fu_600_p4;
reg   [4:0] tmp_V_1_reg_1152;
reg   [4:0] tmp_V_1_reg_1152_pp0_iter1_reg;
reg   [4:0] tmp_V_1_reg_1152_pp0_iter2_reg;
reg   [4:0] tmp_V_1_reg_1152_pp0_iter3_reg;
reg   [4:0] tmp_V_1_reg_1152_pp0_iter4_reg;
wire   [2:0] tmp_V_2_fu_610_p4;
reg   [2:0] tmp_V_2_reg_1158;
wire   [3:0] trunc_ln612_1_fu_631_p1;
reg   [3:0] trunc_ln612_1_reg_1178;
reg   [3:0] trunc_ln612_1_reg_1178_pp0_iter1_reg;
wire   [0:0] or_ln281_8_fu_706_p2;
reg   [0:0] or_ln281_8_reg_1188;
reg   [0:0] or_ln281_8_reg_1188_pp0_iter1_reg;
reg   [0:0] or_ln281_8_reg_1188_pp0_iter2_reg;
reg   [0:0] or_ln281_8_reg_1188_pp0_iter3_reg;
reg   [0:0] or_ln281_8_reg_1188_pp0_iter4_reg;
reg   [0:0] or_ln281_8_reg_1188_pp0_iter5_reg;
reg   [0:0] or_ln281_8_reg_1188_pp0_iter6_reg;
reg   [0:0] or_ln281_8_reg_1188_pp0_iter7_reg;
reg   [0:0] or_ln281_8_reg_1188_pp0_iter8_reg;
reg   [0:0] or_ln281_8_reg_1188_pp0_iter9_reg;
reg   [0:0] or_ln281_8_reg_1188_pp0_iter10_reg;
wire   [0:0] or_ln281_17_fu_760_p2;
reg   [0:0] or_ln281_17_reg_1193;
reg   [0:0] or_ln281_17_reg_1193_pp0_iter1_reg;
reg   [0:0] or_ln281_17_reg_1193_pp0_iter2_reg;
reg   [0:0] or_ln281_17_reg_1193_pp0_iter3_reg;
reg   [0:0] or_ln281_17_reg_1193_pp0_iter4_reg;
reg   [0:0] or_ln281_17_reg_1193_pp0_iter5_reg;
reg   [0:0] or_ln281_17_reg_1193_pp0_iter6_reg;
reg   [0:0] or_ln281_17_reg_1193_pp0_iter7_reg;
reg   [0:0] or_ln281_17_reg_1193_pp0_iter8_reg;
reg   [0:0] or_ln281_17_reg_1193_pp0_iter9_reg;
reg   [0:0] or_ln281_17_reg_1193_pp0_iter10_reg;
reg   [6:0] f_x_msb_4_l_V_reg_1198;
wire   [9:0] grp_fu_1122_p3;
reg   [9:0] exp_x_msb_4_lsb_m_1_s_reg_1203;
wire   [4:0] trunc_ln612_2_fu_792_p1;
reg   [4:0] trunc_ln612_2_reg_1208;
reg   [31:0] f_x_msb_3_V_reg_1213;
reg   [31:0] f_x_msb_3_V_reg_1213_pp0_iter2_reg;
reg   [31:0] f_x_msb_3_V_reg_1213_pp0_iter3_reg;
reg   [31:0] f_x_msb_3_V_reg_1213_pp0_iter4_reg;
wire   [41:0] p_Result_37_fu_796_p7;
reg   [41:0] p_Result_37_reg_1219;
reg   [41:0] p_Result_37_reg_1219_pp0_iter3_reg;
reg   [41:0] p_Result_37_reg_1219_pp0_iter4_reg;
reg   [30:0] f_x_msb_3_4_lsb_s_V_reg_1234;
wire   [47:0] exp_x_msb_3_4_lsb_m_s_fu_874_p2;
reg   [47:0] exp_x_msb_3_4_lsb_m_s_reg_1244;
reg   [47:0] exp_x_msb_3_4_lsb_m_s_reg_1244_pp0_iter6_reg;
reg   [47:0] exp_x_msb_3_4_lsb_m_s_reg_1244_pp0_iter7_reg;
wire   [8:0] ret_V_fu_897_p2;
reg   [8:0] ret_V_reg_1250;
reg   [8:0] ret_V_reg_1250_pp0_iter6_reg;
reg   [8:0] ret_V_reg_1250_pp0_iter7_reg;
wire   [40:0] trunc_ln612_3_fu_903_p1;
reg   [40:0] trunc_ln612_3_reg_1256;
reg   [40:0] trunc_ln612_3_reg_1256_pp0_iter6_reg;
reg   [40:0] trunc_ln612_3_reg_1256_pp0_iter7_reg;
reg   [45:0] f_x_msb_2_3_4_lsb_s_s_reg_1272;
reg   [49:0] exp_x_msb_2_3_4_lsb_s_reg_1282;
reg   [49:0] exp_x_msb_1_V_reg_1287;
reg   [49:0] exp_x_msb_1_V_reg_1287_pp0_iter9_reg;
reg   [49:0] exp_x_msb_1_V_reg_1287_pp0_iter10_reg;
reg   [47:0] y_lo_s_V_reg_1303;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln544_fu_620_p1;
wire   [63:0] zext_ln544_1_fu_626_p1;
wire   [63:0] zext_ln544_2_fu_635_p1;
wire   [63:0] zext_ln544_3_fu_840_p1;
wire   [63:0] zext_ln544_4_fu_942_p1;
wire  signed [37:0] x_l_V_fu_268_p0;
wire  signed [37:0] trunc_ln703_fu_272_p0;
wire   [0:0] trunc_ln703_fu_272_p1;
wire  signed [37:0] p_Result_33_fu_284_p1;
wire  signed [37:0] trunc_ln612_fu_294_p0;
wire   [19:0] trunc_ln612_fu_294_p1;
wire  signed [37:0] tmp_fu_306_p1;
wire  signed [46:0] x_l_V_fu_268_p1;
wire   [0:0] p_Result_s_fu_314_p3;
wire   [0:0] p_Result_1_fu_328_p3;
wire   [0:0] p_Result_2_fu_342_p3;
wire   [0:0] p_Result_3_fu_356_p3;
wire   [0:0] p_Result_4_fu_370_p3;
wire   [0:0] p_Result_5_fu_384_p3;
wire   [0:0] p_Result_6_fu_398_p3;
wire   [0:0] p_Result_7_fu_412_p3;
wire   [0:0] p_Result_8_fu_426_p3;
wire   [0:0] p_Result_9_fu_440_p3;
wire   [0:0] p_Result_s_92_fu_454_p3;
wire   [0:0] p_Result_10_fu_468_p3;
wire   [0:0] p_Result_11_fu_482_p3;
wire   [0:0] p_Result_12_fu_496_p3;
wire   [0:0] p_Result_13_fu_510_p3;
wire   [0:0] p_Result_14_fu_524_p3;
wire   [0:0] p_Result_15_fu_538_p3;
wire   [0:0] p_Result_16_fu_552_p3;
wire   [0:0] p_Result_17_fu_566_p3;
wire  signed [37:0] p_Result_18_fu_580_p1;
wire  signed [37:0] tmp_V_fu_590_p1;
wire  signed [37:0] tmp_V_1_fu_600_p1;
wire  signed [37:0] tmp_V_2_fu_610_p1;
wire  signed [37:0] trunc_ln612_1_fu_631_p0;
wire   [4:0] p_Result_33_fu_284_p4;
wire   [22:0] p_Result_34_fu_298_p3;
wire   [0:0] icmp_ln281_1_fu_646_p2;
wire   [0:0] icmp_ln281_fu_640_p2;
wire   [0:0] xor_ln278_fu_322_p2;
wire   [0:0] xor_ln278_1_fu_336_p2;
wire   [0:0] xor_ln278_3_fu_364_p2;
wire   [0:0] xor_ln278_4_fu_378_p2;
wire   [0:0] or_ln281_1_fu_664_p2;
wire   [0:0] xor_ln278_2_fu_350_p2;
wire   [0:0] or_ln281_2_fu_670_p2;
wire   [0:0] or_ln281_fu_658_p2;
wire   [0:0] xor_ln278_5_fu_392_p2;
wire   [0:0] xor_ln278_6_fu_406_p2;
wire   [0:0] xor_ln278_8_fu_434_p2;
wire   [0:0] xor_ln278_9_fu_448_p2;
wire   [0:0] or_ln281_5_fu_688_p2;
wire   [0:0] xor_ln278_7_fu_420_p2;
wire   [0:0] or_ln281_6_fu_694_p2;
wire   [0:0] or_ln281_4_fu_682_p2;
wire   [0:0] or_ln281_7_fu_700_p2;
wire   [0:0] or_ln281_3_fu_676_p2;
wire   [0:0] xor_ln278_10_fu_462_p2;
wire   [0:0] xor_ln278_11_fu_476_p2;
wire   [0:0] xor_ln278_13_fu_504_p2;
wire   [0:0] xor_ln278_14_fu_518_p2;
wire   [0:0] or_ln281_10_fu_718_p2;
wire   [0:0] xor_ln278_12_fu_490_p2;
wire   [0:0] or_ln281_11_fu_724_p2;
wire   [0:0] or_ln281_9_fu_712_p2;
wire   [0:0] xor_ln278_15_fu_532_p2;
wire   [0:0] xor_ln278_16_fu_546_p2;
wire   [0:0] xor_ln278_18_fu_574_p2;
wire   [0:0] and_ln281_fu_652_p2;
wire   [0:0] or_ln281_14_fu_742_p2;
wire   [0:0] xor_ln278_17_fu_560_p2;
wire   [0:0] or_ln281_15_fu_748_p2;
wire   [0:0] or_ln281_13_fu_736_p2;
wire   [0:0] or_ln281_16_fu_754_p2;
wire   [0:0] or_ln281_12_fu_730_p2;
wire   [2:0] p_Result_22_fu_772_p4;
wire   [43:0] p_Result_38_fu_808_p4;
wire   [41:0] grp_fu_824_p0;
wire   [43:0] grp_fu_824_p1;
wire   [85:0] grp_fu_824_p2;
wire   [46:0] rhs_V_fu_847_p5;
wire   [42:0] zext_ln703_1_fu_844_p1;
wire   [42:0] zext_ln703_2_fu_861_p1;
wire   [42:0] add_ln703_fu_864_p2;
wire   [47:0] zext_ln728_fu_857_p1;
wire   [47:0] zext_ln703_3_fu_870_p1;
wire   [4:0] p_Result_39_fu_880_p4;
wire   [8:0] lhs_V_fu_890_p1;
wire   [8:0] rhs_V_1_fu_894_p1;
wire   [49:0] p_Result_40_fu_907_p3;
wire   [47:0] grp_fu_920_p0;
wire   [49:0] grp_fu_920_p1;
wire   [97:0] grp_fu_920_p2;
wire   [7:0] p_Result_35_fu_926_p3;
wire   [55:0] rhs_V_2_fu_950_p4;
wire   [56:0] lhs_V_1_fu_947_p1;
wire   [56:0] zext_ln728_1_fu_958_p1;
wire   [56:0] zext_ln703_7_fu_968_p1;
wire   [56:0] ret_V_8_fu_962_p2;
wire   [56:0] ret_V_9_fu_971_p2;
wire   [49:0] grp_fu_993_p0;
wire   [49:0] grp_fu_993_p1;
wire   [99:0] grp_fu_993_p2;
wire   [49:0] zext_ln703_8_fu_1009_p1;
wire   [49:0] y_l_V_fu_1012_p2;
wire   [0:0] xor_ln282_fu_1027_p2;
wire   [0:0] or_ln281_18_fu_1040_p2;
wire   [45:0] select_ln282_fu_1032_p3;
wire   [45:0] y_V_fu_1017_p4;
wire   [45:0] p_Val2_45_fu_1044_p3;
wire   [1:0] tmp_82_fu_1052_p4;
wire   [0:0] icmp_ln456_fu_1062_p2;
wire   [0:0] tmp_83_fu_1068_p3;
wire   [2:0] tmp_84_fu_1082_p4;
wire   [0:0] icmp_ln456_1_fu_1092_p2;
wire   [0:0] or_ln456_fu_1076_p2;
wire   [0:0] or_ln456_1_fu_1098_p2;
wire   [37:0] tmp_s_fu_1104_p4;
wire   [2:0] grp_fu_1122_p0;
wire   [3:0] grp_fu_1122_p1;
wire   [9:0] grp_fu_1122_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to10;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [6:0] grp_fu_1122_p00;
wire   [6:0] grp_fu_1122_p10;
wire   [85:0] grp_fu_824_p00;
wire   [85:0] grp_fu_824_p10;
wire   [97:0] grp_fu_920_p00;
wire   [97:0] grp_fu_920_p10;
wire   [99:0] grp_fu_993_p00;
wire   [99:0] grp_fu_993_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
end

exp_38_18_s_f_x_mjbC #(
    .DataWidth( 6 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
f_x_msb_4_h_table_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(f_x_msb_4_h_table_V_address0),
    .ce0(f_x_msb_4_h_table_V_ce0),
    .q0(f_x_msb_4_h_table_V_q0)
);

exp_38_18_s_f_x_mkbM #(
    .DataWidth( 7 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
f_x_msb_4_l_table_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(f_x_msb_4_l_table_V_address0),
    .ce0(f_x_msb_4_l_table_V_ce0),
    .q0(f_x_msb_4_l_table_V_q0)
);

exp_38_18_s_f_x_llbW #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
f_x_lsb_table_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(f_x_lsb_table_V_address0),
    .ce0(f_x_lsb_table_V_ce0),
    .q0(f_x_lsb_table_V_q0)
);

exp_38_18_s_f_x_mmb6 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
f_x_msb_3_table_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(f_x_msb_3_table_V_address0),
    .ce0(f_x_msb_3_table_V_ce0),
    .q0(f_x_msb_3_table_V_q0)
);

exp_38_18_s_f_x_mncg #(
    .DataWidth( 46 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
f_x_msb_2_table_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(f_x_msb_2_table_V_address0),
    .ce0(f_x_msb_2_table_V_ce0),
    .q0(f_x_msb_2_table_V_q0)
);

exp_38_18_s_exp_xocq #(
    .DataWidth( 50 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
exp_x_msb_1_table_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_x_msb_1_table_V_address0),
    .ce0(exp_x_msb_1_table_V_ce0),
    .q0(exp_x_msb_1_table_V_q0)
);

dut_mul_42ns_44nspcA #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 42 ),
    .din1_WIDTH( 44 ),
    .dout_WIDTH( 86 ))
dut_mul_42ns_44nspcA_U862(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_824_p0),
    .din1(grp_fu_824_p1),
    .ce(1'b1),
    .dout(grp_fu_824_p2)
);

dut_mul_48ns_50nsqcK #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 48 ),
    .din1_WIDTH( 50 ),
    .dout_WIDTH( 98 ))
dut_mul_48ns_50nsqcK_U863(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_920_p0),
    .din1(grp_fu_920_p1),
    .ce(1'b1),
    .dout(grp_fu_920_p2)
);

dut_mul_50ns_50nsrcU #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 50 ),
    .din1_WIDTH( 50 ),
    .dout_WIDTH( 100 ))
dut_mul_50ns_50nsrcU_U864(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_993_p0),
    .din1(grp_fu_993_p1),
    .ce(1'b1),
    .dout(grp_fu_993_p2)
);

dut_mac_muladd_3nsc4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
dut_mac_muladd_3nsc4_U865(
    .din0(grp_fu_1122_p0),
    .din1(grp_fu_1122_p1),
    .din2(grp_fu_1122_p2),
    .dout(grp_fu_1122_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exp_x_msb_1_V_reg_1287 <= exp_x_msb_1_table_V_q0;
        exp_x_msb_1_V_reg_1287_pp0_iter10_reg <= exp_x_msb_1_V_reg_1287_pp0_iter9_reg;
        exp_x_msb_1_V_reg_1287_pp0_iter9_reg <= exp_x_msb_1_V_reg_1287;
        exp_x_msb_2_3_4_lsb_s_reg_1282 <= {{ret_V_9_fu_971_p2[55:6]}};
        exp_x_msb_3_4_lsb_m_s_reg_1244 <= exp_x_msb_3_4_lsb_m_s_fu_874_p2;
        exp_x_msb_3_4_lsb_m_s_reg_1244_pp0_iter6_reg <= exp_x_msb_3_4_lsb_m_s_reg_1244;
        exp_x_msb_3_4_lsb_m_s_reg_1244_pp0_iter7_reg <= exp_x_msb_3_4_lsb_m_s_reg_1244_pp0_iter6_reg;
        f_x_msb_2_3_4_lsb_s_s_reg_1272 <= {{grp_fu_920_p2[97:52]}};
        f_x_msb_3_4_lsb_s_V_reg_1234 <= {{grp_fu_824_p2[85:55]}};
        f_x_msb_3_V_reg_1213_pp0_iter2_reg <= f_x_msb_3_V_reg_1213;
        f_x_msb_3_V_reg_1213_pp0_iter3_reg <= f_x_msb_3_V_reg_1213_pp0_iter2_reg;
        f_x_msb_3_V_reg_1213_pp0_iter4_reg <= f_x_msb_3_V_reg_1213_pp0_iter3_reg;
        or_ln281_17_reg_1193_pp0_iter10_reg <= or_ln281_17_reg_1193_pp0_iter9_reg;
        or_ln281_17_reg_1193_pp0_iter2_reg <= or_ln281_17_reg_1193_pp0_iter1_reg;
        or_ln281_17_reg_1193_pp0_iter3_reg <= or_ln281_17_reg_1193_pp0_iter2_reg;
        or_ln281_17_reg_1193_pp0_iter4_reg <= or_ln281_17_reg_1193_pp0_iter3_reg;
        or_ln281_17_reg_1193_pp0_iter5_reg <= or_ln281_17_reg_1193_pp0_iter4_reg;
        or_ln281_17_reg_1193_pp0_iter6_reg <= or_ln281_17_reg_1193_pp0_iter5_reg;
        or_ln281_17_reg_1193_pp0_iter7_reg <= or_ln281_17_reg_1193_pp0_iter6_reg;
        or_ln281_17_reg_1193_pp0_iter8_reg <= or_ln281_17_reg_1193_pp0_iter7_reg;
        or_ln281_17_reg_1193_pp0_iter9_reg <= or_ln281_17_reg_1193_pp0_iter8_reg;
        or_ln281_8_reg_1188_pp0_iter10_reg <= or_ln281_8_reg_1188_pp0_iter9_reg;
        or_ln281_8_reg_1188_pp0_iter2_reg <= or_ln281_8_reg_1188_pp0_iter1_reg;
        or_ln281_8_reg_1188_pp0_iter3_reg <= or_ln281_8_reg_1188_pp0_iter2_reg;
        or_ln281_8_reg_1188_pp0_iter4_reg <= or_ln281_8_reg_1188_pp0_iter3_reg;
        or_ln281_8_reg_1188_pp0_iter5_reg <= or_ln281_8_reg_1188_pp0_iter4_reg;
        or_ln281_8_reg_1188_pp0_iter6_reg <= or_ln281_8_reg_1188_pp0_iter5_reg;
        or_ln281_8_reg_1188_pp0_iter7_reg <= or_ln281_8_reg_1188_pp0_iter6_reg;
        or_ln281_8_reg_1188_pp0_iter8_reg <= or_ln281_8_reg_1188_pp0_iter7_reg;
        or_ln281_8_reg_1188_pp0_iter9_reg <= or_ln281_8_reg_1188_pp0_iter8_reg;
        p_Result_18_reg_1141_pp0_iter2_reg <= p_Result_18_reg_1141_pp0_iter1_reg;
        p_Result_18_reg_1141_pp0_iter3_reg <= p_Result_18_reg_1141_pp0_iter2_reg;
        p_Result_18_reg_1141_pp0_iter4_reg <= p_Result_18_reg_1141_pp0_iter3_reg;
        p_Result_18_reg_1141_pp0_iter5_reg <= p_Result_18_reg_1141_pp0_iter4_reg;
        p_Result_18_reg_1141_pp0_iter6_reg <= p_Result_18_reg_1141_pp0_iter5_reg;
        p_Result_37_reg_1219[6 : 0] <= p_Result_37_fu_796_p7[6 : 0];
p_Result_37_reg_1219[25 : 11] <= p_Result_37_fu_796_p7[25 : 11];
p_Result_37_reg_1219[41 : 38] <= p_Result_37_fu_796_p7[41 : 38];
        p_Result_37_reg_1219_pp0_iter3_reg[6 : 0] <= p_Result_37_reg_1219[6 : 0];
p_Result_37_reg_1219_pp0_iter3_reg[25 : 11] <= p_Result_37_reg_1219[25 : 11];
p_Result_37_reg_1219_pp0_iter3_reg[41 : 38] <= p_Result_37_reg_1219[41 : 38];
        p_Result_37_reg_1219_pp0_iter4_reg[6 : 0] <= p_Result_37_reg_1219_pp0_iter3_reg[6 : 0];
p_Result_37_reg_1219_pp0_iter4_reg[25 : 11] <= p_Result_37_reg_1219_pp0_iter3_reg[25 : 11];
p_Result_37_reg_1219_pp0_iter4_reg[41 : 38] <= p_Result_37_reg_1219_pp0_iter3_reg[41 : 38];
        ret_V_reg_1250 <= ret_V_fu_897_p2;
        ret_V_reg_1250_pp0_iter6_reg <= ret_V_reg_1250;
        ret_V_reg_1250_pp0_iter7_reg <= ret_V_reg_1250_pp0_iter6_reg;
        tmp_V_1_reg_1152_pp0_iter2_reg <= tmp_V_1_reg_1152_pp0_iter1_reg;
        tmp_V_1_reg_1152_pp0_iter3_reg <= tmp_V_1_reg_1152_pp0_iter2_reg;
        tmp_V_1_reg_1152_pp0_iter4_reg <= tmp_V_1_reg_1152_pp0_iter3_reg;
        tmp_V_reg_1146_pp0_iter2_reg <= tmp_V_reg_1146_pp0_iter1_reg;
        tmp_V_reg_1146_pp0_iter3_reg <= tmp_V_reg_1146_pp0_iter2_reg;
        tmp_V_reg_1146_pp0_iter4_reg <= tmp_V_reg_1146_pp0_iter3_reg;
        tmp_reg_1135_pp0_iter10_reg <= tmp_reg_1135_pp0_iter9_reg;
        tmp_reg_1135_pp0_iter2_reg <= tmp_reg_1135_pp0_iter1_reg;
        tmp_reg_1135_pp0_iter3_reg <= tmp_reg_1135_pp0_iter2_reg;
        tmp_reg_1135_pp0_iter4_reg <= tmp_reg_1135_pp0_iter3_reg;
        tmp_reg_1135_pp0_iter5_reg <= tmp_reg_1135_pp0_iter4_reg;
        tmp_reg_1135_pp0_iter6_reg <= tmp_reg_1135_pp0_iter5_reg;
        tmp_reg_1135_pp0_iter7_reg <= tmp_reg_1135_pp0_iter6_reg;
        tmp_reg_1135_pp0_iter8_reg <= tmp_reg_1135_pp0_iter7_reg;
        tmp_reg_1135_pp0_iter9_reg <= tmp_reg_1135_pp0_iter8_reg;
        trunc_ln612_3_reg_1256 <= trunc_ln612_3_fu_903_p1;
        trunc_ln612_3_reg_1256_pp0_iter6_reg <= trunc_ln612_3_reg_1256;
        trunc_ln612_3_reg_1256_pp0_iter7_reg <= trunc_ln612_3_reg_1256_pp0_iter6_reg;
        y_lo_s_V_reg_1303 <= {{grp_fu_993_p2[99:52]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_x_msb_4_lsb_m_1_s_reg_1203 <= grp_fu_1122_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        f_x_msb_3_V_reg_1213 <= f_x_msb_3_table_V_q0;
        f_x_msb_4_l_V_reg_1198 <= f_x_msb_4_l_table_V_q0;
        or_ln281_17_reg_1193 <= or_ln281_17_fu_760_p2;
        or_ln281_17_reg_1193_pp0_iter1_reg <= or_ln281_17_reg_1193;
        or_ln281_8_reg_1188 <= or_ln281_8_fu_706_p2;
        or_ln281_8_reg_1188_pp0_iter1_reg <= or_ln281_8_reg_1188;
        p_Result_18_reg_1141 <= {{p_Result_18_fu_580_p1[23:17]}};
        p_Result_18_reg_1141_pp0_iter1_reg <= p_Result_18_reg_1141;
        tmp_V_1_reg_1152 <= {{tmp_V_1_fu_600_p1[8:4]}};
        tmp_V_1_reg_1152_pp0_iter1_reg <= tmp_V_1_reg_1152;
        tmp_V_2_reg_1158 <= {{tmp_V_2_fu_610_p1[3:1]}};
        tmp_V_3_reg_1130[3] <= tmp_V_3_fu_276_p3[3];
        tmp_V_reg_1146 <= {{tmp_V_fu_590_p1[16:9]}};
        tmp_V_reg_1146_pp0_iter1_reg <= tmp_V_reg_1146;
        tmp_reg_1135 <= tmp_fu_306_p1[32'd37];
        tmp_reg_1135_pp0_iter1_reg <= tmp_reg_1135;
        trunc_ln612_1_reg_1178 <= trunc_ln612_1_fu_631_p1;
        trunc_ln612_1_reg_1178_pp0_iter1_reg <= trunc_ln612_1_reg_1178;
        trunc_ln612_2_reg_1208 <= trunc_ln612_2_fu_792_p1;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to10 = 1'b1;
    end else begin
        ap_idle_pp0_0to10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to10 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        exp_x_msb_1_table_V_ce0 = 1'b1;
    end else begin
        exp_x_msb_1_table_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        f_x_lsb_table_V_ce0 = 1'b1;
    end else begin
        f_x_lsb_table_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        f_x_msb_2_table_V_ce0 = 1'b1;
    end else begin
        f_x_msb_2_table_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        f_x_msb_3_table_V_ce0 = 1'b1;
    end else begin
        f_x_msb_3_table_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        f_x_msb_4_h_table_V_ce0 = 1'b1;
    end else begin
        f_x_msb_4_h_table_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        f_x_msb_4_l_table_V_ce0 = 1'b1;
    end else begin
        f_x_msb_4_l_table_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln703_fu_864_p2 = (zext_ln703_1_fu_844_p1 + zext_ln703_2_fu_861_p1);

assign and_ln281_fu_652_p2 = (icmp_ln281_fu_640_p2 & icmp_ln281_1_fu_646_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = ((or_ln456_1_fu_1098_p2[0:0] === 1'b1) ? 38'd137438953471 : tmp_s_fu_1104_p4);

assign exp_x_msb_1_table_V_address0 = zext_ln544_4_fu_942_p1;

assign exp_x_msb_3_4_lsb_m_s_fu_874_p2 = (zext_ln728_fu_857_p1 + zext_ln703_3_fu_870_p1);

assign f_x_lsb_table_V_address0 = zext_ln544_1_fu_626_p1;

assign f_x_msb_2_table_V_address0 = zext_ln544_3_fu_840_p1;

assign f_x_msb_3_table_V_address0 = zext_ln544_2_fu_635_p1;

assign f_x_msb_4_h_table_V_address0 = zext_ln544_fu_620_p1;

assign f_x_msb_4_l_table_V_address0 = zext_ln544_fu_620_p1;

assign grp_fu_1122_p0 = grp_fu_1122_p00;

assign grp_fu_1122_p00 = tmp_V_2_reg_1158;

assign grp_fu_1122_p1 = grp_fu_1122_p10;

assign grp_fu_1122_p10 = tmp_V_3_reg_1130;

assign grp_fu_1122_p2 = {{{{1'd0}, {f_x_msb_4_h_table_V_q0}}}, {p_Result_22_fu_772_p4}};

assign grp_fu_824_p0 = grp_fu_824_p00;

assign grp_fu_824_p00 = p_Result_37_fu_796_p7;

assign grp_fu_824_p1 = grp_fu_824_p10;

assign grp_fu_824_p10 = p_Result_38_fu_808_p4;

assign grp_fu_920_p0 = grp_fu_920_p00;

assign grp_fu_920_p00 = exp_x_msb_3_4_lsb_m_s_reg_1244;

assign grp_fu_920_p1 = grp_fu_920_p10;

assign grp_fu_920_p10 = p_Result_40_fu_907_p3;

assign grp_fu_993_p0 = grp_fu_993_p00;

assign grp_fu_993_p00 = exp_x_msb_1_V_reg_1287;

assign grp_fu_993_p1 = grp_fu_993_p10;

assign grp_fu_993_p10 = exp_x_msb_2_3_4_lsb_s_reg_1282;

assign icmp_ln281_1_fu_646_p2 = ((p_Result_34_fu_298_p3 > 23'd7905299) ? 1'b1 : 1'b0);

assign icmp_ln281_fu_640_p2 = ((p_Result_33_fu_284_p4 == 5'd15) ? 1'b1 : 1'b0);

assign icmp_ln456_1_fu_1092_p2 = ((tmp_84_fu_1082_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln456_fu_1062_p2 = ((tmp_82_fu_1052_p4 != 2'd0) ? 1'b1 : 1'b0);

assign lhs_V_1_fu_947_p1 = f_x_msb_2_3_4_lsb_s_s_reg_1272;

assign lhs_V_fu_890_p1 = p_Result_39_fu_880_p4;

assign or_ln281_10_fu_718_p2 = (xor_ln278_14_fu_518_p2 | xor_ln278_13_fu_504_p2);

assign or_ln281_11_fu_724_p2 = (xor_ln278_12_fu_490_p2 | or_ln281_10_fu_718_p2);

assign or_ln281_12_fu_730_p2 = (or_ln281_9_fu_712_p2 | or_ln281_11_fu_724_p2);

assign or_ln281_13_fu_736_p2 = (xor_ln278_16_fu_546_p2 | xor_ln278_15_fu_532_p2);

assign or_ln281_14_fu_742_p2 = (xor_ln278_18_fu_574_p2 | and_ln281_fu_652_p2);

assign or_ln281_15_fu_748_p2 = (xor_ln278_17_fu_560_p2 | or_ln281_14_fu_742_p2);

assign or_ln281_16_fu_754_p2 = (or_ln281_15_fu_748_p2 | or_ln281_13_fu_736_p2);

assign or_ln281_17_fu_760_p2 = (or_ln281_16_fu_754_p2 | or_ln281_12_fu_730_p2);

assign or_ln281_18_fu_1040_p2 = (or_ln281_8_reg_1188_pp0_iter10_reg | or_ln281_17_reg_1193_pp0_iter10_reg);

assign or_ln281_1_fu_664_p2 = (xor_ln278_4_fu_378_p2 | xor_ln278_3_fu_364_p2);

assign or_ln281_2_fu_670_p2 = (xor_ln278_2_fu_350_p2 | or_ln281_1_fu_664_p2);

assign or_ln281_3_fu_676_p2 = (or_ln281_fu_658_p2 | or_ln281_2_fu_670_p2);

assign or_ln281_4_fu_682_p2 = (xor_ln278_6_fu_406_p2 | xor_ln278_5_fu_392_p2);

assign or_ln281_5_fu_688_p2 = (xor_ln278_9_fu_448_p2 | xor_ln278_8_fu_434_p2);

assign or_ln281_6_fu_694_p2 = (xor_ln278_7_fu_420_p2 | or_ln281_5_fu_688_p2);

assign or_ln281_7_fu_700_p2 = (or_ln281_6_fu_694_p2 | or_ln281_4_fu_682_p2);

assign or_ln281_8_fu_706_p2 = (or_ln281_7_fu_700_p2 | or_ln281_3_fu_676_p2);

assign or_ln281_9_fu_712_p2 = (xor_ln278_11_fu_476_p2 | xor_ln278_10_fu_462_p2);

assign or_ln281_fu_658_p2 = (xor_ln278_fu_322_p2 | xor_ln278_1_fu_336_p2);

assign or_ln456_1_fu_1098_p2 = (or_ln456_fu_1076_p2 | icmp_ln456_1_fu_1092_p2);

assign or_ln456_fu_1076_p2 = (tmp_83_fu_1068_p3 | icmp_ln456_fu_1062_p2);

assign p_Result_10_fu_468_p3 = x_l_V_fu_268_p1[32'd35];

assign p_Result_11_fu_482_p3 = x_l_V_fu_268_p1[32'd36];

assign p_Result_12_fu_496_p3 = x_l_V_fu_268_p1[32'd37];

assign p_Result_13_fu_510_p3 = x_l_V_fu_268_p1[32'd38];

assign p_Result_14_fu_524_p3 = x_l_V_fu_268_p1[32'd39];

assign p_Result_15_fu_538_p3 = x_l_V_fu_268_p1[32'd40];

assign p_Result_16_fu_552_p3 = x_l_V_fu_268_p1[32'd41];

assign p_Result_17_fu_566_p3 = x_l_V_fu_268_p1[32'd42];

assign p_Result_18_fu_580_p1 = x_V;

assign p_Result_1_fu_328_p3 = x_l_V_fu_268_p1[32'd25];

assign p_Result_22_fu_772_p4 = {{f_x_lsb_table_V_q0[7:5]}};

assign p_Result_2_fu_342_p3 = x_l_V_fu_268_p1[32'd26];

assign p_Result_33_fu_284_p1 = x_V;

assign p_Result_33_fu_284_p4 = {{p_Result_33_fu_284_p1[24:20]}};

assign p_Result_34_fu_298_p3 = {{trunc_ln612_fu_294_p1}, {3'd0}};

assign p_Result_35_fu_926_p3 = {{tmp_reg_1135_pp0_iter6_reg}, {p_Result_18_reg_1141_pp0_iter6_reg}};

assign p_Result_37_fu_796_p7 = {{{{{{trunc_ln612_1_reg_1178_pp0_iter1_reg}, {12'd0}}, {exp_x_msb_4_lsb_m_1_s_reg_1203}}, {trunc_ln612_2_reg_1208}}, {4'd0}}, {f_x_msb_4_l_V_reg_1198}};

assign p_Result_38_fu_808_p4 = {{{tmp_V_1_reg_1152_pp0_iter1_reg}, {7'd0}}, {f_x_msb_3_V_reg_1213}};

assign p_Result_39_fu_880_p4 = {{f_x_msb_2_table_V_q0[45:41]}};

assign p_Result_3_fu_356_p3 = x_l_V_fu_268_p1[32'd27];

assign p_Result_40_fu_907_p3 = {{ret_V_reg_1250}, {trunc_ln612_3_reg_1256}};

assign p_Result_4_fu_370_p3 = x_l_V_fu_268_p1[32'd28];

assign p_Result_5_fu_384_p3 = x_l_V_fu_268_p1[32'd29];

assign p_Result_6_fu_398_p3 = x_l_V_fu_268_p1[32'd30];

assign p_Result_7_fu_412_p3 = x_l_V_fu_268_p1[32'd31];

assign p_Result_8_fu_426_p3 = x_l_V_fu_268_p1[32'd32];

assign p_Result_9_fu_440_p3 = x_l_V_fu_268_p1[32'd33];

assign p_Result_s_92_fu_454_p3 = x_l_V_fu_268_p1[32'd34];

assign p_Result_s_fu_314_p3 = x_l_V_fu_268_p1[32'd24];

assign p_Val2_45_fu_1044_p3 = ((or_ln281_18_fu_1040_p2[0:0] === 1'b1) ? select_ln282_fu_1032_p3 : y_V_fu_1017_p4);

assign ret_V_8_fu_962_p2 = (lhs_V_1_fu_947_p1 + zext_ln728_1_fu_958_p1);

assign ret_V_9_fu_971_p2 = (zext_ln703_7_fu_968_p1 + ret_V_8_fu_962_p2);

assign ret_V_fu_897_p2 = (lhs_V_fu_890_p1 + rhs_V_1_fu_894_p1);

assign rhs_V_1_fu_894_p1 = tmp_V_reg_1146_pp0_iter4_reg;

assign rhs_V_2_fu_950_p4 = {{{ret_V_reg_1250_pp0_iter7_reg}, {trunc_ln612_3_reg_1256_pp0_iter7_reg}}, {6'd0}};

assign rhs_V_fu_847_p5 = {{{{tmp_V_1_reg_1152_pp0_iter4_reg}, {7'd0}}, {f_x_msb_3_V_reg_1213_pp0_iter4_reg}}, {3'd0}};

assign select_ln282_fu_1032_p3 = ((xor_ln282_fu_1027_p2[0:0] === 1'b1) ? 46'd70368744177663 : 46'd0);

assign tmp_82_fu_1052_p4 = {{p_Val2_45_fu_1044_p3[45:44]}};

assign tmp_83_fu_1068_p3 = p_Val2_45_fu_1044_p3[32'd43];

assign tmp_84_fu_1082_p4 = {{p_Val2_45_fu_1044_p3[42:40]}};

assign tmp_V_1_fu_600_p1 = x_V;

assign tmp_V_1_fu_600_p4 = {{tmp_V_1_fu_600_p1[8:4]}};

assign tmp_V_2_fu_610_p1 = x_V;

assign tmp_V_2_fu_610_p4 = {{tmp_V_2_fu_610_p1[3:1]}};

assign tmp_V_3_fu_276_p3 = {{trunc_ln703_fu_272_p1}, {3'd0}};

assign tmp_V_fu_590_p1 = x_V;

assign tmp_fu_306_p1 = x_V;

assign tmp_fu_306_p3 = tmp_fu_306_p1[32'd37];

assign tmp_s_fu_1104_p4 = {{p_Val2_45_fu_1044_p3[40:3]}};

assign trunc_ln612_1_fu_631_p0 = x_V;

assign trunc_ln612_1_fu_631_p1 = trunc_ln612_1_fu_631_p0[3:0];

assign trunc_ln612_2_fu_792_p1 = f_x_lsb_table_V_q0[4:0];

assign trunc_ln612_3_fu_903_p1 = f_x_msb_2_table_V_q0[40:0];

assign trunc_ln612_fu_294_p0 = x_V;

assign trunc_ln612_fu_294_p1 = trunc_ln612_fu_294_p0[19:0];

assign trunc_ln703_fu_272_p0 = x_V;

assign trunc_ln703_fu_272_p1 = trunc_ln703_fu_272_p0[0:0];

assign x_l_V_fu_268_p0 = x_V;

assign x_l_V_fu_268_p1 = x_l_V_fu_268_p0;

assign xor_ln278_10_fu_462_p2 = (tmp_fu_306_p3 ^ p_Result_s_92_fu_454_p3);

assign xor_ln278_11_fu_476_p2 = (tmp_fu_306_p3 ^ p_Result_10_fu_468_p3);

assign xor_ln278_12_fu_490_p2 = (tmp_fu_306_p3 ^ p_Result_11_fu_482_p3);

assign xor_ln278_13_fu_504_p2 = (tmp_fu_306_p3 ^ p_Result_12_fu_496_p3);

assign xor_ln278_14_fu_518_p2 = (tmp_fu_306_p3 ^ p_Result_13_fu_510_p3);

assign xor_ln278_15_fu_532_p2 = (tmp_fu_306_p3 ^ p_Result_14_fu_524_p3);

assign xor_ln278_16_fu_546_p2 = (tmp_fu_306_p3 ^ p_Result_15_fu_538_p3);

assign xor_ln278_17_fu_560_p2 = (tmp_fu_306_p3 ^ p_Result_16_fu_552_p3);

assign xor_ln278_18_fu_574_p2 = (tmp_fu_306_p3 ^ p_Result_17_fu_566_p3);

assign xor_ln278_1_fu_336_p2 = (tmp_fu_306_p3 ^ p_Result_1_fu_328_p3);

assign xor_ln278_2_fu_350_p2 = (tmp_fu_306_p3 ^ p_Result_2_fu_342_p3);

assign xor_ln278_3_fu_364_p2 = (tmp_fu_306_p3 ^ p_Result_3_fu_356_p3);

assign xor_ln278_4_fu_378_p2 = (tmp_fu_306_p3 ^ p_Result_4_fu_370_p3);

assign xor_ln278_5_fu_392_p2 = (tmp_fu_306_p3 ^ p_Result_5_fu_384_p3);

assign xor_ln278_6_fu_406_p2 = (tmp_fu_306_p3 ^ p_Result_6_fu_398_p3);

assign xor_ln278_7_fu_420_p2 = (tmp_fu_306_p3 ^ p_Result_7_fu_412_p3);

assign xor_ln278_8_fu_434_p2 = (tmp_fu_306_p3 ^ p_Result_8_fu_426_p3);

assign xor_ln278_9_fu_448_p2 = (tmp_fu_306_p3 ^ p_Result_9_fu_440_p3);

assign xor_ln278_fu_322_p2 = (tmp_fu_306_p3 ^ p_Result_s_fu_314_p3);

assign xor_ln282_fu_1027_p2 = (tmp_reg_1135_pp0_iter10_reg ^ 1'd1);

assign y_V_fu_1017_p4 = {{y_l_V_fu_1012_p2[49:4]}};

assign y_l_V_fu_1012_p2 = (zext_ln703_8_fu_1009_p1 + exp_x_msb_1_V_reg_1287_pp0_iter10_reg);

assign zext_ln544_1_fu_626_p1 = tmp_V_3_fu_276_p3;

assign zext_ln544_2_fu_635_p1 = tmp_V_1_fu_600_p4;

assign zext_ln544_3_fu_840_p1 = tmp_V_reg_1146_pp0_iter3_reg;

assign zext_ln544_4_fu_942_p1 = p_Result_35_fu_926_p3;

assign zext_ln544_fu_620_p1 = tmp_V_2_fu_610_p4;

assign zext_ln703_1_fu_844_p1 = f_x_msb_3_4_lsb_s_V_reg_1234;

assign zext_ln703_2_fu_861_p1 = p_Result_37_reg_1219_pp0_iter4_reg;

assign zext_ln703_3_fu_870_p1 = add_ln703_fu_864_p2;

assign zext_ln703_7_fu_968_p1 = exp_x_msb_3_4_lsb_m_s_reg_1244_pp0_iter7_reg;

assign zext_ln703_8_fu_1009_p1 = y_lo_s_V_reg_1303;

assign zext_ln728_1_fu_958_p1 = rhs_V_2_fu_950_p4;

assign zext_ln728_fu_857_p1 = rhs_V_fu_847_p5;

always @ (posedge ap_clk) begin
    tmp_V_3_reg_1130[2:0] <= 3'b000;
    p_Result_37_reg_1219[10:7] <= 4'b0000;
    p_Result_37_reg_1219[37:26] <= 12'b000000000000;
    p_Result_37_reg_1219_pp0_iter3_reg[10:7] <= 4'b0000;
    p_Result_37_reg_1219_pp0_iter3_reg[37:26] <= 12'b000000000000;
    p_Result_37_reg_1219_pp0_iter4_reg[10:7] <= 4'b0000;
    p_Result_37_reg_1219_pp0_iter4_reg[37:26] <= 12'b000000000000;
end

endmodule //exp_38_18_s
