// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _quantize_activation_HH_
#define _quantize_activation_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dut_udiv_40ns_40neOg.h"

namespace ap_rtl {

struct quantize_activation : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<11> > input_0_V_address0;
    sc_out< sc_logic > input_0_V_ce0;
    sc_in< sc_lv<40> > input_0_V_q0;
    sc_out< sc_lv<11> > output_states_0_V_address0;
    sc_out< sc_logic > output_states_0_V_ce0;
    sc_out< sc_logic > output_states_0_V_we0;
    sc_out< sc_lv<8> > output_states_0_V_d0;
    sc_out< sc_lv<40> > ap_return;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_lv<40> > ap_var_for_const0;


    // Module declarations
    quantize_activation(sc_module_name name);
    SC_HAS_PROCESS(quantize_activation);

    ~quantize_activation();

    sc_trace_file* mVcdFile;

    dut_udiv_40ns_40neOg<1,44,40,40,40>* dut_udiv_40ns_40neOg_U10;
    sc_signal< sc_lv<56> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<40> > grp_fu_207_p3;
    sc_signal< sc_lv<40> > p_Val2_10_reg_483;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln87_fu_215_p2;
    sc_signal< sc_lv<11> > add_ln87_fu_226_p2;
    sc_signal< sc_lv<11> > add_ln87_reg_496;
    sc_signal< sc_lv<40> > p_Val2_12_reg_501;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<40> > p_Val2_13_fu_243_p3;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<40> > grp_fu_232_p2;
    sc_signal< sc_lv<40> > udiv_ln1148_reg_512;
    sc_signal< sc_logic > ap_CS_fsm_state49;
    sc_signal< sc_lv<56> > zext_ln94_fu_250_p1;
    sc_signal< sc_lv<56> > zext_ln94_reg_516;
    sc_signal< sc_lv<3> > add_ln94_fu_260_p2;
    sc_signal< sc_lv<3> > add_ln94_reg_524;
    sc_signal< sc_logic > ap_CS_fsm_state50;
    sc_signal< sc_lv<9> > shl_ln_fu_266_p3;
    sc_signal< sc_lv<9> > shl_ln_reg_529;
    sc_signal< sc_lv<1> > icmp_ln94_fu_254_p2;
    sc_signal< sc_lv<7> > add_ln95_fu_284_p2;
    sc_signal< sc_lv<7> > add_ln95_reg_537;
    sc_signal< sc_logic > ap_CS_fsm_state51;
    sc_signal< sc_lv<11> > shl_ln1_fu_295_p3;
    sc_signal< sc_lv<11> > shl_ln1_reg_542;
    sc_signal< sc_lv<1> > icmp_ln95_fu_278_p2;
    sc_signal< sc_lv<12> > zext_ln97_1_fu_303_p1;
    sc_signal< sc_lv<12> > zext_ln97_1_reg_547;
    sc_signal< sc_lv<3> > add_ln97_fu_317_p2;
    sc_signal< sc_lv<3> > add_ln97_reg_555;
    sc_signal< sc_logic > ap_CS_fsm_state52;
    sc_signal< sc_lv<1> > icmp_ln97_fu_311_p2;
    sc_signal< sc_lv<12> > add_ln180_fu_337_p2;
    sc_signal< sc_lv<12> > add_ln180_reg_565;
    sc_signal< sc_lv<40> > input_0_V_load_reg_570;
    sc_signal< sc_logic > ap_CS_fsm_state53;
    sc_signal< sc_lv<40> > p_Val2_9_reg_575;
    sc_signal< sc_logic > ap_CS_fsm_state54;
    sc_signal< sc_lv<24> > select_ln850_fu_420_p3;
    sc_signal< sc_lv<24> > select_ln850_reg_581;
    sc_signal< sc_logic > ap_CS_fsm_state55;
    sc_signal< sc_lv<17> > tmp_76_reg_587;
    sc_signal< sc_lv<40> > max_val_V_0_0_reg_139;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<11> > j_0_0_reg_149;
    sc_signal< sc_lv<3> > jo_0_0_reg_160;
    sc_signal< sc_lv<7> > ji_0_0_reg_171;
    sc_signal< sc_lv<3> > k_0_0_reg_182;
    sc_signal< sc_logic > ap_CS_fsm_state56;
    sc_signal< sc_lv<64> > zext_ln88_fu_221_p1;
    sc_signal< sc_lv<64> > zext_ln98_fu_328_p1;
    sc_signal< sc_lv<64> > zext_ln180_1_fu_474_p1;
    sc_signal< sc_lv<1> > grp_fu_193_p3;
    sc_signal< sc_lv<40> > grp_fu_201_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_fu_238_p2;
    sc_signal< sc_lv<9> > zext_ln95_fu_274_p1;
    sc_signal< sc_lv<9> > add_ln96_fu_290_p2;
    sc_signal< sc_lv<11> > zext_ln97_fu_307_p1;
    sc_signal< sc_lv<11> > add_ln98_fu_323_p2;
    sc_signal< sc_lv<12> > zext_ln180_fu_333_p1;
    sc_signal< sc_lv<40> > mul_ln1118_fu_345_p0;
    sc_signal< sc_lv<40> > mul_ln1118_fu_345_p1;
    sc_signal< sc_lv<56> > mul_ln1118_fu_345_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_26_fu_360_p2;
    sc_signal< sc_lv<40> > select_ln67_fu_365_p3;
    sc_signal< sc_lv<40> > add_ln67_fu_373_p2;
    sc_signal< sc_lv<16> > trunc_ln851_fu_396_p1;
    sc_signal< sc_lv<24> > p_Result_s_fu_378_p4;
    sc_signal< sc_lv<1> > icmp_ln851_fu_400_p2;
    sc_signal< sc_lv<24> > add_ln700_fu_406_p2;
    sc_signal< sc_lv<1> > tmp_75_fu_388_p3;
    sc_signal< sc_lv<24> > select_ln851_fu_412_p3;
    sc_signal< sc_lv<1> > icmp_ln887_fu_438_p2;
    sc_signal< sc_lv<1> > icmp_ln895_fu_443_p2;
    sc_signal< sc_lv<1> > or_ln887_fu_459_p2;
    sc_signal< sc_lv<8> > select_ln887_fu_451_p3;
    sc_signal< sc_lv<8> > trunc_ln99_fu_448_p1;
    sc_signal< sc_logic > grp_fu_232_ap_start;
    sc_signal< sc_logic > grp_fu_232_ap_done;
    sc_signal< sc_lv<56> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<56> ap_ST_fsm_state1;
    static const sc_lv<56> ap_ST_fsm_state2;
    static const sc_lv<56> ap_ST_fsm_state3;
    static const sc_lv<56> ap_ST_fsm_state4;
    static const sc_lv<56> ap_ST_fsm_state5;
    static const sc_lv<56> ap_ST_fsm_state6;
    static const sc_lv<56> ap_ST_fsm_state7;
    static const sc_lv<56> ap_ST_fsm_state8;
    static const sc_lv<56> ap_ST_fsm_state9;
    static const sc_lv<56> ap_ST_fsm_state10;
    static const sc_lv<56> ap_ST_fsm_state11;
    static const sc_lv<56> ap_ST_fsm_state12;
    static const sc_lv<56> ap_ST_fsm_state13;
    static const sc_lv<56> ap_ST_fsm_state14;
    static const sc_lv<56> ap_ST_fsm_state15;
    static const sc_lv<56> ap_ST_fsm_state16;
    static const sc_lv<56> ap_ST_fsm_state17;
    static const sc_lv<56> ap_ST_fsm_state18;
    static const sc_lv<56> ap_ST_fsm_state19;
    static const sc_lv<56> ap_ST_fsm_state20;
    static const sc_lv<56> ap_ST_fsm_state21;
    static const sc_lv<56> ap_ST_fsm_state22;
    static const sc_lv<56> ap_ST_fsm_state23;
    static const sc_lv<56> ap_ST_fsm_state24;
    static const sc_lv<56> ap_ST_fsm_state25;
    static const sc_lv<56> ap_ST_fsm_state26;
    static const sc_lv<56> ap_ST_fsm_state27;
    static const sc_lv<56> ap_ST_fsm_state28;
    static const sc_lv<56> ap_ST_fsm_state29;
    static const sc_lv<56> ap_ST_fsm_state30;
    static const sc_lv<56> ap_ST_fsm_state31;
    static const sc_lv<56> ap_ST_fsm_state32;
    static const sc_lv<56> ap_ST_fsm_state33;
    static const sc_lv<56> ap_ST_fsm_state34;
    static const sc_lv<56> ap_ST_fsm_state35;
    static const sc_lv<56> ap_ST_fsm_state36;
    static const sc_lv<56> ap_ST_fsm_state37;
    static const sc_lv<56> ap_ST_fsm_state38;
    static const sc_lv<56> ap_ST_fsm_state39;
    static const sc_lv<56> ap_ST_fsm_state40;
    static const sc_lv<56> ap_ST_fsm_state41;
    static const sc_lv<56> ap_ST_fsm_state42;
    static const sc_lv<56> ap_ST_fsm_state43;
    static const sc_lv<56> ap_ST_fsm_state44;
    static const sc_lv<56> ap_ST_fsm_state45;
    static const sc_lv<56> ap_ST_fsm_state46;
    static const sc_lv<56> ap_ST_fsm_state47;
    static const sc_lv<56> ap_ST_fsm_state48;
    static const sc_lv<56> ap_ST_fsm_state49;
    static const sc_lv<56> ap_ST_fsm_state50;
    static const sc_lv<56> ap_ST_fsm_state51;
    static const sc_lv<56> ap_ST_fsm_state52;
    static const sc_lv<56> ap_ST_fsm_state53;
    static const sc_lv<56> ap_ST_fsm_state54;
    static const sc_lv<56> ap_ST_fsm_state55;
    static const sc_lv<56> ap_ST_fsm_state56;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_30;
    static const sc_lv<32> ap_const_lv32_31;
    static const sc_lv<32> ap_const_lv32_32;
    static const sc_lv<32> ap_const_lv32_33;
    static const sc_lv<32> ap_const_lv32_34;
    static const sc_lv<32> ap_const_lv32_35;
    static const sc_lv<32> ap_const_lv32_36;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_37;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<32> ap_const_lv32_27;
    static const sc_lv<40> ap_const_lv40_0;
    static const sc_lv<11> ap_const_lv11_600;
    static const sc_lv<40> ap_const_lv40_7F00000000;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<7> ap_const_lv7_40;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<40> ap_const_lv40_8000;
    static const sc_lv<40> ap_const_lv40_FFFFFF8000;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<24> ap_const_lv24_1;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<24> ap_const_lv24_FFFF80;
    static const sc_lv<17> ap_const_lv17_0;
    static const sc_lv<8> ap_const_lv8_80;
    static const sc_lv<8> ap_const_lv8_7F;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln180_fu_337_p2();
    void thread_add_ln67_fu_373_p2();
    void thread_add_ln700_fu_406_p2();
    void thread_add_ln87_fu_226_p2();
    void thread_add_ln94_fu_260_p2();
    void thread_add_ln95_fu_284_p2();
    void thread_add_ln96_fu_290_p2();
    void thread_add_ln97_fu_317_p2();
    void thread_add_ln98_fu_323_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state49();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state50();
    void thread_ap_CS_fsm_state51();
    void thread_ap_CS_fsm_state52();
    void thread_ap_CS_fsm_state53();
    void thread_ap_CS_fsm_state54();
    void thread_ap_CS_fsm_state55();
    void thread_ap_CS_fsm_state56();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_grp_fu_193_p3();
    void thread_grp_fu_201_p2();
    void thread_grp_fu_207_p3();
    void thread_grp_fu_232_ap_start();
    void thread_icmp_ln1494_26_fu_360_p2();
    void thread_icmp_ln1494_fu_238_p2();
    void thread_icmp_ln851_fu_400_p2();
    void thread_icmp_ln87_fu_215_p2();
    void thread_icmp_ln887_fu_438_p2();
    void thread_icmp_ln895_fu_443_p2();
    void thread_icmp_ln94_fu_254_p2();
    void thread_icmp_ln95_fu_278_p2();
    void thread_icmp_ln97_fu_311_p2();
    void thread_input_0_V_address0();
    void thread_input_0_V_ce0();
    void thread_mul_ln1118_fu_345_p0();
    void thread_mul_ln1118_fu_345_p1();
    void thread_mul_ln1118_fu_345_p2();
    void thread_or_ln887_fu_459_p2();
    void thread_output_states_0_V_address0();
    void thread_output_states_0_V_ce0();
    void thread_output_states_0_V_d0();
    void thread_output_states_0_V_we0();
    void thread_p_Result_s_fu_378_p4();
    void thread_p_Val2_13_fu_243_p3();
    void thread_select_ln67_fu_365_p3();
    void thread_select_ln850_fu_420_p3();
    void thread_select_ln851_fu_412_p3();
    void thread_select_ln887_fu_451_p3();
    void thread_shl_ln1_fu_295_p3();
    void thread_shl_ln_fu_266_p3();
    void thread_tmp_75_fu_388_p3();
    void thread_trunc_ln851_fu_396_p1();
    void thread_trunc_ln99_fu_448_p1();
    void thread_zext_ln180_1_fu_474_p1();
    void thread_zext_ln180_fu_333_p1();
    void thread_zext_ln88_fu_221_p1();
    void thread_zext_ln94_fu_250_p1();
    void thread_zext_ln95_fu_274_p1();
    void thread_zext_ln97_1_fu_303_p1();
    void thread_zext_ln97_fu_307_p1();
    void thread_zext_ln98_fu_328_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
