// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _linear_forward_no_mu_HH_
#define _linear_forward_no_mu_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dut_sdiv_78ns_63seOg.h"

namespace ap_rtl {

struct linear_forward_no_mu : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<11> > input_0_V_address0;
    sc_out< sc_logic > input_0_V_ce0;
    sc_in< sc_lv<8> > input_0_V_q0;
    sc_out< sc_lv<11> > output_0_V_address0;
    sc_out< sc_logic > output_0_V_ce0;
    sc_out< sc_logic > output_0_V_we0;
    sc_out< sc_lv<38> > output_0_V_d0;
    sc_in< sc_lv<38> > output_0_V_q0;
    sc_in< sc_lv<38> > scales_0_V_read;
    sc_out< sc_lv<20> > packed_weights_address0;
    sc_out< sc_logic > packed_weights_ce0;
    sc_in< sc_lv<8> > packed_weights_q0;
    sc_in< sc_lv<26> > w_scale_V;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    linear_forward_no_mu(sc_module_name name);
    SC_HAS_PROCESS(linear_forward_no_mu);

    ~linear_forward_no_mu();

    sc_trace_file* mVcdFile;

    dut_sdiv_78ns_63seOg<1,82,78,63,38>* dut_sdiv_78ns_63seOg_U13;
    sc_signal< sc_lv<91> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<78> > sext_ln1148_fu_200_p1;
    sc_signal< sc_lv<78> > sext_ln1148_reg_440;
    sc_signal< sc_lv<11> > add_ln120_fu_210_p2;
    sc_signal< sc_lv<11> > add_ln120_reg_448;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<21> > zext_ln1265_fu_221_p1;
    sc_signal< sc_lv<21> > zext_ln1265_reg_453;
    sc_signal< sc_lv<1> > icmp_ln120_fu_204_p2;
    sc_signal< sc_lv<11> > output_0_V_addr_reg_458;
    sc_signal< sc_lv<3> > add_ln121_fu_231_p2;
    sc_signal< sc_lv<3> > add_ln121_reg_466;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<9> > shl_ln2_fu_237_p3;
    sc_signal< sc_lv<9> > shl_ln2_reg_471;
    sc_signal< sc_lv<1> > icmp_ln121_fu_225_p2;
    sc_signal< sc_lv<7> > add_ln122_fu_255_p2;
    sc_signal< sc_lv<7> > add_ln122_reg_479;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<9> > add_ln123_fu_261_p2;
    sc_signal< sc_lv<9> > add_ln123_reg_484;
    sc_signal< sc_lv<1> > icmp_ln122_fu_249_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<12> > zext_ln124_1_fu_311_p1;
    sc_signal< sc_lv<12> > zext_ln124_1_reg_496;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<8> > packed_weights_load_reg_501;
    sc_signal< sc_lv<3> > add_ln125_fu_321_p2;
    sc_signal< sc_lv<3> > add_ln125_reg_509;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<2> > trunc_ln126_fu_342_p1;
    sc_signal< sc_lv<2> > trunc_ln126_reg_514;
    sc_signal< sc_lv<1> > icmp_ln125_fu_315_p2;
    sc_signal< sc_lv<38> > add_ln703_fu_416_p2;
    sc_signal< sc_lv<38> > add_ln703_reg_525;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<11> > j_0_0_reg_142;
    sc_signal< sc_logic > ap_CS_fsm_state91;
    sc_signal< sc_lv<3> > ko_0_0_reg_153;
    sc_signal< sc_lv<7> > ki_0_0_reg_164;
    sc_signal< sc_lv<3> > l_0_0_reg_175;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<64> > zext_ln124_fu_216_p1;
    sc_signal< sc_lv<64> > sext_ln124_fu_299_p1;
    sc_signal< sc_lv<64> > zext_ln700_1_fu_355_p1;
    sc_signal< sc_lv<38> > trunc_ln703_fu_435_p1;
    sc_signal< sc_lv<26> > mul_ln1118_fu_194_p0;
    sc_signal< sc_lv<38> > mul_ln1118_fu_194_p1;
    sc_signal< sc_lv<63> > mul_ln1118_fu_194_p2;
    sc_signal< sc_lv<9> > zext_ln122_fu_245_p1;
    sc_signal< sc_lv<20> > tmp_52_fu_266_p3;
    sc_signal< sc_lv<18> > tmp_53_fu_277_p3;
    sc_signal< sc_lv<21> > zext_ln124_2_fu_273_p1;
    sc_signal< sc_lv<21> > zext_ln124_3_fu_284_p1;
    sc_signal< sc_lv<21> > sub_ln124_fu_288_p2;
    sc_signal< sc_lv<21> > add_ln124_fu_294_p2;
    sc_signal< sc_lv<11> > tmp_51_fu_304_p3;
    sc_signal< sc_lv<3> > shl_ln126_fu_327_p2;
    sc_signal< sc_lv<8> > zext_ln126_fu_333_p1;
    sc_signal< sc_lv<8> > lshr_ln126_fu_337_p2;
    sc_signal< sc_lv<12> > zext_ln700_fu_346_p1;
    sc_signal< sc_lv<12> > add_ln700_fu_350_p2;
    sc_signal< sc_lv<1> > icmp_ln128_fu_360_p2;
    sc_signal< sc_lv<1> > icmp_ln129_fu_365_p2;
    sc_signal< sc_lv<1> > xor_ln128_fu_376_p2;
    sc_signal< sc_lv<1> > and_ln129_fu_382_p2;
    sc_signal< sc_lv<8> > sub_ln701_fu_370_p2;
    sc_signal< sc_lv<8> > select_ln128_fu_388_p3;
    sc_signal< sc_lv<8> > select_ln129_fu_396_p3;
    sc_signal< sc_lv<28> > shl_ln4_fu_404_p3;
    sc_signal< sc_lv<38> > sext_ln703_fu_412_p1;
    sc_signal< sc_lv<78> > grp_fu_430_p0;
    sc_signal< sc_lv<63> > grp_fu_430_p1;
    sc_signal< sc_lv<38> > grp_fu_430_p2;
    sc_signal< sc_logic > grp_fu_430_ap_start;
    sc_signal< sc_logic > grp_fu_430_ap_done;
    sc_signal< sc_lv<91> > ap_NS_fsm;
    sc_signal< sc_lv<63> > mul_ln1118_fu_194_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<91> ap_ST_fsm_state1;
    static const sc_lv<91> ap_ST_fsm_state2;
    static const sc_lv<91> ap_ST_fsm_state3;
    static const sc_lv<91> ap_ST_fsm_state4;
    static const sc_lv<91> ap_ST_fsm_state5;
    static const sc_lv<91> ap_ST_fsm_state6;
    static const sc_lv<91> ap_ST_fsm_state7;
    static const sc_lv<91> ap_ST_fsm_state8;
    static const sc_lv<91> ap_ST_fsm_state9;
    static const sc_lv<91> ap_ST_fsm_state10;
    static const sc_lv<91> ap_ST_fsm_state11;
    static const sc_lv<91> ap_ST_fsm_state12;
    static const sc_lv<91> ap_ST_fsm_state13;
    static const sc_lv<91> ap_ST_fsm_state14;
    static const sc_lv<91> ap_ST_fsm_state15;
    static const sc_lv<91> ap_ST_fsm_state16;
    static const sc_lv<91> ap_ST_fsm_state17;
    static const sc_lv<91> ap_ST_fsm_state18;
    static const sc_lv<91> ap_ST_fsm_state19;
    static const sc_lv<91> ap_ST_fsm_state20;
    static const sc_lv<91> ap_ST_fsm_state21;
    static const sc_lv<91> ap_ST_fsm_state22;
    static const sc_lv<91> ap_ST_fsm_state23;
    static const sc_lv<91> ap_ST_fsm_state24;
    static const sc_lv<91> ap_ST_fsm_state25;
    static const sc_lv<91> ap_ST_fsm_state26;
    static const sc_lv<91> ap_ST_fsm_state27;
    static const sc_lv<91> ap_ST_fsm_state28;
    static const sc_lv<91> ap_ST_fsm_state29;
    static const sc_lv<91> ap_ST_fsm_state30;
    static const sc_lv<91> ap_ST_fsm_state31;
    static const sc_lv<91> ap_ST_fsm_state32;
    static const sc_lv<91> ap_ST_fsm_state33;
    static const sc_lv<91> ap_ST_fsm_state34;
    static const sc_lv<91> ap_ST_fsm_state35;
    static const sc_lv<91> ap_ST_fsm_state36;
    static const sc_lv<91> ap_ST_fsm_state37;
    static const sc_lv<91> ap_ST_fsm_state38;
    static const sc_lv<91> ap_ST_fsm_state39;
    static const sc_lv<91> ap_ST_fsm_state40;
    static const sc_lv<91> ap_ST_fsm_state41;
    static const sc_lv<91> ap_ST_fsm_state42;
    static const sc_lv<91> ap_ST_fsm_state43;
    static const sc_lv<91> ap_ST_fsm_state44;
    static const sc_lv<91> ap_ST_fsm_state45;
    static const sc_lv<91> ap_ST_fsm_state46;
    static const sc_lv<91> ap_ST_fsm_state47;
    static const sc_lv<91> ap_ST_fsm_state48;
    static const sc_lv<91> ap_ST_fsm_state49;
    static const sc_lv<91> ap_ST_fsm_state50;
    static const sc_lv<91> ap_ST_fsm_state51;
    static const sc_lv<91> ap_ST_fsm_state52;
    static const sc_lv<91> ap_ST_fsm_state53;
    static const sc_lv<91> ap_ST_fsm_state54;
    static const sc_lv<91> ap_ST_fsm_state55;
    static const sc_lv<91> ap_ST_fsm_state56;
    static const sc_lv<91> ap_ST_fsm_state57;
    static const sc_lv<91> ap_ST_fsm_state58;
    static const sc_lv<91> ap_ST_fsm_state59;
    static const sc_lv<91> ap_ST_fsm_state60;
    static const sc_lv<91> ap_ST_fsm_state61;
    static const sc_lv<91> ap_ST_fsm_state62;
    static const sc_lv<91> ap_ST_fsm_state63;
    static const sc_lv<91> ap_ST_fsm_state64;
    static const sc_lv<91> ap_ST_fsm_state65;
    static const sc_lv<91> ap_ST_fsm_state66;
    static const sc_lv<91> ap_ST_fsm_state67;
    static const sc_lv<91> ap_ST_fsm_state68;
    static const sc_lv<91> ap_ST_fsm_state69;
    static const sc_lv<91> ap_ST_fsm_state70;
    static const sc_lv<91> ap_ST_fsm_state71;
    static const sc_lv<91> ap_ST_fsm_state72;
    static const sc_lv<91> ap_ST_fsm_state73;
    static const sc_lv<91> ap_ST_fsm_state74;
    static const sc_lv<91> ap_ST_fsm_state75;
    static const sc_lv<91> ap_ST_fsm_state76;
    static const sc_lv<91> ap_ST_fsm_state77;
    static const sc_lv<91> ap_ST_fsm_state78;
    static const sc_lv<91> ap_ST_fsm_state79;
    static const sc_lv<91> ap_ST_fsm_state80;
    static const sc_lv<91> ap_ST_fsm_state81;
    static const sc_lv<91> ap_ST_fsm_state82;
    static const sc_lv<91> ap_ST_fsm_state83;
    static const sc_lv<91> ap_ST_fsm_state84;
    static const sc_lv<91> ap_ST_fsm_state85;
    static const sc_lv<91> ap_ST_fsm_state86;
    static const sc_lv<91> ap_ST_fsm_state87;
    static const sc_lv<91> ap_ST_fsm_state88;
    static const sc_lv<91> ap_ST_fsm_state89;
    static const sc_lv<91> ap_ST_fsm_state90;
    static const sc_lv<91> ap_ST_fsm_state91;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<32> ap_const_lv32_5A;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<11> ap_const_lv11_600;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<7> ap_const_lv7_40;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<20> ap_const_lv20_0;
    static const sc_lv<40> ap_const_lv40_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln120_fu_210_p2();
    void thread_add_ln121_fu_231_p2();
    void thread_add_ln122_fu_255_p2();
    void thread_add_ln123_fu_261_p2();
    void thread_add_ln124_fu_294_p2();
    void thread_add_ln125_fu_321_p2();
    void thread_add_ln700_fu_350_p2();
    void thread_add_ln703_fu_416_p2();
    void thread_and_ln129_fu_382_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_CS_fsm_state91();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_grp_fu_430_ap_start();
    void thread_grp_fu_430_p0();
    void thread_grp_fu_430_p1();
    void thread_icmp_ln120_fu_204_p2();
    void thread_icmp_ln121_fu_225_p2();
    void thread_icmp_ln122_fu_249_p2();
    void thread_icmp_ln125_fu_315_p2();
    void thread_icmp_ln128_fu_360_p2();
    void thread_icmp_ln129_fu_365_p2();
    void thread_input_0_V_address0();
    void thread_input_0_V_ce0();
    void thread_lshr_ln126_fu_337_p2();
    void thread_mul_ln1118_fu_194_p0();
    void thread_mul_ln1118_fu_194_p00();
    void thread_mul_ln1118_fu_194_p1();
    void thread_mul_ln1118_fu_194_p2();
    void thread_output_0_V_address0();
    void thread_output_0_V_ce0();
    void thread_output_0_V_d0();
    void thread_output_0_V_we0();
    void thread_packed_weights_address0();
    void thread_packed_weights_ce0();
    void thread_select_ln128_fu_388_p3();
    void thread_select_ln129_fu_396_p3();
    void thread_sext_ln1148_fu_200_p1();
    void thread_sext_ln124_fu_299_p1();
    void thread_sext_ln703_fu_412_p1();
    void thread_shl_ln126_fu_327_p2();
    void thread_shl_ln2_fu_237_p3();
    void thread_shl_ln4_fu_404_p3();
    void thread_sub_ln124_fu_288_p2();
    void thread_sub_ln701_fu_370_p2();
    void thread_tmp_51_fu_304_p3();
    void thread_tmp_52_fu_266_p3();
    void thread_tmp_53_fu_277_p3();
    void thread_trunc_ln126_fu_342_p1();
    void thread_trunc_ln703_fu_435_p1();
    void thread_xor_ln128_fu_376_p2();
    void thread_zext_ln122_fu_245_p1();
    void thread_zext_ln124_1_fu_311_p1();
    void thread_zext_ln124_2_fu_273_p1();
    void thread_zext_ln124_3_fu_284_p1();
    void thread_zext_ln124_fu_216_p1();
    void thread_zext_ln1265_fu_221_p1();
    void thread_zext_ln126_fu_333_p1();
    void thread_zext_ln700_1_fu_355_p1();
    void thread_zext_ln700_fu_346_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
