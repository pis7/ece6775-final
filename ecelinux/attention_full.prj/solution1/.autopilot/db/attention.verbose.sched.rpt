

================================================================
== Vivado HLS Report for 'attention'
================================================================
* Date:           Tue Dec  3 19:15:06 2024

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        attention_full.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.750 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+--------+--------+---------+
    |  Latency (cycles) |  Latency (absolute) |     Interval    | Pipeline|
    |   min   |   max   |    min   |    max   |   min  |   max  |   Type  |
    +---------+---------+----------+----------+--------+--------+---------+
    |   316534|   316534| 3.165 ms | 3.165 ms |  316534|  316534|   none  |
    +---------+---------+----------+----------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- SF_LOOP_1        |      704|      704|        44|          -|          -|    16|    no    |
        | + SF_LOOP_3       |       42|       42|         7|          -|          -|     6|    no    |
        |- ATTN_2D_LOOP_2   |     3104|     3104|       194|          -|          -|    16|    no    |
        | + ATTN_2D_LOOP_3  |      192|      192|         2|          -|          -|    96|    no    |
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 37
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 27 20 
20 --> 21 19 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 20 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 33 31 
31 --> 32 30 
32 --> 31 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.86>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%quantized_hidden_sta = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 38 'alloca' 'quantized_hidden_sta' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_1 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 39 'alloca' 'quantized_hidden_sta_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_2 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 40 'alloca' 'quantized_hidden_sta_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_3 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 41 'alloca' 'quantized_hidden_sta_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_4 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 42 'alloca' 'quantized_hidden_sta_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_5 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 43 'alloca' 'quantized_hidden_sta_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_6 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 44 'alloca' 'quantized_hidden_sta_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_7 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 45 'alloca' 'quantized_hidden_sta_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_8 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 46 'alloca' 'quantized_hidden_sta_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_9 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 47 'alloca' 'quantized_hidden_sta_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_10 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 48 'alloca' 'quantized_hidden_sta_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_11 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 49 'alloca' 'quantized_hidden_sta_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_12 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 50 'alloca' 'quantized_hidden_sta_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_13 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 51 'alloca' 'quantized_hidden_sta_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_14 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 52 'alloca' 'quantized_hidden_sta_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_15 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 53 'alloca' 'quantized_hidden_sta_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_16 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 54 'alloca' 'quantized_hidden_sta_16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_17 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 55 'alloca' 'quantized_hidden_sta_17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_18 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 56 'alloca' 'quantized_hidden_sta_18' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_19 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 57 'alloca' 'quantized_hidden_sta_19' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_20 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 58 'alloca' 'quantized_hidden_sta_20' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_21 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 59 'alloca' 'quantized_hidden_sta_21' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_22 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 60 'alloca' 'quantized_hidden_sta_22' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_23 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 61 'alloca' 'quantized_hidden_sta_23' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_24 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 62 'alloca' 'quantized_hidden_sta_24' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_25 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 63 'alloca' 'quantized_hidden_sta_25' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_26 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 64 'alloca' 'quantized_hidden_sta_26' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_27 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 65 'alloca' 'quantized_hidden_sta_27' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_28 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 66 'alloca' 'quantized_hidden_sta_28' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_29 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 67 'alloca' 'quantized_hidden_sta_29' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_30 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 68 'alloca' 'quantized_hidden_sta_30' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_31 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 69 'alloca' 'quantized_hidden_sta_31' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_32 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 70 'alloca' 'quantized_hidden_sta_32' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 71 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_33 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 71 'alloca' 'quantized_hidden_sta_33' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_34 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 72 'alloca' 'quantized_hidden_sta_34' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_35 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 73 'alloca' 'quantized_hidden_sta_35' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 74 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_36 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 74 'alloca' 'quantized_hidden_sta_36' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 75 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_37 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 75 'alloca' 'quantized_hidden_sta_37' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 76 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_38 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 76 'alloca' 'quantized_hidden_sta_38' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 77 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_39 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 77 'alloca' 'quantized_hidden_sta_39' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 78 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_40 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 78 'alloca' 'quantized_hidden_sta_40' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 79 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_41 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 79 'alloca' 'quantized_hidden_sta_41' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 80 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_42 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 80 'alloca' 'quantized_hidden_sta_42' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 81 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_43 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 81 'alloca' 'quantized_hidden_sta_43' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 82 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_44 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 82 'alloca' 'quantized_hidden_sta_44' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 83 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_45 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 83 'alloca' 'quantized_hidden_sta_45' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 84 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_46 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 84 'alloca' 'quantized_hidden_sta_46' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 85 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_47 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 85 'alloca' 'quantized_hidden_sta_47' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 86 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_48 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 86 'alloca' 'quantized_hidden_sta_48' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 87 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_49 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 87 'alloca' 'quantized_hidden_sta_49' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 88 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_50 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 88 'alloca' 'quantized_hidden_sta_50' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 89 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_51 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 89 'alloca' 'quantized_hidden_sta_51' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 90 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_52 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 90 'alloca' 'quantized_hidden_sta_52' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 91 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_53 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 91 'alloca' 'quantized_hidden_sta_53' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 92 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_54 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 92 'alloca' 'quantized_hidden_sta_54' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 93 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_55 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 93 'alloca' 'quantized_hidden_sta_55' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 94 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_56 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 94 'alloca' 'quantized_hidden_sta_56' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 95 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_57 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 95 'alloca' 'quantized_hidden_sta_57' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 96 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_58 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 96 'alloca' 'quantized_hidden_sta_58' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 97 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_59 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 97 'alloca' 'quantized_hidden_sta_59' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 98 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_60 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 98 'alloca' 'quantized_hidden_sta_60' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 99 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_61 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 99 'alloca' 'quantized_hidden_sta_61' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 100 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_62 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 100 'alloca' 'quantized_hidden_sta_62' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 101 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_63 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 101 'alloca' 'quantized_hidden_sta_63' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 102 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_64 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 102 'alloca' 'quantized_hidden_sta_64' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 103 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_65 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 103 'alloca' 'quantized_hidden_sta_65' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 104 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_66 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 104 'alloca' 'quantized_hidden_sta_66' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 105 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_67 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 105 'alloca' 'quantized_hidden_sta_67' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 106 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_68 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 106 'alloca' 'quantized_hidden_sta_68' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 107 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_69 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 107 'alloca' 'quantized_hidden_sta_69' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 108 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_70 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 108 'alloca' 'quantized_hidden_sta_70' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 109 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_71 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 109 'alloca' 'quantized_hidden_sta_71' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 110 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_72 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 110 'alloca' 'quantized_hidden_sta_72' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 111 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_73 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 111 'alloca' 'quantized_hidden_sta_73' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 112 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_74 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 112 'alloca' 'quantized_hidden_sta_74' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 113 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_75 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 113 'alloca' 'quantized_hidden_sta_75' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 114 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_76 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 114 'alloca' 'quantized_hidden_sta_76' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 115 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_77 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 115 'alloca' 'quantized_hidden_sta_77' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 116 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_78 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 116 'alloca' 'quantized_hidden_sta_78' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 117 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_79 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 117 'alloca' 'quantized_hidden_sta_79' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 118 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_80 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 118 'alloca' 'quantized_hidden_sta_80' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 119 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_81 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 119 'alloca' 'quantized_hidden_sta_81' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 120 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_82 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 120 'alloca' 'quantized_hidden_sta_82' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 121 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_83 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 121 'alloca' 'quantized_hidden_sta_83' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 122 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_84 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 122 'alloca' 'quantized_hidden_sta_84' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 123 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_85 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 123 'alloca' 'quantized_hidden_sta_85' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 124 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_86 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 124 'alloca' 'quantized_hidden_sta_86' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 125 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_87 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 125 'alloca' 'quantized_hidden_sta_87' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 126 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_88 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 126 'alloca' 'quantized_hidden_sta_88' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 127 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_89 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 127 'alloca' 'quantized_hidden_sta_89' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 128 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_90 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 128 'alloca' 'quantized_hidden_sta_90' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 129 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_91 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 129 'alloca' 'quantized_hidden_sta_91' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 130 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_92 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 130 'alloca' 'quantized_hidden_sta_92' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 131 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_93 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 131 'alloca' 'quantized_hidden_sta_93' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 132 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_94 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 132 'alloca' 'quantized_hidden_sta_94' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 133 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_95 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 133 'alloca' 'quantized_hidden_sta_95' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 134 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_96 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 134 'alloca' 'quantized_hidden_sta_96' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 135 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_97 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 135 'alloca' 'quantized_hidden_sta_97' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 136 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_98 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 136 'alloca' 'quantized_hidden_sta_98' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 137 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_99 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 137 'alloca' 'quantized_hidden_sta_99' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 138 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_100 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 138 'alloca' 'quantized_hidden_sta_100' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 139 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_101 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 139 'alloca' 'quantized_hidden_sta_101' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 140 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_102 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 140 'alloca' 'quantized_hidden_sta_102' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 141 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_103 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 141 'alloca' 'quantized_hidden_sta_103' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 142 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_104 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 142 'alloca' 'quantized_hidden_sta_104' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 143 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_105 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 143 'alloca' 'quantized_hidden_sta_105' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 144 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_106 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 144 'alloca' 'quantized_hidden_sta_106' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 145 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_107 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 145 'alloca' 'quantized_hidden_sta_107' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 146 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_108 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 146 'alloca' 'quantized_hidden_sta_108' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 147 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_109 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 147 'alloca' 'quantized_hidden_sta_109' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 148 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_110 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 148 'alloca' 'quantized_hidden_sta_110' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 149 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_111 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 149 'alloca' 'quantized_hidden_sta_111' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 150 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_112 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 150 'alloca' 'quantized_hidden_sta_112' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 151 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_113 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 151 'alloca' 'quantized_hidden_sta_113' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 152 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_114 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 152 'alloca' 'quantized_hidden_sta_114' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 153 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_115 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 153 'alloca' 'quantized_hidden_sta_115' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 154 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_116 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 154 'alloca' 'quantized_hidden_sta_116' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 155 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_117 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 155 'alloca' 'quantized_hidden_sta_117' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 156 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_118 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 156 'alloca' 'quantized_hidden_sta_118' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 157 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_119 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 157 'alloca' 'quantized_hidden_sta_119' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 158 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_120 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 158 'alloca' 'quantized_hidden_sta_120' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 159 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_121 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 159 'alloca' 'quantized_hidden_sta_121' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 160 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_122 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 160 'alloca' 'quantized_hidden_sta_122' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 161 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_123 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 161 'alloca' 'quantized_hidden_sta_123' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 162 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_124 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 162 'alloca' 'quantized_hidden_sta_124' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 163 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_125 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 163 'alloca' 'quantized_hidden_sta_125' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 164 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_126 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 164 'alloca' 'quantized_hidden_sta_126' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 165 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_127 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 165 'alloca' 'quantized_hidden_sta_127' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 166 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_128 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 166 'alloca' 'quantized_hidden_sta_128' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 167 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_129 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 167 'alloca' 'quantized_hidden_sta_129' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 168 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_130 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 168 'alloca' 'quantized_hidden_sta_130' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 169 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_131 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 169 'alloca' 'quantized_hidden_sta_131' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 170 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_132 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 170 'alloca' 'quantized_hidden_sta_132' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 171 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_133 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 171 'alloca' 'quantized_hidden_sta_133' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 172 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_134 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 172 'alloca' 'quantized_hidden_sta_134' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 173 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_135 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 173 'alloca' 'quantized_hidden_sta_135' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 174 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_136 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 174 'alloca' 'quantized_hidden_sta_136' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 175 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_137 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 175 'alloca' 'quantized_hidden_sta_137' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 176 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_138 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 176 'alloca' 'quantized_hidden_sta_138' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 177 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_139 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 177 'alloca' 'quantized_hidden_sta_139' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 178 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_140 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 178 'alloca' 'quantized_hidden_sta_140' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 179 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_141 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 179 'alloca' 'quantized_hidden_sta_141' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 180 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_142 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 180 'alloca' 'quantized_hidden_sta_142' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 181 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_143 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 181 'alloca' 'quantized_hidden_sta_143' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 182 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_144 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 182 'alloca' 'quantized_hidden_sta_144' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 183 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_145 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 183 'alloca' 'quantized_hidden_sta_145' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 184 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_146 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 184 'alloca' 'quantized_hidden_sta_146' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 185 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_147 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 185 'alloca' 'quantized_hidden_sta_147' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 186 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_148 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 186 'alloca' 'quantized_hidden_sta_148' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 187 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_149 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 187 'alloca' 'quantized_hidden_sta_149' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 188 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_150 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 188 'alloca' 'quantized_hidden_sta_150' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 189 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_151 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 189 'alloca' 'quantized_hidden_sta_151' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 190 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_152 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 190 'alloca' 'quantized_hidden_sta_152' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 191 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_153 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 191 'alloca' 'quantized_hidden_sta_153' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 192 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_154 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 192 'alloca' 'quantized_hidden_sta_154' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 193 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_155 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 193 'alloca' 'quantized_hidden_sta_155' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 194 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_156 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 194 'alloca' 'quantized_hidden_sta_156' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 195 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_157 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 195 'alloca' 'quantized_hidden_sta_157' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 196 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_158 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 196 'alloca' 'quantized_hidden_sta_158' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 197 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_159 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 197 'alloca' 'quantized_hidden_sta_159' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 198 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_160 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 198 'alloca' 'quantized_hidden_sta_160' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 199 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_161 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 199 'alloca' 'quantized_hidden_sta_161' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 200 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_162 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 200 'alloca' 'quantized_hidden_sta_162' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 201 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_163 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 201 'alloca' 'quantized_hidden_sta_163' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 202 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_164 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 202 'alloca' 'quantized_hidden_sta_164' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 203 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_165 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 203 'alloca' 'quantized_hidden_sta_165' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 204 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_166 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 204 'alloca' 'quantized_hidden_sta_166' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 205 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_167 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 205 'alloca' 'quantized_hidden_sta_167' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 206 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_168 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 206 'alloca' 'quantized_hidden_sta_168' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 207 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_169 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 207 'alloca' 'quantized_hidden_sta_169' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 208 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_170 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 208 'alloca' 'quantized_hidden_sta_170' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 209 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_171 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 209 'alloca' 'quantized_hidden_sta_171' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 210 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_172 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 210 'alloca' 'quantized_hidden_sta_172' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 211 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_173 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 211 'alloca' 'quantized_hidden_sta_173' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 212 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_174 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 212 'alloca' 'quantized_hidden_sta_174' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 213 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_175 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 213 'alloca' 'quantized_hidden_sta_175' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 214 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_176 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 214 'alloca' 'quantized_hidden_sta_176' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 215 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_177 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 215 'alloca' 'quantized_hidden_sta_177' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 216 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_178 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 216 'alloca' 'quantized_hidden_sta_178' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 217 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_179 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 217 'alloca' 'quantized_hidden_sta_179' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 218 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_180 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 218 'alloca' 'quantized_hidden_sta_180' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 219 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_181 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 219 'alloca' 'quantized_hidden_sta_181' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 220 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_182 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 220 'alloca' 'quantized_hidden_sta_182' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 221 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_183 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 221 'alloca' 'quantized_hidden_sta_183' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 222 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_184 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 222 'alloca' 'quantized_hidden_sta_184' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 223 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_185 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 223 'alloca' 'quantized_hidden_sta_185' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 224 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_186 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 224 'alloca' 'quantized_hidden_sta_186' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 225 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_187 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 225 'alloca' 'quantized_hidden_sta_187' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 226 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_188 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 226 'alloca' 'quantized_hidden_sta_188' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 227 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_189 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 227 'alloca' 'quantized_hidden_sta_189' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 228 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_190 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 228 'alloca' 'quantized_hidden_sta_190' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 229 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_191 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 229 'alloca' 'quantized_hidden_sta_191' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 230 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_192 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 230 'alloca' 'quantized_hidden_sta_192' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 231 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_193 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 231 'alloca' 'quantized_hidden_sta_193' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 232 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_194 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 232 'alloca' 'quantized_hidden_sta_194' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 233 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_195 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 233 'alloca' 'quantized_hidden_sta_195' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 234 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_196 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 234 'alloca' 'quantized_hidden_sta_196' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 235 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_197 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 235 'alloca' 'quantized_hidden_sta_197' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 236 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_198 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 236 'alloca' 'quantized_hidden_sta_198' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 237 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_199 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 237 'alloca' 'quantized_hidden_sta_199' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 238 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_200 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 238 'alloca' 'quantized_hidden_sta_200' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 239 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_201 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 239 'alloca' 'quantized_hidden_sta_201' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 240 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_202 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 240 'alloca' 'quantized_hidden_sta_202' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 241 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_203 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 241 'alloca' 'quantized_hidden_sta_203' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 242 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_204 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 242 'alloca' 'quantized_hidden_sta_204' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 243 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_205 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 243 'alloca' 'quantized_hidden_sta_205' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 244 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_206 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 244 'alloca' 'quantized_hidden_sta_206' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 245 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_207 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 245 'alloca' 'quantized_hidden_sta_207' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 246 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_208 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 246 'alloca' 'quantized_hidden_sta_208' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 247 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_209 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 247 'alloca' 'quantized_hidden_sta_209' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 248 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_210 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 248 'alloca' 'quantized_hidden_sta_210' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 249 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_211 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 249 'alloca' 'quantized_hidden_sta_211' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 250 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_212 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 250 'alloca' 'quantized_hidden_sta_212' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 251 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_213 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 251 'alloca' 'quantized_hidden_sta_213' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 252 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_214 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 252 'alloca' 'quantized_hidden_sta_214' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 253 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_215 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 253 'alloca' 'quantized_hidden_sta_215' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 254 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_216 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 254 'alloca' 'quantized_hidden_sta_216' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 255 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_217 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 255 'alloca' 'quantized_hidden_sta_217' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 256 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_218 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 256 'alloca' 'quantized_hidden_sta_218' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 257 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_219 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 257 'alloca' 'quantized_hidden_sta_219' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 258 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_220 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 258 'alloca' 'quantized_hidden_sta_220' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 259 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_221 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 259 'alloca' 'quantized_hidden_sta_221' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 260 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_222 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 260 'alloca' 'quantized_hidden_sta_222' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 261 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_223 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 261 'alloca' 'quantized_hidden_sta_223' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 262 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_224 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 262 'alloca' 'quantized_hidden_sta_224' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 263 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_225 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 263 'alloca' 'quantized_hidden_sta_225' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 264 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_226 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 264 'alloca' 'quantized_hidden_sta_226' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 265 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_227 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 265 'alloca' 'quantized_hidden_sta_227' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 266 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_228 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 266 'alloca' 'quantized_hidden_sta_228' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 267 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_229 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 267 'alloca' 'quantized_hidden_sta_229' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 268 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_230 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 268 'alloca' 'quantized_hidden_sta_230' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 269 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_231 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 269 'alloca' 'quantized_hidden_sta_231' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 270 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_232 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 270 'alloca' 'quantized_hidden_sta_232' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 271 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_233 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 271 'alloca' 'quantized_hidden_sta_233' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 272 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_234 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 272 'alloca' 'quantized_hidden_sta_234' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 273 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_235 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 273 'alloca' 'quantized_hidden_sta_235' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 274 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_236 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 274 'alloca' 'quantized_hidden_sta_236' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 275 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_237 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 275 'alloca' 'quantized_hidden_sta_237' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 276 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_238 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 276 'alloca' 'quantized_hidden_sta_238' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 277 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_239 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 277 'alloca' 'quantized_hidden_sta_239' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 278 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_240 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 278 'alloca' 'quantized_hidden_sta_240' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 279 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_241 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 279 'alloca' 'quantized_hidden_sta_241' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 280 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_242 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 280 'alloca' 'quantized_hidden_sta_242' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 281 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_243 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 281 'alloca' 'quantized_hidden_sta_243' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 282 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_244 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 282 'alloca' 'quantized_hidden_sta_244' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 283 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_245 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 283 'alloca' 'quantized_hidden_sta_245' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 284 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_246 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 284 'alloca' 'quantized_hidden_sta_246' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 285 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_247 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 285 'alloca' 'quantized_hidden_sta_247' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 286 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_248 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 286 'alloca' 'quantized_hidden_sta_248' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 287 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_249 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 287 'alloca' 'quantized_hidden_sta_249' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 288 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_250 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 288 'alloca' 'quantized_hidden_sta_250' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 289 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_251 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 289 'alloca' 'quantized_hidden_sta_251' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 290 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_252 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 290 'alloca' 'quantized_hidden_sta_252' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 291 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_253 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 291 'alloca' 'quantized_hidden_sta_253' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 292 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_254 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 292 'alloca' 'quantized_hidden_sta_254' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 293 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_255 = alloca [6 x i8], align 1" [attention.cpp:93]   --->   Operation 293 'alloca' 'quantized_hidden_sta_255' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 294 [1/1] (0.00ns)   --->   "%q_proj_re_0_V = alloca [1536 x i40], align 8" [attention.cpp:104]   --->   Operation 294 'alloca' 'q_proj_re_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 295 [1/1] (0.00ns)   --->   "%k_proj_re_0_V = alloca [1536 x i40], align 8" [attention.cpp:105]   --->   Operation 295 'alloca' 'k_proj_re_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 296 [1/1] (0.00ns)   --->   "%v_proj_re_0_V = alloca [1536 x i40], align 8" [attention.cpp:106]   --->   Operation 296 'alloca' 'v_proj_re_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 297 [1/1] (0.00ns)   --->   "%q_proj_0_V = alloca [1536 x i40], align 8" [attention.cpp:134]   --->   Operation 297 'alloca' 'q_proj_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 298 [1/1] (0.00ns)   --->   "%k_proj_0_V = alloca [1536 x i40], align 8" [attention.cpp:135]   --->   Operation 298 'alloca' 'k_proj_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 299 [1/1] (0.00ns)   --->   "%v_proj_0_V = alloca [1536 x i40], align 8" [attention.cpp:136]   --->   Operation 299 'alloca' 'v_proj_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 300 [1/1] (0.00ns)   --->   "%q_embed_0_0_V = alloca [32 x i40], align 8" [attention.cpp:143]   --->   Operation 300 'alloca' 'q_embed_0_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 301 [1/1] (0.00ns)   --->   "%q_embed_1_0_V = alloca [32 x i40], align 8" [attention.cpp:143]   --->   Operation 301 'alloca' 'q_embed_1_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 302 [1/1] (0.00ns)   --->   "%q_embed_2_0_V = alloca [32 x i40], align 8" [attention.cpp:143]   --->   Operation 302 'alloca' 'q_embed_2_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 303 [1/1] (0.00ns)   --->   "%q_embed_3_0_V = alloca [32 x i40], align 8" [attention.cpp:143]   --->   Operation 303 'alloca' 'q_embed_3_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 304 [1/1] (0.00ns)   --->   "%q_embed_4_0_V = alloca [32 x i40], align 8" [attention.cpp:143]   --->   Operation 304 'alloca' 'q_embed_4_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 305 [1/1] (0.00ns)   --->   "%q_embed_5_0_V = alloca [32 x i40], align 8" [attention.cpp:143]   --->   Operation 305 'alloca' 'q_embed_5_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 306 [1/1] (0.00ns)   --->   "%q_embed_6_0_V = alloca [32 x i40], align 8" [attention.cpp:143]   --->   Operation 306 'alloca' 'q_embed_6_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 307 [1/1] (0.00ns)   --->   "%q_embed_7_0_V = alloca [32 x i40], align 8" [attention.cpp:143]   --->   Operation 307 'alloca' 'q_embed_7_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 308 [1/1] (0.00ns)   --->   "%q_embed_8_0_V = alloca [32 x i40], align 8" [attention.cpp:143]   --->   Operation 308 'alloca' 'q_embed_8_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 309 [1/1] (0.00ns)   --->   "%q_embed_9_0_V = alloca [32 x i40], align 8" [attention.cpp:143]   --->   Operation 309 'alloca' 'q_embed_9_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 310 [1/1] (0.00ns)   --->   "%q_embed_10_0_V = alloca [32 x i40], align 8" [attention.cpp:143]   --->   Operation 310 'alloca' 'q_embed_10_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 311 [1/1] (0.00ns)   --->   "%q_embed_11_0_V = alloca [32 x i40], align 8" [attention.cpp:143]   --->   Operation 311 'alloca' 'q_embed_11_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 312 [1/1] (0.00ns)   --->   "%q_embed_12_0_V = alloca [32 x i40], align 8" [attention.cpp:143]   --->   Operation 312 'alloca' 'q_embed_12_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 313 [1/1] (0.00ns)   --->   "%q_embed_13_0_V = alloca [32 x i40], align 8" [attention.cpp:143]   --->   Operation 313 'alloca' 'q_embed_13_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 314 [1/1] (0.00ns)   --->   "%q_embed_14_0_V = alloca [32 x i40], align 8" [attention.cpp:143]   --->   Operation 314 'alloca' 'q_embed_14_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 315 [1/1] (0.00ns)   --->   "%q_embed_15_0_V = alloca [32 x i40], align 8" [attention.cpp:143]   --->   Operation 315 'alloca' 'q_embed_15_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 316 [1/1] (0.00ns)   --->   "%q_embed_16_0_V = alloca [32 x i40], align 8" [attention.cpp:143]   --->   Operation 316 'alloca' 'q_embed_16_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 317 [1/1] (0.00ns)   --->   "%q_embed_17_0_V = alloca [32 x i40], align 8" [attention.cpp:143]   --->   Operation 317 'alloca' 'q_embed_17_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 318 [1/1] (0.00ns)   --->   "%q_embed_18_0_V = alloca [32 x i40], align 8" [attention.cpp:143]   --->   Operation 318 'alloca' 'q_embed_18_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 319 [1/1] (0.00ns)   --->   "%q_embed_19_0_V = alloca [32 x i40], align 8" [attention.cpp:143]   --->   Operation 319 'alloca' 'q_embed_19_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 320 [1/1] (0.00ns)   --->   "%q_embed_20_0_V = alloca [32 x i40], align 8" [attention.cpp:143]   --->   Operation 320 'alloca' 'q_embed_20_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 321 [1/1] (0.00ns)   --->   "%q_embed_21_0_V = alloca [32 x i40], align 8" [attention.cpp:143]   --->   Operation 321 'alloca' 'q_embed_21_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 322 [1/1] (0.00ns)   --->   "%q_embed_22_0_V = alloca [32 x i40], align 8" [attention.cpp:143]   --->   Operation 322 'alloca' 'q_embed_22_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 323 [1/1] (0.00ns)   --->   "%q_embed_23_0_V = alloca [32 x i40], align 8" [attention.cpp:143]   --->   Operation 323 'alloca' 'q_embed_23_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 324 [1/1] (0.00ns)   --->   "%q_embed_24_0_V = alloca [32 x i40], align 8" [attention.cpp:143]   --->   Operation 324 'alloca' 'q_embed_24_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 325 [1/1] (0.00ns)   --->   "%q_embed_25_0_V = alloca [32 x i40], align 8" [attention.cpp:143]   --->   Operation 325 'alloca' 'q_embed_25_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 326 [1/1] (0.00ns)   --->   "%q_embed_26_0_V = alloca [32 x i40], align 8" [attention.cpp:143]   --->   Operation 326 'alloca' 'q_embed_26_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 327 [1/1] (0.00ns)   --->   "%q_embed_27_0_V = alloca [32 x i40], align 8" [attention.cpp:143]   --->   Operation 327 'alloca' 'q_embed_27_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 328 [1/1] (0.00ns)   --->   "%q_embed_28_0_V = alloca [32 x i40], align 8" [attention.cpp:143]   --->   Operation 328 'alloca' 'q_embed_28_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 329 [1/1] (0.00ns)   --->   "%q_embed_29_0_V = alloca [32 x i40], align 8" [attention.cpp:143]   --->   Operation 329 'alloca' 'q_embed_29_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 330 [1/1] (0.00ns)   --->   "%q_embed_30_0_V = alloca [32 x i40], align 8" [attention.cpp:143]   --->   Operation 330 'alloca' 'q_embed_30_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 331 [1/1] (0.00ns)   --->   "%q_embed_31_0_V = alloca [32 x i40], align 8" [attention.cpp:143]   --->   Operation 331 'alloca' 'q_embed_31_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 332 [1/1] (0.00ns)   --->   "%q_embed_32_0_0_V = alloca [16 x i40], align 8" [attention.cpp:143]   --->   Operation 332 'alloca' 'q_embed_32_0_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 333 [1/1] (0.00ns)   --->   "%q_embed_33_0_0_V = alloca [16 x i40], align 8" [attention.cpp:143]   --->   Operation 333 'alloca' 'q_embed_33_0_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 334 [1/1] (0.00ns)   --->   "%q_embed_34_0_0_V = alloca [16 x i40], align 8" [attention.cpp:143]   --->   Operation 334 'alloca' 'q_embed_34_0_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 335 [1/1] (0.00ns)   --->   "%q_embed_35_0_0_V = alloca [16 x i40], align 8" [attention.cpp:143]   --->   Operation 335 'alloca' 'q_embed_35_0_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 336 [1/1] (0.00ns)   --->   "%q_embed_36_0_0_V = alloca [16 x i40], align 8" [attention.cpp:143]   --->   Operation 336 'alloca' 'q_embed_36_0_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 337 [1/1] (0.00ns)   --->   "%q_embed_37_0_0_V = alloca [16 x i40], align 8" [attention.cpp:143]   --->   Operation 337 'alloca' 'q_embed_37_0_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 338 [1/1] (0.00ns)   --->   "%q_embed_38_0_0_V = alloca [16 x i40], align 8" [attention.cpp:143]   --->   Operation 338 'alloca' 'q_embed_38_0_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 339 [1/1] (0.00ns)   --->   "%q_embed_39_0_0_V = alloca [16 x i40], align 8" [attention.cpp:143]   --->   Operation 339 'alloca' 'q_embed_39_0_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 340 [1/1] (0.00ns)   --->   "%q_embed_40_0_0_V = alloca [16 x i40], align 8" [attention.cpp:143]   --->   Operation 340 'alloca' 'q_embed_40_0_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 341 [1/1] (0.00ns)   --->   "%q_embed_41_0_0_V = alloca [16 x i40], align 8" [attention.cpp:143]   --->   Operation 341 'alloca' 'q_embed_41_0_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 342 [1/1] (0.00ns)   --->   "%q_embed_42_0_0_V = alloca [16 x i40], align 8" [attention.cpp:143]   --->   Operation 342 'alloca' 'q_embed_42_0_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 343 [1/1] (0.00ns)   --->   "%q_embed_43_0_0_V = alloca [16 x i40], align 8" [attention.cpp:143]   --->   Operation 343 'alloca' 'q_embed_43_0_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 344 [1/1] (0.00ns)   --->   "%q_embed_44_0_0_V = alloca [16 x i40], align 8" [attention.cpp:143]   --->   Operation 344 'alloca' 'q_embed_44_0_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 345 [1/1] (0.00ns)   --->   "%q_embed_45_0_0_V = alloca [16 x i40], align 8" [attention.cpp:143]   --->   Operation 345 'alloca' 'q_embed_45_0_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 346 [1/1] (0.00ns)   --->   "%q_embed_46_0_0_V = alloca [16 x i40], align 8" [attention.cpp:143]   --->   Operation 346 'alloca' 'q_embed_46_0_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 347 [1/1] (0.00ns)   --->   "%q_embed_47_0_0_V = alloca [16 x i40], align 8" [attention.cpp:143]   --->   Operation 347 'alloca' 'q_embed_47_0_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 348 [1/1] (0.00ns)   --->   "%q_embed_48_0_0_V = alloca [16 x i40], align 8" [attention.cpp:143]   --->   Operation 348 'alloca' 'q_embed_48_0_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 349 [1/1] (0.00ns)   --->   "%q_embed_49_0_0_V = alloca [16 x i40], align 8" [attention.cpp:143]   --->   Operation 349 'alloca' 'q_embed_49_0_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 350 [1/1] (0.00ns)   --->   "%q_embed_50_0_0_V = alloca [16 x i40], align 8" [attention.cpp:143]   --->   Operation 350 'alloca' 'q_embed_50_0_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 351 [1/1] (0.00ns)   --->   "%q_embed_51_0_0_V = alloca [16 x i40], align 8" [attention.cpp:143]   --->   Operation 351 'alloca' 'q_embed_51_0_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 352 [1/1] (0.00ns)   --->   "%q_embed_52_0_0_V = alloca [16 x i40], align 8" [attention.cpp:143]   --->   Operation 352 'alloca' 'q_embed_52_0_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 353 [1/1] (0.00ns)   --->   "%q_embed_53_0_0_V = alloca [16 x i40], align 8" [attention.cpp:143]   --->   Operation 353 'alloca' 'q_embed_53_0_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 354 [1/1] (0.00ns)   --->   "%q_embed_54_0_0_V = alloca [16 x i40], align 8" [attention.cpp:143]   --->   Operation 354 'alloca' 'q_embed_54_0_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 355 [1/1] (0.00ns)   --->   "%q_embed_55_0_0_V = alloca [16 x i40], align 8" [attention.cpp:143]   --->   Operation 355 'alloca' 'q_embed_55_0_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 356 [1/1] (0.00ns)   --->   "%q_embed_56_0_0_V = alloca [16 x i40], align 8" [attention.cpp:143]   --->   Operation 356 'alloca' 'q_embed_56_0_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 357 [1/1] (0.00ns)   --->   "%q_embed_57_0_0_V = alloca [16 x i40], align 8" [attention.cpp:143]   --->   Operation 357 'alloca' 'q_embed_57_0_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 358 [1/1] (0.00ns)   --->   "%q_embed_58_0_0_V = alloca [16 x i40], align 8" [attention.cpp:143]   --->   Operation 358 'alloca' 'q_embed_58_0_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 359 [1/1] (0.00ns)   --->   "%q_embed_59_0_0_V = alloca [16 x i40], align 8" [attention.cpp:143]   --->   Operation 359 'alloca' 'q_embed_59_0_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 360 [1/1] (0.00ns)   --->   "%q_embed_60_0_0_V = alloca [16 x i40], align 8" [attention.cpp:143]   --->   Operation 360 'alloca' 'q_embed_60_0_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 361 [1/1] (0.00ns)   --->   "%q_embed_61_0_0_V = alloca [16 x i40], align 8" [attention.cpp:143]   --->   Operation 361 'alloca' 'q_embed_61_0_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 362 [1/1] (0.00ns)   --->   "%q_embed_62_0_0_V = alloca [16 x i40], align 8" [attention.cpp:143]   --->   Operation 362 'alloca' 'q_embed_62_0_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 363 [1/1] (0.00ns)   --->   "%q_embed_63_0_0_V = alloca [16 x i40], align 8" [attention.cpp:143]   --->   Operation 363 'alloca' 'q_embed_63_0_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 364 [1/1] (0.00ns)   --->   "%k_embed_0_V = alloca [1536 x i40], align 8" [attention.cpp:144]   --->   Operation 364 'alloca' 'k_embed_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 365 [1/1] (0.00ns)   --->   "%k_cache_upd_V = alloca [9216 x i40], align 8" [attention.cpp:148]   --->   Operation 365 'alloca' 'k_cache_upd_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 366 [1/1] (0.00ns)   --->   "%v_cache_upd_V = alloca [9216 x i40], align 8" [attention.cpp:149]   --->   Operation 366 'alloca' 'v_cache_upd_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 367 [1/1] (0.00ns)   --->   "%k_proj_transposed_0 = alloca [192 x i40], align 8" [attention.cpp:158]   --->   Operation 367 'alloca' 'k_proj_transposed_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 368 [1/1] (0.00ns)   --->   "%k_proj_transposed_1 = alloca [192 x i40], align 8" [attention.cpp:158]   --->   Operation 368 'alloca' 'k_proj_transposed_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 369 [1/1] (0.00ns)   --->   "%k_proj_transposed_2 = alloca [192 x i40], align 8" [attention.cpp:158]   --->   Operation 369 'alloca' 'k_proj_transposed_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 370 [1/1] (0.00ns)   --->   "%k_proj_transposed_3 = alloca [192 x i40], align 8" [attention.cpp:158]   --->   Operation 370 'alloca' 'k_proj_transposed_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 371 [1/1] (0.00ns)   --->   "%k_proj_transposed_4 = alloca [192 x i40], align 8" [attention.cpp:158]   --->   Operation 371 'alloca' 'k_proj_transposed_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 372 [1/1] (0.00ns)   --->   "%k_proj_transposed_5 = alloca [192 x i40], align 8" [attention.cpp:158]   --->   Operation 372 'alloca' 'k_proj_transposed_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 373 [1/1] (0.00ns)   --->   "%k_proj_transposed_6 = alloca [192 x i40], align 8" [attention.cpp:158]   --->   Operation 373 'alloca' 'k_proj_transposed_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 374 [1/1] (0.00ns)   --->   "%k_proj_transposed_7 = alloca [192 x i40], align 8" [attention.cpp:158]   --->   Operation 374 'alloca' 'k_proj_transposed_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 375 [1/1] (0.00ns)   --->   "%k_proj_transposed_8 = alloca [192 x i40], align 8" [attention.cpp:158]   --->   Operation 375 'alloca' 'k_proj_transposed_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 376 [1/1] (0.00ns)   --->   "%k_proj_transposed_9 = alloca [192 x i40], align 8" [attention.cpp:158]   --->   Operation 376 'alloca' 'k_proj_transposed_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 377 [1/1] (0.00ns)   --->   "%k_proj_transposed_10 = alloca [192 x i40], align 8" [attention.cpp:158]   --->   Operation 377 'alloca' 'k_proj_transposed_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 378 [1/1] (0.00ns)   --->   "%k_proj_transposed_11 = alloca [192 x i40], align 8" [attention.cpp:158]   --->   Operation 378 'alloca' 'k_proj_transposed_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 379 [1/1] (0.00ns)   --->   "%k_proj_transposed_12 = alloca [192 x i40], align 8" [attention.cpp:158]   --->   Operation 379 'alloca' 'k_proj_transposed_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 380 [1/1] (0.00ns)   --->   "%k_proj_transposed_13 = alloca [192 x i40], align 8" [attention.cpp:158]   --->   Operation 380 'alloca' 'k_proj_transposed_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 381 [1/1] (0.00ns)   --->   "%k_proj_transposed_14 = alloca [192 x i40], align 8" [attention.cpp:158]   --->   Operation 381 'alloca' 'k_proj_transposed_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 382 [1/1] (0.00ns)   --->   "%k_proj_transposed_15 = alloca [192 x i40], align 8" [attention.cpp:158]   --->   Operation 382 'alloca' 'k_proj_transposed_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 383 [1/1] (0.00ns)   --->   "%k_proj_transposed_16 = alloca [192 x i40], align 8" [attention.cpp:158]   --->   Operation 383 'alloca' 'k_proj_transposed_16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 384 [1/1] (0.00ns)   --->   "%k_proj_transposed_17 = alloca [192 x i40], align 8" [attention.cpp:158]   --->   Operation 384 'alloca' 'k_proj_transposed_17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 385 [1/1] (0.00ns)   --->   "%k_proj_transposed_18 = alloca [192 x i40], align 8" [attention.cpp:158]   --->   Operation 385 'alloca' 'k_proj_transposed_18' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 386 [1/1] (0.00ns)   --->   "%k_proj_transposed_19 = alloca [192 x i40], align 8" [attention.cpp:158]   --->   Operation 386 'alloca' 'k_proj_transposed_19' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 387 [1/1] (0.00ns)   --->   "%k_proj_transposed_20 = alloca [192 x i40], align 8" [attention.cpp:158]   --->   Operation 387 'alloca' 'k_proj_transposed_20' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 388 [1/1] (0.00ns)   --->   "%k_proj_transposed_21 = alloca [192 x i40], align 8" [attention.cpp:158]   --->   Operation 388 'alloca' 'k_proj_transposed_21' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 389 [1/1] (0.00ns)   --->   "%k_proj_transposed_22 = alloca [192 x i40], align 8" [attention.cpp:158]   --->   Operation 389 'alloca' 'k_proj_transposed_22' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 390 [1/1] (0.00ns)   --->   "%k_proj_transposed_23 = alloca [192 x i40], align 8" [attention.cpp:158]   --->   Operation 390 'alloca' 'k_proj_transposed_23' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 391 [1/1] (0.00ns)   --->   "%k_proj_transposed_24 = alloca [192 x i40], align 8" [attention.cpp:158]   --->   Operation 391 'alloca' 'k_proj_transposed_24' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 392 [1/1] (0.00ns)   --->   "%k_proj_transposed_25 = alloca [192 x i40], align 8" [attention.cpp:158]   --->   Operation 392 'alloca' 'k_proj_transposed_25' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 393 [1/1] (0.00ns)   --->   "%k_proj_transposed_26 = alloca [192 x i40], align 8" [attention.cpp:158]   --->   Operation 393 'alloca' 'k_proj_transposed_26' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 394 [1/1] (0.00ns)   --->   "%k_proj_transposed_27 = alloca [192 x i40], align 8" [attention.cpp:158]   --->   Operation 394 'alloca' 'k_proj_transposed_27' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 395 [1/1] (0.00ns)   --->   "%k_proj_transposed_28 = alloca [192 x i40], align 8" [attention.cpp:158]   --->   Operation 395 'alloca' 'k_proj_transposed_28' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 396 [1/1] (0.00ns)   --->   "%k_proj_transposed_29 = alloca [192 x i40], align 8" [attention.cpp:158]   --->   Operation 396 'alloca' 'k_proj_transposed_29' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 397 [1/1] (0.00ns)   --->   "%k_proj_transposed_30 = alloca [192 x i40], align 8" [attention.cpp:158]   --->   Operation 397 'alloca' 'k_proj_transposed_30' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 398 [1/1] (0.00ns)   --->   "%k_proj_transposed_31 = alloca [192 x i40], align 8" [attention.cpp:158]   --->   Operation 398 'alloca' 'k_proj_transposed_31' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 399 [1/1] (0.00ns)   --->   "%k_proj_transposed_32 = alloca [96 x i40], align 8" [attention.cpp:158]   --->   Operation 399 'alloca' 'k_proj_transposed_32' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 400 [1/1] (0.00ns)   --->   "%k_proj_transposed_33 = alloca [96 x i40], align 8" [attention.cpp:158]   --->   Operation 400 'alloca' 'k_proj_transposed_33' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 401 [1/1] (0.00ns)   --->   "%k_proj_transposed_34 = alloca [96 x i40], align 8" [attention.cpp:158]   --->   Operation 401 'alloca' 'k_proj_transposed_34' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 402 [1/1] (0.00ns)   --->   "%k_proj_transposed_35 = alloca [96 x i40], align 8" [attention.cpp:158]   --->   Operation 402 'alloca' 'k_proj_transposed_35' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 403 [1/1] (0.00ns)   --->   "%k_proj_transposed_36 = alloca [96 x i40], align 8" [attention.cpp:158]   --->   Operation 403 'alloca' 'k_proj_transposed_36' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 404 [1/1] (0.00ns)   --->   "%k_proj_transposed_37 = alloca [96 x i40], align 8" [attention.cpp:158]   --->   Operation 404 'alloca' 'k_proj_transposed_37' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 405 [1/1] (0.00ns)   --->   "%k_proj_transposed_38 = alloca [96 x i40], align 8" [attention.cpp:158]   --->   Operation 405 'alloca' 'k_proj_transposed_38' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 406 [1/1] (0.00ns)   --->   "%k_proj_transposed_39 = alloca [96 x i40], align 8" [attention.cpp:158]   --->   Operation 406 'alloca' 'k_proj_transposed_39' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 407 [1/1] (0.00ns)   --->   "%k_proj_transposed_40 = alloca [96 x i40], align 8" [attention.cpp:158]   --->   Operation 407 'alloca' 'k_proj_transposed_40' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 408 [1/1] (0.00ns)   --->   "%k_proj_transposed_41 = alloca [96 x i40], align 8" [attention.cpp:158]   --->   Operation 408 'alloca' 'k_proj_transposed_41' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 409 [1/1] (0.00ns)   --->   "%k_proj_transposed_42 = alloca [96 x i40], align 8" [attention.cpp:158]   --->   Operation 409 'alloca' 'k_proj_transposed_42' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 410 [1/1] (0.00ns)   --->   "%k_proj_transposed_43 = alloca [96 x i40], align 8" [attention.cpp:158]   --->   Operation 410 'alloca' 'k_proj_transposed_43' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 411 [1/1] (0.00ns)   --->   "%k_proj_transposed_44 = alloca [96 x i40], align 8" [attention.cpp:158]   --->   Operation 411 'alloca' 'k_proj_transposed_44' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 412 [1/1] (0.00ns)   --->   "%k_proj_transposed_45 = alloca [96 x i40], align 8" [attention.cpp:158]   --->   Operation 412 'alloca' 'k_proj_transposed_45' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 413 [1/1] (0.00ns)   --->   "%k_proj_transposed_46 = alloca [96 x i40], align 8" [attention.cpp:158]   --->   Operation 413 'alloca' 'k_proj_transposed_46' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 414 [1/1] (0.00ns)   --->   "%k_proj_transposed_47 = alloca [96 x i40], align 8" [attention.cpp:158]   --->   Operation 414 'alloca' 'k_proj_transposed_47' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 415 [1/1] (0.00ns)   --->   "%k_proj_transposed_48 = alloca [96 x i40], align 8" [attention.cpp:158]   --->   Operation 415 'alloca' 'k_proj_transposed_48' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 416 [1/1] (0.00ns)   --->   "%k_proj_transposed_49 = alloca [96 x i40], align 8" [attention.cpp:158]   --->   Operation 416 'alloca' 'k_proj_transposed_49' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 417 [1/1] (0.00ns)   --->   "%k_proj_transposed_50 = alloca [96 x i40], align 8" [attention.cpp:158]   --->   Operation 417 'alloca' 'k_proj_transposed_50' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 418 [1/1] (0.00ns)   --->   "%k_proj_transposed_51 = alloca [96 x i40], align 8" [attention.cpp:158]   --->   Operation 418 'alloca' 'k_proj_transposed_51' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 419 [1/1] (0.00ns)   --->   "%k_proj_transposed_52 = alloca [96 x i40], align 8" [attention.cpp:158]   --->   Operation 419 'alloca' 'k_proj_transposed_52' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 420 [1/1] (0.00ns)   --->   "%k_proj_transposed_53 = alloca [96 x i40], align 8" [attention.cpp:158]   --->   Operation 420 'alloca' 'k_proj_transposed_53' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 421 [1/1] (0.00ns)   --->   "%k_proj_transposed_54 = alloca [96 x i40], align 8" [attention.cpp:158]   --->   Operation 421 'alloca' 'k_proj_transposed_54' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 422 [1/1] (0.00ns)   --->   "%k_proj_transposed_55 = alloca [96 x i40], align 8" [attention.cpp:158]   --->   Operation 422 'alloca' 'k_proj_transposed_55' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 423 [1/1] (0.00ns)   --->   "%k_proj_transposed_56 = alloca [96 x i40], align 8" [attention.cpp:158]   --->   Operation 423 'alloca' 'k_proj_transposed_56' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 424 [1/1] (0.00ns)   --->   "%k_proj_transposed_57 = alloca [96 x i40], align 8" [attention.cpp:158]   --->   Operation 424 'alloca' 'k_proj_transposed_57' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 425 [1/1] (0.00ns)   --->   "%k_proj_transposed_58 = alloca [96 x i40], align 8" [attention.cpp:158]   --->   Operation 425 'alloca' 'k_proj_transposed_58' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 426 [1/1] (0.00ns)   --->   "%k_proj_transposed_59 = alloca [96 x i40], align 8" [attention.cpp:158]   --->   Operation 426 'alloca' 'k_proj_transposed_59' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 427 [1/1] (0.00ns)   --->   "%k_proj_transposed_60 = alloca [96 x i40], align 8" [attention.cpp:158]   --->   Operation 427 'alloca' 'k_proj_transposed_60' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 428 [1/1] (0.00ns)   --->   "%k_proj_transposed_61 = alloca [96 x i40], align 8" [attention.cpp:158]   --->   Operation 428 'alloca' 'k_proj_transposed_61' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 429 [1/1] (0.00ns)   --->   "%k_proj_transposed_62 = alloca [96 x i40], align 8" [attention.cpp:158]   --->   Operation 429 'alloca' 'k_proj_transposed_62' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 430 [1/1] (0.00ns)   --->   "%k_proj_transposed_63 = alloca [96 x i40], align 8" [attention.cpp:158]   --->   Operation 430 'alloca' 'k_proj_transposed_63' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 431 [1/1] (0.00ns)   --->   "%attn_weights_0_V = alloca [96 x i40], align 8" [attention.cpp:162]   --->   Operation 431 'alloca' 'attn_weights_0_V' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 40> <Depth = 1536> <RAM>
ST_1 : Operation 432 [1/1] (0.00ns)   --->   "%attn_output_0 = alloca [1536 x i40], align 8"   --->   Operation 432 'alloca' 'attn_output_0' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 40> <Depth = 1536> <RAM>
ST_1 : Operation 433 [1/1] (0.00ns)   --->   "%attn_output_2D_0_V = alloca [1536 x i40], align 8" [attention.cpp:206]   --->   Operation 433 'alloca' 'attn_output_2D_0_V' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 40> <Depth = 1536> <RAM>
ST_1 : Operation 434 [1/1] (0.00ns)   --->   "%quantized_final_outp = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 434 'alloca' 'quantized_final_outp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 435 [1/1] (0.00ns)   --->   "%quantized_final_outp_1 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 435 'alloca' 'quantized_final_outp_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 436 [1/1] (0.00ns)   --->   "%quantized_final_outp_2 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 436 'alloca' 'quantized_final_outp_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 437 [1/1] (0.00ns)   --->   "%quantized_final_outp_3 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 437 'alloca' 'quantized_final_outp_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 438 [1/1] (0.00ns)   --->   "%quantized_final_outp_4 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 438 'alloca' 'quantized_final_outp_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 439 [1/1] (0.00ns)   --->   "%quantized_final_outp_5 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 439 'alloca' 'quantized_final_outp_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 440 [1/1] (0.00ns)   --->   "%quantized_final_outp_6 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 440 'alloca' 'quantized_final_outp_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 441 [1/1] (0.00ns)   --->   "%quantized_final_outp_7 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 441 'alloca' 'quantized_final_outp_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 442 [1/1] (0.00ns)   --->   "%quantized_final_outp_8 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 442 'alloca' 'quantized_final_outp_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 443 [1/1] (0.00ns)   --->   "%quantized_final_outp_9 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 443 'alloca' 'quantized_final_outp_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 444 [1/1] (0.00ns)   --->   "%quantized_final_outp_10 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 444 'alloca' 'quantized_final_outp_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 445 [1/1] (0.00ns)   --->   "%quantized_final_outp_11 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 445 'alloca' 'quantized_final_outp_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 446 [1/1] (0.00ns)   --->   "%quantized_final_outp_12 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 446 'alloca' 'quantized_final_outp_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 447 [1/1] (0.00ns)   --->   "%quantized_final_outp_13 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 447 'alloca' 'quantized_final_outp_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 448 [1/1] (0.00ns)   --->   "%quantized_final_outp_14 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 448 'alloca' 'quantized_final_outp_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 449 [1/1] (0.00ns)   --->   "%quantized_final_outp_15 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 449 'alloca' 'quantized_final_outp_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 450 [1/1] (0.00ns)   --->   "%quantized_final_outp_16 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 450 'alloca' 'quantized_final_outp_16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 451 [1/1] (0.00ns)   --->   "%quantized_final_outp_17 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 451 'alloca' 'quantized_final_outp_17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 452 [1/1] (0.00ns)   --->   "%quantized_final_outp_18 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 452 'alloca' 'quantized_final_outp_18' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 453 [1/1] (0.00ns)   --->   "%quantized_final_outp_19 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 453 'alloca' 'quantized_final_outp_19' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 454 [1/1] (0.00ns)   --->   "%quantized_final_outp_20 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 454 'alloca' 'quantized_final_outp_20' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 455 [1/1] (0.00ns)   --->   "%quantized_final_outp_21 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 455 'alloca' 'quantized_final_outp_21' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 456 [1/1] (0.00ns)   --->   "%quantized_final_outp_22 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 456 'alloca' 'quantized_final_outp_22' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 457 [1/1] (0.00ns)   --->   "%quantized_final_outp_23 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 457 'alloca' 'quantized_final_outp_23' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 458 [1/1] (0.00ns)   --->   "%quantized_final_outp_24 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 458 'alloca' 'quantized_final_outp_24' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 459 [1/1] (0.00ns)   --->   "%quantized_final_outp_25 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 459 'alloca' 'quantized_final_outp_25' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 460 [1/1] (0.00ns)   --->   "%quantized_final_outp_26 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 460 'alloca' 'quantized_final_outp_26' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 461 [1/1] (0.00ns)   --->   "%quantized_final_outp_27 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 461 'alloca' 'quantized_final_outp_27' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 462 [1/1] (0.00ns)   --->   "%quantized_final_outp_28 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 462 'alloca' 'quantized_final_outp_28' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 463 [1/1] (0.00ns)   --->   "%quantized_final_outp_29 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 463 'alloca' 'quantized_final_outp_29' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 464 [1/1] (0.00ns)   --->   "%quantized_final_outp_30 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 464 'alloca' 'quantized_final_outp_30' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 465 [1/1] (0.00ns)   --->   "%quantized_final_outp_31 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 465 'alloca' 'quantized_final_outp_31' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 466 [1/1] (0.00ns)   --->   "%quantized_final_outp_32 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 466 'alloca' 'quantized_final_outp_32' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 467 [1/1] (0.00ns)   --->   "%quantized_final_outp_33 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 467 'alloca' 'quantized_final_outp_33' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 468 [1/1] (0.00ns)   --->   "%quantized_final_outp_34 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 468 'alloca' 'quantized_final_outp_34' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 469 [1/1] (0.00ns)   --->   "%quantized_final_outp_35 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 469 'alloca' 'quantized_final_outp_35' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 470 [1/1] (0.00ns)   --->   "%quantized_final_outp_36 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 470 'alloca' 'quantized_final_outp_36' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 471 [1/1] (0.00ns)   --->   "%quantized_final_outp_37 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 471 'alloca' 'quantized_final_outp_37' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 472 [1/1] (0.00ns)   --->   "%quantized_final_outp_38 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 472 'alloca' 'quantized_final_outp_38' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 473 [1/1] (0.00ns)   --->   "%quantized_final_outp_39 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 473 'alloca' 'quantized_final_outp_39' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 474 [1/1] (0.00ns)   --->   "%quantized_final_outp_40 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 474 'alloca' 'quantized_final_outp_40' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 475 [1/1] (0.00ns)   --->   "%quantized_final_outp_41 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 475 'alloca' 'quantized_final_outp_41' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 476 [1/1] (0.00ns)   --->   "%quantized_final_outp_42 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 476 'alloca' 'quantized_final_outp_42' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 477 [1/1] (0.00ns)   --->   "%quantized_final_outp_43 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 477 'alloca' 'quantized_final_outp_43' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 478 [1/1] (0.00ns)   --->   "%quantized_final_outp_44 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 478 'alloca' 'quantized_final_outp_44' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 479 [1/1] (0.00ns)   --->   "%quantized_final_outp_45 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 479 'alloca' 'quantized_final_outp_45' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 480 [1/1] (0.00ns)   --->   "%quantized_final_outp_46 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 480 'alloca' 'quantized_final_outp_46' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 481 [1/1] (0.00ns)   --->   "%quantized_final_outp_47 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 481 'alloca' 'quantized_final_outp_47' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 482 [1/1] (0.00ns)   --->   "%quantized_final_outp_48 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 482 'alloca' 'quantized_final_outp_48' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 483 [1/1] (0.00ns)   --->   "%quantized_final_outp_49 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 483 'alloca' 'quantized_final_outp_49' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 484 [1/1] (0.00ns)   --->   "%quantized_final_outp_50 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 484 'alloca' 'quantized_final_outp_50' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 485 [1/1] (0.00ns)   --->   "%quantized_final_outp_51 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 485 'alloca' 'quantized_final_outp_51' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 486 [1/1] (0.00ns)   --->   "%quantized_final_outp_52 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 486 'alloca' 'quantized_final_outp_52' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 487 [1/1] (0.00ns)   --->   "%quantized_final_outp_53 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 487 'alloca' 'quantized_final_outp_53' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 488 [1/1] (0.00ns)   --->   "%quantized_final_outp_54 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 488 'alloca' 'quantized_final_outp_54' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 489 [1/1] (0.00ns)   --->   "%quantized_final_outp_55 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 489 'alloca' 'quantized_final_outp_55' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 490 [1/1] (0.00ns)   --->   "%quantized_final_outp_56 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 490 'alloca' 'quantized_final_outp_56' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 491 [1/1] (0.00ns)   --->   "%quantized_final_outp_57 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 491 'alloca' 'quantized_final_outp_57' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 492 [1/1] (0.00ns)   --->   "%quantized_final_outp_58 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 492 'alloca' 'quantized_final_outp_58' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 493 [1/1] (0.00ns)   --->   "%quantized_final_outp_59 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 493 'alloca' 'quantized_final_outp_59' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 494 [1/1] (0.00ns)   --->   "%quantized_final_outp_60 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 494 'alloca' 'quantized_final_outp_60' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 495 [1/1] (0.00ns)   --->   "%quantized_final_outp_61 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 495 'alloca' 'quantized_final_outp_61' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 496 [1/1] (0.00ns)   --->   "%quantized_final_outp_62 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 496 'alloca' 'quantized_final_outp_62' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 497 [1/1] (0.00ns)   --->   "%quantized_final_outp_63 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 497 'alloca' 'quantized_final_outp_63' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 498 [1/1] (0.00ns)   --->   "%quantized_final_outp_64 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 498 'alloca' 'quantized_final_outp_64' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 499 [1/1] (0.00ns)   --->   "%quantized_final_outp_65 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 499 'alloca' 'quantized_final_outp_65' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 500 [1/1] (0.00ns)   --->   "%quantized_final_outp_66 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 500 'alloca' 'quantized_final_outp_66' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 501 [1/1] (0.00ns)   --->   "%quantized_final_outp_67 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 501 'alloca' 'quantized_final_outp_67' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 502 [1/1] (0.00ns)   --->   "%quantized_final_outp_68 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 502 'alloca' 'quantized_final_outp_68' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 503 [1/1] (0.00ns)   --->   "%quantized_final_outp_69 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 503 'alloca' 'quantized_final_outp_69' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 504 [1/1] (0.00ns)   --->   "%quantized_final_outp_70 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 504 'alloca' 'quantized_final_outp_70' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 505 [1/1] (0.00ns)   --->   "%quantized_final_outp_71 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 505 'alloca' 'quantized_final_outp_71' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 506 [1/1] (0.00ns)   --->   "%quantized_final_outp_72 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 506 'alloca' 'quantized_final_outp_72' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 507 [1/1] (0.00ns)   --->   "%quantized_final_outp_73 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 507 'alloca' 'quantized_final_outp_73' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 508 [1/1] (0.00ns)   --->   "%quantized_final_outp_74 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 508 'alloca' 'quantized_final_outp_74' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 509 [1/1] (0.00ns)   --->   "%quantized_final_outp_75 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 509 'alloca' 'quantized_final_outp_75' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 510 [1/1] (0.00ns)   --->   "%quantized_final_outp_76 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 510 'alloca' 'quantized_final_outp_76' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 511 [1/1] (0.00ns)   --->   "%quantized_final_outp_77 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 511 'alloca' 'quantized_final_outp_77' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 512 [1/1] (0.00ns)   --->   "%quantized_final_outp_78 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 512 'alloca' 'quantized_final_outp_78' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 513 [1/1] (0.00ns)   --->   "%quantized_final_outp_79 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 513 'alloca' 'quantized_final_outp_79' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 514 [1/1] (0.00ns)   --->   "%quantized_final_outp_80 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 514 'alloca' 'quantized_final_outp_80' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 515 [1/1] (0.00ns)   --->   "%quantized_final_outp_81 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 515 'alloca' 'quantized_final_outp_81' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 516 [1/1] (0.00ns)   --->   "%quantized_final_outp_82 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 516 'alloca' 'quantized_final_outp_82' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 517 [1/1] (0.00ns)   --->   "%quantized_final_outp_83 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 517 'alloca' 'quantized_final_outp_83' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 518 [1/1] (0.00ns)   --->   "%quantized_final_outp_84 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 518 'alloca' 'quantized_final_outp_84' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 519 [1/1] (0.00ns)   --->   "%quantized_final_outp_85 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 519 'alloca' 'quantized_final_outp_85' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 520 [1/1] (0.00ns)   --->   "%quantized_final_outp_86 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 520 'alloca' 'quantized_final_outp_86' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 521 [1/1] (0.00ns)   --->   "%quantized_final_outp_87 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 521 'alloca' 'quantized_final_outp_87' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 522 [1/1] (0.00ns)   --->   "%quantized_final_outp_88 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 522 'alloca' 'quantized_final_outp_88' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 523 [1/1] (0.00ns)   --->   "%quantized_final_outp_89 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 523 'alloca' 'quantized_final_outp_89' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 524 [1/1] (0.00ns)   --->   "%quantized_final_outp_90 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 524 'alloca' 'quantized_final_outp_90' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 525 [1/1] (0.00ns)   --->   "%quantized_final_outp_91 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 525 'alloca' 'quantized_final_outp_91' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 526 [1/1] (0.00ns)   --->   "%quantized_final_outp_92 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 526 'alloca' 'quantized_final_outp_92' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 527 [1/1] (0.00ns)   --->   "%quantized_final_outp_93 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 527 'alloca' 'quantized_final_outp_93' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 528 [1/1] (0.00ns)   --->   "%quantized_final_outp_94 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 528 'alloca' 'quantized_final_outp_94' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 529 [1/1] (0.00ns)   --->   "%quantized_final_outp_95 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 529 'alloca' 'quantized_final_outp_95' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 530 [1/1] (0.00ns)   --->   "%quantized_final_outp_96 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 530 'alloca' 'quantized_final_outp_96' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 531 [1/1] (0.00ns)   --->   "%quantized_final_outp_97 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 531 'alloca' 'quantized_final_outp_97' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 532 [1/1] (0.00ns)   --->   "%quantized_final_outp_98 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 532 'alloca' 'quantized_final_outp_98' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 533 [1/1] (0.00ns)   --->   "%quantized_final_outp_99 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 533 'alloca' 'quantized_final_outp_99' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 534 [1/1] (0.00ns)   --->   "%quantized_final_outp_100 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 534 'alloca' 'quantized_final_outp_100' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 535 [1/1] (0.00ns)   --->   "%quantized_final_outp_101 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 535 'alloca' 'quantized_final_outp_101' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 536 [1/1] (0.00ns)   --->   "%quantized_final_outp_102 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 536 'alloca' 'quantized_final_outp_102' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 537 [1/1] (0.00ns)   --->   "%quantized_final_outp_103 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 537 'alloca' 'quantized_final_outp_103' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 538 [1/1] (0.00ns)   --->   "%quantized_final_outp_104 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 538 'alloca' 'quantized_final_outp_104' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 539 [1/1] (0.00ns)   --->   "%quantized_final_outp_105 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 539 'alloca' 'quantized_final_outp_105' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 540 [1/1] (0.00ns)   --->   "%quantized_final_outp_106 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 540 'alloca' 'quantized_final_outp_106' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 541 [1/1] (0.00ns)   --->   "%quantized_final_outp_107 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 541 'alloca' 'quantized_final_outp_107' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 542 [1/1] (0.00ns)   --->   "%quantized_final_outp_108 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 542 'alloca' 'quantized_final_outp_108' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 543 [1/1] (0.00ns)   --->   "%quantized_final_outp_109 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 543 'alloca' 'quantized_final_outp_109' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 544 [1/1] (0.00ns)   --->   "%quantized_final_outp_110 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 544 'alloca' 'quantized_final_outp_110' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 545 [1/1] (0.00ns)   --->   "%quantized_final_outp_111 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 545 'alloca' 'quantized_final_outp_111' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 546 [1/1] (0.00ns)   --->   "%quantized_final_outp_112 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 546 'alloca' 'quantized_final_outp_112' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 547 [1/1] (0.00ns)   --->   "%quantized_final_outp_113 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 547 'alloca' 'quantized_final_outp_113' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 548 [1/1] (0.00ns)   --->   "%quantized_final_outp_114 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 548 'alloca' 'quantized_final_outp_114' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 549 [1/1] (0.00ns)   --->   "%quantized_final_outp_115 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 549 'alloca' 'quantized_final_outp_115' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 550 [1/1] (0.00ns)   --->   "%quantized_final_outp_116 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 550 'alloca' 'quantized_final_outp_116' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 551 [1/1] (0.00ns)   --->   "%quantized_final_outp_117 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 551 'alloca' 'quantized_final_outp_117' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 552 [1/1] (0.00ns)   --->   "%quantized_final_outp_118 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 552 'alloca' 'quantized_final_outp_118' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 553 [1/1] (0.00ns)   --->   "%quantized_final_outp_119 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 553 'alloca' 'quantized_final_outp_119' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 554 [1/1] (0.00ns)   --->   "%quantized_final_outp_120 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 554 'alloca' 'quantized_final_outp_120' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 555 [1/1] (0.00ns)   --->   "%quantized_final_outp_121 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 555 'alloca' 'quantized_final_outp_121' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 556 [1/1] (0.00ns)   --->   "%quantized_final_outp_122 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 556 'alloca' 'quantized_final_outp_122' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 557 [1/1] (0.00ns)   --->   "%quantized_final_outp_123 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 557 'alloca' 'quantized_final_outp_123' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 558 [1/1] (0.00ns)   --->   "%quantized_final_outp_124 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 558 'alloca' 'quantized_final_outp_124' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 559 [1/1] (0.00ns)   --->   "%quantized_final_outp_125 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 559 'alloca' 'quantized_final_outp_125' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 560 [1/1] (0.00ns)   --->   "%quantized_final_outp_126 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 560 'alloca' 'quantized_final_outp_126' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 561 [1/1] (0.00ns)   --->   "%quantized_final_outp_127 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 561 'alloca' 'quantized_final_outp_127' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 562 [1/1] (0.00ns)   --->   "%quantized_final_outp_128 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 562 'alloca' 'quantized_final_outp_128' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 563 [1/1] (0.00ns)   --->   "%quantized_final_outp_129 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 563 'alloca' 'quantized_final_outp_129' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 564 [1/1] (0.00ns)   --->   "%quantized_final_outp_130 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 564 'alloca' 'quantized_final_outp_130' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 565 [1/1] (0.00ns)   --->   "%quantized_final_outp_131 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 565 'alloca' 'quantized_final_outp_131' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 566 [1/1] (0.00ns)   --->   "%quantized_final_outp_132 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 566 'alloca' 'quantized_final_outp_132' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 567 [1/1] (0.00ns)   --->   "%quantized_final_outp_133 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 567 'alloca' 'quantized_final_outp_133' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 568 [1/1] (0.00ns)   --->   "%quantized_final_outp_134 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 568 'alloca' 'quantized_final_outp_134' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 569 [1/1] (0.00ns)   --->   "%quantized_final_outp_135 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 569 'alloca' 'quantized_final_outp_135' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 570 [1/1] (0.00ns)   --->   "%quantized_final_outp_136 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 570 'alloca' 'quantized_final_outp_136' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 571 [1/1] (0.00ns)   --->   "%quantized_final_outp_137 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 571 'alloca' 'quantized_final_outp_137' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 572 [1/1] (0.00ns)   --->   "%quantized_final_outp_138 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 572 'alloca' 'quantized_final_outp_138' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 573 [1/1] (0.00ns)   --->   "%quantized_final_outp_139 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 573 'alloca' 'quantized_final_outp_139' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 574 [1/1] (0.00ns)   --->   "%quantized_final_outp_140 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 574 'alloca' 'quantized_final_outp_140' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 575 [1/1] (0.00ns)   --->   "%quantized_final_outp_141 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 575 'alloca' 'quantized_final_outp_141' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 576 [1/1] (0.00ns)   --->   "%quantized_final_outp_142 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 576 'alloca' 'quantized_final_outp_142' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 577 [1/1] (0.00ns)   --->   "%quantized_final_outp_143 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 577 'alloca' 'quantized_final_outp_143' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 578 [1/1] (0.00ns)   --->   "%quantized_final_outp_144 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 578 'alloca' 'quantized_final_outp_144' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 579 [1/1] (0.00ns)   --->   "%quantized_final_outp_145 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 579 'alloca' 'quantized_final_outp_145' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 580 [1/1] (0.00ns)   --->   "%quantized_final_outp_146 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 580 'alloca' 'quantized_final_outp_146' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 581 [1/1] (0.00ns)   --->   "%quantized_final_outp_147 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 581 'alloca' 'quantized_final_outp_147' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 582 [1/1] (0.00ns)   --->   "%quantized_final_outp_148 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 582 'alloca' 'quantized_final_outp_148' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 583 [1/1] (0.00ns)   --->   "%quantized_final_outp_149 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 583 'alloca' 'quantized_final_outp_149' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 584 [1/1] (0.00ns)   --->   "%quantized_final_outp_150 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 584 'alloca' 'quantized_final_outp_150' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 585 [1/1] (0.00ns)   --->   "%quantized_final_outp_151 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 585 'alloca' 'quantized_final_outp_151' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 586 [1/1] (0.00ns)   --->   "%quantized_final_outp_152 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 586 'alloca' 'quantized_final_outp_152' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 587 [1/1] (0.00ns)   --->   "%quantized_final_outp_153 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 587 'alloca' 'quantized_final_outp_153' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 588 [1/1] (0.00ns)   --->   "%quantized_final_outp_154 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 588 'alloca' 'quantized_final_outp_154' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 589 [1/1] (0.00ns)   --->   "%quantized_final_outp_155 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 589 'alloca' 'quantized_final_outp_155' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 590 [1/1] (0.00ns)   --->   "%quantized_final_outp_156 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 590 'alloca' 'quantized_final_outp_156' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 591 [1/1] (0.00ns)   --->   "%quantized_final_outp_157 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 591 'alloca' 'quantized_final_outp_157' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 592 [1/1] (0.00ns)   --->   "%quantized_final_outp_158 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 592 'alloca' 'quantized_final_outp_158' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 593 [1/1] (0.00ns)   --->   "%quantized_final_outp_159 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 593 'alloca' 'quantized_final_outp_159' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 594 [1/1] (0.00ns)   --->   "%quantized_final_outp_160 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 594 'alloca' 'quantized_final_outp_160' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 595 [1/1] (0.00ns)   --->   "%quantized_final_outp_161 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 595 'alloca' 'quantized_final_outp_161' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 596 [1/1] (0.00ns)   --->   "%quantized_final_outp_162 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 596 'alloca' 'quantized_final_outp_162' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 597 [1/1] (0.00ns)   --->   "%quantized_final_outp_163 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 597 'alloca' 'quantized_final_outp_163' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 598 [1/1] (0.00ns)   --->   "%quantized_final_outp_164 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 598 'alloca' 'quantized_final_outp_164' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 599 [1/1] (0.00ns)   --->   "%quantized_final_outp_165 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 599 'alloca' 'quantized_final_outp_165' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 600 [1/1] (0.00ns)   --->   "%quantized_final_outp_166 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 600 'alloca' 'quantized_final_outp_166' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 601 [1/1] (0.00ns)   --->   "%quantized_final_outp_167 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 601 'alloca' 'quantized_final_outp_167' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 602 [1/1] (0.00ns)   --->   "%quantized_final_outp_168 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 602 'alloca' 'quantized_final_outp_168' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 603 [1/1] (0.00ns)   --->   "%quantized_final_outp_169 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 603 'alloca' 'quantized_final_outp_169' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 604 [1/1] (0.00ns)   --->   "%quantized_final_outp_170 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 604 'alloca' 'quantized_final_outp_170' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 605 [1/1] (0.00ns)   --->   "%quantized_final_outp_171 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 605 'alloca' 'quantized_final_outp_171' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 606 [1/1] (0.00ns)   --->   "%quantized_final_outp_172 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 606 'alloca' 'quantized_final_outp_172' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 607 [1/1] (0.00ns)   --->   "%quantized_final_outp_173 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 607 'alloca' 'quantized_final_outp_173' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 608 [1/1] (0.00ns)   --->   "%quantized_final_outp_174 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 608 'alloca' 'quantized_final_outp_174' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 609 [1/1] (0.00ns)   --->   "%quantized_final_outp_175 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 609 'alloca' 'quantized_final_outp_175' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 610 [1/1] (0.00ns)   --->   "%quantized_final_outp_176 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 610 'alloca' 'quantized_final_outp_176' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 611 [1/1] (0.00ns)   --->   "%quantized_final_outp_177 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 611 'alloca' 'quantized_final_outp_177' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 612 [1/1] (0.00ns)   --->   "%quantized_final_outp_178 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 612 'alloca' 'quantized_final_outp_178' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 613 [1/1] (0.00ns)   --->   "%quantized_final_outp_179 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 613 'alloca' 'quantized_final_outp_179' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 614 [1/1] (0.00ns)   --->   "%quantized_final_outp_180 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 614 'alloca' 'quantized_final_outp_180' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 615 [1/1] (0.00ns)   --->   "%quantized_final_outp_181 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 615 'alloca' 'quantized_final_outp_181' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 616 [1/1] (0.00ns)   --->   "%quantized_final_outp_182 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 616 'alloca' 'quantized_final_outp_182' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 617 [1/1] (0.00ns)   --->   "%quantized_final_outp_183 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 617 'alloca' 'quantized_final_outp_183' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 618 [1/1] (0.00ns)   --->   "%quantized_final_outp_184 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 618 'alloca' 'quantized_final_outp_184' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 619 [1/1] (0.00ns)   --->   "%quantized_final_outp_185 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 619 'alloca' 'quantized_final_outp_185' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 620 [1/1] (0.00ns)   --->   "%quantized_final_outp_186 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 620 'alloca' 'quantized_final_outp_186' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 621 [1/1] (0.00ns)   --->   "%quantized_final_outp_187 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 621 'alloca' 'quantized_final_outp_187' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 622 [1/1] (0.00ns)   --->   "%quantized_final_outp_188 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 622 'alloca' 'quantized_final_outp_188' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 623 [1/1] (0.00ns)   --->   "%quantized_final_outp_189 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 623 'alloca' 'quantized_final_outp_189' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 624 [1/1] (0.00ns)   --->   "%quantized_final_outp_190 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 624 'alloca' 'quantized_final_outp_190' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 625 [1/1] (0.00ns)   --->   "%quantized_final_outp_191 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 625 'alloca' 'quantized_final_outp_191' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 626 [1/1] (0.00ns)   --->   "%quantized_final_outp_192 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 626 'alloca' 'quantized_final_outp_192' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 627 [1/1] (0.00ns)   --->   "%quantized_final_outp_193 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 627 'alloca' 'quantized_final_outp_193' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 628 [1/1] (0.00ns)   --->   "%quantized_final_outp_194 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 628 'alloca' 'quantized_final_outp_194' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 629 [1/1] (0.00ns)   --->   "%quantized_final_outp_195 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 629 'alloca' 'quantized_final_outp_195' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 630 [1/1] (0.00ns)   --->   "%quantized_final_outp_196 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 630 'alloca' 'quantized_final_outp_196' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 631 [1/1] (0.00ns)   --->   "%quantized_final_outp_197 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 631 'alloca' 'quantized_final_outp_197' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 632 [1/1] (0.00ns)   --->   "%quantized_final_outp_198 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 632 'alloca' 'quantized_final_outp_198' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 633 [1/1] (0.00ns)   --->   "%quantized_final_outp_199 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 633 'alloca' 'quantized_final_outp_199' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 634 [1/1] (0.00ns)   --->   "%quantized_final_outp_200 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 634 'alloca' 'quantized_final_outp_200' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 635 [1/1] (0.00ns)   --->   "%quantized_final_outp_201 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 635 'alloca' 'quantized_final_outp_201' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 636 [1/1] (0.00ns)   --->   "%quantized_final_outp_202 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 636 'alloca' 'quantized_final_outp_202' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 637 [1/1] (0.00ns)   --->   "%quantized_final_outp_203 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 637 'alloca' 'quantized_final_outp_203' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 638 [1/1] (0.00ns)   --->   "%quantized_final_outp_204 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 638 'alloca' 'quantized_final_outp_204' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 639 [1/1] (0.00ns)   --->   "%quantized_final_outp_205 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 639 'alloca' 'quantized_final_outp_205' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 640 [1/1] (0.00ns)   --->   "%quantized_final_outp_206 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 640 'alloca' 'quantized_final_outp_206' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 641 [1/1] (0.00ns)   --->   "%quantized_final_outp_207 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 641 'alloca' 'quantized_final_outp_207' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 642 [1/1] (0.00ns)   --->   "%quantized_final_outp_208 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 642 'alloca' 'quantized_final_outp_208' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 643 [1/1] (0.00ns)   --->   "%quantized_final_outp_209 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 643 'alloca' 'quantized_final_outp_209' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 644 [1/1] (0.00ns)   --->   "%quantized_final_outp_210 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 644 'alloca' 'quantized_final_outp_210' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 645 [1/1] (0.00ns)   --->   "%quantized_final_outp_211 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 645 'alloca' 'quantized_final_outp_211' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 646 [1/1] (0.00ns)   --->   "%quantized_final_outp_212 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 646 'alloca' 'quantized_final_outp_212' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 647 [1/1] (0.00ns)   --->   "%quantized_final_outp_213 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 647 'alloca' 'quantized_final_outp_213' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 648 [1/1] (0.00ns)   --->   "%quantized_final_outp_214 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 648 'alloca' 'quantized_final_outp_214' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 649 [1/1] (0.00ns)   --->   "%quantized_final_outp_215 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 649 'alloca' 'quantized_final_outp_215' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 650 [1/1] (0.00ns)   --->   "%quantized_final_outp_216 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 650 'alloca' 'quantized_final_outp_216' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 651 [1/1] (0.00ns)   --->   "%quantized_final_outp_217 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 651 'alloca' 'quantized_final_outp_217' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 652 [1/1] (0.00ns)   --->   "%quantized_final_outp_218 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 652 'alloca' 'quantized_final_outp_218' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 653 [1/1] (0.00ns)   --->   "%quantized_final_outp_219 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 653 'alloca' 'quantized_final_outp_219' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 654 [1/1] (0.00ns)   --->   "%quantized_final_outp_220 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 654 'alloca' 'quantized_final_outp_220' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 655 [1/1] (0.00ns)   --->   "%quantized_final_outp_221 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 655 'alloca' 'quantized_final_outp_221' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 656 [1/1] (0.00ns)   --->   "%quantized_final_outp_222 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 656 'alloca' 'quantized_final_outp_222' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 657 [1/1] (0.00ns)   --->   "%quantized_final_outp_223 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 657 'alloca' 'quantized_final_outp_223' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 658 [1/1] (0.00ns)   --->   "%quantized_final_outp_224 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 658 'alloca' 'quantized_final_outp_224' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 659 [1/1] (0.00ns)   --->   "%quantized_final_outp_225 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 659 'alloca' 'quantized_final_outp_225' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 660 [1/1] (0.00ns)   --->   "%quantized_final_outp_226 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 660 'alloca' 'quantized_final_outp_226' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 661 [1/1] (0.00ns)   --->   "%quantized_final_outp_227 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 661 'alloca' 'quantized_final_outp_227' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 662 [1/1] (0.00ns)   --->   "%quantized_final_outp_228 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 662 'alloca' 'quantized_final_outp_228' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 663 [1/1] (0.00ns)   --->   "%quantized_final_outp_229 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 663 'alloca' 'quantized_final_outp_229' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 664 [1/1] (0.00ns)   --->   "%quantized_final_outp_230 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 664 'alloca' 'quantized_final_outp_230' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 665 [1/1] (0.00ns)   --->   "%quantized_final_outp_231 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 665 'alloca' 'quantized_final_outp_231' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 666 [1/1] (0.00ns)   --->   "%quantized_final_outp_232 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 666 'alloca' 'quantized_final_outp_232' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 667 [1/1] (0.00ns)   --->   "%quantized_final_outp_233 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 667 'alloca' 'quantized_final_outp_233' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 668 [1/1] (0.00ns)   --->   "%quantized_final_outp_234 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 668 'alloca' 'quantized_final_outp_234' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 669 [1/1] (0.00ns)   --->   "%quantized_final_outp_235 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 669 'alloca' 'quantized_final_outp_235' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 670 [1/1] (0.00ns)   --->   "%quantized_final_outp_236 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 670 'alloca' 'quantized_final_outp_236' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 671 [1/1] (0.00ns)   --->   "%quantized_final_outp_237 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 671 'alloca' 'quantized_final_outp_237' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 672 [1/1] (0.00ns)   --->   "%quantized_final_outp_238 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 672 'alloca' 'quantized_final_outp_238' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 673 [1/1] (0.00ns)   --->   "%quantized_final_outp_239 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 673 'alloca' 'quantized_final_outp_239' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 674 [1/1] (0.00ns)   --->   "%quantized_final_outp_240 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 674 'alloca' 'quantized_final_outp_240' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 675 [1/1] (0.00ns)   --->   "%quantized_final_outp_241 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 675 'alloca' 'quantized_final_outp_241' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 676 [1/1] (0.00ns)   --->   "%quantized_final_outp_242 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 676 'alloca' 'quantized_final_outp_242' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 677 [1/1] (0.00ns)   --->   "%quantized_final_outp_243 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 677 'alloca' 'quantized_final_outp_243' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 678 [1/1] (0.00ns)   --->   "%quantized_final_outp_244 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 678 'alloca' 'quantized_final_outp_244' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 679 [1/1] (0.00ns)   --->   "%quantized_final_outp_245 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 679 'alloca' 'quantized_final_outp_245' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 680 [1/1] (0.00ns)   --->   "%quantized_final_outp_246 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 680 'alloca' 'quantized_final_outp_246' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 681 [1/1] (0.00ns)   --->   "%quantized_final_outp_247 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 681 'alloca' 'quantized_final_outp_247' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 682 [1/1] (0.00ns)   --->   "%quantized_final_outp_248 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 682 'alloca' 'quantized_final_outp_248' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 683 [1/1] (0.00ns)   --->   "%quantized_final_outp_249 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 683 'alloca' 'quantized_final_outp_249' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 684 [1/1] (0.00ns)   --->   "%quantized_final_outp_250 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 684 'alloca' 'quantized_final_outp_250' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 685 [1/1] (0.00ns)   --->   "%quantized_final_outp_251 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 685 'alloca' 'quantized_final_outp_251' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 686 [1/1] (0.00ns)   --->   "%quantized_final_outp_252 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 686 'alloca' 'quantized_final_outp_252' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 687 [1/1] (0.00ns)   --->   "%quantized_final_outp_253 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 687 'alloca' 'quantized_final_outp_253' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 688 [1/1] (0.00ns)   --->   "%quantized_final_outp_254 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 688 'alloca' 'quantized_final_outp_254' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 689 [1/1] (0.00ns)   --->   "%quantized_final_outp_255 = alloca [6 x i8], align 1" [attention.cpp:222]   --->   Operation 689 'alloca' 'quantized_final_outp_255' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 690 [2/2] (1.76ns)   --->   "call fastcc void @"rms_norm<1536>"([1536 x i40]* %hidden_states_0_V, [1536 x i40]* @ln_weight_in_V)" [attention.cpp:85]   --->   Operation 690 'call' <Predicate = true> <Delay = 1.76> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 691 [2/2] (1.86ns)   --->   "call fastcc void @init_2d_mem([1536 x i40]* %q_proj_re_0_V)" [attention.cpp:108]   --->   Operation 691 'call' <Predicate = true> <Delay = 1.86> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 692 [2/2] (1.86ns)   --->   "call fastcc void @init_2d_mem([1536 x i40]* %k_proj_re_0_V)" [attention.cpp:109]   --->   Operation 692 'call' <Predicate = true> <Delay = 1.86> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 693 [2/2] (1.86ns)   --->   "call fastcc void @init_2d_mem([1536 x i40]* %v_proj_re_0_V)" [attention.cpp:110]   --->   Operation 693 'call' <Predicate = true> <Delay = 1.86> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 2 <SV = 1> <Delay = 0.00>
ST_2 : Operation 694 [1/2] (0.00ns)   --->   "call fastcc void @"rms_norm<1536>"([1536 x i40]* %hidden_states_0_V, [1536 x i40]* @ln_weight_in_V)" [attention.cpp:85]   --->   Operation 694 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 695 [1/2] (0.00ns)   --->   "call fastcc void @init_2d_mem([1536 x i40]* %q_proj_re_0_V)" [attention.cpp:108]   --->   Operation 695 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 696 [1/2] (0.00ns)   --->   "call fastcc void @init_2d_mem([1536 x i40]* %k_proj_re_0_V)" [attention.cpp:109]   --->   Operation 696 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 697 [1/2] (0.00ns)   --->   "call fastcc void @init_2d_mem([1536 x i40]* %v_proj_re_0_V)" [attention.cpp:110]   --->   Operation 697 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 3 <SV = 2> <Delay = 1.76>
ST_3 : Operation 698 [2/2] (1.76ns)   --->   "%scales_0_V = call fastcc i40 @quantize_activation([1536 x i40]* %hidden_states_0_V, [6 x i8]* %quantized_hidden_sta, [6 x i8]* %quantized_hidden_sta_1, [6 x i8]* %quantized_hidden_sta_2, [6 x i8]* %quantized_hidden_sta_3, [6 x i8]* %quantized_hidden_sta_4, [6 x i8]* %quantized_hidden_sta_5, [6 x i8]* %quantized_hidden_sta_6, [6 x i8]* %quantized_hidden_sta_7, [6 x i8]* %quantized_hidden_sta_8, [6 x i8]* %quantized_hidden_sta_9, [6 x i8]* %quantized_hidden_sta_10, [6 x i8]* %quantized_hidden_sta_11, [6 x i8]* %quantized_hidden_sta_12, [6 x i8]* %quantized_hidden_sta_13, [6 x i8]* %quantized_hidden_sta_14, [6 x i8]* %quantized_hidden_sta_15, [6 x i8]* %quantized_hidden_sta_16, [6 x i8]* %quantized_hidden_sta_17, [6 x i8]* %quantized_hidden_sta_18, [6 x i8]* %quantized_hidden_sta_19, [6 x i8]* %quantized_hidden_sta_20, [6 x i8]* %quantized_hidden_sta_21, [6 x i8]* %quantized_hidden_sta_22, [6 x i8]* %quantized_hidden_sta_23, [6 x i8]* %quantized_hidden_sta_24, [6 x i8]* %quantized_hidden_sta_25, [6 x i8]* %quantized_hidden_sta_26, [6 x i8]* %quantized_hidden_sta_27, [6 x i8]* %quantized_hidden_sta_28, [6 x i8]* %quantized_hidden_sta_29, [6 x i8]* %quantized_hidden_sta_30, [6 x i8]* %quantized_hidden_sta_31, [6 x i8]* %quantized_hidden_sta_32, [6 x i8]* %quantized_hidden_sta_33, [6 x i8]* %quantized_hidden_sta_34, [6 x i8]* %quantized_hidden_sta_35, [6 x i8]* %quantized_hidden_sta_36, [6 x i8]* %quantized_hidden_sta_37, [6 x i8]* %quantized_hidden_sta_38, [6 x i8]* %quantized_hidden_sta_39, [6 x i8]* %quantized_hidden_sta_40, [6 x i8]* %quantized_hidden_sta_41, [6 x i8]* %quantized_hidden_sta_42, [6 x i8]* %quantized_hidden_sta_43, [6 x i8]* %quantized_hidden_sta_44, [6 x i8]* %quantized_hidden_sta_45, [6 x i8]* %quantized_hidden_sta_46, [6 x i8]* %quantized_hidden_sta_47, [6 x i8]* %quantized_hidden_sta_48, [6 x i8]* %quantized_hidden_sta_49, [6 x i8]* %quantized_hidden_sta_50, [6 x i8]* %quantized_hidden_sta_51, [6 x i8]* %quantized_hidden_sta_52, [6 x i8]* %quantized_hidden_sta_53, [6 x i8]* %quantized_hidden_sta_54, [6 x i8]* %quantized_hidden_sta_55, [6 x i8]* %quantized_hidden_sta_56, [6 x i8]* %quantized_hidden_sta_57, [6 x i8]* %quantized_hidden_sta_58, [6 x i8]* %quantized_hidden_sta_59, [6 x i8]* %quantized_hidden_sta_60, [6 x i8]* %quantized_hidden_sta_61, [6 x i8]* %quantized_hidden_sta_62, [6 x i8]* %quantized_hidden_sta_63, [6 x i8]* %quantized_hidden_sta_64, [6 x i8]* %quantized_hidden_sta_65, [6 x i8]* %quantized_hidden_sta_66, [6 x i8]* %quantized_hidden_sta_67, [6 x i8]* %quantized_hidden_sta_68, [6 x i8]* %quantized_hidden_sta_69, [6 x i8]* %quantized_hidden_sta_70, [6 x i8]* %quantized_hidden_sta_71, [6 x i8]* %quantized_hidden_sta_72, [6 x i8]* %quantized_hidden_sta_73, [6 x i8]* %quantized_hidden_sta_74, [6 x i8]* %quantized_hidden_sta_75, [6 x i8]* %quantized_hidden_sta_76, [6 x i8]* %quantized_hidden_sta_77, [6 x i8]* %quantized_hidden_sta_78, [6 x i8]* %quantized_hidden_sta_79, [6 x i8]* %quantized_hidden_sta_80, [6 x i8]* %quantized_hidden_sta_81, [6 x i8]* %quantized_hidden_sta_82, [6 x i8]* %quantized_hidden_sta_83, [6 x i8]* %quantized_hidden_sta_84, [6 x i8]* %quantized_hidden_sta_85, [6 x i8]* %quantized_hidden_sta_86, [6 x i8]* %quantized_hidden_sta_87, [6 x i8]* %quantized_hidden_sta_88, [6 x i8]* %quantized_hidden_sta_89, [6 x i8]* %quantized_hidden_sta_90, [6 x i8]* %quantized_hidden_sta_91, [6 x i8]* %quantized_hidden_sta_92, [6 x i8]* %quantized_hidden_sta_93, [6 x i8]* %quantized_hidden_sta_94, [6 x i8]* %quantized_hidden_sta_95, [6 x i8]* %quantized_hidden_sta_96, [6 x i8]* %quantized_hidden_sta_97, [6 x i8]* %quantized_hidden_sta_98, [6 x i8]* %quantized_hidden_sta_99, [6 x i8]* %quantized_hidden_sta_100, [6 x i8]* %quantized_hidden_sta_101, [6 x i8]* %quantized_hidden_sta_102, [6 x i8]* %quantized_hidden_sta_103, [6 x i8]* %quantized_hidden_sta_104, [6 x i8]* %quantized_hidden_sta_105, [6 x i8]* %quantized_hidden_sta_106, [6 x i8]* %quantized_hidden_sta_107, [6 x i8]* %quantized_hidden_sta_108, [6 x i8]* %quantized_hidden_sta_109, [6 x i8]* %quantized_hidden_sta_110, [6 x i8]* %quantized_hidden_sta_111, [6 x i8]* %quantized_hidden_sta_112, [6 x i8]* %quantized_hidden_sta_113, [6 x i8]* %quantized_hidden_sta_114, [6 x i8]* %quantized_hidden_sta_115, [6 x i8]* %quantized_hidden_sta_116, [6 x i8]* %quantized_hidden_sta_117, [6 x i8]* %quantized_hidden_sta_118, [6 x i8]* %quantized_hidden_sta_119, [6 x i8]* %quantized_hidden_sta_120, [6 x i8]* %quantized_hidden_sta_121, [6 x i8]* %quantized_hidden_sta_122, [6 x i8]* %quantized_hidden_sta_123, [6 x i8]* %quantized_hidden_sta_124, [6 x i8]* %quantized_hidden_sta_125, [6 x i8]* %quantized_hidden_sta_126, [6 x i8]* %quantized_hidden_sta_127, [6 x i8]* %quantized_hidden_sta_128, [6 x i8]* %quantized_hidden_sta_129, [6 x i8]* %quantized_hidden_sta_130, [6 x i8]* %quantized_hidden_sta_131, [6 x i8]* %quantized_hidden_sta_132, [6 x i8]* %quantized_hidden_sta_133, [6 x i8]* %quantized_hidden_sta_134, [6 x i8]* %quantized_hidden_sta_135, [6 x i8]* %quantized_hidden_sta_136, [6 x i8]* %quantized_hidden_sta_137, [6 x i8]* %quantized_hidden_sta_138, [6 x i8]* %quantized_hidden_sta_139, [6 x i8]* %quantized_hidden_sta_140, [6 x i8]* %quantized_hidden_sta_141, [6 x i8]* %quantized_hidden_sta_142, [6 x i8]* %quantized_hidden_sta_143, [6 x i8]* %quantized_hidden_sta_144, [6 x i8]* %quantized_hidden_sta_145, [6 x i8]* %quantized_hidden_sta_146, [6 x i8]* %quantized_hidden_sta_147, [6 x i8]* %quantized_hidden_sta_148, [6 x i8]* %quantized_hidden_sta_149, [6 x i8]* %quantized_hidden_sta_150, [6 x i8]* %quantized_hidden_sta_151, [6 x i8]* %quantized_hidden_sta_152, [6 x i8]* %quantized_hidden_sta_153, [6 x i8]* %quantized_hidden_sta_154, [6 x i8]* %quantized_hidden_sta_155, [6 x i8]* %quantized_hidden_sta_156, [6 x i8]* %quantized_hidden_sta_157, [6 x i8]* %quantized_hidden_sta_158, [6 x i8]* %quantized_hidden_sta_159, [6 x i8]* %quantized_hidden_sta_160, [6 x i8]* %quantized_hidden_sta_161, [6 x i8]* %quantized_hidden_sta_162, [6 x i8]* %quantized_hidden_sta_163, [6 x i8]* %quantized_hidden_sta_164, [6 x i8]* %quantized_hidden_sta_165, [6 x i8]* %quantized_hidden_sta_166, [6 x i8]* %quantized_hidden_sta_167, [6 x i8]* %quantized_hidden_sta_168, [6 x i8]* %quantized_hidden_sta_169, [6 x i8]* %quantized_hidden_sta_170, [6 x i8]* %quantized_hidden_sta_171, [6 x i8]* %quantized_hidden_sta_172, [6 x i8]* %quantized_hidden_sta_173, [6 x i8]* %quantized_hidden_sta_174, [6 x i8]* %quantized_hidden_sta_175, [6 x i8]* %quantized_hidden_sta_176, [6 x i8]* %quantized_hidden_sta_177, [6 x i8]* %quantized_hidden_sta_178, [6 x i8]* %quantized_hidden_sta_179, [6 x i8]* %quantized_hidden_sta_180, [6 x i8]* %quantized_hidden_sta_181, [6 x i8]* %quantized_hidden_sta_182, [6 x i8]* %quantized_hidden_sta_183, [6 x i8]* %quantized_hidden_sta_184, [6 x i8]* %quantized_hidden_sta_185, [6 x i8]* %quantized_hidden_sta_186, [6 x i8]* %quantized_hidden_sta_187, [6 x i8]* %quantized_hidden_sta_188, [6 x i8]* %quantized_hidden_sta_189, [6 x i8]* %quantized_hidden_sta_190, [6 x i8]* %quantized_hidden_sta_191, [6 x i8]* %quantized_hidden_sta_192, [6 x i8]* %quantized_hidden_sta_193, [6 x i8]* %quantized_hidden_sta_194, [6 x i8]* %quantized_hidden_sta_195, [6 x i8]* %quantized_hidden_sta_196, [6 x i8]* %quantized_hidden_sta_197, [6 x i8]* %quantized_hidden_sta_198, [6 x i8]* %quantized_hidden_sta_199, [6 x i8]* %quantized_hidden_sta_200, [6 x i8]* %quantized_hidden_sta_201, [6 x i8]* %quantized_hidden_sta_202, [6 x i8]* %quantized_hidden_sta_203, [6 x i8]* %quantized_hidden_sta_204, [6 x i8]* %quantized_hidden_sta_205, [6 x i8]* %quantized_hidden_sta_206, [6 x i8]* %quantized_hidden_sta_207, [6 x i8]* %quantized_hidden_sta_208, [6 x i8]* %quantized_hidden_sta_209, [6 x i8]* %quantized_hidden_sta_210, [6 x i8]* %quantized_hidden_sta_211, [6 x i8]* %quantized_hidden_sta_212, [6 x i8]* %quantized_hidden_sta_213, [6 x i8]* %quantized_hidden_sta_214, [6 x i8]* %quantized_hidden_sta_215, [6 x i8]* %quantized_hidden_sta_216, [6 x i8]* %quantized_hidden_sta_217, [6 x i8]* %quantized_hidden_sta_218, [6 x i8]* %quantized_hidden_sta_219, [6 x i8]* %quantized_hidden_sta_220, [6 x i8]* %quantized_hidden_sta_221, [6 x i8]* %quantized_hidden_sta_222, [6 x i8]* %quantized_hidden_sta_223, [6 x i8]* %quantized_hidden_sta_224, [6 x i8]* %quantized_hidden_sta_225, [6 x i8]* %quantized_hidden_sta_226, [6 x i8]* %quantized_hidden_sta_227, [6 x i8]* %quantized_hidden_sta_228, [6 x i8]* %quantized_hidden_sta_229, [6 x i8]* %quantized_hidden_sta_230, [6 x i8]* %quantized_hidden_sta_231, [6 x i8]* %quantized_hidden_sta_232, [6 x i8]* %quantized_hidden_sta_233, [6 x i8]* %quantized_hidden_sta_234, [6 x i8]* %quantized_hidden_sta_235, [6 x i8]* %quantized_hidden_sta_236, [6 x i8]* %quantized_hidden_sta_237, [6 x i8]* %quantized_hidden_sta_238, [6 x i8]* %quantized_hidden_sta_239, [6 x i8]* %quantized_hidden_sta_240, [6 x i8]* %quantized_hidden_sta_241, [6 x i8]* %quantized_hidden_sta_242, [6 x i8]* %quantized_hidden_sta_243, [6 x i8]* %quantized_hidden_sta_244, [6 x i8]* %quantized_hidden_sta_245, [6 x i8]* %quantized_hidden_sta_246, [6 x i8]* %quantized_hidden_sta_247, [6 x i8]* %quantized_hidden_sta_248, [6 x i8]* %quantized_hidden_sta_249, [6 x i8]* %quantized_hidden_sta_250, [6 x i8]* %quantized_hidden_sta_251, [6 x i8]* %quantized_hidden_sta_252, [6 x i8]* %quantized_hidden_sta_253, [6 x i8]* %quantized_hidden_sta_254, [6 x i8]* %quantized_hidden_sta_255)" [attention.cpp:96]   --->   Operation 698 'call' 'scales_0_V' <Predicate = true> <Delay = 1.76> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 0.00>
ST_4 : Operation 699 [1/2] (0.00ns)   --->   "%scales_0_V = call fastcc i40 @quantize_activation([1536 x i40]* %hidden_states_0_V, [6 x i8]* %quantized_hidden_sta, [6 x i8]* %quantized_hidden_sta_1, [6 x i8]* %quantized_hidden_sta_2, [6 x i8]* %quantized_hidden_sta_3, [6 x i8]* %quantized_hidden_sta_4, [6 x i8]* %quantized_hidden_sta_5, [6 x i8]* %quantized_hidden_sta_6, [6 x i8]* %quantized_hidden_sta_7, [6 x i8]* %quantized_hidden_sta_8, [6 x i8]* %quantized_hidden_sta_9, [6 x i8]* %quantized_hidden_sta_10, [6 x i8]* %quantized_hidden_sta_11, [6 x i8]* %quantized_hidden_sta_12, [6 x i8]* %quantized_hidden_sta_13, [6 x i8]* %quantized_hidden_sta_14, [6 x i8]* %quantized_hidden_sta_15, [6 x i8]* %quantized_hidden_sta_16, [6 x i8]* %quantized_hidden_sta_17, [6 x i8]* %quantized_hidden_sta_18, [6 x i8]* %quantized_hidden_sta_19, [6 x i8]* %quantized_hidden_sta_20, [6 x i8]* %quantized_hidden_sta_21, [6 x i8]* %quantized_hidden_sta_22, [6 x i8]* %quantized_hidden_sta_23, [6 x i8]* %quantized_hidden_sta_24, [6 x i8]* %quantized_hidden_sta_25, [6 x i8]* %quantized_hidden_sta_26, [6 x i8]* %quantized_hidden_sta_27, [6 x i8]* %quantized_hidden_sta_28, [6 x i8]* %quantized_hidden_sta_29, [6 x i8]* %quantized_hidden_sta_30, [6 x i8]* %quantized_hidden_sta_31, [6 x i8]* %quantized_hidden_sta_32, [6 x i8]* %quantized_hidden_sta_33, [6 x i8]* %quantized_hidden_sta_34, [6 x i8]* %quantized_hidden_sta_35, [6 x i8]* %quantized_hidden_sta_36, [6 x i8]* %quantized_hidden_sta_37, [6 x i8]* %quantized_hidden_sta_38, [6 x i8]* %quantized_hidden_sta_39, [6 x i8]* %quantized_hidden_sta_40, [6 x i8]* %quantized_hidden_sta_41, [6 x i8]* %quantized_hidden_sta_42, [6 x i8]* %quantized_hidden_sta_43, [6 x i8]* %quantized_hidden_sta_44, [6 x i8]* %quantized_hidden_sta_45, [6 x i8]* %quantized_hidden_sta_46, [6 x i8]* %quantized_hidden_sta_47, [6 x i8]* %quantized_hidden_sta_48, [6 x i8]* %quantized_hidden_sta_49, [6 x i8]* %quantized_hidden_sta_50, [6 x i8]* %quantized_hidden_sta_51, [6 x i8]* %quantized_hidden_sta_52, [6 x i8]* %quantized_hidden_sta_53, [6 x i8]* %quantized_hidden_sta_54, [6 x i8]* %quantized_hidden_sta_55, [6 x i8]* %quantized_hidden_sta_56, [6 x i8]* %quantized_hidden_sta_57, [6 x i8]* %quantized_hidden_sta_58, [6 x i8]* %quantized_hidden_sta_59, [6 x i8]* %quantized_hidden_sta_60, [6 x i8]* %quantized_hidden_sta_61, [6 x i8]* %quantized_hidden_sta_62, [6 x i8]* %quantized_hidden_sta_63, [6 x i8]* %quantized_hidden_sta_64, [6 x i8]* %quantized_hidden_sta_65, [6 x i8]* %quantized_hidden_sta_66, [6 x i8]* %quantized_hidden_sta_67, [6 x i8]* %quantized_hidden_sta_68, [6 x i8]* %quantized_hidden_sta_69, [6 x i8]* %quantized_hidden_sta_70, [6 x i8]* %quantized_hidden_sta_71, [6 x i8]* %quantized_hidden_sta_72, [6 x i8]* %quantized_hidden_sta_73, [6 x i8]* %quantized_hidden_sta_74, [6 x i8]* %quantized_hidden_sta_75, [6 x i8]* %quantized_hidden_sta_76, [6 x i8]* %quantized_hidden_sta_77, [6 x i8]* %quantized_hidden_sta_78, [6 x i8]* %quantized_hidden_sta_79, [6 x i8]* %quantized_hidden_sta_80, [6 x i8]* %quantized_hidden_sta_81, [6 x i8]* %quantized_hidden_sta_82, [6 x i8]* %quantized_hidden_sta_83, [6 x i8]* %quantized_hidden_sta_84, [6 x i8]* %quantized_hidden_sta_85, [6 x i8]* %quantized_hidden_sta_86, [6 x i8]* %quantized_hidden_sta_87, [6 x i8]* %quantized_hidden_sta_88, [6 x i8]* %quantized_hidden_sta_89, [6 x i8]* %quantized_hidden_sta_90, [6 x i8]* %quantized_hidden_sta_91, [6 x i8]* %quantized_hidden_sta_92, [6 x i8]* %quantized_hidden_sta_93, [6 x i8]* %quantized_hidden_sta_94, [6 x i8]* %quantized_hidden_sta_95, [6 x i8]* %quantized_hidden_sta_96, [6 x i8]* %quantized_hidden_sta_97, [6 x i8]* %quantized_hidden_sta_98, [6 x i8]* %quantized_hidden_sta_99, [6 x i8]* %quantized_hidden_sta_100, [6 x i8]* %quantized_hidden_sta_101, [6 x i8]* %quantized_hidden_sta_102, [6 x i8]* %quantized_hidden_sta_103, [6 x i8]* %quantized_hidden_sta_104, [6 x i8]* %quantized_hidden_sta_105, [6 x i8]* %quantized_hidden_sta_106, [6 x i8]* %quantized_hidden_sta_107, [6 x i8]* %quantized_hidden_sta_108, [6 x i8]* %quantized_hidden_sta_109, [6 x i8]* %quantized_hidden_sta_110, [6 x i8]* %quantized_hidden_sta_111, [6 x i8]* %quantized_hidden_sta_112, [6 x i8]* %quantized_hidden_sta_113, [6 x i8]* %quantized_hidden_sta_114, [6 x i8]* %quantized_hidden_sta_115, [6 x i8]* %quantized_hidden_sta_116, [6 x i8]* %quantized_hidden_sta_117, [6 x i8]* %quantized_hidden_sta_118, [6 x i8]* %quantized_hidden_sta_119, [6 x i8]* %quantized_hidden_sta_120, [6 x i8]* %quantized_hidden_sta_121, [6 x i8]* %quantized_hidden_sta_122, [6 x i8]* %quantized_hidden_sta_123, [6 x i8]* %quantized_hidden_sta_124, [6 x i8]* %quantized_hidden_sta_125, [6 x i8]* %quantized_hidden_sta_126, [6 x i8]* %quantized_hidden_sta_127, [6 x i8]* %quantized_hidden_sta_128, [6 x i8]* %quantized_hidden_sta_129, [6 x i8]* %quantized_hidden_sta_130, [6 x i8]* %quantized_hidden_sta_131, [6 x i8]* %quantized_hidden_sta_132, [6 x i8]* %quantized_hidden_sta_133, [6 x i8]* %quantized_hidden_sta_134, [6 x i8]* %quantized_hidden_sta_135, [6 x i8]* %quantized_hidden_sta_136, [6 x i8]* %quantized_hidden_sta_137, [6 x i8]* %quantized_hidden_sta_138, [6 x i8]* %quantized_hidden_sta_139, [6 x i8]* %quantized_hidden_sta_140, [6 x i8]* %quantized_hidden_sta_141, [6 x i8]* %quantized_hidden_sta_142, [6 x i8]* %quantized_hidden_sta_143, [6 x i8]* %quantized_hidden_sta_144, [6 x i8]* %quantized_hidden_sta_145, [6 x i8]* %quantized_hidden_sta_146, [6 x i8]* %quantized_hidden_sta_147, [6 x i8]* %quantized_hidden_sta_148, [6 x i8]* %quantized_hidden_sta_149, [6 x i8]* %quantized_hidden_sta_150, [6 x i8]* %quantized_hidden_sta_151, [6 x i8]* %quantized_hidden_sta_152, [6 x i8]* %quantized_hidden_sta_153, [6 x i8]* %quantized_hidden_sta_154, [6 x i8]* %quantized_hidden_sta_155, [6 x i8]* %quantized_hidden_sta_156, [6 x i8]* %quantized_hidden_sta_157, [6 x i8]* %quantized_hidden_sta_158, [6 x i8]* %quantized_hidden_sta_159, [6 x i8]* %quantized_hidden_sta_160, [6 x i8]* %quantized_hidden_sta_161, [6 x i8]* %quantized_hidden_sta_162, [6 x i8]* %quantized_hidden_sta_163, [6 x i8]* %quantized_hidden_sta_164, [6 x i8]* %quantized_hidden_sta_165, [6 x i8]* %quantized_hidden_sta_166, [6 x i8]* %quantized_hidden_sta_167, [6 x i8]* %quantized_hidden_sta_168, [6 x i8]* %quantized_hidden_sta_169, [6 x i8]* %quantized_hidden_sta_170, [6 x i8]* %quantized_hidden_sta_171, [6 x i8]* %quantized_hidden_sta_172, [6 x i8]* %quantized_hidden_sta_173, [6 x i8]* %quantized_hidden_sta_174, [6 x i8]* %quantized_hidden_sta_175, [6 x i8]* %quantized_hidden_sta_176, [6 x i8]* %quantized_hidden_sta_177, [6 x i8]* %quantized_hidden_sta_178, [6 x i8]* %quantized_hidden_sta_179, [6 x i8]* %quantized_hidden_sta_180, [6 x i8]* %quantized_hidden_sta_181, [6 x i8]* %quantized_hidden_sta_182, [6 x i8]* %quantized_hidden_sta_183, [6 x i8]* %quantized_hidden_sta_184, [6 x i8]* %quantized_hidden_sta_185, [6 x i8]* %quantized_hidden_sta_186, [6 x i8]* %quantized_hidden_sta_187, [6 x i8]* %quantized_hidden_sta_188, [6 x i8]* %quantized_hidden_sta_189, [6 x i8]* %quantized_hidden_sta_190, [6 x i8]* %quantized_hidden_sta_191, [6 x i8]* %quantized_hidden_sta_192, [6 x i8]* %quantized_hidden_sta_193, [6 x i8]* %quantized_hidden_sta_194, [6 x i8]* %quantized_hidden_sta_195, [6 x i8]* %quantized_hidden_sta_196, [6 x i8]* %quantized_hidden_sta_197, [6 x i8]* %quantized_hidden_sta_198, [6 x i8]* %quantized_hidden_sta_199, [6 x i8]* %quantized_hidden_sta_200, [6 x i8]* %quantized_hidden_sta_201, [6 x i8]* %quantized_hidden_sta_202, [6 x i8]* %quantized_hidden_sta_203, [6 x i8]* %quantized_hidden_sta_204, [6 x i8]* %quantized_hidden_sta_205, [6 x i8]* %quantized_hidden_sta_206, [6 x i8]* %quantized_hidden_sta_207, [6 x i8]* %quantized_hidden_sta_208, [6 x i8]* %quantized_hidden_sta_209, [6 x i8]* %quantized_hidden_sta_210, [6 x i8]* %quantized_hidden_sta_211, [6 x i8]* %quantized_hidden_sta_212, [6 x i8]* %quantized_hidden_sta_213, [6 x i8]* %quantized_hidden_sta_214, [6 x i8]* %quantized_hidden_sta_215, [6 x i8]* %quantized_hidden_sta_216, [6 x i8]* %quantized_hidden_sta_217, [6 x i8]* %quantized_hidden_sta_218, [6 x i8]* %quantized_hidden_sta_219, [6 x i8]* %quantized_hidden_sta_220, [6 x i8]* %quantized_hidden_sta_221, [6 x i8]* %quantized_hidden_sta_222, [6 x i8]* %quantized_hidden_sta_223, [6 x i8]* %quantized_hidden_sta_224, [6 x i8]* %quantized_hidden_sta_225, [6 x i8]* %quantized_hidden_sta_226, [6 x i8]* %quantized_hidden_sta_227, [6 x i8]* %quantized_hidden_sta_228, [6 x i8]* %quantized_hidden_sta_229, [6 x i8]* %quantized_hidden_sta_230, [6 x i8]* %quantized_hidden_sta_231, [6 x i8]* %quantized_hidden_sta_232, [6 x i8]* %quantized_hidden_sta_233, [6 x i8]* %quantized_hidden_sta_234, [6 x i8]* %quantized_hidden_sta_235, [6 x i8]* %quantized_hidden_sta_236, [6 x i8]* %quantized_hidden_sta_237, [6 x i8]* %quantized_hidden_sta_238, [6 x i8]* %quantized_hidden_sta_239, [6 x i8]* %quantized_hidden_sta_240, [6 x i8]* %quantized_hidden_sta_241, [6 x i8]* %quantized_hidden_sta_242, [6 x i8]* %quantized_hidden_sta_243, [6 x i8]* %quantized_hidden_sta_244, [6 x i8]* %quantized_hidden_sta_245, [6 x i8]* %quantized_hidden_sta_246, [6 x i8]* %quantized_hidden_sta_247, [6 x i8]* %quantized_hidden_sta_248, [6 x i8]* %quantized_hidden_sta_249, [6 x i8]* %quantized_hidden_sta_250, [6 x i8]* %quantized_hidden_sta_251, [6 x i8]* %quantized_hidden_sta_252, [6 x i8]* %quantized_hidden_sta_253, [6 x i8]* %quantized_hidden_sta_254, [6 x i8]* %quantized_hidden_sta_255)" [attention.cpp:96]   --->   Operation 699 'call' 'scales_0_V' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 4> <Delay = 8.75>
ST_5 : Operation 700 [2/2] (8.75ns)   --->   "call fastcc void @linear_forward_no_mu([6 x i8]* %quantized_hidden_sta, [6 x i8]* %quantized_hidden_sta_1, [6 x i8]* %quantized_hidden_sta_2, [6 x i8]* %quantized_hidden_sta_3, [6 x i8]* %quantized_hidden_sta_4, [6 x i8]* %quantized_hidden_sta_5, [6 x i8]* %quantized_hidden_sta_6, [6 x i8]* %quantized_hidden_sta_7, [6 x i8]* %quantized_hidden_sta_8, [6 x i8]* %quantized_hidden_sta_9, [6 x i8]* %quantized_hidden_sta_10, [6 x i8]* %quantized_hidden_sta_11, [6 x i8]* %quantized_hidden_sta_12, [6 x i8]* %quantized_hidden_sta_13, [6 x i8]* %quantized_hidden_sta_14, [6 x i8]* %quantized_hidden_sta_15, [6 x i8]* %quantized_hidden_sta_16, [6 x i8]* %quantized_hidden_sta_17, [6 x i8]* %quantized_hidden_sta_18, [6 x i8]* %quantized_hidden_sta_19, [6 x i8]* %quantized_hidden_sta_20, [6 x i8]* %quantized_hidden_sta_21, [6 x i8]* %quantized_hidden_sta_22, [6 x i8]* %quantized_hidden_sta_23, [6 x i8]* %quantized_hidden_sta_24, [6 x i8]* %quantized_hidden_sta_25, [6 x i8]* %quantized_hidden_sta_26, [6 x i8]* %quantized_hidden_sta_27, [6 x i8]* %quantized_hidden_sta_28, [6 x i8]* %quantized_hidden_sta_29, [6 x i8]* %quantized_hidden_sta_30, [6 x i8]* %quantized_hidden_sta_31, [6 x i8]* %quantized_hidden_sta_32, [6 x i8]* %quantized_hidden_sta_33, [6 x i8]* %quantized_hidden_sta_34, [6 x i8]* %quantized_hidden_sta_35, [6 x i8]* %quantized_hidden_sta_36, [6 x i8]* %quantized_hidden_sta_37, [6 x i8]* %quantized_hidden_sta_38, [6 x i8]* %quantized_hidden_sta_39, [6 x i8]* %quantized_hidden_sta_40, [6 x i8]* %quantized_hidden_sta_41, [6 x i8]* %quantized_hidden_sta_42, [6 x i8]* %quantized_hidden_sta_43, [6 x i8]* %quantized_hidden_sta_44, [6 x i8]* %quantized_hidden_sta_45, [6 x i8]* %quantized_hidden_sta_46, [6 x i8]* %quantized_hidden_sta_47, [6 x i8]* %quantized_hidden_sta_48, [6 x i8]* %quantized_hidden_sta_49, [6 x i8]* %quantized_hidden_sta_50, [6 x i8]* %quantized_hidden_sta_51, [6 x i8]* %quantized_hidden_sta_52, [6 x i8]* %quantized_hidden_sta_53, [6 x i8]* %quantized_hidden_sta_54, [6 x i8]* %quantized_hidden_sta_55, [6 x i8]* %quantized_hidden_sta_56, [6 x i8]* %quantized_hidden_sta_57, [6 x i8]* %quantized_hidden_sta_58, [6 x i8]* %quantized_hidden_sta_59, [6 x i8]* %quantized_hidden_sta_60, [6 x i8]* %quantized_hidden_sta_61, [6 x i8]* %quantized_hidden_sta_62, [6 x i8]* %quantized_hidden_sta_63, [6 x i8]* %quantized_hidden_sta_64, [6 x i8]* %quantized_hidden_sta_65, [6 x i8]* %quantized_hidden_sta_66, [6 x i8]* %quantized_hidden_sta_67, [6 x i8]* %quantized_hidden_sta_68, [6 x i8]* %quantized_hidden_sta_69, [6 x i8]* %quantized_hidden_sta_70, [6 x i8]* %quantized_hidden_sta_71, [6 x i8]* %quantized_hidden_sta_72, [6 x i8]* %quantized_hidden_sta_73, [6 x i8]* %quantized_hidden_sta_74, [6 x i8]* %quantized_hidden_sta_75, [6 x i8]* %quantized_hidden_sta_76, [6 x i8]* %quantized_hidden_sta_77, [6 x i8]* %quantized_hidden_sta_78, [6 x i8]* %quantized_hidden_sta_79, [6 x i8]* %quantized_hidden_sta_80, [6 x i8]* %quantized_hidden_sta_81, [6 x i8]* %quantized_hidden_sta_82, [6 x i8]* %quantized_hidden_sta_83, [6 x i8]* %quantized_hidden_sta_84, [6 x i8]* %quantized_hidden_sta_85, [6 x i8]* %quantized_hidden_sta_86, [6 x i8]* %quantized_hidden_sta_87, [6 x i8]* %quantized_hidden_sta_88, [6 x i8]* %quantized_hidden_sta_89, [6 x i8]* %quantized_hidden_sta_90, [6 x i8]* %quantized_hidden_sta_91, [6 x i8]* %quantized_hidden_sta_92, [6 x i8]* %quantized_hidden_sta_93, [6 x i8]* %quantized_hidden_sta_94, [6 x i8]* %quantized_hidden_sta_95, [6 x i8]* %quantized_hidden_sta_96, [6 x i8]* %quantized_hidden_sta_97, [6 x i8]* %quantized_hidden_sta_98, [6 x i8]* %quantized_hidden_sta_99, [6 x i8]* %quantized_hidden_sta_100, [6 x i8]* %quantized_hidden_sta_101, [6 x i8]* %quantized_hidden_sta_102, [6 x i8]* %quantized_hidden_sta_103, [6 x i8]* %quantized_hidden_sta_104, [6 x i8]* %quantized_hidden_sta_105, [6 x i8]* %quantized_hidden_sta_106, [6 x i8]* %quantized_hidden_sta_107, [6 x i8]* %quantized_hidden_sta_108, [6 x i8]* %quantized_hidden_sta_109, [6 x i8]* %quantized_hidden_sta_110, [6 x i8]* %quantized_hidden_sta_111, [6 x i8]* %quantized_hidden_sta_112, [6 x i8]* %quantized_hidden_sta_113, [6 x i8]* %quantized_hidden_sta_114, [6 x i8]* %quantized_hidden_sta_115, [6 x i8]* %quantized_hidden_sta_116, [6 x i8]* %quantized_hidden_sta_117, [6 x i8]* %quantized_hidden_sta_118, [6 x i8]* %quantized_hidden_sta_119, [6 x i8]* %quantized_hidden_sta_120, [6 x i8]* %quantized_hidden_sta_121, [6 x i8]* %quantized_hidden_sta_122, [6 x i8]* %quantized_hidden_sta_123, [6 x i8]* %quantized_hidden_sta_124, [6 x i8]* %quantized_hidden_sta_125, [6 x i8]* %quantized_hidden_sta_126, [6 x i8]* %quantized_hidden_sta_127, [6 x i8]* %quantized_hidden_sta_128, [6 x i8]* %quantized_hidden_sta_129, [6 x i8]* %quantized_hidden_sta_130, [6 x i8]* %quantized_hidden_sta_131, [6 x i8]* %quantized_hidden_sta_132, [6 x i8]* %quantized_hidden_sta_133, [6 x i8]* %quantized_hidden_sta_134, [6 x i8]* %quantized_hidden_sta_135, [6 x i8]* %quantized_hidden_sta_136, [6 x i8]* %quantized_hidden_sta_137, [6 x i8]* %quantized_hidden_sta_138, [6 x i8]* %quantized_hidden_sta_139, [6 x i8]* %quantized_hidden_sta_140, [6 x i8]* %quantized_hidden_sta_141, [6 x i8]* %quantized_hidden_sta_142, [6 x i8]* %quantized_hidden_sta_143, [6 x i8]* %quantized_hidden_sta_144, [6 x i8]* %quantized_hidden_sta_145, [6 x i8]* %quantized_hidden_sta_146, [6 x i8]* %quantized_hidden_sta_147, [6 x i8]* %quantized_hidden_sta_148, [6 x i8]* %quantized_hidden_sta_149, [6 x i8]* %quantized_hidden_sta_150, [6 x i8]* %quantized_hidden_sta_151, [6 x i8]* %quantized_hidden_sta_152, [6 x i8]* %quantized_hidden_sta_153, [6 x i8]* %quantized_hidden_sta_154, [6 x i8]* %quantized_hidden_sta_155, [6 x i8]* %quantized_hidden_sta_156, [6 x i8]* %quantized_hidden_sta_157, [6 x i8]* %quantized_hidden_sta_158, [6 x i8]* %quantized_hidden_sta_159, [6 x i8]* %quantized_hidden_sta_160, [6 x i8]* %quantized_hidden_sta_161, [6 x i8]* %quantized_hidden_sta_162, [6 x i8]* %quantized_hidden_sta_163, [6 x i8]* %quantized_hidden_sta_164, [6 x i8]* %quantized_hidden_sta_165, [6 x i8]* %quantized_hidden_sta_166, [6 x i8]* %quantized_hidden_sta_167, [6 x i8]* %quantized_hidden_sta_168, [6 x i8]* %quantized_hidden_sta_169, [6 x i8]* %quantized_hidden_sta_170, [6 x i8]* %quantized_hidden_sta_171, [6 x i8]* %quantized_hidden_sta_172, [6 x i8]* %quantized_hidden_sta_173, [6 x i8]* %quantized_hidden_sta_174, [6 x i8]* %quantized_hidden_sta_175, [6 x i8]* %quantized_hidden_sta_176, [6 x i8]* %quantized_hidden_sta_177, [6 x i8]* %quantized_hidden_sta_178, [6 x i8]* %quantized_hidden_sta_179, [6 x i8]* %quantized_hidden_sta_180, [6 x i8]* %quantized_hidden_sta_181, [6 x i8]* %quantized_hidden_sta_182, [6 x i8]* %quantized_hidden_sta_183, [6 x i8]* %quantized_hidden_sta_184, [6 x i8]* %quantized_hidden_sta_185, [6 x i8]* %quantized_hidden_sta_186, [6 x i8]* %quantized_hidden_sta_187, [6 x i8]* %quantized_hidden_sta_188, [6 x i8]* %quantized_hidden_sta_189, [6 x i8]* %quantized_hidden_sta_190, [6 x i8]* %quantized_hidden_sta_191, [6 x i8]* %quantized_hidden_sta_192, [6 x i8]* %quantized_hidden_sta_193, [6 x i8]* %quantized_hidden_sta_194, [6 x i8]* %quantized_hidden_sta_195, [6 x i8]* %quantized_hidden_sta_196, [6 x i8]* %quantized_hidden_sta_197, [6 x i8]* %quantized_hidden_sta_198, [6 x i8]* %quantized_hidden_sta_199, [6 x i8]* %quantized_hidden_sta_200, [6 x i8]* %quantized_hidden_sta_201, [6 x i8]* %quantized_hidden_sta_202, [6 x i8]* %quantized_hidden_sta_203, [6 x i8]* %quantized_hidden_sta_204, [6 x i8]* %quantized_hidden_sta_205, [6 x i8]* %quantized_hidden_sta_206, [6 x i8]* %quantized_hidden_sta_207, [6 x i8]* %quantized_hidden_sta_208, [6 x i8]* %quantized_hidden_sta_209, [6 x i8]* %quantized_hidden_sta_210, [6 x i8]* %quantized_hidden_sta_211, [6 x i8]* %quantized_hidden_sta_212, [6 x i8]* %quantized_hidden_sta_213, [6 x i8]* %quantized_hidden_sta_214, [6 x i8]* %quantized_hidden_sta_215, [6 x i8]* %quantized_hidden_sta_216, [6 x i8]* %quantized_hidden_sta_217, [6 x i8]* %quantized_hidden_sta_218, [6 x i8]* %quantized_hidden_sta_219, [6 x i8]* %quantized_hidden_sta_220, [6 x i8]* %quantized_hidden_sta_221, [6 x i8]* %quantized_hidden_sta_222, [6 x i8]* %quantized_hidden_sta_223, [6 x i8]* %quantized_hidden_sta_224, [6 x i8]* %quantized_hidden_sta_225, [6 x i8]* %quantized_hidden_sta_226, [6 x i8]* %quantized_hidden_sta_227, [6 x i8]* %quantized_hidden_sta_228, [6 x i8]* %quantized_hidden_sta_229, [6 x i8]* %quantized_hidden_sta_230, [6 x i8]* %quantized_hidden_sta_231, [6 x i8]* %quantized_hidden_sta_232, [6 x i8]* %quantized_hidden_sta_233, [6 x i8]* %quantized_hidden_sta_234, [6 x i8]* %quantized_hidden_sta_235, [6 x i8]* %quantized_hidden_sta_236, [6 x i8]* %quantized_hidden_sta_237, [6 x i8]* %quantized_hidden_sta_238, [6 x i8]* %quantized_hidden_sta_239, [6 x i8]* %quantized_hidden_sta_240, [6 x i8]* %quantized_hidden_sta_241, [6 x i8]* %quantized_hidden_sta_242, [6 x i8]* %quantized_hidden_sta_243, [6 x i8]* %quantized_hidden_sta_244, [6 x i8]* %quantized_hidden_sta_245, [6 x i8]* %quantized_hidden_sta_246, [6 x i8]* %quantized_hidden_sta_247, [6 x i8]* %quantized_hidden_sta_248, [6 x i8]* %quantized_hidden_sta_249, [6 x i8]* %quantized_hidden_sta_250, [6 x i8]* %quantized_hidden_sta_251, [6 x i8]* %quantized_hidden_sta_252, [6 x i8]* %quantized_hidden_sta_253, [6 x i8]* %quantized_hidden_sta_254, [6 x i8]* %quantized_hidden_sta_255, [1536 x i40]* %q_proj_re_0_V, i40 %scales_0_V, [9216 x i8]* @q_weights_0, [9216 x i8]* @q_weights_1, [9216 x i8]* @q_weights_2, [9216 x i8]* @q_weights_3, [9216 x i8]* @q_weights_4, [9216 x i8]* @q_weights_5, [9216 x i8]* @q_weights_6, [9216 x i8]* @q_weights_7, [9216 x i8]* @q_weights_8, [9216 x i8]* @q_weights_9, [9216 x i8]* @q_weights_10, [9216 x i8]* @q_weights_11, [9216 x i8]* @q_weights_12, [9216 x i8]* @q_weights_13, [9216 x i8]* @q_weights_14, [9216 x i8]* @q_weights_15, [9216 x i8]* @q_weights_16, [9216 x i8]* @q_weights_17, [9216 x i8]* @q_weights_18, [9216 x i8]* @q_weights_19, [9216 x i8]* @q_weights_20, [9216 x i8]* @q_weights_21, [9216 x i8]* @q_weights_22, [9216 x i8]* @q_weights_23, [9216 x i8]* @q_weights_24, [9216 x i8]* @q_weights_25, [9216 x i8]* @q_weights_26, [9216 x i8]* @q_weights_27, [9216 x i8]* @q_weights_28, [9216 x i8]* @q_weights_29, [9216 x i8]* @q_weights_30, [9216 x i8]* @q_weights_31, [9216 x i8]* @q_weights_32, [9216 x i8]* @q_weights_33, [9216 x i8]* @q_weights_34, [9216 x i8]* @q_weights_35, [9216 x i8]* @q_weights_36, [9216 x i8]* @q_weights_37, [9216 x i8]* @q_weights_38, [9216 x i8]* @q_weights_39, [9216 x i8]* @q_weights_40, [9216 x i8]* @q_weights_41, [9216 x i8]* @q_weights_42, [9216 x i8]* @q_weights_43, [9216 x i8]* @q_weights_44, [9216 x i8]* @q_weights_45, [9216 x i8]* @q_weights_46, [9216 x i8]* @q_weights_47, [9216 x i8]* @q_weights_48, [9216 x i8]* @q_weights_49, [9216 x i8]* @q_weights_50, [9216 x i8]* @q_weights_51, [9216 x i8]* @q_weights_52, [9216 x i8]* @q_weights_53, [9216 x i8]* @q_weights_54, [9216 x i8]* @q_weights_55, [9216 x i8]* @q_weights_56, [9216 x i8]* @q_weights_57, [9216 x i8]* @q_weights_58, [9216 x i8]* @q_weights_59, [9216 x i8]* @q_weights_60, [9216 x i8]* @q_weights_61, [9216 x i8]* @q_weights_62, [9216 x i8]* @q_weights_63, i22 1256162)" [attention.cpp:112]   --->   Operation 700 'call' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 6 <SV = 5> <Delay = 0.00>
ST_6 : Operation 701 [1/2] (0.00ns)   --->   "call fastcc void @linear_forward_no_mu([6 x i8]* %quantized_hidden_sta, [6 x i8]* %quantized_hidden_sta_1, [6 x i8]* %quantized_hidden_sta_2, [6 x i8]* %quantized_hidden_sta_3, [6 x i8]* %quantized_hidden_sta_4, [6 x i8]* %quantized_hidden_sta_5, [6 x i8]* %quantized_hidden_sta_6, [6 x i8]* %quantized_hidden_sta_7, [6 x i8]* %quantized_hidden_sta_8, [6 x i8]* %quantized_hidden_sta_9, [6 x i8]* %quantized_hidden_sta_10, [6 x i8]* %quantized_hidden_sta_11, [6 x i8]* %quantized_hidden_sta_12, [6 x i8]* %quantized_hidden_sta_13, [6 x i8]* %quantized_hidden_sta_14, [6 x i8]* %quantized_hidden_sta_15, [6 x i8]* %quantized_hidden_sta_16, [6 x i8]* %quantized_hidden_sta_17, [6 x i8]* %quantized_hidden_sta_18, [6 x i8]* %quantized_hidden_sta_19, [6 x i8]* %quantized_hidden_sta_20, [6 x i8]* %quantized_hidden_sta_21, [6 x i8]* %quantized_hidden_sta_22, [6 x i8]* %quantized_hidden_sta_23, [6 x i8]* %quantized_hidden_sta_24, [6 x i8]* %quantized_hidden_sta_25, [6 x i8]* %quantized_hidden_sta_26, [6 x i8]* %quantized_hidden_sta_27, [6 x i8]* %quantized_hidden_sta_28, [6 x i8]* %quantized_hidden_sta_29, [6 x i8]* %quantized_hidden_sta_30, [6 x i8]* %quantized_hidden_sta_31, [6 x i8]* %quantized_hidden_sta_32, [6 x i8]* %quantized_hidden_sta_33, [6 x i8]* %quantized_hidden_sta_34, [6 x i8]* %quantized_hidden_sta_35, [6 x i8]* %quantized_hidden_sta_36, [6 x i8]* %quantized_hidden_sta_37, [6 x i8]* %quantized_hidden_sta_38, [6 x i8]* %quantized_hidden_sta_39, [6 x i8]* %quantized_hidden_sta_40, [6 x i8]* %quantized_hidden_sta_41, [6 x i8]* %quantized_hidden_sta_42, [6 x i8]* %quantized_hidden_sta_43, [6 x i8]* %quantized_hidden_sta_44, [6 x i8]* %quantized_hidden_sta_45, [6 x i8]* %quantized_hidden_sta_46, [6 x i8]* %quantized_hidden_sta_47, [6 x i8]* %quantized_hidden_sta_48, [6 x i8]* %quantized_hidden_sta_49, [6 x i8]* %quantized_hidden_sta_50, [6 x i8]* %quantized_hidden_sta_51, [6 x i8]* %quantized_hidden_sta_52, [6 x i8]* %quantized_hidden_sta_53, [6 x i8]* %quantized_hidden_sta_54, [6 x i8]* %quantized_hidden_sta_55, [6 x i8]* %quantized_hidden_sta_56, [6 x i8]* %quantized_hidden_sta_57, [6 x i8]* %quantized_hidden_sta_58, [6 x i8]* %quantized_hidden_sta_59, [6 x i8]* %quantized_hidden_sta_60, [6 x i8]* %quantized_hidden_sta_61, [6 x i8]* %quantized_hidden_sta_62, [6 x i8]* %quantized_hidden_sta_63, [6 x i8]* %quantized_hidden_sta_64, [6 x i8]* %quantized_hidden_sta_65, [6 x i8]* %quantized_hidden_sta_66, [6 x i8]* %quantized_hidden_sta_67, [6 x i8]* %quantized_hidden_sta_68, [6 x i8]* %quantized_hidden_sta_69, [6 x i8]* %quantized_hidden_sta_70, [6 x i8]* %quantized_hidden_sta_71, [6 x i8]* %quantized_hidden_sta_72, [6 x i8]* %quantized_hidden_sta_73, [6 x i8]* %quantized_hidden_sta_74, [6 x i8]* %quantized_hidden_sta_75, [6 x i8]* %quantized_hidden_sta_76, [6 x i8]* %quantized_hidden_sta_77, [6 x i8]* %quantized_hidden_sta_78, [6 x i8]* %quantized_hidden_sta_79, [6 x i8]* %quantized_hidden_sta_80, [6 x i8]* %quantized_hidden_sta_81, [6 x i8]* %quantized_hidden_sta_82, [6 x i8]* %quantized_hidden_sta_83, [6 x i8]* %quantized_hidden_sta_84, [6 x i8]* %quantized_hidden_sta_85, [6 x i8]* %quantized_hidden_sta_86, [6 x i8]* %quantized_hidden_sta_87, [6 x i8]* %quantized_hidden_sta_88, [6 x i8]* %quantized_hidden_sta_89, [6 x i8]* %quantized_hidden_sta_90, [6 x i8]* %quantized_hidden_sta_91, [6 x i8]* %quantized_hidden_sta_92, [6 x i8]* %quantized_hidden_sta_93, [6 x i8]* %quantized_hidden_sta_94, [6 x i8]* %quantized_hidden_sta_95, [6 x i8]* %quantized_hidden_sta_96, [6 x i8]* %quantized_hidden_sta_97, [6 x i8]* %quantized_hidden_sta_98, [6 x i8]* %quantized_hidden_sta_99, [6 x i8]* %quantized_hidden_sta_100, [6 x i8]* %quantized_hidden_sta_101, [6 x i8]* %quantized_hidden_sta_102, [6 x i8]* %quantized_hidden_sta_103, [6 x i8]* %quantized_hidden_sta_104, [6 x i8]* %quantized_hidden_sta_105, [6 x i8]* %quantized_hidden_sta_106, [6 x i8]* %quantized_hidden_sta_107, [6 x i8]* %quantized_hidden_sta_108, [6 x i8]* %quantized_hidden_sta_109, [6 x i8]* %quantized_hidden_sta_110, [6 x i8]* %quantized_hidden_sta_111, [6 x i8]* %quantized_hidden_sta_112, [6 x i8]* %quantized_hidden_sta_113, [6 x i8]* %quantized_hidden_sta_114, [6 x i8]* %quantized_hidden_sta_115, [6 x i8]* %quantized_hidden_sta_116, [6 x i8]* %quantized_hidden_sta_117, [6 x i8]* %quantized_hidden_sta_118, [6 x i8]* %quantized_hidden_sta_119, [6 x i8]* %quantized_hidden_sta_120, [6 x i8]* %quantized_hidden_sta_121, [6 x i8]* %quantized_hidden_sta_122, [6 x i8]* %quantized_hidden_sta_123, [6 x i8]* %quantized_hidden_sta_124, [6 x i8]* %quantized_hidden_sta_125, [6 x i8]* %quantized_hidden_sta_126, [6 x i8]* %quantized_hidden_sta_127, [6 x i8]* %quantized_hidden_sta_128, [6 x i8]* %quantized_hidden_sta_129, [6 x i8]* %quantized_hidden_sta_130, [6 x i8]* %quantized_hidden_sta_131, [6 x i8]* %quantized_hidden_sta_132, [6 x i8]* %quantized_hidden_sta_133, [6 x i8]* %quantized_hidden_sta_134, [6 x i8]* %quantized_hidden_sta_135, [6 x i8]* %quantized_hidden_sta_136, [6 x i8]* %quantized_hidden_sta_137, [6 x i8]* %quantized_hidden_sta_138, [6 x i8]* %quantized_hidden_sta_139, [6 x i8]* %quantized_hidden_sta_140, [6 x i8]* %quantized_hidden_sta_141, [6 x i8]* %quantized_hidden_sta_142, [6 x i8]* %quantized_hidden_sta_143, [6 x i8]* %quantized_hidden_sta_144, [6 x i8]* %quantized_hidden_sta_145, [6 x i8]* %quantized_hidden_sta_146, [6 x i8]* %quantized_hidden_sta_147, [6 x i8]* %quantized_hidden_sta_148, [6 x i8]* %quantized_hidden_sta_149, [6 x i8]* %quantized_hidden_sta_150, [6 x i8]* %quantized_hidden_sta_151, [6 x i8]* %quantized_hidden_sta_152, [6 x i8]* %quantized_hidden_sta_153, [6 x i8]* %quantized_hidden_sta_154, [6 x i8]* %quantized_hidden_sta_155, [6 x i8]* %quantized_hidden_sta_156, [6 x i8]* %quantized_hidden_sta_157, [6 x i8]* %quantized_hidden_sta_158, [6 x i8]* %quantized_hidden_sta_159, [6 x i8]* %quantized_hidden_sta_160, [6 x i8]* %quantized_hidden_sta_161, [6 x i8]* %quantized_hidden_sta_162, [6 x i8]* %quantized_hidden_sta_163, [6 x i8]* %quantized_hidden_sta_164, [6 x i8]* %quantized_hidden_sta_165, [6 x i8]* %quantized_hidden_sta_166, [6 x i8]* %quantized_hidden_sta_167, [6 x i8]* %quantized_hidden_sta_168, [6 x i8]* %quantized_hidden_sta_169, [6 x i8]* %quantized_hidden_sta_170, [6 x i8]* %quantized_hidden_sta_171, [6 x i8]* %quantized_hidden_sta_172, [6 x i8]* %quantized_hidden_sta_173, [6 x i8]* %quantized_hidden_sta_174, [6 x i8]* %quantized_hidden_sta_175, [6 x i8]* %quantized_hidden_sta_176, [6 x i8]* %quantized_hidden_sta_177, [6 x i8]* %quantized_hidden_sta_178, [6 x i8]* %quantized_hidden_sta_179, [6 x i8]* %quantized_hidden_sta_180, [6 x i8]* %quantized_hidden_sta_181, [6 x i8]* %quantized_hidden_sta_182, [6 x i8]* %quantized_hidden_sta_183, [6 x i8]* %quantized_hidden_sta_184, [6 x i8]* %quantized_hidden_sta_185, [6 x i8]* %quantized_hidden_sta_186, [6 x i8]* %quantized_hidden_sta_187, [6 x i8]* %quantized_hidden_sta_188, [6 x i8]* %quantized_hidden_sta_189, [6 x i8]* %quantized_hidden_sta_190, [6 x i8]* %quantized_hidden_sta_191, [6 x i8]* %quantized_hidden_sta_192, [6 x i8]* %quantized_hidden_sta_193, [6 x i8]* %quantized_hidden_sta_194, [6 x i8]* %quantized_hidden_sta_195, [6 x i8]* %quantized_hidden_sta_196, [6 x i8]* %quantized_hidden_sta_197, [6 x i8]* %quantized_hidden_sta_198, [6 x i8]* %quantized_hidden_sta_199, [6 x i8]* %quantized_hidden_sta_200, [6 x i8]* %quantized_hidden_sta_201, [6 x i8]* %quantized_hidden_sta_202, [6 x i8]* %quantized_hidden_sta_203, [6 x i8]* %quantized_hidden_sta_204, [6 x i8]* %quantized_hidden_sta_205, [6 x i8]* %quantized_hidden_sta_206, [6 x i8]* %quantized_hidden_sta_207, [6 x i8]* %quantized_hidden_sta_208, [6 x i8]* %quantized_hidden_sta_209, [6 x i8]* %quantized_hidden_sta_210, [6 x i8]* %quantized_hidden_sta_211, [6 x i8]* %quantized_hidden_sta_212, [6 x i8]* %quantized_hidden_sta_213, [6 x i8]* %quantized_hidden_sta_214, [6 x i8]* %quantized_hidden_sta_215, [6 x i8]* %quantized_hidden_sta_216, [6 x i8]* %quantized_hidden_sta_217, [6 x i8]* %quantized_hidden_sta_218, [6 x i8]* %quantized_hidden_sta_219, [6 x i8]* %quantized_hidden_sta_220, [6 x i8]* %quantized_hidden_sta_221, [6 x i8]* %quantized_hidden_sta_222, [6 x i8]* %quantized_hidden_sta_223, [6 x i8]* %quantized_hidden_sta_224, [6 x i8]* %quantized_hidden_sta_225, [6 x i8]* %quantized_hidden_sta_226, [6 x i8]* %quantized_hidden_sta_227, [6 x i8]* %quantized_hidden_sta_228, [6 x i8]* %quantized_hidden_sta_229, [6 x i8]* %quantized_hidden_sta_230, [6 x i8]* %quantized_hidden_sta_231, [6 x i8]* %quantized_hidden_sta_232, [6 x i8]* %quantized_hidden_sta_233, [6 x i8]* %quantized_hidden_sta_234, [6 x i8]* %quantized_hidden_sta_235, [6 x i8]* %quantized_hidden_sta_236, [6 x i8]* %quantized_hidden_sta_237, [6 x i8]* %quantized_hidden_sta_238, [6 x i8]* %quantized_hidden_sta_239, [6 x i8]* %quantized_hidden_sta_240, [6 x i8]* %quantized_hidden_sta_241, [6 x i8]* %quantized_hidden_sta_242, [6 x i8]* %quantized_hidden_sta_243, [6 x i8]* %quantized_hidden_sta_244, [6 x i8]* %quantized_hidden_sta_245, [6 x i8]* %quantized_hidden_sta_246, [6 x i8]* %quantized_hidden_sta_247, [6 x i8]* %quantized_hidden_sta_248, [6 x i8]* %quantized_hidden_sta_249, [6 x i8]* %quantized_hidden_sta_250, [6 x i8]* %quantized_hidden_sta_251, [6 x i8]* %quantized_hidden_sta_252, [6 x i8]* %quantized_hidden_sta_253, [6 x i8]* %quantized_hidden_sta_254, [6 x i8]* %quantized_hidden_sta_255, [1536 x i40]* %q_proj_re_0_V, i40 %scales_0_V, [9216 x i8]* @q_weights_0, [9216 x i8]* @q_weights_1, [9216 x i8]* @q_weights_2, [9216 x i8]* @q_weights_3, [9216 x i8]* @q_weights_4, [9216 x i8]* @q_weights_5, [9216 x i8]* @q_weights_6, [9216 x i8]* @q_weights_7, [9216 x i8]* @q_weights_8, [9216 x i8]* @q_weights_9, [9216 x i8]* @q_weights_10, [9216 x i8]* @q_weights_11, [9216 x i8]* @q_weights_12, [9216 x i8]* @q_weights_13, [9216 x i8]* @q_weights_14, [9216 x i8]* @q_weights_15, [9216 x i8]* @q_weights_16, [9216 x i8]* @q_weights_17, [9216 x i8]* @q_weights_18, [9216 x i8]* @q_weights_19, [9216 x i8]* @q_weights_20, [9216 x i8]* @q_weights_21, [9216 x i8]* @q_weights_22, [9216 x i8]* @q_weights_23, [9216 x i8]* @q_weights_24, [9216 x i8]* @q_weights_25, [9216 x i8]* @q_weights_26, [9216 x i8]* @q_weights_27, [9216 x i8]* @q_weights_28, [9216 x i8]* @q_weights_29, [9216 x i8]* @q_weights_30, [9216 x i8]* @q_weights_31, [9216 x i8]* @q_weights_32, [9216 x i8]* @q_weights_33, [9216 x i8]* @q_weights_34, [9216 x i8]* @q_weights_35, [9216 x i8]* @q_weights_36, [9216 x i8]* @q_weights_37, [9216 x i8]* @q_weights_38, [9216 x i8]* @q_weights_39, [9216 x i8]* @q_weights_40, [9216 x i8]* @q_weights_41, [9216 x i8]* @q_weights_42, [9216 x i8]* @q_weights_43, [9216 x i8]* @q_weights_44, [9216 x i8]* @q_weights_45, [9216 x i8]* @q_weights_46, [9216 x i8]* @q_weights_47, [9216 x i8]* @q_weights_48, [9216 x i8]* @q_weights_49, [9216 x i8]* @q_weights_50, [9216 x i8]* @q_weights_51, [9216 x i8]* @q_weights_52, [9216 x i8]* @q_weights_53, [9216 x i8]* @q_weights_54, [9216 x i8]* @q_weights_55, [9216 x i8]* @q_weights_56, [9216 x i8]* @q_weights_57, [9216 x i8]* @q_weights_58, [9216 x i8]* @q_weights_59, [9216 x i8]* @q_weights_60, [9216 x i8]* @q_weights_61, [9216 x i8]* @q_weights_62, [9216 x i8]* @q_weights_63, i22 1256162)" [attention.cpp:112]   --->   Operation 701 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 7 <SV = 6> <Delay = 8.75>
ST_7 : Operation 702 [2/2] (8.75ns)   --->   "call fastcc void @linear_forward_no_mu([6 x i8]* %quantized_hidden_sta, [6 x i8]* %quantized_hidden_sta_1, [6 x i8]* %quantized_hidden_sta_2, [6 x i8]* %quantized_hidden_sta_3, [6 x i8]* %quantized_hidden_sta_4, [6 x i8]* %quantized_hidden_sta_5, [6 x i8]* %quantized_hidden_sta_6, [6 x i8]* %quantized_hidden_sta_7, [6 x i8]* %quantized_hidden_sta_8, [6 x i8]* %quantized_hidden_sta_9, [6 x i8]* %quantized_hidden_sta_10, [6 x i8]* %quantized_hidden_sta_11, [6 x i8]* %quantized_hidden_sta_12, [6 x i8]* %quantized_hidden_sta_13, [6 x i8]* %quantized_hidden_sta_14, [6 x i8]* %quantized_hidden_sta_15, [6 x i8]* %quantized_hidden_sta_16, [6 x i8]* %quantized_hidden_sta_17, [6 x i8]* %quantized_hidden_sta_18, [6 x i8]* %quantized_hidden_sta_19, [6 x i8]* %quantized_hidden_sta_20, [6 x i8]* %quantized_hidden_sta_21, [6 x i8]* %quantized_hidden_sta_22, [6 x i8]* %quantized_hidden_sta_23, [6 x i8]* %quantized_hidden_sta_24, [6 x i8]* %quantized_hidden_sta_25, [6 x i8]* %quantized_hidden_sta_26, [6 x i8]* %quantized_hidden_sta_27, [6 x i8]* %quantized_hidden_sta_28, [6 x i8]* %quantized_hidden_sta_29, [6 x i8]* %quantized_hidden_sta_30, [6 x i8]* %quantized_hidden_sta_31, [6 x i8]* %quantized_hidden_sta_32, [6 x i8]* %quantized_hidden_sta_33, [6 x i8]* %quantized_hidden_sta_34, [6 x i8]* %quantized_hidden_sta_35, [6 x i8]* %quantized_hidden_sta_36, [6 x i8]* %quantized_hidden_sta_37, [6 x i8]* %quantized_hidden_sta_38, [6 x i8]* %quantized_hidden_sta_39, [6 x i8]* %quantized_hidden_sta_40, [6 x i8]* %quantized_hidden_sta_41, [6 x i8]* %quantized_hidden_sta_42, [6 x i8]* %quantized_hidden_sta_43, [6 x i8]* %quantized_hidden_sta_44, [6 x i8]* %quantized_hidden_sta_45, [6 x i8]* %quantized_hidden_sta_46, [6 x i8]* %quantized_hidden_sta_47, [6 x i8]* %quantized_hidden_sta_48, [6 x i8]* %quantized_hidden_sta_49, [6 x i8]* %quantized_hidden_sta_50, [6 x i8]* %quantized_hidden_sta_51, [6 x i8]* %quantized_hidden_sta_52, [6 x i8]* %quantized_hidden_sta_53, [6 x i8]* %quantized_hidden_sta_54, [6 x i8]* %quantized_hidden_sta_55, [6 x i8]* %quantized_hidden_sta_56, [6 x i8]* %quantized_hidden_sta_57, [6 x i8]* %quantized_hidden_sta_58, [6 x i8]* %quantized_hidden_sta_59, [6 x i8]* %quantized_hidden_sta_60, [6 x i8]* %quantized_hidden_sta_61, [6 x i8]* %quantized_hidden_sta_62, [6 x i8]* %quantized_hidden_sta_63, [6 x i8]* %quantized_hidden_sta_64, [6 x i8]* %quantized_hidden_sta_65, [6 x i8]* %quantized_hidden_sta_66, [6 x i8]* %quantized_hidden_sta_67, [6 x i8]* %quantized_hidden_sta_68, [6 x i8]* %quantized_hidden_sta_69, [6 x i8]* %quantized_hidden_sta_70, [6 x i8]* %quantized_hidden_sta_71, [6 x i8]* %quantized_hidden_sta_72, [6 x i8]* %quantized_hidden_sta_73, [6 x i8]* %quantized_hidden_sta_74, [6 x i8]* %quantized_hidden_sta_75, [6 x i8]* %quantized_hidden_sta_76, [6 x i8]* %quantized_hidden_sta_77, [6 x i8]* %quantized_hidden_sta_78, [6 x i8]* %quantized_hidden_sta_79, [6 x i8]* %quantized_hidden_sta_80, [6 x i8]* %quantized_hidden_sta_81, [6 x i8]* %quantized_hidden_sta_82, [6 x i8]* %quantized_hidden_sta_83, [6 x i8]* %quantized_hidden_sta_84, [6 x i8]* %quantized_hidden_sta_85, [6 x i8]* %quantized_hidden_sta_86, [6 x i8]* %quantized_hidden_sta_87, [6 x i8]* %quantized_hidden_sta_88, [6 x i8]* %quantized_hidden_sta_89, [6 x i8]* %quantized_hidden_sta_90, [6 x i8]* %quantized_hidden_sta_91, [6 x i8]* %quantized_hidden_sta_92, [6 x i8]* %quantized_hidden_sta_93, [6 x i8]* %quantized_hidden_sta_94, [6 x i8]* %quantized_hidden_sta_95, [6 x i8]* %quantized_hidden_sta_96, [6 x i8]* %quantized_hidden_sta_97, [6 x i8]* %quantized_hidden_sta_98, [6 x i8]* %quantized_hidden_sta_99, [6 x i8]* %quantized_hidden_sta_100, [6 x i8]* %quantized_hidden_sta_101, [6 x i8]* %quantized_hidden_sta_102, [6 x i8]* %quantized_hidden_sta_103, [6 x i8]* %quantized_hidden_sta_104, [6 x i8]* %quantized_hidden_sta_105, [6 x i8]* %quantized_hidden_sta_106, [6 x i8]* %quantized_hidden_sta_107, [6 x i8]* %quantized_hidden_sta_108, [6 x i8]* %quantized_hidden_sta_109, [6 x i8]* %quantized_hidden_sta_110, [6 x i8]* %quantized_hidden_sta_111, [6 x i8]* %quantized_hidden_sta_112, [6 x i8]* %quantized_hidden_sta_113, [6 x i8]* %quantized_hidden_sta_114, [6 x i8]* %quantized_hidden_sta_115, [6 x i8]* %quantized_hidden_sta_116, [6 x i8]* %quantized_hidden_sta_117, [6 x i8]* %quantized_hidden_sta_118, [6 x i8]* %quantized_hidden_sta_119, [6 x i8]* %quantized_hidden_sta_120, [6 x i8]* %quantized_hidden_sta_121, [6 x i8]* %quantized_hidden_sta_122, [6 x i8]* %quantized_hidden_sta_123, [6 x i8]* %quantized_hidden_sta_124, [6 x i8]* %quantized_hidden_sta_125, [6 x i8]* %quantized_hidden_sta_126, [6 x i8]* %quantized_hidden_sta_127, [6 x i8]* %quantized_hidden_sta_128, [6 x i8]* %quantized_hidden_sta_129, [6 x i8]* %quantized_hidden_sta_130, [6 x i8]* %quantized_hidden_sta_131, [6 x i8]* %quantized_hidden_sta_132, [6 x i8]* %quantized_hidden_sta_133, [6 x i8]* %quantized_hidden_sta_134, [6 x i8]* %quantized_hidden_sta_135, [6 x i8]* %quantized_hidden_sta_136, [6 x i8]* %quantized_hidden_sta_137, [6 x i8]* %quantized_hidden_sta_138, [6 x i8]* %quantized_hidden_sta_139, [6 x i8]* %quantized_hidden_sta_140, [6 x i8]* %quantized_hidden_sta_141, [6 x i8]* %quantized_hidden_sta_142, [6 x i8]* %quantized_hidden_sta_143, [6 x i8]* %quantized_hidden_sta_144, [6 x i8]* %quantized_hidden_sta_145, [6 x i8]* %quantized_hidden_sta_146, [6 x i8]* %quantized_hidden_sta_147, [6 x i8]* %quantized_hidden_sta_148, [6 x i8]* %quantized_hidden_sta_149, [6 x i8]* %quantized_hidden_sta_150, [6 x i8]* %quantized_hidden_sta_151, [6 x i8]* %quantized_hidden_sta_152, [6 x i8]* %quantized_hidden_sta_153, [6 x i8]* %quantized_hidden_sta_154, [6 x i8]* %quantized_hidden_sta_155, [6 x i8]* %quantized_hidden_sta_156, [6 x i8]* %quantized_hidden_sta_157, [6 x i8]* %quantized_hidden_sta_158, [6 x i8]* %quantized_hidden_sta_159, [6 x i8]* %quantized_hidden_sta_160, [6 x i8]* %quantized_hidden_sta_161, [6 x i8]* %quantized_hidden_sta_162, [6 x i8]* %quantized_hidden_sta_163, [6 x i8]* %quantized_hidden_sta_164, [6 x i8]* %quantized_hidden_sta_165, [6 x i8]* %quantized_hidden_sta_166, [6 x i8]* %quantized_hidden_sta_167, [6 x i8]* %quantized_hidden_sta_168, [6 x i8]* %quantized_hidden_sta_169, [6 x i8]* %quantized_hidden_sta_170, [6 x i8]* %quantized_hidden_sta_171, [6 x i8]* %quantized_hidden_sta_172, [6 x i8]* %quantized_hidden_sta_173, [6 x i8]* %quantized_hidden_sta_174, [6 x i8]* %quantized_hidden_sta_175, [6 x i8]* %quantized_hidden_sta_176, [6 x i8]* %quantized_hidden_sta_177, [6 x i8]* %quantized_hidden_sta_178, [6 x i8]* %quantized_hidden_sta_179, [6 x i8]* %quantized_hidden_sta_180, [6 x i8]* %quantized_hidden_sta_181, [6 x i8]* %quantized_hidden_sta_182, [6 x i8]* %quantized_hidden_sta_183, [6 x i8]* %quantized_hidden_sta_184, [6 x i8]* %quantized_hidden_sta_185, [6 x i8]* %quantized_hidden_sta_186, [6 x i8]* %quantized_hidden_sta_187, [6 x i8]* %quantized_hidden_sta_188, [6 x i8]* %quantized_hidden_sta_189, [6 x i8]* %quantized_hidden_sta_190, [6 x i8]* %quantized_hidden_sta_191, [6 x i8]* %quantized_hidden_sta_192, [6 x i8]* %quantized_hidden_sta_193, [6 x i8]* %quantized_hidden_sta_194, [6 x i8]* %quantized_hidden_sta_195, [6 x i8]* %quantized_hidden_sta_196, [6 x i8]* %quantized_hidden_sta_197, [6 x i8]* %quantized_hidden_sta_198, [6 x i8]* %quantized_hidden_sta_199, [6 x i8]* %quantized_hidden_sta_200, [6 x i8]* %quantized_hidden_sta_201, [6 x i8]* %quantized_hidden_sta_202, [6 x i8]* %quantized_hidden_sta_203, [6 x i8]* %quantized_hidden_sta_204, [6 x i8]* %quantized_hidden_sta_205, [6 x i8]* %quantized_hidden_sta_206, [6 x i8]* %quantized_hidden_sta_207, [6 x i8]* %quantized_hidden_sta_208, [6 x i8]* %quantized_hidden_sta_209, [6 x i8]* %quantized_hidden_sta_210, [6 x i8]* %quantized_hidden_sta_211, [6 x i8]* %quantized_hidden_sta_212, [6 x i8]* %quantized_hidden_sta_213, [6 x i8]* %quantized_hidden_sta_214, [6 x i8]* %quantized_hidden_sta_215, [6 x i8]* %quantized_hidden_sta_216, [6 x i8]* %quantized_hidden_sta_217, [6 x i8]* %quantized_hidden_sta_218, [6 x i8]* %quantized_hidden_sta_219, [6 x i8]* %quantized_hidden_sta_220, [6 x i8]* %quantized_hidden_sta_221, [6 x i8]* %quantized_hidden_sta_222, [6 x i8]* %quantized_hidden_sta_223, [6 x i8]* %quantized_hidden_sta_224, [6 x i8]* %quantized_hidden_sta_225, [6 x i8]* %quantized_hidden_sta_226, [6 x i8]* %quantized_hidden_sta_227, [6 x i8]* %quantized_hidden_sta_228, [6 x i8]* %quantized_hidden_sta_229, [6 x i8]* %quantized_hidden_sta_230, [6 x i8]* %quantized_hidden_sta_231, [6 x i8]* %quantized_hidden_sta_232, [6 x i8]* %quantized_hidden_sta_233, [6 x i8]* %quantized_hidden_sta_234, [6 x i8]* %quantized_hidden_sta_235, [6 x i8]* %quantized_hidden_sta_236, [6 x i8]* %quantized_hidden_sta_237, [6 x i8]* %quantized_hidden_sta_238, [6 x i8]* %quantized_hidden_sta_239, [6 x i8]* %quantized_hidden_sta_240, [6 x i8]* %quantized_hidden_sta_241, [6 x i8]* %quantized_hidden_sta_242, [6 x i8]* %quantized_hidden_sta_243, [6 x i8]* %quantized_hidden_sta_244, [6 x i8]* %quantized_hidden_sta_245, [6 x i8]* %quantized_hidden_sta_246, [6 x i8]* %quantized_hidden_sta_247, [6 x i8]* %quantized_hidden_sta_248, [6 x i8]* %quantized_hidden_sta_249, [6 x i8]* %quantized_hidden_sta_250, [6 x i8]* %quantized_hidden_sta_251, [6 x i8]* %quantized_hidden_sta_252, [6 x i8]* %quantized_hidden_sta_253, [6 x i8]* %quantized_hidden_sta_254, [6 x i8]* %quantized_hidden_sta_255, [1536 x i40]* %k_proj_re_0_V, i40 %scales_0_V, [9216 x i8]* @k_weights_0, [9216 x i8]* @k_weights_1, [9216 x i8]* @k_weights_2, [9216 x i8]* @k_weights_3, [9216 x i8]* @k_weights_4, [9216 x i8]* @k_weights_5, [9216 x i8]* @k_weights_6, [9216 x i8]* @k_weights_7, [9216 x i8]* @k_weights_8, [9216 x i8]* @k_weights_9, [9216 x i8]* @k_weights_10, [9216 x i8]* @k_weights_11, [9216 x i8]* @k_weights_12, [9216 x i8]* @k_weights_13, [9216 x i8]* @k_weights_14, [9216 x i8]* @k_weights_15, [9216 x i8]* @k_weights_16, [9216 x i8]* @k_weights_17, [9216 x i8]* @k_weights_18, [9216 x i8]* @k_weights_19, [9216 x i8]* @k_weights_20, [9216 x i8]* @k_weights_21, [9216 x i8]* @k_weights_22, [9216 x i8]* @k_weights_23, [9216 x i8]* @k_weights_24, [9216 x i8]* @k_weights_25, [9216 x i8]* @k_weights_26, [9216 x i8]* @k_weights_27, [9216 x i8]* @k_weights_28, [9216 x i8]* @k_weights_29, [9216 x i8]* @k_weights_30, [9216 x i8]* @k_weights_31, [9216 x i8]* @k_weights_32, [9216 x i8]* @k_weights_33, [9216 x i8]* @k_weights_34, [9216 x i8]* @k_weights_35, [9216 x i8]* @k_weights_36, [9216 x i8]* @k_weights_37, [9216 x i8]* @k_weights_38, [9216 x i8]* @k_weights_39, [9216 x i8]* @k_weights_40, [9216 x i8]* @k_weights_41, [9216 x i8]* @k_weights_42, [9216 x i8]* @k_weights_43, [9216 x i8]* @k_weights_44, [9216 x i8]* @k_weights_45, [9216 x i8]* @k_weights_46, [9216 x i8]* @k_weights_47, [9216 x i8]* @k_weights_48, [9216 x i8]* @k_weights_49, [9216 x i8]* @k_weights_50, [9216 x i8]* @k_weights_51, [9216 x i8]* @k_weights_52, [9216 x i8]* @k_weights_53, [9216 x i8]* @k_weights_54, [9216 x i8]* @k_weights_55, [9216 x i8]* @k_weights_56, [9216 x i8]* @k_weights_57, [9216 x i8]* @k_weights_58, [9216 x i8]* @k_weights_59, [9216 x i8]* @k_weights_60, [9216 x i8]* @k_weights_61, [9216 x i8]* @k_weights_62, [9216 x i8]* @k_weights_63, i22 1234323)" [attention.cpp:119]   --->   Operation 702 'call' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_7 : Operation 703 [2/2] (1.81ns)   --->   "call fastcc void @reshape_2D_to_3D([1536 x i40]* %q_proj_re_0_V, [1536 x i40]* %q_proj_0_V)" [attention.cpp:138]   --->   Operation 703 'call' <Predicate = true> <Delay = 1.81> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 8 <SV = 7> <Delay = 0.00>
ST_8 : Operation 704 [1/2] (0.00ns)   --->   "call fastcc void @linear_forward_no_mu([6 x i8]* %quantized_hidden_sta, [6 x i8]* %quantized_hidden_sta_1, [6 x i8]* %quantized_hidden_sta_2, [6 x i8]* %quantized_hidden_sta_3, [6 x i8]* %quantized_hidden_sta_4, [6 x i8]* %quantized_hidden_sta_5, [6 x i8]* %quantized_hidden_sta_6, [6 x i8]* %quantized_hidden_sta_7, [6 x i8]* %quantized_hidden_sta_8, [6 x i8]* %quantized_hidden_sta_9, [6 x i8]* %quantized_hidden_sta_10, [6 x i8]* %quantized_hidden_sta_11, [6 x i8]* %quantized_hidden_sta_12, [6 x i8]* %quantized_hidden_sta_13, [6 x i8]* %quantized_hidden_sta_14, [6 x i8]* %quantized_hidden_sta_15, [6 x i8]* %quantized_hidden_sta_16, [6 x i8]* %quantized_hidden_sta_17, [6 x i8]* %quantized_hidden_sta_18, [6 x i8]* %quantized_hidden_sta_19, [6 x i8]* %quantized_hidden_sta_20, [6 x i8]* %quantized_hidden_sta_21, [6 x i8]* %quantized_hidden_sta_22, [6 x i8]* %quantized_hidden_sta_23, [6 x i8]* %quantized_hidden_sta_24, [6 x i8]* %quantized_hidden_sta_25, [6 x i8]* %quantized_hidden_sta_26, [6 x i8]* %quantized_hidden_sta_27, [6 x i8]* %quantized_hidden_sta_28, [6 x i8]* %quantized_hidden_sta_29, [6 x i8]* %quantized_hidden_sta_30, [6 x i8]* %quantized_hidden_sta_31, [6 x i8]* %quantized_hidden_sta_32, [6 x i8]* %quantized_hidden_sta_33, [6 x i8]* %quantized_hidden_sta_34, [6 x i8]* %quantized_hidden_sta_35, [6 x i8]* %quantized_hidden_sta_36, [6 x i8]* %quantized_hidden_sta_37, [6 x i8]* %quantized_hidden_sta_38, [6 x i8]* %quantized_hidden_sta_39, [6 x i8]* %quantized_hidden_sta_40, [6 x i8]* %quantized_hidden_sta_41, [6 x i8]* %quantized_hidden_sta_42, [6 x i8]* %quantized_hidden_sta_43, [6 x i8]* %quantized_hidden_sta_44, [6 x i8]* %quantized_hidden_sta_45, [6 x i8]* %quantized_hidden_sta_46, [6 x i8]* %quantized_hidden_sta_47, [6 x i8]* %quantized_hidden_sta_48, [6 x i8]* %quantized_hidden_sta_49, [6 x i8]* %quantized_hidden_sta_50, [6 x i8]* %quantized_hidden_sta_51, [6 x i8]* %quantized_hidden_sta_52, [6 x i8]* %quantized_hidden_sta_53, [6 x i8]* %quantized_hidden_sta_54, [6 x i8]* %quantized_hidden_sta_55, [6 x i8]* %quantized_hidden_sta_56, [6 x i8]* %quantized_hidden_sta_57, [6 x i8]* %quantized_hidden_sta_58, [6 x i8]* %quantized_hidden_sta_59, [6 x i8]* %quantized_hidden_sta_60, [6 x i8]* %quantized_hidden_sta_61, [6 x i8]* %quantized_hidden_sta_62, [6 x i8]* %quantized_hidden_sta_63, [6 x i8]* %quantized_hidden_sta_64, [6 x i8]* %quantized_hidden_sta_65, [6 x i8]* %quantized_hidden_sta_66, [6 x i8]* %quantized_hidden_sta_67, [6 x i8]* %quantized_hidden_sta_68, [6 x i8]* %quantized_hidden_sta_69, [6 x i8]* %quantized_hidden_sta_70, [6 x i8]* %quantized_hidden_sta_71, [6 x i8]* %quantized_hidden_sta_72, [6 x i8]* %quantized_hidden_sta_73, [6 x i8]* %quantized_hidden_sta_74, [6 x i8]* %quantized_hidden_sta_75, [6 x i8]* %quantized_hidden_sta_76, [6 x i8]* %quantized_hidden_sta_77, [6 x i8]* %quantized_hidden_sta_78, [6 x i8]* %quantized_hidden_sta_79, [6 x i8]* %quantized_hidden_sta_80, [6 x i8]* %quantized_hidden_sta_81, [6 x i8]* %quantized_hidden_sta_82, [6 x i8]* %quantized_hidden_sta_83, [6 x i8]* %quantized_hidden_sta_84, [6 x i8]* %quantized_hidden_sta_85, [6 x i8]* %quantized_hidden_sta_86, [6 x i8]* %quantized_hidden_sta_87, [6 x i8]* %quantized_hidden_sta_88, [6 x i8]* %quantized_hidden_sta_89, [6 x i8]* %quantized_hidden_sta_90, [6 x i8]* %quantized_hidden_sta_91, [6 x i8]* %quantized_hidden_sta_92, [6 x i8]* %quantized_hidden_sta_93, [6 x i8]* %quantized_hidden_sta_94, [6 x i8]* %quantized_hidden_sta_95, [6 x i8]* %quantized_hidden_sta_96, [6 x i8]* %quantized_hidden_sta_97, [6 x i8]* %quantized_hidden_sta_98, [6 x i8]* %quantized_hidden_sta_99, [6 x i8]* %quantized_hidden_sta_100, [6 x i8]* %quantized_hidden_sta_101, [6 x i8]* %quantized_hidden_sta_102, [6 x i8]* %quantized_hidden_sta_103, [6 x i8]* %quantized_hidden_sta_104, [6 x i8]* %quantized_hidden_sta_105, [6 x i8]* %quantized_hidden_sta_106, [6 x i8]* %quantized_hidden_sta_107, [6 x i8]* %quantized_hidden_sta_108, [6 x i8]* %quantized_hidden_sta_109, [6 x i8]* %quantized_hidden_sta_110, [6 x i8]* %quantized_hidden_sta_111, [6 x i8]* %quantized_hidden_sta_112, [6 x i8]* %quantized_hidden_sta_113, [6 x i8]* %quantized_hidden_sta_114, [6 x i8]* %quantized_hidden_sta_115, [6 x i8]* %quantized_hidden_sta_116, [6 x i8]* %quantized_hidden_sta_117, [6 x i8]* %quantized_hidden_sta_118, [6 x i8]* %quantized_hidden_sta_119, [6 x i8]* %quantized_hidden_sta_120, [6 x i8]* %quantized_hidden_sta_121, [6 x i8]* %quantized_hidden_sta_122, [6 x i8]* %quantized_hidden_sta_123, [6 x i8]* %quantized_hidden_sta_124, [6 x i8]* %quantized_hidden_sta_125, [6 x i8]* %quantized_hidden_sta_126, [6 x i8]* %quantized_hidden_sta_127, [6 x i8]* %quantized_hidden_sta_128, [6 x i8]* %quantized_hidden_sta_129, [6 x i8]* %quantized_hidden_sta_130, [6 x i8]* %quantized_hidden_sta_131, [6 x i8]* %quantized_hidden_sta_132, [6 x i8]* %quantized_hidden_sta_133, [6 x i8]* %quantized_hidden_sta_134, [6 x i8]* %quantized_hidden_sta_135, [6 x i8]* %quantized_hidden_sta_136, [6 x i8]* %quantized_hidden_sta_137, [6 x i8]* %quantized_hidden_sta_138, [6 x i8]* %quantized_hidden_sta_139, [6 x i8]* %quantized_hidden_sta_140, [6 x i8]* %quantized_hidden_sta_141, [6 x i8]* %quantized_hidden_sta_142, [6 x i8]* %quantized_hidden_sta_143, [6 x i8]* %quantized_hidden_sta_144, [6 x i8]* %quantized_hidden_sta_145, [6 x i8]* %quantized_hidden_sta_146, [6 x i8]* %quantized_hidden_sta_147, [6 x i8]* %quantized_hidden_sta_148, [6 x i8]* %quantized_hidden_sta_149, [6 x i8]* %quantized_hidden_sta_150, [6 x i8]* %quantized_hidden_sta_151, [6 x i8]* %quantized_hidden_sta_152, [6 x i8]* %quantized_hidden_sta_153, [6 x i8]* %quantized_hidden_sta_154, [6 x i8]* %quantized_hidden_sta_155, [6 x i8]* %quantized_hidden_sta_156, [6 x i8]* %quantized_hidden_sta_157, [6 x i8]* %quantized_hidden_sta_158, [6 x i8]* %quantized_hidden_sta_159, [6 x i8]* %quantized_hidden_sta_160, [6 x i8]* %quantized_hidden_sta_161, [6 x i8]* %quantized_hidden_sta_162, [6 x i8]* %quantized_hidden_sta_163, [6 x i8]* %quantized_hidden_sta_164, [6 x i8]* %quantized_hidden_sta_165, [6 x i8]* %quantized_hidden_sta_166, [6 x i8]* %quantized_hidden_sta_167, [6 x i8]* %quantized_hidden_sta_168, [6 x i8]* %quantized_hidden_sta_169, [6 x i8]* %quantized_hidden_sta_170, [6 x i8]* %quantized_hidden_sta_171, [6 x i8]* %quantized_hidden_sta_172, [6 x i8]* %quantized_hidden_sta_173, [6 x i8]* %quantized_hidden_sta_174, [6 x i8]* %quantized_hidden_sta_175, [6 x i8]* %quantized_hidden_sta_176, [6 x i8]* %quantized_hidden_sta_177, [6 x i8]* %quantized_hidden_sta_178, [6 x i8]* %quantized_hidden_sta_179, [6 x i8]* %quantized_hidden_sta_180, [6 x i8]* %quantized_hidden_sta_181, [6 x i8]* %quantized_hidden_sta_182, [6 x i8]* %quantized_hidden_sta_183, [6 x i8]* %quantized_hidden_sta_184, [6 x i8]* %quantized_hidden_sta_185, [6 x i8]* %quantized_hidden_sta_186, [6 x i8]* %quantized_hidden_sta_187, [6 x i8]* %quantized_hidden_sta_188, [6 x i8]* %quantized_hidden_sta_189, [6 x i8]* %quantized_hidden_sta_190, [6 x i8]* %quantized_hidden_sta_191, [6 x i8]* %quantized_hidden_sta_192, [6 x i8]* %quantized_hidden_sta_193, [6 x i8]* %quantized_hidden_sta_194, [6 x i8]* %quantized_hidden_sta_195, [6 x i8]* %quantized_hidden_sta_196, [6 x i8]* %quantized_hidden_sta_197, [6 x i8]* %quantized_hidden_sta_198, [6 x i8]* %quantized_hidden_sta_199, [6 x i8]* %quantized_hidden_sta_200, [6 x i8]* %quantized_hidden_sta_201, [6 x i8]* %quantized_hidden_sta_202, [6 x i8]* %quantized_hidden_sta_203, [6 x i8]* %quantized_hidden_sta_204, [6 x i8]* %quantized_hidden_sta_205, [6 x i8]* %quantized_hidden_sta_206, [6 x i8]* %quantized_hidden_sta_207, [6 x i8]* %quantized_hidden_sta_208, [6 x i8]* %quantized_hidden_sta_209, [6 x i8]* %quantized_hidden_sta_210, [6 x i8]* %quantized_hidden_sta_211, [6 x i8]* %quantized_hidden_sta_212, [6 x i8]* %quantized_hidden_sta_213, [6 x i8]* %quantized_hidden_sta_214, [6 x i8]* %quantized_hidden_sta_215, [6 x i8]* %quantized_hidden_sta_216, [6 x i8]* %quantized_hidden_sta_217, [6 x i8]* %quantized_hidden_sta_218, [6 x i8]* %quantized_hidden_sta_219, [6 x i8]* %quantized_hidden_sta_220, [6 x i8]* %quantized_hidden_sta_221, [6 x i8]* %quantized_hidden_sta_222, [6 x i8]* %quantized_hidden_sta_223, [6 x i8]* %quantized_hidden_sta_224, [6 x i8]* %quantized_hidden_sta_225, [6 x i8]* %quantized_hidden_sta_226, [6 x i8]* %quantized_hidden_sta_227, [6 x i8]* %quantized_hidden_sta_228, [6 x i8]* %quantized_hidden_sta_229, [6 x i8]* %quantized_hidden_sta_230, [6 x i8]* %quantized_hidden_sta_231, [6 x i8]* %quantized_hidden_sta_232, [6 x i8]* %quantized_hidden_sta_233, [6 x i8]* %quantized_hidden_sta_234, [6 x i8]* %quantized_hidden_sta_235, [6 x i8]* %quantized_hidden_sta_236, [6 x i8]* %quantized_hidden_sta_237, [6 x i8]* %quantized_hidden_sta_238, [6 x i8]* %quantized_hidden_sta_239, [6 x i8]* %quantized_hidden_sta_240, [6 x i8]* %quantized_hidden_sta_241, [6 x i8]* %quantized_hidden_sta_242, [6 x i8]* %quantized_hidden_sta_243, [6 x i8]* %quantized_hidden_sta_244, [6 x i8]* %quantized_hidden_sta_245, [6 x i8]* %quantized_hidden_sta_246, [6 x i8]* %quantized_hidden_sta_247, [6 x i8]* %quantized_hidden_sta_248, [6 x i8]* %quantized_hidden_sta_249, [6 x i8]* %quantized_hidden_sta_250, [6 x i8]* %quantized_hidden_sta_251, [6 x i8]* %quantized_hidden_sta_252, [6 x i8]* %quantized_hidden_sta_253, [6 x i8]* %quantized_hidden_sta_254, [6 x i8]* %quantized_hidden_sta_255, [1536 x i40]* %k_proj_re_0_V, i40 %scales_0_V, [9216 x i8]* @k_weights_0, [9216 x i8]* @k_weights_1, [9216 x i8]* @k_weights_2, [9216 x i8]* @k_weights_3, [9216 x i8]* @k_weights_4, [9216 x i8]* @k_weights_5, [9216 x i8]* @k_weights_6, [9216 x i8]* @k_weights_7, [9216 x i8]* @k_weights_8, [9216 x i8]* @k_weights_9, [9216 x i8]* @k_weights_10, [9216 x i8]* @k_weights_11, [9216 x i8]* @k_weights_12, [9216 x i8]* @k_weights_13, [9216 x i8]* @k_weights_14, [9216 x i8]* @k_weights_15, [9216 x i8]* @k_weights_16, [9216 x i8]* @k_weights_17, [9216 x i8]* @k_weights_18, [9216 x i8]* @k_weights_19, [9216 x i8]* @k_weights_20, [9216 x i8]* @k_weights_21, [9216 x i8]* @k_weights_22, [9216 x i8]* @k_weights_23, [9216 x i8]* @k_weights_24, [9216 x i8]* @k_weights_25, [9216 x i8]* @k_weights_26, [9216 x i8]* @k_weights_27, [9216 x i8]* @k_weights_28, [9216 x i8]* @k_weights_29, [9216 x i8]* @k_weights_30, [9216 x i8]* @k_weights_31, [9216 x i8]* @k_weights_32, [9216 x i8]* @k_weights_33, [9216 x i8]* @k_weights_34, [9216 x i8]* @k_weights_35, [9216 x i8]* @k_weights_36, [9216 x i8]* @k_weights_37, [9216 x i8]* @k_weights_38, [9216 x i8]* @k_weights_39, [9216 x i8]* @k_weights_40, [9216 x i8]* @k_weights_41, [9216 x i8]* @k_weights_42, [9216 x i8]* @k_weights_43, [9216 x i8]* @k_weights_44, [9216 x i8]* @k_weights_45, [9216 x i8]* @k_weights_46, [9216 x i8]* @k_weights_47, [9216 x i8]* @k_weights_48, [9216 x i8]* @k_weights_49, [9216 x i8]* @k_weights_50, [9216 x i8]* @k_weights_51, [9216 x i8]* @k_weights_52, [9216 x i8]* @k_weights_53, [9216 x i8]* @k_weights_54, [9216 x i8]* @k_weights_55, [9216 x i8]* @k_weights_56, [9216 x i8]* @k_weights_57, [9216 x i8]* @k_weights_58, [9216 x i8]* @k_weights_59, [9216 x i8]* @k_weights_60, [9216 x i8]* @k_weights_61, [9216 x i8]* @k_weights_62, [9216 x i8]* @k_weights_63, i22 1234323)" [attention.cpp:119]   --->   Operation 704 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 705 [1/2] (0.00ns)   --->   "call fastcc void @reshape_2D_to_3D([1536 x i40]* %q_proj_re_0_V, [1536 x i40]* %q_proj_0_V)" [attention.cpp:138]   --->   Operation 705 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 9 <SV = 8> <Delay = 8.75>
ST_9 : Operation 706 [2/2] (8.75ns)   --->   "call fastcc void @linear_forward_no_mu([6 x i8]* %quantized_hidden_sta, [6 x i8]* %quantized_hidden_sta_1, [6 x i8]* %quantized_hidden_sta_2, [6 x i8]* %quantized_hidden_sta_3, [6 x i8]* %quantized_hidden_sta_4, [6 x i8]* %quantized_hidden_sta_5, [6 x i8]* %quantized_hidden_sta_6, [6 x i8]* %quantized_hidden_sta_7, [6 x i8]* %quantized_hidden_sta_8, [6 x i8]* %quantized_hidden_sta_9, [6 x i8]* %quantized_hidden_sta_10, [6 x i8]* %quantized_hidden_sta_11, [6 x i8]* %quantized_hidden_sta_12, [6 x i8]* %quantized_hidden_sta_13, [6 x i8]* %quantized_hidden_sta_14, [6 x i8]* %quantized_hidden_sta_15, [6 x i8]* %quantized_hidden_sta_16, [6 x i8]* %quantized_hidden_sta_17, [6 x i8]* %quantized_hidden_sta_18, [6 x i8]* %quantized_hidden_sta_19, [6 x i8]* %quantized_hidden_sta_20, [6 x i8]* %quantized_hidden_sta_21, [6 x i8]* %quantized_hidden_sta_22, [6 x i8]* %quantized_hidden_sta_23, [6 x i8]* %quantized_hidden_sta_24, [6 x i8]* %quantized_hidden_sta_25, [6 x i8]* %quantized_hidden_sta_26, [6 x i8]* %quantized_hidden_sta_27, [6 x i8]* %quantized_hidden_sta_28, [6 x i8]* %quantized_hidden_sta_29, [6 x i8]* %quantized_hidden_sta_30, [6 x i8]* %quantized_hidden_sta_31, [6 x i8]* %quantized_hidden_sta_32, [6 x i8]* %quantized_hidden_sta_33, [6 x i8]* %quantized_hidden_sta_34, [6 x i8]* %quantized_hidden_sta_35, [6 x i8]* %quantized_hidden_sta_36, [6 x i8]* %quantized_hidden_sta_37, [6 x i8]* %quantized_hidden_sta_38, [6 x i8]* %quantized_hidden_sta_39, [6 x i8]* %quantized_hidden_sta_40, [6 x i8]* %quantized_hidden_sta_41, [6 x i8]* %quantized_hidden_sta_42, [6 x i8]* %quantized_hidden_sta_43, [6 x i8]* %quantized_hidden_sta_44, [6 x i8]* %quantized_hidden_sta_45, [6 x i8]* %quantized_hidden_sta_46, [6 x i8]* %quantized_hidden_sta_47, [6 x i8]* %quantized_hidden_sta_48, [6 x i8]* %quantized_hidden_sta_49, [6 x i8]* %quantized_hidden_sta_50, [6 x i8]* %quantized_hidden_sta_51, [6 x i8]* %quantized_hidden_sta_52, [6 x i8]* %quantized_hidden_sta_53, [6 x i8]* %quantized_hidden_sta_54, [6 x i8]* %quantized_hidden_sta_55, [6 x i8]* %quantized_hidden_sta_56, [6 x i8]* %quantized_hidden_sta_57, [6 x i8]* %quantized_hidden_sta_58, [6 x i8]* %quantized_hidden_sta_59, [6 x i8]* %quantized_hidden_sta_60, [6 x i8]* %quantized_hidden_sta_61, [6 x i8]* %quantized_hidden_sta_62, [6 x i8]* %quantized_hidden_sta_63, [6 x i8]* %quantized_hidden_sta_64, [6 x i8]* %quantized_hidden_sta_65, [6 x i8]* %quantized_hidden_sta_66, [6 x i8]* %quantized_hidden_sta_67, [6 x i8]* %quantized_hidden_sta_68, [6 x i8]* %quantized_hidden_sta_69, [6 x i8]* %quantized_hidden_sta_70, [6 x i8]* %quantized_hidden_sta_71, [6 x i8]* %quantized_hidden_sta_72, [6 x i8]* %quantized_hidden_sta_73, [6 x i8]* %quantized_hidden_sta_74, [6 x i8]* %quantized_hidden_sta_75, [6 x i8]* %quantized_hidden_sta_76, [6 x i8]* %quantized_hidden_sta_77, [6 x i8]* %quantized_hidden_sta_78, [6 x i8]* %quantized_hidden_sta_79, [6 x i8]* %quantized_hidden_sta_80, [6 x i8]* %quantized_hidden_sta_81, [6 x i8]* %quantized_hidden_sta_82, [6 x i8]* %quantized_hidden_sta_83, [6 x i8]* %quantized_hidden_sta_84, [6 x i8]* %quantized_hidden_sta_85, [6 x i8]* %quantized_hidden_sta_86, [6 x i8]* %quantized_hidden_sta_87, [6 x i8]* %quantized_hidden_sta_88, [6 x i8]* %quantized_hidden_sta_89, [6 x i8]* %quantized_hidden_sta_90, [6 x i8]* %quantized_hidden_sta_91, [6 x i8]* %quantized_hidden_sta_92, [6 x i8]* %quantized_hidden_sta_93, [6 x i8]* %quantized_hidden_sta_94, [6 x i8]* %quantized_hidden_sta_95, [6 x i8]* %quantized_hidden_sta_96, [6 x i8]* %quantized_hidden_sta_97, [6 x i8]* %quantized_hidden_sta_98, [6 x i8]* %quantized_hidden_sta_99, [6 x i8]* %quantized_hidden_sta_100, [6 x i8]* %quantized_hidden_sta_101, [6 x i8]* %quantized_hidden_sta_102, [6 x i8]* %quantized_hidden_sta_103, [6 x i8]* %quantized_hidden_sta_104, [6 x i8]* %quantized_hidden_sta_105, [6 x i8]* %quantized_hidden_sta_106, [6 x i8]* %quantized_hidden_sta_107, [6 x i8]* %quantized_hidden_sta_108, [6 x i8]* %quantized_hidden_sta_109, [6 x i8]* %quantized_hidden_sta_110, [6 x i8]* %quantized_hidden_sta_111, [6 x i8]* %quantized_hidden_sta_112, [6 x i8]* %quantized_hidden_sta_113, [6 x i8]* %quantized_hidden_sta_114, [6 x i8]* %quantized_hidden_sta_115, [6 x i8]* %quantized_hidden_sta_116, [6 x i8]* %quantized_hidden_sta_117, [6 x i8]* %quantized_hidden_sta_118, [6 x i8]* %quantized_hidden_sta_119, [6 x i8]* %quantized_hidden_sta_120, [6 x i8]* %quantized_hidden_sta_121, [6 x i8]* %quantized_hidden_sta_122, [6 x i8]* %quantized_hidden_sta_123, [6 x i8]* %quantized_hidden_sta_124, [6 x i8]* %quantized_hidden_sta_125, [6 x i8]* %quantized_hidden_sta_126, [6 x i8]* %quantized_hidden_sta_127, [6 x i8]* %quantized_hidden_sta_128, [6 x i8]* %quantized_hidden_sta_129, [6 x i8]* %quantized_hidden_sta_130, [6 x i8]* %quantized_hidden_sta_131, [6 x i8]* %quantized_hidden_sta_132, [6 x i8]* %quantized_hidden_sta_133, [6 x i8]* %quantized_hidden_sta_134, [6 x i8]* %quantized_hidden_sta_135, [6 x i8]* %quantized_hidden_sta_136, [6 x i8]* %quantized_hidden_sta_137, [6 x i8]* %quantized_hidden_sta_138, [6 x i8]* %quantized_hidden_sta_139, [6 x i8]* %quantized_hidden_sta_140, [6 x i8]* %quantized_hidden_sta_141, [6 x i8]* %quantized_hidden_sta_142, [6 x i8]* %quantized_hidden_sta_143, [6 x i8]* %quantized_hidden_sta_144, [6 x i8]* %quantized_hidden_sta_145, [6 x i8]* %quantized_hidden_sta_146, [6 x i8]* %quantized_hidden_sta_147, [6 x i8]* %quantized_hidden_sta_148, [6 x i8]* %quantized_hidden_sta_149, [6 x i8]* %quantized_hidden_sta_150, [6 x i8]* %quantized_hidden_sta_151, [6 x i8]* %quantized_hidden_sta_152, [6 x i8]* %quantized_hidden_sta_153, [6 x i8]* %quantized_hidden_sta_154, [6 x i8]* %quantized_hidden_sta_155, [6 x i8]* %quantized_hidden_sta_156, [6 x i8]* %quantized_hidden_sta_157, [6 x i8]* %quantized_hidden_sta_158, [6 x i8]* %quantized_hidden_sta_159, [6 x i8]* %quantized_hidden_sta_160, [6 x i8]* %quantized_hidden_sta_161, [6 x i8]* %quantized_hidden_sta_162, [6 x i8]* %quantized_hidden_sta_163, [6 x i8]* %quantized_hidden_sta_164, [6 x i8]* %quantized_hidden_sta_165, [6 x i8]* %quantized_hidden_sta_166, [6 x i8]* %quantized_hidden_sta_167, [6 x i8]* %quantized_hidden_sta_168, [6 x i8]* %quantized_hidden_sta_169, [6 x i8]* %quantized_hidden_sta_170, [6 x i8]* %quantized_hidden_sta_171, [6 x i8]* %quantized_hidden_sta_172, [6 x i8]* %quantized_hidden_sta_173, [6 x i8]* %quantized_hidden_sta_174, [6 x i8]* %quantized_hidden_sta_175, [6 x i8]* %quantized_hidden_sta_176, [6 x i8]* %quantized_hidden_sta_177, [6 x i8]* %quantized_hidden_sta_178, [6 x i8]* %quantized_hidden_sta_179, [6 x i8]* %quantized_hidden_sta_180, [6 x i8]* %quantized_hidden_sta_181, [6 x i8]* %quantized_hidden_sta_182, [6 x i8]* %quantized_hidden_sta_183, [6 x i8]* %quantized_hidden_sta_184, [6 x i8]* %quantized_hidden_sta_185, [6 x i8]* %quantized_hidden_sta_186, [6 x i8]* %quantized_hidden_sta_187, [6 x i8]* %quantized_hidden_sta_188, [6 x i8]* %quantized_hidden_sta_189, [6 x i8]* %quantized_hidden_sta_190, [6 x i8]* %quantized_hidden_sta_191, [6 x i8]* %quantized_hidden_sta_192, [6 x i8]* %quantized_hidden_sta_193, [6 x i8]* %quantized_hidden_sta_194, [6 x i8]* %quantized_hidden_sta_195, [6 x i8]* %quantized_hidden_sta_196, [6 x i8]* %quantized_hidden_sta_197, [6 x i8]* %quantized_hidden_sta_198, [6 x i8]* %quantized_hidden_sta_199, [6 x i8]* %quantized_hidden_sta_200, [6 x i8]* %quantized_hidden_sta_201, [6 x i8]* %quantized_hidden_sta_202, [6 x i8]* %quantized_hidden_sta_203, [6 x i8]* %quantized_hidden_sta_204, [6 x i8]* %quantized_hidden_sta_205, [6 x i8]* %quantized_hidden_sta_206, [6 x i8]* %quantized_hidden_sta_207, [6 x i8]* %quantized_hidden_sta_208, [6 x i8]* %quantized_hidden_sta_209, [6 x i8]* %quantized_hidden_sta_210, [6 x i8]* %quantized_hidden_sta_211, [6 x i8]* %quantized_hidden_sta_212, [6 x i8]* %quantized_hidden_sta_213, [6 x i8]* %quantized_hidden_sta_214, [6 x i8]* %quantized_hidden_sta_215, [6 x i8]* %quantized_hidden_sta_216, [6 x i8]* %quantized_hidden_sta_217, [6 x i8]* %quantized_hidden_sta_218, [6 x i8]* %quantized_hidden_sta_219, [6 x i8]* %quantized_hidden_sta_220, [6 x i8]* %quantized_hidden_sta_221, [6 x i8]* %quantized_hidden_sta_222, [6 x i8]* %quantized_hidden_sta_223, [6 x i8]* %quantized_hidden_sta_224, [6 x i8]* %quantized_hidden_sta_225, [6 x i8]* %quantized_hidden_sta_226, [6 x i8]* %quantized_hidden_sta_227, [6 x i8]* %quantized_hidden_sta_228, [6 x i8]* %quantized_hidden_sta_229, [6 x i8]* %quantized_hidden_sta_230, [6 x i8]* %quantized_hidden_sta_231, [6 x i8]* %quantized_hidden_sta_232, [6 x i8]* %quantized_hidden_sta_233, [6 x i8]* %quantized_hidden_sta_234, [6 x i8]* %quantized_hidden_sta_235, [6 x i8]* %quantized_hidden_sta_236, [6 x i8]* %quantized_hidden_sta_237, [6 x i8]* %quantized_hidden_sta_238, [6 x i8]* %quantized_hidden_sta_239, [6 x i8]* %quantized_hidden_sta_240, [6 x i8]* %quantized_hidden_sta_241, [6 x i8]* %quantized_hidden_sta_242, [6 x i8]* %quantized_hidden_sta_243, [6 x i8]* %quantized_hidden_sta_244, [6 x i8]* %quantized_hidden_sta_245, [6 x i8]* %quantized_hidden_sta_246, [6 x i8]* %quantized_hidden_sta_247, [6 x i8]* %quantized_hidden_sta_248, [6 x i8]* %quantized_hidden_sta_249, [6 x i8]* %quantized_hidden_sta_250, [6 x i8]* %quantized_hidden_sta_251, [6 x i8]* %quantized_hidden_sta_252, [6 x i8]* %quantized_hidden_sta_253, [6 x i8]* %quantized_hidden_sta_254, [6 x i8]* %quantized_hidden_sta_255, [1536 x i40]* %v_proj_re_0_V, i40 %scales_0_V, [9216 x i8]* @v_weights_0, [9216 x i8]* @v_weights_1, [9216 x i8]* @v_weights_2, [9216 x i8]* @v_weights_3, [9216 x i8]* @v_weights_4, [9216 x i8]* @v_weights_5, [9216 x i8]* @v_weights_6, [9216 x i8]* @v_weights_7, [9216 x i8]* @v_weights_8, [9216 x i8]* @v_weights_9, [9216 x i8]* @v_weights_10, [9216 x i8]* @v_weights_11, [9216 x i8]* @v_weights_12, [9216 x i8]* @v_weights_13, [9216 x i8]* @v_weights_14, [9216 x i8]* @v_weights_15, [9216 x i8]* @v_weights_16, [9216 x i8]* @v_weights_17, [9216 x i8]* @v_weights_18, [9216 x i8]* @v_weights_19, [9216 x i8]* @v_weights_20, [9216 x i8]* @v_weights_21, [9216 x i8]* @v_weights_22, [9216 x i8]* @v_weights_23, [9216 x i8]* @v_weights_24, [9216 x i8]* @v_weights_25, [9216 x i8]* @v_weights_26, [9216 x i8]* @v_weights_27, [9216 x i8]* @v_weights_28, [9216 x i8]* @v_weights_29, [9216 x i8]* @v_weights_30, [9216 x i8]* @v_weights_31, [9216 x i8]* @v_weights_32, [9216 x i8]* @v_weights_33, [9216 x i8]* @v_weights_34, [9216 x i8]* @v_weights_35, [9216 x i8]* @v_weights_36, [9216 x i8]* @v_weights_37, [9216 x i8]* @v_weights_38, [9216 x i8]* @v_weights_39, [9216 x i8]* @v_weights_40, [9216 x i8]* @v_weights_41, [9216 x i8]* @v_weights_42, [9216 x i8]* @v_weights_43, [9216 x i8]* @v_weights_44, [9216 x i8]* @v_weights_45, [9216 x i8]* @v_weights_46, [9216 x i8]* @v_weights_47, [9216 x i8]* @v_weights_48, [9216 x i8]* @v_weights_49, [9216 x i8]* @v_weights_50, [9216 x i8]* @v_weights_51, [9216 x i8]* @v_weights_52, [9216 x i8]* @v_weights_53, [9216 x i8]* @v_weights_54, [9216 x i8]* @v_weights_55, [9216 x i8]* @v_weights_56, [9216 x i8]* @v_weights_57, [9216 x i8]* @v_weights_58, [9216 x i8]* @v_weights_59, [9216 x i8]* @v_weights_60, [9216 x i8]* @v_weights_61, [9216 x i8]* @v_weights_62, [9216 x i8]* @v_weights_63, i22 716061)" [attention.cpp:126]   --->   Operation 706 'call' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 707 [2/2] (1.81ns)   --->   "call fastcc void @reshape_2D_to_3D([1536 x i40]* %k_proj_re_0_V, [1536 x i40]* %k_proj_0_V)" [attention.cpp:139]   --->   Operation 707 'call' <Predicate = true> <Delay = 1.81> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 10 <SV = 9> <Delay = 0.00>
ST_10 : Operation 708 [1/2] (0.00ns)   --->   "call fastcc void @linear_forward_no_mu([6 x i8]* %quantized_hidden_sta, [6 x i8]* %quantized_hidden_sta_1, [6 x i8]* %quantized_hidden_sta_2, [6 x i8]* %quantized_hidden_sta_3, [6 x i8]* %quantized_hidden_sta_4, [6 x i8]* %quantized_hidden_sta_5, [6 x i8]* %quantized_hidden_sta_6, [6 x i8]* %quantized_hidden_sta_7, [6 x i8]* %quantized_hidden_sta_8, [6 x i8]* %quantized_hidden_sta_9, [6 x i8]* %quantized_hidden_sta_10, [6 x i8]* %quantized_hidden_sta_11, [6 x i8]* %quantized_hidden_sta_12, [6 x i8]* %quantized_hidden_sta_13, [6 x i8]* %quantized_hidden_sta_14, [6 x i8]* %quantized_hidden_sta_15, [6 x i8]* %quantized_hidden_sta_16, [6 x i8]* %quantized_hidden_sta_17, [6 x i8]* %quantized_hidden_sta_18, [6 x i8]* %quantized_hidden_sta_19, [6 x i8]* %quantized_hidden_sta_20, [6 x i8]* %quantized_hidden_sta_21, [6 x i8]* %quantized_hidden_sta_22, [6 x i8]* %quantized_hidden_sta_23, [6 x i8]* %quantized_hidden_sta_24, [6 x i8]* %quantized_hidden_sta_25, [6 x i8]* %quantized_hidden_sta_26, [6 x i8]* %quantized_hidden_sta_27, [6 x i8]* %quantized_hidden_sta_28, [6 x i8]* %quantized_hidden_sta_29, [6 x i8]* %quantized_hidden_sta_30, [6 x i8]* %quantized_hidden_sta_31, [6 x i8]* %quantized_hidden_sta_32, [6 x i8]* %quantized_hidden_sta_33, [6 x i8]* %quantized_hidden_sta_34, [6 x i8]* %quantized_hidden_sta_35, [6 x i8]* %quantized_hidden_sta_36, [6 x i8]* %quantized_hidden_sta_37, [6 x i8]* %quantized_hidden_sta_38, [6 x i8]* %quantized_hidden_sta_39, [6 x i8]* %quantized_hidden_sta_40, [6 x i8]* %quantized_hidden_sta_41, [6 x i8]* %quantized_hidden_sta_42, [6 x i8]* %quantized_hidden_sta_43, [6 x i8]* %quantized_hidden_sta_44, [6 x i8]* %quantized_hidden_sta_45, [6 x i8]* %quantized_hidden_sta_46, [6 x i8]* %quantized_hidden_sta_47, [6 x i8]* %quantized_hidden_sta_48, [6 x i8]* %quantized_hidden_sta_49, [6 x i8]* %quantized_hidden_sta_50, [6 x i8]* %quantized_hidden_sta_51, [6 x i8]* %quantized_hidden_sta_52, [6 x i8]* %quantized_hidden_sta_53, [6 x i8]* %quantized_hidden_sta_54, [6 x i8]* %quantized_hidden_sta_55, [6 x i8]* %quantized_hidden_sta_56, [6 x i8]* %quantized_hidden_sta_57, [6 x i8]* %quantized_hidden_sta_58, [6 x i8]* %quantized_hidden_sta_59, [6 x i8]* %quantized_hidden_sta_60, [6 x i8]* %quantized_hidden_sta_61, [6 x i8]* %quantized_hidden_sta_62, [6 x i8]* %quantized_hidden_sta_63, [6 x i8]* %quantized_hidden_sta_64, [6 x i8]* %quantized_hidden_sta_65, [6 x i8]* %quantized_hidden_sta_66, [6 x i8]* %quantized_hidden_sta_67, [6 x i8]* %quantized_hidden_sta_68, [6 x i8]* %quantized_hidden_sta_69, [6 x i8]* %quantized_hidden_sta_70, [6 x i8]* %quantized_hidden_sta_71, [6 x i8]* %quantized_hidden_sta_72, [6 x i8]* %quantized_hidden_sta_73, [6 x i8]* %quantized_hidden_sta_74, [6 x i8]* %quantized_hidden_sta_75, [6 x i8]* %quantized_hidden_sta_76, [6 x i8]* %quantized_hidden_sta_77, [6 x i8]* %quantized_hidden_sta_78, [6 x i8]* %quantized_hidden_sta_79, [6 x i8]* %quantized_hidden_sta_80, [6 x i8]* %quantized_hidden_sta_81, [6 x i8]* %quantized_hidden_sta_82, [6 x i8]* %quantized_hidden_sta_83, [6 x i8]* %quantized_hidden_sta_84, [6 x i8]* %quantized_hidden_sta_85, [6 x i8]* %quantized_hidden_sta_86, [6 x i8]* %quantized_hidden_sta_87, [6 x i8]* %quantized_hidden_sta_88, [6 x i8]* %quantized_hidden_sta_89, [6 x i8]* %quantized_hidden_sta_90, [6 x i8]* %quantized_hidden_sta_91, [6 x i8]* %quantized_hidden_sta_92, [6 x i8]* %quantized_hidden_sta_93, [6 x i8]* %quantized_hidden_sta_94, [6 x i8]* %quantized_hidden_sta_95, [6 x i8]* %quantized_hidden_sta_96, [6 x i8]* %quantized_hidden_sta_97, [6 x i8]* %quantized_hidden_sta_98, [6 x i8]* %quantized_hidden_sta_99, [6 x i8]* %quantized_hidden_sta_100, [6 x i8]* %quantized_hidden_sta_101, [6 x i8]* %quantized_hidden_sta_102, [6 x i8]* %quantized_hidden_sta_103, [6 x i8]* %quantized_hidden_sta_104, [6 x i8]* %quantized_hidden_sta_105, [6 x i8]* %quantized_hidden_sta_106, [6 x i8]* %quantized_hidden_sta_107, [6 x i8]* %quantized_hidden_sta_108, [6 x i8]* %quantized_hidden_sta_109, [6 x i8]* %quantized_hidden_sta_110, [6 x i8]* %quantized_hidden_sta_111, [6 x i8]* %quantized_hidden_sta_112, [6 x i8]* %quantized_hidden_sta_113, [6 x i8]* %quantized_hidden_sta_114, [6 x i8]* %quantized_hidden_sta_115, [6 x i8]* %quantized_hidden_sta_116, [6 x i8]* %quantized_hidden_sta_117, [6 x i8]* %quantized_hidden_sta_118, [6 x i8]* %quantized_hidden_sta_119, [6 x i8]* %quantized_hidden_sta_120, [6 x i8]* %quantized_hidden_sta_121, [6 x i8]* %quantized_hidden_sta_122, [6 x i8]* %quantized_hidden_sta_123, [6 x i8]* %quantized_hidden_sta_124, [6 x i8]* %quantized_hidden_sta_125, [6 x i8]* %quantized_hidden_sta_126, [6 x i8]* %quantized_hidden_sta_127, [6 x i8]* %quantized_hidden_sta_128, [6 x i8]* %quantized_hidden_sta_129, [6 x i8]* %quantized_hidden_sta_130, [6 x i8]* %quantized_hidden_sta_131, [6 x i8]* %quantized_hidden_sta_132, [6 x i8]* %quantized_hidden_sta_133, [6 x i8]* %quantized_hidden_sta_134, [6 x i8]* %quantized_hidden_sta_135, [6 x i8]* %quantized_hidden_sta_136, [6 x i8]* %quantized_hidden_sta_137, [6 x i8]* %quantized_hidden_sta_138, [6 x i8]* %quantized_hidden_sta_139, [6 x i8]* %quantized_hidden_sta_140, [6 x i8]* %quantized_hidden_sta_141, [6 x i8]* %quantized_hidden_sta_142, [6 x i8]* %quantized_hidden_sta_143, [6 x i8]* %quantized_hidden_sta_144, [6 x i8]* %quantized_hidden_sta_145, [6 x i8]* %quantized_hidden_sta_146, [6 x i8]* %quantized_hidden_sta_147, [6 x i8]* %quantized_hidden_sta_148, [6 x i8]* %quantized_hidden_sta_149, [6 x i8]* %quantized_hidden_sta_150, [6 x i8]* %quantized_hidden_sta_151, [6 x i8]* %quantized_hidden_sta_152, [6 x i8]* %quantized_hidden_sta_153, [6 x i8]* %quantized_hidden_sta_154, [6 x i8]* %quantized_hidden_sta_155, [6 x i8]* %quantized_hidden_sta_156, [6 x i8]* %quantized_hidden_sta_157, [6 x i8]* %quantized_hidden_sta_158, [6 x i8]* %quantized_hidden_sta_159, [6 x i8]* %quantized_hidden_sta_160, [6 x i8]* %quantized_hidden_sta_161, [6 x i8]* %quantized_hidden_sta_162, [6 x i8]* %quantized_hidden_sta_163, [6 x i8]* %quantized_hidden_sta_164, [6 x i8]* %quantized_hidden_sta_165, [6 x i8]* %quantized_hidden_sta_166, [6 x i8]* %quantized_hidden_sta_167, [6 x i8]* %quantized_hidden_sta_168, [6 x i8]* %quantized_hidden_sta_169, [6 x i8]* %quantized_hidden_sta_170, [6 x i8]* %quantized_hidden_sta_171, [6 x i8]* %quantized_hidden_sta_172, [6 x i8]* %quantized_hidden_sta_173, [6 x i8]* %quantized_hidden_sta_174, [6 x i8]* %quantized_hidden_sta_175, [6 x i8]* %quantized_hidden_sta_176, [6 x i8]* %quantized_hidden_sta_177, [6 x i8]* %quantized_hidden_sta_178, [6 x i8]* %quantized_hidden_sta_179, [6 x i8]* %quantized_hidden_sta_180, [6 x i8]* %quantized_hidden_sta_181, [6 x i8]* %quantized_hidden_sta_182, [6 x i8]* %quantized_hidden_sta_183, [6 x i8]* %quantized_hidden_sta_184, [6 x i8]* %quantized_hidden_sta_185, [6 x i8]* %quantized_hidden_sta_186, [6 x i8]* %quantized_hidden_sta_187, [6 x i8]* %quantized_hidden_sta_188, [6 x i8]* %quantized_hidden_sta_189, [6 x i8]* %quantized_hidden_sta_190, [6 x i8]* %quantized_hidden_sta_191, [6 x i8]* %quantized_hidden_sta_192, [6 x i8]* %quantized_hidden_sta_193, [6 x i8]* %quantized_hidden_sta_194, [6 x i8]* %quantized_hidden_sta_195, [6 x i8]* %quantized_hidden_sta_196, [6 x i8]* %quantized_hidden_sta_197, [6 x i8]* %quantized_hidden_sta_198, [6 x i8]* %quantized_hidden_sta_199, [6 x i8]* %quantized_hidden_sta_200, [6 x i8]* %quantized_hidden_sta_201, [6 x i8]* %quantized_hidden_sta_202, [6 x i8]* %quantized_hidden_sta_203, [6 x i8]* %quantized_hidden_sta_204, [6 x i8]* %quantized_hidden_sta_205, [6 x i8]* %quantized_hidden_sta_206, [6 x i8]* %quantized_hidden_sta_207, [6 x i8]* %quantized_hidden_sta_208, [6 x i8]* %quantized_hidden_sta_209, [6 x i8]* %quantized_hidden_sta_210, [6 x i8]* %quantized_hidden_sta_211, [6 x i8]* %quantized_hidden_sta_212, [6 x i8]* %quantized_hidden_sta_213, [6 x i8]* %quantized_hidden_sta_214, [6 x i8]* %quantized_hidden_sta_215, [6 x i8]* %quantized_hidden_sta_216, [6 x i8]* %quantized_hidden_sta_217, [6 x i8]* %quantized_hidden_sta_218, [6 x i8]* %quantized_hidden_sta_219, [6 x i8]* %quantized_hidden_sta_220, [6 x i8]* %quantized_hidden_sta_221, [6 x i8]* %quantized_hidden_sta_222, [6 x i8]* %quantized_hidden_sta_223, [6 x i8]* %quantized_hidden_sta_224, [6 x i8]* %quantized_hidden_sta_225, [6 x i8]* %quantized_hidden_sta_226, [6 x i8]* %quantized_hidden_sta_227, [6 x i8]* %quantized_hidden_sta_228, [6 x i8]* %quantized_hidden_sta_229, [6 x i8]* %quantized_hidden_sta_230, [6 x i8]* %quantized_hidden_sta_231, [6 x i8]* %quantized_hidden_sta_232, [6 x i8]* %quantized_hidden_sta_233, [6 x i8]* %quantized_hidden_sta_234, [6 x i8]* %quantized_hidden_sta_235, [6 x i8]* %quantized_hidden_sta_236, [6 x i8]* %quantized_hidden_sta_237, [6 x i8]* %quantized_hidden_sta_238, [6 x i8]* %quantized_hidden_sta_239, [6 x i8]* %quantized_hidden_sta_240, [6 x i8]* %quantized_hidden_sta_241, [6 x i8]* %quantized_hidden_sta_242, [6 x i8]* %quantized_hidden_sta_243, [6 x i8]* %quantized_hidden_sta_244, [6 x i8]* %quantized_hidden_sta_245, [6 x i8]* %quantized_hidden_sta_246, [6 x i8]* %quantized_hidden_sta_247, [6 x i8]* %quantized_hidden_sta_248, [6 x i8]* %quantized_hidden_sta_249, [6 x i8]* %quantized_hidden_sta_250, [6 x i8]* %quantized_hidden_sta_251, [6 x i8]* %quantized_hidden_sta_252, [6 x i8]* %quantized_hidden_sta_253, [6 x i8]* %quantized_hidden_sta_254, [6 x i8]* %quantized_hidden_sta_255, [1536 x i40]* %v_proj_re_0_V, i40 %scales_0_V, [9216 x i8]* @v_weights_0, [9216 x i8]* @v_weights_1, [9216 x i8]* @v_weights_2, [9216 x i8]* @v_weights_3, [9216 x i8]* @v_weights_4, [9216 x i8]* @v_weights_5, [9216 x i8]* @v_weights_6, [9216 x i8]* @v_weights_7, [9216 x i8]* @v_weights_8, [9216 x i8]* @v_weights_9, [9216 x i8]* @v_weights_10, [9216 x i8]* @v_weights_11, [9216 x i8]* @v_weights_12, [9216 x i8]* @v_weights_13, [9216 x i8]* @v_weights_14, [9216 x i8]* @v_weights_15, [9216 x i8]* @v_weights_16, [9216 x i8]* @v_weights_17, [9216 x i8]* @v_weights_18, [9216 x i8]* @v_weights_19, [9216 x i8]* @v_weights_20, [9216 x i8]* @v_weights_21, [9216 x i8]* @v_weights_22, [9216 x i8]* @v_weights_23, [9216 x i8]* @v_weights_24, [9216 x i8]* @v_weights_25, [9216 x i8]* @v_weights_26, [9216 x i8]* @v_weights_27, [9216 x i8]* @v_weights_28, [9216 x i8]* @v_weights_29, [9216 x i8]* @v_weights_30, [9216 x i8]* @v_weights_31, [9216 x i8]* @v_weights_32, [9216 x i8]* @v_weights_33, [9216 x i8]* @v_weights_34, [9216 x i8]* @v_weights_35, [9216 x i8]* @v_weights_36, [9216 x i8]* @v_weights_37, [9216 x i8]* @v_weights_38, [9216 x i8]* @v_weights_39, [9216 x i8]* @v_weights_40, [9216 x i8]* @v_weights_41, [9216 x i8]* @v_weights_42, [9216 x i8]* @v_weights_43, [9216 x i8]* @v_weights_44, [9216 x i8]* @v_weights_45, [9216 x i8]* @v_weights_46, [9216 x i8]* @v_weights_47, [9216 x i8]* @v_weights_48, [9216 x i8]* @v_weights_49, [9216 x i8]* @v_weights_50, [9216 x i8]* @v_weights_51, [9216 x i8]* @v_weights_52, [9216 x i8]* @v_weights_53, [9216 x i8]* @v_weights_54, [9216 x i8]* @v_weights_55, [9216 x i8]* @v_weights_56, [9216 x i8]* @v_weights_57, [9216 x i8]* @v_weights_58, [9216 x i8]* @v_weights_59, [9216 x i8]* @v_weights_60, [9216 x i8]* @v_weights_61, [9216 x i8]* @v_weights_62, [9216 x i8]* @v_weights_63, i22 716061)" [attention.cpp:126]   --->   Operation 708 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_10 : Operation 709 [1/2] (0.00ns)   --->   "call fastcc void @reshape_2D_to_3D([1536 x i40]* %k_proj_re_0_V, [1536 x i40]* %k_proj_0_V)" [attention.cpp:139]   --->   Operation 709 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 10> <Delay = 1.81>
ST_11 : Operation 710 [2/2] (1.81ns)   --->   "call fastcc void @reshape_2D_to_3D([1536 x i40]* %v_proj_re_0_V, [1536 x i40]* %v_proj_0_V)" [attention.cpp:140]   --->   Operation 710 'call' <Predicate = true> <Delay = 1.81> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_11 : Operation 711 [2/2] (0.00ns)   --->   "call fastcc void @apply_rotary_pos_emb([1536 x i40]* %q_proj_0_V, [1536 x i40]* %k_proj_0_V, [32 x i40]* %q_embed_0_0_V, [32 x i40]* %q_embed_1_0_V, [32 x i40]* %q_embed_2_0_V, [32 x i40]* %q_embed_3_0_V, [32 x i40]* %q_embed_4_0_V, [32 x i40]* %q_embed_5_0_V, [32 x i40]* %q_embed_6_0_V, [32 x i40]* %q_embed_7_0_V, [32 x i40]* %q_embed_8_0_V, [32 x i40]* %q_embed_9_0_V, [32 x i40]* %q_embed_10_0_V, [32 x i40]* %q_embed_11_0_V, [32 x i40]* %q_embed_12_0_V, [32 x i40]* %q_embed_13_0_V, [32 x i40]* %q_embed_14_0_V, [32 x i40]* %q_embed_15_0_V, [32 x i40]* %q_embed_16_0_V, [32 x i40]* %q_embed_17_0_V, [32 x i40]* %q_embed_18_0_V, [32 x i40]* %q_embed_19_0_V, [32 x i40]* %q_embed_20_0_V, [32 x i40]* %q_embed_21_0_V, [32 x i40]* %q_embed_22_0_V, [32 x i40]* %q_embed_23_0_V, [32 x i40]* %q_embed_24_0_V, [32 x i40]* %q_embed_25_0_V, [32 x i40]* %q_embed_26_0_V, [32 x i40]* %q_embed_27_0_V, [32 x i40]* %q_embed_28_0_V, [32 x i40]* %q_embed_29_0_V, [32 x i40]* %q_embed_30_0_V, [32 x i40]* %q_embed_31_0_V, [16 x i40]* %q_embed_32_0_0_V, [16 x i40]* %q_embed_33_0_0_V, [16 x i40]* %q_embed_34_0_0_V, [16 x i40]* %q_embed_35_0_0_V, [16 x i40]* %q_embed_36_0_0_V, [16 x i40]* %q_embed_37_0_0_V, [16 x i40]* %q_embed_38_0_0_V, [16 x i40]* %q_embed_39_0_0_V, [16 x i40]* %q_embed_40_0_0_V, [16 x i40]* %q_embed_41_0_0_V, [16 x i40]* %q_embed_42_0_0_V, [16 x i40]* %q_embed_43_0_0_V, [16 x i40]* %q_embed_44_0_0_V, [16 x i40]* %q_embed_45_0_0_V, [16 x i40]* %q_embed_46_0_0_V, [16 x i40]* %q_embed_47_0_0_V, [16 x i40]* %q_embed_48_0_0_V, [16 x i40]* %q_embed_49_0_0_V, [16 x i40]* %q_embed_50_0_0_V, [16 x i40]* %q_embed_51_0_0_V, [16 x i40]* %q_embed_52_0_0_V, [16 x i40]* %q_embed_53_0_0_V, [16 x i40]* %q_embed_54_0_0_V, [16 x i40]* %q_embed_55_0_0_V, [16 x i40]* %q_embed_56_0_0_V, [16 x i40]* %q_embed_57_0_0_V, [16 x i40]* %q_embed_58_0_0_V, [16 x i40]* %q_embed_59_0_0_V, [16 x i40]* %q_embed_60_0_0_V, [16 x i40]* %q_embed_61_0_0_V, [16 x i40]* %q_embed_62_0_0_V, [16 x i40]* %q_embed_63_0_0_V, [1536 x i40]* %k_embed_0_V)" [attention.cpp:145]   --->   Operation 711 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 11> <Delay = 0.00>
ST_12 : Operation 712 [1/2] (0.00ns)   --->   "call fastcc void @reshape_2D_to_3D([1536 x i40]* %v_proj_re_0_V, [1536 x i40]* %v_proj_0_V)" [attention.cpp:140]   --->   Operation 712 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_12 : Operation 713 [1/2] (0.00ns)   --->   "call fastcc void @apply_rotary_pos_emb([1536 x i40]* %q_proj_0_V, [1536 x i40]* %k_proj_0_V, [32 x i40]* %q_embed_0_0_V, [32 x i40]* %q_embed_1_0_V, [32 x i40]* %q_embed_2_0_V, [32 x i40]* %q_embed_3_0_V, [32 x i40]* %q_embed_4_0_V, [32 x i40]* %q_embed_5_0_V, [32 x i40]* %q_embed_6_0_V, [32 x i40]* %q_embed_7_0_V, [32 x i40]* %q_embed_8_0_V, [32 x i40]* %q_embed_9_0_V, [32 x i40]* %q_embed_10_0_V, [32 x i40]* %q_embed_11_0_V, [32 x i40]* %q_embed_12_0_V, [32 x i40]* %q_embed_13_0_V, [32 x i40]* %q_embed_14_0_V, [32 x i40]* %q_embed_15_0_V, [32 x i40]* %q_embed_16_0_V, [32 x i40]* %q_embed_17_0_V, [32 x i40]* %q_embed_18_0_V, [32 x i40]* %q_embed_19_0_V, [32 x i40]* %q_embed_20_0_V, [32 x i40]* %q_embed_21_0_V, [32 x i40]* %q_embed_22_0_V, [32 x i40]* %q_embed_23_0_V, [32 x i40]* %q_embed_24_0_V, [32 x i40]* %q_embed_25_0_V, [32 x i40]* %q_embed_26_0_V, [32 x i40]* %q_embed_27_0_V, [32 x i40]* %q_embed_28_0_V, [32 x i40]* %q_embed_29_0_V, [32 x i40]* %q_embed_30_0_V, [32 x i40]* %q_embed_31_0_V, [16 x i40]* %q_embed_32_0_0_V, [16 x i40]* %q_embed_33_0_0_V, [16 x i40]* %q_embed_34_0_0_V, [16 x i40]* %q_embed_35_0_0_V, [16 x i40]* %q_embed_36_0_0_V, [16 x i40]* %q_embed_37_0_0_V, [16 x i40]* %q_embed_38_0_0_V, [16 x i40]* %q_embed_39_0_0_V, [16 x i40]* %q_embed_40_0_0_V, [16 x i40]* %q_embed_41_0_0_V, [16 x i40]* %q_embed_42_0_0_V, [16 x i40]* %q_embed_43_0_0_V, [16 x i40]* %q_embed_44_0_0_V, [16 x i40]* %q_embed_45_0_0_V, [16 x i40]* %q_embed_46_0_0_V, [16 x i40]* %q_embed_47_0_0_V, [16 x i40]* %q_embed_48_0_0_V, [16 x i40]* %q_embed_49_0_0_V, [16 x i40]* %q_embed_50_0_0_V, [16 x i40]* %q_embed_51_0_0_V, [16 x i40]* %q_embed_52_0_0_V, [16 x i40]* %q_embed_53_0_0_V, [16 x i40]* %q_embed_54_0_0_V, [16 x i40]* %q_embed_55_0_0_V, [16 x i40]* %q_embed_56_0_0_V, [16 x i40]* %q_embed_57_0_0_V, [16 x i40]* %q_embed_58_0_0_V, [16 x i40]* %q_embed_59_0_0_V, [16 x i40]* %q_embed_60_0_0_V, [16 x i40]* %q_embed_61_0_0_V, [16 x i40]* %q_embed_62_0_0_V, [16 x i40]* %q_embed_63_0_0_V, [1536 x i40]* %k_embed_0_V)" [attention.cpp:145]   --->   Operation 713 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 13 <SV = 12> <Delay = 1.76>
ST_13 : Operation 714 [2/2] (1.76ns)   --->   "call fastcc void @cache_update([7680 x i40]* @k_cache_V, [9216 x i40]* %k_cache_upd_V, [1536 x i40]* %k_embed_0_V)" [attention.cpp:150]   --->   Operation 714 'call' <Predicate = true> <Delay = 1.76> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 14 <SV = 13> <Delay = 0.00>
ST_14 : Operation 715 [1/2] (0.00ns)   --->   "call fastcc void @cache_update([7680 x i40]* @k_cache_V, [9216 x i40]* %k_cache_upd_V, [1536 x i40]* %k_embed_0_V)" [attention.cpp:150]   --->   Operation 715 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 15 <SV = 14> <Delay = 1.76>
ST_15 : Operation 716 [2/2] (1.76ns)   --->   "call fastcc void @cache_update([7680 x i40]* @v_cache_V, [9216 x i40]* %v_cache_upd_V, [1536 x i40]* %v_proj_0_V)" [attention.cpp:153]   --->   Operation 716 'call' <Predicate = true> <Delay = 1.76> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_15 : Operation 717 [2/2] (0.00ns)   --->   "call fastcc void @transpose_last_two_d([9216 x i40]* %k_cache_upd_V, [192 x i40]* %k_proj_transposed_0, [192 x i40]* %k_proj_transposed_1, [192 x i40]* %k_proj_transposed_2, [192 x i40]* %k_proj_transposed_3, [192 x i40]* %k_proj_transposed_4, [192 x i40]* %k_proj_transposed_5, [192 x i40]* %k_proj_transposed_6, [192 x i40]* %k_proj_transposed_7, [192 x i40]* %k_proj_transposed_8, [192 x i40]* %k_proj_transposed_9, [192 x i40]* %k_proj_transposed_10, [192 x i40]* %k_proj_transposed_11, [192 x i40]* %k_proj_transposed_12, [192 x i40]* %k_proj_transposed_13, [192 x i40]* %k_proj_transposed_14, [192 x i40]* %k_proj_transposed_15, [192 x i40]* %k_proj_transposed_16, [192 x i40]* %k_proj_transposed_17, [192 x i40]* %k_proj_transposed_18, [192 x i40]* %k_proj_transposed_19, [192 x i40]* %k_proj_transposed_20, [192 x i40]* %k_proj_transposed_21, [192 x i40]* %k_proj_transposed_22, [192 x i40]* %k_proj_transposed_23, [192 x i40]* %k_proj_transposed_24, [192 x i40]* %k_proj_transposed_25, [192 x i40]* %k_proj_transposed_26, [192 x i40]* %k_proj_transposed_27, [192 x i40]* %k_proj_transposed_28, [192 x i40]* %k_proj_transposed_29, [192 x i40]* %k_proj_transposed_30, [192 x i40]* %k_proj_transposed_31, [96 x i40]* %k_proj_transposed_32, [96 x i40]* %k_proj_transposed_33, [96 x i40]* %k_proj_transposed_34, [96 x i40]* %k_proj_transposed_35, [96 x i40]* %k_proj_transposed_36, [96 x i40]* %k_proj_transposed_37, [96 x i40]* %k_proj_transposed_38, [96 x i40]* %k_proj_transposed_39, [96 x i40]* %k_proj_transposed_40, [96 x i40]* %k_proj_transposed_41, [96 x i40]* %k_proj_transposed_42, [96 x i40]* %k_proj_transposed_43, [96 x i40]* %k_proj_transposed_44, [96 x i40]* %k_proj_transposed_45, [96 x i40]* %k_proj_transposed_46, [96 x i40]* %k_proj_transposed_47, [96 x i40]* %k_proj_transposed_48, [96 x i40]* %k_proj_transposed_49, [96 x i40]* %k_proj_transposed_50, [96 x i40]* %k_proj_transposed_51, [96 x i40]* %k_proj_transposed_52, [96 x i40]* %k_proj_transposed_53, [96 x i40]* %k_proj_transposed_54, [96 x i40]* %k_proj_transposed_55, [96 x i40]* %k_proj_transposed_56, [96 x i40]* %k_proj_transposed_57, [96 x i40]* %k_proj_transposed_58, [96 x i40]* %k_proj_transposed_59, [96 x i40]* %k_proj_transposed_60, [96 x i40]* %k_proj_transposed_61, [96 x i40]* %k_proj_transposed_62, [96 x i40]* %k_proj_transposed_63)" [attention.cpp:159]   --->   Operation 717 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 16 <SV = 15> <Delay = 0.00>
ST_16 : Operation 718 [1/2] (0.00ns)   --->   "call fastcc void @cache_update([7680 x i40]* @v_cache_V, [9216 x i40]* %v_cache_upd_V, [1536 x i40]* %v_proj_0_V)" [attention.cpp:153]   --->   Operation 718 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_16 : Operation 719 [1/2] (0.00ns)   --->   "call fastcc void @transpose_last_two_d([9216 x i40]* %k_cache_upd_V, [192 x i40]* %k_proj_transposed_0, [192 x i40]* %k_proj_transposed_1, [192 x i40]* %k_proj_transposed_2, [192 x i40]* %k_proj_transposed_3, [192 x i40]* %k_proj_transposed_4, [192 x i40]* %k_proj_transposed_5, [192 x i40]* %k_proj_transposed_6, [192 x i40]* %k_proj_transposed_7, [192 x i40]* %k_proj_transposed_8, [192 x i40]* %k_proj_transposed_9, [192 x i40]* %k_proj_transposed_10, [192 x i40]* %k_proj_transposed_11, [192 x i40]* %k_proj_transposed_12, [192 x i40]* %k_proj_transposed_13, [192 x i40]* %k_proj_transposed_14, [192 x i40]* %k_proj_transposed_15, [192 x i40]* %k_proj_transposed_16, [192 x i40]* %k_proj_transposed_17, [192 x i40]* %k_proj_transposed_18, [192 x i40]* %k_proj_transposed_19, [192 x i40]* %k_proj_transposed_20, [192 x i40]* %k_proj_transposed_21, [192 x i40]* %k_proj_transposed_22, [192 x i40]* %k_proj_transposed_23, [192 x i40]* %k_proj_transposed_24, [192 x i40]* %k_proj_transposed_25, [192 x i40]* %k_proj_transposed_26, [192 x i40]* %k_proj_transposed_27, [192 x i40]* %k_proj_transposed_28, [192 x i40]* %k_proj_transposed_29, [192 x i40]* %k_proj_transposed_30, [192 x i40]* %k_proj_transposed_31, [96 x i40]* %k_proj_transposed_32, [96 x i40]* %k_proj_transposed_33, [96 x i40]* %k_proj_transposed_34, [96 x i40]* %k_proj_transposed_35, [96 x i40]* %k_proj_transposed_36, [96 x i40]* %k_proj_transposed_37, [96 x i40]* %k_proj_transposed_38, [96 x i40]* %k_proj_transposed_39, [96 x i40]* %k_proj_transposed_40, [96 x i40]* %k_proj_transposed_41, [96 x i40]* %k_proj_transposed_42, [96 x i40]* %k_proj_transposed_43, [96 x i40]* %k_proj_transposed_44, [96 x i40]* %k_proj_transposed_45, [96 x i40]* %k_proj_transposed_46, [96 x i40]* %k_proj_transposed_47, [96 x i40]* %k_proj_transposed_48, [96 x i40]* %k_proj_transposed_49, [96 x i40]* %k_proj_transposed_50, [96 x i40]* %k_proj_transposed_51, [96 x i40]* %k_proj_transposed_52, [96 x i40]* %k_proj_transposed_53, [96 x i40]* %k_proj_transposed_54, [96 x i40]* %k_proj_transposed_55, [96 x i40]* %k_proj_transposed_56, [96 x i40]* %k_proj_transposed_57, [96 x i40]* %k_proj_transposed_58, [96 x i40]* %k_proj_transposed_59, [96 x i40]* %k_proj_transposed_60, [96 x i40]* %k_proj_transposed_61, [96 x i40]* %k_proj_transposed_62, [96 x i40]* %k_proj_transposed_63)" [attention.cpp:159]   --->   Operation 719 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 17 <SV = 16> <Delay = 0.00>
ST_17 : Operation 720 [2/2] (0.00ns)   --->   "call fastcc void @GEMM_3D_float([32 x i40]* %q_embed_0_0_V, [32 x i40]* %q_embed_1_0_V, [32 x i40]* %q_embed_2_0_V, [32 x i40]* %q_embed_3_0_V, [32 x i40]* %q_embed_4_0_V, [32 x i40]* %q_embed_5_0_V, [32 x i40]* %q_embed_6_0_V, [32 x i40]* %q_embed_7_0_V, [32 x i40]* %q_embed_8_0_V, [32 x i40]* %q_embed_9_0_V, [32 x i40]* %q_embed_10_0_V, [32 x i40]* %q_embed_11_0_V, [32 x i40]* %q_embed_12_0_V, [32 x i40]* %q_embed_13_0_V, [32 x i40]* %q_embed_14_0_V, [32 x i40]* %q_embed_15_0_V, [32 x i40]* %q_embed_16_0_V, [32 x i40]* %q_embed_17_0_V, [32 x i40]* %q_embed_18_0_V, [32 x i40]* %q_embed_19_0_V, [32 x i40]* %q_embed_20_0_V, [32 x i40]* %q_embed_21_0_V, [32 x i40]* %q_embed_22_0_V, [32 x i40]* %q_embed_23_0_V, [32 x i40]* %q_embed_24_0_V, [32 x i40]* %q_embed_25_0_V, [32 x i40]* %q_embed_26_0_V, [32 x i40]* %q_embed_27_0_V, [32 x i40]* %q_embed_28_0_V, [32 x i40]* %q_embed_29_0_V, [32 x i40]* %q_embed_30_0_V, [32 x i40]* %q_embed_31_0_V, [16 x i40]* %q_embed_32_0_0_V, [16 x i40]* %q_embed_33_0_0_V, [16 x i40]* %q_embed_34_0_0_V, [16 x i40]* %q_embed_35_0_0_V, [16 x i40]* %q_embed_36_0_0_V, [16 x i40]* %q_embed_37_0_0_V, [16 x i40]* %q_embed_38_0_0_V, [16 x i40]* %q_embed_39_0_0_V, [16 x i40]* %q_embed_40_0_0_V, [16 x i40]* %q_embed_41_0_0_V, [16 x i40]* %q_embed_42_0_0_V, [16 x i40]* %q_embed_43_0_0_V, [16 x i40]* %q_embed_44_0_0_V, [16 x i40]* %q_embed_45_0_0_V, [16 x i40]* %q_embed_46_0_0_V, [16 x i40]* %q_embed_47_0_0_V, [16 x i40]* %q_embed_48_0_0_V, [16 x i40]* %q_embed_49_0_0_V, [16 x i40]* %q_embed_50_0_0_V, [16 x i40]* %q_embed_51_0_0_V, [16 x i40]* %q_embed_52_0_0_V, [16 x i40]* %q_embed_53_0_0_V, [16 x i40]* %q_embed_54_0_0_V, [16 x i40]* %q_embed_55_0_0_V, [16 x i40]* %q_embed_56_0_0_V, [16 x i40]* %q_embed_57_0_0_V, [16 x i40]* %q_embed_58_0_0_V, [16 x i40]* %q_embed_59_0_0_V, [16 x i40]* %q_embed_60_0_0_V, [16 x i40]* %q_embed_61_0_0_V, [16 x i40]* %q_embed_62_0_0_V, [16 x i40]* %q_embed_63_0_0_V, [192 x i40]* %k_proj_transposed_0, [192 x i40]* %k_proj_transposed_1, [192 x i40]* %k_proj_transposed_2, [192 x i40]* %k_proj_transposed_3, [192 x i40]* %k_proj_transposed_4, [192 x i40]* %k_proj_transposed_5, [192 x i40]* %k_proj_transposed_6, [192 x i40]* %k_proj_transposed_7, [192 x i40]* %k_proj_transposed_8, [192 x i40]* %k_proj_transposed_9, [192 x i40]* %k_proj_transposed_10, [192 x i40]* %k_proj_transposed_11, [192 x i40]* %k_proj_transposed_12, [192 x i40]* %k_proj_transposed_13, [192 x i40]* %k_proj_transposed_14, [192 x i40]* %k_proj_transposed_15, [192 x i40]* %k_proj_transposed_16, [192 x i40]* %k_proj_transposed_17, [192 x i40]* %k_proj_transposed_18, [192 x i40]* %k_proj_transposed_19, [192 x i40]* %k_proj_transposed_20, [192 x i40]* %k_proj_transposed_21, [192 x i40]* %k_proj_transposed_22, [192 x i40]* %k_proj_transposed_23, [192 x i40]* %k_proj_transposed_24, [192 x i40]* %k_proj_transposed_25, [192 x i40]* %k_proj_transposed_26, [192 x i40]* %k_proj_transposed_27, [192 x i40]* %k_proj_transposed_28, [192 x i40]* %k_proj_transposed_29, [192 x i40]* %k_proj_transposed_30, [192 x i40]* %k_proj_transposed_31, [96 x i40]* %k_proj_transposed_32, [96 x i40]* %k_proj_transposed_33, [96 x i40]* %k_proj_transposed_34, [96 x i40]* %k_proj_transposed_35, [96 x i40]* %k_proj_transposed_36, [96 x i40]* %k_proj_transposed_37, [96 x i40]* %k_proj_transposed_38, [96 x i40]* %k_proj_transposed_39, [96 x i40]* %k_proj_transposed_40, [96 x i40]* %k_proj_transposed_41, [96 x i40]* %k_proj_transposed_42, [96 x i40]* %k_proj_transposed_43, [96 x i40]* %k_proj_transposed_44, [96 x i40]* %k_proj_transposed_45, [96 x i40]* %k_proj_transposed_46, [96 x i40]* %k_proj_transposed_47, [96 x i40]* %k_proj_transposed_48, [96 x i40]* %k_proj_transposed_49, [96 x i40]* %k_proj_transposed_50, [96 x i40]* %k_proj_transposed_51, [96 x i40]* %k_proj_transposed_52, [96 x i40]* %k_proj_transposed_53, [96 x i40]* %k_proj_transposed_54, [96 x i40]* %k_proj_transposed_55, [96 x i40]* %k_proj_transposed_56, [96 x i40]* %k_proj_transposed_57, [96 x i40]* %k_proj_transposed_58, [96 x i40]* %k_proj_transposed_59, [96 x i40]* %k_proj_transposed_60, [96 x i40]* %k_proj_transposed_61, [96 x i40]* %k_proj_transposed_62, [96 x i40]* %k_proj_transposed_63, [96 x i40]* %attn_weights_0_V)" [attention.cpp:163]   --->   Operation 720 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 18 <SV = 17> <Delay = 1.76>
ST_18 : Operation 721 [1/2] (0.00ns)   --->   "call fastcc void @GEMM_3D_float([32 x i40]* %q_embed_0_0_V, [32 x i40]* %q_embed_1_0_V, [32 x i40]* %q_embed_2_0_V, [32 x i40]* %q_embed_3_0_V, [32 x i40]* %q_embed_4_0_V, [32 x i40]* %q_embed_5_0_V, [32 x i40]* %q_embed_6_0_V, [32 x i40]* %q_embed_7_0_V, [32 x i40]* %q_embed_8_0_V, [32 x i40]* %q_embed_9_0_V, [32 x i40]* %q_embed_10_0_V, [32 x i40]* %q_embed_11_0_V, [32 x i40]* %q_embed_12_0_V, [32 x i40]* %q_embed_13_0_V, [32 x i40]* %q_embed_14_0_V, [32 x i40]* %q_embed_15_0_V, [32 x i40]* %q_embed_16_0_V, [32 x i40]* %q_embed_17_0_V, [32 x i40]* %q_embed_18_0_V, [32 x i40]* %q_embed_19_0_V, [32 x i40]* %q_embed_20_0_V, [32 x i40]* %q_embed_21_0_V, [32 x i40]* %q_embed_22_0_V, [32 x i40]* %q_embed_23_0_V, [32 x i40]* %q_embed_24_0_V, [32 x i40]* %q_embed_25_0_V, [32 x i40]* %q_embed_26_0_V, [32 x i40]* %q_embed_27_0_V, [32 x i40]* %q_embed_28_0_V, [32 x i40]* %q_embed_29_0_V, [32 x i40]* %q_embed_30_0_V, [32 x i40]* %q_embed_31_0_V, [16 x i40]* %q_embed_32_0_0_V, [16 x i40]* %q_embed_33_0_0_V, [16 x i40]* %q_embed_34_0_0_V, [16 x i40]* %q_embed_35_0_0_V, [16 x i40]* %q_embed_36_0_0_V, [16 x i40]* %q_embed_37_0_0_V, [16 x i40]* %q_embed_38_0_0_V, [16 x i40]* %q_embed_39_0_0_V, [16 x i40]* %q_embed_40_0_0_V, [16 x i40]* %q_embed_41_0_0_V, [16 x i40]* %q_embed_42_0_0_V, [16 x i40]* %q_embed_43_0_0_V, [16 x i40]* %q_embed_44_0_0_V, [16 x i40]* %q_embed_45_0_0_V, [16 x i40]* %q_embed_46_0_0_V, [16 x i40]* %q_embed_47_0_0_V, [16 x i40]* %q_embed_48_0_0_V, [16 x i40]* %q_embed_49_0_0_V, [16 x i40]* %q_embed_50_0_0_V, [16 x i40]* %q_embed_51_0_0_V, [16 x i40]* %q_embed_52_0_0_V, [16 x i40]* %q_embed_53_0_0_V, [16 x i40]* %q_embed_54_0_0_V, [16 x i40]* %q_embed_55_0_0_V, [16 x i40]* %q_embed_56_0_0_V, [16 x i40]* %q_embed_57_0_0_V, [16 x i40]* %q_embed_58_0_0_V, [16 x i40]* %q_embed_59_0_0_V, [16 x i40]* %q_embed_60_0_0_V, [16 x i40]* %q_embed_61_0_0_V, [16 x i40]* %q_embed_62_0_0_V, [16 x i40]* %q_embed_63_0_0_V, [192 x i40]* %k_proj_transposed_0, [192 x i40]* %k_proj_transposed_1, [192 x i40]* %k_proj_transposed_2, [192 x i40]* %k_proj_transposed_3, [192 x i40]* %k_proj_transposed_4, [192 x i40]* %k_proj_transposed_5, [192 x i40]* %k_proj_transposed_6, [192 x i40]* %k_proj_transposed_7, [192 x i40]* %k_proj_transposed_8, [192 x i40]* %k_proj_transposed_9, [192 x i40]* %k_proj_transposed_10, [192 x i40]* %k_proj_transposed_11, [192 x i40]* %k_proj_transposed_12, [192 x i40]* %k_proj_transposed_13, [192 x i40]* %k_proj_transposed_14, [192 x i40]* %k_proj_transposed_15, [192 x i40]* %k_proj_transposed_16, [192 x i40]* %k_proj_transposed_17, [192 x i40]* %k_proj_transposed_18, [192 x i40]* %k_proj_transposed_19, [192 x i40]* %k_proj_transposed_20, [192 x i40]* %k_proj_transposed_21, [192 x i40]* %k_proj_transposed_22, [192 x i40]* %k_proj_transposed_23, [192 x i40]* %k_proj_transposed_24, [192 x i40]* %k_proj_transposed_25, [192 x i40]* %k_proj_transposed_26, [192 x i40]* %k_proj_transposed_27, [192 x i40]* %k_proj_transposed_28, [192 x i40]* %k_proj_transposed_29, [192 x i40]* %k_proj_transposed_30, [192 x i40]* %k_proj_transposed_31, [96 x i40]* %k_proj_transposed_32, [96 x i40]* %k_proj_transposed_33, [96 x i40]* %k_proj_transposed_34, [96 x i40]* %k_proj_transposed_35, [96 x i40]* %k_proj_transposed_36, [96 x i40]* %k_proj_transposed_37, [96 x i40]* %k_proj_transposed_38, [96 x i40]* %k_proj_transposed_39, [96 x i40]* %k_proj_transposed_40, [96 x i40]* %k_proj_transposed_41, [96 x i40]* %k_proj_transposed_42, [96 x i40]* %k_proj_transposed_43, [96 x i40]* %k_proj_transposed_44, [96 x i40]* %k_proj_transposed_45, [96 x i40]* %k_proj_transposed_46, [96 x i40]* %k_proj_transposed_47, [96 x i40]* %k_proj_transposed_48, [96 x i40]* %k_proj_transposed_49, [96 x i40]* %k_proj_transposed_50, [96 x i40]* %k_proj_transposed_51, [96 x i40]* %k_proj_transposed_52, [96 x i40]* %k_proj_transposed_53, [96 x i40]* %k_proj_transposed_54, [96 x i40]* %k_proj_transposed_55, [96 x i40]* %k_proj_transposed_56, [96 x i40]* %k_proj_transposed_57, [96 x i40]* %k_proj_transposed_58, [96 x i40]* %k_proj_transposed_59, [96 x i40]* %k_proj_transposed_60, [96 x i40]* %k_proj_transposed_61, [96 x i40]* %k_proj_transposed_62, [96 x i40]* %k_proj_transposed_63, [96 x i40]* %attn_weights_0_V)" [attention.cpp:163]   --->   Operation 721 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_18 : Operation 722 [1/1] (1.76ns)   --->   "br label %0" [attention.cpp:176]   --->   Operation 722 'br' <Predicate = true> <Delay = 1.76>

State 19 <SV = 18> <Delay = 1.91>
ST_19 : Operation 723 [1/1] (0.00ns)   --->   "%h_0 = phi i5 [ 0, %arrayctor.loop.preheader ], [ %h, %SF_LOOP_2_end ]"   --->   Operation 723 'phi' 'h_0' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 724 [1/1] (1.36ns)   --->   "%icmp_ln176 = icmp eq i5 %h_0, -16" [attention.cpp:176]   --->   Operation 724 'icmp' 'icmp_ln176' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 725 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)"   --->   Operation 725 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 726 [1/1] (1.78ns)   --->   "%h = add i5 %h_0, 1" [attention.cpp:176]   --->   Operation 726 'add' 'h' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 727 [1/1] (0.00ns)   --->   "br i1 %icmp_ln176, label %ATTN_2D_LOOP_1_begin, label %SF_LOOP_2_begin" [attention.cpp:176]   --->   Operation 727 'br' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 728 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str18) nounwind" [attention.cpp:177]   --->   Operation 728 'specloopname' <Predicate = (!icmp_ln176)> <Delay = 0.00>
ST_19 : Operation 729 [1/1] (0.00ns)   --->   "%tmp_64 = call i8 @_ssdm_op_BitConcatenate.i8.i5.i3(i5 %h_0, i3 0)" [attention.cpp:179]   --->   Operation 729 'bitconcatenate' 'tmp_64' <Predicate = (!icmp_ln176)> <Delay = 0.00>
ST_19 : Operation 730 [1/1] (0.00ns)   --->   "%tmp_65 = call i6 @_ssdm_op_BitConcatenate.i6.i5.i1(i5 %h_0, i1 false)" [attention.cpp:179]   --->   Operation 730 'bitconcatenate' 'tmp_65' <Predicate = (!icmp_ln176)> <Delay = 0.00>
ST_19 : Operation 731 [1/1] (0.00ns)   --->   "%zext_ln1265 = zext i6 %tmp_65 to i8" [attention.cpp:179]   --->   Operation 731 'zext' 'zext_ln1265' <Predicate = (!icmp_ln176)> <Delay = 0.00>
ST_19 : Operation 732 [1/1] (1.91ns)   --->   "%sub_ln1265 = sub i8 %tmp_64, %zext_ln1265" [attention.cpp:179]   --->   Operation 732 'sub' 'sub_ln1265' <Predicate = (!icmp_ln176)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 733 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str19)" [attention.cpp:178]   --->   Operation 733 'specregionbegin' 'tmp' <Predicate = (!icmp_ln176)> <Delay = 0.00>
ST_19 : Operation 734 [1/1] (1.76ns)   --->   "br label %1" [attention.cpp:178]   --->   Operation 734 'br' <Predicate = (!icmp_ln176)> <Delay = 1.76>
ST_19 : Operation 735 [2/2] (0.00ns)   --->   "call fastcc void @"softmax<1, 16, 6>"([96 x i40]* %attn_weights_0_V)" [attention.cpp:189]   --->   Operation 735 'call' <Predicate = (icmp_ln176)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 20 <SV = 19> <Delay = 5.16>
ST_20 : Operation 736 [1/1] (0.00ns)   --->   "%d_0_0 = phi i3 [ 0, %SF_LOOP_2_begin ], [ %add_ln178, %_ZNK13ap_fixed_baseILi40ELi24ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEdvILi40ELi24ELb1ELS0_5ELS1_3ELi0EEENS2_5RTypeIXT_EXT0_EXT1_EE3divERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit.i.0 ]" [attention.cpp:178]   --->   Operation 736 'phi' 'd_0_0' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 737 [1/1] (1.13ns)   --->   "%icmp_ln178 = icmp eq i3 %d_0_0, -2" [attention.cpp:178]   --->   Operation 737 'icmp' 'icmp_ln178' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 738 [1/1] (0.00ns)   --->   "%empty_108 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 6, i64 6, i64 6)"   --->   Operation 738 'speclooptripcount' 'empty_108' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 739 [1/1] (1.65ns)   --->   "%add_ln178 = add i3 %d_0_0, 1" [attention.cpp:178]   --->   Operation 739 'add' 'add_ln178' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 740 [1/1] (0.00ns)   --->   "br i1 %icmp_ln178, label %SF_LOOP_2_end, label %_ZNK13ap_fixed_baseILi40ELi24ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEdvILi40ELi24ELb1ELS0_5ELS1_3ELi0EEENS2_5RTypeIXT_EXT0_EXT1_EE3divERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit.i.0" [attention.cpp:178]   --->   Operation 740 'br' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 741 [1/1] (0.00ns)   --->   "%zext_ln1265_2 = zext i3 %d_0_0 to i8" [attention.cpp:179]   --->   Operation 741 'zext' 'zext_ln1265_2' <Predicate = (!icmp_ln178)> <Delay = 0.00>
ST_20 : Operation 742 [1/1] (1.91ns)   --->   "%add_ln1265 = add i8 %sub_ln1265, %zext_ln1265_2" [attention.cpp:179]   --->   Operation 742 'add' 'add_ln1265' <Predicate = (!icmp_ln178)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 743 [1/1] (0.00ns)   --->   "%sext_ln1265 = sext i8 %add_ln1265 to i64" [attention.cpp:179]   --->   Operation 743 'sext' 'sext_ln1265' <Predicate = (!icmp_ln178)> <Delay = 0.00>
ST_20 : Operation 744 [1/1] (0.00ns)   --->   "%attn_weights_0_V_ad = getelementptr [96 x i40]* %attn_weights_0_V, i64 0, i64 %sext_ln1265" [attention.cpp:179]   --->   Operation 744 'getelementptr' 'attn_weights_0_V_ad' <Predicate = (!icmp_ln178)> <Delay = 0.00>
ST_20 : Operation 745 [2/2] (3.25ns)   --->   "%attn_weights_0_V_lo = load i40* %attn_weights_0_V_ad, align 8" [attention.cpp:179]   --->   Operation 745 'load' 'attn_weights_0_V_lo' <Predicate = (!icmp_ln178)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 40> <Depth = 1536> <RAM>
ST_20 : Operation 746 [1/1] (0.00ns)   --->   "%empty_107 = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str19, i32 %tmp)" [attention.cpp:179]   --->   Operation 746 'specregionend' 'empty_107' <Predicate = (icmp_ln178)> <Delay = 0.00>
ST_20 : Operation 747 [1/1] (0.00ns)   --->   "br label %0" [attention.cpp:176]   --->   Operation 747 'br' <Predicate = (icmp_ln178)> <Delay = 0.00>

State 21 <SV = 20> <Delay = 3.25>
ST_21 : Operation 748 [1/2] (3.25ns)   --->   "%attn_weights_0_V_lo = load i40* %attn_weights_0_V_ad, align 8" [attention.cpp:179]   --->   Operation 748 'load' 'attn_weights_0_V_lo' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 40> <Depth = 1536> <RAM>
ST_21 : Operation 749 [1/1] (0.00ns)   --->   "%tmp_85 = call i1 @_ssdm_op_BitSelect.i1.i40.i32(i40 %attn_weights_0_V_lo, i32 39)" [attention.cpp:179]   --->   Operation 749 'bitselect' 'tmp_85' <Predicate = true> <Delay = 0.00>

State 22 <SV = 21> <Delay = 8.22>
ST_22 : Operation 750 [1/1] (0.00ns)   --->   "%shl_ln3 = call i56 @_ssdm_op_BitConcatenate.i56.i40.i16(i40 %attn_weights_0_V_lo, i16 0)" [attention.cpp:179]   --->   Operation 750 'bitconcatenate' 'shl_ln3' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 751 [1/1] (0.00ns)   --->   "%sext_ln1148 = sext i56 %shl_ln3 to i113" [attention.cpp:179]   --->   Operation 751 'sext' 'sext_ln1148' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 752 [3/3] (8.22ns)   --->   "%mul_ln1148 = mul i113 117669565494735904, %sext_ln1148" [attention.cpp:179]   --->   Operation 752 'mul' 'mul_ln1148' <Predicate = true> <Delay = 8.22> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 8.22> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 22> <Delay = 8.22>
ST_23 : Operation 753 [2/3] (8.22ns)   --->   "%mul_ln1148 = mul i113 117669565494735904, %sext_ln1148" [attention.cpp:179]   --->   Operation 753 'mul' 'mul_ln1148' <Predicate = true> <Delay = 8.22> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 8.22> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 23> <Delay = 8.22>
ST_24 : Operation 754 [1/3] (8.22ns)   --->   "%mul_ln1148 = mul i113 117669565494735904, %sext_ln1148" [attention.cpp:179]   --->   Operation 754 'mul' 'mul_ln1148' <Predicate = true> <Delay = 8.22> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 8.22> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 755 [1/1] (0.00ns)   --->   "%tmp_87 = call i37 @_ssdm_op_PartSelect.i37.i113.i32.i32(i113 %mul_ln1148, i32 76, i32 112)" [attention.cpp:179]   --->   Operation 755 'partselect' 'tmp_87' <Predicate = (!tmp_85)> <Delay = 0.00>

State 25 <SV = 24> <Delay = 6.16>
ST_25 : Operation 756 [1/1] (4.92ns)   --->   "%sub_ln1148 = sub i113 0, %mul_ln1148" [attention.cpp:179]   --->   Operation 756 'sub' 'sub_ln1148' <Predicate = (tmp_85)> <Delay = 4.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 757 [1/1] (0.00ns)   --->   "%tmp_86 = call i37 @_ssdm_op_PartSelect.i37.i113.i32.i32(i113 %sub_ln1148, i32 76, i32 112)" [attention.cpp:179]   --->   Operation 757 'partselect' 'tmp_86' <Predicate = (tmp_85)> <Delay = 0.00>
ST_25 : Operation 758 [1/1] (1.23ns)   --->   "%select_ln1148 = select i1 %tmp_85, i37 %tmp_86, i37 %tmp_87" [attention.cpp:179]   --->   Operation 758 'select' 'select_ln1148' <Predicate = true> <Delay = 1.23> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 26 <SV = 25> <Delay = 7.46>
ST_26 : Operation 759 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str20) nounwind" [attention.cpp:179]   --->   Operation 759 'specloopname' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 760 [1/1] (0.00ns)   --->   "%sext_ln703 = sext i37 %select_ln1148 to i40" [attention.cpp:179]   --->   Operation 760 'sext' 'sext_ln703' <Predicate = (tmp_85)> <Delay = 0.00>
ST_26 : Operation 761 [1/1] (2.75ns)   --->   "%sub_ln703 = sub i40 0, %sext_ln703" [attention.cpp:179]   --->   Operation 761 'sub' 'sub_ln703' <Predicate = (tmp_85)> <Delay = 2.75> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 762 [1/1] (0.00ns)   --->   "%sext_ln703_504 = sext i37 %select_ln1148 to i40" [attention.cpp:179]   --->   Operation 762 'sext' 'sext_ln703_504' <Predicate = (!tmp_85)> <Delay = 0.00>
ST_26 : Operation 763 [1/1] (1.45ns)   --->   "%select_ln1148_2 = select i1 %tmp_85, i40 %sub_ln703, i40 %sext_ln703_504" [attention.cpp:179]   --->   Operation 763 'select' 'select_ln1148_2' <Predicate = true> <Delay = 1.45> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_26 : Operation 764 [1/1] (3.25ns)   --->   "store i40 %select_ln1148_2, i40* %attn_weights_0_V_ad, align 8" [attention.cpp:179]   --->   Operation 764 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 40> <Depth = 1536> <RAM>
ST_26 : Operation 765 [1/1] (0.00ns)   --->   "br label %1" [attention.cpp:178]   --->   Operation 765 'br' <Predicate = true> <Delay = 0.00>

State 27 <SV = 19> <Delay = 0.00>
ST_27 : Operation 766 [1/2] (0.00ns)   --->   "call fastcc void @"softmax<1, 16, 6>"([96 x i40]* %attn_weights_0_V)" [attention.cpp:189]   --->   Operation 766 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 28 <SV = 20> <Delay = 0.00>
ST_28 : Operation 767 [2/2] (0.00ns)   --->   "call fastcc void @GEMM_3D_float.1([96 x i40]* %attn_weights_0_V, [9216 x i40]* %v_cache_upd_V, [1536 x i40]* %attn_output_0)" [attention.cpp:193]   --->   Operation 767 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 29 <SV = 21> <Delay = 1.76>
ST_29 : Operation 768 [1/2] (0.00ns)   --->   "call fastcc void @GEMM_3D_float.1([96 x i40]* %attn_weights_0_V, [9216 x i40]* %v_cache_upd_V, [1536 x i40]* %attn_output_0)" [attention.cpp:193]   --->   Operation 768 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_29 : Operation 769 [1/1] (0.00ns)   --->   "%tmp_s = call i32 (...)* @_ssdm_op_SpecRegionBegin([15 x i8]* @p_str24)" [attention.cpp:208]   --->   Operation 769 'specregionbegin' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 770 [1/1] (1.76ns)   --->   "br label %2" [attention.cpp:208]   --->   Operation 770 'br' <Predicate = true> <Delay = 1.76>

State 30 <SV = 22> <Delay = 1.86>
ST_30 : Operation 771 [1/1] (0.00ns)   --->   "%h106_0_0 = phi i5 [ 0, %ATTN_2D_LOOP_1_begin ], [ %add_ln208, %ATTN_2D_LOOP_2_end ]" [attention.cpp:208]   --->   Operation 771 'phi' 'h106_0_0' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 772 [1/1] (1.36ns)   --->   "%icmp_ln208 = icmp eq i5 %h106_0_0, -16" [attention.cpp:208]   --->   Operation 772 'icmp' 'icmp_ln208' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 773 [1/1] (0.00ns)   --->   "%empty_110 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)"   --->   Operation 773 'speclooptripcount' 'empty_110' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 774 [1/1] (1.78ns)   --->   "%add_ln208 = add i5 %h106_0_0, 1" [attention.cpp:208]   --->   Operation 774 'add' 'add_ln208' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 775 [1/1] (0.00ns)   --->   "br i1 %icmp_ln208, label %ATTN_2D_LOOP_1_end, label %ATTN_2D_LOOP_2_begin" [attention.cpp:208]   --->   Operation 775 'br' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 776 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([15 x i8]* @p_str25) nounwind" [attention.cpp:209]   --->   Operation 776 'specloopname' <Predicate = (!icmp_ln208)> <Delay = 0.00>
ST_30 : Operation 777 [1/1] (0.00ns)   --->   "%tmp_19 = call i32 (...)* @_ssdm_op_SpecRegionBegin([15 x i8]* @p_str25)" [attention.cpp:209]   --->   Operation 777 'specregionbegin' 'tmp_19' <Predicate = (!icmp_ln208)> <Delay = 0.00>
ST_30 : Operation 778 [1/1] (0.00ns)   --->   "%trunc_ln210 = trunc i5 %h106_0_0 to i4" [attention.cpp:210]   --->   Operation 778 'trunc' 'trunc_ln210' <Predicate = (!icmp_ln208)> <Delay = 0.00>
ST_30 : Operation 779 [1/1] (0.00ns)   --->   "%shl_ln = call i11 @_ssdm_op_BitConcatenate.i11.i4.i7(i4 %trunc_ln210, i7 0)" [attention.cpp:210]   --->   Operation 779 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln208)> <Delay = 0.00>
ST_30 : Operation 780 [1/1] (0.00ns)   --->   "%zext_ln210 = zext i11 %shl_ln to i12" [attention.cpp:210]   --->   Operation 780 'zext' 'zext_ln210' <Predicate = (!icmp_ln208)> <Delay = 0.00>
ST_30 : Operation 781 [1/1] (0.00ns)   --->   "%shl_ln210_1 = call i9 @_ssdm_op_BitConcatenate.i9.i4.i5(i4 %trunc_ln210, i5 0)" [attention.cpp:210]   --->   Operation 781 'bitconcatenate' 'shl_ln210_1' <Predicate = (!icmp_ln208)> <Delay = 0.00>
ST_30 : Operation 782 [1/1] (0.00ns)   --->   "%zext_ln210_2 = zext i9 %shl_ln210_1 to i12" [attention.cpp:210]   --->   Operation 782 'zext' 'zext_ln210_2' <Predicate = (!icmp_ln208)> <Delay = 0.00>
ST_30 : Operation 783 [1/1] (1.63ns)   --->   "%sub_ln210 = sub i12 %zext_ln210, %zext_ln210_2" [attention.cpp:210]   --->   Operation 783 'sub' 'sub_ln210' <Predicate = (!icmp_ln208)> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 784 [1/1] (0.00ns)   --->   "%tmp_66 = call i12 @_ssdm_op_BitConcatenate.i12.i5.i7(i5 %h106_0_0, i7 0)" [attention.cpp:210]   --->   Operation 784 'bitconcatenate' 'tmp_66' <Predicate = (!icmp_ln208)> <Delay = 0.00>
ST_30 : Operation 785 [1/1] (0.00ns)   --->   "%tmp_67 = call i10 @_ssdm_op_BitConcatenate.i10.i5.i5(i5 %h106_0_0, i5 0)" [attention.cpp:210]   --->   Operation 785 'bitconcatenate' 'tmp_67' <Predicate = (!icmp_ln208)> <Delay = 0.00>
ST_30 : Operation 786 [1/1] (0.00ns)   --->   "%zext_ln203 = zext i10 %tmp_67 to i12" [attention.cpp:210]   --->   Operation 786 'zext' 'zext_ln203' <Predicate = (!icmp_ln208)> <Delay = 0.00>
ST_30 : Operation 787 [1/1] (1.54ns)   --->   "%sub_ln203 = sub i12 %tmp_66, %zext_ln203" [attention.cpp:210]   --->   Operation 787 'sub' 'sub_ln203' <Predicate = (!icmp_ln208)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 788 [1/1] (1.76ns)   --->   "br label %3" [attention.cpp:209]   --->   Operation 788 'br' <Predicate = (!icmp_ln208)> <Delay = 1.76>
ST_30 : Operation 789 [2/2] (1.76ns)   --->   "call fastcc void @"rms_norm<1536>"([1536 x i40]* %attn_output_2D_0_V, [1536 x i40]* @ln_weight_V)" [attention.cpp:214]   --->   Operation 789 'call' <Predicate = (icmp_ln208)> <Delay = 1.76> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_30 : Operation 790 [2/2] (1.86ns)   --->   "call fastcc void @init_2d_mem([1536 x i40]* %final_output_0_V)" [attention.cpp:231]   --->   Operation 790 'call' <Predicate = (icmp_ln208)> <Delay = 1.86> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 31 <SV = 23> <Delay = 4.80>
ST_31 : Operation 791 [1/1] (0.00ns)   --->   "%d107_0_0 = phi i7 [ 0, %ATTN_2D_LOOP_2_begin ], [ %add_ln209, %4 ]" [attention.cpp:209]   --->   Operation 791 'phi' 'd107_0_0' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 792 [1/1] (0.00ns)   --->   "%zext_ln209 = zext i7 %d107_0_0 to i12" [attention.cpp:209]   --->   Operation 792 'zext' 'zext_ln209' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 793 [1/1] (1.48ns)   --->   "%icmp_ln209 = icmp eq i7 %d107_0_0, -32" [attention.cpp:209]   --->   Operation 793 'icmp' 'icmp_ln209' <Predicate = true> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 794 [1/1] (0.00ns)   --->   "%empty_112 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 96, i64 96, i64 96)"   --->   Operation 794 'speclooptripcount' 'empty_112' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 795 [1/1] (1.87ns)   --->   "%add_ln209 = add i7 %d107_0_0, 1" [attention.cpp:209]   --->   Operation 795 'add' 'add_ln209' <Predicate = true> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 796 [1/1] (0.00ns)   --->   "br i1 %icmp_ln209, label %ATTN_2D_LOOP_2_end, label %4" [attention.cpp:209]   --->   Operation 796 'br' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 797 [1/1] (1.54ns)   --->   "%add_ln210 = add i12 %zext_ln209, %sub_ln210" [attention.cpp:210]   --->   Operation 797 'add' 'add_ln210' <Predicate = (!icmp_ln209)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 798 [1/1] (1.54ns)   --->   "%add_ln203 = add i12 %sub_ln203, %zext_ln209" [attention.cpp:210]   --->   Operation 798 'add' 'add_ln203' <Predicate = (!icmp_ln209)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 799 [1/1] (0.00ns)   --->   "%sext_ln203 = sext i12 %add_ln203 to i64" [attention.cpp:210]   --->   Operation 799 'sext' 'sext_ln203' <Predicate = (!icmp_ln209)> <Delay = 0.00>
ST_31 : Operation 800 [1/1] (0.00ns)   --->   "%attn_output_0_addr = getelementptr [1536 x i40]* %attn_output_0, i64 0, i64 %sext_ln203" [attention.cpp:210]   --->   Operation 800 'getelementptr' 'attn_output_0_addr' <Predicate = (!icmp_ln209)> <Delay = 0.00>
ST_31 : Operation 801 [2/2] (3.25ns)   --->   "%attn_output_0_load = load i40* %attn_output_0_addr, align 8" [attention.cpp:210]   --->   Operation 801 'load' 'attn_output_0_load' <Predicate = (!icmp_ln209)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 40> <Depth = 1536> <RAM>
ST_31 : Operation 802 [1/1] (0.00ns)   --->   "%empty_111 = call i32 (...)* @_ssdm_op_SpecRegionEnd([15 x i8]* @p_str25, i32 %tmp_19)" [attention.cpp:210]   --->   Operation 802 'specregionend' 'empty_111' <Predicate = (icmp_ln209)> <Delay = 0.00>
ST_31 : Operation 803 [1/1] (0.00ns)   --->   "br label %2" [attention.cpp:208]   --->   Operation 803 'br' <Predicate = (icmp_ln209)> <Delay = 0.00>

State 32 <SV = 24> <Delay = 6.50>
ST_32 : Operation 804 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([15 x i8]* @p_str26) nounwind" [attention.cpp:210]   --->   Operation 804 'specloopname' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 805 [1/1] (0.00ns)   --->   "%sext_ln210 = sext i12 %add_ln210 to i32" [attention.cpp:210]   --->   Operation 805 'sext' 'sext_ln210' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 806 [1/1] (0.00ns)   --->   "%zext_ln210_1 = zext i32 %sext_ln210 to i64" [attention.cpp:210]   --->   Operation 806 'zext' 'zext_ln210_1' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 807 [1/2] (3.25ns)   --->   "%attn_output_0_load = load i40* %attn_output_0_addr, align 8" [attention.cpp:210]   --->   Operation 807 'load' 'attn_output_0_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 40> <Depth = 1536> <RAM>
ST_32 : Operation 808 [1/1] (0.00ns)   --->   "%attn_output_2D_0_V_s = getelementptr [1536 x i40]* %attn_output_2D_0_V, i64 0, i64 %zext_ln210_1" [attention.cpp:210]   --->   Operation 808 'getelementptr' 'attn_output_2D_0_V_s' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 809 [1/1] (3.25ns)   --->   "store i40 %attn_output_0_load, i40* %attn_output_2D_0_V_s, align 8" [attention.cpp:210]   --->   Operation 809 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 40> <Depth = 1536> <RAM>
ST_32 : Operation 810 [1/1] (0.00ns)   --->   "br label %3" [attention.cpp:209]   --->   Operation 810 'br' <Predicate = true> <Delay = 0.00>

State 33 <SV = 23> <Delay = 0.00>
ST_33 : Operation 811 [1/2] (0.00ns)   --->   "call fastcc void @"rms_norm<1536>"([1536 x i40]* %attn_output_2D_0_V, [1536 x i40]* @ln_weight_V)" [attention.cpp:214]   --->   Operation 811 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_33 : Operation 812 [1/2] (0.00ns)   --->   "call fastcc void @init_2d_mem([1536 x i40]* %final_output_0_V)" [attention.cpp:231]   --->   Operation 812 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 34 <SV = 24> <Delay = 1.76>
ST_34 : Operation 813 [2/2] (1.76ns)   --->   "%final_scales_0_V = call fastcc i40 @quantize_activation([1536 x i40]* %attn_output_2D_0_V, [6 x i8]* %quantized_final_outp, [6 x i8]* %quantized_final_outp_1, [6 x i8]* %quantized_final_outp_2, [6 x i8]* %quantized_final_outp_3, [6 x i8]* %quantized_final_outp_4, [6 x i8]* %quantized_final_outp_5, [6 x i8]* %quantized_final_outp_6, [6 x i8]* %quantized_final_outp_7, [6 x i8]* %quantized_final_outp_8, [6 x i8]* %quantized_final_outp_9, [6 x i8]* %quantized_final_outp_10, [6 x i8]* %quantized_final_outp_11, [6 x i8]* %quantized_final_outp_12, [6 x i8]* %quantized_final_outp_13, [6 x i8]* %quantized_final_outp_14, [6 x i8]* %quantized_final_outp_15, [6 x i8]* %quantized_final_outp_16, [6 x i8]* %quantized_final_outp_17, [6 x i8]* %quantized_final_outp_18, [6 x i8]* %quantized_final_outp_19, [6 x i8]* %quantized_final_outp_20, [6 x i8]* %quantized_final_outp_21, [6 x i8]* %quantized_final_outp_22, [6 x i8]* %quantized_final_outp_23, [6 x i8]* %quantized_final_outp_24, [6 x i8]* %quantized_final_outp_25, [6 x i8]* %quantized_final_outp_26, [6 x i8]* %quantized_final_outp_27, [6 x i8]* %quantized_final_outp_28, [6 x i8]* %quantized_final_outp_29, [6 x i8]* %quantized_final_outp_30, [6 x i8]* %quantized_final_outp_31, [6 x i8]* %quantized_final_outp_32, [6 x i8]* %quantized_final_outp_33, [6 x i8]* %quantized_final_outp_34, [6 x i8]* %quantized_final_outp_35, [6 x i8]* %quantized_final_outp_36, [6 x i8]* %quantized_final_outp_37, [6 x i8]* %quantized_final_outp_38, [6 x i8]* %quantized_final_outp_39, [6 x i8]* %quantized_final_outp_40, [6 x i8]* %quantized_final_outp_41, [6 x i8]* %quantized_final_outp_42, [6 x i8]* %quantized_final_outp_43, [6 x i8]* %quantized_final_outp_44, [6 x i8]* %quantized_final_outp_45, [6 x i8]* %quantized_final_outp_46, [6 x i8]* %quantized_final_outp_47, [6 x i8]* %quantized_final_outp_48, [6 x i8]* %quantized_final_outp_49, [6 x i8]* %quantized_final_outp_50, [6 x i8]* %quantized_final_outp_51, [6 x i8]* %quantized_final_outp_52, [6 x i8]* %quantized_final_outp_53, [6 x i8]* %quantized_final_outp_54, [6 x i8]* %quantized_final_outp_55, [6 x i8]* %quantized_final_outp_56, [6 x i8]* %quantized_final_outp_57, [6 x i8]* %quantized_final_outp_58, [6 x i8]* %quantized_final_outp_59, [6 x i8]* %quantized_final_outp_60, [6 x i8]* %quantized_final_outp_61, [6 x i8]* %quantized_final_outp_62, [6 x i8]* %quantized_final_outp_63, [6 x i8]* %quantized_final_outp_64, [6 x i8]* %quantized_final_outp_65, [6 x i8]* %quantized_final_outp_66, [6 x i8]* %quantized_final_outp_67, [6 x i8]* %quantized_final_outp_68, [6 x i8]* %quantized_final_outp_69, [6 x i8]* %quantized_final_outp_70, [6 x i8]* %quantized_final_outp_71, [6 x i8]* %quantized_final_outp_72, [6 x i8]* %quantized_final_outp_73, [6 x i8]* %quantized_final_outp_74, [6 x i8]* %quantized_final_outp_75, [6 x i8]* %quantized_final_outp_76, [6 x i8]* %quantized_final_outp_77, [6 x i8]* %quantized_final_outp_78, [6 x i8]* %quantized_final_outp_79, [6 x i8]* %quantized_final_outp_80, [6 x i8]* %quantized_final_outp_81, [6 x i8]* %quantized_final_outp_82, [6 x i8]* %quantized_final_outp_83, [6 x i8]* %quantized_final_outp_84, [6 x i8]* %quantized_final_outp_85, [6 x i8]* %quantized_final_outp_86, [6 x i8]* %quantized_final_outp_87, [6 x i8]* %quantized_final_outp_88, [6 x i8]* %quantized_final_outp_89, [6 x i8]* %quantized_final_outp_90, [6 x i8]* %quantized_final_outp_91, [6 x i8]* %quantized_final_outp_92, [6 x i8]* %quantized_final_outp_93, [6 x i8]* %quantized_final_outp_94, [6 x i8]* %quantized_final_outp_95, [6 x i8]* %quantized_final_outp_96, [6 x i8]* %quantized_final_outp_97, [6 x i8]* %quantized_final_outp_98, [6 x i8]* %quantized_final_outp_99, [6 x i8]* %quantized_final_outp_100, [6 x i8]* %quantized_final_outp_101, [6 x i8]* %quantized_final_outp_102, [6 x i8]* %quantized_final_outp_103, [6 x i8]* %quantized_final_outp_104, [6 x i8]* %quantized_final_outp_105, [6 x i8]* %quantized_final_outp_106, [6 x i8]* %quantized_final_outp_107, [6 x i8]* %quantized_final_outp_108, [6 x i8]* %quantized_final_outp_109, [6 x i8]* %quantized_final_outp_110, [6 x i8]* %quantized_final_outp_111, [6 x i8]* %quantized_final_outp_112, [6 x i8]* %quantized_final_outp_113, [6 x i8]* %quantized_final_outp_114, [6 x i8]* %quantized_final_outp_115, [6 x i8]* %quantized_final_outp_116, [6 x i8]* %quantized_final_outp_117, [6 x i8]* %quantized_final_outp_118, [6 x i8]* %quantized_final_outp_119, [6 x i8]* %quantized_final_outp_120, [6 x i8]* %quantized_final_outp_121, [6 x i8]* %quantized_final_outp_122, [6 x i8]* %quantized_final_outp_123, [6 x i8]* %quantized_final_outp_124, [6 x i8]* %quantized_final_outp_125, [6 x i8]* %quantized_final_outp_126, [6 x i8]* %quantized_final_outp_127, [6 x i8]* %quantized_final_outp_128, [6 x i8]* %quantized_final_outp_129, [6 x i8]* %quantized_final_outp_130, [6 x i8]* %quantized_final_outp_131, [6 x i8]* %quantized_final_outp_132, [6 x i8]* %quantized_final_outp_133, [6 x i8]* %quantized_final_outp_134, [6 x i8]* %quantized_final_outp_135, [6 x i8]* %quantized_final_outp_136, [6 x i8]* %quantized_final_outp_137, [6 x i8]* %quantized_final_outp_138, [6 x i8]* %quantized_final_outp_139, [6 x i8]* %quantized_final_outp_140, [6 x i8]* %quantized_final_outp_141, [6 x i8]* %quantized_final_outp_142, [6 x i8]* %quantized_final_outp_143, [6 x i8]* %quantized_final_outp_144, [6 x i8]* %quantized_final_outp_145, [6 x i8]* %quantized_final_outp_146, [6 x i8]* %quantized_final_outp_147, [6 x i8]* %quantized_final_outp_148, [6 x i8]* %quantized_final_outp_149, [6 x i8]* %quantized_final_outp_150, [6 x i8]* %quantized_final_outp_151, [6 x i8]* %quantized_final_outp_152, [6 x i8]* %quantized_final_outp_153, [6 x i8]* %quantized_final_outp_154, [6 x i8]* %quantized_final_outp_155, [6 x i8]* %quantized_final_outp_156, [6 x i8]* %quantized_final_outp_157, [6 x i8]* %quantized_final_outp_158, [6 x i8]* %quantized_final_outp_159, [6 x i8]* %quantized_final_outp_160, [6 x i8]* %quantized_final_outp_161, [6 x i8]* %quantized_final_outp_162, [6 x i8]* %quantized_final_outp_163, [6 x i8]* %quantized_final_outp_164, [6 x i8]* %quantized_final_outp_165, [6 x i8]* %quantized_final_outp_166, [6 x i8]* %quantized_final_outp_167, [6 x i8]* %quantized_final_outp_168, [6 x i8]* %quantized_final_outp_169, [6 x i8]* %quantized_final_outp_170, [6 x i8]* %quantized_final_outp_171, [6 x i8]* %quantized_final_outp_172, [6 x i8]* %quantized_final_outp_173, [6 x i8]* %quantized_final_outp_174, [6 x i8]* %quantized_final_outp_175, [6 x i8]* %quantized_final_outp_176, [6 x i8]* %quantized_final_outp_177, [6 x i8]* %quantized_final_outp_178, [6 x i8]* %quantized_final_outp_179, [6 x i8]* %quantized_final_outp_180, [6 x i8]* %quantized_final_outp_181, [6 x i8]* %quantized_final_outp_182, [6 x i8]* %quantized_final_outp_183, [6 x i8]* %quantized_final_outp_184, [6 x i8]* %quantized_final_outp_185, [6 x i8]* %quantized_final_outp_186, [6 x i8]* %quantized_final_outp_187, [6 x i8]* %quantized_final_outp_188, [6 x i8]* %quantized_final_outp_189, [6 x i8]* %quantized_final_outp_190, [6 x i8]* %quantized_final_outp_191, [6 x i8]* %quantized_final_outp_192, [6 x i8]* %quantized_final_outp_193, [6 x i8]* %quantized_final_outp_194, [6 x i8]* %quantized_final_outp_195, [6 x i8]* %quantized_final_outp_196, [6 x i8]* %quantized_final_outp_197, [6 x i8]* %quantized_final_outp_198, [6 x i8]* %quantized_final_outp_199, [6 x i8]* %quantized_final_outp_200, [6 x i8]* %quantized_final_outp_201, [6 x i8]* %quantized_final_outp_202, [6 x i8]* %quantized_final_outp_203, [6 x i8]* %quantized_final_outp_204, [6 x i8]* %quantized_final_outp_205, [6 x i8]* %quantized_final_outp_206, [6 x i8]* %quantized_final_outp_207, [6 x i8]* %quantized_final_outp_208, [6 x i8]* %quantized_final_outp_209, [6 x i8]* %quantized_final_outp_210, [6 x i8]* %quantized_final_outp_211, [6 x i8]* %quantized_final_outp_212, [6 x i8]* %quantized_final_outp_213, [6 x i8]* %quantized_final_outp_214, [6 x i8]* %quantized_final_outp_215, [6 x i8]* %quantized_final_outp_216, [6 x i8]* %quantized_final_outp_217, [6 x i8]* %quantized_final_outp_218, [6 x i8]* %quantized_final_outp_219, [6 x i8]* %quantized_final_outp_220, [6 x i8]* %quantized_final_outp_221, [6 x i8]* %quantized_final_outp_222, [6 x i8]* %quantized_final_outp_223, [6 x i8]* %quantized_final_outp_224, [6 x i8]* %quantized_final_outp_225, [6 x i8]* %quantized_final_outp_226, [6 x i8]* %quantized_final_outp_227, [6 x i8]* %quantized_final_outp_228, [6 x i8]* %quantized_final_outp_229, [6 x i8]* %quantized_final_outp_230, [6 x i8]* %quantized_final_outp_231, [6 x i8]* %quantized_final_outp_232, [6 x i8]* %quantized_final_outp_233, [6 x i8]* %quantized_final_outp_234, [6 x i8]* %quantized_final_outp_235, [6 x i8]* %quantized_final_outp_236, [6 x i8]* %quantized_final_outp_237, [6 x i8]* %quantized_final_outp_238, [6 x i8]* %quantized_final_outp_239, [6 x i8]* %quantized_final_outp_240, [6 x i8]* %quantized_final_outp_241, [6 x i8]* %quantized_final_outp_242, [6 x i8]* %quantized_final_outp_243, [6 x i8]* %quantized_final_outp_244, [6 x i8]* %quantized_final_outp_245, [6 x i8]* %quantized_final_outp_246, [6 x i8]* %quantized_final_outp_247, [6 x i8]* %quantized_final_outp_248, [6 x i8]* %quantized_final_outp_249, [6 x i8]* %quantized_final_outp_250, [6 x i8]* %quantized_final_outp_251, [6 x i8]* %quantized_final_outp_252, [6 x i8]* %quantized_final_outp_253, [6 x i8]* %quantized_final_outp_254, [6 x i8]* %quantized_final_outp_255)" [attention.cpp:224]   --->   Operation 813 'call' 'final_scales_0_V' <Predicate = true> <Delay = 1.76> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 35 <SV = 25> <Delay = 0.00>
ST_35 : Operation 814 [1/2] (0.00ns)   --->   "%final_scales_0_V = call fastcc i40 @quantize_activation([1536 x i40]* %attn_output_2D_0_V, [6 x i8]* %quantized_final_outp, [6 x i8]* %quantized_final_outp_1, [6 x i8]* %quantized_final_outp_2, [6 x i8]* %quantized_final_outp_3, [6 x i8]* %quantized_final_outp_4, [6 x i8]* %quantized_final_outp_5, [6 x i8]* %quantized_final_outp_6, [6 x i8]* %quantized_final_outp_7, [6 x i8]* %quantized_final_outp_8, [6 x i8]* %quantized_final_outp_9, [6 x i8]* %quantized_final_outp_10, [6 x i8]* %quantized_final_outp_11, [6 x i8]* %quantized_final_outp_12, [6 x i8]* %quantized_final_outp_13, [6 x i8]* %quantized_final_outp_14, [6 x i8]* %quantized_final_outp_15, [6 x i8]* %quantized_final_outp_16, [6 x i8]* %quantized_final_outp_17, [6 x i8]* %quantized_final_outp_18, [6 x i8]* %quantized_final_outp_19, [6 x i8]* %quantized_final_outp_20, [6 x i8]* %quantized_final_outp_21, [6 x i8]* %quantized_final_outp_22, [6 x i8]* %quantized_final_outp_23, [6 x i8]* %quantized_final_outp_24, [6 x i8]* %quantized_final_outp_25, [6 x i8]* %quantized_final_outp_26, [6 x i8]* %quantized_final_outp_27, [6 x i8]* %quantized_final_outp_28, [6 x i8]* %quantized_final_outp_29, [6 x i8]* %quantized_final_outp_30, [6 x i8]* %quantized_final_outp_31, [6 x i8]* %quantized_final_outp_32, [6 x i8]* %quantized_final_outp_33, [6 x i8]* %quantized_final_outp_34, [6 x i8]* %quantized_final_outp_35, [6 x i8]* %quantized_final_outp_36, [6 x i8]* %quantized_final_outp_37, [6 x i8]* %quantized_final_outp_38, [6 x i8]* %quantized_final_outp_39, [6 x i8]* %quantized_final_outp_40, [6 x i8]* %quantized_final_outp_41, [6 x i8]* %quantized_final_outp_42, [6 x i8]* %quantized_final_outp_43, [6 x i8]* %quantized_final_outp_44, [6 x i8]* %quantized_final_outp_45, [6 x i8]* %quantized_final_outp_46, [6 x i8]* %quantized_final_outp_47, [6 x i8]* %quantized_final_outp_48, [6 x i8]* %quantized_final_outp_49, [6 x i8]* %quantized_final_outp_50, [6 x i8]* %quantized_final_outp_51, [6 x i8]* %quantized_final_outp_52, [6 x i8]* %quantized_final_outp_53, [6 x i8]* %quantized_final_outp_54, [6 x i8]* %quantized_final_outp_55, [6 x i8]* %quantized_final_outp_56, [6 x i8]* %quantized_final_outp_57, [6 x i8]* %quantized_final_outp_58, [6 x i8]* %quantized_final_outp_59, [6 x i8]* %quantized_final_outp_60, [6 x i8]* %quantized_final_outp_61, [6 x i8]* %quantized_final_outp_62, [6 x i8]* %quantized_final_outp_63, [6 x i8]* %quantized_final_outp_64, [6 x i8]* %quantized_final_outp_65, [6 x i8]* %quantized_final_outp_66, [6 x i8]* %quantized_final_outp_67, [6 x i8]* %quantized_final_outp_68, [6 x i8]* %quantized_final_outp_69, [6 x i8]* %quantized_final_outp_70, [6 x i8]* %quantized_final_outp_71, [6 x i8]* %quantized_final_outp_72, [6 x i8]* %quantized_final_outp_73, [6 x i8]* %quantized_final_outp_74, [6 x i8]* %quantized_final_outp_75, [6 x i8]* %quantized_final_outp_76, [6 x i8]* %quantized_final_outp_77, [6 x i8]* %quantized_final_outp_78, [6 x i8]* %quantized_final_outp_79, [6 x i8]* %quantized_final_outp_80, [6 x i8]* %quantized_final_outp_81, [6 x i8]* %quantized_final_outp_82, [6 x i8]* %quantized_final_outp_83, [6 x i8]* %quantized_final_outp_84, [6 x i8]* %quantized_final_outp_85, [6 x i8]* %quantized_final_outp_86, [6 x i8]* %quantized_final_outp_87, [6 x i8]* %quantized_final_outp_88, [6 x i8]* %quantized_final_outp_89, [6 x i8]* %quantized_final_outp_90, [6 x i8]* %quantized_final_outp_91, [6 x i8]* %quantized_final_outp_92, [6 x i8]* %quantized_final_outp_93, [6 x i8]* %quantized_final_outp_94, [6 x i8]* %quantized_final_outp_95, [6 x i8]* %quantized_final_outp_96, [6 x i8]* %quantized_final_outp_97, [6 x i8]* %quantized_final_outp_98, [6 x i8]* %quantized_final_outp_99, [6 x i8]* %quantized_final_outp_100, [6 x i8]* %quantized_final_outp_101, [6 x i8]* %quantized_final_outp_102, [6 x i8]* %quantized_final_outp_103, [6 x i8]* %quantized_final_outp_104, [6 x i8]* %quantized_final_outp_105, [6 x i8]* %quantized_final_outp_106, [6 x i8]* %quantized_final_outp_107, [6 x i8]* %quantized_final_outp_108, [6 x i8]* %quantized_final_outp_109, [6 x i8]* %quantized_final_outp_110, [6 x i8]* %quantized_final_outp_111, [6 x i8]* %quantized_final_outp_112, [6 x i8]* %quantized_final_outp_113, [6 x i8]* %quantized_final_outp_114, [6 x i8]* %quantized_final_outp_115, [6 x i8]* %quantized_final_outp_116, [6 x i8]* %quantized_final_outp_117, [6 x i8]* %quantized_final_outp_118, [6 x i8]* %quantized_final_outp_119, [6 x i8]* %quantized_final_outp_120, [6 x i8]* %quantized_final_outp_121, [6 x i8]* %quantized_final_outp_122, [6 x i8]* %quantized_final_outp_123, [6 x i8]* %quantized_final_outp_124, [6 x i8]* %quantized_final_outp_125, [6 x i8]* %quantized_final_outp_126, [6 x i8]* %quantized_final_outp_127, [6 x i8]* %quantized_final_outp_128, [6 x i8]* %quantized_final_outp_129, [6 x i8]* %quantized_final_outp_130, [6 x i8]* %quantized_final_outp_131, [6 x i8]* %quantized_final_outp_132, [6 x i8]* %quantized_final_outp_133, [6 x i8]* %quantized_final_outp_134, [6 x i8]* %quantized_final_outp_135, [6 x i8]* %quantized_final_outp_136, [6 x i8]* %quantized_final_outp_137, [6 x i8]* %quantized_final_outp_138, [6 x i8]* %quantized_final_outp_139, [6 x i8]* %quantized_final_outp_140, [6 x i8]* %quantized_final_outp_141, [6 x i8]* %quantized_final_outp_142, [6 x i8]* %quantized_final_outp_143, [6 x i8]* %quantized_final_outp_144, [6 x i8]* %quantized_final_outp_145, [6 x i8]* %quantized_final_outp_146, [6 x i8]* %quantized_final_outp_147, [6 x i8]* %quantized_final_outp_148, [6 x i8]* %quantized_final_outp_149, [6 x i8]* %quantized_final_outp_150, [6 x i8]* %quantized_final_outp_151, [6 x i8]* %quantized_final_outp_152, [6 x i8]* %quantized_final_outp_153, [6 x i8]* %quantized_final_outp_154, [6 x i8]* %quantized_final_outp_155, [6 x i8]* %quantized_final_outp_156, [6 x i8]* %quantized_final_outp_157, [6 x i8]* %quantized_final_outp_158, [6 x i8]* %quantized_final_outp_159, [6 x i8]* %quantized_final_outp_160, [6 x i8]* %quantized_final_outp_161, [6 x i8]* %quantized_final_outp_162, [6 x i8]* %quantized_final_outp_163, [6 x i8]* %quantized_final_outp_164, [6 x i8]* %quantized_final_outp_165, [6 x i8]* %quantized_final_outp_166, [6 x i8]* %quantized_final_outp_167, [6 x i8]* %quantized_final_outp_168, [6 x i8]* %quantized_final_outp_169, [6 x i8]* %quantized_final_outp_170, [6 x i8]* %quantized_final_outp_171, [6 x i8]* %quantized_final_outp_172, [6 x i8]* %quantized_final_outp_173, [6 x i8]* %quantized_final_outp_174, [6 x i8]* %quantized_final_outp_175, [6 x i8]* %quantized_final_outp_176, [6 x i8]* %quantized_final_outp_177, [6 x i8]* %quantized_final_outp_178, [6 x i8]* %quantized_final_outp_179, [6 x i8]* %quantized_final_outp_180, [6 x i8]* %quantized_final_outp_181, [6 x i8]* %quantized_final_outp_182, [6 x i8]* %quantized_final_outp_183, [6 x i8]* %quantized_final_outp_184, [6 x i8]* %quantized_final_outp_185, [6 x i8]* %quantized_final_outp_186, [6 x i8]* %quantized_final_outp_187, [6 x i8]* %quantized_final_outp_188, [6 x i8]* %quantized_final_outp_189, [6 x i8]* %quantized_final_outp_190, [6 x i8]* %quantized_final_outp_191, [6 x i8]* %quantized_final_outp_192, [6 x i8]* %quantized_final_outp_193, [6 x i8]* %quantized_final_outp_194, [6 x i8]* %quantized_final_outp_195, [6 x i8]* %quantized_final_outp_196, [6 x i8]* %quantized_final_outp_197, [6 x i8]* %quantized_final_outp_198, [6 x i8]* %quantized_final_outp_199, [6 x i8]* %quantized_final_outp_200, [6 x i8]* %quantized_final_outp_201, [6 x i8]* %quantized_final_outp_202, [6 x i8]* %quantized_final_outp_203, [6 x i8]* %quantized_final_outp_204, [6 x i8]* %quantized_final_outp_205, [6 x i8]* %quantized_final_outp_206, [6 x i8]* %quantized_final_outp_207, [6 x i8]* %quantized_final_outp_208, [6 x i8]* %quantized_final_outp_209, [6 x i8]* %quantized_final_outp_210, [6 x i8]* %quantized_final_outp_211, [6 x i8]* %quantized_final_outp_212, [6 x i8]* %quantized_final_outp_213, [6 x i8]* %quantized_final_outp_214, [6 x i8]* %quantized_final_outp_215, [6 x i8]* %quantized_final_outp_216, [6 x i8]* %quantized_final_outp_217, [6 x i8]* %quantized_final_outp_218, [6 x i8]* %quantized_final_outp_219, [6 x i8]* %quantized_final_outp_220, [6 x i8]* %quantized_final_outp_221, [6 x i8]* %quantized_final_outp_222, [6 x i8]* %quantized_final_outp_223, [6 x i8]* %quantized_final_outp_224, [6 x i8]* %quantized_final_outp_225, [6 x i8]* %quantized_final_outp_226, [6 x i8]* %quantized_final_outp_227, [6 x i8]* %quantized_final_outp_228, [6 x i8]* %quantized_final_outp_229, [6 x i8]* %quantized_final_outp_230, [6 x i8]* %quantized_final_outp_231, [6 x i8]* %quantized_final_outp_232, [6 x i8]* %quantized_final_outp_233, [6 x i8]* %quantized_final_outp_234, [6 x i8]* %quantized_final_outp_235, [6 x i8]* %quantized_final_outp_236, [6 x i8]* %quantized_final_outp_237, [6 x i8]* %quantized_final_outp_238, [6 x i8]* %quantized_final_outp_239, [6 x i8]* %quantized_final_outp_240, [6 x i8]* %quantized_final_outp_241, [6 x i8]* %quantized_final_outp_242, [6 x i8]* %quantized_final_outp_243, [6 x i8]* %quantized_final_outp_244, [6 x i8]* %quantized_final_outp_245, [6 x i8]* %quantized_final_outp_246, [6 x i8]* %quantized_final_outp_247, [6 x i8]* %quantized_final_outp_248, [6 x i8]* %quantized_final_outp_249, [6 x i8]* %quantized_final_outp_250, [6 x i8]* %quantized_final_outp_251, [6 x i8]* %quantized_final_outp_252, [6 x i8]* %quantized_final_outp_253, [6 x i8]* %quantized_final_outp_254, [6 x i8]* %quantized_final_outp_255)" [attention.cpp:224]   --->   Operation 814 'call' 'final_scales_0_V' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 36 <SV = 26> <Delay = 8.75>
ST_36 : Operation 815 [2/2] (8.75ns)   --->   "call fastcc void @linear_forward_no_mu([6 x i8]* %quantized_final_outp, [6 x i8]* %quantized_final_outp_1, [6 x i8]* %quantized_final_outp_2, [6 x i8]* %quantized_final_outp_3, [6 x i8]* %quantized_final_outp_4, [6 x i8]* %quantized_final_outp_5, [6 x i8]* %quantized_final_outp_6, [6 x i8]* %quantized_final_outp_7, [6 x i8]* %quantized_final_outp_8, [6 x i8]* %quantized_final_outp_9, [6 x i8]* %quantized_final_outp_10, [6 x i8]* %quantized_final_outp_11, [6 x i8]* %quantized_final_outp_12, [6 x i8]* %quantized_final_outp_13, [6 x i8]* %quantized_final_outp_14, [6 x i8]* %quantized_final_outp_15, [6 x i8]* %quantized_final_outp_16, [6 x i8]* %quantized_final_outp_17, [6 x i8]* %quantized_final_outp_18, [6 x i8]* %quantized_final_outp_19, [6 x i8]* %quantized_final_outp_20, [6 x i8]* %quantized_final_outp_21, [6 x i8]* %quantized_final_outp_22, [6 x i8]* %quantized_final_outp_23, [6 x i8]* %quantized_final_outp_24, [6 x i8]* %quantized_final_outp_25, [6 x i8]* %quantized_final_outp_26, [6 x i8]* %quantized_final_outp_27, [6 x i8]* %quantized_final_outp_28, [6 x i8]* %quantized_final_outp_29, [6 x i8]* %quantized_final_outp_30, [6 x i8]* %quantized_final_outp_31, [6 x i8]* %quantized_final_outp_32, [6 x i8]* %quantized_final_outp_33, [6 x i8]* %quantized_final_outp_34, [6 x i8]* %quantized_final_outp_35, [6 x i8]* %quantized_final_outp_36, [6 x i8]* %quantized_final_outp_37, [6 x i8]* %quantized_final_outp_38, [6 x i8]* %quantized_final_outp_39, [6 x i8]* %quantized_final_outp_40, [6 x i8]* %quantized_final_outp_41, [6 x i8]* %quantized_final_outp_42, [6 x i8]* %quantized_final_outp_43, [6 x i8]* %quantized_final_outp_44, [6 x i8]* %quantized_final_outp_45, [6 x i8]* %quantized_final_outp_46, [6 x i8]* %quantized_final_outp_47, [6 x i8]* %quantized_final_outp_48, [6 x i8]* %quantized_final_outp_49, [6 x i8]* %quantized_final_outp_50, [6 x i8]* %quantized_final_outp_51, [6 x i8]* %quantized_final_outp_52, [6 x i8]* %quantized_final_outp_53, [6 x i8]* %quantized_final_outp_54, [6 x i8]* %quantized_final_outp_55, [6 x i8]* %quantized_final_outp_56, [6 x i8]* %quantized_final_outp_57, [6 x i8]* %quantized_final_outp_58, [6 x i8]* %quantized_final_outp_59, [6 x i8]* %quantized_final_outp_60, [6 x i8]* %quantized_final_outp_61, [6 x i8]* %quantized_final_outp_62, [6 x i8]* %quantized_final_outp_63, [6 x i8]* %quantized_final_outp_64, [6 x i8]* %quantized_final_outp_65, [6 x i8]* %quantized_final_outp_66, [6 x i8]* %quantized_final_outp_67, [6 x i8]* %quantized_final_outp_68, [6 x i8]* %quantized_final_outp_69, [6 x i8]* %quantized_final_outp_70, [6 x i8]* %quantized_final_outp_71, [6 x i8]* %quantized_final_outp_72, [6 x i8]* %quantized_final_outp_73, [6 x i8]* %quantized_final_outp_74, [6 x i8]* %quantized_final_outp_75, [6 x i8]* %quantized_final_outp_76, [6 x i8]* %quantized_final_outp_77, [6 x i8]* %quantized_final_outp_78, [6 x i8]* %quantized_final_outp_79, [6 x i8]* %quantized_final_outp_80, [6 x i8]* %quantized_final_outp_81, [6 x i8]* %quantized_final_outp_82, [6 x i8]* %quantized_final_outp_83, [6 x i8]* %quantized_final_outp_84, [6 x i8]* %quantized_final_outp_85, [6 x i8]* %quantized_final_outp_86, [6 x i8]* %quantized_final_outp_87, [6 x i8]* %quantized_final_outp_88, [6 x i8]* %quantized_final_outp_89, [6 x i8]* %quantized_final_outp_90, [6 x i8]* %quantized_final_outp_91, [6 x i8]* %quantized_final_outp_92, [6 x i8]* %quantized_final_outp_93, [6 x i8]* %quantized_final_outp_94, [6 x i8]* %quantized_final_outp_95, [6 x i8]* %quantized_final_outp_96, [6 x i8]* %quantized_final_outp_97, [6 x i8]* %quantized_final_outp_98, [6 x i8]* %quantized_final_outp_99, [6 x i8]* %quantized_final_outp_100, [6 x i8]* %quantized_final_outp_101, [6 x i8]* %quantized_final_outp_102, [6 x i8]* %quantized_final_outp_103, [6 x i8]* %quantized_final_outp_104, [6 x i8]* %quantized_final_outp_105, [6 x i8]* %quantized_final_outp_106, [6 x i8]* %quantized_final_outp_107, [6 x i8]* %quantized_final_outp_108, [6 x i8]* %quantized_final_outp_109, [6 x i8]* %quantized_final_outp_110, [6 x i8]* %quantized_final_outp_111, [6 x i8]* %quantized_final_outp_112, [6 x i8]* %quantized_final_outp_113, [6 x i8]* %quantized_final_outp_114, [6 x i8]* %quantized_final_outp_115, [6 x i8]* %quantized_final_outp_116, [6 x i8]* %quantized_final_outp_117, [6 x i8]* %quantized_final_outp_118, [6 x i8]* %quantized_final_outp_119, [6 x i8]* %quantized_final_outp_120, [6 x i8]* %quantized_final_outp_121, [6 x i8]* %quantized_final_outp_122, [6 x i8]* %quantized_final_outp_123, [6 x i8]* %quantized_final_outp_124, [6 x i8]* %quantized_final_outp_125, [6 x i8]* %quantized_final_outp_126, [6 x i8]* %quantized_final_outp_127, [6 x i8]* %quantized_final_outp_128, [6 x i8]* %quantized_final_outp_129, [6 x i8]* %quantized_final_outp_130, [6 x i8]* %quantized_final_outp_131, [6 x i8]* %quantized_final_outp_132, [6 x i8]* %quantized_final_outp_133, [6 x i8]* %quantized_final_outp_134, [6 x i8]* %quantized_final_outp_135, [6 x i8]* %quantized_final_outp_136, [6 x i8]* %quantized_final_outp_137, [6 x i8]* %quantized_final_outp_138, [6 x i8]* %quantized_final_outp_139, [6 x i8]* %quantized_final_outp_140, [6 x i8]* %quantized_final_outp_141, [6 x i8]* %quantized_final_outp_142, [6 x i8]* %quantized_final_outp_143, [6 x i8]* %quantized_final_outp_144, [6 x i8]* %quantized_final_outp_145, [6 x i8]* %quantized_final_outp_146, [6 x i8]* %quantized_final_outp_147, [6 x i8]* %quantized_final_outp_148, [6 x i8]* %quantized_final_outp_149, [6 x i8]* %quantized_final_outp_150, [6 x i8]* %quantized_final_outp_151, [6 x i8]* %quantized_final_outp_152, [6 x i8]* %quantized_final_outp_153, [6 x i8]* %quantized_final_outp_154, [6 x i8]* %quantized_final_outp_155, [6 x i8]* %quantized_final_outp_156, [6 x i8]* %quantized_final_outp_157, [6 x i8]* %quantized_final_outp_158, [6 x i8]* %quantized_final_outp_159, [6 x i8]* %quantized_final_outp_160, [6 x i8]* %quantized_final_outp_161, [6 x i8]* %quantized_final_outp_162, [6 x i8]* %quantized_final_outp_163, [6 x i8]* %quantized_final_outp_164, [6 x i8]* %quantized_final_outp_165, [6 x i8]* %quantized_final_outp_166, [6 x i8]* %quantized_final_outp_167, [6 x i8]* %quantized_final_outp_168, [6 x i8]* %quantized_final_outp_169, [6 x i8]* %quantized_final_outp_170, [6 x i8]* %quantized_final_outp_171, [6 x i8]* %quantized_final_outp_172, [6 x i8]* %quantized_final_outp_173, [6 x i8]* %quantized_final_outp_174, [6 x i8]* %quantized_final_outp_175, [6 x i8]* %quantized_final_outp_176, [6 x i8]* %quantized_final_outp_177, [6 x i8]* %quantized_final_outp_178, [6 x i8]* %quantized_final_outp_179, [6 x i8]* %quantized_final_outp_180, [6 x i8]* %quantized_final_outp_181, [6 x i8]* %quantized_final_outp_182, [6 x i8]* %quantized_final_outp_183, [6 x i8]* %quantized_final_outp_184, [6 x i8]* %quantized_final_outp_185, [6 x i8]* %quantized_final_outp_186, [6 x i8]* %quantized_final_outp_187, [6 x i8]* %quantized_final_outp_188, [6 x i8]* %quantized_final_outp_189, [6 x i8]* %quantized_final_outp_190, [6 x i8]* %quantized_final_outp_191, [6 x i8]* %quantized_final_outp_192, [6 x i8]* %quantized_final_outp_193, [6 x i8]* %quantized_final_outp_194, [6 x i8]* %quantized_final_outp_195, [6 x i8]* %quantized_final_outp_196, [6 x i8]* %quantized_final_outp_197, [6 x i8]* %quantized_final_outp_198, [6 x i8]* %quantized_final_outp_199, [6 x i8]* %quantized_final_outp_200, [6 x i8]* %quantized_final_outp_201, [6 x i8]* %quantized_final_outp_202, [6 x i8]* %quantized_final_outp_203, [6 x i8]* %quantized_final_outp_204, [6 x i8]* %quantized_final_outp_205, [6 x i8]* %quantized_final_outp_206, [6 x i8]* %quantized_final_outp_207, [6 x i8]* %quantized_final_outp_208, [6 x i8]* %quantized_final_outp_209, [6 x i8]* %quantized_final_outp_210, [6 x i8]* %quantized_final_outp_211, [6 x i8]* %quantized_final_outp_212, [6 x i8]* %quantized_final_outp_213, [6 x i8]* %quantized_final_outp_214, [6 x i8]* %quantized_final_outp_215, [6 x i8]* %quantized_final_outp_216, [6 x i8]* %quantized_final_outp_217, [6 x i8]* %quantized_final_outp_218, [6 x i8]* %quantized_final_outp_219, [6 x i8]* %quantized_final_outp_220, [6 x i8]* %quantized_final_outp_221, [6 x i8]* %quantized_final_outp_222, [6 x i8]* %quantized_final_outp_223, [6 x i8]* %quantized_final_outp_224, [6 x i8]* %quantized_final_outp_225, [6 x i8]* %quantized_final_outp_226, [6 x i8]* %quantized_final_outp_227, [6 x i8]* %quantized_final_outp_228, [6 x i8]* %quantized_final_outp_229, [6 x i8]* %quantized_final_outp_230, [6 x i8]* %quantized_final_outp_231, [6 x i8]* %quantized_final_outp_232, [6 x i8]* %quantized_final_outp_233, [6 x i8]* %quantized_final_outp_234, [6 x i8]* %quantized_final_outp_235, [6 x i8]* %quantized_final_outp_236, [6 x i8]* %quantized_final_outp_237, [6 x i8]* %quantized_final_outp_238, [6 x i8]* %quantized_final_outp_239, [6 x i8]* %quantized_final_outp_240, [6 x i8]* %quantized_final_outp_241, [6 x i8]* %quantized_final_outp_242, [6 x i8]* %quantized_final_outp_243, [6 x i8]* %quantized_final_outp_244, [6 x i8]* %quantized_final_outp_245, [6 x i8]* %quantized_final_outp_246, [6 x i8]* %quantized_final_outp_247, [6 x i8]* %quantized_final_outp_248, [6 x i8]* %quantized_final_outp_249, [6 x i8]* %quantized_final_outp_250, [6 x i8]* %quantized_final_outp_251, [6 x i8]* %quantized_final_outp_252, [6 x i8]* %quantized_final_outp_253, [6 x i8]* %quantized_final_outp_254, [6 x i8]* %quantized_final_outp_255, [1536 x i40]* %final_output_0_V, i40 %final_scales_0_V, [9216 x i8]* @o_weights_0, [9216 x i8]* @o_weights_1, [9216 x i8]* @o_weights_2, [9216 x i8]* @o_weights_3, [9216 x i8]* @o_weights_4, [9216 x i8]* @o_weights_5, [9216 x i8]* @o_weights_6, [9216 x i8]* @o_weights_7, [9216 x i8]* @o_weights_8, [9216 x i8]* @o_weights_9, [9216 x i8]* @o_weights_10, [9216 x i8]* @o_weights_11, [9216 x i8]* @o_weights_12, [9216 x i8]* @o_weights_13, [9216 x i8]* @o_weights_14, [9216 x i8]* @o_weights_15, [9216 x i8]* @o_weights_16, [9216 x i8]* @o_weights_17, [9216 x i8]* @o_weights_18, [9216 x i8]* @o_weights_19, [9216 x i8]* @o_weights_20, [9216 x i8]* @o_weights_21, [9216 x i8]* @o_weights_22, [9216 x i8]* @o_weights_23, [9216 x i8]* @o_weights_24, [9216 x i8]* @o_weights_25, [9216 x i8]* @o_weights_26, [9216 x i8]* @o_weights_27, [9216 x i8]* @o_weights_28, [9216 x i8]* @o_weights_29, [9216 x i8]* @o_weights_30, [9216 x i8]* @o_weights_31, [9216 x i8]* @o_weights_32, [9216 x i8]* @o_weights_33, [9216 x i8]* @o_weights_34, [9216 x i8]* @o_weights_35, [9216 x i8]* @o_weights_36, [9216 x i8]* @o_weights_37, [9216 x i8]* @o_weights_38, [9216 x i8]* @o_weights_39, [9216 x i8]* @o_weights_40, [9216 x i8]* @o_weights_41, [9216 x i8]* @o_weights_42, [9216 x i8]* @o_weights_43, [9216 x i8]* @o_weights_44, [9216 x i8]* @o_weights_45, [9216 x i8]* @o_weights_46, [9216 x i8]* @o_weights_47, [9216 x i8]* @o_weights_48, [9216 x i8]* @o_weights_49, [9216 x i8]* @o_weights_50, [9216 x i8]* @o_weights_51, [9216 x i8]* @o_weights_52, [9216 x i8]* @o_weights_53, [9216 x i8]* @o_weights_54, [9216 x i8]* @o_weights_55, [9216 x i8]* @o_weights_56, [9216 x i8]* @o_weights_57, [9216 x i8]* @o_weights_58, [9216 x i8]* @o_weights_59, [9216 x i8]* @o_weights_60, [9216 x i8]* @o_weights_61, [9216 x i8]* @o_weights_62, [9216 x i8]* @o_weights_63, i22 728135)" [attention.cpp:232]   --->   Operation 815 'call' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 37 <SV = 27> <Delay = 0.00>
ST_37 : Operation 816 [1/1] (0.00ns)   --->   "%empty_109 = call i32 (...)* @_ssdm_op_SpecRegionEnd([15 x i8]* @p_str24, i32 %tmp_s)" [attention.cpp:210]   --->   Operation 816 'specregionend' 'empty_109' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 817 [1/2] (0.00ns)   --->   "call fastcc void @linear_forward_no_mu([6 x i8]* %quantized_final_outp, [6 x i8]* %quantized_final_outp_1, [6 x i8]* %quantized_final_outp_2, [6 x i8]* %quantized_final_outp_3, [6 x i8]* %quantized_final_outp_4, [6 x i8]* %quantized_final_outp_5, [6 x i8]* %quantized_final_outp_6, [6 x i8]* %quantized_final_outp_7, [6 x i8]* %quantized_final_outp_8, [6 x i8]* %quantized_final_outp_9, [6 x i8]* %quantized_final_outp_10, [6 x i8]* %quantized_final_outp_11, [6 x i8]* %quantized_final_outp_12, [6 x i8]* %quantized_final_outp_13, [6 x i8]* %quantized_final_outp_14, [6 x i8]* %quantized_final_outp_15, [6 x i8]* %quantized_final_outp_16, [6 x i8]* %quantized_final_outp_17, [6 x i8]* %quantized_final_outp_18, [6 x i8]* %quantized_final_outp_19, [6 x i8]* %quantized_final_outp_20, [6 x i8]* %quantized_final_outp_21, [6 x i8]* %quantized_final_outp_22, [6 x i8]* %quantized_final_outp_23, [6 x i8]* %quantized_final_outp_24, [6 x i8]* %quantized_final_outp_25, [6 x i8]* %quantized_final_outp_26, [6 x i8]* %quantized_final_outp_27, [6 x i8]* %quantized_final_outp_28, [6 x i8]* %quantized_final_outp_29, [6 x i8]* %quantized_final_outp_30, [6 x i8]* %quantized_final_outp_31, [6 x i8]* %quantized_final_outp_32, [6 x i8]* %quantized_final_outp_33, [6 x i8]* %quantized_final_outp_34, [6 x i8]* %quantized_final_outp_35, [6 x i8]* %quantized_final_outp_36, [6 x i8]* %quantized_final_outp_37, [6 x i8]* %quantized_final_outp_38, [6 x i8]* %quantized_final_outp_39, [6 x i8]* %quantized_final_outp_40, [6 x i8]* %quantized_final_outp_41, [6 x i8]* %quantized_final_outp_42, [6 x i8]* %quantized_final_outp_43, [6 x i8]* %quantized_final_outp_44, [6 x i8]* %quantized_final_outp_45, [6 x i8]* %quantized_final_outp_46, [6 x i8]* %quantized_final_outp_47, [6 x i8]* %quantized_final_outp_48, [6 x i8]* %quantized_final_outp_49, [6 x i8]* %quantized_final_outp_50, [6 x i8]* %quantized_final_outp_51, [6 x i8]* %quantized_final_outp_52, [6 x i8]* %quantized_final_outp_53, [6 x i8]* %quantized_final_outp_54, [6 x i8]* %quantized_final_outp_55, [6 x i8]* %quantized_final_outp_56, [6 x i8]* %quantized_final_outp_57, [6 x i8]* %quantized_final_outp_58, [6 x i8]* %quantized_final_outp_59, [6 x i8]* %quantized_final_outp_60, [6 x i8]* %quantized_final_outp_61, [6 x i8]* %quantized_final_outp_62, [6 x i8]* %quantized_final_outp_63, [6 x i8]* %quantized_final_outp_64, [6 x i8]* %quantized_final_outp_65, [6 x i8]* %quantized_final_outp_66, [6 x i8]* %quantized_final_outp_67, [6 x i8]* %quantized_final_outp_68, [6 x i8]* %quantized_final_outp_69, [6 x i8]* %quantized_final_outp_70, [6 x i8]* %quantized_final_outp_71, [6 x i8]* %quantized_final_outp_72, [6 x i8]* %quantized_final_outp_73, [6 x i8]* %quantized_final_outp_74, [6 x i8]* %quantized_final_outp_75, [6 x i8]* %quantized_final_outp_76, [6 x i8]* %quantized_final_outp_77, [6 x i8]* %quantized_final_outp_78, [6 x i8]* %quantized_final_outp_79, [6 x i8]* %quantized_final_outp_80, [6 x i8]* %quantized_final_outp_81, [6 x i8]* %quantized_final_outp_82, [6 x i8]* %quantized_final_outp_83, [6 x i8]* %quantized_final_outp_84, [6 x i8]* %quantized_final_outp_85, [6 x i8]* %quantized_final_outp_86, [6 x i8]* %quantized_final_outp_87, [6 x i8]* %quantized_final_outp_88, [6 x i8]* %quantized_final_outp_89, [6 x i8]* %quantized_final_outp_90, [6 x i8]* %quantized_final_outp_91, [6 x i8]* %quantized_final_outp_92, [6 x i8]* %quantized_final_outp_93, [6 x i8]* %quantized_final_outp_94, [6 x i8]* %quantized_final_outp_95, [6 x i8]* %quantized_final_outp_96, [6 x i8]* %quantized_final_outp_97, [6 x i8]* %quantized_final_outp_98, [6 x i8]* %quantized_final_outp_99, [6 x i8]* %quantized_final_outp_100, [6 x i8]* %quantized_final_outp_101, [6 x i8]* %quantized_final_outp_102, [6 x i8]* %quantized_final_outp_103, [6 x i8]* %quantized_final_outp_104, [6 x i8]* %quantized_final_outp_105, [6 x i8]* %quantized_final_outp_106, [6 x i8]* %quantized_final_outp_107, [6 x i8]* %quantized_final_outp_108, [6 x i8]* %quantized_final_outp_109, [6 x i8]* %quantized_final_outp_110, [6 x i8]* %quantized_final_outp_111, [6 x i8]* %quantized_final_outp_112, [6 x i8]* %quantized_final_outp_113, [6 x i8]* %quantized_final_outp_114, [6 x i8]* %quantized_final_outp_115, [6 x i8]* %quantized_final_outp_116, [6 x i8]* %quantized_final_outp_117, [6 x i8]* %quantized_final_outp_118, [6 x i8]* %quantized_final_outp_119, [6 x i8]* %quantized_final_outp_120, [6 x i8]* %quantized_final_outp_121, [6 x i8]* %quantized_final_outp_122, [6 x i8]* %quantized_final_outp_123, [6 x i8]* %quantized_final_outp_124, [6 x i8]* %quantized_final_outp_125, [6 x i8]* %quantized_final_outp_126, [6 x i8]* %quantized_final_outp_127, [6 x i8]* %quantized_final_outp_128, [6 x i8]* %quantized_final_outp_129, [6 x i8]* %quantized_final_outp_130, [6 x i8]* %quantized_final_outp_131, [6 x i8]* %quantized_final_outp_132, [6 x i8]* %quantized_final_outp_133, [6 x i8]* %quantized_final_outp_134, [6 x i8]* %quantized_final_outp_135, [6 x i8]* %quantized_final_outp_136, [6 x i8]* %quantized_final_outp_137, [6 x i8]* %quantized_final_outp_138, [6 x i8]* %quantized_final_outp_139, [6 x i8]* %quantized_final_outp_140, [6 x i8]* %quantized_final_outp_141, [6 x i8]* %quantized_final_outp_142, [6 x i8]* %quantized_final_outp_143, [6 x i8]* %quantized_final_outp_144, [6 x i8]* %quantized_final_outp_145, [6 x i8]* %quantized_final_outp_146, [6 x i8]* %quantized_final_outp_147, [6 x i8]* %quantized_final_outp_148, [6 x i8]* %quantized_final_outp_149, [6 x i8]* %quantized_final_outp_150, [6 x i8]* %quantized_final_outp_151, [6 x i8]* %quantized_final_outp_152, [6 x i8]* %quantized_final_outp_153, [6 x i8]* %quantized_final_outp_154, [6 x i8]* %quantized_final_outp_155, [6 x i8]* %quantized_final_outp_156, [6 x i8]* %quantized_final_outp_157, [6 x i8]* %quantized_final_outp_158, [6 x i8]* %quantized_final_outp_159, [6 x i8]* %quantized_final_outp_160, [6 x i8]* %quantized_final_outp_161, [6 x i8]* %quantized_final_outp_162, [6 x i8]* %quantized_final_outp_163, [6 x i8]* %quantized_final_outp_164, [6 x i8]* %quantized_final_outp_165, [6 x i8]* %quantized_final_outp_166, [6 x i8]* %quantized_final_outp_167, [6 x i8]* %quantized_final_outp_168, [6 x i8]* %quantized_final_outp_169, [6 x i8]* %quantized_final_outp_170, [6 x i8]* %quantized_final_outp_171, [6 x i8]* %quantized_final_outp_172, [6 x i8]* %quantized_final_outp_173, [6 x i8]* %quantized_final_outp_174, [6 x i8]* %quantized_final_outp_175, [6 x i8]* %quantized_final_outp_176, [6 x i8]* %quantized_final_outp_177, [6 x i8]* %quantized_final_outp_178, [6 x i8]* %quantized_final_outp_179, [6 x i8]* %quantized_final_outp_180, [6 x i8]* %quantized_final_outp_181, [6 x i8]* %quantized_final_outp_182, [6 x i8]* %quantized_final_outp_183, [6 x i8]* %quantized_final_outp_184, [6 x i8]* %quantized_final_outp_185, [6 x i8]* %quantized_final_outp_186, [6 x i8]* %quantized_final_outp_187, [6 x i8]* %quantized_final_outp_188, [6 x i8]* %quantized_final_outp_189, [6 x i8]* %quantized_final_outp_190, [6 x i8]* %quantized_final_outp_191, [6 x i8]* %quantized_final_outp_192, [6 x i8]* %quantized_final_outp_193, [6 x i8]* %quantized_final_outp_194, [6 x i8]* %quantized_final_outp_195, [6 x i8]* %quantized_final_outp_196, [6 x i8]* %quantized_final_outp_197, [6 x i8]* %quantized_final_outp_198, [6 x i8]* %quantized_final_outp_199, [6 x i8]* %quantized_final_outp_200, [6 x i8]* %quantized_final_outp_201, [6 x i8]* %quantized_final_outp_202, [6 x i8]* %quantized_final_outp_203, [6 x i8]* %quantized_final_outp_204, [6 x i8]* %quantized_final_outp_205, [6 x i8]* %quantized_final_outp_206, [6 x i8]* %quantized_final_outp_207, [6 x i8]* %quantized_final_outp_208, [6 x i8]* %quantized_final_outp_209, [6 x i8]* %quantized_final_outp_210, [6 x i8]* %quantized_final_outp_211, [6 x i8]* %quantized_final_outp_212, [6 x i8]* %quantized_final_outp_213, [6 x i8]* %quantized_final_outp_214, [6 x i8]* %quantized_final_outp_215, [6 x i8]* %quantized_final_outp_216, [6 x i8]* %quantized_final_outp_217, [6 x i8]* %quantized_final_outp_218, [6 x i8]* %quantized_final_outp_219, [6 x i8]* %quantized_final_outp_220, [6 x i8]* %quantized_final_outp_221, [6 x i8]* %quantized_final_outp_222, [6 x i8]* %quantized_final_outp_223, [6 x i8]* %quantized_final_outp_224, [6 x i8]* %quantized_final_outp_225, [6 x i8]* %quantized_final_outp_226, [6 x i8]* %quantized_final_outp_227, [6 x i8]* %quantized_final_outp_228, [6 x i8]* %quantized_final_outp_229, [6 x i8]* %quantized_final_outp_230, [6 x i8]* %quantized_final_outp_231, [6 x i8]* %quantized_final_outp_232, [6 x i8]* %quantized_final_outp_233, [6 x i8]* %quantized_final_outp_234, [6 x i8]* %quantized_final_outp_235, [6 x i8]* %quantized_final_outp_236, [6 x i8]* %quantized_final_outp_237, [6 x i8]* %quantized_final_outp_238, [6 x i8]* %quantized_final_outp_239, [6 x i8]* %quantized_final_outp_240, [6 x i8]* %quantized_final_outp_241, [6 x i8]* %quantized_final_outp_242, [6 x i8]* %quantized_final_outp_243, [6 x i8]* %quantized_final_outp_244, [6 x i8]* %quantized_final_outp_245, [6 x i8]* %quantized_final_outp_246, [6 x i8]* %quantized_final_outp_247, [6 x i8]* %quantized_final_outp_248, [6 x i8]* %quantized_final_outp_249, [6 x i8]* %quantized_final_outp_250, [6 x i8]* %quantized_final_outp_251, [6 x i8]* %quantized_final_outp_252, [6 x i8]* %quantized_final_outp_253, [6 x i8]* %quantized_final_outp_254, [6 x i8]* %quantized_final_outp_255, [1536 x i40]* %final_output_0_V, i40 %final_scales_0_V, [9216 x i8]* @o_weights_0, [9216 x i8]* @o_weights_1, [9216 x i8]* @o_weights_2, [9216 x i8]* @o_weights_3, [9216 x i8]* @o_weights_4, [9216 x i8]* @o_weights_5, [9216 x i8]* @o_weights_6, [9216 x i8]* @o_weights_7, [9216 x i8]* @o_weights_8, [9216 x i8]* @o_weights_9, [9216 x i8]* @o_weights_10, [9216 x i8]* @o_weights_11, [9216 x i8]* @o_weights_12, [9216 x i8]* @o_weights_13, [9216 x i8]* @o_weights_14, [9216 x i8]* @o_weights_15, [9216 x i8]* @o_weights_16, [9216 x i8]* @o_weights_17, [9216 x i8]* @o_weights_18, [9216 x i8]* @o_weights_19, [9216 x i8]* @o_weights_20, [9216 x i8]* @o_weights_21, [9216 x i8]* @o_weights_22, [9216 x i8]* @o_weights_23, [9216 x i8]* @o_weights_24, [9216 x i8]* @o_weights_25, [9216 x i8]* @o_weights_26, [9216 x i8]* @o_weights_27, [9216 x i8]* @o_weights_28, [9216 x i8]* @o_weights_29, [9216 x i8]* @o_weights_30, [9216 x i8]* @o_weights_31, [9216 x i8]* @o_weights_32, [9216 x i8]* @o_weights_33, [9216 x i8]* @o_weights_34, [9216 x i8]* @o_weights_35, [9216 x i8]* @o_weights_36, [9216 x i8]* @o_weights_37, [9216 x i8]* @o_weights_38, [9216 x i8]* @o_weights_39, [9216 x i8]* @o_weights_40, [9216 x i8]* @o_weights_41, [9216 x i8]* @o_weights_42, [9216 x i8]* @o_weights_43, [9216 x i8]* @o_weights_44, [9216 x i8]* @o_weights_45, [9216 x i8]* @o_weights_46, [9216 x i8]* @o_weights_47, [9216 x i8]* @o_weights_48, [9216 x i8]* @o_weights_49, [9216 x i8]* @o_weights_50, [9216 x i8]* @o_weights_51, [9216 x i8]* @o_weights_52, [9216 x i8]* @o_weights_53, [9216 x i8]* @o_weights_54, [9216 x i8]* @o_weights_55, [9216 x i8]* @o_weights_56, [9216 x i8]* @o_weights_57, [9216 x i8]* @o_weights_58, [9216 x i8]* @o_weights_59, [9216 x i8]* @o_weights_60, [9216 x i8]* @o_weights_61, [9216 x i8]* @o_weights_62, [9216 x i8]* @o_weights_63, i22 728135)" [attention.cpp:232]   --->   Operation 817 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_37 : Operation 818 [1/1] (0.00ns)   --->   "ret void" [attention.cpp:239]   --->   Operation 818 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.86ns
The critical path consists of the following:
	'alloca' operation ('q_proj_re[0].V', attention.cpp:104) [789]  (0 ns)
	'call' operation ('call_ln108', attention.cpp:108) to 'init_2d_mem' [1187]  (1.86 ns)

 <State 2>: 0ns
The critical path consists of the following:

 <State 3>: 1.77ns
The critical path consists of the following:
	'call' operation ('scales[0].V', attention.cpp:96) to 'quantize_activation' [1186]  (1.77 ns)

 <State 4>: 0ns
The critical path consists of the following:

 <State 5>: 8.75ns
The critical path consists of the following:
	'call' operation ('call_ln112', attention.cpp:112) to 'linear_forward_no_mu' [1190]  (8.75 ns)

 <State 6>: 0ns
The critical path consists of the following:

 <State 7>: 8.75ns
The critical path consists of the following:
	'call' operation ('call_ln119', attention.cpp:119) to 'linear_forward_no_mu' [1191]  (8.75 ns)

 <State 8>: 0ns
The critical path consists of the following:

 <State 9>: 8.75ns
The critical path consists of the following:
	'call' operation ('call_ln126', attention.cpp:126) to 'linear_forward_no_mu' [1192]  (8.75 ns)

 <State 10>: 0ns
The critical path consists of the following:

 <State 11>: 1.81ns
The critical path consists of the following:
	'call' operation ('call_ln140', attention.cpp:140) to 'reshape_2D_to_3D' [1195]  (1.81 ns)

 <State 12>: 0ns
The critical path consists of the following:

 <State 13>: 1.77ns
The critical path consists of the following:
	'call' operation ('call_ln150', attention.cpp:150) to 'cache_update' [1197]  (1.77 ns)

 <State 14>: 0ns
The critical path consists of the following:

 <State 15>: 1.77ns
The critical path consists of the following:
	'call' operation ('call_ln153', attention.cpp:153) to 'cache_update' [1198]  (1.77 ns)

 <State 16>: 0ns
The critical path consists of the following:

 <State 17>: 0ns
The critical path consists of the following:

 <State 18>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('h') with incoming values : ('h', attention.cpp:176) [1203]  (1.77 ns)

 <State 19>: 1.92ns
The critical path consists of the following:
	'phi' operation ('h') with incoming values : ('h', attention.cpp:176) [1203]  (0 ns)
	'sub' operation ('sub_ln1265', attention.cpp:179) [1213]  (1.92 ns)

 <State 20>: 5.17ns
The critical path consists of the following:
	'phi' operation ('d_0_0', attention.cpp:178) with incoming values : ('add_ln178', attention.cpp:178) [1217]  (0 ns)
	'add' operation ('add_ln1265', attention.cpp:179) [1225]  (1.92 ns)
	'getelementptr' operation ('attn_weights_0_V_ad', attention.cpp:179) [1227]  (0 ns)
	'load' operation ('attn_weights_0_V_lo', attention.cpp:179) on array 'attn_weights[0].V', attention.cpp:162 [1228]  (3.25 ns)

 <State 21>: 3.25ns
The critical path consists of the following:
	'load' operation ('attn_weights_0_V_lo', attention.cpp:179) on array 'attn_weights[0].V', attention.cpp:162 [1228]  (3.25 ns)

 <State 22>: 8.22ns
The critical path consists of the following:
	'mul' operation ('mul_ln1148', attention.cpp:179) [1231]  (8.22 ns)

 <State 23>: 8.22ns
The critical path consists of the following:
	'mul' operation ('mul_ln1148', attention.cpp:179) [1231]  (8.22 ns)

 <State 24>: 8.22ns
The critical path consists of the following:
	'mul' operation ('mul_ln1148', attention.cpp:179) [1231]  (8.22 ns)

 <State 25>: 6.16ns
The critical path consists of the following:
	'sub' operation ('sub_ln1148', attention.cpp:179) [1232]  (4.92 ns)
	'select' operation ('select_ln1148', attention.cpp:179) [1236]  (1.24 ns)

 <State 26>: 7.46ns
The critical path consists of the following:
	'sub' operation ('sub_ln703', attention.cpp:179) [1238]  (2.76 ns)
	'select' operation ('select_ln1148_2', attention.cpp:179) [1240]  (1.45 ns)
	'store' operation ('store_ln179', attention.cpp:179) of variable 'select_ln1148_2', attention.cpp:179 on array 'attn_weights[0].V', attention.cpp:162 [1241]  (3.25 ns)

 <State 27>: 0ns
The critical path consists of the following:

 <State 28>: 0ns
The critical path consists of the following:

 <State 29>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('h106_0_0', attention.cpp:208) with incoming values : ('add_ln208', attention.cpp:208) [1252]  (1.77 ns)

 <State 30>: 1.86ns
The critical path consists of the following:
	'call' operation ('call_ln231', attention.cpp:231) to 'init_2d_mem' [1297]  (1.86 ns)

 <State 31>: 4.8ns
The critical path consists of the following:
	'phi' operation ('d107_0_0', attention.cpp:209) with incoming values : ('add_ln209', attention.cpp:209) [1272]  (0 ns)
	'add' operation ('add_ln203', attention.cpp:210) [1283]  (1.55 ns)
	'getelementptr' operation ('attn_output_0_addr', attention.cpp:210) [1285]  (0 ns)
	'load' operation ('attn_output_0_load', attention.cpp:210) on array 'attn_output_0' [1286]  (3.25 ns)

 <State 32>: 6.51ns
The critical path consists of the following:
	'load' operation ('attn_output_0_load', attention.cpp:210) on array 'attn_output_0' [1286]  (3.25 ns)
	'store' operation ('store_ln210', attention.cpp:210) of variable 'attn_output_0_load', attention.cpp:210 on array 'attn_output_2D[0].V', attention.cpp:206 [1288]  (3.25 ns)

 <State 33>: 0ns
The critical path consists of the following:

 <State 34>: 1.77ns
The critical path consists of the following:
	'call' operation ('final_scales[0].V', attention.cpp:224) to 'quantize_activation' [1296]  (1.77 ns)

 <State 35>: 0ns
The critical path consists of the following:

 <State 36>: 8.75ns
The critical path consists of the following:
	'call' operation ('call_ln232', attention.cpp:232) to 'linear_forward_no_mu' [1298]  (8.75 ns)

 <State 37>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
