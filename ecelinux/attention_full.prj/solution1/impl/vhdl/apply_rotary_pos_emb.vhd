-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity apply_rotary_pos_emb is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_q_0_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    input_q_0_V_ce0 : OUT STD_LOGIC;
    input_q_0_V_q0 : IN STD_LOGIC_VECTOR (37 downto 0);
    input_q_0_V_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    input_q_0_V_ce1 : OUT STD_LOGIC;
    input_q_0_V_q1 : IN STD_LOGIC_VECTOR (37 downto 0);
    input_k_0_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    input_k_0_V_ce0 : OUT STD_LOGIC;
    input_k_0_V_q0 : IN STD_LOGIC_VECTOR (37 downto 0);
    input_k_0_V_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    input_k_0_V_ce1 : OUT STD_LOGIC;
    input_k_0_V_q1 : IN STD_LOGIC_VECTOR (37 downto 0);
    output_q_0_0_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    output_q_0_0_V_ce0 : OUT STD_LOGIC;
    output_q_0_0_V_we0 : OUT STD_LOGIC;
    output_q_0_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_1_0_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    output_q_1_0_V_ce0 : OUT STD_LOGIC;
    output_q_1_0_V_we0 : OUT STD_LOGIC;
    output_q_1_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_2_0_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    output_q_2_0_V_ce0 : OUT STD_LOGIC;
    output_q_2_0_V_we0 : OUT STD_LOGIC;
    output_q_2_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_3_0_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    output_q_3_0_V_ce0 : OUT STD_LOGIC;
    output_q_3_0_V_we0 : OUT STD_LOGIC;
    output_q_3_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_4_0_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    output_q_4_0_V_ce0 : OUT STD_LOGIC;
    output_q_4_0_V_we0 : OUT STD_LOGIC;
    output_q_4_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_5_0_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    output_q_5_0_V_ce0 : OUT STD_LOGIC;
    output_q_5_0_V_we0 : OUT STD_LOGIC;
    output_q_5_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_6_0_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    output_q_6_0_V_ce0 : OUT STD_LOGIC;
    output_q_6_0_V_we0 : OUT STD_LOGIC;
    output_q_6_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_7_0_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    output_q_7_0_V_ce0 : OUT STD_LOGIC;
    output_q_7_0_V_we0 : OUT STD_LOGIC;
    output_q_7_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_8_0_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    output_q_8_0_V_ce0 : OUT STD_LOGIC;
    output_q_8_0_V_we0 : OUT STD_LOGIC;
    output_q_8_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_9_0_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    output_q_9_0_V_ce0 : OUT STD_LOGIC;
    output_q_9_0_V_we0 : OUT STD_LOGIC;
    output_q_9_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_10_0_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    output_q_10_0_V_ce0 : OUT STD_LOGIC;
    output_q_10_0_V_we0 : OUT STD_LOGIC;
    output_q_10_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_11_0_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    output_q_11_0_V_ce0 : OUT STD_LOGIC;
    output_q_11_0_V_we0 : OUT STD_LOGIC;
    output_q_11_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_12_0_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    output_q_12_0_V_ce0 : OUT STD_LOGIC;
    output_q_12_0_V_we0 : OUT STD_LOGIC;
    output_q_12_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_13_0_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    output_q_13_0_V_ce0 : OUT STD_LOGIC;
    output_q_13_0_V_we0 : OUT STD_LOGIC;
    output_q_13_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_14_0_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    output_q_14_0_V_ce0 : OUT STD_LOGIC;
    output_q_14_0_V_we0 : OUT STD_LOGIC;
    output_q_14_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_15_0_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    output_q_15_0_V_ce0 : OUT STD_LOGIC;
    output_q_15_0_V_we0 : OUT STD_LOGIC;
    output_q_15_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_16_0_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    output_q_16_0_V_ce0 : OUT STD_LOGIC;
    output_q_16_0_V_we0 : OUT STD_LOGIC;
    output_q_16_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_17_0_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    output_q_17_0_V_ce0 : OUT STD_LOGIC;
    output_q_17_0_V_we0 : OUT STD_LOGIC;
    output_q_17_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_18_0_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    output_q_18_0_V_ce0 : OUT STD_LOGIC;
    output_q_18_0_V_we0 : OUT STD_LOGIC;
    output_q_18_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_19_0_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    output_q_19_0_V_ce0 : OUT STD_LOGIC;
    output_q_19_0_V_we0 : OUT STD_LOGIC;
    output_q_19_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_20_0_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    output_q_20_0_V_ce0 : OUT STD_LOGIC;
    output_q_20_0_V_we0 : OUT STD_LOGIC;
    output_q_20_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_21_0_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    output_q_21_0_V_ce0 : OUT STD_LOGIC;
    output_q_21_0_V_we0 : OUT STD_LOGIC;
    output_q_21_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_22_0_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    output_q_22_0_V_ce0 : OUT STD_LOGIC;
    output_q_22_0_V_we0 : OUT STD_LOGIC;
    output_q_22_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_23_0_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    output_q_23_0_V_ce0 : OUT STD_LOGIC;
    output_q_23_0_V_we0 : OUT STD_LOGIC;
    output_q_23_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_24_0_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    output_q_24_0_V_ce0 : OUT STD_LOGIC;
    output_q_24_0_V_we0 : OUT STD_LOGIC;
    output_q_24_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_25_0_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    output_q_25_0_V_ce0 : OUT STD_LOGIC;
    output_q_25_0_V_we0 : OUT STD_LOGIC;
    output_q_25_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_26_0_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    output_q_26_0_V_ce0 : OUT STD_LOGIC;
    output_q_26_0_V_we0 : OUT STD_LOGIC;
    output_q_26_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_27_0_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    output_q_27_0_V_ce0 : OUT STD_LOGIC;
    output_q_27_0_V_we0 : OUT STD_LOGIC;
    output_q_27_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_28_0_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    output_q_28_0_V_ce0 : OUT STD_LOGIC;
    output_q_28_0_V_we0 : OUT STD_LOGIC;
    output_q_28_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_29_0_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    output_q_29_0_V_ce0 : OUT STD_LOGIC;
    output_q_29_0_V_we0 : OUT STD_LOGIC;
    output_q_29_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_30_0_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    output_q_30_0_V_ce0 : OUT STD_LOGIC;
    output_q_30_0_V_we0 : OUT STD_LOGIC;
    output_q_30_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_31_0_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    output_q_31_0_V_ce0 : OUT STD_LOGIC;
    output_q_31_0_V_we0 : OUT STD_LOGIC;
    output_q_31_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_32_0_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_q_32_0_0_V_ce0 : OUT STD_LOGIC;
    output_q_32_0_0_V_we0 : OUT STD_LOGIC;
    output_q_32_0_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_33_0_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_q_33_0_0_V_ce0 : OUT STD_LOGIC;
    output_q_33_0_0_V_we0 : OUT STD_LOGIC;
    output_q_33_0_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_34_0_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_q_34_0_0_V_ce0 : OUT STD_LOGIC;
    output_q_34_0_0_V_we0 : OUT STD_LOGIC;
    output_q_34_0_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_35_0_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_q_35_0_0_V_ce0 : OUT STD_LOGIC;
    output_q_35_0_0_V_we0 : OUT STD_LOGIC;
    output_q_35_0_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_36_0_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_q_36_0_0_V_ce0 : OUT STD_LOGIC;
    output_q_36_0_0_V_we0 : OUT STD_LOGIC;
    output_q_36_0_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_37_0_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_q_37_0_0_V_ce0 : OUT STD_LOGIC;
    output_q_37_0_0_V_we0 : OUT STD_LOGIC;
    output_q_37_0_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_38_0_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_q_38_0_0_V_ce0 : OUT STD_LOGIC;
    output_q_38_0_0_V_we0 : OUT STD_LOGIC;
    output_q_38_0_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_39_0_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_q_39_0_0_V_ce0 : OUT STD_LOGIC;
    output_q_39_0_0_V_we0 : OUT STD_LOGIC;
    output_q_39_0_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_40_0_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_q_40_0_0_V_ce0 : OUT STD_LOGIC;
    output_q_40_0_0_V_we0 : OUT STD_LOGIC;
    output_q_40_0_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_41_0_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_q_41_0_0_V_ce0 : OUT STD_LOGIC;
    output_q_41_0_0_V_we0 : OUT STD_LOGIC;
    output_q_41_0_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_42_0_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_q_42_0_0_V_ce0 : OUT STD_LOGIC;
    output_q_42_0_0_V_we0 : OUT STD_LOGIC;
    output_q_42_0_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_43_0_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_q_43_0_0_V_ce0 : OUT STD_LOGIC;
    output_q_43_0_0_V_we0 : OUT STD_LOGIC;
    output_q_43_0_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_44_0_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_q_44_0_0_V_ce0 : OUT STD_LOGIC;
    output_q_44_0_0_V_we0 : OUT STD_LOGIC;
    output_q_44_0_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_45_0_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_q_45_0_0_V_ce0 : OUT STD_LOGIC;
    output_q_45_0_0_V_we0 : OUT STD_LOGIC;
    output_q_45_0_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_46_0_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_q_46_0_0_V_ce0 : OUT STD_LOGIC;
    output_q_46_0_0_V_we0 : OUT STD_LOGIC;
    output_q_46_0_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_47_0_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_q_47_0_0_V_ce0 : OUT STD_LOGIC;
    output_q_47_0_0_V_we0 : OUT STD_LOGIC;
    output_q_47_0_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_48_0_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_q_48_0_0_V_ce0 : OUT STD_LOGIC;
    output_q_48_0_0_V_we0 : OUT STD_LOGIC;
    output_q_48_0_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_49_0_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_q_49_0_0_V_ce0 : OUT STD_LOGIC;
    output_q_49_0_0_V_we0 : OUT STD_LOGIC;
    output_q_49_0_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_50_0_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_q_50_0_0_V_ce0 : OUT STD_LOGIC;
    output_q_50_0_0_V_we0 : OUT STD_LOGIC;
    output_q_50_0_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_51_0_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_q_51_0_0_V_ce0 : OUT STD_LOGIC;
    output_q_51_0_0_V_we0 : OUT STD_LOGIC;
    output_q_51_0_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_52_0_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_q_52_0_0_V_ce0 : OUT STD_LOGIC;
    output_q_52_0_0_V_we0 : OUT STD_LOGIC;
    output_q_52_0_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_53_0_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_q_53_0_0_V_ce0 : OUT STD_LOGIC;
    output_q_53_0_0_V_we0 : OUT STD_LOGIC;
    output_q_53_0_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_54_0_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_q_54_0_0_V_ce0 : OUT STD_LOGIC;
    output_q_54_0_0_V_we0 : OUT STD_LOGIC;
    output_q_54_0_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_55_0_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_q_55_0_0_V_ce0 : OUT STD_LOGIC;
    output_q_55_0_0_V_we0 : OUT STD_LOGIC;
    output_q_55_0_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_56_0_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_q_56_0_0_V_ce0 : OUT STD_LOGIC;
    output_q_56_0_0_V_we0 : OUT STD_LOGIC;
    output_q_56_0_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_57_0_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_q_57_0_0_V_ce0 : OUT STD_LOGIC;
    output_q_57_0_0_V_we0 : OUT STD_LOGIC;
    output_q_57_0_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_58_0_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_q_58_0_0_V_ce0 : OUT STD_LOGIC;
    output_q_58_0_0_V_we0 : OUT STD_LOGIC;
    output_q_58_0_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_59_0_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_q_59_0_0_V_ce0 : OUT STD_LOGIC;
    output_q_59_0_0_V_we0 : OUT STD_LOGIC;
    output_q_59_0_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_60_0_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_q_60_0_0_V_ce0 : OUT STD_LOGIC;
    output_q_60_0_0_V_we0 : OUT STD_LOGIC;
    output_q_60_0_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_61_0_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_q_61_0_0_V_ce0 : OUT STD_LOGIC;
    output_q_61_0_0_V_we0 : OUT STD_LOGIC;
    output_q_61_0_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_62_0_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_q_62_0_0_V_ce0 : OUT STD_LOGIC;
    output_q_62_0_0_V_we0 : OUT STD_LOGIC;
    output_q_62_0_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_q_63_0_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_q_63_0_0_V_ce0 : OUT STD_LOGIC;
    output_q_63_0_0_V_we0 : OUT STD_LOGIC;
    output_q_63_0_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0);
    output_k_0_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    output_k_0_V_ce0 : OUT STD_LOGIC;
    output_k_0_V_we0 : OUT STD_LOGIC;
    output_k_0_V_d0 : OUT STD_LOGIC_VECTOR (37 downto 0) );
end;


architecture behav of apply_rotary_pos_emb is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (12 downto 0) := "0000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (12 downto 0) := "0000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (12 downto 0) := "0000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (12 downto 0) := "0000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (12 downto 0) := "0000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (12 downto 0) := "0000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (12 downto 0) := "0001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (12 downto 0) := "0010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (12 downto 0) := "0100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv6_3E : STD_LOGIC_VECTOR (5 downto 0) := "111110";
    constant ap_const_lv6_3D : STD_LOGIC_VECTOR (5 downto 0) := "111101";
    constant ap_const_lv6_3C : STD_LOGIC_VECTOR (5 downto 0) := "111100";
    constant ap_const_lv6_3B : STD_LOGIC_VECTOR (5 downto 0) := "111011";
    constant ap_const_lv6_3A : STD_LOGIC_VECTOR (5 downto 0) := "111010";
    constant ap_const_lv6_39 : STD_LOGIC_VECTOR (5 downto 0) := "111001";
    constant ap_const_lv6_38 : STD_LOGIC_VECTOR (5 downto 0) := "111000";
    constant ap_const_lv6_37 : STD_LOGIC_VECTOR (5 downto 0) := "110111";
    constant ap_const_lv6_36 : STD_LOGIC_VECTOR (5 downto 0) := "110110";
    constant ap_const_lv6_35 : STD_LOGIC_VECTOR (5 downto 0) := "110101";
    constant ap_const_lv6_34 : STD_LOGIC_VECTOR (5 downto 0) := "110100";
    constant ap_const_lv6_33 : STD_LOGIC_VECTOR (5 downto 0) := "110011";
    constant ap_const_lv6_32 : STD_LOGIC_VECTOR (5 downto 0) := "110010";
    constant ap_const_lv6_31 : STD_LOGIC_VECTOR (5 downto 0) := "110001";
    constant ap_const_lv6_30 : STD_LOGIC_VECTOR (5 downto 0) := "110000";
    constant ap_const_lv6_2F : STD_LOGIC_VECTOR (5 downto 0) := "101111";
    constant ap_const_lv6_2E : STD_LOGIC_VECTOR (5 downto 0) := "101110";
    constant ap_const_lv6_2D : STD_LOGIC_VECTOR (5 downto 0) := "101101";
    constant ap_const_lv6_2C : STD_LOGIC_VECTOR (5 downto 0) := "101100";
    constant ap_const_lv6_2B : STD_LOGIC_VECTOR (5 downto 0) := "101011";
    constant ap_const_lv6_2A : STD_LOGIC_VECTOR (5 downto 0) := "101010";
    constant ap_const_lv6_29 : STD_LOGIC_VECTOR (5 downto 0) := "101001";
    constant ap_const_lv6_28 : STD_LOGIC_VECTOR (5 downto 0) := "101000";
    constant ap_const_lv6_27 : STD_LOGIC_VECTOR (5 downto 0) := "100111";
    constant ap_const_lv6_26 : STD_LOGIC_VECTOR (5 downto 0) := "100110";
    constant ap_const_lv6_25 : STD_LOGIC_VECTOR (5 downto 0) := "100101";
    constant ap_const_lv6_24 : STD_LOGIC_VECTOR (5 downto 0) := "100100";
    constant ap_const_lv6_23 : STD_LOGIC_VECTOR (5 downto 0) := "100011";
    constant ap_const_lv6_22 : STD_LOGIC_VECTOR (5 downto 0) := "100010";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_1F : STD_LOGIC_VECTOR (5 downto 0) := "011111";
    constant ap_const_lv6_1E : STD_LOGIC_VECTOR (5 downto 0) := "011110";
    constant ap_const_lv6_1D : STD_LOGIC_VECTOR (5 downto 0) := "011101";
    constant ap_const_lv6_1C : STD_LOGIC_VECTOR (5 downto 0) := "011100";
    constant ap_const_lv6_1B : STD_LOGIC_VECTOR (5 downto 0) := "011011";
    constant ap_const_lv6_1A : STD_LOGIC_VECTOR (5 downto 0) := "011010";
    constant ap_const_lv6_19 : STD_LOGIC_VECTOR (5 downto 0) := "011001";
    constant ap_const_lv6_18 : STD_LOGIC_VECTOR (5 downto 0) := "011000";
    constant ap_const_lv6_17 : STD_LOGIC_VECTOR (5 downto 0) := "010111";
    constant ap_const_lv6_16 : STD_LOGIC_VECTOR (5 downto 0) := "010110";
    constant ap_const_lv6_15 : STD_LOGIC_VECTOR (5 downto 0) := "010101";
    constant ap_const_lv6_14 : STD_LOGIC_VECTOR (5 downto 0) := "010100";
    constant ap_const_lv6_13 : STD_LOGIC_VECTOR (5 downto 0) := "010011";
    constant ap_const_lv6_12 : STD_LOGIC_VECTOR (5 downto 0) := "010010";
    constant ap_const_lv6_11 : STD_LOGIC_VECTOR (5 downto 0) := "010001";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv6_F : STD_LOGIC_VECTOR (5 downto 0) := "001111";
    constant ap_const_lv6_E : STD_LOGIC_VECTOR (5 downto 0) := "001110";
    constant ap_const_lv6_D : STD_LOGIC_VECTOR (5 downto 0) := "001101";
    constant ap_const_lv6_C : STD_LOGIC_VECTOR (5 downto 0) := "001100";
    constant ap_const_lv6_B : STD_LOGIC_VECTOR (5 downto 0) := "001011";
    constant ap_const_lv6_A : STD_LOGIC_VECTOR (5 downto 0) := "001010";
    constant ap_const_lv6_9 : STD_LOGIC_VECTOR (5 downto 0) := "001001";
    constant ap_const_lv6_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_const_lv6_7 : STD_LOGIC_VECTOR (5 downto 0) := "000111";
    constant ap_const_lv6_6 : STD_LOGIC_VECTOR (5 downto 0) := "000110";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv7_30 : STD_LOGIC_VECTOR (6 downto 0) := "0110000";
    constant ap_const_lv38_0 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000000000000000000000000000";
    constant ap_const_lv7_60 : STD_LOGIC_VECTOR (6 downto 0) := "1100000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal cos_tab_V_5_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal cos_tab_V_5_ce0 : STD_LOGIC;
    signal cos_tab_V_5_q0 : STD_LOGIC_VECTOR (20 downto 0);
    signal sin_tab_V_5_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal sin_tab_V_5_ce0 : STD_LOGIC;
    signal sin_tab_V_5_q0 : STD_LOGIC_VECTOR (20 downto 0);
    signal reg_1338 : STD_LOGIC_VECTOR (37 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal reg_1342 : STD_LOGIC_VECTOR (37 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal i_fu_1352_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_reg_1756 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal sub_ln1265_fu_1378_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1265_reg_1761 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln168_fu_1346_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln170_fu_1394_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln170_reg_1770 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal sext_ln203_fu_1409_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln203_reg_1775 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln170_fu_1388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1265_fu_1430_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1265_reg_1791 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_2_fu_1456_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_2_reg_1810 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal sub_ln1116_fu_1518_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1116_reg_1815 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln180_fu_1450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_q_32_0_0_V_1_reg_1820 : STD_LOGIC_VECTOR (3 downto 0);
    signal output_q_33_0_0_V_1_reg_1825 : STD_LOGIC_VECTOR (3 downto 0);
    signal output_q_34_0_0_V_1_reg_1830 : STD_LOGIC_VECTOR (3 downto 0);
    signal output_q_35_0_0_V_1_reg_1835 : STD_LOGIC_VECTOR (3 downto 0);
    signal output_q_36_0_0_V_1_reg_1840 : STD_LOGIC_VECTOR (3 downto 0);
    signal output_q_37_0_0_V_1_reg_1845 : STD_LOGIC_VECTOR (3 downto 0);
    signal output_q_38_0_0_V_1_reg_1850 : STD_LOGIC_VECTOR (3 downto 0);
    signal output_q_39_0_0_V_1_reg_1855 : STD_LOGIC_VECTOR (3 downto 0);
    signal output_q_40_0_0_V_1_reg_1860 : STD_LOGIC_VECTOR (3 downto 0);
    signal output_q_41_0_0_V_1_reg_1865 : STD_LOGIC_VECTOR (3 downto 0);
    signal output_q_42_0_0_V_1_reg_1870 : STD_LOGIC_VECTOR (3 downto 0);
    signal output_q_43_0_0_V_1_reg_1875 : STD_LOGIC_VECTOR (3 downto 0);
    signal output_q_44_0_0_V_1_reg_1880 : STD_LOGIC_VECTOR (3 downto 0);
    signal output_q_45_0_0_V_1_reg_1885 : STD_LOGIC_VECTOR (3 downto 0);
    signal output_q_46_0_0_V_1_reg_1890 : STD_LOGIC_VECTOR (3 downto 0);
    signal output_q_47_0_0_V_1_reg_1895 : STD_LOGIC_VECTOR (3 downto 0);
    signal output_q_48_0_0_V_1_reg_1900 : STD_LOGIC_VECTOR (3 downto 0);
    signal output_q_49_0_0_V_1_reg_1905 : STD_LOGIC_VECTOR (3 downto 0);
    signal output_q_50_0_0_V_1_reg_1910 : STD_LOGIC_VECTOR (3 downto 0);
    signal output_q_51_0_0_V_1_reg_1915 : STD_LOGIC_VECTOR (3 downto 0);
    signal output_q_52_0_0_V_1_reg_1920 : STD_LOGIC_VECTOR (3 downto 0);
    signal output_q_53_0_0_V_1_reg_1925 : STD_LOGIC_VECTOR (3 downto 0);
    signal output_q_54_0_0_V_1_reg_1930 : STD_LOGIC_VECTOR (3 downto 0);
    signal output_q_55_0_0_V_1_reg_1935 : STD_LOGIC_VECTOR (3 downto 0);
    signal output_q_56_0_0_V_1_reg_1940 : STD_LOGIC_VECTOR (3 downto 0);
    signal output_q_57_0_0_V_1_reg_1945 : STD_LOGIC_VECTOR (3 downto 0);
    signal output_q_58_0_0_V_1_reg_1950 : STD_LOGIC_VECTOR (3 downto 0);
    signal output_q_59_0_0_V_1_reg_1955 : STD_LOGIC_VECTOR (3 downto 0);
    signal output_q_60_0_0_V_1_reg_1960 : STD_LOGIC_VECTOR (3 downto 0);
    signal output_q_61_0_0_V_1_reg_1965 : STD_LOGIC_VECTOR (3 downto 0);
    signal output_q_62_0_0_V_1_reg_1970 : STD_LOGIC_VECTOR (3 downto 0);
    signal output_q_63_0_0_V_1_reg_1975 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln182_fu_1530_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln182_reg_1983 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal icmp_ln182_fu_1524_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal input_k_0_V_addr_2_reg_1993 : STD_LOGIC_VECTOR (10 downto 0);
    signal output_k_0_V_addr_reg_1998 : STD_LOGIC_VECTOR (10 downto 0);
    signal rotated_k_0_V_addr_2_reg_2008 : STD_LOGIC_VECTOR (10 downto 0);
    signal cos_tab_V_5_load_reg_2023 : STD_LOGIC_VECTOR (20 downto 0);
    signal sin_tab_V_5_load_reg_2028 : STD_LOGIC_VECTOR (20 downto 0);
    signal rotated_q_0_V_q0 : STD_LOGIC_VECTOR (37 downto 0);
    signal rotated_q_0_V_load_reg_2033 : STD_LOGIC_VECTOR (37 downto 0);
    signal sext_ln1118_6_fu_1564_p1 : STD_LOGIC_VECTOR (57 downto 0);
    signal sext_ln1118_6_reg_2038 : STD_LOGIC_VECTOR (57 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal mul_ln1118_fu_1567_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal mul_ln1118_reg_2043 : STD_LOGIC_VECTOR (57 downto 0);
    signal sext_ln1118_8_fu_1576_p1 : STD_LOGIC_VECTOR (57 downto 0);
    signal sext_ln1118_8_reg_2048 : STD_LOGIC_VECTOR (57 downto 0);
    signal mul_ln1118_4_fu_1579_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal mul_ln1118_4_reg_2053 : STD_LOGIC_VECTOR (57 downto 0);
    signal rotated_k_0_V_q0 : STD_LOGIC_VECTOR (37 downto 0);
    signal rotated_k_0_V_load_reg_2061 : STD_LOGIC_VECTOR (37 downto 0);
    signal mul_ln1118_5_fu_1725_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal mul_ln1118_5_reg_2066 : STD_LOGIC_VECTOR (57 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal mul_ln1118_6_fu_1733_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal mul_ln1118_6_reg_2071 : STD_LOGIC_VECTOR (57 downto 0);
    signal rotated_q_0_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal rotated_q_0_V_ce0 : STD_LOGIC;
    signal rotated_q_0_V_we0 : STD_LOGIC;
    signal rotated_q_0_V_d0 : STD_LOGIC_VECTOR (37 downto 0);
    signal rotated_k_0_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal rotated_k_0_V_ce0 : STD_LOGIC;
    signal rotated_k_0_V_we0 : STD_LOGIC;
    signal rotated_k_0_V_d0 : STD_LOGIC_VECTOR (37 downto 0);
    signal i_0_reg_1292 : STD_LOGIC_VECTOR (4 downto 0);
    signal k_0_0_reg_1303 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal i14_0_reg_1314 : STD_LOGIC_VECTOR (4 downto 0);
    signal k16_0_0_reg_1326 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal zext_ln183_fu_1462_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1116_fu_1551_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln183_1_fu_1536_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln203_fu_1685_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal sub_ln703_fu_1436_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal sub_ln703_38_fu_1443_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal trunc_ln203_fu_1663_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_63_fu_1366_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_62_fu_1358_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1265_fu_1374_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln203_9_fu_1400_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln203_fu_1404_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln170_fu_1384_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln171_fu_1415_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1265_3_fu_1421_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1265_fu_1425_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_65_fu_1506_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_64_fu_1498_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1116_fu_1514_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1116_1_fu_1542_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1116_fu_1546_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1118_fu_1567_p0 : STD_LOGIC_VECTOR (37 downto 0);
    signal mul_ln1118_fu_1567_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1118_4_fu_1579_p0 : STD_LOGIC_VECTOR (37 downto 0);
    signal mul_ln1118_4_fu_1579_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln1192_fu_1585_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal tmp_89_fu_1667_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_66_fu_1675_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1118_5_fu_1725_p0 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1118_5_fu_1725_p1 : STD_LOGIC_VECTOR (37 downto 0);
    signal mul_ln1118_6_fu_1733_p0 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1118_6_fu_1733_p1 : STD_LOGIC_VECTOR (37 downto 0);
    signal add_ln1192_1_fu_1738_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (12 downto 0);

    component apply_rotary_pos_fYi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component apply_rotary_pos_g8j IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component apply_rotary_pos_hbi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (37 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (37 downto 0) );
    end component;



begin
    cos_tab_V_5_U : component apply_rotary_pos_fYi
    generic map (
        DataWidth => 21,
        AddressRange => 96,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => cos_tab_V_5_address0,
        ce0 => cos_tab_V_5_ce0,
        q0 => cos_tab_V_5_q0);

    sin_tab_V_5_U : component apply_rotary_pos_g8j
    generic map (
        DataWidth => 21,
        AddressRange => 96,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sin_tab_V_5_address0,
        ce0 => sin_tab_V_5_ce0,
        q0 => sin_tab_V_5_q0);

    rotated_q_0_V_U : component apply_rotary_pos_hbi
    generic map (
        DataWidth => 38,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rotated_q_0_V_address0,
        ce0 => rotated_q_0_V_ce0,
        we0 => rotated_q_0_V_we0,
        d0 => rotated_q_0_V_d0,
        q0 => rotated_q_0_V_q0);

    rotated_k_0_V_U : component apply_rotary_pos_hbi
    generic map (
        DataWidth => 38,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rotated_k_0_V_address0,
        ce0 => rotated_k_0_V_ce0,
        we0 => rotated_k_0_V_we0,
        d0 => rotated_k_0_V_d0,
        q0 => rotated_k_0_V_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    i14_0_reg_1314_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln168_fu_1346_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i14_0_reg_1314 <= ap_const_lv5_0;
            elsif (((icmp_ln182_fu_1524_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                i14_0_reg_1314 <= i_2_reg_1810;
            end if; 
        end if;
    end process;

    i_0_reg_1292_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_0_reg_1292 <= ap_const_lv5_0;
            elsif (((icmp_ln170_fu_1388_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_0_reg_1292 <= i_reg_1756;
            end if; 
        end if;
    end process;

    k16_0_0_reg_1326_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                k16_0_0_reg_1326 <= add_ln182_reg_1983;
            elsif (((icmp_ln180_fu_1450_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                k16_0_0_reg_1326 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    k_0_0_reg_1303_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                k_0_0_reg_1303 <= add_ln170_reg_1770;
            elsif (((icmp_ln168_fu_1346_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                k_0_0_reg_1303 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln170_reg_1770 <= add_ln170_fu_1394_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                add_ln182_reg_1983 <= add_ln182_fu_1530_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                cos_tab_V_5_load_reg_2023 <= cos_tab_V_5_q0;
                rotated_q_0_V_load_reg_2033 <= rotated_q_0_V_q0;
                sin_tab_V_5_load_reg_2028 <= sin_tab_V_5_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                i_2_reg_1810 <= i_2_fu_1456_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_reg_1756 <= i_fu_1352_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln182_fu_1524_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                input_k_0_V_addr_2_reg_1993 <= sext_ln1116_fu_1551_p1(11 - 1 downto 0);
                output_k_0_V_addr_reg_1998 <= sext_ln1116_fu_1551_p1(11 - 1 downto 0);
                rotated_k_0_V_addr_2_reg_2008 <= sext_ln1116_fu_1551_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                mul_ln1118_4_reg_2053 <= mul_ln1118_4_fu_1579_p2;
                mul_ln1118_reg_2043 <= mul_ln1118_fu_1567_p2;
                sext_ln1118_6_reg_2038 <= sext_ln1118_6_fu_1564_p1;
                sext_ln1118_8_reg_2048 <= sext_ln1118_8_fu_1576_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                mul_ln1118_5_reg_2066 <= mul_ln1118_5_fu_1725_p2;
                mul_ln1118_6_reg_2071 <= mul_ln1118_6_fu_1733_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln180_fu_1450_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                output_q_32_0_0_V_1_reg_1820 <= zext_ln183_fu_1462_p1(4 - 1 downto 0);
                output_q_33_0_0_V_1_reg_1825 <= zext_ln183_fu_1462_p1(4 - 1 downto 0);
                output_q_34_0_0_V_1_reg_1830 <= zext_ln183_fu_1462_p1(4 - 1 downto 0);
                output_q_35_0_0_V_1_reg_1835 <= zext_ln183_fu_1462_p1(4 - 1 downto 0);
                output_q_36_0_0_V_1_reg_1840 <= zext_ln183_fu_1462_p1(4 - 1 downto 0);
                output_q_37_0_0_V_1_reg_1845 <= zext_ln183_fu_1462_p1(4 - 1 downto 0);
                output_q_38_0_0_V_1_reg_1850 <= zext_ln183_fu_1462_p1(4 - 1 downto 0);
                output_q_39_0_0_V_1_reg_1855 <= zext_ln183_fu_1462_p1(4 - 1 downto 0);
                output_q_40_0_0_V_1_reg_1860 <= zext_ln183_fu_1462_p1(4 - 1 downto 0);
                output_q_41_0_0_V_1_reg_1865 <= zext_ln183_fu_1462_p1(4 - 1 downto 0);
                output_q_42_0_0_V_1_reg_1870 <= zext_ln183_fu_1462_p1(4 - 1 downto 0);
                output_q_43_0_0_V_1_reg_1875 <= zext_ln183_fu_1462_p1(4 - 1 downto 0);
                output_q_44_0_0_V_1_reg_1880 <= zext_ln183_fu_1462_p1(4 - 1 downto 0);
                output_q_45_0_0_V_1_reg_1885 <= zext_ln183_fu_1462_p1(4 - 1 downto 0);
                output_q_46_0_0_V_1_reg_1890 <= zext_ln183_fu_1462_p1(4 - 1 downto 0);
                output_q_47_0_0_V_1_reg_1895 <= zext_ln183_fu_1462_p1(4 - 1 downto 0);
                output_q_48_0_0_V_1_reg_1900 <= zext_ln183_fu_1462_p1(4 - 1 downto 0);
                output_q_49_0_0_V_1_reg_1905 <= zext_ln183_fu_1462_p1(4 - 1 downto 0);
                output_q_50_0_0_V_1_reg_1910 <= zext_ln183_fu_1462_p1(4 - 1 downto 0);
                output_q_51_0_0_V_1_reg_1915 <= zext_ln183_fu_1462_p1(4 - 1 downto 0);
                output_q_52_0_0_V_1_reg_1920 <= zext_ln183_fu_1462_p1(4 - 1 downto 0);
                output_q_53_0_0_V_1_reg_1925 <= zext_ln183_fu_1462_p1(4 - 1 downto 0);
                output_q_54_0_0_V_1_reg_1930 <= zext_ln183_fu_1462_p1(4 - 1 downto 0);
                output_q_55_0_0_V_1_reg_1935 <= zext_ln183_fu_1462_p1(4 - 1 downto 0);
                output_q_56_0_0_V_1_reg_1940 <= zext_ln183_fu_1462_p1(4 - 1 downto 0);
                output_q_57_0_0_V_1_reg_1945 <= zext_ln183_fu_1462_p1(4 - 1 downto 0);
                output_q_58_0_0_V_1_reg_1950 <= zext_ln183_fu_1462_p1(4 - 1 downto 0);
                output_q_59_0_0_V_1_reg_1955 <= zext_ln183_fu_1462_p1(4 - 1 downto 0);
                output_q_60_0_0_V_1_reg_1960 <= zext_ln183_fu_1462_p1(4 - 1 downto 0);
                output_q_61_0_0_V_1_reg_1965 <= zext_ln183_fu_1462_p1(4 - 1 downto 0);
                output_q_62_0_0_V_1_reg_1970 <= zext_ln183_fu_1462_p1(4 - 1 downto 0);
                output_q_63_0_0_V_1_reg_1975 <= zext_ln183_fu_1462_p1(4 - 1 downto 0);
                    sub_ln1116_reg_1815(11 downto 5) <= sub_ln1116_fu_1518_p2(11 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then
                reg_1338 <= input_q_0_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state4))) then
                reg_1342 <= input_k_0_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                rotated_k_0_V_load_reg_2061 <= rotated_k_0_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln170_fu_1388_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                sext_ln1265_reg_1791 <= sext_ln1265_fu_1430_p1;
                sext_ln203_reg_1775 <= sext_ln203_fu_1409_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln168_fu_1346_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    sub_ln1265_reg_1761(11 downto 5) <= sub_ln1265_fu_1378_p2(11 downto 5);
            end if;
        end if;
    end process;
    sub_ln1265_reg_1761(4 downto 0) <= "00000";
    sub_ln1116_reg_1815(4 downto 0) <= "00000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln168_fu_1346_p2, ap_CS_fsm_state3, icmp_ln170_fu_1388_p2, ap_CS_fsm_state6, icmp_ln180_fu_1450_p2, ap_CS_fsm_state7, icmp_ln182_fu_1524_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln168_fu_1346_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln170_fu_1388_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state6 => 
                if (((icmp_ln180_fu_1450_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                if (((icmp_ln182_fu_1524_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXX";
        end case;
    end process;
    add_ln1116_fu_1546_p2 <= std_logic_vector(unsigned(zext_ln1116_1_fu_1542_p1) + unsigned(sub_ln1116_reg_1815));
    add_ln1192_1_fu_1738_p2 <= std_logic_vector(unsigned(mul_ln1118_5_reg_2066) + unsigned(mul_ln1118_6_reg_2071));
    add_ln1192_fu_1585_p2 <= std_logic_vector(unsigned(mul_ln1118_4_reg_2053) + unsigned(mul_ln1118_reg_2043));
    add_ln1265_fu_1425_p2 <= std_logic_vector(unsigned(sub_ln1265_reg_1761) + unsigned(zext_ln1265_3_fu_1421_p1));
    add_ln170_fu_1394_p2 <= std_logic_vector(unsigned(k_0_0_reg_1303) + unsigned(ap_const_lv6_1));
    add_ln171_fu_1415_p2 <= std_logic_vector(unsigned(zext_ln170_fu_1384_p1) + unsigned(ap_const_lv7_30));
    add_ln182_fu_1530_p2 <= std_logic_vector(unsigned(k16_0_0_reg_1326) + unsigned(ap_const_lv7_1));
    add_ln203_fu_1404_p2 <= std_logic_vector(unsigned(sub_ln1265_reg_1761) + unsigned(zext_ln203_9_fu_1400_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state6, icmp_ln180_fu_1450_p2)
    begin
        if ((((icmp_ln180_fu_1450_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state6, icmp_ln180_fu_1450_p2)
    begin
        if (((icmp_ln180_fu_1450_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cos_tab_V_5_address0 <= zext_ln183_1_fu_1536_p1(7 - 1 downto 0);

    cos_tab_V_5_ce0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            cos_tab_V_5_ce0 <= ap_const_logic_1;
        else 
            cos_tab_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    i_2_fu_1456_p2 <= std_logic_vector(unsigned(i14_0_reg_1314) + unsigned(ap_const_lv5_1));
    i_fu_1352_p2 <= std_logic_vector(unsigned(i_0_reg_1292) + unsigned(ap_const_lv5_1));
    icmp_ln168_fu_1346_p2 <= "1" when (i_0_reg_1292 = ap_const_lv5_10) else "0";
    icmp_ln170_fu_1388_p2 <= "1" when (k_0_0_reg_1303 = ap_const_lv6_30) else "0";
    icmp_ln180_fu_1450_p2 <= "1" when (i14_0_reg_1314 = ap_const_lv5_10) else "0";
    icmp_ln182_fu_1524_p2 <= "1" when (k16_0_0_reg_1326 = ap_const_lv7_60) else "0";

    input_k_0_V_address0_assign_proc : process(ap_CS_fsm_state3, sext_ln1265_fu_1430_p1, input_k_0_V_addr_2_reg_1993, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            input_k_0_V_address0 <= input_k_0_V_addr_2_reg_1993;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_k_0_V_address0 <= sext_ln1265_fu_1430_p1(11 - 1 downto 0);
        else 
            input_k_0_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;

    input_k_0_V_address1 <= sext_ln203_fu_1409_p1(11 - 1 downto 0);

    input_k_0_V_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_k_0_V_ce0 <= ap_const_logic_1;
        else 
            input_k_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_k_0_V_ce1_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_k_0_V_ce1 <= ap_const_logic_1;
        else 
            input_k_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_q_0_V_address0_assign_proc : process(ap_CS_fsm_state3, sext_ln1265_fu_1430_p1, ap_CS_fsm_state7, sext_ln1116_fu_1551_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            input_q_0_V_address0 <= sext_ln1116_fu_1551_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_q_0_V_address0 <= sext_ln1265_fu_1430_p1(11 - 1 downto 0);
        else 
            input_q_0_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;

    input_q_0_V_address1 <= sext_ln203_fu_1409_p1(11 - 1 downto 0);

    input_q_0_V_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_q_0_V_ce0 <= ap_const_logic_1;
        else 
            input_q_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_q_0_V_ce1_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_q_0_V_ce1 <= ap_const_logic_1;
        else 
            input_q_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln1118_4_fu_1579_p0 <= rotated_q_0_V_load_reg_2033;
    mul_ln1118_4_fu_1579_p1 <= sin_tab_V_5_load_reg_2028;
    mul_ln1118_4_fu_1579_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_4_fu_1579_p0) * signed(mul_ln1118_4_fu_1579_p1))), 58));
    mul_ln1118_5_fu_1725_p0 <= sext_ln1118_6_reg_2038(21 - 1 downto 0);
    mul_ln1118_5_fu_1725_p1 <= reg_1342;
    mul_ln1118_5_fu_1725_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_5_fu_1725_p0) * signed(mul_ln1118_5_fu_1725_p1))), 58));
    mul_ln1118_6_fu_1733_p0 <= sext_ln1118_8_reg_2048(21 - 1 downto 0);
    mul_ln1118_6_fu_1733_p1 <= rotated_k_0_V_load_reg_2061;
    mul_ln1118_6_fu_1733_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_6_fu_1733_p0) * signed(mul_ln1118_6_fu_1733_p1))), 58));
    mul_ln1118_fu_1567_p0 <= reg_1338;
    mul_ln1118_fu_1567_p1 <= cos_tab_V_5_load_reg_2023;
    mul_ln1118_fu_1567_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln1118_fu_1567_p0) * signed(mul_ln1118_fu_1567_p1))), 58));
    output_k_0_V_address0 <= output_k_0_V_addr_reg_1998;

    output_k_0_V_ce0_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            output_k_0_V_ce0 <= ap_const_logic_1;
        else 
            output_k_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_k_0_V_d0 <= add_ln1192_1_fu_1738_p2(57 downto 20);

    output_k_0_V_we0_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            output_k_0_V_we0 <= ap_const_logic_1;
        else 
            output_k_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_0_0_V_address0 <= zext_ln203_fu_1685_p1(5 - 1 downto 0);

    output_q_0_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_0_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_0_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_0_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_0_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_10_0_V_address0 <= zext_ln203_fu_1685_p1(5 - 1 downto 0);

    output_q_10_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_10_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_10_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_10_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_10_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_A) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_10_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_10_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_11_0_V_address0 <= zext_ln203_fu_1685_p1(5 - 1 downto 0);

    output_q_11_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_11_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_11_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_11_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_11_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_B) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_11_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_11_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_12_0_V_address0 <= zext_ln203_fu_1685_p1(5 - 1 downto 0);

    output_q_12_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_12_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_12_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_12_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_12_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_C) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_12_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_12_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_13_0_V_address0 <= zext_ln203_fu_1685_p1(5 - 1 downto 0);

    output_q_13_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_13_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_13_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_13_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_13_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_D) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_13_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_13_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_14_0_V_address0 <= zext_ln203_fu_1685_p1(5 - 1 downto 0);

    output_q_14_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_14_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_14_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_14_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_14_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_E) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_14_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_14_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_15_0_V_address0 <= zext_ln203_fu_1685_p1(5 - 1 downto 0);

    output_q_15_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_15_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_15_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_15_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_15_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_F) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_15_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_15_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_16_0_V_address0 <= zext_ln203_fu_1685_p1(5 - 1 downto 0);

    output_q_16_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_16_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_16_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_16_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_16_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_10) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_16_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_16_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_17_0_V_address0 <= zext_ln203_fu_1685_p1(5 - 1 downto 0);

    output_q_17_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_17_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_17_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_17_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_17_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_11) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_17_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_17_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_18_0_V_address0 <= zext_ln203_fu_1685_p1(5 - 1 downto 0);

    output_q_18_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_18_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_18_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_18_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_18_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_12) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_18_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_18_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_19_0_V_address0 <= zext_ln203_fu_1685_p1(5 - 1 downto 0);

    output_q_19_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_19_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_19_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_19_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_19_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_13) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_19_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_19_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_1_0_V_address0 <= zext_ln203_fu_1685_p1(5 - 1 downto 0);

    output_q_1_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_1_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_1_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_1_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_1_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_1_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_1_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_20_0_V_address0 <= zext_ln203_fu_1685_p1(5 - 1 downto 0);

    output_q_20_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_20_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_20_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_20_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_20_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_14) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_20_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_20_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_21_0_V_address0 <= zext_ln203_fu_1685_p1(5 - 1 downto 0);

    output_q_21_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_21_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_21_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_21_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_21_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_15) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_21_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_21_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_22_0_V_address0 <= zext_ln203_fu_1685_p1(5 - 1 downto 0);

    output_q_22_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_22_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_22_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_22_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_22_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_16) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_22_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_22_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_23_0_V_address0 <= zext_ln203_fu_1685_p1(5 - 1 downto 0);

    output_q_23_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_23_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_23_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_23_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_23_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_17) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_23_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_23_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_24_0_V_address0 <= zext_ln203_fu_1685_p1(5 - 1 downto 0);

    output_q_24_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_24_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_24_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_24_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_24_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_18) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_24_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_24_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_25_0_V_address0 <= zext_ln203_fu_1685_p1(5 - 1 downto 0);

    output_q_25_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_25_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_25_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_25_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_25_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_19) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_25_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_25_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_26_0_V_address0 <= zext_ln203_fu_1685_p1(5 - 1 downto 0);

    output_q_26_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_26_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_26_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_26_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_26_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_1A) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_26_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_26_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_27_0_V_address0 <= zext_ln203_fu_1685_p1(5 - 1 downto 0);

    output_q_27_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_27_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_27_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_27_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_27_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_1B) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_27_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_27_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_28_0_V_address0 <= zext_ln203_fu_1685_p1(5 - 1 downto 0);

    output_q_28_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_28_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_28_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_28_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_28_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_1C) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_28_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_28_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_29_0_V_address0 <= zext_ln203_fu_1685_p1(5 - 1 downto 0);

    output_q_29_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_29_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_29_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_29_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_29_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_1D) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_29_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_29_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_2_0_V_address0 <= zext_ln203_fu_1685_p1(5 - 1 downto 0);

    output_q_2_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_2_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_2_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_2_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_2_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_2) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_2_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_2_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_30_0_V_address0 <= zext_ln203_fu_1685_p1(5 - 1 downto 0);

    output_q_30_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_30_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_30_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_30_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_30_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_1E) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_30_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_30_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_31_0_V_address0 <= zext_ln203_fu_1685_p1(5 - 1 downto 0);

    output_q_31_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_31_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_31_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_31_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_31_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_1F) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_31_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_31_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_32_0_0_V_address0 <= output_q_32_0_0_V_1_reg_1820;

    output_q_32_0_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_32_0_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_32_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_32_0_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_32_0_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_20) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_32_0_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_32_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_33_0_0_V_address0 <= output_q_33_0_0_V_1_reg_1825;

    output_q_33_0_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_33_0_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_33_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_33_0_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_33_0_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_21) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_33_0_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_33_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_34_0_0_V_address0 <= output_q_34_0_0_V_1_reg_1830;

    output_q_34_0_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_34_0_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_34_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_34_0_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_34_0_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_22) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_34_0_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_34_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_35_0_0_V_address0 <= output_q_35_0_0_V_1_reg_1835;

    output_q_35_0_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_35_0_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_35_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_35_0_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_35_0_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_23) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_35_0_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_35_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_36_0_0_V_address0 <= output_q_36_0_0_V_1_reg_1840;

    output_q_36_0_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_36_0_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_36_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_36_0_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_36_0_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_24) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_36_0_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_36_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_37_0_0_V_address0 <= output_q_37_0_0_V_1_reg_1845;

    output_q_37_0_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_37_0_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_37_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_37_0_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_37_0_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_25) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_37_0_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_37_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_38_0_0_V_address0 <= output_q_38_0_0_V_1_reg_1850;

    output_q_38_0_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_38_0_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_38_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_38_0_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_38_0_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_26) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_38_0_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_38_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_39_0_0_V_address0 <= output_q_39_0_0_V_1_reg_1855;

    output_q_39_0_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_39_0_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_39_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_39_0_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_39_0_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_27) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_39_0_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_39_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_3_0_V_address0 <= zext_ln203_fu_1685_p1(5 - 1 downto 0);

    output_q_3_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_3_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_3_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_3_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_3_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_3) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_3_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_3_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_40_0_0_V_address0 <= output_q_40_0_0_V_1_reg_1860;

    output_q_40_0_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_40_0_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_40_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_40_0_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_40_0_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_28) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_40_0_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_40_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_41_0_0_V_address0 <= output_q_41_0_0_V_1_reg_1865;

    output_q_41_0_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_41_0_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_41_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_41_0_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_41_0_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_29) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_41_0_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_41_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_42_0_0_V_address0 <= output_q_42_0_0_V_1_reg_1870;

    output_q_42_0_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_42_0_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_42_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_42_0_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_42_0_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_2A) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_42_0_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_42_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_43_0_0_V_address0 <= output_q_43_0_0_V_1_reg_1875;

    output_q_43_0_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_43_0_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_43_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_43_0_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_43_0_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_2B) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_43_0_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_43_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_44_0_0_V_address0 <= output_q_44_0_0_V_1_reg_1880;

    output_q_44_0_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_44_0_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_44_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_44_0_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_44_0_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_2C) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_44_0_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_44_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_45_0_0_V_address0 <= output_q_45_0_0_V_1_reg_1885;

    output_q_45_0_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_45_0_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_45_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_45_0_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_45_0_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_2D) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_45_0_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_45_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_46_0_0_V_address0 <= output_q_46_0_0_V_1_reg_1890;

    output_q_46_0_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_46_0_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_46_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_46_0_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_46_0_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_2E) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_46_0_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_46_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_47_0_0_V_address0 <= output_q_47_0_0_V_1_reg_1895;

    output_q_47_0_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_47_0_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_47_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_47_0_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_47_0_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_2F) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_47_0_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_47_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_48_0_0_V_address0 <= output_q_48_0_0_V_1_reg_1900;

    output_q_48_0_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_48_0_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_48_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_48_0_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_48_0_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_30) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_48_0_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_48_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_49_0_0_V_address0 <= output_q_49_0_0_V_1_reg_1905;

    output_q_49_0_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_49_0_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_49_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_49_0_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_49_0_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_31) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_49_0_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_49_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_4_0_V_address0 <= zext_ln203_fu_1685_p1(5 - 1 downto 0);

    output_q_4_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_4_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_4_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_4_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_4_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_4) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_4_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_4_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_50_0_0_V_address0 <= output_q_50_0_0_V_1_reg_1910;

    output_q_50_0_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_50_0_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_50_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_50_0_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_50_0_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_32) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_50_0_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_50_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_51_0_0_V_address0 <= output_q_51_0_0_V_1_reg_1915;

    output_q_51_0_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_51_0_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_51_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_51_0_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_51_0_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_33) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_51_0_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_51_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_52_0_0_V_address0 <= output_q_52_0_0_V_1_reg_1920;

    output_q_52_0_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_52_0_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_52_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_52_0_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_52_0_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_34) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_52_0_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_52_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_53_0_0_V_address0 <= output_q_53_0_0_V_1_reg_1925;

    output_q_53_0_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_53_0_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_53_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_53_0_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_53_0_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_35) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_53_0_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_53_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_54_0_0_V_address0 <= output_q_54_0_0_V_1_reg_1930;

    output_q_54_0_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_54_0_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_54_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_54_0_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_54_0_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_36) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_54_0_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_54_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_55_0_0_V_address0 <= output_q_55_0_0_V_1_reg_1935;

    output_q_55_0_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_55_0_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_55_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_55_0_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_55_0_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_37) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_55_0_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_55_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_56_0_0_V_address0 <= output_q_56_0_0_V_1_reg_1940;

    output_q_56_0_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_56_0_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_56_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_56_0_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_56_0_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_38) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_56_0_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_56_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_57_0_0_V_address0 <= output_q_57_0_0_V_1_reg_1945;

    output_q_57_0_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_57_0_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_57_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_57_0_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_57_0_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_39) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_57_0_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_57_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_58_0_0_V_address0 <= output_q_58_0_0_V_1_reg_1950;

    output_q_58_0_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_58_0_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_58_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_58_0_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_58_0_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_3A) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_58_0_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_58_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_59_0_0_V_address0 <= output_q_59_0_0_V_1_reg_1955;

    output_q_59_0_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_59_0_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_59_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_59_0_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_59_0_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_3B) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_59_0_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_59_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_5_0_V_address0 <= zext_ln203_fu_1685_p1(5 - 1 downto 0);

    output_q_5_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_5_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_5_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_5_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_5_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_5) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_5_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_5_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_60_0_0_V_address0 <= output_q_60_0_0_V_1_reg_1960;

    output_q_60_0_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_60_0_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_60_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_60_0_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_60_0_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_3C) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_60_0_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_60_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_61_0_0_V_address0 <= output_q_61_0_0_V_1_reg_1965;

    output_q_61_0_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_61_0_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_61_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_61_0_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_61_0_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_3D) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_61_0_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_61_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_62_0_0_V_address0 <= output_q_62_0_0_V_1_reg_1970;

    output_q_62_0_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_62_0_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_62_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_62_0_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_62_0_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_3E) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_62_0_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_62_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_63_0_0_V_address0 <= output_q_63_0_0_V_1_reg_1975;

    output_q_63_0_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_63_0_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_63_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_63_0_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_63_0_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_3F) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_63_0_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_63_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_6_0_V_address0 <= zext_ln203_fu_1685_p1(5 - 1 downto 0);

    output_q_6_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_6_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_6_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_6_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_6_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_6) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_6_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_6_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_7_0_V_address0 <= zext_ln203_fu_1685_p1(5 - 1 downto 0);

    output_q_7_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_7_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_7_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_7_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_7_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_7) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_7_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_7_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_8_0_V_address0 <= zext_ln203_fu_1685_p1(5 - 1 downto 0);

    output_q_8_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_8_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_8_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_8_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_8_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_8) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_8_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_8_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_9_0_V_address0 <= zext_ln203_fu_1685_p1(5 - 1 downto 0);

    output_q_9_0_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            output_q_9_0_V_ce0 <= ap_const_logic_1;
        else 
            output_q_9_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_q_9_0_V_d0 <= add_ln1192_fu_1585_p2(57 downto 20);

    output_q_9_0_V_we0_assign_proc : process(ap_CS_fsm_state10, trunc_ln203_fu_1663_p1)
    begin
        if (((trunc_ln203_fu_1663_p1 = ap_const_lv6_9) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_q_9_0_V_we0 <= ap_const_logic_1;
        else 
            output_q_9_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rotated_k_0_V_address0_assign_proc : process(ap_CS_fsm_state4, sext_ln203_reg_1775, sext_ln1265_reg_1791, rotated_k_0_V_addr_2_reg_2008, ap_CS_fsm_state5, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            rotated_k_0_V_address0 <= rotated_k_0_V_addr_2_reg_2008;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            rotated_k_0_V_address0 <= sext_ln203_reg_1775(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            rotated_k_0_V_address0 <= sext_ln1265_reg_1791(11 - 1 downto 0);
        else 
            rotated_k_0_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    rotated_k_0_V_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            rotated_k_0_V_ce0 <= ap_const_logic_1;
        else 
            rotated_k_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rotated_k_0_V_d0_assign_proc : process(input_k_0_V_q1, ap_CS_fsm_state4, ap_CS_fsm_state5, sub_ln703_38_fu_1443_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            rotated_k_0_V_d0 <= sub_ln703_38_fu_1443_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            rotated_k_0_V_d0 <= input_k_0_V_q1;
        else 
            rotated_k_0_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    rotated_k_0_V_we0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            rotated_k_0_V_we0 <= ap_const_logic_1;
        else 
            rotated_k_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rotated_q_0_V_address0_assign_proc : process(ap_CS_fsm_state4, sext_ln203_reg_1775, sext_ln1265_reg_1791, ap_CS_fsm_state7, ap_CS_fsm_state5, sext_ln1116_fu_1551_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rotated_q_0_V_address0 <= sext_ln1116_fu_1551_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            rotated_q_0_V_address0 <= sext_ln203_reg_1775(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            rotated_q_0_V_address0 <= sext_ln1265_reg_1791(11 - 1 downto 0);
        else 
            rotated_q_0_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    rotated_q_0_V_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state7, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            rotated_q_0_V_ce0 <= ap_const_logic_1;
        else 
            rotated_q_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rotated_q_0_V_d0_assign_proc : process(input_q_0_V_q1, ap_CS_fsm_state4, ap_CS_fsm_state5, sub_ln703_fu_1436_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            rotated_q_0_V_d0 <= sub_ln703_fu_1436_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            rotated_q_0_V_d0 <= input_q_0_V_q1;
        else 
            rotated_q_0_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    rotated_q_0_V_we0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            rotated_q_0_V_we0 <= ap_const_logic_1;
        else 
            rotated_q_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln1116_fu_1551_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1116_fu_1546_p2),64));

        sext_ln1118_6_fu_1564_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(cos_tab_V_5_load_reg_2023),58));

        sext_ln1118_8_fu_1576_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sin_tab_V_5_load_reg_2028),58));

        sext_ln1265_fu_1430_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1265_fu_1425_p2),64));

        sext_ln203_fu_1409_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln203_fu_1404_p2),64));

    sin_tab_V_5_address0 <= zext_ln183_1_fu_1536_p1(7 - 1 downto 0);

    sin_tab_V_5_ce0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            sin_tab_V_5_ce0 <= ap_const_logic_1;
        else 
            sin_tab_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln1116_fu_1518_p2 <= std_logic_vector(unsigned(tmp_64_fu_1498_p3) - unsigned(zext_ln1116_fu_1514_p1));
    sub_ln1265_fu_1378_p2 <= std_logic_vector(unsigned(tmp_62_fu_1358_p3) - unsigned(zext_ln1265_fu_1374_p1));
    sub_ln703_38_fu_1443_p2 <= std_logic_vector(unsigned(ap_const_lv38_0) - unsigned(reg_1342));
    sub_ln703_fu_1436_p2 <= std_logic_vector(unsigned(ap_const_lv38_0) - unsigned(reg_1338));
    tmp_62_fu_1358_p3 <= (i_0_reg_1292 & ap_const_lv7_0);
    tmp_63_fu_1366_p3 <= (i_0_reg_1292 & ap_const_lv5_0);
    tmp_64_fu_1498_p3 <= (i14_0_reg_1314 & ap_const_lv7_0);
    tmp_65_fu_1506_p3 <= (i14_0_reg_1314 & ap_const_lv5_0);
    tmp_66_fu_1675_p4 <= ((ap_const_lv1_0 & i14_0_reg_1314) & tmp_89_fu_1667_p3);
    tmp_89_fu_1667_p3 <= k16_0_0_reg_1326(6 downto 6);
    trunc_ln203_fu_1663_p1 <= k16_0_0_reg_1326(6 - 1 downto 0);
    zext_ln1116_1_fu_1542_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k16_0_0_reg_1326),12));
    zext_ln1116_fu_1514_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_65_fu_1506_p3),12));
    zext_ln1265_3_fu_1421_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln171_fu_1415_p2),12));
    zext_ln1265_fu_1374_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_63_fu_1366_p3),12));
    zext_ln170_fu_1384_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_0_0_reg_1303),7));
    zext_ln183_1_fu_1536_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k16_0_0_reg_1326),64));
    zext_ln183_fu_1462_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i14_0_reg_1314),64));
    zext_ln203_9_fu_1400_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_0_0_reg_1303),12));
    zext_ln203_fu_1685_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_66_fu_1675_p4),64));
end behav;
