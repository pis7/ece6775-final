// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "cache_update.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic cache_update::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic cache_update::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> cache_update::ap_ST_fsm_state1 = "1";
const sc_lv<5> cache_update::ap_ST_fsm_state2 = "10";
const sc_lv<5> cache_update::ap_ST_fsm_state3 = "100";
const sc_lv<5> cache_update::ap_ST_fsm_state4 = "1000";
const sc_lv<5> cache_update::ap_ST_fsm_state5 = "10000";
const sc_lv<32> cache_update::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> cache_update::ap_const_lv32_1 = "1";
const sc_lv<1> cache_update::ap_const_lv1_0 = "0";
const sc_lv<32> cache_update::ap_const_lv32_2 = "10";
const sc_lv<32> cache_update::ap_const_lv32_3 = "11";
const sc_lv<1> cache_update::ap_const_lv1_1 = "1";
const sc_lv<2> cache_update::ap_const_lv2_0 = "00";
const sc_lv<3> cache_update::ap_const_lv3_0 = "000";
const sc_lv<4> cache_update::ap_const_lv4_0 = "0000";
const sc_lv<32> cache_update::ap_const_lv32_4 = "100";
const sc_lv<2> cache_update::ap_const_lv2_2 = "10";
const sc_lv<2> cache_update::ap_const_lv2_1 = "1";
const sc_lv<3> cache_update::ap_const_lv3_6 = "110";
const sc_lv<3> cache_update::ap_const_lv3_1 = "1";
const sc_lv<3> cache_update::ap_const_lv3_5 = "101";
const sc_lv<4> cache_update::ap_const_lv4_C = "1100";
const sc_lv<4> cache_update::ap_const_lv4_1 = "1";
const bool cache_update::ap_const_boolean_1 = true;

cache_update::cache_update(sc_module_name name) : sc_module(name), mVcdFile(0) {
    k_cache_V_U = new cache_update_k_cakbM("k_cache_V_U");
    k_cache_V_U->clk(ap_clk);
    k_cache_V_U->reset(ap_rst);
    k_cache_V_U->address0(k_cache_V_address0);
    k_cache_V_U->ce0(k_cache_V_ce0);
    k_cache_V_U->q0(k_cache_V_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln203_6_fu_350_p2);
    sensitive << ( sub_ln203_5_reg_417 );
    sensitive << ( zext_ln204_17_fu_332_p1 );

    SC_METHOD(thread_add_ln203_fu_279_p2);
    sensitive << ( sext_ln203_reg_394 );
    sensitive << ( zext_ln204_13_fu_236_p1 );

    SC_METHOD(thread_add_ln204_4_fu_244_p2);
    sensitive << ( add_ln204_reg_389 );
    sensitive << ( zext_ln204_14_fu_240_p1 );

    SC_METHOD(thread_add_ln204_5_fu_340_p2);
    sensitive << ( sub_ln204_2_reg_412 );
    sensitive << ( zext_ln204_18_fu_336_p1 );

    SC_METHOD(thread_add_ln204_6_fu_355_p2);
    sensitive << ( sub_ln204_reg_399 );
    sensitive << ( zext_ln204_16_fu_328_p1 );

    SC_METHOD(thread_add_ln204_fu_170_p2);
    sensitive << ( zext_ln204_fu_150_p1 );
    sensitive << ( zext_ln204_11_fu_162_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln201_fu_138_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln201_fu_138_p2 );

    SC_METHOD(thread_cache_out_V_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln203_13_fu_365_p1 );

    SC_METHOD(thread_cache_out_V_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_cache_out_V_d0);
    sensitive << ( update_0_V_q0 );
    sensitive << ( icmp_ln204_reg_422 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( sext_ln203_3_fu_369_p1 );

    SC_METHOD(thread_cache_out_V_we0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_i_fu_144_p2);
    sensitive << ( i_0_reg_105 );

    SC_METHOD(thread_icmp_ln201_fu_138_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_105 );

    SC_METHOD(thread_icmp_ln202_fu_224_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_reg_116 );

    SC_METHOD(thread_icmp_ln203_fu_316_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( k_0_reg_127 );

    SC_METHOD(thread_icmp_ln204_fu_310_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln202_fu_224_p2 );
    sensitive << ( j_0_reg_116 );

    SC_METHOD(thread_j_fu_230_p2);
    sensitive << ( j_0_reg_116 );

    SC_METHOD(thread_k_cache_V_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln204_19_fu_345_p1 );

    SC_METHOD(thread_k_cache_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_k_fu_322_p2);
    sensitive << ( k_0_reg_127 );

    SC_METHOD(thread_p_shl5_cast_fu_288_p3);
    sensitive << ( trunc_ln203_fu_284_p1 );

    SC_METHOD(thread_p_shl6_cast_fu_296_p3);
    sensitive << ( add_ln203_fu_279_p2 );

    SC_METHOD(thread_p_shl7_cast_fu_253_p3);
    sensitive << ( trunc_ln204_fu_249_p1 );

    SC_METHOD(thread_sext_ln203_3_fu_369_p1);
    sensitive << ( k_cache_V_q0 );

    SC_METHOD(thread_sext_ln203_fu_206_p1);
    sensitive << ( sub_ln203_fu_200_p2 );

    SC_METHOD(thread_sext_ln204_fu_360_p1);
    sensitive << ( add_ln204_6_fu_355_p2 );

    SC_METHOD(thread_sub_ln203_5_fu_304_p2);
    sensitive << ( p_shl5_cast_fu_288_p3 );
    sensitive << ( p_shl6_cast_fu_296_p3 );

    SC_METHOD(thread_sub_ln203_fu_200_p2);
    sensitive << ( zext_ln203_fu_184_p1 );
    sensitive << ( zext_ln203_12_fu_196_p1 );

    SC_METHOD(thread_sub_ln204_2_fu_273_p2);
    sensitive << ( p_shl7_cast_fu_253_p3 );
    sensitive << ( zext_ln204_15_fu_269_p1 );

    SC_METHOD(thread_sub_ln204_fu_218_p2);
    sensitive << ( tmp_66_fu_210_p3 );
    sensitive << ( zext_ln204_12_fu_166_p1 );

    SC_METHOD(thread_tmp_63_fu_154_p3);
    sensitive << ( i_0_reg_105 );

    SC_METHOD(thread_tmp_64_fu_176_p3);
    sensitive << ( i_0_reg_105 );

    SC_METHOD(thread_tmp_65_fu_188_p3);
    sensitive << ( i_0_reg_105 );

    SC_METHOD(thread_tmp_66_fu_210_p3);
    sensitive << ( i_0_reg_105 );

    SC_METHOD(thread_tmp_85_fu_261_p3);
    sensitive << ( add_ln204_4_fu_244_p2 );

    SC_METHOD(thread_trunc_ln203_fu_284_p1);
    sensitive << ( add_ln203_fu_279_p2 );

    SC_METHOD(thread_trunc_ln204_fu_249_p1);
    sensitive << ( add_ln204_4_fu_244_p2 );

    SC_METHOD(thread_update_0_V_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln204_fu_360_p1 );

    SC_METHOD(thread_update_0_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_zext_ln203_12_fu_196_p1);
    sensitive << ( tmp_65_fu_188_p3 );

    SC_METHOD(thread_zext_ln203_13_fu_365_p1);
    sensitive << ( add_ln203_6_reg_440 );

    SC_METHOD(thread_zext_ln203_fu_184_p1);
    sensitive << ( tmp_64_fu_176_p3 );

    SC_METHOD(thread_zext_ln204_11_fu_162_p1);
    sensitive << ( tmp_63_fu_154_p3 );

    SC_METHOD(thread_zext_ln204_12_fu_166_p1);
    sensitive << ( tmp_63_fu_154_p3 );

    SC_METHOD(thread_zext_ln204_13_fu_236_p1);
    sensitive << ( j_0_reg_116 );

    SC_METHOD(thread_zext_ln204_14_fu_240_p1);
    sensitive << ( j_0_reg_116 );

    SC_METHOD(thread_zext_ln204_15_fu_269_p1);
    sensitive << ( tmp_85_fu_261_p3 );

    SC_METHOD(thread_zext_ln204_16_fu_328_p1);
    sensitive << ( k_0_reg_127 );

    SC_METHOD(thread_zext_ln204_17_fu_332_p1);
    sensitive << ( k_0_reg_127 );

    SC_METHOD(thread_zext_ln204_18_fu_336_p1);
    sensitive << ( k_0_reg_127 );

    SC_METHOD(thread_zext_ln204_19_fu_345_p1);
    sensitive << ( add_ln204_5_fu_340_p2 );

    SC_METHOD(thread_zext_ln204_fu_150_p1);
    sensitive << ( i_0_reg_105 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln201_fu_138_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln202_fu_224_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln203_fu_316_p2 );

    ap_CS_fsm = "00001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "cache_update_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, cache_out_V_address0, "(port)cache_out_V_address0");
    sc_trace(mVcdFile, cache_out_V_ce0, "(port)cache_out_V_ce0");
    sc_trace(mVcdFile, cache_out_V_we0, "(port)cache_out_V_we0");
    sc_trace(mVcdFile, cache_out_V_d0, "(port)cache_out_V_d0");
    sc_trace(mVcdFile, update_0_V_address0, "(port)update_0_V_address0");
    sc_trace(mVcdFile, update_0_V_ce0, "(port)update_0_V_ce0");
    sc_trace(mVcdFile, update_0_V_q0, "(port)update_0_V_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, k_cache_V_address0, "k_cache_V_address0");
    sc_trace(mVcdFile, k_cache_V_ce0, "k_cache_V_ce0");
    sc_trace(mVcdFile, k_cache_V_q0, "k_cache_V_q0");
    sc_trace(mVcdFile, i_fu_144_p2, "i_fu_144_p2");
    sc_trace(mVcdFile, i_reg_384, "i_reg_384");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, add_ln204_fu_170_p2, "add_ln204_fu_170_p2");
    sc_trace(mVcdFile, add_ln204_reg_389, "add_ln204_reg_389");
    sc_trace(mVcdFile, icmp_ln201_fu_138_p2, "icmp_ln201_fu_138_p2");
    sc_trace(mVcdFile, sext_ln203_fu_206_p1, "sext_ln203_fu_206_p1");
    sc_trace(mVcdFile, sext_ln203_reg_394, "sext_ln203_reg_394");
    sc_trace(mVcdFile, sub_ln204_fu_218_p2, "sub_ln204_fu_218_p2");
    sc_trace(mVcdFile, sub_ln204_reg_399, "sub_ln204_reg_399");
    sc_trace(mVcdFile, j_fu_230_p2, "j_fu_230_p2");
    sc_trace(mVcdFile, j_reg_407, "j_reg_407");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, sub_ln204_2_fu_273_p2, "sub_ln204_2_fu_273_p2");
    sc_trace(mVcdFile, sub_ln204_2_reg_412, "sub_ln204_2_reg_412");
    sc_trace(mVcdFile, icmp_ln202_fu_224_p2, "icmp_ln202_fu_224_p2");
    sc_trace(mVcdFile, sub_ln203_5_fu_304_p2, "sub_ln203_5_fu_304_p2");
    sc_trace(mVcdFile, sub_ln203_5_reg_417, "sub_ln203_5_reg_417");
    sc_trace(mVcdFile, icmp_ln204_fu_310_p2, "icmp_ln204_fu_310_p2");
    sc_trace(mVcdFile, icmp_ln204_reg_422, "icmp_ln204_reg_422");
    sc_trace(mVcdFile, k_fu_322_p2, "k_fu_322_p2");
    sc_trace(mVcdFile, k_reg_430, "k_reg_430");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln203_fu_316_p2, "icmp_ln203_fu_316_p2");
    sc_trace(mVcdFile, add_ln203_6_fu_350_p2, "add_ln203_6_fu_350_p2");
    sc_trace(mVcdFile, add_ln203_6_reg_440, "add_ln203_6_reg_440");
    sc_trace(mVcdFile, i_0_reg_105, "i_0_reg_105");
    sc_trace(mVcdFile, j_0_reg_116, "j_0_reg_116");
    sc_trace(mVcdFile, k_0_reg_127, "k_0_reg_127");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, zext_ln204_19_fu_345_p1, "zext_ln204_19_fu_345_p1");
    sc_trace(mVcdFile, sext_ln204_fu_360_p1, "sext_ln204_fu_360_p1");
    sc_trace(mVcdFile, zext_ln203_13_fu_365_p1, "zext_ln203_13_fu_365_p1");
    sc_trace(mVcdFile, tmp_63_fu_154_p3, "tmp_63_fu_154_p3");
    sc_trace(mVcdFile, zext_ln204_fu_150_p1, "zext_ln204_fu_150_p1");
    sc_trace(mVcdFile, zext_ln204_11_fu_162_p1, "zext_ln204_11_fu_162_p1");
    sc_trace(mVcdFile, tmp_64_fu_176_p3, "tmp_64_fu_176_p3");
    sc_trace(mVcdFile, tmp_65_fu_188_p3, "tmp_65_fu_188_p3");
    sc_trace(mVcdFile, zext_ln203_fu_184_p1, "zext_ln203_fu_184_p1");
    sc_trace(mVcdFile, zext_ln203_12_fu_196_p1, "zext_ln203_12_fu_196_p1");
    sc_trace(mVcdFile, sub_ln203_fu_200_p2, "sub_ln203_fu_200_p2");
    sc_trace(mVcdFile, tmp_66_fu_210_p3, "tmp_66_fu_210_p3");
    sc_trace(mVcdFile, zext_ln204_12_fu_166_p1, "zext_ln204_12_fu_166_p1");
    sc_trace(mVcdFile, zext_ln204_14_fu_240_p1, "zext_ln204_14_fu_240_p1");
    sc_trace(mVcdFile, add_ln204_4_fu_244_p2, "add_ln204_4_fu_244_p2");
    sc_trace(mVcdFile, trunc_ln204_fu_249_p1, "trunc_ln204_fu_249_p1");
    sc_trace(mVcdFile, tmp_85_fu_261_p3, "tmp_85_fu_261_p3");
    sc_trace(mVcdFile, p_shl7_cast_fu_253_p3, "p_shl7_cast_fu_253_p3");
    sc_trace(mVcdFile, zext_ln204_15_fu_269_p1, "zext_ln204_15_fu_269_p1");
    sc_trace(mVcdFile, zext_ln204_13_fu_236_p1, "zext_ln204_13_fu_236_p1");
    sc_trace(mVcdFile, add_ln203_fu_279_p2, "add_ln203_fu_279_p2");
    sc_trace(mVcdFile, trunc_ln203_fu_284_p1, "trunc_ln203_fu_284_p1");
    sc_trace(mVcdFile, p_shl5_cast_fu_288_p3, "p_shl5_cast_fu_288_p3");
    sc_trace(mVcdFile, p_shl6_cast_fu_296_p3, "p_shl6_cast_fu_296_p3");
    sc_trace(mVcdFile, zext_ln204_18_fu_336_p1, "zext_ln204_18_fu_336_p1");
    sc_trace(mVcdFile, add_ln204_5_fu_340_p2, "add_ln204_5_fu_340_p2");
    sc_trace(mVcdFile, zext_ln204_17_fu_332_p1, "zext_ln204_17_fu_332_p1");
    sc_trace(mVcdFile, zext_ln204_16_fu_328_p1, "zext_ln204_16_fu_328_p1");
    sc_trace(mVcdFile, add_ln204_6_fu_355_p2, "add_ln204_6_fu_355_p2");
    sc_trace(mVcdFile, sext_ln203_3_fu_369_p1, "sext_ln203_3_fu_369_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

cache_update::~cache_update() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete k_cache_V_U;
}

void cache_update::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln202_fu_224_p2.read(), ap_const_lv1_1))) {
        i_0_reg_105 = i_reg_384.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_105 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln203_fu_316_p2.read(), ap_const_lv1_1))) {
        j_0_reg_116 = j_reg_407.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln201_fu_138_p2.read(), ap_const_lv1_0))) {
        j_0_reg_116 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        k_0_reg_127 = k_reg_430.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln202_fu_224_p2.read()))) {
        k_0_reg_127 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln203_fu_316_p2.read()))) {
        add_ln203_6_reg_440 = add_ln203_6_fu_350_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln201_fu_138_p2.read(), ap_const_lv1_0))) {
        add_ln204_reg_389 = add_ln204_fu_170_p2.read();
        sext_ln203_reg_394 = sext_ln203_fu_206_p1.read();
        sub_ln204_reg_399 = sub_ln204_fu_218_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_384 = i_fu_144_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln202_fu_224_p2.read()))) {
        icmp_ln204_reg_422 = icmp_ln204_fu_310_p2.read();
        sub_ln203_5_reg_417 = sub_ln203_5_fu_304_p2.read();
        sub_ln204_2_reg_412 = sub_ln204_2_fu_273_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_reg_407 = j_fu_230_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        k_reg_430 = k_fu_322_p2.read();
    }
}

void cache_update::thread_add_ln203_6_fu_350_p2() {
    add_ln203_6_fu_350_p2 = (!sub_ln203_5_reg_417.read().is_01() || !zext_ln204_17_fu_332_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(sub_ln203_5_reg_417.read()) + sc_biguint<9>(zext_ln204_17_fu_332_p1.read()));
}

void cache_update::thread_add_ln203_fu_279_p2() {
    add_ln203_fu_279_p2 = (!sext_ln203_reg_394.read().is_01() || !zext_ln204_13_fu_236_p1.read().is_01())? sc_lv<7>(): (sc_bigint<7>(sext_ln203_reg_394.read()) + sc_biguint<7>(zext_ln204_13_fu_236_p1.read()));
}

void cache_update::thread_add_ln204_4_fu_244_p2() {
    add_ln204_4_fu_244_p2 = (!add_ln204_reg_389.read().is_01() || !zext_ln204_14_fu_240_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(add_ln204_reg_389.read()) + sc_biguint<5>(zext_ln204_14_fu_240_p1.read()));
}

void cache_update::thread_add_ln204_5_fu_340_p2() {
    add_ln204_5_fu_340_p2 = (!sub_ln204_2_reg_412.read().is_01() || !zext_ln204_18_fu_336_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(sub_ln204_2_reg_412.read()) + sc_biguint<8>(zext_ln204_18_fu_336_p1.read()));
}

void cache_update::thread_add_ln204_6_fu_355_p2() {
    add_ln204_6_fu_355_p2 = (!sub_ln204_reg_399.read().is_01() || !zext_ln204_16_fu_328_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(sub_ln204_reg_399.read()) + sc_biguint<6>(zext_ln204_16_fu_328_p1.read()));
}

void cache_update::thread_add_ln204_fu_170_p2() {
    add_ln204_fu_170_p2 = (!zext_ln204_fu_150_p1.read().is_01() || !zext_ln204_11_fu_162_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln204_fu_150_p1.read()) + sc_biguint<5>(zext_ln204_11_fu_162_p1.read()));
}

void cache_update::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void cache_update::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void cache_update::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void cache_update::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void cache_update::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void cache_update::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln201_fu_138_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void cache_update::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void cache_update::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln201_fu_138_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void cache_update::thread_cache_out_V_address0() {
    cache_out_V_address0 =  (sc_lv<8>) (zext_ln203_13_fu_365_p1.read());
}

void cache_update::thread_cache_out_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        cache_out_V_ce0 = ap_const_logic_1;
    } else {
        cache_out_V_ce0 = ap_const_logic_0;
    }
}

void cache_update::thread_cache_out_V_d0() {
    cache_out_V_d0 = (!icmp_ln204_reg_422.read()[0].is_01())? sc_lv<40>(): ((icmp_ln204_reg_422.read()[0].to_bool())? update_0_V_q0.read(): sext_ln203_3_fu_369_p1.read());
}

void cache_update::thread_cache_out_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        cache_out_V_we0 = ap_const_logic_1;
    } else {
        cache_out_V_we0 = ap_const_logic_0;
    }
}

void cache_update::thread_i_fu_144_p2() {
    i_fu_144_p2 = (!i_0_reg_105.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i_0_reg_105.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void cache_update::thread_icmp_ln201_fu_138_p2() {
    icmp_ln201_fu_138_p2 = (!i_0_reg_105.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_105.read() == ap_const_lv2_2);
}

void cache_update::thread_icmp_ln202_fu_224_p2() {
    icmp_ln202_fu_224_p2 = (!j_0_reg_116.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_116.read() == ap_const_lv3_6);
}

void cache_update::thread_icmp_ln203_fu_316_p2() {
    icmp_ln203_fu_316_p2 = (!k_0_reg_127.read().is_01() || !ap_const_lv4_C.is_01())? sc_lv<1>(): sc_lv<1>(k_0_reg_127.read() == ap_const_lv4_C);
}

void cache_update::thread_icmp_ln204_fu_310_p2() {
    icmp_ln204_fu_310_p2 = (!j_0_reg_116.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_116.read() == ap_const_lv3_5);
}

void cache_update::thread_j_fu_230_p2() {
    j_fu_230_p2 = (!j_0_reg_116.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_0_reg_116.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void cache_update::thread_k_cache_V_address0() {
    k_cache_V_address0 =  (sc_lv<7>) (zext_ln204_19_fu_345_p1.read());
}

void cache_update::thread_k_cache_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        k_cache_V_ce0 = ap_const_logic_1;
    } else {
        k_cache_V_ce0 = ap_const_logic_0;
    }
}

void cache_update::thread_k_fu_322_p2() {
    k_fu_322_p2 = (!k_0_reg_127.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(k_0_reg_127.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void cache_update::thread_p_shl5_cast_fu_288_p3() {
    p_shl5_cast_fu_288_p3 = esl_concat<5,4>(trunc_ln203_fu_284_p1.read(), ap_const_lv4_0);
}

void cache_update::thread_p_shl6_cast_fu_296_p3() {
    p_shl6_cast_fu_296_p3 = esl_concat<7,2>(add_ln203_fu_279_p2.read(), ap_const_lv2_0);
}

void cache_update::thread_p_shl7_cast_fu_253_p3() {
    p_shl7_cast_fu_253_p3 = esl_concat<4,4>(trunc_ln204_fu_249_p1.read(), ap_const_lv4_0);
}

void cache_update::thread_sext_ln203_3_fu_369_p1() {
    sext_ln203_3_fu_369_p1 = esl_sext<40,20>(k_cache_V_q0.read());
}

void cache_update::thread_sext_ln203_fu_206_p1() {
    sext_ln203_fu_206_p1 = esl_sext<7,6>(sub_ln203_fu_200_p2.read());
}

void cache_update::thread_sext_ln204_fu_360_p1() {
    sext_ln204_fu_360_p1 = esl_sext<64,6>(add_ln204_6_fu_355_p2.read());
}

void cache_update::thread_sub_ln203_5_fu_304_p2() {
    sub_ln203_5_fu_304_p2 = (!p_shl5_cast_fu_288_p3.read().is_01() || !p_shl6_cast_fu_296_p3.read().is_01())? sc_lv<9>(): (sc_biguint<9>(p_shl5_cast_fu_288_p3.read()) - sc_biguint<9>(p_shl6_cast_fu_296_p3.read()));
}

void cache_update::thread_sub_ln203_fu_200_p2() {
    sub_ln203_fu_200_p2 = (!zext_ln203_fu_184_p1.read().is_01() || !zext_ln203_12_fu_196_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln203_fu_184_p1.read()) - sc_biguint<6>(zext_ln203_12_fu_196_p1.read()));
}

void cache_update::thread_sub_ln204_2_fu_273_p2() {
    sub_ln204_2_fu_273_p2 = (!p_shl7_cast_fu_253_p3.read().is_01() || !zext_ln204_15_fu_269_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(p_shl7_cast_fu_253_p3.read()) - sc_biguint<8>(zext_ln204_15_fu_269_p1.read()));
}

void cache_update::thread_sub_ln204_fu_218_p2() {
    sub_ln204_fu_218_p2 = (!tmp_66_fu_210_p3.read().is_01() || !zext_ln204_12_fu_166_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_66_fu_210_p3.read()) - sc_biguint<6>(zext_ln204_12_fu_166_p1.read()));
}

void cache_update::thread_tmp_63_fu_154_p3() {
    tmp_63_fu_154_p3 = esl_concat<2,2>(i_0_reg_105.read(), ap_const_lv2_0);
}

void cache_update::thread_tmp_64_fu_176_p3() {
    tmp_64_fu_176_p3 = esl_concat<2,3>(i_0_reg_105.read(), ap_const_lv3_0);
}

void cache_update::thread_tmp_65_fu_188_p3() {
    tmp_65_fu_188_p3 = esl_concat<2,1>(i_0_reg_105.read(), ap_const_lv1_0);
}

void cache_update::thread_tmp_66_fu_210_p3() {
    tmp_66_fu_210_p3 = esl_concat<2,4>(i_0_reg_105.read(), ap_const_lv4_0);
}

void cache_update::thread_tmp_85_fu_261_p3() {
    tmp_85_fu_261_p3 = esl_concat<5,2>(add_ln204_4_fu_244_p2.read(), ap_const_lv2_0);
}

void cache_update::thread_trunc_ln203_fu_284_p1() {
    trunc_ln203_fu_284_p1 = add_ln203_fu_279_p2.read().range(5-1, 0);
}

void cache_update::thread_trunc_ln204_fu_249_p1() {
    trunc_ln204_fu_249_p1 = add_ln204_4_fu_244_p2.read().range(4-1, 0);
}

void cache_update::thread_update_0_V_address0() {
    update_0_V_address0 =  (sc_lv<5>) (sext_ln204_fu_360_p1.read());
}

void cache_update::thread_update_0_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        update_0_V_ce0 = ap_const_logic_1;
    } else {
        update_0_V_ce0 = ap_const_logic_0;
    }
}

void cache_update::thread_zext_ln203_12_fu_196_p1() {
    zext_ln203_12_fu_196_p1 = esl_zext<6,3>(tmp_65_fu_188_p3.read());
}

void cache_update::thread_zext_ln203_13_fu_365_p1() {
    zext_ln203_13_fu_365_p1 = esl_zext<64,9>(add_ln203_6_reg_440.read());
}

void cache_update::thread_zext_ln203_fu_184_p1() {
    zext_ln203_fu_184_p1 = esl_zext<6,5>(tmp_64_fu_176_p3.read());
}

void cache_update::thread_zext_ln204_11_fu_162_p1() {
    zext_ln204_11_fu_162_p1 = esl_zext<5,4>(tmp_63_fu_154_p3.read());
}

void cache_update::thread_zext_ln204_12_fu_166_p1() {
    zext_ln204_12_fu_166_p1 = esl_zext<6,4>(tmp_63_fu_154_p3.read());
}

void cache_update::thread_zext_ln204_13_fu_236_p1() {
    zext_ln204_13_fu_236_p1 = esl_zext<7,3>(j_0_reg_116.read());
}

void cache_update::thread_zext_ln204_14_fu_240_p1() {
    zext_ln204_14_fu_240_p1 = esl_zext<5,3>(j_0_reg_116.read());
}

void cache_update::thread_zext_ln204_15_fu_269_p1() {
    zext_ln204_15_fu_269_p1 = esl_zext<8,7>(tmp_85_fu_261_p3.read());
}

void cache_update::thread_zext_ln204_16_fu_328_p1() {
    zext_ln204_16_fu_328_p1 = esl_zext<6,4>(k_0_reg_127.read());
}

void cache_update::thread_zext_ln204_17_fu_332_p1() {
    zext_ln204_17_fu_332_p1 = esl_zext<9,4>(k_0_reg_127.read());
}

void cache_update::thread_zext_ln204_18_fu_336_p1() {
    zext_ln204_18_fu_336_p1 = esl_zext<8,4>(k_0_reg_127.read());
}

void cache_update::thread_zext_ln204_19_fu_345_p1() {
    zext_ln204_19_fu_345_p1 = esl_zext<64,8>(add_ln204_5_fu_340_p2.read());
}

void cache_update::thread_zext_ln204_fu_150_p1() {
    zext_ln204_fu_150_p1 = esl_zext<5,2>(i_0_reg_105.read());
}

void cache_update::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln201_fu_138_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln202_fu_224_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln203_fu_316_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm = "XXXXX";
            break;
    }
}

}

