// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __cache_update_k_cakbM_H__
#define __cache_update_k_cakbM_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct cache_update_k_cakbM_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 20;
  static const unsigned AddressRange = 120;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(cache_update_k_cakbM_ram) {
        ram[0] = "0b00000000000101000010";
        ram[1] = "0b00000001010001111110";
        ram[2] = "0b11111101100100110111";
        ram[3] = "0b00000001000110101000";
        ram[4] = "0b11111111111101011110";
        ram[5] = "0b00000001000001100101";
        ram[6] = "0b11111010101010001101";
        ram[7] = "0b11111110000100011001";
        ram[8] = "0b11111110100010101010";
        ram[9] = "0b00000000001011010110";
        ram[10] = "0b11111111011101111100";
        ram[11] = "0b11111111101010100011";
        ram[12] = "0b00101001001001010110";
        ram[13] = "0b11010100011111110100";
        ram[14] = "0b00101000001110111010";
        ram[15] = "0b10111011101000110111";
        ram[16] = "0b11001011010011110101";
        ram[17] = "0b11010011011001001000";
        ram[18] = "0b11000101100100001101";
        ram[19] = "0b11111010001101100110";
        ram[20] = "0b11000111101100111110";
        ram[21] = "0b11011101000111011000";
        ram[22] = "0b00010000011110010010";
        ram[23] = "0b11100111000110010001";
        ram[24] = "0b00111100101101001101";
        ram[25] = "0b11100111010010000111";
        ram[26] = "0b11110010010010010101";
        ram[27] = "0b11010001111101010110";
        ram[28] = "0b11100001011111001101";
        ram[29] = "0b11100011001111100100";
        ram[30] = "0b11100010111000011101";
        ram[31] = "0b11101101000101100010";
        ram[32] = "0b00000100101000111111";
        ram[33] = "0b11111001011011011111";
        ram[34] = "0b00001110101110001000";
        ram[35] = "0b11100111111010000110";
        ram[36] = "0b00011000000001101001";
        ram[37] = "0b00001001010000111011";
        ram[38] = "0b00010010111110101001";
        ram[39] = "0b11111001101111001111";
        ram[40] = "0b11101111110111000110";
        ram[41] = "0b11110110100101111111";
        ram[42] = "0b11111100111000010011";
        ram[43] = "0b11110111010111010111";
        ram[44] = "0b11010001110000100111";
        ram[45] = "0b00010000001111101100";
        ram[46] = "0b00010011001000000100";
        ram[47] = "0b11101000010110101100";
        ram[48] = "0b11101011111101010010";
        ram[49] = "0b00011010000011010000";
        ram[50] = "0b11110011001000010001";
        ram[51] = "0b11101110101011010111";
        ram[52] = "0b00000010101100100100";
        ram[53] = "0b00001000110001100111";
        ram[54] = "0b11101000010001000110";
        ram[55] = "0b00011010100111001100";
        ram[56] = "0b00001100111010000110";
        ram[57] = "0b00000101110001100111";
        ram[58] = "0b00011011011110110000";
        ram[59] = "0b11110000011000111000";
        ram[60] = "0b00000010000001111001";
        ram[61] = "0b00000000010101011100";
        ram[62] = "0b00000000001111001000";
        ram[63] = "0b11111101110010101111";
        ram[64] = "0b11111010101111010000";
        ram[65] = "0b00000000111011010001";
        ram[66] = "0b11111111100000011110";
        ram[67] = "0b00000000010001101010";
        ram[68] = "0b11111110010011100010";
        ram[69] = "0b11111110000000100111";
        ram[70] = "0b00000011101011110101";
        ram[71] = "0b11111110100111101101";
        ram[72] = "0b11010110101101110011";
        ram[73] = "0b11111000101010001000";
        ram[74] = "0b00011111100000101010";
        ram[75] = "0b00010100100101111011";
        ram[76] = "0b11110100100101010001";
        ram[77] = "0b11101110010010101111";
        ram[78] = "0b00110110001001100100";
        ram[79] = "0b11110010111011010111";
        ram[80] = "0b00010000100011001101";
        ram[81] = "0b11110011111101101011";
        ram[82] = "0b11011100010101101111";
        ram[83] = "0b11110010100111101110";
        ram[84] = "0b11011010000100101110";
        ram[85] = "0b11100001110010101010";
        ram[86] = "0b01000110010100010101";
        ram[87] = "0b00100100111100001011";
        ram[88] = "0b00001010001100100010";
        ram[89] = "0b11001000001000111010";
        ram[90] = "0b00101001010101111110";
        ram[91] = "0b11100000100001000010";
        ram[92] = "0b00010011110101000001";
        ram[93] = "0b11110111000100101111";
        ram[94] = "0b11001100101101111110";
        ram[95] = "0b11010111000111111111";
        ram[96] = "0b00000111101110111010";
        ram[97] = "0b11010110110110010110";
        ram[98] = "0b00101101011110011010";
        ram[99] = "0b11111011000011010001";
        ram[100] = "0b11110100000000010011";
        ram[101] = "0b11101001110100001011";
        ram[102] = "0b00001100010100101011";
        ram[103] = "0b11101011111011001000";
        ram[104] = "0b11111011010101101000";
        ram[105] = "0b11101101101010011100";
        ram[106] = "0b11011101000111001111";
        ram[107] = "0b11101001011100111011";
        ram[108] = "0b00010101001000100100";
        ram[109] = "0b11101001100010000100";
        ram[110] = "0b00000011011111010110";
        ram[111] = "0b11101111001111111001";
        ram[112] = "0b11110001110100111001";
        ram[113] = "0b00010110011111110010";
        ram[114] = "0b00000101111111100100";
        ram[115] = "0b00001111011010101110";
        ram[116] = "0b11110000111110010100";
        ram[117] = "0b11101001001110000010";
        ram[118] = "0b00000000011100001001";
        ram[119] = "0b11101101011110101011";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(cache_update_k_cakbM) {


static const unsigned DataWidth = 20;
static const unsigned AddressRange = 120;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


cache_update_k_cakbM_ram* meminst;


SC_CTOR(cache_update_k_cakbM) {
meminst = new cache_update_k_cakbM_ram("cache_update_k_cakbM_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~cache_update_k_cakbM() {
    delete meminst;
}


};//endmodule
#endif
