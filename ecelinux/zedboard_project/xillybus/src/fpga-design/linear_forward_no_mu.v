// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module linear_forward_no_mu (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        p_read12,
        p_read13,
        p_read14,
        p_read15,
        output_0_V_address0,
        output_0_V_ce0,
        output_0_V_q0,
        output_0_V_address1,
        output_0_V_ce1,
        output_0_V_we1,
        output_0_V_d1,
        scales_0_V_read,
        packed_weights_0_address0,
        packed_weights_0_ce0,
        packed_weights_0_q0,
        packed_weights_1_address0,
        packed_weights_1_ce0,
        packed_weights_1_q0,
        packed_weights_2_address0,
        packed_weights_2_ce0,
        packed_weights_2_q0,
        packed_weights_3_address0,
        packed_weights_3_ce0,
        packed_weights_3_q0,
        w_scale_V
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state82 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] p_read;
input  [7:0] p_read1;
input  [7:0] p_read2;
input  [7:0] p_read3;
input  [7:0] p_read4;
input  [7:0] p_read5;
input  [7:0] p_read6;
input  [7:0] p_read7;
input  [7:0] p_read8;
input  [7:0] p_read9;
input  [7:0] p_read10;
input  [7:0] p_read11;
input  [7:0] p_read12;
input  [7:0] p_read13;
input  [7:0] p_read14;
input  [7:0] p_read15;
output  [3:0] output_0_V_address0;
output   output_0_V_ce0;
input  [39:0] output_0_V_q0;
output  [3:0] output_0_V_address1;
output   output_0_V_ce1;
output   output_0_V_we1;
output  [39:0] output_0_V_d1;
input  [39:0] scales_0_V_read;
output  [3:0] packed_weights_0_address0;
output   packed_weights_0_ce0;
input  [7:0] packed_weights_0_q0;
output  [3:0] packed_weights_1_address0;
output   packed_weights_1_ce0;
input  [7:0] packed_weights_1_q0;
output  [3:0] packed_weights_2_address0;
output   packed_weights_2_ce0;
input  [7:0] packed_weights_2_q0;
output  [3:0] packed_weights_3_address0;
output   packed_weights_3_ce0;
input  [7:0] packed_weights_3_q0;
input  [21:0] w_scale_V;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg output_0_V_ce0;
reg output_0_V_ce1;
reg output_0_V_we1;
reg packed_weights_0_ce0;
reg packed_weights_1_ce0;
reg packed_weights_2_ce0;
reg packed_weights_3_ce0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [4:0] j_0_0_reg_287;
wire  signed [71:0] sext_ln700_fu_312_p1;
reg  signed [71:0] sext_ln700_reg_1387;
wire   [7:0] sub_ln700_15_fu_316_p2;
reg   [7:0] sub_ln700_15_reg_1392;
wire   [7:0] sub_ln700_14_fu_322_p2;
reg   [7:0] sub_ln700_14_reg_1397;
wire   [7:0] sub_ln700_13_fu_328_p2;
reg   [7:0] sub_ln700_13_reg_1402;
wire   [7:0] sub_ln700_12_fu_334_p2;
reg   [7:0] sub_ln700_12_reg_1407;
wire   [7:0] sub_ln700_11_fu_340_p2;
reg   [7:0] sub_ln700_11_reg_1412;
wire   [7:0] sub_ln700_10_fu_346_p2;
reg   [7:0] sub_ln700_10_reg_1417;
wire   [7:0] sub_ln700_9_fu_352_p2;
reg   [7:0] sub_ln700_9_reg_1422;
wire   [7:0] sub_ln700_8_fu_358_p2;
reg   [7:0] sub_ln700_8_reg_1427;
wire   [7:0] sub_ln700_7_fu_364_p2;
reg   [7:0] sub_ln700_7_reg_1432;
wire   [7:0] sub_ln700_6_fu_370_p2;
reg   [7:0] sub_ln700_6_reg_1437;
wire   [7:0] sub_ln700_5_fu_376_p2;
reg   [7:0] sub_ln700_5_reg_1442;
wire   [7:0] sub_ln700_4_fu_382_p2;
reg   [7:0] sub_ln700_4_reg_1447;
wire   [7:0] sub_ln700_3_fu_388_p2;
reg   [7:0] sub_ln700_3_reg_1452;
wire   [7:0] sub_ln700_2_fu_394_p2;
reg   [7:0] sub_ln700_2_reg_1457;
wire   [7:0] sub_ln700_1_fu_400_p2;
reg   [7:0] sub_ln700_1_reg_1462;
wire   [7:0] sub_ln700_fu_406_p2;
reg   [7:0] sub_ln700_reg_1467;
wire   [0:0] icmp_ln157_fu_412_p2;
reg   [0:0] icmp_ln157_reg_1472;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
wire    ap_block_state15_pp0_stage0_iter13;
wire    ap_block_state16_pp0_stage0_iter14;
wire    ap_block_state17_pp0_stage0_iter15;
wire    ap_block_state18_pp0_stage0_iter16;
wire    ap_block_state19_pp0_stage0_iter17;
wire    ap_block_state20_pp0_stage0_iter18;
wire    ap_block_state21_pp0_stage0_iter19;
wire    ap_block_state22_pp0_stage0_iter20;
wire    ap_block_state23_pp0_stage0_iter21;
wire    ap_block_state24_pp0_stage0_iter22;
wire    ap_block_state25_pp0_stage0_iter23;
wire    ap_block_state26_pp0_stage0_iter24;
wire    ap_block_state27_pp0_stage0_iter25;
wire    ap_block_state28_pp0_stage0_iter26;
wire    ap_block_state29_pp0_stage0_iter27;
wire    ap_block_state30_pp0_stage0_iter28;
wire    ap_block_state31_pp0_stage0_iter29;
wire    ap_block_state32_pp0_stage0_iter30;
wire    ap_block_state33_pp0_stage0_iter31;
wire    ap_block_state34_pp0_stage0_iter32;
wire    ap_block_state35_pp0_stage0_iter33;
wire    ap_block_state36_pp0_stage0_iter34;
wire    ap_block_state37_pp0_stage0_iter35;
wire    ap_block_state38_pp0_stage0_iter36;
wire    ap_block_state39_pp0_stage0_iter37;
wire    ap_block_state40_pp0_stage0_iter38;
wire    ap_block_state41_pp0_stage0_iter39;
wire    ap_block_state42_pp0_stage0_iter40;
wire    ap_block_state43_pp0_stage0_iter41;
wire    ap_block_state44_pp0_stage0_iter42;
wire    ap_block_state45_pp0_stage0_iter43;
wire    ap_block_state46_pp0_stage0_iter44;
wire    ap_block_state47_pp0_stage0_iter45;
wire    ap_block_state48_pp0_stage0_iter46;
wire    ap_block_state49_pp0_stage0_iter47;
wire    ap_block_state50_pp0_stage0_iter48;
wire    ap_block_state51_pp0_stage0_iter49;
wire    ap_block_state52_pp0_stage0_iter50;
wire    ap_block_state53_pp0_stage0_iter51;
wire    ap_block_state54_pp0_stage0_iter52;
wire    ap_block_state55_pp0_stage0_iter53;
wire    ap_block_state56_pp0_stage0_iter54;
wire    ap_block_state57_pp0_stage0_iter55;
wire    ap_block_state58_pp0_stage0_iter56;
wire    ap_block_state59_pp0_stage0_iter57;
wire    ap_block_state60_pp0_stage0_iter58;
wire    ap_block_state61_pp0_stage0_iter59;
wire    ap_block_state62_pp0_stage0_iter60;
wire    ap_block_state63_pp0_stage0_iter61;
wire    ap_block_state64_pp0_stage0_iter62;
wire    ap_block_state65_pp0_stage0_iter63;
wire    ap_block_state66_pp0_stage0_iter64;
wire    ap_block_state67_pp0_stage0_iter65;
wire    ap_block_state68_pp0_stage0_iter66;
wire    ap_block_state69_pp0_stage0_iter67;
wire    ap_block_state70_pp0_stage0_iter68;
wire    ap_block_state71_pp0_stage0_iter69;
wire    ap_block_state72_pp0_stage0_iter70;
wire    ap_block_state73_pp0_stage0_iter71;
wire    ap_block_state74_pp0_stage0_iter72;
wire    ap_block_state75_pp0_stage0_iter73;
wire    ap_block_state76_pp0_stage0_iter74;
wire    ap_block_state77_pp0_stage0_iter75;
wire    ap_block_state78_pp0_stage0_iter76;
wire    ap_block_state79_pp0_stage0_iter77;
wire    ap_block_state80_pp0_stage0_iter78;
wire    ap_block_state81_pp0_stage0_iter79;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter1_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter2_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter3_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter4_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter5_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter6_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter7_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter8_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter9_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter10_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter11_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter12_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter13_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter14_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter15_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter16_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter17_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter18_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter19_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter20_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter21_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter22_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter23_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter24_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter25_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter26_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter27_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter28_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter29_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter30_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter31_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter32_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter33_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter34_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter35_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter36_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter37_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter38_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter39_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter40_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter41_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter42_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter43_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter44_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter45_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter46_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter47_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter48_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter49_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter50_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter51_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter52_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter53_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter54_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter55_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter56_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter57_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter58_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter59_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter60_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter61_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter62_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter63_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter64_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter65_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter66_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter67_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter68_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter69_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter70_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter71_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter72_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter73_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter74_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter75_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter76_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter77_reg;
reg   [0:0] icmp_ln157_reg_1472_pp0_iter78_reg;
wire   [4:0] add_ln157_fu_418_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] zext_ln159_fu_424_p1;
reg   [63:0] zext_ln159_reg_1481;
reg   [3:0] output_0_V_addr_reg_1502;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter2_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter3_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter4_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter5_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter6_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter7_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter8_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter9_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter10_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter11_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter12_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter13_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter14_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter15_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter16_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter17_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter18_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter19_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter20_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter21_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter22_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter23_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter24_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter25_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter26_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter27_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter28_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter29_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter30_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter31_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter32_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter33_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter34_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter35_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter36_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter37_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter38_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter39_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter40_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter41_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter42_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter43_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter44_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter45_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter46_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter47_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter48_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter49_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter50_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter51_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter52_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter53_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter54_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter55_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter56_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter57_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter58_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter59_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter60_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter61_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter62_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter63_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter64_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter65_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter66_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter67_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter68_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter69_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter70_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter71_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter72_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter73_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter74_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter75_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter76_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter77_reg;
reg   [3:0] output_0_V_addr_reg_1502_pp0_iter78_reg;
wire   [1:0] trunc_ln162_fu_431_p1;
reg   [1:0] trunc_ln162_reg_1508;
reg   [1:0] trunc_ln162_3_reg_1514;
wire   [0:0] icmp_ln164_2_fu_455_p2;
reg   [0:0] icmp_ln164_2_reg_1520;
wire   [0:0] icmp_ln165_2_fu_461_p2;
reg   [0:0] icmp_ln165_2_reg_1525;
reg   [1:0] trunc_ln_reg_1530;
wire   [1:0] trunc_ln162_6_fu_477_p1;
reg   [1:0] trunc_ln162_6_reg_1541;
reg   [1:0] trunc_ln162_1_reg_1547;
reg   [1:0] trunc_ln162_5_reg_1553;
reg   [1:0] trunc_ln164_2_reg_1559;
wire   [1:0] trunc_ln162_7_fu_511_p1;
reg   [1:0] trunc_ln162_7_reg_1565;
reg   [1:0] trunc_ln162_s_reg_1571;
reg   [1:0] trunc_ln162_10_reg_1577;
wire   [0:0] icmp_ln164_15_fu_545_p2;
reg   [0:0] icmp_ln164_15_reg_1583;
wire   [0:0] icmp_ln165_15_fu_551_p2;
reg   [0:0] icmp_ln165_15_reg_1588;
wire   [39:0] add_ln703_28_fu_1167_p2;
reg   [39:0] add_ln703_28_reg_1593;
wire   [24:0] add_ln703_29_fu_1173_p2;
reg   [24:0] add_ln703_29_reg_1598;
wire   [24:0] add_ln703_30_fu_1179_p2;
reg   [24:0] add_ln703_30_reg_1603;
wire   [25:0] add_ln703_35_fu_1205_p2;
reg   [25:0] add_ln703_35_reg_1608;
wire   [26:0] add_ln703_39_fu_1241_p2;
reg   [26:0] add_ln703_39_reg_1613;
wire   [39:0] add_ln703_41_fu_1284_p2;
reg   [39:0] add_ln703_41_reg_1618;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_enable_reg_pp0_iter50;
reg    ap_enable_reg_pp0_iter51;
reg    ap_enable_reg_pp0_iter52;
reg    ap_enable_reg_pp0_iter53;
reg    ap_enable_reg_pp0_iter54;
reg    ap_enable_reg_pp0_iter55;
reg    ap_enable_reg_pp0_iter56;
reg    ap_enable_reg_pp0_iter57;
reg    ap_enable_reg_pp0_iter58;
reg    ap_enable_reg_pp0_iter59;
reg    ap_enable_reg_pp0_iter60;
reg    ap_enable_reg_pp0_iter61;
reg    ap_enable_reg_pp0_iter62;
reg    ap_enable_reg_pp0_iter63;
reg    ap_enable_reg_pp0_iter64;
reg    ap_enable_reg_pp0_iter65;
reg    ap_enable_reg_pp0_iter66;
reg    ap_enable_reg_pp0_iter67;
reg    ap_enable_reg_pp0_iter68;
reg    ap_enable_reg_pp0_iter69;
reg    ap_enable_reg_pp0_iter70;
reg    ap_enable_reg_pp0_iter71;
reg    ap_enable_reg_pp0_iter72;
reg    ap_enable_reg_pp0_iter73;
reg    ap_enable_reg_pp0_iter74;
reg    ap_enable_reg_pp0_iter75;
reg    ap_enable_reg_pp0_iter76;
reg    ap_enable_reg_pp0_iter77;
reg    ap_enable_reg_pp0_iter78;
reg    ap_enable_reg_pp0_iter79;
wire    ap_block_pp0_stage0;
wire   [21:0] mul_ln1148_fu_306_p0;
wire  signed [39:0] mul_ln1148_fu_306_p1;
wire   [60:0] mul_ln1148_fu_306_p2;
wire   [1:0] trunc_ln162_4_fu_445_p4;
wire   [1:0] trunc_ln164_3_fu_535_p4;
wire   [0:0] icmp_ln165_fu_562_p2;
wire   [0:0] icmp_ln164_fu_557_p2;
wire   [7:0] select_ln165_fu_567_p3;
wire   [7:0] select_ln164_fu_574_p3;
wire   [23:0] shl_ln_fu_581_p3;
wire   [0:0] icmp_ln165_1_fu_598_p2;
wire   [0:0] icmp_ln164_1_fu_593_p2;
wire   [7:0] select_ln165_1_fu_603_p3;
wire   [7:0] select_ln164_1_fu_610_p3;
wire   [23:0] shl_ln703_1_fu_617_p3;
wire   [7:0] select_ln165_2_fu_629_p3;
wire   [7:0] select_ln164_2_fu_635_p3;
wire   [23:0] shl_ln703_2_fu_641_p3;
wire   [0:0] icmp_ln165_3_fu_658_p2;
wire   [0:0] icmp_ln164_3_fu_653_p2;
wire   [7:0] select_ln165_3_fu_663_p3;
wire   [7:0] select_ln164_3_fu_670_p3;
wire   [23:0] shl_ln703_3_fu_677_p3;
wire   [1:0] trunc_ln162_2_fu_689_p1;
wire   [0:0] icmp_ln165_4_fu_699_p2;
wire   [0:0] icmp_ln164_4_fu_693_p2;
wire   [7:0] select_ln165_4_fu_705_p3;
wire   [7:0] select_ln164_4_fu_712_p3;
wire   [23:0] shl_ln703_4_fu_719_p3;
wire   [1:0] trunc_ln162_8_fu_731_p4;
wire   [0:0] icmp_ln165_5_fu_747_p2;
wire   [0:0] icmp_ln164_5_fu_741_p2;
wire   [7:0] select_ln165_5_fu_753_p3;
wire   [7:0] select_ln164_5_fu_760_p3;
wire   [23:0] shl_ln703_5_fu_767_p3;
wire   [1:0] trunc_ln162_9_fu_779_p4;
wire   [0:0] icmp_ln165_6_fu_795_p2;
wire   [0:0] icmp_ln164_6_fu_789_p2;
wire   [7:0] select_ln165_6_fu_801_p3;
wire   [7:0] select_ln164_6_fu_808_p3;
wire   [23:0] shl_ln703_6_fu_815_p3;
wire   [1:0] trunc_ln164_1_fu_827_p4;
wire   [0:0] icmp_ln165_7_fu_843_p2;
wire   [0:0] icmp_ln164_7_fu_837_p2;
wire   [7:0] select_ln165_7_fu_849_p3;
wire   [7:0] select_ln164_7_fu_856_p3;
wire   [23:0] shl_ln703_7_fu_863_p3;
wire   [0:0] icmp_ln165_8_fu_880_p2;
wire   [0:0] icmp_ln164_8_fu_875_p2;
wire   [7:0] select_ln165_8_fu_885_p3;
wire   [7:0] select_ln164_8_fu_892_p3;
wire   [23:0] shl_ln703_8_fu_899_p3;
wire   [0:0] icmp_ln165_9_fu_916_p2;
wire   [0:0] icmp_ln164_9_fu_911_p2;
wire   [7:0] select_ln165_9_fu_921_p3;
wire   [7:0] select_ln164_9_fu_928_p3;
wire   [23:0] shl_ln703_9_fu_935_p3;
wire   [0:0] icmp_ln165_10_fu_952_p2;
wire   [0:0] icmp_ln164_10_fu_947_p2;
wire   [7:0] select_ln165_10_fu_957_p3;
wire   [7:0] select_ln164_10_fu_964_p3;
wire   [23:0] shl_ln703_s_fu_971_p3;
wire   [0:0] icmp_ln165_11_fu_988_p2;
wire   [0:0] icmp_ln164_11_fu_983_p2;
wire   [7:0] select_ln165_11_fu_993_p3;
wire   [7:0] select_ln164_11_fu_1000_p3;
wire   [23:0] shl_ln703_10_fu_1007_p3;
wire   [0:0] icmp_ln165_12_fu_1024_p2;
wire   [0:0] icmp_ln164_12_fu_1019_p2;
wire   [7:0] select_ln165_12_fu_1029_p3;
wire   [7:0] select_ln164_12_fu_1036_p3;
wire   [23:0] shl_ln703_11_fu_1043_p3;
wire   [0:0] icmp_ln165_13_fu_1060_p2;
wire   [0:0] icmp_ln164_13_fu_1055_p2;
wire   [7:0] select_ln165_13_fu_1065_p3;
wire   [7:0] select_ln164_13_fu_1072_p3;
wire   [23:0] shl_ln703_12_fu_1079_p3;
wire   [0:0] icmp_ln165_14_fu_1096_p2;
wire   [0:0] icmp_ln164_14_fu_1091_p2;
wire   [7:0] select_ln165_14_fu_1101_p3;
wire   [7:0] select_ln164_14_fu_1108_p3;
wire   [23:0] shl_ln703_13_fu_1115_p3;
wire   [7:0] select_ln165_15_fu_1127_p3;
wire   [7:0] select_ln164_15_fu_1133_p3;
wire   [23:0] shl_ln703_14_fu_1139_p3;
wire  signed [39:0] sext_ln703_fu_589_p1;
wire  signed [24:0] sext_ln703_2_fu_625_p1;
wire  signed [24:0] sext_ln703_3_fu_649_p1;
wire   [24:0] add_ln703_27_fu_1157_p2;
wire  signed [39:0] sext_ln703_17_fu_1163_p1;
wire   [39:0] add_ln703_fu_1151_p2;
wire  signed [24:0] sext_ln703_4_fu_685_p1;
wire  signed [24:0] sext_ln703_5_fu_727_p1;
wire  signed [24:0] sext_ln703_6_fu_775_p1;
wire  signed [24:0] sext_ln703_7_fu_823_p1;
wire  signed [24:0] sext_ln703_8_fu_871_p1;
wire  signed [24:0] sext_ln703_9_fu_907_p1;
wire   [24:0] add_ln703_33_fu_1185_p2;
wire  signed [24:0] sext_ln703_10_fu_943_p1;
wire  signed [24:0] sext_ln703_11_fu_979_p1;
wire   [24:0] add_ln703_34_fu_1195_p2;
wire  signed [25:0] sext_ln703_22_fu_1201_p1;
wire  signed [25:0] sext_ln703_21_fu_1191_p1;
wire  signed [24:0] sext_ln703_12_fu_1015_p1;
wire  signed [24:0] sext_ln703_13_fu_1051_p1;
wire   [24:0] add_ln703_36_fu_1211_p2;
wire  signed [24:0] sext_ln703_15_fu_1123_p1;
wire  signed [24:0] sext_ln703_16_fu_1147_p1;
wire   [24:0] add_ln703_37_fu_1221_p2;
wire  signed [25:0] sext_ln703_25_fu_1227_p1;
wire  signed [25:0] sext_ln703_14_fu_1087_p1;
wire   [25:0] add_ln703_38_fu_1231_p2;
wire  signed [26:0] sext_ln703_26_fu_1237_p1;
wire  signed [26:0] sext_ln703_24_fu_1217_p1;
wire  signed [25:0] sext_ln703_19_fu_1250_p1;
wire  signed [25:0] sext_ln703_18_fu_1247_p1;
wire   [25:0] add_ln703_31_fu_1253_p2;
wire  signed [39:0] sext_ln703_20_fu_1259_p1;
wire  signed [27:0] sext_ln703_27_fu_1271_p1;
wire  signed [27:0] sext_ln703_23_fu_1268_p1;
wire   [27:0] add_ln703_40_fu_1274_p2;
wire  signed [39:0] sext_ln703_28_fu_1280_p1;
wire   [39:0] add_ln703_32_fu_1263_p2;
wire   [71:0] grp_fu_1297_p0;
wire  signed [60:0] grp_fu_1297_p1;
wire   [39:0] grp_fu_1297_p2;
wire    ap_CS_fsm_state82;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [60:0] mul_ln1148_fu_306_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 ap_enable_reg_pp0_iter50 = 1'b0;
#0 ap_enable_reg_pp0_iter51 = 1'b0;
#0 ap_enable_reg_pp0_iter52 = 1'b0;
#0 ap_enable_reg_pp0_iter53 = 1'b0;
#0 ap_enable_reg_pp0_iter54 = 1'b0;
#0 ap_enable_reg_pp0_iter55 = 1'b0;
#0 ap_enable_reg_pp0_iter56 = 1'b0;
#0 ap_enable_reg_pp0_iter57 = 1'b0;
#0 ap_enable_reg_pp0_iter58 = 1'b0;
#0 ap_enable_reg_pp0_iter59 = 1'b0;
#0 ap_enable_reg_pp0_iter60 = 1'b0;
#0 ap_enable_reg_pp0_iter61 = 1'b0;
#0 ap_enable_reg_pp0_iter62 = 1'b0;
#0 ap_enable_reg_pp0_iter63 = 1'b0;
#0 ap_enable_reg_pp0_iter64 = 1'b0;
#0 ap_enable_reg_pp0_iter65 = 1'b0;
#0 ap_enable_reg_pp0_iter66 = 1'b0;
#0 ap_enable_reg_pp0_iter67 = 1'b0;
#0 ap_enable_reg_pp0_iter68 = 1'b0;
#0 ap_enable_reg_pp0_iter69 = 1'b0;
#0 ap_enable_reg_pp0_iter70 = 1'b0;
#0 ap_enable_reg_pp0_iter71 = 1'b0;
#0 ap_enable_reg_pp0_iter72 = 1'b0;
#0 ap_enable_reg_pp0_iter73 = 1'b0;
#0 ap_enable_reg_pp0_iter74 = 1'b0;
#0 ap_enable_reg_pp0_iter75 = 1'b0;
#0 ap_enable_reg_pp0_iter76 = 1'b0;
#0 ap_enable_reg_pp0_iter77 = 1'b0;
#0 ap_enable_reg_pp0_iter78 = 1'b0;
#0 ap_enable_reg_pp0_iter79 = 1'b0;
end

dut_sdiv_72ns_61seOg #(
    .ID( 1 ),
    .NUM_STAGE( 76 ),
    .din0_WIDTH( 72 ),
    .din1_WIDTH( 61 ),
    .dout_WIDTH( 40 ))
dut_sdiv_72ns_61seOg_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1297_p0),
    .din1(grp_fu_1297_p1),
    .ce(1'b1),
    .dout(grp_fu_1297_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter52 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter53 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter54 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter54 <= ap_enable_reg_pp0_iter53;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter55 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter55 <= ap_enable_reg_pp0_iter54;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter56 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter56 <= ap_enable_reg_pp0_iter55;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter57 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter57 <= ap_enable_reg_pp0_iter56;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter58 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter58 <= ap_enable_reg_pp0_iter57;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter59 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter59 <= ap_enable_reg_pp0_iter58;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter60 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter60 <= ap_enable_reg_pp0_iter59;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter61 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter61 <= ap_enable_reg_pp0_iter60;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter62 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter62 <= ap_enable_reg_pp0_iter61;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter63 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter63 <= ap_enable_reg_pp0_iter62;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter64 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter64 <= ap_enable_reg_pp0_iter63;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter65 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter65 <= ap_enable_reg_pp0_iter64;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter66 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter66 <= ap_enable_reg_pp0_iter65;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter67 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter67 <= ap_enable_reg_pp0_iter66;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter68 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter68 <= ap_enable_reg_pp0_iter67;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter69 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter69 <= ap_enable_reg_pp0_iter68;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter70 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter70 <= ap_enable_reg_pp0_iter69;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter71 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter71 <= ap_enable_reg_pp0_iter70;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter72 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter72 <= ap_enable_reg_pp0_iter71;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter73 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter73 <= ap_enable_reg_pp0_iter72;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter74 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter74 <= ap_enable_reg_pp0_iter73;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter75 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter75 <= ap_enable_reg_pp0_iter74;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter76 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter76 <= ap_enable_reg_pp0_iter75;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter77 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter77 <= ap_enable_reg_pp0_iter76;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter78 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter78 <= ap_enable_reg_pp0_iter77;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter79 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter79 <= ap_enable_reg_pp0_iter78;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter79 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln157_fu_412_p2 == 1'd0))) begin
        j_0_0_reg_287 <= add_ln157_fu_418_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        j_0_0_reg_287 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln157_reg_1472_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln703_28_reg_1593 <= add_ln703_28_fu_1167_p2;
        add_ln703_29_reg_1598[24 : 16] <= add_ln703_29_fu_1173_p2[24 : 16];
        add_ln703_30_reg_1603[24 : 16] <= add_ln703_30_fu_1179_p2[24 : 16];
        add_ln703_35_reg_1608[25 : 16] <= add_ln703_35_fu_1205_p2[25 : 16];
        add_ln703_39_reg_1613[26 : 16] <= add_ln703_39_fu_1241_p2[26 : 16];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln157_reg_1472_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln703_41_reg_1618 <= add_ln703_41_fu_1284_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln157_reg_1472 <= icmp_ln157_fu_412_p2;
        icmp_ln157_reg_1472_pp0_iter1_reg <= icmp_ln157_reg_1472;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln157_reg_1472_pp0_iter10_reg <= icmp_ln157_reg_1472_pp0_iter9_reg;
        icmp_ln157_reg_1472_pp0_iter11_reg <= icmp_ln157_reg_1472_pp0_iter10_reg;
        icmp_ln157_reg_1472_pp0_iter12_reg <= icmp_ln157_reg_1472_pp0_iter11_reg;
        icmp_ln157_reg_1472_pp0_iter13_reg <= icmp_ln157_reg_1472_pp0_iter12_reg;
        icmp_ln157_reg_1472_pp0_iter14_reg <= icmp_ln157_reg_1472_pp0_iter13_reg;
        icmp_ln157_reg_1472_pp0_iter15_reg <= icmp_ln157_reg_1472_pp0_iter14_reg;
        icmp_ln157_reg_1472_pp0_iter16_reg <= icmp_ln157_reg_1472_pp0_iter15_reg;
        icmp_ln157_reg_1472_pp0_iter17_reg <= icmp_ln157_reg_1472_pp0_iter16_reg;
        icmp_ln157_reg_1472_pp0_iter18_reg <= icmp_ln157_reg_1472_pp0_iter17_reg;
        icmp_ln157_reg_1472_pp0_iter19_reg <= icmp_ln157_reg_1472_pp0_iter18_reg;
        icmp_ln157_reg_1472_pp0_iter20_reg <= icmp_ln157_reg_1472_pp0_iter19_reg;
        icmp_ln157_reg_1472_pp0_iter21_reg <= icmp_ln157_reg_1472_pp0_iter20_reg;
        icmp_ln157_reg_1472_pp0_iter22_reg <= icmp_ln157_reg_1472_pp0_iter21_reg;
        icmp_ln157_reg_1472_pp0_iter23_reg <= icmp_ln157_reg_1472_pp0_iter22_reg;
        icmp_ln157_reg_1472_pp0_iter24_reg <= icmp_ln157_reg_1472_pp0_iter23_reg;
        icmp_ln157_reg_1472_pp0_iter25_reg <= icmp_ln157_reg_1472_pp0_iter24_reg;
        icmp_ln157_reg_1472_pp0_iter26_reg <= icmp_ln157_reg_1472_pp0_iter25_reg;
        icmp_ln157_reg_1472_pp0_iter27_reg <= icmp_ln157_reg_1472_pp0_iter26_reg;
        icmp_ln157_reg_1472_pp0_iter28_reg <= icmp_ln157_reg_1472_pp0_iter27_reg;
        icmp_ln157_reg_1472_pp0_iter29_reg <= icmp_ln157_reg_1472_pp0_iter28_reg;
        icmp_ln157_reg_1472_pp0_iter2_reg <= icmp_ln157_reg_1472_pp0_iter1_reg;
        icmp_ln157_reg_1472_pp0_iter30_reg <= icmp_ln157_reg_1472_pp0_iter29_reg;
        icmp_ln157_reg_1472_pp0_iter31_reg <= icmp_ln157_reg_1472_pp0_iter30_reg;
        icmp_ln157_reg_1472_pp0_iter32_reg <= icmp_ln157_reg_1472_pp0_iter31_reg;
        icmp_ln157_reg_1472_pp0_iter33_reg <= icmp_ln157_reg_1472_pp0_iter32_reg;
        icmp_ln157_reg_1472_pp0_iter34_reg <= icmp_ln157_reg_1472_pp0_iter33_reg;
        icmp_ln157_reg_1472_pp0_iter35_reg <= icmp_ln157_reg_1472_pp0_iter34_reg;
        icmp_ln157_reg_1472_pp0_iter36_reg <= icmp_ln157_reg_1472_pp0_iter35_reg;
        icmp_ln157_reg_1472_pp0_iter37_reg <= icmp_ln157_reg_1472_pp0_iter36_reg;
        icmp_ln157_reg_1472_pp0_iter38_reg <= icmp_ln157_reg_1472_pp0_iter37_reg;
        icmp_ln157_reg_1472_pp0_iter39_reg <= icmp_ln157_reg_1472_pp0_iter38_reg;
        icmp_ln157_reg_1472_pp0_iter3_reg <= icmp_ln157_reg_1472_pp0_iter2_reg;
        icmp_ln157_reg_1472_pp0_iter40_reg <= icmp_ln157_reg_1472_pp0_iter39_reg;
        icmp_ln157_reg_1472_pp0_iter41_reg <= icmp_ln157_reg_1472_pp0_iter40_reg;
        icmp_ln157_reg_1472_pp0_iter42_reg <= icmp_ln157_reg_1472_pp0_iter41_reg;
        icmp_ln157_reg_1472_pp0_iter43_reg <= icmp_ln157_reg_1472_pp0_iter42_reg;
        icmp_ln157_reg_1472_pp0_iter44_reg <= icmp_ln157_reg_1472_pp0_iter43_reg;
        icmp_ln157_reg_1472_pp0_iter45_reg <= icmp_ln157_reg_1472_pp0_iter44_reg;
        icmp_ln157_reg_1472_pp0_iter46_reg <= icmp_ln157_reg_1472_pp0_iter45_reg;
        icmp_ln157_reg_1472_pp0_iter47_reg <= icmp_ln157_reg_1472_pp0_iter46_reg;
        icmp_ln157_reg_1472_pp0_iter48_reg <= icmp_ln157_reg_1472_pp0_iter47_reg;
        icmp_ln157_reg_1472_pp0_iter49_reg <= icmp_ln157_reg_1472_pp0_iter48_reg;
        icmp_ln157_reg_1472_pp0_iter4_reg <= icmp_ln157_reg_1472_pp0_iter3_reg;
        icmp_ln157_reg_1472_pp0_iter50_reg <= icmp_ln157_reg_1472_pp0_iter49_reg;
        icmp_ln157_reg_1472_pp0_iter51_reg <= icmp_ln157_reg_1472_pp0_iter50_reg;
        icmp_ln157_reg_1472_pp0_iter52_reg <= icmp_ln157_reg_1472_pp0_iter51_reg;
        icmp_ln157_reg_1472_pp0_iter53_reg <= icmp_ln157_reg_1472_pp0_iter52_reg;
        icmp_ln157_reg_1472_pp0_iter54_reg <= icmp_ln157_reg_1472_pp0_iter53_reg;
        icmp_ln157_reg_1472_pp0_iter55_reg <= icmp_ln157_reg_1472_pp0_iter54_reg;
        icmp_ln157_reg_1472_pp0_iter56_reg <= icmp_ln157_reg_1472_pp0_iter55_reg;
        icmp_ln157_reg_1472_pp0_iter57_reg <= icmp_ln157_reg_1472_pp0_iter56_reg;
        icmp_ln157_reg_1472_pp0_iter58_reg <= icmp_ln157_reg_1472_pp0_iter57_reg;
        icmp_ln157_reg_1472_pp0_iter59_reg <= icmp_ln157_reg_1472_pp0_iter58_reg;
        icmp_ln157_reg_1472_pp0_iter5_reg <= icmp_ln157_reg_1472_pp0_iter4_reg;
        icmp_ln157_reg_1472_pp0_iter60_reg <= icmp_ln157_reg_1472_pp0_iter59_reg;
        icmp_ln157_reg_1472_pp0_iter61_reg <= icmp_ln157_reg_1472_pp0_iter60_reg;
        icmp_ln157_reg_1472_pp0_iter62_reg <= icmp_ln157_reg_1472_pp0_iter61_reg;
        icmp_ln157_reg_1472_pp0_iter63_reg <= icmp_ln157_reg_1472_pp0_iter62_reg;
        icmp_ln157_reg_1472_pp0_iter64_reg <= icmp_ln157_reg_1472_pp0_iter63_reg;
        icmp_ln157_reg_1472_pp0_iter65_reg <= icmp_ln157_reg_1472_pp0_iter64_reg;
        icmp_ln157_reg_1472_pp0_iter66_reg <= icmp_ln157_reg_1472_pp0_iter65_reg;
        icmp_ln157_reg_1472_pp0_iter67_reg <= icmp_ln157_reg_1472_pp0_iter66_reg;
        icmp_ln157_reg_1472_pp0_iter68_reg <= icmp_ln157_reg_1472_pp0_iter67_reg;
        icmp_ln157_reg_1472_pp0_iter69_reg <= icmp_ln157_reg_1472_pp0_iter68_reg;
        icmp_ln157_reg_1472_pp0_iter6_reg <= icmp_ln157_reg_1472_pp0_iter5_reg;
        icmp_ln157_reg_1472_pp0_iter70_reg <= icmp_ln157_reg_1472_pp0_iter69_reg;
        icmp_ln157_reg_1472_pp0_iter71_reg <= icmp_ln157_reg_1472_pp0_iter70_reg;
        icmp_ln157_reg_1472_pp0_iter72_reg <= icmp_ln157_reg_1472_pp0_iter71_reg;
        icmp_ln157_reg_1472_pp0_iter73_reg <= icmp_ln157_reg_1472_pp0_iter72_reg;
        icmp_ln157_reg_1472_pp0_iter74_reg <= icmp_ln157_reg_1472_pp0_iter73_reg;
        icmp_ln157_reg_1472_pp0_iter75_reg <= icmp_ln157_reg_1472_pp0_iter74_reg;
        icmp_ln157_reg_1472_pp0_iter76_reg <= icmp_ln157_reg_1472_pp0_iter75_reg;
        icmp_ln157_reg_1472_pp0_iter77_reg <= icmp_ln157_reg_1472_pp0_iter76_reg;
        icmp_ln157_reg_1472_pp0_iter78_reg <= icmp_ln157_reg_1472_pp0_iter77_reg;
        icmp_ln157_reg_1472_pp0_iter7_reg <= icmp_ln157_reg_1472_pp0_iter6_reg;
        icmp_ln157_reg_1472_pp0_iter8_reg <= icmp_ln157_reg_1472_pp0_iter7_reg;
        icmp_ln157_reg_1472_pp0_iter9_reg <= icmp_ln157_reg_1472_pp0_iter8_reg;
        output_0_V_addr_reg_1502_pp0_iter10_reg <= output_0_V_addr_reg_1502_pp0_iter9_reg;
        output_0_V_addr_reg_1502_pp0_iter11_reg <= output_0_V_addr_reg_1502_pp0_iter10_reg;
        output_0_V_addr_reg_1502_pp0_iter12_reg <= output_0_V_addr_reg_1502_pp0_iter11_reg;
        output_0_V_addr_reg_1502_pp0_iter13_reg <= output_0_V_addr_reg_1502_pp0_iter12_reg;
        output_0_V_addr_reg_1502_pp0_iter14_reg <= output_0_V_addr_reg_1502_pp0_iter13_reg;
        output_0_V_addr_reg_1502_pp0_iter15_reg <= output_0_V_addr_reg_1502_pp0_iter14_reg;
        output_0_V_addr_reg_1502_pp0_iter16_reg <= output_0_V_addr_reg_1502_pp0_iter15_reg;
        output_0_V_addr_reg_1502_pp0_iter17_reg <= output_0_V_addr_reg_1502_pp0_iter16_reg;
        output_0_V_addr_reg_1502_pp0_iter18_reg <= output_0_V_addr_reg_1502_pp0_iter17_reg;
        output_0_V_addr_reg_1502_pp0_iter19_reg <= output_0_V_addr_reg_1502_pp0_iter18_reg;
        output_0_V_addr_reg_1502_pp0_iter20_reg <= output_0_V_addr_reg_1502_pp0_iter19_reg;
        output_0_V_addr_reg_1502_pp0_iter21_reg <= output_0_V_addr_reg_1502_pp0_iter20_reg;
        output_0_V_addr_reg_1502_pp0_iter22_reg <= output_0_V_addr_reg_1502_pp0_iter21_reg;
        output_0_V_addr_reg_1502_pp0_iter23_reg <= output_0_V_addr_reg_1502_pp0_iter22_reg;
        output_0_V_addr_reg_1502_pp0_iter24_reg <= output_0_V_addr_reg_1502_pp0_iter23_reg;
        output_0_V_addr_reg_1502_pp0_iter25_reg <= output_0_V_addr_reg_1502_pp0_iter24_reg;
        output_0_V_addr_reg_1502_pp0_iter26_reg <= output_0_V_addr_reg_1502_pp0_iter25_reg;
        output_0_V_addr_reg_1502_pp0_iter27_reg <= output_0_V_addr_reg_1502_pp0_iter26_reg;
        output_0_V_addr_reg_1502_pp0_iter28_reg <= output_0_V_addr_reg_1502_pp0_iter27_reg;
        output_0_V_addr_reg_1502_pp0_iter29_reg <= output_0_V_addr_reg_1502_pp0_iter28_reg;
        output_0_V_addr_reg_1502_pp0_iter2_reg <= output_0_V_addr_reg_1502;
        output_0_V_addr_reg_1502_pp0_iter30_reg <= output_0_V_addr_reg_1502_pp0_iter29_reg;
        output_0_V_addr_reg_1502_pp0_iter31_reg <= output_0_V_addr_reg_1502_pp0_iter30_reg;
        output_0_V_addr_reg_1502_pp0_iter32_reg <= output_0_V_addr_reg_1502_pp0_iter31_reg;
        output_0_V_addr_reg_1502_pp0_iter33_reg <= output_0_V_addr_reg_1502_pp0_iter32_reg;
        output_0_V_addr_reg_1502_pp0_iter34_reg <= output_0_V_addr_reg_1502_pp0_iter33_reg;
        output_0_V_addr_reg_1502_pp0_iter35_reg <= output_0_V_addr_reg_1502_pp0_iter34_reg;
        output_0_V_addr_reg_1502_pp0_iter36_reg <= output_0_V_addr_reg_1502_pp0_iter35_reg;
        output_0_V_addr_reg_1502_pp0_iter37_reg <= output_0_V_addr_reg_1502_pp0_iter36_reg;
        output_0_V_addr_reg_1502_pp0_iter38_reg <= output_0_V_addr_reg_1502_pp0_iter37_reg;
        output_0_V_addr_reg_1502_pp0_iter39_reg <= output_0_V_addr_reg_1502_pp0_iter38_reg;
        output_0_V_addr_reg_1502_pp0_iter3_reg <= output_0_V_addr_reg_1502_pp0_iter2_reg;
        output_0_V_addr_reg_1502_pp0_iter40_reg <= output_0_V_addr_reg_1502_pp0_iter39_reg;
        output_0_V_addr_reg_1502_pp0_iter41_reg <= output_0_V_addr_reg_1502_pp0_iter40_reg;
        output_0_V_addr_reg_1502_pp0_iter42_reg <= output_0_V_addr_reg_1502_pp0_iter41_reg;
        output_0_V_addr_reg_1502_pp0_iter43_reg <= output_0_V_addr_reg_1502_pp0_iter42_reg;
        output_0_V_addr_reg_1502_pp0_iter44_reg <= output_0_V_addr_reg_1502_pp0_iter43_reg;
        output_0_V_addr_reg_1502_pp0_iter45_reg <= output_0_V_addr_reg_1502_pp0_iter44_reg;
        output_0_V_addr_reg_1502_pp0_iter46_reg <= output_0_V_addr_reg_1502_pp0_iter45_reg;
        output_0_V_addr_reg_1502_pp0_iter47_reg <= output_0_V_addr_reg_1502_pp0_iter46_reg;
        output_0_V_addr_reg_1502_pp0_iter48_reg <= output_0_V_addr_reg_1502_pp0_iter47_reg;
        output_0_V_addr_reg_1502_pp0_iter49_reg <= output_0_V_addr_reg_1502_pp0_iter48_reg;
        output_0_V_addr_reg_1502_pp0_iter4_reg <= output_0_V_addr_reg_1502_pp0_iter3_reg;
        output_0_V_addr_reg_1502_pp0_iter50_reg <= output_0_V_addr_reg_1502_pp0_iter49_reg;
        output_0_V_addr_reg_1502_pp0_iter51_reg <= output_0_V_addr_reg_1502_pp0_iter50_reg;
        output_0_V_addr_reg_1502_pp0_iter52_reg <= output_0_V_addr_reg_1502_pp0_iter51_reg;
        output_0_V_addr_reg_1502_pp0_iter53_reg <= output_0_V_addr_reg_1502_pp0_iter52_reg;
        output_0_V_addr_reg_1502_pp0_iter54_reg <= output_0_V_addr_reg_1502_pp0_iter53_reg;
        output_0_V_addr_reg_1502_pp0_iter55_reg <= output_0_V_addr_reg_1502_pp0_iter54_reg;
        output_0_V_addr_reg_1502_pp0_iter56_reg <= output_0_V_addr_reg_1502_pp0_iter55_reg;
        output_0_V_addr_reg_1502_pp0_iter57_reg <= output_0_V_addr_reg_1502_pp0_iter56_reg;
        output_0_V_addr_reg_1502_pp0_iter58_reg <= output_0_V_addr_reg_1502_pp0_iter57_reg;
        output_0_V_addr_reg_1502_pp0_iter59_reg <= output_0_V_addr_reg_1502_pp0_iter58_reg;
        output_0_V_addr_reg_1502_pp0_iter5_reg <= output_0_V_addr_reg_1502_pp0_iter4_reg;
        output_0_V_addr_reg_1502_pp0_iter60_reg <= output_0_V_addr_reg_1502_pp0_iter59_reg;
        output_0_V_addr_reg_1502_pp0_iter61_reg <= output_0_V_addr_reg_1502_pp0_iter60_reg;
        output_0_V_addr_reg_1502_pp0_iter62_reg <= output_0_V_addr_reg_1502_pp0_iter61_reg;
        output_0_V_addr_reg_1502_pp0_iter63_reg <= output_0_V_addr_reg_1502_pp0_iter62_reg;
        output_0_V_addr_reg_1502_pp0_iter64_reg <= output_0_V_addr_reg_1502_pp0_iter63_reg;
        output_0_V_addr_reg_1502_pp0_iter65_reg <= output_0_V_addr_reg_1502_pp0_iter64_reg;
        output_0_V_addr_reg_1502_pp0_iter66_reg <= output_0_V_addr_reg_1502_pp0_iter65_reg;
        output_0_V_addr_reg_1502_pp0_iter67_reg <= output_0_V_addr_reg_1502_pp0_iter66_reg;
        output_0_V_addr_reg_1502_pp0_iter68_reg <= output_0_V_addr_reg_1502_pp0_iter67_reg;
        output_0_V_addr_reg_1502_pp0_iter69_reg <= output_0_V_addr_reg_1502_pp0_iter68_reg;
        output_0_V_addr_reg_1502_pp0_iter6_reg <= output_0_V_addr_reg_1502_pp0_iter5_reg;
        output_0_V_addr_reg_1502_pp0_iter70_reg <= output_0_V_addr_reg_1502_pp0_iter69_reg;
        output_0_V_addr_reg_1502_pp0_iter71_reg <= output_0_V_addr_reg_1502_pp0_iter70_reg;
        output_0_V_addr_reg_1502_pp0_iter72_reg <= output_0_V_addr_reg_1502_pp0_iter71_reg;
        output_0_V_addr_reg_1502_pp0_iter73_reg <= output_0_V_addr_reg_1502_pp0_iter72_reg;
        output_0_V_addr_reg_1502_pp0_iter74_reg <= output_0_V_addr_reg_1502_pp0_iter73_reg;
        output_0_V_addr_reg_1502_pp0_iter75_reg <= output_0_V_addr_reg_1502_pp0_iter74_reg;
        output_0_V_addr_reg_1502_pp0_iter76_reg <= output_0_V_addr_reg_1502_pp0_iter75_reg;
        output_0_V_addr_reg_1502_pp0_iter77_reg <= output_0_V_addr_reg_1502_pp0_iter76_reg;
        output_0_V_addr_reg_1502_pp0_iter78_reg <= output_0_V_addr_reg_1502_pp0_iter77_reg;
        output_0_V_addr_reg_1502_pp0_iter7_reg <= output_0_V_addr_reg_1502_pp0_iter6_reg;
        output_0_V_addr_reg_1502_pp0_iter8_reg <= output_0_V_addr_reg_1502_pp0_iter7_reg;
        output_0_V_addr_reg_1502_pp0_iter9_reg <= output_0_V_addr_reg_1502_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln157_reg_1472 == 1'd0))) begin
        icmp_ln164_15_reg_1583 <= icmp_ln164_15_fu_545_p2;
        icmp_ln164_2_reg_1520 <= icmp_ln164_2_fu_455_p2;
        icmp_ln165_15_reg_1588 <= icmp_ln165_15_fu_551_p2;
        icmp_ln165_2_reg_1525 <= icmp_ln165_2_fu_461_p2;
        output_0_V_addr_reg_1502 <= zext_ln159_reg_1481;
        trunc_ln162_10_reg_1577 <= {{packed_weights_3_q0[5:4]}};
        trunc_ln162_1_reg_1547 <= {{packed_weights_2_q0[3:2]}};
        trunc_ln162_3_reg_1514 <= {{packed_weights_0_q0[3:2]}};
        trunc_ln162_5_reg_1553 <= {{packed_weights_2_q0[5:4]}};
        trunc_ln162_6_reg_1541 <= trunc_ln162_6_fu_477_p1;
        trunc_ln162_7_reg_1565 <= trunc_ln162_7_fu_511_p1;
        trunc_ln162_reg_1508 <= trunc_ln162_fu_431_p1;
        trunc_ln162_s_reg_1571 <= {{packed_weights_3_q0[3:2]}};
        trunc_ln164_2_reg_1559 <= {{packed_weights_2_q0[7:6]}};
        trunc_ln_reg_1530 <= {{packed_weights_0_q0[7:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        sext_ln700_reg_1387 <= sext_ln700_fu_312_p1;
        sub_ln700_10_reg_1417 <= sub_ln700_10_fu_346_p2;
        sub_ln700_11_reg_1412 <= sub_ln700_11_fu_340_p2;
        sub_ln700_12_reg_1407 <= sub_ln700_12_fu_334_p2;
        sub_ln700_13_reg_1402 <= sub_ln700_13_fu_328_p2;
        sub_ln700_14_reg_1397 <= sub_ln700_14_fu_322_p2;
        sub_ln700_15_reg_1392 <= sub_ln700_15_fu_316_p2;
        sub_ln700_1_reg_1462 <= sub_ln700_1_fu_400_p2;
        sub_ln700_2_reg_1457 <= sub_ln700_2_fu_394_p2;
        sub_ln700_3_reg_1452 <= sub_ln700_3_fu_388_p2;
        sub_ln700_4_reg_1447 <= sub_ln700_4_fu_382_p2;
        sub_ln700_5_reg_1442 <= sub_ln700_5_fu_376_p2;
        sub_ln700_6_reg_1437 <= sub_ln700_6_fu_370_p2;
        sub_ln700_7_reg_1432 <= sub_ln700_7_fu_364_p2;
        sub_ln700_8_reg_1427 <= sub_ln700_8_fu_358_p2;
        sub_ln700_9_reg_1422 <= sub_ln700_9_fu_352_p2;
        sub_ln700_reg_1467 <= sub_ln700_fu_406_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln157_fu_412_p2 == 1'd0))) begin
        zext_ln159_reg_1481[4 : 0] <= zext_ln159_fu_424_p1[4 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln157_fu_412_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state82) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter79 == 1'b0) & (ap_enable_reg_pp0_iter78 == 1'b0) & (ap_enable_reg_pp0_iter77 == 1'b0) & (ap_enable_reg_pp0_iter76 == 1'b0) & (ap_enable_reg_pp0_iter75 == 1'b0) & (ap_enable_reg_pp0_iter74 == 1'b0) & (ap_enable_reg_pp0_iter73 == 1'b0) & (ap_enable_reg_pp0_iter72 == 1'b0) & (ap_enable_reg_pp0_iter71 == 1'b0) & (ap_enable_reg_pp0_iter70 == 1'b0) & (ap_enable_reg_pp0_iter69 == 1'b0) & (ap_enable_reg_pp0_iter68 == 1'b0) & (ap_enable_reg_pp0_iter67 == 1'b0) & (ap_enable_reg_pp0_iter66 == 1'b0) & (ap_enable_reg_pp0_iter65 == 1'b0) & (ap_enable_reg_pp0_iter64 == 1'b0) & (ap_enable_reg_pp0_iter63 == 1'b0) & (ap_enable_reg_pp0_iter62 == 1'b0) & (ap_enable_reg_pp0_iter61 == 1'b0) & (ap_enable_reg_pp0_iter60 == 1'b0) & (ap_enable_reg_pp0_iter59 == 1'b0) & (ap_enable_reg_pp0_iter58 == 1'b0) & (ap_enable_reg_pp0_iter57 == 1'b0) & (ap_enable_reg_pp0_iter56 == 1'b0) & (ap_enable_reg_pp0_iter55 == 1'b0) & (ap_enable_reg_pp0_iter54 == 1'b0) & (ap_enable_reg_pp0_iter53 == 1'b0) & (ap_enable_reg_pp0_iter52 == 1'b0) & (ap_enable_reg_pp0_iter51 == 1'b0) & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        output_0_V_ce0 = 1'b1;
    end else begin
        output_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter79 == 1'b1))) begin
        output_0_V_ce1 = 1'b1;
    end else begin
        output_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln157_reg_1472_pp0_iter78_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter79 == 1'b1))) begin
        output_0_V_we1 = 1'b1;
    end else begin
        output_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        packed_weights_0_ce0 = 1'b1;
    end else begin
        packed_weights_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        packed_weights_1_ce0 = 1'b1;
    end else begin
        packed_weights_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        packed_weights_2_ce0 = 1'b1;
    end else begin
        packed_weights_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        packed_weights_3_ce0 = 1'b1;
    end else begin
        packed_weights_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln157_fu_412_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter78 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter79 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter78 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter79 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln157_fu_412_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state82;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln157_fu_418_p2 = (j_0_0_reg_287 + 5'd1);

assign add_ln703_27_fu_1157_p2 = ($signed(sext_ln703_2_fu_625_p1) + $signed(sext_ln703_3_fu_649_p1));

assign add_ln703_28_fu_1167_p2 = ($signed(sext_ln703_17_fu_1163_p1) + $signed(add_ln703_fu_1151_p2));

assign add_ln703_29_fu_1173_p2 = ($signed(sext_ln703_4_fu_685_p1) + $signed(sext_ln703_5_fu_727_p1));

assign add_ln703_30_fu_1179_p2 = ($signed(sext_ln703_6_fu_775_p1) + $signed(sext_ln703_7_fu_823_p1));

assign add_ln703_31_fu_1253_p2 = ($signed(sext_ln703_19_fu_1250_p1) + $signed(sext_ln703_18_fu_1247_p1));

assign add_ln703_32_fu_1263_p2 = ($signed(sext_ln703_20_fu_1259_p1) + $signed(add_ln703_28_reg_1593));

assign add_ln703_33_fu_1185_p2 = ($signed(sext_ln703_8_fu_871_p1) + $signed(sext_ln703_9_fu_907_p1));

assign add_ln703_34_fu_1195_p2 = ($signed(sext_ln703_10_fu_943_p1) + $signed(sext_ln703_11_fu_979_p1));

assign add_ln703_35_fu_1205_p2 = ($signed(sext_ln703_22_fu_1201_p1) + $signed(sext_ln703_21_fu_1191_p1));

assign add_ln703_36_fu_1211_p2 = ($signed(sext_ln703_12_fu_1015_p1) + $signed(sext_ln703_13_fu_1051_p1));

assign add_ln703_37_fu_1221_p2 = ($signed(sext_ln703_15_fu_1123_p1) + $signed(sext_ln703_16_fu_1147_p1));

assign add_ln703_38_fu_1231_p2 = ($signed(sext_ln703_25_fu_1227_p1) + $signed(sext_ln703_14_fu_1087_p1));

assign add_ln703_39_fu_1241_p2 = ($signed(sext_ln703_26_fu_1237_p1) + $signed(sext_ln703_24_fu_1217_p1));

assign add_ln703_40_fu_1274_p2 = ($signed(sext_ln703_27_fu_1271_p1) + $signed(sext_ln703_23_fu_1268_p1));

assign add_ln703_41_fu_1284_p2 = ($signed(sext_ln703_28_fu_1280_p1) + $signed(add_ln703_32_fu_1263_p2));

assign add_ln703_fu_1151_p2 = ($signed(output_0_V_q0) + $signed(sext_ln703_fu_589_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter48 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter49 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter50 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter51 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage0_iter52 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter53 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage0_iter54 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter55 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage0_iter56 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage0_iter57 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage0_iter58 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter59 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage0_iter60 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage0_iter61 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage0_iter62 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage0_iter63 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage0_iter64 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage0_iter65 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage0_iter66 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage0_iter67 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage0_iter68 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage0_iter69 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage0_iter70 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage0_iter71 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage0_iter72 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage0_iter73 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage0_iter74 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage0_iter75 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage0_iter76 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp0_stage0_iter77 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage0_iter78 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp0_stage0_iter79 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign grp_fu_1297_p0 = {{add_ln703_41_reg_1618}, {32'd0}};

assign grp_fu_1297_p1 = sext_ln700_reg_1387;

assign icmp_ln157_fu_412_p2 = ((j_0_0_reg_287 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln164_10_fu_947_p2 = ((trunc_ln162_5_reg_1553 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln164_11_fu_983_p2 = ((trunc_ln164_2_reg_1559 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln164_12_fu_1019_p2 = ((trunc_ln162_7_reg_1565 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln164_13_fu_1055_p2 = ((trunc_ln162_s_reg_1571 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln164_14_fu_1091_p2 = ((trunc_ln162_10_reg_1577 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln164_15_fu_545_p2 = ((trunc_ln164_3_fu_535_p4 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln164_1_fu_593_p2 = ((trunc_ln162_3_reg_1514 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln164_2_fu_455_p2 = ((trunc_ln162_4_fu_445_p4 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln164_3_fu_653_p2 = ((trunc_ln_reg_1530 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln164_4_fu_693_p2 = ((trunc_ln162_2_fu_689_p1 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln164_5_fu_741_p2 = ((trunc_ln162_8_fu_731_p4 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln164_6_fu_789_p2 = ((trunc_ln162_9_fu_779_p4 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln164_7_fu_837_p2 = ((trunc_ln164_1_fu_827_p4 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln164_8_fu_875_p2 = ((trunc_ln162_6_reg_1541 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln164_9_fu_911_p2 = ((trunc_ln162_1_reg_1547 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln164_fu_557_p2 = ((trunc_ln162_reg_1508 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln165_10_fu_952_p2 = ((trunc_ln162_5_reg_1553 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln165_11_fu_988_p2 = ((trunc_ln164_2_reg_1559 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln165_12_fu_1024_p2 = ((trunc_ln162_7_reg_1565 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln165_13_fu_1060_p2 = ((trunc_ln162_s_reg_1571 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln165_14_fu_1096_p2 = ((trunc_ln162_10_reg_1577 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln165_15_fu_551_p2 = ((trunc_ln164_3_fu_535_p4 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln165_1_fu_598_p2 = ((trunc_ln162_3_reg_1514 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln165_2_fu_461_p2 = ((trunc_ln162_4_fu_445_p4 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln165_3_fu_658_p2 = ((trunc_ln_reg_1530 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln165_4_fu_699_p2 = ((trunc_ln162_2_fu_689_p1 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln165_5_fu_747_p2 = ((trunc_ln162_8_fu_731_p4 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln165_6_fu_795_p2 = ((trunc_ln162_9_fu_779_p4 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln165_7_fu_843_p2 = ((trunc_ln164_1_fu_827_p4 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln165_8_fu_880_p2 = ((trunc_ln162_6_reg_1541 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln165_9_fu_916_p2 = ((trunc_ln162_1_reg_1547 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln165_fu_562_p2 = ((trunc_ln162_reg_1508 == 2'd2) ? 1'b1 : 1'b0);

assign mul_ln1148_fu_306_p0 = mul_ln1148_fu_306_p00;

assign mul_ln1148_fu_306_p00 = w_scale_V;

assign mul_ln1148_fu_306_p1 = scales_0_V_read;

assign mul_ln1148_fu_306_p2 = ($signed({{1'b0}, {mul_ln1148_fu_306_p0}}) * $signed(mul_ln1148_fu_306_p1));

assign output_0_V_address0 = zext_ln159_reg_1481;

assign output_0_V_address1 = output_0_V_addr_reg_1502_pp0_iter78_reg;

assign output_0_V_d1 = grp_fu_1297_p2[39:0];

assign packed_weights_0_address0 = zext_ln159_fu_424_p1;

assign packed_weights_1_address0 = zext_ln159_reg_1481;

assign packed_weights_2_address0 = zext_ln159_fu_424_p1;

assign packed_weights_3_address0 = zext_ln159_fu_424_p1;

assign select_ln164_10_fu_964_p3 = ((icmp_ln164_10_fu_947_p2[0:0] === 1'b1) ? p_read10 : select_ln165_10_fu_957_p3);

assign select_ln164_11_fu_1000_p3 = ((icmp_ln164_11_fu_983_p2[0:0] === 1'b1) ? p_read11 : select_ln165_11_fu_993_p3);

assign select_ln164_12_fu_1036_p3 = ((icmp_ln164_12_fu_1019_p2[0:0] === 1'b1) ? p_read12 : select_ln165_12_fu_1029_p3);

assign select_ln164_13_fu_1072_p3 = ((icmp_ln164_13_fu_1055_p2[0:0] === 1'b1) ? p_read13 : select_ln165_13_fu_1065_p3);

assign select_ln164_14_fu_1108_p3 = ((icmp_ln164_14_fu_1091_p2[0:0] === 1'b1) ? p_read14 : select_ln165_14_fu_1101_p3);

assign select_ln164_15_fu_1133_p3 = ((icmp_ln164_15_reg_1583[0:0] === 1'b1) ? p_read15 : select_ln165_15_fu_1127_p3);

assign select_ln164_1_fu_610_p3 = ((icmp_ln164_1_fu_593_p2[0:0] === 1'b1) ? p_read1 : select_ln165_1_fu_603_p3);

assign select_ln164_2_fu_635_p3 = ((icmp_ln164_2_reg_1520[0:0] === 1'b1) ? p_read2 : select_ln165_2_fu_629_p3);

assign select_ln164_3_fu_670_p3 = ((icmp_ln164_3_fu_653_p2[0:0] === 1'b1) ? p_read3 : select_ln165_3_fu_663_p3);

assign select_ln164_4_fu_712_p3 = ((icmp_ln164_4_fu_693_p2[0:0] === 1'b1) ? p_read4 : select_ln165_4_fu_705_p3);

assign select_ln164_5_fu_760_p3 = ((icmp_ln164_5_fu_741_p2[0:0] === 1'b1) ? p_read5 : select_ln165_5_fu_753_p3);

assign select_ln164_6_fu_808_p3 = ((icmp_ln164_6_fu_789_p2[0:0] === 1'b1) ? p_read6 : select_ln165_6_fu_801_p3);

assign select_ln164_7_fu_856_p3 = ((icmp_ln164_7_fu_837_p2[0:0] === 1'b1) ? p_read7 : select_ln165_7_fu_849_p3);

assign select_ln164_8_fu_892_p3 = ((icmp_ln164_8_fu_875_p2[0:0] === 1'b1) ? p_read8 : select_ln165_8_fu_885_p3);

assign select_ln164_9_fu_928_p3 = ((icmp_ln164_9_fu_911_p2[0:0] === 1'b1) ? p_read9 : select_ln165_9_fu_921_p3);

assign select_ln164_fu_574_p3 = ((icmp_ln164_fu_557_p2[0:0] === 1'b1) ? p_read : select_ln165_fu_567_p3);

assign select_ln165_10_fu_957_p3 = ((icmp_ln165_10_fu_952_p2[0:0] === 1'b1) ? sub_ln700_10_reg_1417 : 8'd0);

assign select_ln165_11_fu_993_p3 = ((icmp_ln165_11_fu_988_p2[0:0] === 1'b1) ? sub_ln700_11_reg_1412 : 8'd0);

assign select_ln165_12_fu_1029_p3 = ((icmp_ln165_12_fu_1024_p2[0:0] === 1'b1) ? sub_ln700_12_reg_1407 : 8'd0);

assign select_ln165_13_fu_1065_p3 = ((icmp_ln165_13_fu_1060_p2[0:0] === 1'b1) ? sub_ln700_13_reg_1402 : 8'd0);

assign select_ln165_14_fu_1101_p3 = ((icmp_ln165_14_fu_1096_p2[0:0] === 1'b1) ? sub_ln700_14_reg_1397 : 8'd0);

assign select_ln165_15_fu_1127_p3 = ((icmp_ln165_15_reg_1588[0:0] === 1'b1) ? sub_ln700_15_reg_1392 : 8'd0);

assign select_ln165_1_fu_603_p3 = ((icmp_ln165_1_fu_598_p2[0:0] === 1'b1) ? sub_ln700_1_reg_1462 : 8'd0);

assign select_ln165_2_fu_629_p3 = ((icmp_ln165_2_reg_1525[0:0] === 1'b1) ? sub_ln700_2_reg_1457 : 8'd0);

assign select_ln165_3_fu_663_p3 = ((icmp_ln165_3_fu_658_p2[0:0] === 1'b1) ? sub_ln700_3_reg_1452 : 8'd0);

assign select_ln165_4_fu_705_p3 = ((icmp_ln165_4_fu_699_p2[0:0] === 1'b1) ? sub_ln700_4_reg_1447 : 8'd0);

assign select_ln165_5_fu_753_p3 = ((icmp_ln165_5_fu_747_p2[0:0] === 1'b1) ? sub_ln700_5_reg_1442 : 8'd0);

assign select_ln165_6_fu_801_p3 = ((icmp_ln165_6_fu_795_p2[0:0] === 1'b1) ? sub_ln700_6_reg_1437 : 8'd0);

assign select_ln165_7_fu_849_p3 = ((icmp_ln165_7_fu_843_p2[0:0] === 1'b1) ? sub_ln700_7_reg_1432 : 8'd0);

assign select_ln165_8_fu_885_p3 = ((icmp_ln165_8_fu_880_p2[0:0] === 1'b1) ? sub_ln700_8_reg_1427 : 8'd0);

assign select_ln165_9_fu_921_p3 = ((icmp_ln165_9_fu_916_p2[0:0] === 1'b1) ? sub_ln700_9_reg_1422 : 8'd0);

assign select_ln165_fu_567_p3 = ((icmp_ln165_fu_562_p2[0:0] === 1'b1) ? sub_ln700_reg_1467 : 8'd0);

assign sext_ln700_fu_312_p1 = $signed(mul_ln1148_fu_306_p2);

assign sext_ln703_10_fu_943_p1 = $signed(shl_ln703_9_fu_935_p3);

assign sext_ln703_11_fu_979_p1 = $signed(shl_ln703_s_fu_971_p3);

assign sext_ln703_12_fu_1015_p1 = $signed(shl_ln703_10_fu_1007_p3);

assign sext_ln703_13_fu_1051_p1 = $signed(shl_ln703_11_fu_1043_p3);

assign sext_ln703_14_fu_1087_p1 = $signed(shl_ln703_12_fu_1079_p3);

assign sext_ln703_15_fu_1123_p1 = $signed(shl_ln703_13_fu_1115_p3);

assign sext_ln703_16_fu_1147_p1 = $signed(shl_ln703_14_fu_1139_p3);

assign sext_ln703_17_fu_1163_p1 = $signed(add_ln703_27_fu_1157_p2);

assign sext_ln703_18_fu_1247_p1 = $signed(add_ln703_29_reg_1598);

assign sext_ln703_19_fu_1250_p1 = $signed(add_ln703_30_reg_1603);

assign sext_ln703_20_fu_1259_p1 = $signed(add_ln703_31_fu_1253_p2);

assign sext_ln703_21_fu_1191_p1 = $signed(add_ln703_33_fu_1185_p2);

assign sext_ln703_22_fu_1201_p1 = $signed(add_ln703_34_fu_1195_p2);

assign sext_ln703_23_fu_1268_p1 = $signed(add_ln703_35_reg_1608);

assign sext_ln703_24_fu_1217_p1 = $signed(add_ln703_36_fu_1211_p2);

assign sext_ln703_25_fu_1227_p1 = $signed(add_ln703_37_fu_1221_p2);

assign sext_ln703_26_fu_1237_p1 = $signed(add_ln703_38_fu_1231_p2);

assign sext_ln703_27_fu_1271_p1 = $signed(add_ln703_39_reg_1613);

assign sext_ln703_28_fu_1280_p1 = $signed(add_ln703_40_fu_1274_p2);

assign sext_ln703_2_fu_625_p1 = $signed(shl_ln703_1_fu_617_p3);

assign sext_ln703_3_fu_649_p1 = $signed(shl_ln703_2_fu_641_p3);

assign sext_ln703_4_fu_685_p1 = $signed(shl_ln703_3_fu_677_p3);

assign sext_ln703_5_fu_727_p1 = $signed(shl_ln703_4_fu_719_p3);

assign sext_ln703_6_fu_775_p1 = $signed(shl_ln703_5_fu_767_p3);

assign sext_ln703_7_fu_823_p1 = $signed(shl_ln703_6_fu_815_p3);

assign sext_ln703_8_fu_871_p1 = $signed(shl_ln703_7_fu_863_p3);

assign sext_ln703_9_fu_907_p1 = $signed(shl_ln703_8_fu_899_p3);

assign sext_ln703_fu_589_p1 = $signed(shl_ln_fu_581_p3);

assign shl_ln703_10_fu_1007_p3 = {{select_ln164_11_fu_1000_p3}, {16'd0}};

assign shl_ln703_11_fu_1043_p3 = {{select_ln164_12_fu_1036_p3}, {16'd0}};

assign shl_ln703_12_fu_1079_p3 = {{select_ln164_13_fu_1072_p3}, {16'd0}};

assign shl_ln703_13_fu_1115_p3 = {{select_ln164_14_fu_1108_p3}, {16'd0}};

assign shl_ln703_14_fu_1139_p3 = {{select_ln164_15_fu_1133_p3}, {16'd0}};

assign shl_ln703_1_fu_617_p3 = {{select_ln164_1_fu_610_p3}, {16'd0}};

assign shl_ln703_2_fu_641_p3 = {{select_ln164_2_fu_635_p3}, {16'd0}};

assign shl_ln703_3_fu_677_p3 = {{select_ln164_3_fu_670_p3}, {16'd0}};

assign shl_ln703_4_fu_719_p3 = {{select_ln164_4_fu_712_p3}, {16'd0}};

assign shl_ln703_5_fu_767_p3 = {{select_ln164_5_fu_760_p3}, {16'd0}};

assign shl_ln703_6_fu_815_p3 = {{select_ln164_6_fu_808_p3}, {16'd0}};

assign shl_ln703_7_fu_863_p3 = {{select_ln164_7_fu_856_p3}, {16'd0}};

assign shl_ln703_8_fu_899_p3 = {{select_ln164_8_fu_892_p3}, {16'd0}};

assign shl_ln703_9_fu_935_p3 = {{select_ln164_9_fu_928_p3}, {16'd0}};

assign shl_ln703_s_fu_971_p3 = {{select_ln164_10_fu_964_p3}, {16'd0}};

assign shl_ln_fu_581_p3 = {{select_ln164_fu_574_p3}, {16'd0}};

assign sub_ln700_10_fu_346_p2 = (8'd0 - p_read10);

assign sub_ln700_11_fu_340_p2 = (8'd0 - p_read11);

assign sub_ln700_12_fu_334_p2 = (8'd0 - p_read12);

assign sub_ln700_13_fu_328_p2 = (8'd0 - p_read13);

assign sub_ln700_14_fu_322_p2 = (8'd0 - p_read14);

assign sub_ln700_15_fu_316_p2 = (8'd0 - p_read15);

assign sub_ln700_1_fu_400_p2 = (8'd0 - p_read1);

assign sub_ln700_2_fu_394_p2 = (8'd0 - p_read2);

assign sub_ln700_3_fu_388_p2 = (8'd0 - p_read3);

assign sub_ln700_4_fu_382_p2 = (8'd0 - p_read4);

assign sub_ln700_5_fu_376_p2 = (8'd0 - p_read5);

assign sub_ln700_6_fu_370_p2 = (8'd0 - p_read6);

assign sub_ln700_7_fu_364_p2 = (8'd0 - p_read7);

assign sub_ln700_8_fu_358_p2 = (8'd0 - p_read8);

assign sub_ln700_9_fu_352_p2 = (8'd0 - p_read9);

assign sub_ln700_fu_406_p2 = (8'd0 - p_read);

assign trunc_ln162_2_fu_689_p1 = packed_weights_1_q0[1:0];

assign trunc_ln162_4_fu_445_p4 = {{packed_weights_0_q0[5:4]}};

assign trunc_ln162_6_fu_477_p1 = packed_weights_2_q0[1:0];

assign trunc_ln162_7_fu_511_p1 = packed_weights_3_q0[1:0];

assign trunc_ln162_8_fu_731_p4 = {{packed_weights_1_q0[3:2]}};

assign trunc_ln162_9_fu_779_p4 = {{packed_weights_1_q0[5:4]}};

assign trunc_ln162_fu_431_p1 = packed_weights_0_q0[1:0];

assign trunc_ln164_1_fu_827_p4 = {{packed_weights_1_q0[7:6]}};

assign trunc_ln164_3_fu_535_p4 = {{packed_weights_3_q0[7:6]}};

assign zext_ln159_fu_424_p1 = j_0_0_reg_287;

always @ (posedge ap_clk) begin
    zext_ln159_reg_1481[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    add_ln703_29_reg_1598[15:0] <= 16'b0000000000000000;
    add_ln703_30_reg_1603[15:0] <= 16'b0000000000000000;
    add_ln703_35_reg_1608[15:0] <= 16'b0000000000000000;
    add_ln703_39_reg_1613[15:0] <= 16'b0000000000000000;
end

endmodule //linear_forward_no_mu
