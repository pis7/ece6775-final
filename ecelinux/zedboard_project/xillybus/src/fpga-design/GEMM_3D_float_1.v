// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module GEMM_3D_float_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        input_2_0_V_address0,
        input_2_0_V_ce0,
        input_2_0_V_q0,
        input_2_0_V_address1,
        input_2_0_V_ce1,
        input_2_0_V_q1,
        input_2_1_V_address0,
        input_2_1_V_ce0,
        input_2_1_V_q0,
        input_2_1_V_address1,
        input_2_1_V_ce1,
        input_2_1_V_q1,
        input_2_2_V_address0,
        input_2_2_V_ce0,
        input_2_2_V_q0,
        input_2_2_V_address1,
        input_2_2_V_ce1,
        input_2_2_V_q1,
        input_2_3_V_address0,
        input_2_3_V_ce0,
        input_2_3_V_q0,
        input_2_3_V_address1,
        input_2_3_V_ce1,
        input_2_3_V_q1,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_pp0_stage0 = 4'd2;
parameter    ap_ST_fsm_pp0_stage1 = 4'd4;
parameter    ap_ST_fsm_state7 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] p_read;
input  [31:0] p_read1;
input  [31:0] p_read2;
input  [31:0] p_read3;
input  [31:0] p_read4;
input  [31:0] p_read5;
input  [31:0] p_read6;
input  [31:0] p_read7;
input  [31:0] p_read8;
input  [31:0] p_read9;
input  [31:0] p_read10;
input  [31:0] p_read11;
output  [3:0] input_2_0_V_address0;
output   input_2_0_V_ce0;
input  [31:0] input_2_0_V_q0;
output  [3:0] input_2_0_V_address1;
output   input_2_0_V_ce1;
input  [31:0] input_2_0_V_q1;
output  [3:0] input_2_1_V_address0;
output   input_2_1_V_ce0;
input  [31:0] input_2_1_V_q0;
output  [3:0] input_2_1_V_address1;
output   input_2_1_V_ce1;
input  [31:0] input_2_1_V_q1;
output  [3:0] input_2_2_V_address0;
output   input_2_2_V_ce0;
input  [31:0] input_2_2_V_q0;
output  [3:0] input_2_2_V_address1;
output   input_2_2_V_ce1;
input  [31:0] input_2_2_V_q1;
output  [3:0] input_2_3_V_address0;
output   input_2_3_V_ce0;
input  [31:0] input_2_3_V_q0;
output  [3:0] input_2_3_V_address1;
output   input_2_3_V_ce1;
input  [31:0] input_2_3_V_q1;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;
output  [31:0] ap_return_2;
output  [31:0] ap_return_3;
output  [31:0] ap_return_4;
output  [31:0] ap_return_5;
output  [31:0] ap_return_6;
output  [31:0] ap_return_7;
output  [31:0] ap_return_8;
output  [31:0] ap_return_9;
output  [31:0] ap_return_10;
output  [31:0] ap_return_11;
output  [31:0] ap_return_12;
output  [31:0] ap_return_13;
output  [31:0] ap_return_14;
output  [31:0] ap_return_15;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] input_2_0_V_address0;
reg input_2_0_V_ce0;
reg input_2_0_V_ce1;
reg[3:0] input_2_1_V_address0;
reg input_2_1_V_ce0;
reg input_2_1_V_ce1;
reg[3:0] input_2_2_V_address0;
reg input_2_2_V_ce0;
reg input_2_2_V_ce1;
reg[3:0] input_2_3_V_address0;
reg input_2_3_V_ce0;
reg input_2_3_V_ce1;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [4:0] indvar_flatten_reg_364;
reg   [2:0] i_0_reg_375;
reg   [2:0] k_0_0_reg_386;
wire   [31:0] grp_fu_397_p6;
reg   [31:0] reg_410;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln267_reg_1035;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln267_fu_414_p2;
reg   [0:0] icmp_ln267_reg_1035_pp0_iter1_reg;
wire   [4:0] add_ln267_fu_420_p2;
reg   [4:0] add_ln267_reg_1039;
wire   [2:0] select_ln270_fu_438_p3;
reg   [2:0] select_ln270_reg_1044;
wire   [2:0] select_ln270_1_fu_446_p3;
reg   [2:0] select_ln270_1_reg_1049;
wire  signed [4:0] sub_ln1117_fu_466_p2;
reg  signed [4:0] sub_ln1117_reg_1054;
wire   [1:0] trunc_ln270_fu_494_p1;
reg   [1:0] trunc_ln270_reg_1099;
reg   [1:0] trunc_ln270_reg_1099_pp0_iter1_reg;
wire   [1:0] trunc_ln203_fu_498_p1;
reg   [1:0] trunc_ln203_reg_1103;
reg   [1:0] trunc_ln203_reg_1103_pp0_iter1_reg;
wire   [31:0] tmp_20_fu_502_p6;
reg   [31:0] tmp_20_reg_1109;
wire   [31:0] tmp_22_fu_512_p6;
reg   [31:0] tmp_22_reg_1114;
wire   [31:0] tmp_25_fu_522_p6;
reg   [31:0] tmp_25_reg_1119;
reg   [31:0] tmp_25_reg_1119_pp0_iter1_reg;
wire   [31:0] tmp_23_fu_545_p6;
reg   [31:0] tmp_23_reg_1144;
wire   [2:0] add_ln269_fu_558_p2;
reg   [2:0] add_ln269_reg_1149;
wire   [53:0] mul_ln1192_fu_582_p2;
reg   [53:0] mul_ln1192_reg_1154;
reg   [31:0] tmp_24_reg_1159;
wire   [53:0] mul_ln1192_1_fu_617_p2;
reg   [53:0] mul_ln1192_1_reg_1164;
reg   [31:0] tmp_27_reg_1169;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter2;
reg   [4:0] ap_phi_mux_indvar_flatten_phi_fu_368_p4;
wire    ap_block_pp0_stage0;
reg   [2:0] ap_phi_mux_i_0_phi_fu_379_p4;
reg   [2:0] ap_phi_mux_k_0_0_phi_fu_390_p4;
wire  signed [63:0] sext_ln1117_2_fu_472_p1;
wire  signed [63:0] sext_ln1117_3_fu_486_p1;
wire  signed [63:0] sext_ln1117_4_fu_537_p1;
wire    ap_block_pp0_stage1;
reg   [31:0] output_V823_1_fu_96;
wire    ap_CS_fsm_state7;
reg   [31:0] output_V822_1_fu_100;
reg   [31:0] output_V_1_fu_104;
reg   [31:0] output_V821_1_fu_108;
reg   [31:0] output_V8_1_fu_112;
reg   [31:0] output_V12_1_fu_116;
reg   [31:0] output_V720_1_fu_120;
reg   [31:0] output_V719_1_fu_124;
reg   [31:0] output_V13_1_fu_128;
reg   [31:0] output_V718_1_fu_132;
reg   [31:0] output_V7_1_fu_136;
reg   [31:0] output_V14_1_fu_140;
reg   [31:0] output_V617_1_fu_144;
reg   [31:0] output_V616_1_fu_148;
reg   [31:0] output_V6_1_fu_152;
reg   [31:0] output_V615_1_fu_156;
wire   [0:0] icmp_ln269_fu_432_p2;
wire   [2:0] i_fu_426_p2;
wire   [4:0] tmp_fu_458_p3;
wire   [4:0] zext_ln1117_fu_454_p1;
wire   [4:0] add_ln1117_fu_480_p2;
wire   [4:0] add_ln1117_1_fu_532_p2;
wire  signed [31:0] mul_ln1118_fu_570_p0;
wire  signed [31:0] mul_ln1118_fu_570_p1;
wire  signed [31:0] mul_ln1192_fu_582_p0;
wire  signed [31:0] mul_ln1192_fu_582_p1;
wire   [53:0] mul_ln1118_fu_570_p2;
wire   [53:0] shl_ln_fu_598_p3;
wire  signed [31:0] mul_ln1192_1_fu_617_p0;
wire  signed [31:0] mul_ln1192_1_fu_617_p1;
wire   [53:0] add_ln1192_fu_605_p2;
wire   [53:0] shl_ln728_6_fu_633_p3;
wire   [53:0] add_ln1192_2_fu_640_p2;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

dut_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
dut_mux_42_32_1_1_U165(
    .din0(input_2_0_V_q0),
    .din1(input_2_1_V_q0),
    .din2(input_2_2_V_q0),
    .din3(input_2_3_V_q0),
    .din4(trunc_ln203_reg_1103),
    .dout(grp_fu_397_p6)
);

dut_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
dut_mux_42_32_1_1_U166(
    .din0(p_read),
    .din1(p_read1),
    .din2(p_read2),
    .din3(p_read3),
    .din4(trunc_ln270_fu_494_p1),
    .dout(tmp_20_fu_502_p6)
);

dut_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
dut_mux_42_32_1_1_U167(
    .din0(p_read4),
    .din1(p_read5),
    .din2(p_read6),
    .din3(p_read7),
    .din4(trunc_ln270_fu_494_p1),
    .dout(tmp_22_fu_512_p6)
);

dut_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
dut_mux_42_32_1_1_U168(
    .din0(p_read8),
    .din1(p_read9),
    .din2(p_read10),
    .din3(p_read11),
    .din4(trunc_ln270_fu_494_p1),
    .dout(tmp_25_fu_522_p6)
);

dut_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
dut_mux_42_32_1_1_U169(
    .din0(input_2_0_V_q1),
    .din1(input_2_1_V_q1),
    .din2(input_2_2_V_q1),
    .din3(input_2_3_V_q1),
    .din4(trunc_ln203_reg_1103),
    .dout(tmp_23_fu_545_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln267_reg_1035 == 1'd0))) begin
        i_0_reg_375 <= select_ln270_1_reg_1049;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_375 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln267_reg_1035 == 1'd0))) begin
        indvar_flatten_reg_364 <= add_ln267_reg_1039;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_364 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln267_reg_1035 == 1'd0))) begin
        k_0_0_reg_386 <= add_ln269_reg_1149;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        k_0_0_reg_386 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln267_reg_1039 <= add_ln267_fu_420_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln267_reg_1035 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln269_reg_1149 <= add_ln269_fu_558_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln267_reg_1035 <= icmp_ln267_fu_414_p2;
        icmp_ln267_reg_1035_pp0_iter1_reg <= icmp_ln267_reg_1035;
        tmp_25_reg_1119_pp0_iter1_reg <= tmp_25_reg_1119;
        trunc_ln203_reg_1103_pp0_iter1_reg <= trunc_ln203_reg_1103;
        trunc_ln270_reg_1099_pp0_iter1_reg <= trunc_ln270_reg_1099;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln267_reg_1035_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        mul_ln1192_1_reg_1164 <= mul_ln1192_1_fu_617_p2;
        tmp_27_reg_1169 <= {{add_ln1192_fu_605_p2[53:22]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln267_reg_1035 == 1'd0))) begin
        mul_ln1192_reg_1154 <= mul_ln1192_fu_582_p2;
        tmp_24_reg_1159 <= {{mul_ln1118_fu_570_p2[53:22]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln203_reg_1103_pp0_iter1_reg == 2'd0) & (trunc_ln270_reg_1099_pp0_iter1_reg == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_V12_1_fu_116 <= {{add_ln1192_2_fu_640_p2[53:22]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln203_reg_1103_pp0_iter1_reg == 2'd0) & (trunc_ln270_reg_1099_pp0_iter1_reg == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_V13_1_fu_128 <= {{add_ln1192_2_fu_640_p2[53:22]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln203_reg_1103_pp0_iter1_reg == 2'd0) & (trunc_ln270_reg_1099_pp0_iter1_reg == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_V14_1_fu_140 <= {{add_ln1192_2_fu_640_p2[53:22]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln203_reg_1103_pp0_iter1_reg == 2'd1) & (trunc_ln270_reg_1099_pp0_iter1_reg == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_V615_1_fu_156 <= {{add_ln1192_2_fu_640_p2[53:22]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln203_reg_1103_pp0_iter1_reg == 2'd1) & (trunc_ln270_reg_1099_pp0_iter1_reg == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_V616_1_fu_148 <= {{add_ln1192_2_fu_640_p2[53:22]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln203_reg_1103_pp0_iter1_reg == 2'd1) & (trunc_ln270_reg_1099_pp0_iter1_reg == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_V617_1_fu_144 <= {{add_ln1192_2_fu_640_p2[53:22]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln203_reg_1103_pp0_iter1_reg == 2'd1) & (trunc_ln270_reg_1099_pp0_iter1_reg == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_V6_1_fu_152 <= {{add_ln1192_2_fu_640_p2[53:22]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln203_reg_1103_pp0_iter1_reg == 2'd2) & (trunc_ln270_reg_1099_pp0_iter1_reg == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_V718_1_fu_132 <= {{add_ln1192_2_fu_640_p2[53:22]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln203_reg_1103_pp0_iter1_reg == 2'd2) & (trunc_ln270_reg_1099_pp0_iter1_reg == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_V719_1_fu_124 <= {{add_ln1192_2_fu_640_p2[53:22]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln203_reg_1103_pp0_iter1_reg == 2'd2) & (trunc_ln270_reg_1099_pp0_iter1_reg == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_V720_1_fu_120 <= {{add_ln1192_2_fu_640_p2[53:22]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln203_reg_1103_pp0_iter1_reg == 2'd2) & (trunc_ln270_reg_1099_pp0_iter1_reg == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_V7_1_fu_136 <= {{add_ln1192_2_fu_640_p2[53:22]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln203_reg_1103_pp0_iter1_reg == 2'd3) & (trunc_ln270_reg_1099_pp0_iter1_reg == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_V821_1_fu_108 <= {{add_ln1192_2_fu_640_p2[53:22]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln203_reg_1103_pp0_iter1_reg == 2'd3) & (trunc_ln270_reg_1099_pp0_iter1_reg == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_V822_1_fu_100 <= {{add_ln1192_2_fu_640_p2[53:22]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln203_reg_1103_pp0_iter1_reg == 2'd3) & (trunc_ln270_reg_1099_pp0_iter1_reg == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_V823_1_fu_96 <= {{add_ln1192_2_fu_640_p2[53:22]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln203_reg_1103_pp0_iter1_reg == 2'd3) & (trunc_ln270_reg_1099_pp0_iter1_reg == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_V8_1_fu_112 <= {{add_ln1192_2_fu_640_p2[53:22]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln203_reg_1103_pp0_iter1_reg == 2'd0) & (trunc_ln270_reg_1099_pp0_iter1_reg == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_V_1_fu_104 <= {{add_ln1192_2_fu_640_p2[53:22]}};
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln267_reg_1035 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln267_reg_1035 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        reg_410 <= grp_fu_397_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln267_fu_414_p2 == 1'd0))) begin
        select_ln270_1_reg_1049 <= select_ln270_1_fu_446_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln267_fu_414_p2 == 1'd0))) begin
        select_ln270_reg_1044 <= select_ln270_fu_438_p3;
        sub_ln1117_reg_1054 <= sub_ln1117_fu_466_p2;
        tmp_20_reg_1109 <= tmp_20_fu_502_p6;
        tmp_22_reg_1114 <= tmp_22_fu_512_p6;
        tmp_25_reg_1119 <= tmp_25_fu_522_p6;
        trunc_ln203_reg_1103 <= trunc_ln203_fu_498_p1;
        trunc_ln270_reg_1099 <= trunc_ln270_fu_494_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln267_reg_1035 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_23_reg_1144 <= tmp_23_fu_545_p6;
    end
end

always @ (*) begin
    if ((icmp_ln267_fu_414_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln267_reg_1035 == 1'd0))) begin
        ap_phi_mux_i_0_phi_fu_379_p4 = select_ln270_1_reg_1049;
    end else begin
        ap_phi_mux_i_0_phi_fu_379_p4 = i_0_reg_375;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln267_reg_1035 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_368_p4 = add_ln267_reg_1039;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_368_p4 = indvar_flatten_reg_364;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln267_reg_1035 == 1'd0))) begin
        ap_phi_mux_k_0_0_phi_fu_390_p4 = add_ln269_reg_1149;
    end else begin
        ap_phi_mux_k_0_0_phi_fu_390_p4 = k_0_0_reg_386;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_2_0_V_address0 = sext_ln1117_4_fu_537_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_2_0_V_address0 = sext_ln1117_2_fu_472_p1;
        end else begin
            input_2_0_V_address0 = 'bx;
        end
    end else begin
        input_2_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        input_2_0_V_ce0 = 1'b1;
    end else begin
        input_2_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_2_0_V_ce1 = 1'b1;
    end else begin
        input_2_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_2_1_V_address0 = sext_ln1117_4_fu_537_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_2_1_V_address0 = sext_ln1117_2_fu_472_p1;
        end else begin
            input_2_1_V_address0 = 'bx;
        end
    end else begin
        input_2_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        input_2_1_V_ce0 = 1'b1;
    end else begin
        input_2_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_2_1_V_ce1 = 1'b1;
    end else begin
        input_2_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_2_2_V_address0 = sext_ln1117_4_fu_537_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_2_2_V_address0 = sext_ln1117_2_fu_472_p1;
        end else begin
            input_2_2_V_address0 = 'bx;
        end
    end else begin
        input_2_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        input_2_2_V_ce0 = 1'b1;
    end else begin
        input_2_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_2_2_V_ce1 = 1'b1;
    end else begin
        input_2_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_2_3_V_address0 = sext_ln1117_4_fu_537_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_2_3_V_address0 = sext_ln1117_2_fu_472_p1;
        end else begin
            input_2_3_V_address0 = 'bx;
        end
    end else begin
        input_2_3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        input_2_3_V_ce0 = 1'b1;
    end else begin
        input_2_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_2_3_V_ce1 = 1'b1;
    end else begin
        input_2_3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln267_fu_414_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln267_fu_414_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1117_1_fu_532_p2 = ($signed(5'd2) + $signed(sub_ln1117_reg_1054));

assign add_ln1117_fu_480_p2 = ($signed(5'd1) + $signed(sub_ln1117_fu_466_p2));

assign add_ln1192_2_fu_640_p2 = (shl_ln728_6_fu_633_p3 + mul_ln1192_1_reg_1164);

assign add_ln1192_fu_605_p2 = (shl_ln_fu_598_p3 + mul_ln1192_reg_1154);

assign add_ln267_fu_420_p2 = (ap_phi_mux_indvar_flatten_phi_fu_368_p4 + 5'd1);

assign add_ln269_fu_558_p2 = (select_ln270_reg_1044 + 3'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_return_0 = output_V_1_fu_104;

assign ap_return_1 = output_V12_1_fu_116;

assign ap_return_10 = output_V719_1_fu_124;

assign ap_return_11 = output_V720_1_fu_120;

assign ap_return_12 = output_V8_1_fu_112;

assign ap_return_13 = output_V821_1_fu_108;

assign ap_return_14 = output_V822_1_fu_100;

assign ap_return_15 = output_V823_1_fu_96;

assign ap_return_2 = output_V13_1_fu_128;

assign ap_return_3 = output_V14_1_fu_140;

assign ap_return_4 = output_V6_1_fu_152;

assign ap_return_5 = output_V615_1_fu_156;

assign ap_return_6 = output_V616_1_fu_148;

assign ap_return_7 = output_V617_1_fu_144;

assign ap_return_8 = output_V7_1_fu_136;

assign ap_return_9 = output_V718_1_fu_132;

assign i_fu_426_p2 = (3'd1 + ap_phi_mux_i_0_phi_fu_379_p4);

assign icmp_ln267_fu_414_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_368_p4 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln269_fu_432_p2 = ((ap_phi_mux_k_0_0_phi_fu_390_p4 == 3'd4) ? 1'b1 : 1'b0);

assign input_2_0_V_address1 = sext_ln1117_3_fu_486_p1;

assign input_2_1_V_address1 = sext_ln1117_3_fu_486_p1;

assign input_2_2_V_address1 = sext_ln1117_3_fu_486_p1;

assign input_2_3_V_address1 = sext_ln1117_3_fu_486_p1;

assign mul_ln1118_fu_570_p0 = tmp_20_reg_1109;

assign mul_ln1118_fu_570_p1 = reg_410;

assign mul_ln1118_fu_570_p2 = ($signed(mul_ln1118_fu_570_p0) * $signed(mul_ln1118_fu_570_p1));

assign mul_ln1192_1_fu_617_p0 = tmp_25_reg_1119_pp0_iter1_reg;

assign mul_ln1192_1_fu_617_p1 = reg_410;

assign mul_ln1192_1_fu_617_p2 = ($signed(mul_ln1192_1_fu_617_p0) * $signed(mul_ln1192_1_fu_617_p1));

assign mul_ln1192_fu_582_p0 = tmp_22_reg_1114;

assign mul_ln1192_fu_582_p1 = tmp_23_reg_1144;

assign mul_ln1192_fu_582_p2 = ($signed(mul_ln1192_fu_582_p0) * $signed(mul_ln1192_fu_582_p1));

assign select_ln270_1_fu_446_p3 = ((icmp_ln269_fu_432_p2[0:0] === 1'b1) ? i_fu_426_p2 : ap_phi_mux_i_0_phi_fu_379_p4);

assign select_ln270_fu_438_p3 = ((icmp_ln269_fu_432_p2[0:0] === 1'b1) ? 3'd0 : ap_phi_mux_k_0_0_phi_fu_390_p4);

assign sext_ln1117_2_fu_472_p1 = sub_ln1117_fu_466_p2;

assign sext_ln1117_3_fu_486_p1 = $signed(add_ln1117_fu_480_p2);

assign sext_ln1117_4_fu_537_p1 = $signed(add_ln1117_1_fu_532_p2);

assign shl_ln728_6_fu_633_p3 = {{tmp_27_reg_1169}, {22'd0}};

assign shl_ln_fu_598_p3 = {{tmp_24_reg_1159}, {22'd0}};

assign sub_ln1117_fu_466_p2 = (tmp_fu_458_p3 - zext_ln1117_fu_454_p1);

assign tmp_fu_458_p3 = {{select_ln270_1_fu_446_p3}, {2'd0}};

assign trunc_ln203_fu_498_p1 = select_ln270_fu_438_p3[1:0];

assign trunc_ln270_fu_494_p1 = select_ln270_1_fu_446_p3[1:0];

assign zext_ln1117_fu_454_p1 = select_ln270_1_fu_446_p3;

endmodule //GEMM_3D_float_1
