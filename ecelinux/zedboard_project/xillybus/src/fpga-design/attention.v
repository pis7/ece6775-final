// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module attention (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        hidden_states_0_V_address0,
        hidden_states_0_V_ce0,
        hidden_states_0_V_we0,
        hidden_states_0_V_d0,
        hidden_states_0_V_q0,
        hidden_states_0_V_address1,
        hidden_states_0_V_ce1,
        hidden_states_0_V_q1,
        final_output_0_V_address0,
        final_output_0_V_ce0,
        final_output_0_V_we0,
        final_output_0_V_d0,
        final_output_0_V_q0,
        final_output_0_V_address1,
        final_output_0_V_ce1,
        final_output_0_V_we1,
        final_output_0_V_d1
);

parameter    ap_ST_fsm_state1 = 37'd1;
parameter    ap_ST_fsm_state2 = 37'd2;
parameter    ap_ST_fsm_state3 = 37'd4;
parameter    ap_ST_fsm_state4 = 37'd8;
parameter    ap_ST_fsm_state5 = 37'd16;
parameter    ap_ST_fsm_state6 = 37'd32;
parameter    ap_ST_fsm_state7 = 37'd64;
parameter    ap_ST_fsm_state8 = 37'd128;
parameter    ap_ST_fsm_state9 = 37'd256;
parameter    ap_ST_fsm_state10 = 37'd512;
parameter    ap_ST_fsm_state11 = 37'd1024;
parameter    ap_ST_fsm_state12 = 37'd2048;
parameter    ap_ST_fsm_state13 = 37'd4096;
parameter    ap_ST_fsm_state14 = 37'd8192;
parameter    ap_ST_fsm_state15 = 37'd16384;
parameter    ap_ST_fsm_state16 = 37'd32768;
parameter    ap_ST_fsm_state17 = 37'd65536;
parameter    ap_ST_fsm_state18 = 37'd131072;
parameter    ap_ST_fsm_state19 = 37'd262144;
parameter    ap_ST_fsm_state20 = 37'd524288;
parameter    ap_ST_fsm_state21 = 37'd1048576;
parameter    ap_ST_fsm_state22 = 37'd2097152;
parameter    ap_ST_fsm_state23 = 37'd4194304;
parameter    ap_ST_fsm_state24 = 37'd8388608;
parameter    ap_ST_fsm_state25 = 37'd16777216;
parameter    ap_ST_fsm_state26 = 37'd33554432;
parameter    ap_ST_fsm_state27 = 37'd67108864;
parameter    ap_ST_fsm_state28 = 37'd134217728;
parameter    ap_ST_fsm_state29 = 37'd268435456;
parameter    ap_ST_fsm_state30 = 37'd536870912;
parameter    ap_ST_fsm_state31 = 37'd1073741824;
parameter    ap_ST_fsm_state32 = 37'd2147483648;
parameter    ap_ST_fsm_state33 = 37'd4294967296;
parameter    ap_ST_fsm_state34 = 37'd8589934592;
parameter    ap_ST_fsm_state35 = 37'd17179869184;
parameter    ap_ST_fsm_state36 = 37'd34359738368;
parameter    ap_ST_fsm_state37 = 37'd68719476736;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] hidden_states_0_V_address0;
output   hidden_states_0_V_ce0;
output   hidden_states_0_V_we0;
output  [39:0] hidden_states_0_V_d0;
input  [39:0] hidden_states_0_V_q0;
output  [4:0] hidden_states_0_V_address1;
output   hidden_states_0_V_ce1;
input  [39:0] hidden_states_0_V_q1;
output  [4:0] final_output_0_V_address0;
output   final_output_0_V_ce0;
output   final_output_0_V_we0;
output  [39:0] final_output_0_V_d0;
input  [39:0] final_output_0_V_q0;
output  [4:0] final_output_0_V_address1;
output   final_output_0_V_ce1;
output   final_output_0_V_we1;
output  [39:0] final_output_0_V_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] hidden_states_0_V_address0;
reg hidden_states_0_V_ce0;
reg hidden_states_0_V_we0;
reg hidden_states_0_V_ce1;
reg[4:0] final_output_0_V_address0;
reg final_output_0_V_ce0;
reg final_output_0_V_we0;
reg[39:0] final_output_0_V_d0;
reg final_output_0_V_ce1;
reg final_output_0_V_we1;

(* fsm_encoding = "none" *) reg   [36:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ln_weight_in_V_ce0;
wire   [39:0] ln_weight_in_V_q0;
reg    q_weights_ce0;
wire   [7:0] q_weights_q0;
reg    k_weights_ce0;
wire   [7:0] k_weights_q0;
reg    v_weights_ce0;
wire   [7:0] v_weights_q0;
reg    ln_weight_V_ce0;
wire   [39:0] ln_weight_V_q0;
reg    o_weights_ce0;
wire   [7:0] o_weights_q0;
wire   [39:0] grp_quantize_activation_fu_356_ap_return;
reg   [39:0] reg_451;
wire    ap_CS_fsm_state4;
wire    grp_quantize_activation_fu_356_ap_ready;
wire    grp_quantize_activation_fu_356_ap_done;
wire    ap_CS_fsm_state35;
wire   [1:0] h_fu_462_p2;
reg   [1:0] h_reg_710;
wire    ap_CS_fsm_state19;
wire   [4:0] sub_ln1265_fu_488_p2;
reg   [4:0] sub_ln1265_reg_715;
wire   [0:0] icmp_ln178_fu_456_p2;
wire   [2:0] add_ln180_fu_500_p2;
reg   [2:0] add_ln180_reg_723;
wire    ap_CS_fsm_state20;
reg   [3:0] attn_weights_0_V_ad_reg_728;
wire   [0:0] icmp_ln180_fu_494_p2;
wire   [39:0] attn_weights_0_V_q0;
reg   [39:0] attn_weights_0_V_lo_reg_733;
wire    ap_CS_fsm_state21;
reg   [0:0] tmp_86_reg_738;
wire    ap_CS_fsm_state22;
wire   [112:0] grp_fu_539_p2;
reg   [112:0] mul_ln1148_reg_749;
wire    ap_CS_fsm_state24;
reg   [38:0] tmp_88_reg_754;
wire  signed [38:0] select_ln1148_fu_570_p3;
reg  signed [38:0] select_ln1148_reg_759;
wire    ap_CS_fsm_state25;
wire   [1:0] add_ln211_fu_602_p2;
reg   [1:0] add_ln211_reg_768;
wire    ap_CS_fsm_state30;
wire   [5:0] sub_ln213_fu_636_p2;
reg   [5:0] sub_ln213_reg_773;
wire   [0:0] icmp_ln211_fu_596_p2;
wire   [5:0] sub_ln203_fu_662_p2;
reg   [5:0] sub_ln203_reg_778;
wire   [3:0] add_ln212_fu_678_p2;
reg   [3:0] add_ln212_reg_786;
wire    ap_CS_fsm_state31;
wire   [5:0] add_ln213_fu_684_p2;
reg   [5:0] add_ln213_reg_791;
wire   [0:0] icmp_ln212_fu_672_p2;
reg   [2:0] quantized_hidden_sta_address0;
reg    quantized_hidden_sta_ce0;
reg    quantized_hidden_sta_we0;
reg   [7:0] quantized_hidden_sta_d0;
wire   [7:0] quantized_hidden_sta_q0;
reg   [2:0] quantized_hidden_sta_1_address0;
reg    quantized_hidden_sta_1_ce0;
reg    quantized_hidden_sta_1_we0;
reg   [7:0] quantized_hidden_sta_1_d0;
wire   [7:0] quantized_hidden_sta_1_q0;
reg   [2:0] quantized_hidden_sta_2_address0;
reg    quantized_hidden_sta_2_ce0;
reg    quantized_hidden_sta_2_we0;
reg   [7:0] quantized_hidden_sta_2_d0;
wire   [7:0] quantized_hidden_sta_2_q0;
reg   [2:0] quantized_hidden_sta_3_address0;
reg    quantized_hidden_sta_3_ce0;
reg    quantized_hidden_sta_3_we0;
reg   [7:0] quantized_hidden_sta_3_d0;
wire   [7:0] quantized_hidden_sta_3_q0;
reg   [4:0] q_proj_re_0_V_address0;
reg    q_proj_re_0_V_ce0;
reg    q_proj_re_0_V_we0;
reg   [39:0] q_proj_re_0_V_d0;
wire   [39:0] q_proj_re_0_V_q0;
reg    q_proj_re_0_V_ce1;
reg    q_proj_re_0_V_we1;
reg   [4:0] k_proj_re_0_V_address0;
reg    k_proj_re_0_V_ce0;
reg    k_proj_re_0_V_we0;
reg   [39:0] k_proj_re_0_V_d0;
wire   [39:0] k_proj_re_0_V_q0;
reg    k_proj_re_0_V_ce1;
reg    k_proj_re_0_V_we1;
reg   [4:0] v_proj_re_0_V_address0;
reg    v_proj_re_0_V_ce0;
reg    v_proj_re_0_V_we0;
reg   [39:0] v_proj_re_0_V_d0;
wire   [39:0] v_proj_re_0_V_q0;
reg    v_proj_re_0_V_ce1;
reg    v_proj_re_0_V_we1;
reg   [4:0] q_proj_0_V_address0;
reg    q_proj_0_V_ce0;
reg    q_proj_0_V_we0;
wire   [39:0] q_proj_0_V_q0;
reg    q_proj_0_V_ce1;
wire   [39:0] q_proj_0_V_q1;
reg   [4:0] k_proj_0_V_address0;
reg    k_proj_0_V_ce0;
reg    k_proj_0_V_we0;
wire   [39:0] k_proj_0_V_q0;
reg    k_proj_0_V_ce1;
wire   [39:0] k_proj_0_V_q1;
reg   [4:0] v_proj_0_V_address0;
reg    v_proj_0_V_ce0;
reg    v_proj_0_V_we0;
wire   [39:0] v_proj_0_V_q0;
reg   [4:0] q_embed_0_V_address0;
reg    q_embed_0_V_ce0;
reg    q_embed_0_V_we0;
wire   [39:0] q_embed_0_V_q0;
reg   [4:0] k_embed_0_V_address0;
reg    k_embed_0_V_ce0;
reg    k_embed_0_V_we0;
wire   [39:0] k_embed_0_V_q0;
reg   [7:0] k_cache_upd_V_address0;
reg    k_cache_upd_V_ce0;
reg    k_cache_upd_V_we0;
wire   [39:0] k_cache_upd_V_q0;
reg   [7:0] v_cache_upd_V_address0;
reg    v_cache_upd_V_ce0;
reg    v_cache_upd_V_we0;
wire   [39:0] v_cache_upd_V_q0;
reg   [7:0] k_proj_transposed_V_address0;
reg    k_proj_transposed_V_ce0;
reg    k_proj_transposed_V_we0;
wire   [39:0] k_proj_transposed_V_q0;
reg   [3:0] attn_weights_0_V_address0;
reg    attn_weights_0_V_ce0;
reg    attn_weights_0_V_we0;
reg   [39:0] attn_weights_0_V_d0;
reg   [4:0] attn_output_0_address0;
reg    attn_output_0_ce0;
reg    attn_output_0_we0;
wire   [39:0] attn_output_0_q0;
reg   [4:0] attn_output_2D_0_V_address0;
reg    attn_output_2D_0_V_ce0;
reg    attn_output_2D_0_V_we0;
reg   [39:0] attn_output_2D_0_V_d0;
wire   [39:0] attn_output_2D_0_V_q0;
reg    attn_output_2D_0_V_ce1;
wire   [39:0] attn_output_2D_0_V_q1;
reg   [2:0] quantized_final_outp_address0;
reg    quantized_final_outp_ce0;
reg    quantized_final_outp_we0;
reg   [7:0] quantized_final_outp_d0;
wire   [7:0] quantized_final_outp_q0;
reg   [2:0] quantized_final_outp_1_address0;
reg    quantized_final_outp_1_ce0;
reg    quantized_final_outp_1_we0;
reg   [7:0] quantized_final_outp_1_d0;
wire   [7:0] quantized_final_outp_1_q0;
reg   [2:0] quantized_final_outp_2_address0;
reg    quantized_final_outp_2_ce0;
reg    quantized_final_outp_2_we0;
reg   [7:0] quantized_final_outp_2_d0;
wire   [7:0] quantized_final_outp_2_q0;
reg   [2:0] quantized_final_outp_3_address0;
reg    quantized_final_outp_3_ce0;
reg    quantized_final_outp_3_we0;
reg   [7:0] quantized_final_outp_3_d0;
wire   [7:0] quantized_final_outp_3_q0;
wire    grp_linear_forward_no_mu_fu_315_ap_start;
wire    grp_linear_forward_no_mu_fu_315_ap_done;
wire    grp_linear_forward_no_mu_fu_315_ap_idle;
wire    grp_linear_forward_no_mu_fu_315_ap_ready;
wire   [2:0] grp_linear_forward_no_mu_fu_315_input_0_0_V_address0;
wire    grp_linear_forward_no_mu_fu_315_input_0_0_V_ce0;
reg   [7:0] grp_linear_forward_no_mu_fu_315_input_0_0_V_q0;
wire   [2:0] grp_linear_forward_no_mu_fu_315_input_1_0_V_address0;
wire    grp_linear_forward_no_mu_fu_315_input_1_0_V_ce0;
reg   [7:0] grp_linear_forward_no_mu_fu_315_input_1_0_V_q0;
wire   [2:0] grp_linear_forward_no_mu_fu_315_input_2_0_V_address0;
wire    grp_linear_forward_no_mu_fu_315_input_2_0_V_ce0;
reg   [7:0] grp_linear_forward_no_mu_fu_315_input_2_0_V_q0;
wire   [2:0] grp_linear_forward_no_mu_fu_315_input_3_0_V_address0;
wire    grp_linear_forward_no_mu_fu_315_input_3_0_V_ce0;
reg   [7:0] grp_linear_forward_no_mu_fu_315_input_3_0_V_q0;
wire   [4:0] grp_linear_forward_no_mu_fu_315_output_0_V_address0;
wire    grp_linear_forward_no_mu_fu_315_output_0_V_ce0;
wire    grp_linear_forward_no_mu_fu_315_output_0_V_we0;
wire   [39:0] grp_linear_forward_no_mu_fu_315_output_0_V_d0;
reg   [39:0] grp_linear_forward_no_mu_fu_315_output_0_V_q0;
wire   [4:0] grp_linear_forward_no_mu_fu_315_output_0_V_address1;
wire    grp_linear_forward_no_mu_fu_315_output_0_V_ce1;
wire    grp_linear_forward_no_mu_fu_315_output_0_V_we1;
wire   [39:0] grp_linear_forward_no_mu_fu_315_output_0_V_d1;
wire   [7:0] grp_linear_forward_no_mu_fu_315_packed_weights_address0;
wire    grp_linear_forward_no_mu_fu_315_packed_weights_ce0;
reg   [7:0] grp_linear_forward_no_mu_fu_315_packed_weights_q0;
reg   [21:0] grp_linear_forward_no_mu_fu_315_w_scale_V;
wire    grp_rms_norm_24_s_fu_336_ap_start;
wire    grp_rms_norm_24_s_fu_336_ap_done;
wire    grp_rms_norm_24_s_fu_336_ap_idle;
wire    grp_rms_norm_24_s_fu_336_ap_ready;
wire   [4:0] grp_rms_norm_24_s_fu_336_input_0_V_address0;
wire    grp_rms_norm_24_s_fu_336_input_0_V_ce0;
wire    grp_rms_norm_24_s_fu_336_input_0_V_we0;
wire   [39:0] grp_rms_norm_24_s_fu_336_input_0_V_d0;
reg   [39:0] grp_rms_norm_24_s_fu_336_input_0_V_q0;
wire   [4:0] grp_rms_norm_24_s_fu_336_weight_V_address0;
wire    grp_rms_norm_24_s_fu_336_weight_V_ce0;
reg   [39:0] grp_rms_norm_24_s_fu_336_weight_V_q0;
wire    grp_softmax_1_2_6_s_fu_345_ap_start;
wire    grp_softmax_1_2_6_s_fu_345_ap_done;
wire    grp_softmax_1_2_6_s_fu_345_ap_idle;
wire    grp_softmax_1_2_6_s_fu_345_ap_ready;
wire   [3:0] grp_softmax_1_2_6_s_fu_345_input_0_V_address0;
wire    grp_softmax_1_2_6_s_fu_345_input_0_V_ce0;
wire    grp_softmax_1_2_6_s_fu_345_input_0_V_we0;
wire   [39:0] grp_softmax_1_2_6_s_fu_345_input_0_V_d0;
wire    grp_quantize_activation_fu_356_ap_start;
wire    grp_quantize_activation_fu_356_ap_idle;
wire   [4:0] grp_quantize_activation_fu_356_input_0_V_address0;
wire    grp_quantize_activation_fu_356_input_0_V_ce0;
reg   [39:0] grp_quantize_activation_fu_356_input_0_V_q0;
wire   [4:0] grp_quantize_activation_fu_356_input_0_V_address1;
wire    grp_quantize_activation_fu_356_input_0_V_ce1;
reg   [39:0] grp_quantize_activation_fu_356_input_0_V_q1;
wire   [2:0] grp_quantize_activation_fu_356_output_states_0_0_V_address0;
wire    grp_quantize_activation_fu_356_output_states_0_0_V_ce0;
wire    grp_quantize_activation_fu_356_output_states_0_0_V_we0;
wire   [7:0] grp_quantize_activation_fu_356_output_states_0_0_V_d0;
wire   [2:0] grp_quantize_activation_fu_356_output_states_1_0_V_address0;
wire    grp_quantize_activation_fu_356_output_states_1_0_V_ce0;
wire    grp_quantize_activation_fu_356_output_states_1_0_V_we0;
wire   [7:0] grp_quantize_activation_fu_356_output_states_1_0_V_d0;
wire   [2:0] grp_quantize_activation_fu_356_output_states_2_0_V_address0;
wire    grp_quantize_activation_fu_356_output_states_2_0_V_ce0;
wire    grp_quantize_activation_fu_356_output_states_2_0_V_we0;
wire   [7:0] grp_quantize_activation_fu_356_output_states_2_0_V_d0;
wire   [2:0] grp_quantize_activation_fu_356_output_states_3_0_V_address0;
wire    grp_quantize_activation_fu_356_output_states_3_0_V_ce0;
wire    grp_quantize_activation_fu_356_output_states_3_0_V_we0;
wire   [7:0] grp_quantize_activation_fu_356_output_states_3_0_V_d0;
wire    grp_apply_rotary_pos_emb_fu_366_ap_start;
wire    grp_apply_rotary_pos_emb_fu_366_ap_done;
wire    grp_apply_rotary_pos_emb_fu_366_ap_idle;
wire    grp_apply_rotary_pos_emb_fu_366_ap_ready;
wire   [4:0] grp_apply_rotary_pos_emb_fu_366_input_q_0_V_address0;
wire    grp_apply_rotary_pos_emb_fu_366_input_q_0_V_ce0;
wire   [4:0] grp_apply_rotary_pos_emb_fu_366_input_q_0_V_address1;
wire    grp_apply_rotary_pos_emb_fu_366_input_q_0_V_ce1;
wire   [4:0] grp_apply_rotary_pos_emb_fu_366_input_k_0_V_address0;
wire    grp_apply_rotary_pos_emb_fu_366_input_k_0_V_ce0;
wire   [4:0] grp_apply_rotary_pos_emb_fu_366_input_k_0_V_address1;
wire    grp_apply_rotary_pos_emb_fu_366_input_k_0_V_ce1;
wire   [4:0] grp_apply_rotary_pos_emb_fu_366_output_q_0_V_address0;
wire    grp_apply_rotary_pos_emb_fu_366_output_q_0_V_ce0;
wire    grp_apply_rotary_pos_emb_fu_366_output_q_0_V_we0;
wire   [39:0] grp_apply_rotary_pos_emb_fu_366_output_q_0_V_d0;
wire   [4:0] grp_apply_rotary_pos_emb_fu_366_output_k_0_V_address0;
wire    grp_apply_rotary_pos_emb_fu_366_output_k_0_V_ce0;
wire    grp_apply_rotary_pos_emb_fu_366_output_k_0_V_we0;
wire   [39:0] grp_apply_rotary_pos_emb_fu_366_output_k_0_V_d0;
wire    grp_GEMM_3D_float_1_fu_378_ap_start;
wire    grp_GEMM_3D_float_1_fu_378_ap_done;
wire    grp_GEMM_3D_float_1_fu_378_ap_idle;
wire    grp_GEMM_3D_float_1_fu_378_ap_ready;
wire   [4:0] grp_GEMM_3D_float_1_fu_378_input_1_0_V_address0;
wire    grp_GEMM_3D_float_1_fu_378_input_1_0_V_ce0;
wire   [7:0] grp_GEMM_3D_float_1_fu_378_input_2_V_address0;
wire    grp_GEMM_3D_float_1_fu_378_input_2_V_ce0;
wire   [3:0] grp_GEMM_3D_float_1_fu_378_output_0_V_address0;
wire    grp_GEMM_3D_float_1_fu_378_output_0_V_ce0;
wire    grp_GEMM_3D_float_1_fu_378_output_0_V_we0;
wire   [39:0] grp_GEMM_3D_float_1_fu_378_output_0_V_d0;
wire    grp_GEMM_3D_float_fu_385_ap_start;
wire    grp_GEMM_3D_float_fu_385_ap_done;
wire    grp_GEMM_3D_float_fu_385_ap_idle;
wire    grp_GEMM_3D_float_fu_385_ap_ready;
wire   [3:0] grp_GEMM_3D_float_fu_385_input_1_0_V_address0;
wire    grp_GEMM_3D_float_fu_385_input_1_0_V_ce0;
wire   [7:0] grp_GEMM_3D_float_fu_385_input_2_V_address0;
wire    grp_GEMM_3D_float_fu_385_input_2_V_ce0;
wire   [4:0] grp_GEMM_3D_float_fu_385_output_0_V_address0;
wire    grp_GEMM_3D_float_fu_385_output_0_V_ce0;
wire    grp_GEMM_3D_float_fu_385_output_0_V_we0;
wire   [39:0] grp_GEMM_3D_float_fu_385_output_0_V_d0;
wire    grp_cache_update_1_fu_392_ap_start;
wire    grp_cache_update_1_fu_392_ap_done;
wire    grp_cache_update_1_fu_392_ap_idle;
wire    grp_cache_update_1_fu_392_ap_ready;
wire   [7:0] grp_cache_update_1_fu_392_cache_out_V_address0;
wire    grp_cache_update_1_fu_392_cache_out_V_ce0;
wire    grp_cache_update_1_fu_392_cache_out_V_we0;
wire   [39:0] grp_cache_update_1_fu_392_cache_out_V_d0;
wire   [4:0] grp_cache_update_1_fu_392_update_0_V_address0;
wire    grp_cache_update_1_fu_392_update_0_V_ce0;
wire    grp_cache_update_fu_400_ap_start;
wire    grp_cache_update_fu_400_ap_done;
wire    grp_cache_update_fu_400_ap_idle;
wire    grp_cache_update_fu_400_ap_ready;
wire   [7:0] grp_cache_update_fu_400_cache_out_V_address0;
wire    grp_cache_update_fu_400_cache_out_V_ce0;
wire    grp_cache_update_fu_400_cache_out_V_we0;
wire   [39:0] grp_cache_update_fu_400_cache_out_V_d0;
wire   [4:0] grp_cache_update_fu_400_update_0_V_address0;
wire    grp_cache_update_fu_400_update_0_V_ce0;
wire    grp_transpose_last_two_d_fu_408_ap_start;
wire    grp_transpose_last_two_d_fu_408_ap_done;
wire    grp_transpose_last_two_d_fu_408_ap_idle;
wire    grp_transpose_last_two_d_fu_408_ap_ready;
wire   [7:0] grp_transpose_last_two_d_fu_408_input_V_address0;
wire    grp_transpose_last_two_d_fu_408_input_V_ce0;
wire   [7:0] grp_transpose_last_two_d_fu_408_output_V_address0;
wire    grp_transpose_last_two_d_fu_408_output_V_ce0;
wire    grp_transpose_last_two_d_fu_408_output_V_we0;
wire   [39:0] grp_transpose_last_two_d_fu_408_output_V_d0;
wire    grp_reshape_2D_to_3D_fu_414_ap_start;
wire    grp_reshape_2D_to_3D_fu_414_ap_done;
wire    grp_reshape_2D_to_3D_fu_414_ap_idle;
wire    grp_reshape_2D_to_3D_fu_414_ap_ready;
wire   [4:0] grp_reshape_2D_to_3D_fu_414_input_0_V_address0;
wire    grp_reshape_2D_to_3D_fu_414_input_0_V_ce0;
reg   [39:0] grp_reshape_2D_to_3D_fu_414_input_0_V_q0;
wire   [4:0] grp_reshape_2D_to_3D_fu_414_output_0_V_address0;
wire    grp_reshape_2D_to_3D_fu_414_output_0_V_ce0;
wire    grp_reshape_2D_to_3D_fu_414_output_0_V_we0;
wire   [39:0] grp_reshape_2D_to_3D_fu_414_output_0_V_d0;
wire    grp_init_3d_mem_fu_420_ap_start;
wire    grp_init_3d_mem_fu_420_ap_done;
wire    grp_init_3d_mem_fu_420_ap_idle;
wire    grp_init_3d_mem_fu_420_ap_ready;
wire   [2:0] grp_init_3d_mem_fu_420_mem_0_0_V_address0;
wire    grp_init_3d_mem_fu_420_mem_0_0_V_ce0;
wire    grp_init_3d_mem_fu_420_mem_0_0_V_we0;
wire   [7:0] grp_init_3d_mem_fu_420_mem_0_0_V_d0;
wire   [2:0] grp_init_3d_mem_fu_420_mem_1_0_V_address0;
wire    grp_init_3d_mem_fu_420_mem_1_0_V_ce0;
wire    grp_init_3d_mem_fu_420_mem_1_0_V_we0;
wire   [7:0] grp_init_3d_mem_fu_420_mem_1_0_V_d0;
wire   [2:0] grp_init_3d_mem_fu_420_mem_2_0_V_address0;
wire    grp_init_3d_mem_fu_420_mem_2_0_V_ce0;
wire    grp_init_3d_mem_fu_420_mem_2_0_V_we0;
wire   [7:0] grp_init_3d_mem_fu_420_mem_2_0_V_d0;
wire   [2:0] grp_init_3d_mem_fu_420_mem_3_0_V_address0;
wire    grp_init_3d_mem_fu_420_mem_3_0_V_ce0;
wire    grp_init_3d_mem_fu_420_mem_3_0_V_we0;
wire   [7:0] grp_init_3d_mem_fu_420_mem_3_0_V_d0;
wire    grp_init_2d_mem_fu_432_ap_start;
wire    grp_init_2d_mem_fu_432_ap_done;
wire    grp_init_2d_mem_fu_432_ap_idle;
wire    grp_init_2d_mem_fu_432_ap_ready;
wire   [4:0] grp_init_2d_mem_fu_432_mem_0_V_address0;
wire    grp_init_2d_mem_fu_432_mem_0_V_ce0;
wire    grp_init_2d_mem_fu_432_mem_0_V_we0;
wire   [39:0] grp_init_2d_mem_fu_432_mem_0_V_d0;
wire    grp_init_2d_mem_fu_438_ap_start;
wire    grp_init_2d_mem_fu_438_ap_done;
wire    grp_init_2d_mem_fu_438_ap_idle;
wire    grp_init_2d_mem_fu_438_ap_ready;
wire   [4:0] grp_init_2d_mem_fu_438_mem_0_V_address0;
wire    grp_init_2d_mem_fu_438_mem_0_V_ce0;
wire    grp_init_2d_mem_fu_438_mem_0_V_we0;
wire   [39:0] grp_init_2d_mem_fu_438_mem_0_V_d0;
wire    grp_init_2d_mem_fu_444_ap_start;
wire    grp_init_2d_mem_fu_444_ap_done;
wire    grp_init_2d_mem_fu_444_ap_idle;
wire    grp_init_2d_mem_fu_444_ap_ready;
wire   [4:0] grp_init_2d_mem_fu_444_mem_0_V_address0;
wire    grp_init_2d_mem_fu_444_mem_0_V_ce0;
wire    grp_init_2d_mem_fu_444_mem_0_V_we0;
wire   [39:0] grp_init_2d_mem_fu_444_mem_0_V_d0;
reg   [1:0] h_0_reg_271;
wire    ap_CS_fsm_state18;
reg   [2:0] d_0_0_reg_282;
wire    ap_CS_fsm_state26;
reg   [1:0] h106_0_0_reg_293;
wire    ap_CS_fsm_state29;
reg   [3:0] d107_0_0_reg_304;
wire    ap_CS_fsm_state32;
reg    grp_linear_forward_no_mu_fu_315_ap_start_reg;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state37;
reg    grp_rms_norm_24_s_fu_336_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state33;
reg    grp_softmax_1_2_6_s_fu_345_ap_start_reg;
wire    ap_CS_fsm_state27;
reg    grp_quantize_activation_fu_356_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state34;
reg    grp_apply_rotary_pos_emb_fu_366_ap_start_reg;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
reg    grp_GEMM_3D_float_1_fu_378_ap_start_reg;
wire    ap_CS_fsm_state17;
reg    grp_GEMM_3D_float_fu_385_ap_start_reg;
wire    ap_CS_fsm_state28;
reg    grp_cache_update_1_fu_392_ap_start_reg;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
reg    grp_cache_update_fu_400_ap_start_reg;
reg    grp_transpose_last_two_d_fu_408_ap_start_reg;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
reg    grp_reshape_2D_to_3D_fu_414_ap_start_reg;
reg    grp_init_3d_mem_fu_420_ap_start_reg;
reg    grp_init_2d_mem_fu_432_ap_start_reg;
reg    grp_init_2d_mem_fu_438_ap_start_reg;
reg    grp_init_2d_mem_fu_444_ap_start_reg;
wire  signed [63:0] sext_ln1265_fu_515_p1;
wire  signed [63:0] sext_ln203_fu_694_p1;
wire   [63:0] zext_ln213_1_fu_702_p1;
wire   [39:0] select_ln1148_2_fu_588_p3;
wire   [2:0] tmp_68_fu_476_p3;
wire   [4:0] tmp_67_fu_468_p3;
wire   [4:0] zext_ln1265_fu_484_p1;
wire   [4:0] zext_ln1265_2_fu_506_p1;
wire   [4:0] add_ln1265_fu_510_p2;
wire  signed [55:0] shl_ln2_fu_528_p3;
wire   [57:0] grp_fu_539_p0;
wire   [112:0] sub_ln1148_fu_555_p2;
wire   [38:0] tmp_87_fu_560_p4;
wire  signed [39:0] sext_ln703_fu_576_p1;
wire   [39:0] sub_ln703_fu_579_p2;
wire  signed [39:0] sext_ln703_6_fu_585_p1;
wire   [0:0] trunc_ln213_fu_608_p1;
wire   [4:0] shl_ln_fu_612_p3;
wire   [2:0] shl_ln213_1_fu_624_p3;
wire   [5:0] zext_ln213_fu_620_p1;
wire   [5:0] zext_ln213_2_fu_632_p1;
wire   [3:0] tmp_70_fu_650_p3;
wire   [5:0] tmp_69_fu_642_p3;
wire   [5:0] zext_ln203_fu_658_p1;
wire   [5:0] zext_ln212_fu_668_p1;
wire   [5:0] add_ln203_fu_689_p2;
wire  signed [31:0] sext_ln213_fu_699_p1;
reg   [36:0] ap_NS_fsm;
reg    ap_block_state2_on_subcall_done;
reg    ap_block_state8_on_subcall_done;
reg    ap_block_state10_on_subcall_done;
reg    ap_block_state12_on_subcall_done;
reg    ap_block_state14_on_subcall_done;
reg    ap_block_state27_on_subcall_done;
reg    ap_block_state33_on_subcall_done;

// power-on initialization
initial begin
#0 ap_CS_fsm = 37'd1;
#0 grp_linear_forward_no_mu_fu_315_ap_start_reg = 1'b0;
#0 grp_rms_norm_24_s_fu_336_ap_start_reg = 1'b0;
#0 grp_softmax_1_2_6_s_fu_345_ap_start_reg = 1'b0;
#0 grp_quantize_activation_fu_356_ap_start_reg = 1'b0;
#0 grp_apply_rotary_pos_emb_fu_366_ap_start_reg = 1'b0;
#0 grp_GEMM_3D_float_1_fu_378_ap_start_reg = 1'b0;
#0 grp_GEMM_3D_float_fu_385_ap_start_reg = 1'b0;
#0 grp_cache_update_1_fu_392_ap_start_reg = 1'b0;
#0 grp_cache_update_fu_400_ap_start_reg = 1'b0;
#0 grp_transpose_last_two_d_fu_408_ap_start_reg = 1'b0;
#0 grp_reshape_2D_to_3D_fu_414_ap_start_reg = 1'b0;
#0 grp_init_3d_mem_fu_420_ap_start_reg = 1'b0;
#0 grp_init_2d_mem_fu_432_ap_start_reg = 1'b0;
#0 grp_init_2d_mem_fu_438_ap_start_reg = 1'b0;
#0 grp_init_2d_mem_fu_444_ap_start_reg = 1'b0;
end

attention_ln_weigsc4 #(
    .DataWidth( 40 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
ln_weight_in_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_rms_norm_24_s_fu_336_weight_V_address0),
    .ce0(ln_weight_in_V_ce0),
    .q0(ln_weight_in_V_q0)
);

attention_q_weights #(
    .DataWidth( 8 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
q_weights_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_linear_forward_no_mu_fu_315_packed_weights_address0),
    .ce0(q_weights_ce0),
    .q0(q_weights_q0)
);

attention_k_weights #(
    .DataWidth( 8 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
k_weights_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_linear_forward_no_mu_fu_315_packed_weights_address0),
    .ce0(k_weights_ce0),
    .q0(k_weights_q0)
);

attention_v_weights #(
    .DataWidth( 8 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
v_weights_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_linear_forward_no_mu_fu_315_packed_weights_address0),
    .ce0(v_weights_ce0),
    .q0(v_weights_q0)
);

attention_ln_weigtde #(
    .DataWidth( 40 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
ln_weight_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_rms_norm_24_s_fu_336_weight_V_address0),
    .ce0(ln_weight_V_ce0),
    .q0(ln_weight_V_q0)
);

attention_o_weights #(
    .DataWidth( 8 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
o_weights_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_linear_forward_no_mu_fu_315_packed_weights_address0),
    .ce0(o_weights_ce0),
    .q0(o_weights_q0)
);

attention_quantizudo #(
    .DataWidth( 8 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
quantized_hidden_sta_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(quantized_hidden_sta_address0),
    .ce0(quantized_hidden_sta_ce0),
    .we0(quantized_hidden_sta_we0),
    .d0(quantized_hidden_sta_d0),
    .q0(quantized_hidden_sta_q0)
);

attention_quantizudo #(
    .DataWidth( 8 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
quantized_hidden_sta_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(quantized_hidden_sta_1_address0),
    .ce0(quantized_hidden_sta_1_ce0),
    .we0(quantized_hidden_sta_1_we0),
    .d0(quantized_hidden_sta_1_d0),
    .q0(quantized_hidden_sta_1_q0)
);

attention_quantizudo #(
    .DataWidth( 8 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
quantized_hidden_sta_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(quantized_hidden_sta_2_address0),
    .ce0(quantized_hidden_sta_2_ce0),
    .we0(quantized_hidden_sta_2_we0),
    .d0(quantized_hidden_sta_2_d0),
    .q0(quantized_hidden_sta_2_q0)
);

attention_quantizudo #(
    .DataWidth( 8 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
quantized_hidden_sta_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(quantized_hidden_sta_3_address0),
    .ce0(quantized_hidden_sta_3_ce0),
    .we0(quantized_hidden_sta_3_we0),
    .d0(quantized_hidden_sta_3_d0),
    .q0(quantized_hidden_sta_3_q0)
);

apply_rotary_pos_ibs #(
    .DataWidth( 40 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
q_proj_re_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(q_proj_re_0_V_address0),
    .ce0(q_proj_re_0_V_ce0),
    .we0(q_proj_re_0_V_we0),
    .d0(q_proj_re_0_V_d0),
    .q0(q_proj_re_0_V_q0),
    .address1(grp_linear_forward_no_mu_fu_315_output_0_V_address1),
    .ce1(q_proj_re_0_V_ce1),
    .we1(q_proj_re_0_V_we1),
    .d1(grp_linear_forward_no_mu_fu_315_output_0_V_d1)
);

apply_rotary_pos_ibs #(
    .DataWidth( 40 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
k_proj_re_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_proj_re_0_V_address0),
    .ce0(k_proj_re_0_V_ce0),
    .we0(k_proj_re_0_V_we0),
    .d0(k_proj_re_0_V_d0),
    .q0(k_proj_re_0_V_q0),
    .address1(grp_linear_forward_no_mu_fu_315_output_0_V_address1),
    .ce1(k_proj_re_0_V_ce1),
    .we1(k_proj_re_0_V_we1),
    .d1(grp_linear_forward_no_mu_fu_315_output_0_V_d1)
);

apply_rotary_pos_ibs #(
    .DataWidth( 40 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
v_proj_re_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(v_proj_re_0_V_address0),
    .ce0(v_proj_re_0_V_ce0),
    .we0(v_proj_re_0_V_we0),
    .d0(v_proj_re_0_V_d0),
    .q0(v_proj_re_0_V_q0),
    .address1(grp_linear_forward_no_mu_fu_315_output_0_V_address1),
    .ce1(v_proj_re_0_V_ce1),
    .we1(v_proj_re_0_V_we1),
    .d1(grp_linear_forward_no_mu_fu_315_output_0_V_d1)
);

attention_q_proj_Bew #(
    .DataWidth( 40 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
q_proj_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(q_proj_0_V_address0),
    .ce0(q_proj_0_V_ce0),
    .we0(q_proj_0_V_we0),
    .d0(grp_reshape_2D_to_3D_fu_414_output_0_V_d0),
    .q0(q_proj_0_V_q0),
    .address1(grp_apply_rotary_pos_emb_fu_366_input_q_0_V_address1),
    .ce1(q_proj_0_V_ce1),
    .q1(q_proj_0_V_q1)
);

attention_q_proj_Bew #(
    .DataWidth( 40 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
k_proj_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_proj_0_V_address0),
    .ce0(k_proj_0_V_ce0),
    .we0(k_proj_0_V_we0),
    .d0(grp_reshape_2D_to_3D_fu_414_output_0_V_d0),
    .q0(k_proj_0_V_q0),
    .address1(grp_apply_rotary_pos_emb_fu_366_input_k_0_V_address1),
    .ce1(k_proj_0_V_ce1),
    .q1(k_proj_0_V_q1)
);

attention_v_proj_DeQ #(
    .DataWidth( 40 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
v_proj_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(v_proj_0_V_address0),
    .ce0(v_proj_0_V_ce0),
    .we0(v_proj_0_V_we0),
    .d0(grp_reshape_2D_to_3D_fu_414_output_0_V_d0),
    .q0(v_proj_0_V_q0)
);

attention_v_proj_DeQ #(
    .DataWidth( 40 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
q_embed_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(q_embed_0_V_address0),
    .ce0(q_embed_0_V_ce0),
    .we0(q_embed_0_V_we0),
    .d0(grp_apply_rotary_pos_emb_fu_366_output_q_0_V_d0),
    .q0(q_embed_0_V_q0)
);

attention_v_proj_DeQ #(
    .DataWidth( 40 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
k_embed_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_embed_0_V_address0),
    .ce0(k_embed_0_V_ce0),
    .we0(k_embed_0_V_we0),
    .d0(grp_apply_rotary_pos_emb_fu_366_output_k_0_V_d0),
    .q0(k_embed_0_V_q0)
);

attention_k_cacheGfk #(
    .DataWidth( 40 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
k_cache_upd_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_cache_upd_V_address0),
    .ce0(k_cache_upd_V_ce0),
    .we0(k_cache_upd_V_we0),
    .d0(grp_cache_update_fu_400_cache_out_V_d0),
    .q0(k_cache_upd_V_q0)
);

attention_k_cacheGfk #(
    .DataWidth( 40 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
v_cache_upd_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(v_cache_upd_V_address0),
    .ce0(v_cache_upd_V_ce0),
    .we0(v_cache_upd_V_we0),
    .d0(grp_cache_update_1_fu_392_cache_out_V_d0),
    .q0(v_cache_upd_V_q0)
);

attention_k_cacheGfk #(
    .DataWidth( 40 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
k_proj_transposed_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_proj_transposed_V_address0),
    .ce0(k_proj_transposed_V_ce0),
    .we0(k_proj_transposed_V_we0),
    .d0(grp_transpose_last_two_d_fu_408_output_V_d0),
    .q0(k_proj_transposed_V_q0)
);

attention_attn_weJfO #(
    .DataWidth( 40 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
attn_weights_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(attn_weights_0_V_address0),
    .ce0(attn_weights_0_V_ce0),
    .we0(attn_weights_0_V_we0),
    .d0(attn_weights_0_V_d0),
    .q0(attn_weights_0_V_q0)
);

attention_v_proj_DeQ #(
    .DataWidth( 40 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
attn_output_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(attn_output_0_address0),
    .ce0(attn_output_0_ce0),
    .we0(attn_output_0_we0),
    .d0(grp_GEMM_3D_float_fu_385_output_0_V_d0),
    .q0(attn_output_0_q0)
);

attention_q_proj_Bew #(
    .DataWidth( 40 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
attn_output_2D_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(attn_output_2D_0_V_address0),
    .ce0(attn_output_2D_0_V_ce0),
    .we0(attn_output_2D_0_V_we0),
    .d0(attn_output_2D_0_V_d0),
    .q0(attn_output_2D_0_V_q0),
    .address1(grp_quantize_activation_fu_356_input_0_V_address1),
    .ce1(attn_output_2D_0_V_ce1),
    .q1(attn_output_2D_0_V_q1)
);

attention_quantizudo #(
    .DataWidth( 8 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
quantized_final_outp_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(quantized_final_outp_address0),
    .ce0(quantized_final_outp_ce0),
    .we0(quantized_final_outp_we0),
    .d0(quantized_final_outp_d0),
    .q0(quantized_final_outp_q0)
);

attention_quantizudo #(
    .DataWidth( 8 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
quantized_final_outp_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(quantized_final_outp_1_address0),
    .ce0(quantized_final_outp_1_ce0),
    .we0(quantized_final_outp_1_we0),
    .d0(quantized_final_outp_1_d0),
    .q0(quantized_final_outp_1_q0)
);

attention_quantizudo #(
    .DataWidth( 8 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
quantized_final_outp_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(quantized_final_outp_2_address0),
    .ce0(quantized_final_outp_2_ce0),
    .we0(quantized_final_outp_2_we0),
    .d0(quantized_final_outp_2_d0),
    .q0(quantized_final_outp_2_q0)
);

attention_quantizudo #(
    .DataWidth( 8 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
quantized_final_outp_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(quantized_final_outp_3_address0),
    .ce0(quantized_final_outp_3_ce0),
    .we0(quantized_final_outp_3_we0),
    .d0(quantized_final_outp_3_d0),
    .q0(quantized_final_outp_3_q0)
);

linear_forward_no_mu grp_linear_forward_no_mu_fu_315(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_linear_forward_no_mu_fu_315_ap_start),
    .ap_done(grp_linear_forward_no_mu_fu_315_ap_done),
    .ap_idle(grp_linear_forward_no_mu_fu_315_ap_idle),
    .ap_ready(grp_linear_forward_no_mu_fu_315_ap_ready),
    .input_0_0_V_address0(grp_linear_forward_no_mu_fu_315_input_0_0_V_address0),
    .input_0_0_V_ce0(grp_linear_forward_no_mu_fu_315_input_0_0_V_ce0),
    .input_0_0_V_q0(grp_linear_forward_no_mu_fu_315_input_0_0_V_q0),
    .input_1_0_V_address0(grp_linear_forward_no_mu_fu_315_input_1_0_V_address0),
    .input_1_0_V_ce0(grp_linear_forward_no_mu_fu_315_input_1_0_V_ce0),
    .input_1_0_V_q0(grp_linear_forward_no_mu_fu_315_input_1_0_V_q0),
    .input_2_0_V_address0(grp_linear_forward_no_mu_fu_315_input_2_0_V_address0),
    .input_2_0_V_ce0(grp_linear_forward_no_mu_fu_315_input_2_0_V_ce0),
    .input_2_0_V_q0(grp_linear_forward_no_mu_fu_315_input_2_0_V_q0),
    .input_3_0_V_address0(grp_linear_forward_no_mu_fu_315_input_3_0_V_address0),
    .input_3_0_V_ce0(grp_linear_forward_no_mu_fu_315_input_3_0_V_ce0),
    .input_3_0_V_q0(grp_linear_forward_no_mu_fu_315_input_3_0_V_q0),
    .output_0_V_address0(grp_linear_forward_no_mu_fu_315_output_0_V_address0),
    .output_0_V_ce0(grp_linear_forward_no_mu_fu_315_output_0_V_ce0),
    .output_0_V_we0(grp_linear_forward_no_mu_fu_315_output_0_V_we0),
    .output_0_V_d0(grp_linear_forward_no_mu_fu_315_output_0_V_d0),
    .output_0_V_q0(grp_linear_forward_no_mu_fu_315_output_0_V_q0),
    .output_0_V_address1(grp_linear_forward_no_mu_fu_315_output_0_V_address1),
    .output_0_V_ce1(grp_linear_forward_no_mu_fu_315_output_0_V_ce1),
    .output_0_V_we1(grp_linear_forward_no_mu_fu_315_output_0_V_we1),
    .output_0_V_d1(grp_linear_forward_no_mu_fu_315_output_0_V_d1),
    .scales_0_V_read(reg_451),
    .packed_weights_address0(grp_linear_forward_no_mu_fu_315_packed_weights_address0),
    .packed_weights_ce0(grp_linear_forward_no_mu_fu_315_packed_weights_ce0),
    .packed_weights_q0(grp_linear_forward_no_mu_fu_315_packed_weights_q0),
    .w_scale_V(grp_linear_forward_no_mu_fu_315_w_scale_V)
);

rms_norm_24_s grp_rms_norm_24_s_fu_336(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_rms_norm_24_s_fu_336_ap_start),
    .ap_done(grp_rms_norm_24_s_fu_336_ap_done),
    .ap_idle(grp_rms_norm_24_s_fu_336_ap_idle),
    .ap_ready(grp_rms_norm_24_s_fu_336_ap_ready),
    .input_0_V_address0(grp_rms_norm_24_s_fu_336_input_0_V_address0),
    .input_0_V_ce0(grp_rms_norm_24_s_fu_336_input_0_V_ce0),
    .input_0_V_we0(grp_rms_norm_24_s_fu_336_input_0_V_we0),
    .input_0_V_d0(grp_rms_norm_24_s_fu_336_input_0_V_d0),
    .input_0_V_q0(grp_rms_norm_24_s_fu_336_input_0_V_q0),
    .weight_V_address0(grp_rms_norm_24_s_fu_336_weight_V_address0),
    .weight_V_ce0(grp_rms_norm_24_s_fu_336_weight_V_ce0),
    .weight_V_q0(grp_rms_norm_24_s_fu_336_weight_V_q0)
);

softmax_1_2_6_s grp_softmax_1_2_6_s_fu_345(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_softmax_1_2_6_s_fu_345_ap_start),
    .ap_done(grp_softmax_1_2_6_s_fu_345_ap_done),
    .ap_idle(grp_softmax_1_2_6_s_fu_345_ap_idle),
    .ap_ready(grp_softmax_1_2_6_s_fu_345_ap_ready),
    .input_0_V_address0(grp_softmax_1_2_6_s_fu_345_input_0_V_address0),
    .input_0_V_ce0(grp_softmax_1_2_6_s_fu_345_input_0_V_ce0),
    .input_0_V_we0(grp_softmax_1_2_6_s_fu_345_input_0_V_we0),
    .input_0_V_d0(grp_softmax_1_2_6_s_fu_345_input_0_V_d0),
    .input_0_V_q0(attn_weights_0_V_q0)
);

quantize_activation grp_quantize_activation_fu_356(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_quantize_activation_fu_356_ap_start),
    .ap_done(grp_quantize_activation_fu_356_ap_done),
    .ap_idle(grp_quantize_activation_fu_356_ap_idle),
    .ap_ready(grp_quantize_activation_fu_356_ap_ready),
    .input_0_V_address0(grp_quantize_activation_fu_356_input_0_V_address0),
    .input_0_V_ce0(grp_quantize_activation_fu_356_input_0_V_ce0),
    .input_0_V_q0(grp_quantize_activation_fu_356_input_0_V_q0),
    .input_0_V_address1(grp_quantize_activation_fu_356_input_0_V_address1),
    .input_0_V_ce1(grp_quantize_activation_fu_356_input_0_V_ce1),
    .input_0_V_q1(grp_quantize_activation_fu_356_input_0_V_q1),
    .output_states_0_0_V_address0(grp_quantize_activation_fu_356_output_states_0_0_V_address0),
    .output_states_0_0_V_ce0(grp_quantize_activation_fu_356_output_states_0_0_V_ce0),
    .output_states_0_0_V_we0(grp_quantize_activation_fu_356_output_states_0_0_V_we0),
    .output_states_0_0_V_d0(grp_quantize_activation_fu_356_output_states_0_0_V_d0),
    .output_states_1_0_V_address0(grp_quantize_activation_fu_356_output_states_1_0_V_address0),
    .output_states_1_0_V_ce0(grp_quantize_activation_fu_356_output_states_1_0_V_ce0),
    .output_states_1_0_V_we0(grp_quantize_activation_fu_356_output_states_1_0_V_we0),
    .output_states_1_0_V_d0(grp_quantize_activation_fu_356_output_states_1_0_V_d0),
    .output_states_2_0_V_address0(grp_quantize_activation_fu_356_output_states_2_0_V_address0),
    .output_states_2_0_V_ce0(grp_quantize_activation_fu_356_output_states_2_0_V_ce0),
    .output_states_2_0_V_we0(grp_quantize_activation_fu_356_output_states_2_0_V_we0),
    .output_states_2_0_V_d0(grp_quantize_activation_fu_356_output_states_2_0_V_d0),
    .output_states_3_0_V_address0(grp_quantize_activation_fu_356_output_states_3_0_V_address0),
    .output_states_3_0_V_ce0(grp_quantize_activation_fu_356_output_states_3_0_V_ce0),
    .output_states_3_0_V_we0(grp_quantize_activation_fu_356_output_states_3_0_V_we0),
    .output_states_3_0_V_d0(grp_quantize_activation_fu_356_output_states_3_0_V_d0),
    .ap_return(grp_quantize_activation_fu_356_ap_return)
);

apply_rotary_pos_emb grp_apply_rotary_pos_emb_fu_366(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_apply_rotary_pos_emb_fu_366_ap_start),
    .ap_done(grp_apply_rotary_pos_emb_fu_366_ap_done),
    .ap_idle(grp_apply_rotary_pos_emb_fu_366_ap_idle),
    .ap_ready(grp_apply_rotary_pos_emb_fu_366_ap_ready),
    .input_q_0_V_address0(grp_apply_rotary_pos_emb_fu_366_input_q_0_V_address0),
    .input_q_0_V_ce0(grp_apply_rotary_pos_emb_fu_366_input_q_0_V_ce0),
    .input_q_0_V_q0(q_proj_0_V_q0),
    .input_q_0_V_address1(grp_apply_rotary_pos_emb_fu_366_input_q_0_V_address1),
    .input_q_0_V_ce1(grp_apply_rotary_pos_emb_fu_366_input_q_0_V_ce1),
    .input_q_0_V_q1(q_proj_0_V_q1),
    .input_k_0_V_address0(grp_apply_rotary_pos_emb_fu_366_input_k_0_V_address0),
    .input_k_0_V_ce0(grp_apply_rotary_pos_emb_fu_366_input_k_0_V_ce0),
    .input_k_0_V_q0(k_proj_0_V_q0),
    .input_k_0_V_address1(grp_apply_rotary_pos_emb_fu_366_input_k_0_V_address1),
    .input_k_0_V_ce1(grp_apply_rotary_pos_emb_fu_366_input_k_0_V_ce1),
    .input_k_0_V_q1(k_proj_0_V_q1),
    .output_q_0_V_address0(grp_apply_rotary_pos_emb_fu_366_output_q_0_V_address0),
    .output_q_0_V_ce0(grp_apply_rotary_pos_emb_fu_366_output_q_0_V_ce0),
    .output_q_0_V_we0(grp_apply_rotary_pos_emb_fu_366_output_q_0_V_we0),
    .output_q_0_V_d0(grp_apply_rotary_pos_emb_fu_366_output_q_0_V_d0),
    .output_k_0_V_address0(grp_apply_rotary_pos_emb_fu_366_output_k_0_V_address0),
    .output_k_0_V_ce0(grp_apply_rotary_pos_emb_fu_366_output_k_0_V_ce0),
    .output_k_0_V_we0(grp_apply_rotary_pos_emb_fu_366_output_k_0_V_we0),
    .output_k_0_V_d0(grp_apply_rotary_pos_emb_fu_366_output_k_0_V_d0)
);

GEMM_3D_float_1 grp_GEMM_3D_float_1_fu_378(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GEMM_3D_float_1_fu_378_ap_start),
    .ap_done(grp_GEMM_3D_float_1_fu_378_ap_done),
    .ap_idle(grp_GEMM_3D_float_1_fu_378_ap_idle),
    .ap_ready(grp_GEMM_3D_float_1_fu_378_ap_ready),
    .input_1_0_V_address0(grp_GEMM_3D_float_1_fu_378_input_1_0_V_address0),
    .input_1_0_V_ce0(grp_GEMM_3D_float_1_fu_378_input_1_0_V_ce0),
    .input_1_0_V_q0(q_embed_0_V_q0),
    .input_2_V_address0(grp_GEMM_3D_float_1_fu_378_input_2_V_address0),
    .input_2_V_ce0(grp_GEMM_3D_float_1_fu_378_input_2_V_ce0),
    .input_2_V_q0(k_proj_transposed_V_q0),
    .output_0_V_address0(grp_GEMM_3D_float_1_fu_378_output_0_V_address0),
    .output_0_V_ce0(grp_GEMM_3D_float_1_fu_378_output_0_V_ce0),
    .output_0_V_we0(grp_GEMM_3D_float_1_fu_378_output_0_V_we0),
    .output_0_V_d0(grp_GEMM_3D_float_1_fu_378_output_0_V_d0)
);

GEMM_3D_float grp_GEMM_3D_float_fu_385(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GEMM_3D_float_fu_385_ap_start),
    .ap_done(grp_GEMM_3D_float_fu_385_ap_done),
    .ap_idle(grp_GEMM_3D_float_fu_385_ap_idle),
    .ap_ready(grp_GEMM_3D_float_fu_385_ap_ready),
    .input_1_0_V_address0(grp_GEMM_3D_float_fu_385_input_1_0_V_address0),
    .input_1_0_V_ce0(grp_GEMM_3D_float_fu_385_input_1_0_V_ce0),
    .input_1_0_V_q0(attn_weights_0_V_q0),
    .input_2_V_address0(grp_GEMM_3D_float_fu_385_input_2_V_address0),
    .input_2_V_ce0(grp_GEMM_3D_float_fu_385_input_2_V_ce0),
    .input_2_V_q0(v_cache_upd_V_q0),
    .output_0_V_address0(grp_GEMM_3D_float_fu_385_output_0_V_address0),
    .output_0_V_ce0(grp_GEMM_3D_float_fu_385_output_0_V_ce0),
    .output_0_V_we0(grp_GEMM_3D_float_fu_385_output_0_V_we0),
    .output_0_V_d0(grp_GEMM_3D_float_fu_385_output_0_V_d0)
);

cache_update_1 grp_cache_update_1_fu_392(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_cache_update_1_fu_392_ap_start),
    .ap_done(grp_cache_update_1_fu_392_ap_done),
    .ap_idle(grp_cache_update_1_fu_392_ap_idle),
    .ap_ready(grp_cache_update_1_fu_392_ap_ready),
    .cache_out_V_address0(grp_cache_update_1_fu_392_cache_out_V_address0),
    .cache_out_V_ce0(grp_cache_update_1_fu_392_cache_out_V_ce0),
    .cache_out_V_we0(grp_cache_update_1_fu_392_cache_out_V_we0),
    .cache_out_V_d0(grp_cache_update_1_fu_392_cache_out_V_d0),
    .update_0_V_address0(grp_cache_update_1_fu_392_update_0_V_address0),
    .update_0_V_ce0(grp_cache_update_1_fu_392_update_0_V_ce0),
    .update_0_V_q0(v_proj_0_V_q0)
);

cache_update grp_cache_update_fu_400(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_cache_update_fu_400_ap_start),
    .ap_done(grp_cache_update_fu_400_ap_done),
    .ap_idle(grp_cache_update_fu_400_ap_idle),
    .ap_ready(grp_cache_update_fu_400_ap_ready),
    .cache_out_V_address0(grp_cache_update_fu_400_cache_out_V_address0),
    .cache_out_V_ce0(grp_cache_update_fu_400_cache_out_V_ce0),
    .cache_out_V_we0(grp_cache_update_fu_400_cache_out_V_we0),
    .cache_out_V_d0(grp_cache_update_fu_400_cache_out_V_d0),
    .update_0_V_address0(grp_cache_update_fu_400_update_0_V_address0),
    .update_0_V_ce0(grp_cache_update_fu_400_update_0_V_ce0),
    .update_0_V_q0(k_embed_0_V_q0)
);

transpose_last_two_d grp_transpose_last_two_d_fu_408(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_transpose_last_two_d_fu_408_ap_start),
    .ap_done(grp_transpose_last_two_d_fu_408_ap_done),
    .ap_idle(grp_transpose_last_two_d_fu_408_ap_idle),
    .ap_ready(grp_transpose_last_two_d_fu_408_ap_ready),
    .input_V_address0(grp_transpose_last_two_d_fu_408_input_V_address0),
    .input_V_ce0(grp_transpose_last_two_d_fu_408_input_V_ce0),
    .input_V_q0(k_cache_upd_V_q0),
    .output_V_address0(grp_transpose_last_two_d_fu_408_output_V_address0),
    .output_V_ce0(grp_transpose_last_two_d_fu_408_output_V_ce0),
    .output_V_we0(grp_transpose_last_two_d_fu_408_output_V_we0),
    .output_V_d0(grp_transpose_last_two_d_fu_408_output_V_d0)
);

reshape_2D_to_3D grp_reshape_2D_to_3D_fu_414(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_reshape_2D_to_3D_fu_414_ap_start),
    .ap_done(grp_reshape_2D_to_3D_fu_414_ap_done),
    .ap_idle(grp_reshape_2D_to_3D_fu_414_ap_idle),
    .ap_ready(grp_reshape_2D_to_3D_fu_414_ap_ready),
    .input_0_V_address0(grp_reshape_2D_to_3D_fu_414_input_0_V_address0),
    .input_0_V_ce0(grp_reshape_2D_to_3D_fu_414_input_0_V_ce0),
    .input_0_V_q0(grp_reshape_2D_to_3D_fu_414_input_0_V_q0),
    .output_0_V_address0(grp_reshape_2D_to_3D_fu_414_output_0_V_address0),
    .output_0_V_ce0(grp_reshape_2D_to_3D_fu_414_output_0_V_ce0),
    .output_0_V_we0(grp_reshape_2D_to_3D_fu_414_output_0_V_we0),
    .output_0_V_d0(grp_reshape_2D_to_3D_fu_414_output_0_V_d0)
);

init_3d_mem grp_init_3d_mem_fu_420(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_init_3d_mem_fu_420_ap_start),
    .ap_done(grp_init_3d_mem_fu_420_ap_done),
    .ap_idle(grp_init_3d_mem_fu_420_ap_idle),
    .ap_ready(grp_init_3d_mem_fu_420_ap_ready),
    .mem_0_0_V_address0(grp_init_3d_mem_fu_420_mem_0_0_V_address0),
    .mem_0_0_V_ce0(grp_init_3d_mem_fu_420_mem_0_0_V_ce0),
    .mem_0_0_V_we0(grp_init_3d_mem_fu_420_mem_0_0_V_we0),
    .mem_0_0_V_d0(grp_init_3d_mem_fu_420_mem_0_0_V_d0),
    .mem_1_0_V_address0(grp_init_3d_mem_fu_420_mem_1_0_V_address0),
    .mem_1_0_V_ce0(grp_init_3d_mem_fu_420_mem_1_0_V_ce0),
    .mem_1_0_V_we0(grp_init_3d_mem_fu_420_mem_1_0_V_we0),
    .mem_1_0_V_d0(grp_init_3d_mem_fu_420_mem_1_0_V_d0),
    .mem_2_0_V_address0(grp_init_3d_mem_fu_420_mem_2_0_V_address0),
    .mem_2_0_V_ce0(grp_init_3d_mem_fu_420_mem_2_0_V_ce0),
    .mem_2_0_V_we0(grp_init_3d_mem_fu_420_mem_2_0_V_we0),
    .mem_2_0_V_d0(grp_init_3d_mem_fu_420_mem_2_0_V_d0),
    .mem_3_0_V_address0(grp_init_3d_mem_fu_420_mem_3_0_V_address0),
    .mem_3_0_V_ce0(grp_init_3d_mem_fu_420_mem_3_0_V_ce0),
    .mem_3_0_V_we0(grp_init_3d_mem_fu_420_mem_3_0_V_we0),
    .mem_3_0_V_d0(grp_init_3d_mem_fu_420_mem_3_0_V_d0)
);

init_2d_mem grp_init_2d_mem_fu_432(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_init_2d_mem_fu_432_ap_start),
    .ap_done(grp_init_2d_mem_fu_432_ap_done),
    .ap_idle(grp_init_2d_mem_fu_432_ap_idle),
    .ap_ready(grp_init_2d_mem_fu_432_ap_ready),
    .mem_0_V_address0(grp_init_2d_mem_fu_432_mem_0_V_address0),
    .mem_0_V_ce0(grp_init_2d_mem_fu_432_mem_0_V_ce0),
    .mem_0_V_we0(grp_init_2d_mem_fu_432_mem_0_V_we0),
    .mem_0_V_d0(grp_init_2d_mem_fu_432_mem_0_V_d0)
);

init_2d_mem grp_init_2d_mem_fu_438(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_init_2d_mem_fu_438_ap_start),
    .ap_done(grp_init_2d_mem_fu_438_ap_done),
    .ap_idle(grp_init_2d_mem_fu_438_ap_idle),
    .ap_ready(grp_init_2d_mem_fu_438_ap_ready),
    .mem_0_V_address0(grp_init_2d_mem_fu_438_mem_0_V_address0),
    .mem_0_V_ce0(grp_init_2d_mem_fu_438_mem_0_V_ce0),
    .mem_0_V_we0(grp_init_2d_mem_fu_438_mem_0_V_we0),
    .mem_0_V_d0(grp_init_2d_mem_fu_438_mem_0_V_d0)
);

init_2d_mem grp_init_2d_mem_fu_444(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_init_2d_mem_fu_444_ap_start),
    .ap_done(grp_init_2d_mem_fu_444_ap_done),
    .ap_idle(grp_init_2d_mem_fu_444_ap_idle),
    .ap_ready(grp_init_2d_mem_fu_444_ap_ready),
    .mem_0_V_address0(grp_init_2d_mem_fu_444_mem_0_V_address0),
    .mem_0_V_ce0(grp_init_2d_mem_fu_444_mem_0_V_ce0),
    .mem_0_V_we0(grp_init_2d_mem_fu_444_mem_0_V_we0),
    .mem_0_V_d0(grp_init_2d_mem_fu_444_mem_0_V_d0)
);

dut_mul_58ns_56s_QgW #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 58 ),
    .din1_WIDTH( 56 ),
    .dout_WIDTH( 113 ))
dut_mul_58ns_56s_QgW_U66(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_539_p0),
    .din1(shl_ln2_fu_528_p3),
    .ce(1'b1),
    .dout(grp_fu_539_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_GEMM_3D_float_1_fu_378_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state17)) begin
            grp_GEMM_3D_float_1_fu_378_ap_start_reg <= 1'b1;
        end else if ((grp_GEMM_3D_float_1_fu_378_ap_ready == 1'b1)) begin
            grp_GEMM_3D_float_1_fu_378_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_GEMM_3D_float_fu_385_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state28)) begin
            grp_GEMM_3D_float_fu_385_ap_start_reg <= 1'b1;
        end else if ((grp_GEMM_3D_float_fu_385_ap_ready == 1'b1)) begin
            grp_GEMM_3D_float_fu_385_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_apply_rotary_pos_emb_fu_366_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_apply_rotary_pos_emb_fu_366_ap_start_reg <= 1'b1;
        end else if ((grp_apply_rotary_pos_emb_fu_366_ap_ready == 1'b1)) begin
            grp_apply_rotary_pos_emb_fu_366_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_cache_update_1_fu_392_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_cache_update_1_fu_392_ap_start_reg <= 1'b1;
        end else if ((grp_cache_update_1_fu_392_ap_ready == 1'b1)) begin
            grp_cache_update_1_fu_392_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_cache_update_fu_400_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_cache_update_fu_400_ap_start_reg <= 1'b1;
        end else if ((grp_cache_update_fu_400_ap_ready == 1'b1)) begin
            grp_cache_update_fu_400_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_init_2d_mem_fu_432_ap_start_reg <= 1'b0;
    end else begin
        if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln211_fu_596_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state30)) | ((1'b1 == ap_CS_fsm_state19) & (icmp_ln178_fu_456_p2 == 1'd1)))) begin
            grp_init_2d_mem_fu_432_ap_start_reg <= 1'b1;
        end else if ((grp_init_2d_mem_fu_432_ap_ready == 1'b1)) begin
            grp_init_2d_mem_fu_432_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_init_2d_mem_fu_438_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_init_2d_mem_fu_438_ap_start_reg <= 1'b1;
        end else if ((grp_init_2d_mem_fu_438_ap_ready == 1'b1)) begin
            grp_init_2d_mem_fu_438_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_init_2d_mem_fu_444_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_init_2d_mem_fu_444_ap_start_reg <= 1'b1;
        end else if ((grp_init_2d_mem_fu_444_ap_ready == 1'b1)) begin
            grp_init_2d_mem_fu_444_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_init_3d_mem_fu_420_ap_start_reg <= 1'b0;
    end else begin
        if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln211_fu_596_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state30)))) begin
            grp_init_3d_mem_fu_420_ap_start_reg <= 1'b1;
        end else if ((grp_init_3d_mem_fu_420_ap_ready == 1'b1)) begin
            grp_init_3d_mem_fu_420_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_linear_forward_no_mu_fu_315_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
            grp_linear_forward_no_mu_fu_315_ap_start_reg <= 1'b1;
        end else if ((grp_linear_forward_no_mu_fu_315_ap_ready == 1'b1)) begin
            grp_linear_forward_no_mu_fu_315_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_quantize_activation_fu_356_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state3))) begin
            grp_quantize_activation_fu_356_ap_start_reg <= 1'b1;
        end else if ((grp_quantize_activation_fu_356_ap_ready == 1'b1)) begin
            grp_quantize_activation_fu_356_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_reshape_2D_to_3D_fu_414_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7))) begin
            grp_reshape_2D_to_3D_fu_414_ap_start_reg <= 1'b1;
        end else if ((grp_reshape_2D_to_3D_fu_414_ap_ready == 1'b1)) begin
            grp_reshape_2D_to_3D_fu_414_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_rms_norm_24_s_fu_336_ap_start_reg <= 1'b0;
    end else begin
        if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln211_fu_596_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state30)))) begin
            grp_rms_norm_24_s_fu_336_ap_start_reg <= 1'b1;
        end else if ((grp_rms_norm_24_s_fu_336_ap_ready == 1'b1)) begin
            grp_rms_norm_24_s_fu_336_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_softmax_1_2_6_s_fu_345_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln178_fu_456_p2 == 1'd1))) begin
            grp_softmax_1_2_6_s_fu_345_ap_start_reg <= 1'b1;
        end else if ((grp_softmax_1_2_6_s_fu_345_ap_ready == 1'b1)) begin
            grp_softmax_1_2_6_s_fu_345_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_transpose_last_two_d_fu_408_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state15)) begin
            grp_transpose_last_two_d_fu_408_ap_start_reg <= 1'b1;
        end else if ((grp_transpose_last_two_d_fu_408_ap_ready == 1'b1)) begin
            grp_transpose_last_two_d_fu_408_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        d107_0_0_reg_304 <= add_ln212_reg_786;
    end else if (((1'b1 == ap_CS_fsm_state30) & (icmp_ln211_fu_596_p2 == 1'd0))) begin
        d107_0_0_reg_304 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        d_0_0_reg_282 <= add_ln180_reg_723;
    end else if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln178_fu_456_p2 == 1'd0))) begin
        d_0_0_reg_282 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln212_fu_672_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        h106_0_0_reg_293 <= add_ln211_reg_768;
    end else if (((grp_GEMM_3D_float_fu_385_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state29))) begin
        h106_0_0_reg_293 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln180_fu_494_p2 == 1'd1))) begin
        h_0_reg_271 <= h_reg_710;
    end else if (((grp_GEMM_3D_float_1_fu_378_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        h_0_reg_271 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        add_ln180_reg_723 <= add_ln180_fu_500_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        add_ln211_reg_768 <= add_ln211_fu_602_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        add_ln212_reg_786 <= add_ln212_fu_678_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) & (icmp_ln212_fu_672_p2 == 1'd0))) begin
        add_ln213_reg_791 <= add_ln213_fu_684_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln180_fu_494_p2 == 1'd0))) begin
        attn_weights_0_V_ad_reg_728 <= sext_ln1265_fu_515_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        attn_weights_0_V_lo_reg_733 <= attn_weights_0_V_q0;
        tmp_86_reg_738 <= attn_weights_0_V_q0[32'd39];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        h_reg_710 <= h_fu_462_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        mul_ln1148_reg_749 <= grp_fu_539_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state35) & (grp_quantize_activation_fu_356_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (grp_quantize_activation_fu_356_ap_done == 1'b1)))) begin
        reg_451 <= grp_quantize_activation_fu_356_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        select_ln1148_reg_759 <= select_ln1148_fu_570_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln178_fu_456_p2 == 1'd0))) begin
        sub_ln1265_reg_715[4 : 1] <= sub_ln1265_fu_488_p2[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) & (icmp_ln211_fu_596_p2 == 1'd0))) begin
        sub_ln203_reg_778[5 : 2] <= sub_ln203_fu_662_p2[5 : 2];
        sub_ln213_reg_773[5 : 2] <= sub_ln213_fu_636_p2[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & (tmp_86_reg_738 == 1'd0))) begin
        tmp_88_reg_754 <= {{grp_fu_539_p2[112:74]}};
    end
end

always @ (*) begin
    if ((((grp_linear_forward_no_mu_fu_315_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state37)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_linear_forward_no_mu_fu_315_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        attn_output_0_address0 = sext_ln203_fu_694_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        attn_output_0_address0 = grp_GEMM_3D_float_fu_385_output_0_V_address0;
    end else begin
        attn_output_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        attn_output_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        attn_output_0_ce0 = grp_GEMM_3D_float_fu_385_output_0_V_ce0;
    end else begin
        attn_output_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        attn_output_0_we0 = grp_GEMM_3D_float_fu_385_output_0_V_we0;
    end else begin
        attn_output_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        attn_output_2D_0_V_address0 = zext_ln213_1_fu_702_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        attn_output_2D_0_V_address0 = grp_init_2d_mem_fu_432_mem_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        attn_output_2D_0_V_address0 = grp_quantize_activation_fu_356_input_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        attn_output_2D_0_V_address0 = grp_rms_norm_24_s_fu_336_input_0_V_address0;
    end else begin
        attn_output_2D_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        attn_output_2D_0_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        attn_output_2D_0_V_ce0 = grp_init_2d_mem_fu_432_mem_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        attn_output_2D_0_V_ce0 = grp_quantize_activation_fu_356_input_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        attn_output_2D_0_V_ce0 = grp_rms_norm_24_s_fu_336_input_0_V_ce0;
    end else begin
        attn_output_2D_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        attn_output_2D_0_V_ce1 = grp_quantize_activation_fu_356_input_0_V_ce1;
    end else begin
        attn_output_2D_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        attn_output_2D_0_V_d0 = attn_output_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        attn_output_2D_0_V_d0 = grp_init_2d_mem_fu_432_mem_0_V_d0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        attn_output_2D_0_V_d0 = grp_rms_norm_24_s_fu_336_input_0_V_d0;
    end else begin
        attn_output_2D_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        attn_output_2D_0_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        attn_output_2D_0_V_we0 = grp_init_2d_mem_fu_432_mem_0_V_we0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        attn_output_2D_0_V_we0 = grp_rms_norm_24_s_fu_336_input_0_V_we0;
    end else begin
        attn_output_2D_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        attn_weights_0_V_address0 = attn_weights_0_V_ad_reg_728;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        attn_weights_0_V_address0 = sext_ln1265_fu_515_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        attn_weights_0_V_address0 = grp_GEMM_3D_float_fu_385_input_1_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        attn_weights_0_V_address0 = grp_GEMM_3D_float_1_fu_378_output_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        attn_weights_0_V_address0 = grp_softmax_1_2_6_s_fu_345_input_0_V_address0;
    end else begin
        attn_weights_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state20))) begin
        attn_weights_0_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        attn_weights_0_V_ce0 = grp_GEMM_3D_float_fu_385_input_1_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        attn_weights_0_V_ce0 = grp_GEMM_3D_float_1_fu_378_output_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        attn_weights_0_V_ce0 = grp_softmax_1_2_6_s_fu_345_input_0_V_ce0;
    end else begin
        attn_weights_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        attn_weights_0_V_d0 = select_ln1148_2_fu_588_p3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        attn_weights_0_V_d0 = grp_GEMM_3D_float_1_fu_378_output_0_V_d0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        attn_weights_0_V_d0 = grp_softmax_1_2_6_s_fu_345_input_0_V_d0;
    end else begin
        attn_weights_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        attn_weights_0_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        attn_weights_0_V_we0 = grp_GEMM_3D_float_1_fu_378_output_0_V_we0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        attn_weights_0_V_we0 = grp_softmax_1_2_6_s_fu_345_input_0_V_we0;
    end else begin
        attn_weights_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        final_output_0_V_address0 = grp_init_2d_mem_fu_432_mem_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        final_output_0_V_address0 = grp_linear_forward_no_mu_fu_315_output_0_V_address0;
    end else begin
        final_output_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        final_output_0_V_ce0 = grp_init_2d_mem_fu_432_mem_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        final_output_0_V_ce0 = grp_linear_forward_no_mu_fu_315_output_0_V_ce0;
    end else begin
        final_output_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        final_output_0_V_ce1 = grp_linear_forward_no_mu_fu_315_output_0_V_ce1;
    end else begin
        final_output_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        final_output_0_V_d0 = grp_init_2d_mem_fu_432_mem_0_V_d0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        final_output_0_V_d0 = grp_linear_forward_no_mu_fu_315_output_0_V_d0;
    end else begin
        final_output_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        final_output_0_V_we0 = grp_init_2d_mem_fu_432_mem_0_V_we0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        final_output_0_V_we0 = grp_linear_forward_no_mu_fu_315_output_0_V_we0;
    end else begin
        final_output_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        final_output_0_V_we1 = grp_linear_forward_no_mu_fu_315_output_0_V_we1;
    end else begin
        final_output_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_linear_forward_no_mu_fu_315_input_0_0_V_q0 = quantized_final_outp_q0;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6))) begin
        grp_linear_forward_no_mu_fu_315_input_0_0_V_q0 = quantized_hidden_sta_q0;
    end else begin
        grp_linear_forward_no_mu_fu_315_input_0_0_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_linear_forward_no_mu_fu_315_input_1_0_V_q0 = quantized_final_outp_1_q0;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6))) begin
        grp_linear_forward_no_mu_fu_315_input_1_0_V_q0 = quantized_hidden_sta_1_q0;
    end else begin
        grp_linear_forward_no_mu_fu_315_input_1_0_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_linear_forward_no_mu_fu_315_input_2_0_V_q0 = quantized_final_outp_2_q0;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6))) begin
        grp_linear_forward_no_mu_fu_315_input_2_0_V_q0 = quantized_hidden_sta_2_q0;
    end else begin
        grp_linear_forward_no_mu_fu_315_input_2_0_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_linear_forward_no_mu_fu_315_input_3_0_V_q0 = quantized_final_outp_3_q0;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6))) begin
        grp_linear_forward_no_mu_fu_315_input_3_0_V_q0 = quantized_hidden_sta_3_q0;
    end else begin
        grp_linear_forward_no_mu_fu_315_input_3_0_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_linear_forward_no_mu_fu_315_output_0_V_q0 = final_output_0_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_linear_forward_no_mu_fu_315_output_0_V_q0 = v_proj_re_0_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_linear_forward_no_mu_fu_315_output_0_V_q0 = k_proj_re_0_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_linear_forward_no_mu_fu_315_output_0_V_q0 = q_proj_re_0_V_q0;
    end else begin
        grp_linear_forward_no_mu_fu_315_output_0_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_linear_forward_no_mu_fu_315_packed_weights_q0 = o_weights_q0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_linear_forward_no_mu_fu_315_packed_weights_q0 = v_weights_q0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_linear_forward_no_mu_fu_315_packed_weights_q0 = k_weights_q0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_linear_forward_no_mu_fu_315_packed_weights_q0 = q_weights_q0;
    end else begin
        grp_linear_forward_no_mu_fu_315_packed_weights_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_linear_forward_no_mu_fu_315_w_scale_V = 22'd728135;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_linear_forward_no_mu_fu_315_w_scale_V = 22'd716061;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_linear_forward_no_mu_fu_315_w_scale_V = 22'd1234323;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_linear_forward_no_mu_fu_315_w_scale_V = 22'd1256162;
    end else begin
        grp_linear_forward_no_mu_fu_315_w_scale_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_quantize_activation_fu_356_input_0_V_q0 = attn_output_2D_0_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_quantize_activation_fu_356_input_0_V_q0 = hidden_states_0_V_q0;
    end else begin
        grp_quantize_activation_fu_356_input_0_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_quantize_activation_fu_356_input_0_V_q1 = attn_output_2D_0_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_quantize_activation_fu_356_input_0_V_q1 = hidden_states_0_V_q1;
    end else begin
        grp_quantize_activation_fu_356_input_0_V_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_reshape_2D_to_3D_fu_414_input_0_V_q0 = v_proj_re_0_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_reshape_2D_to_3D_fu_414_input_0_V_q0 = k_proj_re_0_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_reshape_2D_to_3D_fu_414_input_0_V_q0 = q_proj_re_0_V_q0;
    end else begin
        grp_reshape_2D_to_3D_fu_414_input_0_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_rms_norm_24_s_fu_336_input_0_V_q0 = attn_output_2D_0_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_rms_norm_24_s_fu_336_input_0_V_q0 = hidden_states_0_V_q0;
    end else begin
        grp_rms_norm_24_s_fu_336_input_0_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_rms_norm_24_s_fu_336_weight_V_q0 = ln_weight_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_rms_norm_24_s_fu_336_weight_V_q0 = ln_weight_in_V_q0;
    end else begin
        grp_rms_norm_24_s_fu_336_weight_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        hidden_states_0_V_address0 = grp_quantize_activation_fu_356_input_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        hidden_states_0_V_address0 = grp_rms_norm_24_s_fu_336_input_0_V_address0;
    end else begin
        hidden_states_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        hidden_states_0_V_ce0 = grp_quantize_activation_fu_356_input_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        hidden_states_0_V_ce0 = grp_rms_norm_24_s_fu_336_input_0_V_ce0;
    end else begin
        hidden_states_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        hidden_states_0_V_ce1 = grp_quantize_activation_fu_356_input_0_V_ce1;
    end else begin
        hidden_states_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        hidden_states_0_V_we0 = grp_rms_norm_24_s_fu_336_input_0_V_we0;
    end else begin
        hidden_states_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        k_cache_upd_V_address0 = grp_transpose_last_two_d_fu_408_input_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        k_cache_upd_V_address0 = grp_cache_update_fu_400_cache_out_V_address0;
    end else begin
        k_cache_upd_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        k_cache_upd_V_ce0 = grp_transpose_last_two_d_fu_408_input_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        k_cache_upd_V_ce0 = grp_cache_update_fu_400_cache_out_V_ce0;
    end else begin
        k_cache_upd_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        k_cache_upd_V_we0 = grp_cache_update_fu_400_cache_out_V_we0;
    end else begin
        k_cache_upd_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        k_embed_0_V_address0 = grp_cache_update_fu_400_update_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        k_embed_0_V_address0 = grp_apply_rotary_pos_emb_fu_366_output_k_0_V_address0;
    end else begin
        k_embed_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        k_embed_0_V_ce0 = grp_cache_update_fu_400_update_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        k_embed_0_V_ce0 = grp_apply_rotary_pos_emb_fu_366_output_k_0_V_ce0;
    end else begin
        k_embed_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        k_embed_0_V_we0 = grp_apply_rotary_pos_emb_fu_366_output_k_0_V_we0;
    end else begin
        k_embed_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        k_proj_0_V_address0 = grp_reshape_2D_to_3D_fu_414_output_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        k_proj_0_V_address0 = grp_apply_rotary_pos_emb_fu_366_input_k_0_V_address0;
    end else begin
        k_proj_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        k_proj_0_V_ce0 = grp_reshape_2D_to_3D_fu_414_output_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        k_proj_0_V_ce0 = grp_apply_rotary_pos_emb_fu_366_input_k_0_V_ce0;
    end else begin
        k_proj_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        k_proj_0_V_ce1 = grp_apply_rotary_pos_emb_fu_366_input_k_0_V_ce1;
    end else begin
        k_proj_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        k_proj_0_V_we0 = grp_reshape_2D_to_3D_fu_414_output_0_V_we0;
    end else begin
        k_proj_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        k_proj_re_0_V_address0 = grp_init_2d_mem_fu_438_mem_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        k_proj_re_0_V_address0 = grp_reshape_2D_to_3D_fu_414_input_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        k_proj_re_0_V_address0 = grp_linear_forward_no_mu_fu_315_output_0_V_address0;
    end else begin
        k_proj_re_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        k_proj_re_0_V_ce0 = grp_init_2d_mem_fu_438_mem_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        k_proj_re_0_V_ce0 = grp_reshape_2D_to_3D_fu_414_input_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        k_proj_re_0_V_ce0 = grp_linear_forward_no_mu_fu_315_output_0_V_ce0;
    end else begin
        k_proj_re_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        k_proj_re_0_V_ce1 = grp_linear_forward_no_mu_fu_315_output_0_V_ce1;
    end else begin
        k_proj_re_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        k_proj_re_0_V_d0 = grp_init_2d_mem_fu_438_mem_0_V_d0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        k_proj_re_0_V_d0 = grp_linear_forward_no_mu_fu_315_output_0_V_d0;
    end else begin
        k_proj_re_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        k_proj_re_0_V_we0 = grp_init_2d_mem_fu_438_mem_0_V_we0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        k_proj_re_0_V_we0 = grp_linear_forward_no_mu_fu_315_output_0_V_we0;
    end else begin
        k_proj_re_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        k_proj_re_0_V_we1 = grp_linear_forward_no_mu_fu_315_output_0_V_we1;
    end else begin
        k_proj_re_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        k_proj_transposed_V_address0 = grp_transpose_last_two_d_fu_408_output_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        k_proj_transposed_V_address0 = grp_GEMM_3D_float_1_fu_378_input_2_V_address0;
    end else begin
        k_proj_transposed_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        k_proj_transposed_V_ce0 = grp_transpose_last_two_d_fu_408_output_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        k_proj_transposed_V_ce0 = grp_GEMM_3D_float_1_fu_378_input_2_V_ce0;
    end else begin
        k_proj_transposed_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        k_proj_transposed_V_we0 = grp_transpose_last_two_d_fu_408_output_V_we0;
    end else begin
        k_proj_transposed_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        k_weights_ce0 = grp_linear_forward_no_mu_fu_315_packed_weights_ce0;
    end else begin
        k_weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        ln_weight_V_ce0 = grp_rms_norm_24_s_fu_336_weight_V_ce0;
    end else begin
        ln_weight_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        ln_weight_in_V_ce0 = grp_rms_norm_24_s_fu_336_weight_V_ce0;
    end else begin
        ln_weight_in_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        o_weights_ce0 = grp_linear_forward_no_mu_fu_315_packed_weights_ce0;
    end else begin
        o_weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        q_embed_0_V_address0 = grp_GEMM_3D_float_1_fu_378_input_1_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        q_embed_0_V_address0 = grp_apply_rotary_pos_emb_fu_366_output_q_0_V_address0;
    end else begin
        q_embed_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        q_embed_0_V_ce0 = grp_GEMM_3D_float_1_fu_378_input_1_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        q_embed_0_V_ce0 = grp_apply_rotary_pos_emb_fu_366_output_q_0_V_ce0;
    end else begin
        q_embed_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        q_embed_0_V_we0 = grp_apply_rotary_pos_emb_fu_366_output_q_0_V_we0;
    end else begin
        q_embed_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        q_proj_0_V_address0 = grp_reshape_2D_to_3D_fu_414_output_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        q_proj_0_V_address0 = grp_apply_rotary_pos_emb_fu_366_input_q_0_V_address0;
    end else begin
        q_proj_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        q_proj_0_V_ce0 = grp_reshape_2D_to_3D_fu_414_output_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        q_proj_0_V_ce0 = grp_apply_rotary_pos_emb_fu_366_input_q_0_V_ce0;
    end else begin
        q_proj_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        q_proj_0_V_ce1 = grp_apply_rotary_pos_emb_fu_366_input_q_0_V_ce1;
    end else begin
        q_proj_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        q_proj_0_V_we0 = grp_reshape_2D_to_3D_fu_414_output_0_V_we0;
    end else begin
        q_proj_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        q_proj_re_0_V_address0 = grp_init_2d_mem_fu_432_mem_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        q_proj_re_0_V_address0 = grp_reshape_2D_to_3D_fu_414_input_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        q_proj_re_0_V_address0 = grp_linear_forward_no_mu_fu_315_output_0_V_address0;
    end else begin
        q_proj_re_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        q_proj_re_0_V_ce0 = grp_init_2d_mem_fu_432_mem_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        q_proj_re_0_V_ce0 = grp_reshape_2D_to_3D_fu_414_input_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        q_proj_re_0_V_ce0 = grp_linear_forward_no_mu_fu_315_output_0_V_ce0;
    end else begin
        q_proj_re_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        q_proj_re_0_V_ce1 = grp_linear_forward_no_mu_fu_315_output_0_V_ce1;
    end else begin
        q_proj_re_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        q_proj_re_0_V_d0 = grp_init_2d_mem_fu_432_mem_0_V_d0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        q_proj_re_0_V_d0 = grp_linear_forward_no_mu_fu_315_output_0_V_d0;
    end else begin
        q_proj_re_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        q_proj_re_0_V_we0 = grp_init_2d_mem_fu_432_mem_0_V_we0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        q_proj_re_0_V_we0 = grp_linear_forward_no_mu_fu_315_output_0_V_we0;
    end else begin
        q_proj_re_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        q_proj_re_0_V_we1 = grp_linear_forward_no_mu_fu_315_output_0_V_we1;
    end else begin
        q_proj_re_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        q_weights_ce0 = grp_linear_forward_no_mu_fu_315_packed_weights_ce0;
    end else begin
        q_weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        quantized_final_outp_1_address0 = grp_init_3d_mem_fu_420_mem_1_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        quantized_final_outp_1_address0 = grp_quantize_activation_fu_356_output_states_1_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        quantized_final_outp_1_address0 = grp_linear_forward_no_mu_fu_315_input_1_0_V_address0;
    end else begin
        quantized_final_outp_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        quantized_final_outp_1_ce0 = grp_init_3d_mem_fu_420_mem_1_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        quantized_final_outp_1_ce0 = grp_quantize_activation_fu_356_output_states_1_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        quantized_final_outp_1_ce0 = grp_linear_forward_no_mu_fu_315_input_1_0_V_ce0;
    end else begin
        quantized_final_outp_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        quantized_final_outp_1_d0 = grp_init_3d_mem_fu_420_mem_1_0_V_d0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        quantized_final_outp_1_d0 = grp_quantize_activation_fu_356_output_states_1_0_V_d0;
    end else begin
        quantized_final_outp_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        quantized_final_outp_1_we0 = grp_init_3d_mem_fu_420_mem_1_0_V_we0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        quantized_final_outp_1_we0 = grp_quantize_activation_fu_356_output_states_1_0_V_we0;
    end else begin
        quantized_final_outp_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        quantized_final_outp_2_address0 = grp_init_3d_mem_fu_420_mem_2_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        quantized_final_outp_2_address0 = grp_quantize_activation_fu_356_output_states_2_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        quantized_final_outp_2_address0 = grp_linear_forward_no_mu_fu_315_input_2_0_V_address0;
    end else begin
        quantized_final_outp_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        quantized_final_outp_2_ce0 = grp_init_3d_mem_fu_420_mem_2_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        quantized_final_outp_2_ce0 = grp_quantize_activation_fu_356_output_states_2_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        quantized_final_outp_2_ce0 = grp_linear_forward_no_mu_fu_315_input_2_0_V_ce0;
    end else begin
        quantized_final_outp_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        quantized_final_outp_2_d0 = grp_init_3d_mem_fu_420_mem_2_0_V_d0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        quantized_final_outp_2_d0 = grp_quantize_activation_fu_356_output_states_2_0_V_d0;
    end else begin
        quantized_final_outp_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        quantized_final_outp_2_we0 = grp_init_3d_mem_fu_420_mem_2_0_V_we0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        quantized_final_outp_2_we0 = grp_quantize_activation_fu_356_output_states_2_0_V_we0;
    end else begin
        quantized_final_outp_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        quantized_final_outp_3_address0 = grp_init_3d_mem_fu_420_mem_3_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        quantized_final_outp_3_address0 = grp_quantize_activation_fu_356_output_states_3_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        quantized_final_outp_3_address0 = grp_linear_forward_no_mu_fu_315_input_3_0_V_address0;
    end else begin
        quantized_final_outp_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        quantized_final_outp_3_ce0 = grp_init_3d_mem_fu_420_mem_3_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        quantized_final_outp_3_ce0 = grp_quantize_activation_fu_356_output_states_3_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        quantized_final_outp_3_ce0 = grp_linear_forward_no_mu_fu_315_input_3_0_V_ce0;
    end else begin
        quantized_final_outp_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        quantized_final_outp_3_d0 = grp_init_3d_mem_fu_420_mem_3_0_V_d0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        quantized_final_outp_3_d0 = grp_quantize_activation_fu_356_output_states_3_0_V_d0;
    end else begin
        quantized_final_outp_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        quantized_final_outp_3_we0 = grp_init_3d_mem_fu_420_mem_3_0_V_we0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        quantized_final_outp_3_we0 = grp_quantize_activation_fu_356_output_states_3_0_V_we0;
    end else begin
        quantized_final_outp_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        quantized_final_outp_address0 = grp_init_3d_mem_fu_420_mem_0_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        quantized_final_outp_address0 = grp_quantize_activation_fu_356_output_states_0_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        quantized_final_outp_address0 = grp_linear_forward_no_mu_fu_315_input_0_0_V_address0;
    end else begin
        quantized_final_outp_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        quantized_final_outp_ce0 = grp_init_3d_mem_fu_420_mem_0_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        quantized_final_outp_ce0 = grp_quantize_activation_fu_356_output_states_0_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        quantized_final_outp_ce0 = grp_linear_forward_no_mu_fu_315_input_0_0_V_ce0;
    end else begin
        quantized_final_outp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        quantized_final_outp_d0 = grp_init_3d_mem_fu_420_mem_0_0_V_d0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        quantized_final_outp_d0 = grp_quantize_activation_fu_356_output_states_0_0_V_d0;
    end else begin
        quantized_final_outp_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        quantized_final_outp_we0 = grp_init_3d_mem_fu_420_mem_0_0_V_we0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        quantized_final_outp_we0 = grp_quantize_activation_fu_356_output_states_0_0_V_we0;
    end else begin
        quantized_final_outp_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        quantized_hidden_sta_1_address0 = grp_init_3d_mem_fu_420_mem_1_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        quantized_hidden_sta_1_address0 = grp_quantize_activation_fu_356_output_states_1_0_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6))) begin
        quantized_hidden_sta_1_address0 = grp_linear_forward_no_mu_fu_315_input_1_0_V_address0;
    end else begin
        quantized_hidden_sta_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        quantized_hidden_sta_1_ce0 = grp_init_3d_mem_fu_420_mem_1_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        quantized_hidden_sta_1_ce0 = grp_quantize_activation_fu_356_output_states_1_0_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6))) begin
        quantized_hidden_sta_1_ce0 = grp_linear_forward_no_mu_fu_315_input_1_0_V_ce0;
    end else begin
        quantized_hidden_sta_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        quantized_hidden_sta_1_d0 = grp_init_3d_mem_fu_420_mem_1_0_V_d0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        quantized_hidden_sta_1_d0 = grp_quantize_activation_fu_356_output_states_1_0_V_d0;
    end else begin
        quantized_hidden_sta_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        quantized_hidden_sta_1_we0 = grp_init_3d_mem_fu_420_mem_1_0_V_we0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        quantized_hidden_sta_1_we0 = grp_quantize_activation_fu_356_output_states_1_0_V_we0;
    end else begin
        quantized_hidden_sta_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        quantized_hidden_sta_2_address0 = grp_init_3d_mem_fu_420_mem_2_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        quantized_hidden_sta_2_address0 = grp_quantize_activation_fu_356_output_states_2_0_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6))) begin
        quantized_hidden_sta_2_address0 = grp_linear_forward_no_mu_fu_315_input_2_0_V_address0;
    end else begin
        quantized_hidden_sta_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        quantized_hidden_sta_2_ce0 = grp_init_3d_mem_fu_420_mem_2_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        quantized_hidden_sta_2_ce0 = grp_quantize_activation_fu_356_output_states_2_0_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6))) begin
        quantized_hidden_sta_2_ce0 = grp_linear_forward_no_mu_fu_315_input_2_0_V_ce0;
    end else begin
        quantized_hidden_sta_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        quantized_hidden_sta_2_d0 = grp_init_3d_mem_fu_420_mem_2_0_V_d0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        quantized_hidden_sta_2_d0 = grp_quantize_activation_fu_356_output_states_2_0_V_d0;
    end else begin
        quantized_hidden_sta_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        quantized_hidden_sta_2_we0 = grp_init_3d_mem_fu_420_mem_2_0_V_we0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        quantized_hidden_sta_2_we0 = grp_quantize_activation_fu_356_output_states_2_0_V_we0;
    end else begin
        quantized_hidden_sta_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        quantized_hidden_sta_3_address0 = grp_init_3d_mem_fu_420_mem_3_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        quantized_hidden_sta_3_address0 = grp_quantize_activation_fu_356_output_states_3_0_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6))) begin
        quantized_hidden_sta_3_address0 = grp_linear_forward_no_mu_fu_315_input_3_0_V_address0;
    end else begin
        quantized_hidden_sta_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        quantized_hidden_sta_3_ce0 = grp_init_3d_mem_fu_420_mem_3_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        quantized_hidden_sta_3_ce0 = grp_quantize_activation_fu_356_output_states_3_0_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6))) begin
        quantized_hidden_sta_3_ce0 = grp_linear_forward_no_mu_fu_315_input_3_0_V_ce0;
    end else begin
        quantized_hidden_sta_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        quantized_hidden_sta_3_d0 = grp_init_3d_mem_fu_420_mem_3_0_V_d0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        quantized_hidden_sta_3_d0 = grp_quantize_activation_fu_356_output_states_3_0_V_d0;
    end else begin
        quantized_hidden_sta_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        quantized_hidden_sta_3_we0 = grp_init_3d_mem_fu_420_mem_3_0_V_we0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        quantized_hidden_sta_3_we0 = grp_quantize_activation_fu_356_output_states_3_0_V_we0;
    end else begin
        quantized_hidden_sta_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        quantized_hidden_sta_address0 = grp_init_3d_mem_fu_420_mem_0_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        quantized_hidden_sta_address0 = grp_quantize_activation_fu_356_output_states_0_0_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6))) begin
        quantized_hidden_sta_address0 = grp_linear_forward_no_mu_fu_315_input_0_0_V_address0;
    end else begin
        quantized_hidden_sta_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        quantized_hidden_sta_ce0 = grp_init_3d_mem_fu_420_mem_0_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        quantized_hidden_sta_ce0 = grp_quantize_activation_fu_356_output_states_0_0_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6))) begin
        quantized_hidden_sta_ce0 = grp_linear_forward_no_mu_fu_315_input_0_0_V_ce0;
    end else begin
        quantized_hidden_sta_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        quantized_hidden_sta_d0 = grp_init_3d_mem_fu_420_mem_0_0_V_d0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        quantized_hidden_sta_d0 = grp_quantize_activation_fu_356_output_states_0_0_V_d0;
    end else begin
        quantized_hidden_sta_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        quantized_hidden_sta_we0 = grp_init_3d_mem_fu_420_mem_0_0_V_we0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        quantized_hidden_sta_we0 = grp_quantize_activation_fu_356_output_states_0_0_V_we0;
    end else begin
        quantized_hidden_sta_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        v_cache_upd_V_address0 = grp_cache_update_1_fu_392_cache_out_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        v_cache_upd_V_address0 = grp_GEMM_3D_float_fu_385_input_2_V_address0;
    end else begin
        v_cache_upd_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        v_cache_upd_V_ce0 = grp_cache_update_1_fu_392_cache_out_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        v_cache_upd_V_ce0 = grp_GEMM_3D_float_fu_385_input_2_V_ce0;
    end else begin
        v_cache_upd_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        v_cache_upd_V_we0 = grp_cache_update_1_fu_392_cache_out_V_we0;
    end else begin
        v_cache_upd_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        v_proj_0_V_address0 = grp_reshape_2D_to_3D_fu_414_output_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        v_proj_0_V_address0 = grp_cache_update_1_fu_392_update_0_V_address0;
    end else begin
        v_proj_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        v_proj_0_V_ce0 = grp_reshape_2D_to_3D_fu_414_output_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        v_proj_0_V_ce0 = grp_cache_update_1_fu_392_update_0_V_ce0;
    end else begin
        v_proj_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        v_proj_0_V_we0 = grp_reshape_2D_to_3D_fu_414_output_0_V_we0;
    end else begin
        v_proj_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        v_proj_re_0_V_address0 = grp_init_2d_mem_fu_444_mem_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        v_proj_re_0_V_address0 = grp_reshape_2D_to_3D_fu_414_input_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        v_proj_re_0_V_address0 = grp_linear_forward_no_mu_fu_315_output_0_V_address0;
    end else begin
        v_proj_re_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        v_proj_re_0_V_ce0 = grp_init_2d_mem_fu_444_mem_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        v_proj_re_0_V_ce0 = grp_reshape_2D_to_3D_fu_414_input_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        v_proj_re_0_V_ce0 = grp_linear_forward_no_mu_fu_315_output_0_V_ce0;
    end else begin
        v_proj_re_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        v_proj_re_0_V_ce1 = grp_linear_forward_no_mu_fu_315_output_0_V_ce1;
    end else begin
        v_proj_re_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        v_proj_re_0_V_d0 = grp_init_2d_mem_fu_444_mem_0_V_d0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        v_proj_re_0_V_d0 = grp_linear_forward_no_mu_fu_315_output_0_V_d0;
    end else begin
        v_proj_re_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        v_proj_re_0_V_we0 = grp_init_2d_mem_fu_444_mem_0_V_we0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        v_proj_re_0_V_we0 = grp_linear_forward_no_mu_fu_315_output_0_V_we0;
    end else begin
        v_proj_re_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        v_proj_re_0_V_we1 = grp_linear_forward_no_mu_fu_315_output_0_V_we1;
    end else begin
        v_proj_re_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        v_weights_ce0 = grp_linear_forward_no_mu_fu_315_packed_weights_ce0;
    end else begin
        v_weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_quantize_activation_fu_356_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_linear_forward_no_mu_fu_315_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (1'b0 == ap_block_state8_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (1'b0 == ap_block_state10_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (1'b0 == ap_block_state12_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (1'b0 == ap_block_state14_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((grp_transpose_last_two_d_fu_408_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((grp_GEMM_3D_float_1_fu_378_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln178_fu_456_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln180_fu_494_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_CS_fsm_state27) & (1'b0 == ap_block_state27_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            if (((grp_GEMM_3D_float_fu_385_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state30 : begin
            if (((1'b1 == ap_CS_fsm_state30) & (icmp_ln211_fu_596_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state31 : begin
            if (((icmp_ln212_fu_672_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state33 : begin
            if (((1'b1 == ap_CS_fsm_state33) & (1'b0 == ap_block_state33_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            if (((1'b1 == ap_CS_fsm_state35) & (grp_quantize_activation_fu_356_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            if (((grp_linear_forward_no_mu_fu_315_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1265_fu_510_p2 = (sub_ln1265_reg_715 + zext_ln1265_2_fu_506_p1);

assign add_ln180_fu_500_p2 = (d_0_0_reg_282 + 3'd1);

assign add_ln203_fu_689_p2 = (sub_ln203_reg_778 + zext_ln212_fu_668_p1);

assign add_ln211_fu_602_p2 = (h106_0_0_reg_293 + 2'd1);

assign add_ln212_fu_678_p2 = (d107_0_0_reg_304 + 4'd1);

assign add_ln213_fu_684_p2 = (zext_ln212_fu_668_p1 + sub_ln213_reg_773);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state10_on_subcall_done = ((grp_reshape_2D_to_3D_fu_414_ap_done == 1'b0) | (grp_linear_forward_no_mu_fu_315_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state12_on_subcall_done = ((grp_reshape_2D_to_3D_fu_414_ap_done == 1'b0) | (grp_apply_rotary_pos_emb_fu_366_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state14_on_subcall_done = ((grp_cache_update_fu_400_ap_done == 1'b0) | (grp_cache_update_1_fu_392_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state27_on_subcall_done = ((grp_init_2d_mem_fu_432_ap_done == 1'b0) | (grp_softmax_1_2_6_s_fu_345_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state2_on_subcall_done = ((grp_init_2d_mem_fu_444_ap_done == 1'b0) | (grp_init_2d_mem_fu_438_ap_done == 1'b0) | (grp_init_2d_mem_fu_432_ap_done == 1'b0) | (grp_init_3d_mem_fu_420_ap_done == 1'b0) | (grp_rms_norm_24_s_fu_336_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state33_on_subcall_done = ((grp_init_2d_mem_fu_432_ap_done == 1'b0) | (grp_init_3d_mem_fu_420_ap_done == 1'b0) | (grp_rms_norm_24_s_fu_336_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state8_on_subcall_done = ((grp_reshape_2D_to_3D_fu_414_ap_done == 1'b0) | (grp_linear_forward_no_mu_fu_315_ap_done == 1'b0));
end

assign final_output_0_V_address1 = grp_linear_forward_no_mu_fu_315_output_0_V_address1;

assign final_output_0_V_d1 = grp_linear_forward_no_mu_fu_315_output_0_V_d1;

assign grp_GEMM_3D_float_1_fu_378_ap_start = grp_GEMM_3D_float_1_fu_378_ap_start_reg;

assign grp_GEMM_3D_float_fu_385_ap_start = grp_GEMM_3D_float_fu_385_ap_start_reg;

assign grp_apply_rotary_pos_emb_fu_366_ap_start = grp_apply_rotary_pos_emb_fu_366_ap_start_reg;

assign grp_cache_update_1_fu_392_ap_start = grp_cache_update_1_fu_392_ap_start_reg;

assign grp_cache_update_fu_400_ap_start = grp_cache_update_fu_400_ap_start_reg;

assign grp_fu_539_p0 = 113'd83205075835834171;

assign grp_init_2d_mem_fu_432_ap_start = grp_init_2d_mem_fu_432_ap_start_reg;

assign grp_init_2d_mem_fu_438_ap_start = grp_init_2d_mem_fu_438_ap_start_reg;

assign grp_init_2d_mem_fu_444_ap_start = grp_init_2d_mem_fu_444_ap_start_reg;

assign grp_init_3d_mem_fu_420_ap_start = grp_init_3d_mem_fu_420_ap_start_reg;

assign grp_linear_forward_no_mu_fu_315_ap_start = grp_linear_forward_no_mu_fu_315_ap_start_reg;

assign grp_quantize_activation_fu_356_ap_start = grp_quantize_activation_fu_356_ap_start_reg;

assign grp_reshape_2D_to_3D_fu_414_ap_start = grp_reshape_2D_to_3D_fu_414_ap_start_reg;

assign grp_rms_norm_24_s_fu_336_ap_start = grp_rms_norm_24_s_fu_336_ap_start_reg;

assign grp_softmax_1_2_6_s_fu_345_ap_start = grp_softmax_1_2_6_s_fu_345_ap_start_reg;

assign grp_transpose_last_two_d_fu_408_ap_start = grp_transpose_last_two_d_fu_408_ap_start_reg;

assign h_fu_462_p2 = (h_0_reg_271 + 2'd1);

assign hidden_states_0_V_address1 = grp_quantize_activation_fu_356_input_0_V_address1;

assign hidden_states_0_V_d0 = grp_rms_norm_24_s_fu_336_input_0_V_d0;

assign icmp_ln178_fu_456_p2 = ((h_0_reg_271 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln180_fu_494_p2 = ((d_0_0_reg_282 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln211_fu_596_p2 = ((h106_0_0_reg_293 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln212_fu_672_p2 = ((d107_0_0_reg_304 == 4'd12) ? 1'b1 : 1'b0);

assign select_ln1148_2_fu_588_p3 = ((tmp_86_reg_738[0:0] === 1'b1) ? sub_ln703_fu_579_p2 : sext_ln703_6_fu_585_p1);

assign select_ln1148_fu_570_p3 = ((tmp_86_reg_738[0:0] === 1'b1) ? tmp_87_fu_560_p4 : tmp_88_reg_754);

assign sext_ln1265_fu_515_p1 = $signed(add_ln1265_fu_510_p2);

assign sext_ln203_fu_694_p1 = $signed(add_ln203_fu_689_p2);

assign sext_ln213_fu_699_p1 = $signed(add_ln213_reg_791);

assign sext_ln703_6_fu_585_p1 = select_ln1148_reg_759;

assign sext_ln703_fu_576_p1 = select_ln1148_reg_759;

assign shl_ln213_1_fu_624_p3 = {{trunc_ln213_fu_608_p1}, {2'd0}};

assign shl_ln2_fu_528_p3 = {{attn_weights_0_V_lo_reg_733}, {16'd0}};

assign shl_ln_fu_612_p3 = {{trunc_ln213_fu_608_p1}, {4'd0}};

assign sub_ln1148_fu_555_p2 = (113'd0 - mul_ln1148_reg_749);

assign sub_ln1265_fu_488_p2 = (tmp_67_fu_468_p3 - zext_ln1265_fu_484_p1);

assign sub_ln203_fu_662_p2 = (tmp_69_fu_642_p3 - zext_ln203_fu_658_p1);

assign sub_ln213_fu_636_p2 = (zext_ln213_fu_620_p1 - zext_ln213_2_fu_632_p1);

assign sub_ln703_fu_579_p2 = ($signed(40'd0) - $signed(sext_ln703_fu_576_p1));

assign tmp_67_fu_468_p3 = {{h_0_reg_271}, {3'd0}};

assign tmp_68_fu_476_p3 = {{h_0_reg_271}, {1'd0}};

assign tmp_69_fu_642_p3 = {{h106_0_0_reg_293}, {4'd0}};

assign tmp_70_fu_650_p3 = {{h106_0_0_reg_293}, {2'd0}};

assign tmp_87_fu_560_p4 = {{sub_ln1148_fu_555_p2[112:74]}};

assign trunc_ln213_fu_608_p1 = h106_0_0_reg_293[0:0];

assign zext_ln1265_2_fu_506_p1 = d_0_0_reg_282;

assign zext_ln1265_fu_484_p1 = tmp_68_fu_476_p3;

assign zext_ln203_fu_658_p1 = tmp_70_fu_650_p3;

assign zext_ln212_fu_668_p1 = d107_0_0_reg_304;

assign zext_ln213_1_fu_702_p1 = $unsigned(sext_ln213_fu_699_p1);

assign zext_ln213_2_fu_632_p1 = shl_ln213_1_fu_624_p3;

assign zext_ln213_fu_620_p1 = shl_ln_fu_612_p3;

always @ (posedge ap_clk) begin
    sub_ln1265_reg_715[0] <= 1'b0;
    sub_ln213_reg_773[1:0] <= 2'b00;
    sub_ln203_reg_778[1:0] <= 2'b00;
end

endmodule //attention
