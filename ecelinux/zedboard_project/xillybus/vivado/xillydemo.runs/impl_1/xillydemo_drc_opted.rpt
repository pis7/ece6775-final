Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
------------------------------------------------------------------------------------------------------------------
| Tool Version : Vivado v.2019.2 (lin64) Build 2708876 Wed Nov  6 21:39:14 MST 2019
| Date         : Sun Dec  1 11:27:20 2024
| Host         : zhang-22.ece.cornell.edu running 64-bit Red Hat Enterprise Linux release 8.10 (Ootpa)
| Command      : report_drc -file xillydemo_drc_opted.rpt -pb xillydemo_drc_opted.pb -rpx xillydemo_drc_opted.rpx
| Design       : xillydemo
| Device       : xc7z020clg484-1
| Speed File   : -1
| Design State : Synthesized
------------------------------------------------------------------------------------------------------------------

Report DRC

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: netlist
          Floorplan: design_1
      Design limits: <entire design considered>
           Ruledeck: default
             Max violations: <unlimited>
             Violations found: 230
+-----------+----------+----------------------------+------------+
| Rule      | Severity | Description                | Violations |
+-----------+----------+----------------------------+------------+
| CHECK-3   | Warning  | Report rule limit reached  | 1          |
| DPIP-1    | Warning  | Input pipelining           | 7          |
| DPOP-1    | Warning  | PREG Output pipelining     | 66         |
| DPOP-2    | Warning  | MREG Output pipelining     | 136        |
| REQP-1840 | Warning  | RAMB18 async control check | 20         |
+-----------+----------+----------------------------+------------+

2. REPORT DETAILS
-----------------
CHECK-3#1 Warning
Report rule limit reached  
REQP-1840 rule limit reached: 20 violations have been found.
Related violations: <none>

DPIP-1#1 Warning
Input pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_fu_1314/mul_ln1118_fu_622_p2__2 input test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_fu_1314/mul_ln1118_fu_622_p2__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#2 Warning
Input pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_fu_1314/mul_ln1118_fu_622_p2__2 input test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_fu_1314/mul_ln1118_fu_622_p2__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#3 Warning
Input pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_fu_1314/mul_ln1192_2_fu_696_p2__2 input test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_fu_1314/mul_ln1192_2_fu_696_p2__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#4 Warning
Input pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_fu_1314/mul_ln1192_2_fu_696_p2__2 input test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_fu_1314/mul_ln1192_2_fu_696_p2__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#5 Warning
Input pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_linear_forward_no_mu_fu_1031/mul_ln1148_fu_1359_p2 input test_fpga_design/grp_attention_fu_263/grp_linear_forward_no_mu_fu_1031/mul_ln1148_fu_1359_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#6 Warning
Input pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_linear_forward_no_mu_fu_1031/sext_ln120_reg_6259_reg input test_fpga_design/grp_attention_fu_263/grp_linear_forward_no_mu_fu_1031/sext_ln120_reg_6259_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#7 Warning
Input pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_linear_forward_no_mu_fu_1031/sext_ln120_reg_6259_reg__0 input test_fpga_design/grp_attention_fu_263/grp_linear_forward_no_mu_fu_1031/sext_ln120_reg_6259_reg__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPOP-1#1 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/dut_mul_58ns_56s_egO_U254/dut_mul_58ns_56s_egO_MulnS_4_U/tmp_product__0 output test_fpga_design/grp_attention_fu_263/dut_mul_58ns_56s_egO_U254/dut_mul_58ns_56s_egO_MulnS_4_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#2 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/dut_mul_58ns_56s_egO_U254/dut_mul_58ns_56s_egO_MulnS_4_U/tmp_product__3 output test_fpga_design/grp_attention_fu_263/dut_mul_58ns_56s_egO_U254/dut_mul_58ns_56s_egO_MulnS_4_U/tmp_product__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#3 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_10_fu_1110_p2 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_10_fu_1110_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#4 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_10_fu_1110_p2__0 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_10_fu_1110_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#5 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_11_fu_1132_p2 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_11_fu_1132_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#6 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_11_fu_1132_p2__0 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_11_fu_1132_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#7 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_12_fu_1179_p2 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_12_fu_1179_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#8 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_12_fu_1179_p2__0 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_12_fu_1179_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#9 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_13_fu_1201_p2 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_13_fu_1201_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#10 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_13_fu_1201_p2__0 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_13_fu_1201_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#11 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_14_fu_1213_p2 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_14_fu_1213_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#12 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_14_fu_1213_p2__0 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_14_fu_1213_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#13 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_15_fu_1225_p2 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_15_fu_1225_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#14 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_15_fu_1225_p2__0 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_15_fu_1225_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#15 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_1_fu_787_p2 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_1_fu_787_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#16 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_1_fu_787_p2__0 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_1_fu_787_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#17 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_2_fu_834_p2 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_2_fu_834_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#18 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_2_fu_834_p2__0 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_2_fu_834_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#19 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_3_fu_856_p2 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_3_fu_856_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#20 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_3_fu_856_p2__0 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_3_fu_856_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#21 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_4_fu_903_p2 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_4_fu_903_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#22 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_4_fu_903_p2__0 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_4_fu_903_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#23 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_5_fu_925_p2 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_5_fu_925_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#24 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_5_fu_925_p2__0 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_5_fu_925_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#25 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_6_fu_972_p2 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_6_fu_972_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#26 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_6_fu_972_p2__0 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_6_fu_972_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#27 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_7_fu_994_p2 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_7_fu_994_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#28 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_7_fu_994_p2__0 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_7_fu_994_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#29 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_8_fu_1041_p2 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_8_fu_1041_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#30 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_8_fu_1041_p2__0 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_8_fu_1041_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#31 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_9_fu_1063_p2 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_9_fu_1063_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#32 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_9_fu_1063_p2__0 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_9_fu_1063_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#33 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_fu_775_p2 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_fu_775_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#34 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_fu_775_p2__0 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_fu_775_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#35 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_fu_1314/mul_ln1118_fu_622_p2 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_fu_1314/mul_ln1118_fu_622_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#36 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_fu_1314/mul_ln1118_fu_622_p2__0 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_fu_1314/mul_ln1118_fu_622_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#37 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_fu_1314/mul_ln1118_fu_622_p2__1 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_fu_1314/mul_ln1118_fu_622_p2__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#38 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_fu_1314/mul_ln1118_fu_622_p2__2 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_fu_1314/mul_ln1118_fu_622_p2__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#39 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_fu_1314/mul_ln1192_2_fu_696_p2 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_fu_1314/mul_ln1192_2_fu_696_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#40 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_fu_1314/mul_ln1192_2_fu_696_p2__0 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_fu_1314/mul_ln1192_2_fu_696_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#41 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_fu_1314/mul_ln1192_2_fu_696_p2__1 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_fu_1314/mul_ln1192_2_fu_696_p2__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#42 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_fu_1314/mul_ln1192_2_fu_696_p2__2 output test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_fu_1314/mul_ln1192_2_fu_696_p2__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#43 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_apply_rotary_pos_emb_fu_1321/mul_ln1118_4_fu_800_p2 output test_fpga_design/grp_attention_fu_263/grp_apply_rotary_pos_emb_fu_1321/mul_ln1118_4_fu_800_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#44 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_apply_rotary_pos_emb_fu_1321/mul_ln1118_5_fu_859_p2 output test_fpga_design/grp_attention_fu_263/grp_apply_rotary_pos_emb_fu_1321/mul_ln1118_5_fu_859_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#45 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_apply_rotary_pos_emb_fu_1321/mul_ln1118_6_fu_867_p2 output test_fpga_design/grp_attention_fu_263/grp_apply_rotary_pos_emb_fu_1321/mul_ln1118_6_fu_867_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#46 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_apply_rotary_pos_emb_fu_1321/mul_ln1118_fu_788_p2 output test_fpga_design/grp_attention_fu_263/grp_apply_rotary_pos_emb_fu_1321/mul_ln1118_fu_788_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#47 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_linear_forward_no_mu_fu_1031/mul_ln1148_fu_1359_p2 output test_fpga_design/grp_attention_fu_263/grp_linear_forward_no_mu_fu_1031/mul_ln1148_fu_1359_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#48 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_1_fu_1380_p2 output test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_1_fu_1380_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#49 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_1_fu_1380_p2__0 output test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_1_fu_1380_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#50 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_1_fu_1380_p2__1 output test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_1_fu_1380_p2__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#51 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_1_fu_1380_p2__2 output test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_1_fu_1380_p2__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#52 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_1_fu_1380_p2__3 output test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_1_fu_1380_p2__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#53 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_2_fu_1555_p2 output test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_2_fu_1555_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#54 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_2_fu_1555_p2__0 output test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_2_fu_1555_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#55 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_2_fu_1555_p2__1 output test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_2_fu_1555_p2__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#56 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_2_fu_1555_p2__2 output test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_2_fu_1555_p2__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#57 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_2_fu_1555_p2__3 output test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_2_fu_1555_p2__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#58 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/dut_mul_40s_42ns_bkb_U2/dut_mul_40s_42ns_bkb_MulnS_0_U/tmp_product output test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/dut_mul_40s_42ns_bkb_U2/dut_mul_40s_42ns_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#59 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/dut_mul_40s_42ns_bkb_U2/dut_mul_40s_42ns_bkb_MulnS_0_U/tmp_product__0 output test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/dut_mul_40s_42ns_bkb_U2/dut_mul_40s_42ns_bkb_MulnS_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#60 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/dut_mul_72s_40s_7dEe_U4/dut_mul_72s_40s_7dEe_MulnS_1_U/tmp_product__0 output test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/dut_mul_72s_40s_7dEe_U4/dut_mul_72s_40s_7dEe_MulnS_1_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#61 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/mul_ln1118_fu_283_p2 output test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/mul_ln1118_fu_283_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#62 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/mul_ln1118_fu_283_p2__0 output test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/mul_ln1118_fu_283_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#63 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/mul_ln1192_fu_167_p2 output test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/mul_ln1192_fu_167_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#64 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/mul_ln1192_fu_167_p2__0 output test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/mul_ln1192_fu_167_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#65 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_softmax_1_8_6_s_fu_1233/grp_exp_40_24_s_fu_163/dut_mul_50ns_47nsncg_U240/dut_mul_50ns_47nsncg_MulnS_2_U/tmp_product__0 output test_fpga_design/grp_attention_fu_263/grp_softmax_1_8_6_s_fu_1233/grp_exp_40_24_s_fu_163/dut_mul_50ns_47nsncg_U240/dut_mul_50ns_47nsncg_MulnS_2_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#66 Warning
PREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_softmax_1_8_6_s_fu_1233/grp_exp_40_24_s_fu_163/dut_mul_50ns_50nsocq_U241/dut_mul_50ns_50nsocq_MulnS_3_U/tmp_product__0 output test_fpga_design/grp_attention_fu_263/grp_softmax_1_8_6_s_fu_1233/grp_exp_40_24_s_fu_163/dut_mul_50ns_50nsocq_U241/dut_mul_50ns_50nsocq_MulnS_3_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-2#1 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/dut_mul_58ns_56s_egO_U254/dut_mul_58ns_56s_egO_MulnS_4_U/buff0_reg multiplier stage test_fpga_design/grp_attention_fu_263/dut_mul_58ns_56s_egO_U254/dut_mul_58ns_56s_egO_MulnS_4_U/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#2 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/dut_mul_58ns_56s_egO_U254/dut_mul_58ns_56s_egO_MulnS_4_U/buff0_reg__0 multiplier stage test_fpga_design/grp_attention_fu_263/dut_mul_58ns_56s_egO_U254/dut_mul_58ns_56s_egO_MulnS_4_U/buff0_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#3 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/dut_mul_58ns_56s_egO_U254/dut_mul_58ns_56s_egO_MulnS_4_U/buff0_reg__1 multiplier stage test_fpga_design/grp_attention_fu_263/dut_mul_58ns_56s_egO_U254/dut_mul_58ns_56s_egO_MulnS_4_U/buff0_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#4 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/dut_mul_58ns_56s_egO_U254/dut_mul_58ns_56s_egO_MulnS_4_U/buff0_reg__2 multiplier stage test_fpga_design/grp_attention_fu_263/dut_mul_58ns_56s_egO_U254/dut_mul_58ns_56s_egO_MulnS_4_U/buff0_reg__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#5 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/dut_mul_58ns_56s_egO_U254/dut_mul_58ns_56s_egO_MulnS_4_U/tmp_product__0 multiplier stage test_fpga_design/grp_attention_fu_263/dut_mul_58ns_56s_egO_U254/dut_mul_58ns_56s_egO_MulnS_4_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#6 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/dut_mul_58ns_56s_egO_U254/dut_mul_58ns_56s_egO_MulnS_4_U/tmp_product__3 multiplier stage test_fpga_design/grp_attention_fu_263/dut_mul_58ns_56s_egO_U254/dut_mul_58ns_56s_egO_MulnS_4_U/tmp_product__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#7 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_10_fu_1110_p2 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_10_fu_1110_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#8 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_10_fu_1110_p2__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_10_fu_1110_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#9 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_10_reg_1766_reg multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_10_reg_1766_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#10 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_10_reg_1766_reg__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_10_reg_1766_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#11 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_10_reg_1766_reg__1 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_10_reg_1766_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#12 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_11_fu_1132_p2 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_11_fu_1132_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#13 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_11_fu_1132_p2__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_11_fu_1132_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#14 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_11_reg_1776_reg multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_11_reg_1776_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#15 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_11_reg_1776_reg__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_11_reg_1776_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#16 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_11_reg_1776_reg__1 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_11_reg_1776_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#17 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_12_fu_1179_p2 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_12_fu_1179_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#18 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_12_fu_1179_p2__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_12_fu_1179_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#19 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_12_reg_1821_reg multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_12_reg_1821_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#20 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_12_reg_1821_reg__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_12_reg_1821_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#21 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_12_reg_1821_reg__1 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_12_reg_1821_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#22 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_13_fu_1201_p2 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_13_fu_1201_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#23 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_13_fu_1201_p2__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_13_fu_1201_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#24 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_13_reg_1831_reg multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_13_reg_1831_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#25 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_13_reg_1831_reg__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_13_reg_1831_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#26 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_13_reg_1831_reg__1 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_13_reg_1831_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#27 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_14_fu_1213_p2 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_14_fu_1213_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#28 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_14_fu_1213_p2__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_14_fu_1213_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#29 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_14_reg_1836_reg multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_14_reg_1836_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#30 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_14_reg_1836_reg__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_14_reg_1836_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#31 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_14_reg_1836_reg__1 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_14_reg_1836_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#32 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_15_fu_1225_p2 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_15_fu_1225_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#33 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_15_fu_1225_p2__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_15_fu_1225_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#34 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_15_reg_1841_reg multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_15_reg_1841_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#35 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_15_reg_1841_reg__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_15_reg_1841_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#36 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_15_reg_1841_reg__1 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_15_reg_1841_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#37 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_1_fu_787_p2 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_1_fu_787_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#38 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_1_fu_787_p2__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_1_fu_787_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#39 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_1_reg_1501_reg multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_1_reg_1501_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#40 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_1_reg_1501_reg__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_1_reg_1501_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#41 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_1_reg_1501_reg__1 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_1_reg_1501_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#42 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_2_fu_834_p2 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_2_fu_834_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#43 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_2_fu_834_p2__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_2_fu_834_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#44 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_2_reg_1546_reg multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_2_reg_1546_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#45 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_2_reg_1546_reg__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_2_reg_1546_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#46 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_2_reg_1546_reg__1 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_2_reg_1546_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#47 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_3_fu_856_p2 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_3_fu_856_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#48 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_3_fu_856_p2__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_3_fu_856_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#49 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_3_reg_1556_reg multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_3_reg_1556_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#50 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_3_reg_1556_reg__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_3_reg_1556_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#51 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_3_reg_1556_reg__1 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_3_reg_1556_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#52 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_4_fu_903_p2 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_4_fu_903_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#53 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_4_fu_903_p2__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_4_fu_903_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#54 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_4_reg_1601_reg multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_4_reg_1601_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#55 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_4_reg_1601_reg__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_4_reg_1601_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#56 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_4_reg_1601_reg__1 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_4_reg_1601_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#57 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_5_fu_925_p2 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_5_fu_925_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#58 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_5_fu_925_p2__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_5_fu_925_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#59 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_5_reg_1611_reg multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_5_reg_1611_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#60 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_5_reg_1611_reg__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_5_reg_1611_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#61 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_5_reg_1611_reg__1 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_5_reg_1611_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#62 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_6_fu_972_p2 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_6_fu_972_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#63 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_6_fu_972_p2__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_6_fu_972_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#64 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_6_reg_1656_reg multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_6_reg_1656_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#65 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_6_reg_1656_reg__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_6_reg_1656_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#66 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_6_reg_1656_reg__1 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_6_reg_1656_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#67 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_7_fu_994_p2 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_7_fu_994_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#68 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_7_fu_994_p2__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_7_fu_994_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#69 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_7_reg_1666_reg multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_7_reg_1666_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#70 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_7_reg_1666_reg__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_7_reg_1666_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#71 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_7_reg_1666_reg__1 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_7_reg_1666_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#72 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_8_fu_1041_p2 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_8_fu_1041_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#73 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_8_fu_1041_p2__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_8_fu_1041_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#74 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_8_reg_1731_reg multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_8_reg_1731_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#75 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_8_reg_1731_reg__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_8_reg_1731_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#76 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_8_reg_1731_reg__1 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_8_reg_1731_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#77 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_9_fu_1063_p2 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_9_fu_1063_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#78 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_9_fu_1063_p2__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_9_fu_1063_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#79 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_9_reg_1741_reg multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_9_reg_1741_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#80 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_9_reg_1741_reg__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_9_reg_1741_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#81 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_9_reg_1741_reg__1 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_9_reg_1741_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#82 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_fu_775_p2 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_fu_775_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#83 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_fu_775_p2__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_fu_775_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#84 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_reg_1491_reg multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_reg_1491_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#85 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_reg_1491_reg__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_reg_1491_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#86 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_reg_1491_reg__1 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_1_fu_1196/mul_ln1192_reg_1491_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#87 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_fu_1314/mul_ln1118_fu_622_p2 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_fu_1314/mul_ln1118_fu_622_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#88 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_fu_1314/mul_ln1118_fu_622_p2__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_fu_1314/mul_ln1118_fu_622_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#89 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_fu_1314/mul_ln1118_fu_622_p2__1 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_fu_1314/mul_ln1118_fu_622_p2__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#90 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_fu_1314/mul_ln1192_2_fu_696_p2 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_fu_1314/mul_ln1192_2_fu_696_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#91 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_fu_1314/mul_ln1192_2_fu_696_p2__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_fu_1314/mul_ln1192_2_fu_696_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#92 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_fu_1314/mul_ln1192_2_fu_696_p2__1 multiplier stage test_fpga_design/grp_attention_fu_263/grp_GEMM_3D_float_fu_1314/mul_ln1192_2_fu_696_p2__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#93 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_apply_rotary_pos_emb_fu_1321/mul_ln1118_4_fu_800_p2 multiplier stage test_fpga_design/grp_attention_fu_263/grp_apply_rotary_pos_emb_fu_1321/mul_ln1118_4_fu_800_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#94 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_apply_rotary_pos_emb_fu_1321/mul_ln1118_4_reg_1041_reg multiplier stage test_fpga_design/grp_attention_fu_263/grp_apply_rotary_pos_emb_fu_1321/mul_ln1118_4_reg_1041_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#95 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_apply_rotary_pos_emb_fu_1321/mul_ln1118_5_fu_859_p2 multiplier stage test_fpga_design/grp_attention_fu_263/grp_apply_rotary_pos_emb_fu_1321/mul_ln1118_5_fu_859_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#96 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_apply_rotary_pos_emb_fu_1321/mul_ln1118_5_reg_1051_reg multiplier stage test_fpga_design/grp_attention_fu_263/grp_apply_rotary_pos_emb_fu_1321/mul_ln1118_5_reg_1051_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#97 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_apply_rotary_pos_emb_fu_1321/mul_ln1118_6_fu_867_p2 multiplier stage test_fpga_design/grp_attention_fu_263/grp_apply_rotary_pos_emb_fu_1321/mul_ln1118_6_fu_867_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#98 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_apply_rotary_pos_emb_fu_1321/mul_ln1118_6_reg_1056_reg multiplier stage test_fpga_design/grp_attention_fu_263/grp_apply_rotary_pos_emb_fu_1321/mul_ln1118_6_reg_1056_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#99 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_apply_rotary_pos_emb_fu_1321/mul_ln1118_fu_788_p2 multiplier stage test_fpga_design/grp_attention_fu_263/grp_apply_rotary_pos_emb_fu_1321/mul_ln1118_fu_788_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#100 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_apply_rotary_pos_emb_fu_1321/mul_ln1118_reg_1031_reg multiplier stage test_fpga_design/grp_attention_fu_263/grp_apply_rotary_pos_emb_fu_1321/mul_ln1118_reg_1031_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#101 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_linear_forward_no_mu_fu_1031/mul_ln1148_fu_1359_p2 multiplier stage test_fpga_design/grp_attention_fu_263/grp_linear_forward_no_mu_fu_1031/mul_ln1148_fu_1359_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#102 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_linear_forward_no_mu_fu_1031/sext_ln120_reg_6259_reg multiplier stage test_fpga_design/grp_attention_fu_263/grp_linear_forward_no_mu_fu_1031/sext_ln120_reg_6259_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#103 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_linear_forward_no_mu_fu_1031/sext_ln120_reg_6259_reg__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_linear_forward_no_mu_fu_1031/sext_ln120_reg_6259_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#104 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_1_fu_1380_p2 multiplier stage test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_1_fu_1380_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#105 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_1_fu_1380_p2__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_1_fu_1380_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#106 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_1_fu_1380_p2__1 multiplier stage test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_1_fu_1380_p2__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#107 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_1_fu_1380_p2__2 multiplier stage test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_1_fu_1380_p2__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#108 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_1_fu_1380_p2__3 multiplier stage test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_1_fu_1380_p2__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#109 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_2_fu_1555_p2 multiplier stage test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_2_fu_1555_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#110 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_2_fu_1555_p2__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_2_fu_1555_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#111 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_2_fu_1555_p2__1 multiplier stage test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_2_fu_1555_p2__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#112 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_2_fu_1555_p2__2 multiplier stage test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_2_fu_1555_p2__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#113 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_2_fu_1555_p2__3 multiplier stage test_fpga_design/grp_attention_fu_263/grp_quantize_activation_fu_1244/mul_ln1118_2_fu_1555_p2__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#114 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/dut_mul_40s_42ns_bkb_U2/dut_mul_40s_42ns_bkb_MulnS_0_U/p_reg multiplier stage test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/dut_mul_40s_42ns_bkb_U2/dut_mul_40s_42ns_bkb_MulnS_0_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#115 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/dut_mul_40s_42ns_bkb_U2/dut_mul_40s_42ns_bkb_MulnS_0_U/p_reg__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/dut_mul_40s_42ns_bkb_U2/dut_mul_40s_42ns_bkb_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#116 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/dut_mul_40s_42ns_bkb_U2/dut_mul_40s_42ns_bkb_MulnS_0_U/p_reg__1 multiplier stage test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/dut_mul_40s_42ns_bkb_U2/dut_mul_40s_42ns_bkb_MulnS_0_U/p_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#117 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/dut_mul_40s_42ns_bkb_U2/dut_mul_40s_42ns_bkb_MulnS_0_U/tmp_product multiplier stage test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/dut_mul_40s_42ns_bkb_U2/dut_mul_40s_42ns_bkb_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#118 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/dut_mul_40s_42ns_bkb_U2/dut_mul_40s_42ns_bkb_MulnS_0_U/tmp_product__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/dut_mul_40s_42ns_bkb_U2/dut_mul_40s_42ns_bkb_MulnS_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#119 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/dut_mul_72s_40s_7dEe_U4/dut_mul_72s_40s_7dEe_MulnS_1_U/buff0_reg multiplier stage test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/dut_mul_72s_40s_7dEe_U4/dut_mul_72s_40s_7dEe_MulnS_1_U/buff0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#120 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/mul_ln1118_fu_283_p2 multiplier stage test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/mul_ln1118_fu_283_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#121 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/mul_ln1118_fu_283_p2__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/mul_ln1118_fu_283_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#122 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/mul_ln1118_reg_389_reg multiplier stage test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/mul_ln1118_reg_389_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#123 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/mul_ln1118_reg_389_reg__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/mul_ln1118_reg_389_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#124 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/mul_ln1192_fu_167_p2 multiplier stage test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/mul_ln1192_fu_167_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#125 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/mul_ln1192_fu_167_p2__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/mul_ln1192_fu_167_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#126 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/mul_ln1192_reg_325_reg multiplier stage test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/mul_ln1192_reg_325_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#127 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/mul_ln1192_reg_325_reg__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/mul_ln1192_reg_325_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#128 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/mul_ln1192_reg_325_reg__1 multiplier stage test_fpga_design/grp_attention_fu_263/grp_rms_norm_384_s_fu_1187/mul_ln1192_reg_325_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#129 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_softmax_1_8_6_s_fu_1233/grp_exp_40_24_s_fu_163/dut_mul_50ns_47nsncg_U240/dut_mul_50ns_47nsncg_MulnS_2_U/p_reg multiplier stage test_fpga_design/grp_attention_fu_263/grp_softmax_1_8_6_s_fu_1233/grp_exp_40_24_s_fu_163/dut_mul_50ns_47nsncg_U240/dut_mul_50ns_47nsncg_MulnS_2_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#130 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_softmax_1_8_6_s_fu_1233/grp_exp_40_24_s_fu_163/dut_mul_50ns_47nsncg_U240/dut_mul_50ns_47nsncg_MulnS_2_U/p_reg__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_softmax_1_8_6_s_fu_1233/grp_exp_40_24_s_fu_163/dut_mul_50ns_47nsncg_U240/dut_mul_50ns_47nsncg_MulnS_2_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#131 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_softmax_1_8_6_s_fu_1233/grp_exp_40_24_s_fu_163/dut_mul_50ns_47nsncg_U240/dut_mul_50ns_47nsncg_MulnS_2_U/p_reg__1 multiplier stage test_fpga_design/grp_attention_fu_263/grp_softmax_1_8_6_s_fu_1233/grp_exp_40_24_s_fu_163/dut_mul_50ns_47nsncg_U240/dut_mul_50ns_47nsncg_MulnS_2_U/p_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#132 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_softmax_1_8_6_s_fu_1233/grp_exp_40_24_s_fu_163/dut_mul_50ns_47nsncg_U240/dut_mul_50ns_47nsncg_MulnS_2_U/tmp_product__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_softmax_1_8_6_s_fu_1233/grp_exp_40_24_s_fu_163/dut_mul_50ns_47nsncg_U240/dut_mul_50ns_47nsncg_MulnS_2_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#133 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_softmax_1_8_6_s_fu_1233/grp_exp_40_24_s_fu_163/dut_mul_50ns_50nsocq_U241/dut_mul_50ns_50nsocq_MulnS_3_U/p_reg multiplier stage test_fpga_design/grp_attention_fu_263/grp_softmax_1_8_6_s_fu_1233/grp_exp_40_24_s_fu_163/dut_mul_50ns_50nsocq_U241/dut_mul_50ns_50nsocq_MulnS_3_U/p_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#134 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_softmax_1_8_6_s_fu_1233/grp_exp_40_24_s_fu_163/dut_mul_50ns_50nsocq_U241/dut_mul_50ns_50nsocq_MulnS_3_U/p_reg__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_softmax_1_8_6_s_fu_1233/grp_exp_40_24_s_fu_163/dut_mul_50ns_50nsocq_U241/dut_mul_50ns_50nsocq_MulnS_3_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#135 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_softmax_1_8_6_s_fu_1233/grp_exp_40_24_s_fu_163/dut_mul_50ns_50nsocq_U241/dut_mul_50ns_50nsocq_MulnS_3_U/p_reg__1 multiplier stage test_fpga_design/grp_attention_fu_263/grp_softmax_1_8_6_s_fu_1233/grp_exp_40_24_s_fu_163/dut_mul_50ns_50nsocq_U241/dut_mul_50ns_50nsocq_MulnS_3_U/p_reg__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#136 Warning
MREG Output pipelining  
DSP test_fpga_design/grp_attention_fu_263/grp_softmax_1_8_6_s_fu_1233/grp_exp_40_24_s_fu_163/dut_mul_50ns_50nsocq_U241/dut_mul_50ns_50nsocq_MulnS_3_U/tmp_product__0 multiplier stage test_fpga_design/grp_attention_fu_263/grp_softmax_1_8_6_s_fu_1233/grp_exp_40_24_s_fu_163/dut_mul_50ns_50nsocq_U241/dut_mul_50ns_50nsocq_MulnS_3_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

REQP-1840#1 Warning
RAMB18 async control check  
The RAMB18E1 xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram has an input control pin xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram/ADDRARDADDR[10] (net: xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0[5]) which is driven by a register (xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/rpntr/gc0.count_d1_reg[5]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#2 Warning
RAMB18 async control check  
The RAMB18E1 xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram has an input control pin xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram/ADDRARDADDR[11] (net: xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0[6]) which is driven by a register (xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/rpntr/gc0.count_d1_reg[6]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#3 Warning
RAMB18 async control check  
The RAMB18E1 xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram has an input control pin xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram/ADDRARDADDR[12] (net: xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0[7]) which is driven by a register (xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/rpntr/gc0.count_d1_reg[7]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#4 Warning
RAMB18 async control check  
The RAMB18E1 xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram has an input control pin xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram/ADDRARDADDR[13] (net: xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0[8]) which is driven by a register (xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/rpntr/gc0.count_d1_reg[8]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#5 Warning
RAMB18 async control check  
The RAMB18E1 xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram has an input control pin xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram/ADDRARDADDR[5] (net: xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0[0]) which is driven by a register (xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/rpntr/gc0.count_d1_reg[0]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#6 Warning
RAMB18 async control check  
The RAMB18E1 xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram has an input control pin xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram/ADDRARDADDR[6] (net: xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0[1]) which is driven by a register (xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/rpntr/gc0.count_d1_reg[1]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#7 Warning
RAMB18 async control check  
The RAMB18E1 xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram has an input control pin xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram/ADDRARDADDR[7] (net: xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0[2]) which is driven by a register (xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/rpntr/gc0.count_d1_reg[2]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#8 Warning
RAMB18 async control check  
The RAMB18E1 xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram has an input control pin xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram/ADDRARDADDR[8] (net: xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0[3]) which is driven by a register (xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/rpntr/gc0.count_d1_reg[3]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#9 Warning
RAMB18 async control check  
The RAMB18E1 xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram has an input control pin xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram/ADDRARDADDR[9] (net: xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_0[4]) which is driven by a register (xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/rpntr/gc0.count_d1_reg[4]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#10 Warning
RAMB18 async control check  
The RAMB18E1 xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram has an input control pin xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram/ADDRBWRADDR[10] (net: xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_1[5]) which is driven by a register (xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/wpntr/gic0.gc0.count_d2_reg[5]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#11 Warning
RAMB18 async control check  
The RAMB18E1 xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram has an input control pin xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram/ADDRBWRADDR[11] (net: xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_1[6]) which is driven by a register (xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/wpntr/gic0.gc0.count_d2_reg[6]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#12 Warning
RAMB18 async control check  
The RAMB18E1 xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram has an input control pin xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram/ADDRBWRADDR[12] (net: xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_1[7]) which is driven by a register (xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/wpntr/gic0.gc0.count_d2_reg[7]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#13 Warning
RAMB18 async control check  
The RAMB18E1 xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram has an input control pin xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram/ADDRBWRADDR[13] (net: xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_1[8]) which is driven by a register (xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/wpntr/gic0.gc0.count_d2_reg[8]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#14 Warning
RAMB18 async control check  
The RAMB18E1 xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram has an input control pin xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram/ADDRBWRADDR[5] (net: xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_1[0]) which is driven by a register (xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/wpntr/gic0.gc0.count_d2_reg[0]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#15 Warning
RAMB18 async control check  
The RAMB18E1 xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram has an input control pin xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram/ADDRBWRADDR[6] (net: xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_1[1]) which is driven by a register (xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/wpntr/gic0.gc0.count_d2_reg[1]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#16 Warning
RAMB18 async control check  
The RAMB18E1 xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram has an input control pin xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram/ADDRBWRADDR[7] (net: xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_1[2]) which is driven by a register (xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/wpntr/gic0.gc0.count_d2_reg[2]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#17 Warning
RAMB18 async control check  
The RAMB18E1 xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram has an input control pin xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram/ADDRBWRADDR[8] (net: xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_1[3]) which is driven by a register (xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/wpntr/gic0.gc0.count_d2_reg[3]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#18 Warning
RAMB18 async control check  
The RAMB18E1 xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram has an input control pin xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram/ADDRBWRADDR[9] (net: xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_1[4]) which is driven by a register (xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/wpntr/gic0.gc0.count_d2_reg[4]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#19 Warning
RAMB18 async control check  
The RAMB18E1 xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram has an input control pin xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram/ENARDEN (net: xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_ENARDEN_cooolgate_en_sig_19) which is driven by a register (xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.sckt_rd_rst_ic_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#20 Warning
RAMB18 async control check  
The RAMB18E1 xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram has an input control pin xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram/ENARDEN (net: xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gbm.gbmg.gbmga.ngecc.bmg/inst_blk_mem_gen/gnbram.gnativebmg.native_blk_mem_gen/valid.cstr/ramloop[0].ram.r/prim_noinit.ram/DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM18.ram_ENARDEN_cooolgate_en_sig_19) which is driven by a register (xillybus_ins/system_i/vivado_system_i/xillyvga_0/inst/xillyvga_core_ins/vga_fifo_wrapper_ins/vga_fifo/U0/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.gic_rst.wr_rst_rd_ext_reg[1]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>


