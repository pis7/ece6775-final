// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "GEMM_3D_float.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic GEMM_3D_float::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic GEMM_3D_float::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> GEMM_3D_float::ap_ST_fsm_state1 = "1";
const sc_lv<8> GEMM_3D_float::ap_ST_fsm_state2 = "10";
const sc_lv<8> GEMM_3D_float::ap_ST_fsm_state3 = "100";
const sc_lv<8> GEMM_3D_float::ap_ST_fsm_state4 = "1000";
const sc_lv<8> GEMM_3D_float::ap_ST_fsm_state5 = "10000";
const sc_lv<8> GEMM_3D_float::ap_ST_fsm_state6 = "100000";
const sc_lv<8> GEMM_3D_float::ap_ST_fsm_state7 = "1000000";
const sc_lv<8> GEMM_3D_float::ap_ST_fsm_state8 = "10000000";
const sc_lv<32> GEMM_3D_float::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> GEMM_3D_float::ap_const_lv32_1 = "1";
const sc_lv<1> GEMM_3D_float::ap_const_lv1_0 = "0";
const sc_lv<32> GEMM_3D_float::ap_const_lv32_2 = "10";
const sc_lv<32> GEMM_3D_float::ap_const_lv32_3 = "11";
const sc_lv<32> GEMM_3D_float::ap_const_lv32_4 = "100";
const sc_lv<32> GEMM_3D_float::ap_const_lv32_5 = "101";
const sc_lv<32> GEMM_3D_float::ap_const_lv32_6 = "110";
const sc_lv<32> GEMM_3D_float::ap_const_lv32_7 = "111";
const sc_lv<3> GEMM_3D_float::ap_const_lv3_0 = "000";
const sc_lv<1> GEMM_3D_float::ap_const_lv1_1 = "1";
const sc_lv<5> GEMM_3D_float::ap_const_lv5_0 = "00000";
const sc_lv<40> GEMM_3D_float::ap_const_lv40_0 = "0000000000000000000000000000000000000000";
const sc_lv<3> GEMM_3D_float::ap_const_lv3_4 = "100";
const sc_lv<3> GEMM_3D_float::ap_const_lv3_1 = "1";
const sc_lv<5> GEMM_3D_float::ap_const_lv5_18 = "11000";
const sc_lv<5> GEMM_3D_float::ap_const_lv5_1 = "1";
const sc_lv<3> GEMM_3D_float::ap_const_lv3_6 = "110";
const sc_lv<16> GEMM_3D_float::ap_const_lv16_0 = "0000000000000000";
const sc_lv<32> GEMM_3D_float::ap_const_lv32_10 = "10000";
const sc_lv<32> GEMM_3D_float::ap_const_lv32_37 = "110111";
const bool GEMM_3D_float::ap_const_boolean_1 = true;

GEMM_3D_float::GEMM_3D_float(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln1116_fu_262_p2);
    sensitive << ( sext_ln1116_reg_349 );
    sensitive << ( zext_ln1116_7_fu_258_p1 );

    SC_METHOD(thread_add_ln1117_fu_293_p2);
    sensitive << ( zext_ln203_reg_367 );
    sensitive << ( sub_ln1117_fu_287_p2 );

    SC_METHOD(thread_add_ln1192_fu_326_p2);
    sensitive << ( mul_ln1192_reg_415 );
    sensitive << ( shl_ln_fu_318_p3 );

    SC_METHOD(thread_add_ln203_fu_236_p2);
    sensitive << ( sub_ln203_reg_354 );
    sensitive << ( zext_ln203_18_fu_232_p1 );

    SC_METHOD(thread_add_ln279_fu_222_p2);
    sensitive << ( k_0_0_reg_117 );

    SC_METHOD(thread_add_ln281_fu_252_p2);
    sensitive << ( l_0_0_reg_141 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln277_fu_152_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln277_fu_152_p2 );

    SC_METHOD(thread_i_fu_158_p2);
    sensitive << ( i_0_reg_106 );

    SC_METHOD(thread_icmp_ln277_fu_152_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_106 );

    SC_METHOD(thread_icmp_ln279_fu_216_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( k_0_0_reg_117 );

    SC_METHOD(thread_icmp_ln281_fu_246_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( l_0_0_reg_141 );

    SC_METHOD(thread_input_1_0_V_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( sext_ln1116_2_fu_298_p1 );

    SC_METHOD(thread_input_1_0_V_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_input_2_V_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln1117_fu_302_p1 );

    SC_METHOD(thread_input_2_V_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_mul_ln1192_fu_312_p0);
    sensitive << ( input_2_V_load_reg_410 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_mul_ln1192_fu_312_p1);
    sensitive << ( input_1_0_V_load_reg_405 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_mul_ln1192_fu_312_p2);
    sensitive << ( mul_ln1192_fu_312_p0 );
    sensitive << ( mul_ln1192_fu_312_p1 );

    SC_METHOD(thread_output_0_V_address0);
    sensitive << ( output_0_V_addr_reg_372 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_output_0_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_output_0_V_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( output_0_V_load_reg_128 );

    SC_METHOD(thread_output_0_V_we0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_p_shl4_cast_fu_271_p3);
    sensitive << ( trunc_ln1117_fu_267_p1 );

    SC_METHOD(thread_p_shl5_cast_fu_279_p3);
    sensitive << ( add_ln1116_fu_262_p2 );

    SC_METHOD(thread_sext_ln1116_2_fu_298_p1);
    sensitive << ( add_ln1116_reg_385 );

    SC_METHOD(thread_sext_ln1116_fu_198_p1);
    sensitive << ( sub_ln1116_fu_192_p2 );

    SC_METHOD(thread_sext_ln203_fu_241_p1);
    sensitive << ( add_ln203_fu_236_p2 );

    SC_METHOD(thread_shl_ln_fu_318_p3);
    sensitive << ( output_0_V_load_reg_128 );

    SC_METHOD(thread_sub_ln1116_fu_192_p2);
    sensitive << ( zext_ln1116_5_fu_176_p1 );
    sensitive << ( zext_ln1116_6_fu_188_p1 );

    SC_METHOD(thread_sub_ln1117_fu_287_p2);
    sensitive << ( p_shl4_cast_fu_271_p3 );
    sensitive << ( p_shl5_cast_fu_279_p3 );

    SC_METHOD(thread_sub_ln203_fu_210_p2);
    sensitive << ( tmp_80_fu_202_p3 );
    sensitive << ( zext_ln1116_fu_172_p1 );

    SC_METHOD(thread_tmp_78_fu_164_p3);
    sensitive << ( i_0_reg_106 );

    SC_METHOD(thread_tmp_79_fu_180_p3);
    sensitive << ( i_0_reg_106 );

    SC_METHOD(thread_tmp_80_fu_202_p3);
    sensitive << ( i_0_reg_106 );

    SC_METHOD(thread_trunc_ln1117_fu_267_p1);
    sensitive << ( add_ln1116_fu_262_p2 );

    SC_METHOD(thread_zext_ln1116_5_fu_176_p1);
    sensitive << ( tmp_78_fu_164_p3 );

    SC_METHOD(thread_zext_ln1116_6_fu_188_p1);
    sensitive << ( tmp_79_fu_180_p3 );

    SC_METHOD(thread_zext_ln1116_7_fu_258_p1);
    sensitive << ( l_0_0_reg_141 );

    SC_METHOD(thread_zext_ln1116_fu_172_p1);
    sensitive << ( tmp_78_fu_164_p3 );

    SC_METHOD(thread_zext_ln1117_fu_302_p1);
    sensitive << ( add_ln1117_reg_390 );

    SC_METHOD(thread_zext_ln203_18_fu_232_p1);
    sensitive << ( k_0_0_reg_117 );

    SC_METHOD(thread_zext_ln203_fu_228_p1);
    sensitive << ( k_0_0_reg_117 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln277_fu_152_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln279_fu_216_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln281_fu_246_p2 );

    ap_CS_fsm = "00000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "GEMM_3D_float_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_1_0_V_address0, "(port)input_1_0_V_address0");
    sc_trace(mVcdFile, input_1_0_V_ce0, "(port)input_1_0_V_ce0");
    sc_trace(mVcdFile, input_1_0_V_q0, "(port)input_1_0_V_q0");
    sc_trace(mVcdFile, input_2_V_address0, "(port)input_2_V_address0");
    sc_trace(mVcdFile, input_2_V_ce0, "(port)input_2_V_ce0");
    sc_trace(mVcdFile, input_2_V_q0, "(port)input_2_V_q0");
    sc_trace(mVcdFile, output_0_V_address0, "(port)output_0_V_address0");
    sc_trace(mVcdFile, output_0_V_ce0, "(port)output_0_V_ce0");
    sc_trace(mVcdFile, output_0_V_we0, "(port)output_0_V_we0");
    sc_trace(mVcdFile, output_0_V_d0, "(port)output_0_V_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_fu_158_p2, "i_fu_158_p2");
    sc_trace(mVcdFile, i_reg_344, "i_reg_344");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, sext_ln1116_fu_198_p1, "sext_ln1116_fu_198_p1");
    sc_trace(mVcdFile, sext_ln1116_reg_349, "sext_ln1116_reg_349");
    sc_trace(mVcdFile, icmp_ln277_fu_152_p2, "icmp_ln277_fu_152_p2");
    sc_trace(mVcdFile, sub_ln203_fu_210_p2, "sub_ln203_fu_210_p2");
    sc_trace(mVcdFile, sub_ln203_reg_354, "sub_ln203_reg_354");
    sc_trace(mVcdFile, add_ln279_fu_222_p2, "add_ln279_fu_222_p2");
    sc_trace(mVcdFile, add_ln279_reg_362, "add_ln279_reg_362");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, zext_ln203_fu_228_p1, "zext_ln203_fu_228_p1");
    sc_trace(mVcdFile, zext_ln203_reg_367, "zext_ln203_reg_367");
    sc_trace(mVcdFile, icmp_ln279_fu_216_p2, "icmp_ln279_fu_216_p2");
    sc_trace(mVcdFile, output_0_V_addr_reg_372, "output_0_V_addr_reg_372");
    sc_trace(mVcdFile, add_ln281_fu_252_p2, "add_ln281_fu_252_p2");
    sc_trace(mVcdFile, add_ln281_reg_380, "add_ln281_reg_380");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, add_ln1116_fu_262_p2, "add_ln1116_fu_262_p2");
    sc_trace(mVcdFile, add_ln1116_reg_385, "add_ln1116_reg_385");
    sc_trace(mVcdFile, icmp_ln281_fu_246_p2, "icmp_ln281_fu_246_p2");
    sc_trace(mVcdFile, add_ln1117_fu_293_p2, "add_ln1117_fu_293_p2");
    sc_trace(mVcdFile, add_ln1117_reg_390, "add_ln1117_reg_390");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, input_1_0_V_load_reg_405, "input_1_0_V_load_reg_405");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, input_2_V_load_reg_410, "input_2_V_load_reg_410");
    sc_trace(mVcdFile, mul_ln1192_fu_312_p2, "mul_ln1192_fu_312_p2");
    sc_trace(mVcdFile, mul_ln1192_reg_415, "mul_ln1192_reg_415");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, i_0_reg_106, "i_0_reg_106");
    sc_trace(mVcdFile, k_0_0_reg_117, "k_0_0_reg_117");
    sc_trace(mVcdFile, output_0_V_load_reg_128, "output_0_V_load_reg_128");
    sc_trace(mVcdFile, l_0_0_reg_141, "l_0_0_reg_141");
    sc_trace(mVcdFile, sext_ln203_fu_241_p1, "sext_ln203_fu_241_p1");
    sc_trace(mVcdFile, sext_ln1116_2_fu_298_p1, "sext_ln1116_2_fu_298_p1");
    sc_trace(mVcdFile, zext_ln1117_fu_302_p1, "zext_ln1117_fu_302_p1");
    sc_trace(mVcdFile, tmp_78_fu_164_p3, "tmp_78_fu_164_p3");
    sc_trace(mVcdFile, tmp_79_fu_180_p3, "tmp_79_fu_180_p3");
    sc_trace(mVcdFile, zext_ln1116_5_fu_176_p1, "zext_ln1116_5_fu_176_p1");
    sc_trace(mVcdFile, zext_ln1116_6_fu_188_p1, "zext_ln1116_6_fu_188_p1");
    sc_trace(mVcdFile, sub_ln1116_fu_192_p2, "sub_ln1116_fu_192_p2");
    sc_trace(mVcdFile, tmp_80_fu_202_p3, "tmp_80_fu_202_p3");
    sc_trace(mVcdFile, zext_ln1116_fu_172_p1, "zext_ln1116_fu_172_p1");
    sc_trace(mVcdFile, zext_ln203_18_fu_232_p1, "zext_ln203_18_fu_232_p1");
    sc_trace(mVcdFile, add_ln203_fu_236_p2, "add_ln203_fu_236_p2");
    sc_trace(mVcdFile, zext_ln1116_7_fu_258_p1, "zext_ln1116_7_fu_258_p1");
    sc_trace(mVcdFile, trunc_ln1117_fu_267_p1, "trunc_ln1117_fu_267_p1");
    sc_trace(mVcdFile, p_shl4_cast_fu_271_p3, "p_shl4_cast_fu_271_p3");
    sc_trace(mVcdFile, p_shl5_cast_fu_279_p3, "p_shl5_cast_fu_279_p3");
    sc_trace(mVcdFile, sub_ln1117_fu_287_p2, "sub_ln1117_fu_287_p2");
    sc_trace(mVcdFile, mul_ln1192_fu_312_p0, "mul_ln1192_fu_312_p0");
    sc_trace(mVcdFile, mul_ln1192_fu_312_p1, "mul_ln1192_fu_312_p1");
    sc_trace(mVcdFile, shl_ln_fu_318_p3, "shl_ln_fu_318_p3");
    sc_trace(mVcdFile, add_ln1192_fu_326_p2, "add_ln1192_fu_326_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

GEMM_3D_float::~GEMM_3D_float() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void GEMM_3D_float::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln279_fu_216_p2.read(), ap_const_lv1_1))) {
        i_0_reg_106 = i_reg_344.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_106 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln281_fu_246_p2.read(), ap_const_lv1_1))) {
        k_0_0_reg_117 = add_ln279_reg_362.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln277_fu_152_p2.read(), ap_const_lv1_0))) {
        k_0_0_reg_117 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        l_0_0_reg_141 = add_ln281_reg_380.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln279_fu_216_p2.read()))) {
        l_0_0_reg_141 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        output_0_V_load_reg_128 = add_ln1192_fu_326_p2.read().range(55, 16);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln279_fu_216_p2.read()))) {
        output_0_V_load_reg_128 = ap_const_lv40_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln281_fu_246_p2.read()))) {
        add_ln1116_reg_385 = add_ln1116_fu_262_p2.read();
        add_ln1117_reg_390 = add_ln1117_fu_293_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        add_ln279_reg_362 = add_ln279_fu_222_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        add_ln281_reg_380 = add_ln281_fu_252_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_344 = i_fu_158_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        input_1_0_V_load_reg_405 = input_1_0_V_q0.read();
        input_2_V_load_reg_410 = input_2_V_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        mul_ln1192_reg_415 = mul_ln1192_fu_312_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln279_fu_216_p2.read()))) {
        output_0_V_addr_reg_372 =  (sc_lv<7>) (sext_ln203_fu_241_p1.read());
        zext_ln203_reg_367 = zext_ln203_fu_228_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln277_fu_152_p2.read(), ap_const_lv1_0))) {
        sext_ln1116_reg_349 = sext_ln1116_fu_198_p1.read();
        sub_ln203_reg_354 = sub_ln203_fu_210_p2.read();
    }
}

void GEMM_3D_float::thread_add_ln1116_fu_262_p2() {
    add_ln1116_fu_262_p2 = (!sext_ln1116_reg_349.read().is_01() || !zext_ln1116_7_fu_258_p1.read().is_01())? sc_lv<8>(): (sc_bigint<8>(sext_ln1116_reg_349.read()) + sc_biguint<8>(zext_ln1116_7_fu_258_p1.read()));
}

void GEMM_3D_float::thread_add_ln1117_fu_293_p2() {
    add_ln1117_fu_293_p2 = (!sub_ln1117_fu_287_p2.read().is_01() || !zext_ln203_reg_367.read().is_01())? sc_lv<11>(): (sc_biguint<11>(sub_ln1117_fu_287_p2.read()) + sc_biguint<11>(zext_ln203_reg_367.read()));
}

void GEMM_3D_float::thread_add_ln1192_fu_326_p2() {
    add_ln1192_fu_326_p2 = (!mul_ln1192_reg_415.read().is_01() || !shl_ln_fu_318_p3.read().is_01())? sc_lv<56>(): (sc_biguint<56>(mul_ln1192_reg_415.read()) + sc_biguint<56>(shl_ln_fu_318_p3.read()));
}

void GEMM_3D_float::thread_add_ln203_fu_236_p2() {
    add_ln203_fu_236_p2 = (!sub_ln203_reg_354.read().is_01() || !zext_ln203_18_fu_232_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(sub_ln203_reg_354.read()) + sc_biguint<8>(zext_ln203_18_fu_232_p1.read()));
}

void GEMM_3D_float::thread_add_ln279_fu_222_p2() {
    add_ln279_fu_222_p2 = (!k_0_0_reg_117.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(k_0_0_reg_117.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void GEMM_3D_float::thread_add_ln281_fu_252_p2() {
    add_ln281_fu_252_p2 = (!l_0_0_reg_141.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(l_0_0_reg_141.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void GEMM_3D_float::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void GEMM_3D_float::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void GEMM_3D_float::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void GEMM_3D_float::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void GEMM_3D_float::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void GEMM_3D_float::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void GEMM_3D_float::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void GEMM_3D_float::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void GEMM_3D_float::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln277_fu_152_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void GEMM_3D_float::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void GEMM_3D_float::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln277_fu_152_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void GEMM_3D_float::thread_i_fu_158_p2() {
    i_fu_158_p2 = (!i_0_reg_106.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_0_reg_106.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void GEMM_3D_float::thread_icmp_ln277_fu_152_p2() {
    icmp_ln277_fu_152_p2 = (!i_0_reg_106.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_106.read() == ap_const_lv3_4);
}

void GEMM_3D_float::thread_icmp_ln279_fu_216_p2() {
    icmp_ln279_fu_216_p2 = (!k_0_0_reg_117.read().is_01() || !ap_const_lv5_18.is_01())? sc_lv<1>(): sc_lv<1>(k_0_0_reg_117.read() == ap_const_lv5_18);
}

void GEMM_3D_float::thread_icmp_ln281_fu_246_p2() {
    icmp_ln281_fu_246_p2 = (!l_0_0_reg_141.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(l_0_0_reg_141.read() == ap_const_lv3_6);
}

void GEMM_3D_float::thread_input_1_0_V_address0() {
    input_1_0_V_address0 =  (sc_lv<5>) (sext_ln1116_2_fu_298_p1.read());
}

void GEMM_3D_float::thread_input_1_0_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        input_1_0_V_ce0 = ap_const_logic_1;
    } else {
        input_1_0_V_ce0 = ap_const_logic_0;
    }
}

void GEMM_3D_float::thread_input_2_V_address0() {
    input_2_V_address0 =  (sc_lv<10>) (zext_ln1117_fu_302_p1.read());
}

void GEMM_3D_float::thread_input_2_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        input_2_V_ce0 = ap_const_logic_1;
    } else {
        input_2_V_ce0 = ap_const_logic_0;
    }
}

void GEMM_3D_float::thread_mul_ln1192_fu_312_p0() {
    mul_ln1192_fu_312_p0 = input_2_V_load_reg_410.read();
}

void GEMM_3D_float::thread_mul_ln1192_fu_312_p1() {
    mul_ln1192_fu_312_p1 = input_1_0_V_load_reg_405.read();
}

void GEMM_3D_float::thread_mul_ln1192_fu_312_p2() {
    mul_ln1192_fu_312_p2 = (!mul_ln1192_fu_312_p0.read().is_01() || !mul_ln1192_fu_312_p1.read().is_01())? sc_lv<56>(): sc_bigint<40>(mul_ln1192_fu_312_p0.read()) * sc_bigint<40>(mul_ln1192_fu_312_p1.read());
}

void GEMM_3D_float::thread_output_0_V_address0() {
    output_0_V_address0 = output_0_V_addr_reg_372.read();
}

void GEMM_3D_float::thread_output_0_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        output_0_V_ce0 = ap_const_logic_1;
    } else {
        output_0_V_ce0 = ap_const_logic_0;
    }
}

void GEMM_3D_float::thread_output_0_V_d0() {
    output_0_V_d0 = output_0_V_load_reg_128.read();
}

void GEMM_3D_float::thread_output_0_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        output_0_V_we0 = ap_const_logic_1;
    } else {
        output_0_V_we0 = ap_const_logic_0;
    }
}

void GEMM_3D_float::thread_p_shl4_cast_fu_271_p3() {
    p_shl4_cast_fu_271_p3 = esl_concat<6,5>(trunc_ln1117_fu_267_p1.read(), ap_const_lv5_0);
}

void GEMM_3D_float::thread_p_shl5_cast_fu_279_p3() {
    p_shl5_cast_fu_279_p3 = esl_concat<8,3>(add_ln1116_fu_262_p2.read(), ap_const_lv3_0);
}

void GEMM_3D_float::thread_sext_ln1116_2_fu_298_p1() {
    sext_ln1116_2_fu_298_p1 = esl_sext<64,8>(add_ln1116_reg_385.read());
}

void GEMM_3D_float::thread_sext_ln1116_fu_198_p1() {
    sext_ln1116_fu_198_p1 = esl_sext<8,7>(sub_ln1116_fu_192_p2.read());
}

void GEMM_3D_float::thread_sext_ln203_fu_241_p1() {
    sext_ln203_fu_241_p1 = esl_sext<64,8>(add_ln203_fu_236_p2.read());
}

void GEMM_3D_float::thread_shl_ln_fu_318_p3() {
    shl_ln_fu_318_p3 = esl_concat<40,16>(output_0_V_load_reg_128.read(), ap_const_lv16_0);
}

void GEMM_3D_float::thread_sub_ln1116_fu_192_p2() {
    sub_ln1116_fu_192_p2 = (!zext_ln1116_5_fu_176_p1.read().is_01() || !zext_ln1116_6_fu_188_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(zext_ln1116_5_fu_176_p1.read()) - sc_biguint<7>(zext_ln1116_6_fu_188_p1.read()));
}

void GEMM_3D_float::thread_sub_ln1117_fu_287_p2() {
    sub_ln1117_fu_287_p2 = (!p_shl4_cast_fu_271_p3.read().is_01() || !p_shl5_cast_fu_279_p3.read().is_01())? sc_lv<11>(): (sc_biguint<11>(p_shl4_cast_fu_271_p3.read()) - sc_biguint<11>(p_shl5_cast_fu_279_p3.read()));
}

void GEMM_3D_float::thread_sub_ln203_fu_210_p2() {
    sub_ln203_fu_210_p2 = (!tmp_80_fu_202_p3.read().is_01() || !zext_ln1116_fu_172_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_80_fu_202_p3.read()) - sc_biguint<8>(zext_ln1116_fu_172_p1.read()));
}

void GEMM_3D_float::thread_tmp_78_fu_164_p3() {
    tmp_78_fu_164_p3 = esl_concat<3,3>(i_0_reg_106.read(), ap_const_lv3_0);
}

void GEMM_3D_float::thread_tmp_79_fu_180_p3() {
    tmp_79_fu_180_p3 = esl_concat<3,1>(i_0_reg_106.read(), ap_const_lv1_0);
}

void GEMM_3D_float::thread_tmp_80_fu_202_p3() {
    tmp_80_fu_202_p3 = esl_concat<3,5>(i_0_reg_106.read(), ap_const_lv5_0);
}

void GEMM_3D_float::thread_trunc_ln1117_fu_267_p1() {
    trunc_ln1117_fu_267_p1 = add_ln1116_fu_262_p2.read().range(6-1, 0);
}

void GEMM_3D_float::thread_zext_ln1116_5_fu_176_p1() {
    zext_ln1116_5_fu_176_p1 = esl_zext<7,6>(tmp_78_fu_164_p3.read());
}

void GEMM_3D_float::thread_zext_ln1116_6_fu_188_p1() {
    zext_ln1116_6_fu_188_p1 = esl_zext<7,4>(tmp_79_fu_180_p3.read());
}

void GEMM_3D_float::thread_zext_ln1116_7_fu_258_p1() {
    zext_ln1116_7_fu_258_p1 = esl_zext<8,3>(l_0_0_reg_141.read());
}

void GEMM_3D_float::thread_zext_ln1116_fu_172_p1() {
    zext_ln1116_fu_172_p1 = esl_zext<8,6>(tmp_78_fu_164_p3.read());
}

void GEMM_3D_float::thread_zext_ln1117_fu_302_p1() {
    zext_ln1117_fu_302_p1 = esl_zext<64,11>(add_ln1117_reg_390.read());
}

void GEMM_3D_float::thread_zext_ln203_18_fu_232_p1() {
    zext_ln203_18_fu_232_p1 = esl_zext<8,5>(k_0_0_reg_117.read());
}

void GEMM_3D_float::thread_zext_ln203_fu_228_p1() {
    zext_ln203_fu_228_p1 = esl_zext<11,5>(k_0_0_reg_117.read());
}

void GEMM_3D_float::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln277_fu_152_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln279_fu_216_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln281_fu_246_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXX";
            break;
    }
}

}

