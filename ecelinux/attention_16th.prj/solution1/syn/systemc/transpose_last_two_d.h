// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _transpose_last_two_d_HH_
#define _transpose_last_two_d_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct transpose_last_two_d : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > input_V_address0;
    sc_out< sc_logic > input_V_ce0;
    sc_in< sc_lv<40> > input_V_q0;
    sc_out< sc_lv<10> > output_V_address0;
    sc_out< sc_logic > output_V_ce0;
    sc_out< sc_logic > output_V_we0;
    sc_out< sc_lv<40> > output_V_d0;


    // Module declarations
    transpose_last_two_d(sc_module_name name);
    SC_HAS_PROCESS(transpose_last_two_d);

    ~transpose_last_two_d();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > i_fu_120_p2;
    sc_signal< sc_lv<3> > i_reg_310;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<8> > sext_ln203_fu_160_p1;
    sc_signal< sc_lv<8> > sext_ln203_reg_315;
    sc_signal< sc_lv<1> > icmp_ln249_fu_114_p2;
    sc_signal< sc_lv<10> > sext_ln203_1_fu_182_p1;
    sc_signal< sc_lv<10> > sext_ln203_1_reg_320;
    sc_signal< sc_lv<3> > j_fu_192_p2;
    sc_signal< sc_lv<3> > j_reg_328;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<11> > zext_ln203_4_fu_198_p1;
    sc_signal< sc_lv<11> > zext_ln203_4_reg_333;
    sc_signal< sc_lv<1> > icmp_ln250_fu_186_p2;
    sc_signal< sc_lv<11> > sub_ln203_2_fu_231_p2;
    sc_signal< sc_lv<11> > sub_ln203_2_reg_338;
    sc_signal< sc_lv<5> > k_fu_243_p2;
    sc_signal< sc_lv<5> > k_reg_346;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln251_fu_237_p2;
    sc_signal< sc_lv<11> > add_ln203_3_fu_298_p2;
    sc_signal< sc_lv<11> > add_ln203_3_reg_356;
    sc_signal< sc_lv<3> > i_0_reg_81;
    sc_signal< sc_lv<3> > j_0_reg_92;
    sc_signal< sc_lv<5> > k_0_reg_103;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<64> > zext_ln203_8_fu_262_p1;
    sc_signal< sc_lv<64> > zext_ln203_9_fu_303_p1;
    sc_signal< sc_lv<6> > tmp_2_fu_126_p3;
    sc_signal< sc_lv<4> > tmp_3_fu_142_p3;
    sc_signal< sc_lv<7> > zext_ln203_1_fu_138_p1;
    sc_signal< sc_lv<7> > zext_ln203_2_fu_150_p1;
    sc_signal< sc_lv<7> > sub_ln203_fu_154_p2;
    sc_signal< sc_lv<8> > tmp_4_fu_164_p3;
    sc_signal< sc_lv<9> > zext_ln203_3_fu_172_p1;
    sc_signal< sc_lv<9> > zext_ln203_fu_134_p1;
    sc_signal< sc_lv<9> > sub_ln203_1_fu_176_p2;
    sc_signal< sc_lv<8> > zext_ln203_5_fu_202_p1;
    sc_signal< sc_lv<8> > add_ln203_fu_206_p2;
    sc_signal< sc_lv<6> > trunc_ln203_fu_211_p1;
    sc_signal< sc_lv<11> > p_shl4_cast_fu_215_p3;
    sc_signal< sc_lv<11> > p_shl5_cast_fu_223_p3;
    sc_signal< sc_lv<11> > zext_ln203_7_fu_253_p1;
    sc_signal< sc_lv<11> > add_ln203_1_fu_257_p2;
    sc_signal< sc_lv<10> > zext_ln203_6_fu_249_p1;
    sc_signal< sc_lv<10> > add_ln203_2_fu_267_p2;
    sc_signal< sc_lv<8> > trunc_ln203_1_fu_272_p1;
    sc_signal< sc_lv<11> > p_shl6_cast_fu_276_p3;
    sc_signal< sc_lv<11> > p_shl7_cast_fu_284_p3;
    sc_signal< sc_lv<11> > sub_ln203_3_fu_292_p2;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<5> ap_const_lv5_18;
    static const sc_lv<5> ap_const_lv5_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln203_1_fu_257_p2();
    void thread_add_ln203_2_fu_267_p2();
    void thread_add_ln203_3_fu_298_p2();
    void thread_add_ln203_fu_206_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_i_fu_120_p2();
    void thread_icmp_ln249_fu_114_p2();
    void thread_icmp_ln250_fu_186_p2();
    void thread_icmp_ln251_fu_237_p2();
    void thread_input_V_address0();
    void thread_input_V_ce0();
    void thread_j_fu_192_p2();
    void thread_k_fu_243_p2();
    void thread_output_V_address0();
    void thread_output_V_ce0();
    void thread_output_V_d0();
    void thread_output_V_we0();
    void thread_p_shl4_cast_fu_215_p3();
    void thread_p_shl5_cast_fu_223_p3();
    void thread_p_shl6_cast_fu_276_p3();
    void thread_p_shl7_cast_fu_284_p3();
    void thread_sext_ln203_1_fu_182_p1();
    void thread_sext_ln203_fu_160_p1();
    void thread_sub_ln203_1_fu_176_p2();
    void thread_sub_ln203_2_fu_231_p2();
    void thread_sub_ln203_3_fu_292_p2();
    void thread_sub_ln203_fu_154_p2();
    void thread_tmp_2_fu_126_p3();
    void thread_tmp_3_fu_142_p3();
    void thread_tmp_4_fu_164_p3();
    void thread_trunc_ln203_1_fu_272_p1();
    void thread_trunc_ln203_fu_211_p1();
    void thread_zext_ln203_1_fu_138_p1();
    void thread_zext_ln203_2_fu_150_p1();
    void thread_zext_ln203_3_fu_172_p1();
    void thread_zext_ln203_4_fu_198_p1();
    void thread_zext_ln203_5_fu_202_p1();
    void thread_zext_ln203_6_fu_249_p1();
    void thread_zext_ln203_7_fu_253_p1();
    void thread_zext_ln203_8_fu_262_p1();
    void thread_zext_ln203_9_fu_303_p1();
    void thread_zext_ln203_fu_134_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
