// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "apply_rotary_pos_emb.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic apply_rotary_pos_emb::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic apply_rotary_pos_emb::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> apply_rotary_pos_emb::ap_ST_fsm_state1 = "1";
const sc_lv<10> apply_rotary_pos_emb::ap_ST_fsm_state2 = "10";
const sc_lv<10> apply_rotary_pos_emb::ap_ST_fsm_state3 = "100";
const sc_lv<10> apply_rotary_pos_emb::ap_ST_fsm_state4 = "1000";
const sc_lv<10> apply_rotary_pos_emb::ap_ST_fsm_state5 = "10000";
const sc_lv<10> apply_rotary_pos_emb::ap_ST_fsm_state6 = "100000";
const sc_lv<10> apply_rotary_pos_emb::ap_ST_fsm_state7 = "1000000";
const sc_lv<10> apply_rotary_pos_emb::ap_ST_fsm_state8 = "10000000";
const sc_lv<10> apply_rotary_pos_emb::ap_ST_fsm_state9 = "100000000";
const sc_lv<10> apply_rotary_pos_emb::ap_ST_fsm_state10 = "1000000000";
const sc_lv<32> apply_rotary_pos_emb::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> apply_rotary_pos_emb::ap_const_lv32_3 = "11";
const sc_lv<32> apply_rotary_pos_emb::ap_const_lv32_7 = "111";
const sc_lv<32> apply_rotary_pos_emb::ap_const_lv32_1 = "1";
const sc_lv<1> apply_rotary_pos_emb::ap_const_lv1_0 = "0";
const sc_lv<32> apply_rotary_pos_emb::ap_const_lv32_2 = "10";
const sc_lv<32> apply_rotary_pos_emb::ap_const_lv32_5 = "101";
const sc_lv<32> apply_rotary_pos_emb::ap_const_lv32_6 = "110";
const sc_lv<32> apply_rotary_pos_emb::ap_const_lv32_8 = "1000";
const sc_lv<1> apply_rotary_pos_emb::ap_const_lv1_1 = "1";
const sc_lv<3> apply_rotary_pos_emb::ap_const_lv3_0 = "000";
const sc_lv<4> apply_rotary_pos_emb::ap_const_lv4_0 = "0000";
const sc_lv<32> apply_rotary_pos_emb::ap_const_lv32_4 = "100";
const sc_lv<5> apply_rotary_pos_emb::ap_const_lv5_0 = "00000";
const sc_lv<32> apply_rotary_pos_emb::ap_const_lv32_9 = "1001";
const sc_lv<3> apply_rotary_pos_emb::ap_const_lv3_4 = "100";
const sc_lv<3> apply_rotary_pos_emb::ap_const_lv3_1 = "1";
const sc_lv<4> apply_rotary_pos_emb::ap_const_lv4_C = "1100";
const sc_lv<4> apply_rotary_pos_emb::ap_const_lv4_1 = "1";
const sc_lv<5> apply_rotary_pos_emb::ap_const_lv5_C = "1100";
const sc_lv<40> apply_rotary_pos_emb::ap_const_lv40_0 = "0000000000000000000000000000000000000000";
const sc_lv<5> apply_rotary_pos_emb::ap_const_lv5_18 = "11000";
const sc_lv<5> apply_rotary_pos_emb::ap_const_lv5_1 = "1";
const sc_lv<32> apply_rotary_pos_emb::ap_const_lv32_10 = "10000";
const sc_lv<32> apply_rotary_pos_emb::ap_const_lv32_37 = "110111";
const bool apply_rotary_pos_emb::ap_const_boolean_1 = true;

apply_rotary_pos_emb::apply_rotary_pos_emb(sc_module_name name) : sc_module(name), mVcdFile(0) {
    cos_tab_V_5_U = new apply_rotary_pos_g8j("cos_tab_V_5_U");
    cos_tab_V_5_U->clk(ap_clk);
    cos_tab_V_5_U->reset(ap_rst);
    cos_tab_V_5_U->address0(cos_tab_V_5_address0);
    cos_tab_V_5_U->ce0(cos_tab_V_5_ce0);
    cos_tab_V_5_U->q0(cos_tab_V_5_q0);
    sin_tab_V_5_U = new apply_rotary_pos_hbi("sin_tab_V_5_U");
    sin_tab_V_5_U->clk(ap_clk);
    sin_tab_V_5_U->reset(ap_rst);
    sin_tab_V_5_U->address0(sin_tab_V_5_address0);
    sin_tab_V_5_U->ce0(sin_tab_V_5_ce0);
    sin_tab_V_5_U->q0(sin_tab_V_5_q0);
    rotated_q_0_V_U = new apply_rotary_pos_ibs("rotated_q_0_V_U");
    rotated_q_0_V_U->clk(ap_clk);
    rotated_q_0_V_U->reset(ap_rst);
    rotated_q_0_V_U->address0(rotated_q_0_V_address0);
    rotated_q_0_V_U->ce0(rotated_q_0_V_ce0);
    rotated_q_0_V_U->we0(rotated_q_0_V_we0);
    rotated_q_0_V_U->d0(rotated_q_0_V_d0);
    rotated_q_0_V_U->q0(rotated_q_0_V_q0);
    rotated_k_0_V_U = new apply_rotary_pos_ibs("rotated_k_0_V_U");
    rotated_k_0_V_U->clk(ap_clk);
    rotated_k_0_V_U->reset(ap_rst);
    rotated_k_0_V_U->address0(rotated_k_0_V_address0);
    rotated_k_0_V_U->ce0(rotated_k_0_V_ce0);
    rotated_k_0_V_U->we0(rotated_k_0_V_we0);
    rotated_k_0_V_U->d0(rotated_k_0_V_d0);
    rotated_k_0_V_U->q0(rotated_k_0_V_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln1116_fu_470_p2);
    sensitive << ( sub_ln1116_reg_619 );
    sensitive << ( zext_ln1116_2_fu_466_p1 );

    SC_METHOD(thread_add_ln1192_1_fu_542_p2);
    sensitive << ( mul_ln1118_5_reg_698 );
    sensitive << ( mul_ln1118_6_reg_703 );

    SC_METHOD(thread_add_ln1192_fu_527_p2);
    sensitive << ( mul_ln1118_reg_688 );
    sensitive << ( mul_ln1118_4_reg_693 );

    SC_METHOD(thread_add_ln1265_fu_385_p2);
    sensitive << ( sub_ln1265_reg_565 );
    sensitive << ( zext_ln1265_3_fu_381_p1 );

    SC_METHOD(thread_add_ln203_fu_364_p2);
    sensitive << ( sub_ln1265_reg_565 );
    sensitive << ( zext_ln203_fu_360_p1 );

    SC_METHOD(thread_add_ln211_fu_354_p2);
    sensitive << ( k_0_0_reg_265 );

    SC_METHOD(thread_add_ln212_fu_375_p2);
    sensitive << ( zext_ln211_fu_344_p1 );

    SC_METHOD(thread_add_ln223_fu_454_p2);
    sensitive << ( k16_0_0_reg_287 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln221_fu_410_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln221_fu_410_p2 );

    SC_METHOD(thread_cos_tab_V_5_address0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( zext_ln224_fu_460_p1 );

    SC_METHOD(thread_cos_tab_V_5_ce0);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_i_2_fu_416_p2);
    sensitive << ( i14_0_reg_276 );

    SC_METHOD(thread_i_fu_312_p2);
    sensitive << ( i_0_reg_254 );

    SC_METHOD(thread_icmp_ln209_fu_306_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_254 );

    SC_METHOD(thread_icmp_ln211_fu_348_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( k_0_0_reg_265 );

    SC_METHOD(thread_icmp_ln221_fu_410_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( i14_0_reg_276 );

    SC_METHOD(thread_icmp_ln223_fu_448_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( k16_0_0_reg_287 );

    SC_METHOD(thread_input_k_0_V_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( sext_ln1265_fu_390_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( sext_ln1116_fu_475_p1 );

    SC_METHOD(thread_input_k_0_V_address1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( sext_ln203_fu_369_p1 );

    SC_METHOD(thread_input_k_0_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_input_k_0_V_ce1);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_input_q_0_V_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( sext_ln1265_fu_390_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( sext_ln1116_fu_475_p1 );

    SC_METHOD(thread_input_q_0_V_address1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( sext_ln203_fu_369_p1 );

    SC_METHOD(thread_input_q_0_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_input_q_0_V_ce1);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_mul_ln1118_4_fu_502_p0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( sext_ln1118_7_fu_499_p1 );

    SC_METHOD(thread_mul_ln1118_4_fu_502_p1);
    sensitive << ( rotated_q_0_V_load_reg_678 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_mul_ln1118_4_fu_502_p2);
    sensitive << ( mul_ln1118_4_fu_502_p0 );
    sensitive << ( mul_ln1118_4_fu_502_p1 );

    SC_METHOD(thread_mul_ln1118_5_fu_512_p0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( sext_ln1118_5_fu_487_p1 );

    SC_METHOD(thread_mul_ln1118_5_fu_512_p1);
    sensitive << ( reg_302 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_mul_ln1118_5_fu_512_p2);
    sensitive << ( mul_ln1118_5_fu_512_p0 );
    sensitive << ( mul_ln1118_5_fu_512_p1 );

    SC_METHOD(thread_mul_ln1118_6_fu_521_p0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( sext_ln1118_7_fu_499_p1 );

    SC_METHOD(thread_mul_ln1118_6_fu_521_p1);
    sensitive << ( rotated_k_0_V_load_reg_683 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_mul_ln1118_6_fu_521_p2);
    sensitive << ( mul_ln1118_6_fu_521_p0 );
    sensitive << ( mul_ln1118_6_fu_521_p1 );

    SC_METHOD(thread_mul_ln1118_fu_490_p0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( sext_ln1118_5_fu_487_p1 );

    SC_METHOD(thread_mul_ln1118_fu_490_p1);
    sensitive << ( reg_298 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_mul_ln1118_fu_490_p2);
    sensitive << ( mul_ln1118_fu_490_p0 );
    sensitive << ( mul_ln1118_fu_490_p1 );

    SC_METHOD(thread_output_k_0_V_address0);
    sensitive << ( sext_ln1116_reg_632 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_output_k_0_V_ce0);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_output_k_0_V_d0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( add_ln1192_1_fu_542_p2 );

    SC_METHOD(thread_output_k_0_V_we0);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_output_q_0_V_address0);
    sensitive << ( sext_ln1116_reg_632 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_output_q_0_V_ce0);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_output_q_0_V_d0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( add_ln1192_fu_527_p2 );

    SC_METHOD(thread_output_q_0_V_we0);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_rotated_k_0_V_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln203_reg_579 );
    sensitive << ( sext_ln1265_reg_595 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( sext_ln1116_fu_475_p1 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_rotated_k_0_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_rotated_k_0_V_d0);
    sensitive << ( input_k_0_V_q1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( sub_ln703_35_fu_403_p2 );

    SC_METHOD(thread_rotated_k_0_V_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_rotated_q_0_V_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln203_reg_579 );
    sensitive << ( sext_ln1265_reg_595 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( sext_ln1116_fu_475_p1 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_rotated_q_0_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_rotated_q_0_V_d0);
    sensitive << ( input_q_0_V_q1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( sub_ln703_fu_396_p2 );

    SC_METHOD(thread_rotated_q_0_V_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_sext_ln1116_fu_475_p1);
    sensitive << ( add_ln1116_fu_470_p2 );

    SC_METHOD(thread_sext_ln1118_5_fu_487_p1);
    sensitive << ( cos_tab_V_5_load_reg_668 );

    SC_METHOD(thread_sext_ln1118_7_fu_499_p1);
    sensitive << ( sin_tab_V_5_load_reg_673 );

    SC_METHOD(thread_sext_ln1265_fu_390_p1);
    sensitive << ( add_ln1265_fu_385_p2 );

    SC_METHOD(thread_sext_ln203_fu_369_p1);
    sensitive << ( add_ln203_fu_364_p2 );

    SC_METHOD(thread_sin_tab_V_5_address0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( zext_ln224_fu_460_p1 );

    SC_METHOD(thread_sin_tab_V_5_ce0);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_sub_ln1116_fu_442_p2);
    sensitive << ( tmp_73_fu_422_p3 );
    sensitive << ( zext_ln1116_fu_438_p1 );

    SC_METHOD(thread_sub_ln1265_fu_338_p2);
    sensitive << ( tmp_71_fu_318_p3 );
    sensitive << ( zext_ln1265_fu_334_p1 );

    SC_METHOD(thread_sub_ln703_35_fu_403_p2);
    sensitive << ( reg_302 );

    SC_METHOD(thread_sub_ln703_fu_396_p2);
    sensitive << ( reg_298 );

    SC_METHOD(thread_tmp_71_fu_318_p3);
    sensitive << ( i_0_reg_254 );

    SC_METHOD(thread_tmp_72_fu_326_p3);
    sensitive << ( i_0_reg_254 );

    SC_METHOD(thread_tmp_73_fu_422_p3);
    sensitive << ( i14_0_reg_276 );

    SC_METHOD(thread_tmp_74_fu_430_p3);
    sensitive << ( i14_0_reg_276 );

    SC_METHOD(thread_zext_ln1116_2_fu_466_p1);
    sensitive << ( k16_0_0_reg_287 );

    SC_METHOD(thread_zext_ln1116_fu_438_p1);
    sensitive << ( tmp_74_fu_430_p3 );

    SC_METHOD(thread_zext_ln1265_3_fu_381_p1);
    sensitive << ( add_ln212_fu_375_p2 );

    SC_METHOD(thread_zext_ln1265_fu_334_p1);
    sensitive << ( tmp_72_fu_326_p3 );

    SC_METHOD(thread_zext_ln203_fu_360_p1);
    sensitive << ( k_0_0_reg_265 );

    SC_METHOD(thread_zext_ln211_fu_344_p1);
    sensitive << ( k_0_0_reg_265 );

    SC_METHOD(thread_zext_ln224_fu_460_p1);
    sensitive << ( k16_0_0_reg_287 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln209_fu_306_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln211_fu_348_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln221_fu_410_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln223_fu_448_p2 );

    ap_CS_fsm = "0000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "apply_rotary_pos_emb_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_q_0_V_address0, "(port)input_q_0_V_address0");
    sc_trace(mVcdFile, input_q_0_V_ce0, "(port)input_q_0_V_ce0");
    sc_trace(mVcdFile, input_q_0_V_q0, "(port)input_q_0_V_q0");
    sc_trace(mVcdFile, input_q_0_V_address1, "(port)input_q_0_V_address1");
    sc_trace(mVcdFile, input_q_0_V_ce1, "(port)input_q_0_V_ce1");
    sc_trace(mVcdFile, input_q_0_V_q1, "(port)input_q_0_V_q1");
    sc_trace(mVcdFile, input_k_0_V_address0, "(port)input_k_0_V_address0");
    sc_trace(mVcdFile, input_k_0_V_ce0, "(port)input_k_0_V_ce0");
    sc_trace(mVcdFile, input_k_0_V_q0, "(port)input_k_0_V_q0");
    sc_trace(mVcdFile, input_k_0_V_address1, "(port)input_k_0_V_address1");
    sc_trace(mVcdFile, input_k_0_V_ce1, "(port)input_k_0_V_ce1");
    sc_trace(mVcdFile, input_k_0_V_q1, "(port)input_k_0_V_q1");
    sc_trace(mVcdFile, output_q_0_V_address0, "(port)output_q_0_V_address0");
    sc_trace(mVcdFile, output_q_0_V_ce0, "(port)output_q_0_V_ce0");
    sc_trace(mVcdFile, output_q_0_V_we0, "(port)output_q_0_V_we0");
    sc_trace(mVcdFile, output_q_0_V_d0, "(port)output_q_0_V_d0");
    sc_trace(mVcdFile, output_k_0_V_address0, "(port)output_k_0_V_address0");
    sc_trace(mVcdFile, output_k_0_V_ce0, "(port)output_k_0_V_ce0");
    sc_trace(mVcdFile, output_k_0_V_we0, "(port)output_k_0_V_we0");
    sc_trace(mVcdFile, output_k_0_V_d0, "(port)output_k_0_V_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, cos_tab_V_5_address0, "cos_tab_V_5_address0");
    sc_trace(mVcdFile, cos_tab_V_5_ce0, "cos_tab_V_5_ce0");
    sc_trace(mVcdFile, cos_tab_V_5_q0, "cos_tab_V_5_q0");
    sc_trace(mVcdFile, sin_tab_V_5_address0, "sin_tab_V_5_address0");
    sc_trace(mVcdFile, sin_tab_V_5_ce0, "sin_tab_V_5_ce0");
    sc_trace(mVcdFile, sin_tab_V_5_q0, "sin_tab_V_5_q0");
    sc_trace(mVcdFile, reg_298, "reg_298");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, reg_302, "reg_302");
    sc_trace(mVcdFile, i_fu_312_p2, "i_fu_312_p2");
    sc_trace(mVcdFile, i_reg_560, "i_reg_560");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, sub_ln1265_fu_338_p2, "sub_ln1265_fu_338_p2");
    sc_trace(mVcdFile, sub_ln1265_reg_565, "sub_ln1265_reg_565");
    sc_trace(mVcdFile, icmp_ln209_fu_306_p2, "icmp_ln209_fu_306_p2");
    sc_trace(mVcdFile, add_ln211_fu_354_p2, "add_ln211_fu_354_p2");
    sc_trace(mVcdFile, add_ln211_reg_574, "add_ln211_reg_574");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, sext_ln203_fu_369_p1, "sext_ln203_fu_369_p1");
    sc_trace(mVcdFile, sext_ln203_reg_579, "sext_ln203_reg_579");
    sc_trace(mVcdFile, icmp_ln211_fu_348_p2, "icmp_ln211_fu_348_p2");
    sc_trace(mVcdFile, sext_ln1265_fu_390_p1, "sext_ln1265_fu_390_p1");
    sc_trace(mVcdFile, sext_ln1265_reg_595, "sext_ln1265_reg_595");
    sc_trace(mVcdFile, i_2_fu_416_p2, "i_2_fu_416_p2");
    sc_trace(mVcdFile, i_2_reg_614, "i_2_reg_614");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, sub_ln1116_fu_442_p2, "sub_ln1116_fu_442_p2");
    sc_trace(mVcdFile, sub_ln1116_reg_619, "sub_ln1116_reg_619");
    sc_trace(mVcdFile, icmp_ln221_fu_410_p2, "icmp_ln221_fu_410_p2");
    sc_trace(mVcdFile, add_ln223_fu_454_p2, "add_ln223_fu_454_p2");
    sc_trace(mVcdFile, add_ln223_reg_627, "add_ln223_reg_627");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, sext_ln1116_fu_475_p1, "sext_ln1116_fu_475_p1");
    sc_trace(mVcdFile, sext_ln1116_reg_632, "sext_ln1116_reg_632");
    sc_trace(mVcdFile, icmp_ln223_fu_448_p2, "icmp_ln223_fu_448_p2");
    sc_trace(mVcdFile, cos_tab_V_5_load_reg_668, "cos_tab_V_5_load_reg_668");
    sc_trace(mVcdFile, sin_tab_V_5_load_reg_673, "sin_tab_V_5_load_reg_673");
    sc_trace(mVcdFile, rotated_q_0_V_q0, "rotated_q_0_V_q0");
    sc_trace(mVcdFile, rotated_q_0_V_load_reg_678, "rotated_q_0_V_load_reg_678");
    sc_trace(mVcdFile, rotated_k_0_V_q0, "rotated_k_0_V_q0");
    sc_trace(mVcdFile, rotated_k_0_V_load_reg_683, "rotated_k_0_V_load_reg_683");
    sc_trace(mVcdFile, mul_ln1118_fu_490_p2, "mul_ln1118_fu_490_p2");
    sc_trace(mVcdFile, mul_ln1118_reg_688, "mul_ln1118_reg_688");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, mul_ln1118_4_fu_502_p2, "mul_ln1118_4_fu_502_p2");
    sc_trace(mVcdFile, mul_ln1118_4_reg_693, "mul_ln1118_4_reg_693");
    sc_trace(mVcdFile, mul_ln1118_5_fu_512_p2, "mul_ln1118_5_fu_512_p2");
    sc_trace(mVcdFile, mul_ln1118_5_reg_698, "mul_ln1118_5_reg_698");
    sc_trace(mVcdFile, mul_ln1118_6_fu_521_p2, "mul_ln1118_6_fu_521_p2");
    sc_trace(mVcdFile, mul_ln1118_6_reg_703, "mul_ln1118_6_reg_703");
    sc_trace(mVcdFile, rotated_q_0_V_address0, "rotated_q_0_V_address0");
    sc_trace(mVcdFile, rotated_q_0_V_ce0, "rotated_q_0_V_ce0");
    sc_trace(mVcdFile, rotated_q_0_V_we0, "rotated_q_0_V_we0");
    sc_trace(mVcdFile, rotated_q_0_V_d0, "rotated_q_0_V_d0");
    sc_trace(mVcdFile, rotated_k_0_V_address0, "rotated_k_0_V_address0");
    sc_trace(mVcdFile, rotated_k_0_V_ce0, "rotated_k_0_V_ce0");
    sc_trace(mVcdFile, rotated_k_0_V_we0, "rotated_k_0_V_we0");
    sc_trace(mVcdFile, rotated_k_0_V_d0, "rotated_k_0_V_d0");
    sc_trace(mVcdFile, i_0_reg_254, "i_0_reg_254");
    sc_trace(mVcdFile, k_0_0_reg_265, "k_0_0_reg_265");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, i14_0_reg_276, "i14_0_reg_276");
    sc_trace(mVcdFile, k16_0_0_reg_287, "k16_0_0_reg_287");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, zext_ln224_fu_460_p1, "zext_ln224_fu_460_p1");
    sc_trace(mVcdFile, sub_ln703_fu_396_p2, "sub_ln703_fu_396_p2");
    sc_trace(mVcdFile, sub_ln703_35_fu_403_p2, "sub_ln703_35_fu_403_p2");
    sc_trace(mVcdFile, tmp_72_fu_326_p3, "tmp_72_fu_326_p3");
    sc_trace(mVcdFile, tmp_71_fu_318_p3, "tmp_71_fu_318_p3");
    sc_trace(mVcdFile, zext_ln1265_fu_334_p1, "zext_ln1265_fu_334_p1");
    sc_trace(mVcdFile, zext_ln203_fu_360_p1, "zext_ln203_fu_360_p1");
    sc_trace(mVcdFile, add_ln203_fu_364_p2, "add_ln203_fu_364_p2");
    sc_trace(mVcdFile, zext_ln211_fu_344_p1, "zext_ln211_fu_344_p1");
    sc_trace(mVcdFile, add_ln212_fu_375_p2, "add_ln212_fu_375_p2");
    sc_trace(mVcdFile, zext_ln1265_3_fu_381_p1, "zext_ln1265_3_fu_381_p1");
    sc_trace(mVcdFile, add_ln1265_fu_385_p2, "add_ln1265_fu_385_p2");
    sc_trace(mVcdFile, tmp_74_fu_430_p3, "tmp_74_fu_430_p3");
    sc_trace(mVcdFile, tmp_73_fu_422_p3, "tmp_73_fu_422_p3");
    sc_trace(mVcdFile, zext_ln1116_fu_438_p1, "zext_ln1116_fu_438_p1");
    sc_trace(mVcdFile, zext_ln1116_2_fu_466_p1, "zext_ln1116_2_fu_466_p1");
    sc_trace(mVcdFile, add_ln1116_fu_470_p2, "add_ln1116_fu_470_p2");
    sc_trace(mVcdFile, mul_ln1118_fu_490_p0, "mul_ln1118_fu_490_p0");
    sc_trace(mVcdFile, sext_ln1118_5_fu_487_p1, "sext_ln1118_5_fu_487_p1");
    sc_trace(mVcdFile, mul_ln1118_fu_490_p1, "mul_ln1118_fu_490_p1");
    sc_trace(mVcdFile, mul_ln1118_4_fu_502_p0, "mul_ln1118_4_fu_502_p0");
    sc_trace(mVcdFile, sext_ln1118_7_fu_499_p1, "sext_ln1118_7_fu_499_p1");
    sc_trace(mVcdFile, mul_ln1118_4_fu_502_p1, "mul_ln1118_4_fu_502_p1");
    sc_trace(mVcdFile, mul_ln1118_5_fu_512_p0, "mul_ln1118_5_fu_512_p0");
    sc_trace(mVcdFile, mul_ln1118_5_fu_512_p1, "mul_ln1118_5_fu_512_p1");
    sc_trace(mVcdFile, mul_ln1118_6_fu_521_p0, "mul_ln1118_6_fu_521_p0");
    sc_trace(mVcdFile, mul_ln1118_6_fu_521_p1, "mul_ln1118_6_fu_521_p1");
    sc_trace(mVcdFile, add_ln1192_fu_527_p2, "add_ln1192_fu_527_p2");
    sc_trace(mVcdFile, add_ln1192_1_fu_542_p2, "add_ln1192_1_fu_542_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

apply_rotary_pos_emb::~apply_rotary_pos_emb() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete cos_tab_V_5_U;
    delete sin_tab_V_5_U;
    delete rotated_q_0_V_U;
    delete rotated_k_0_V_U;
}

void apply_rotary_pos_emb::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln209_fu_306_p2.read(), ap_const_lv1_1))) {
        i14_0_reg_276 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(icmp_ln223_fu_448_p2.read(), ap_const_lv1_1))) {
        i14_0_reg_276 = i_2_reg_614.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_254 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(icmp_ln211_fu_348_p2.read(), ap_const_lv1_1))) {
        i_0_reg_254 = i_reg_560.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        k16_0_0_reg_287 = add_ln223_reg_627.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln221_fu_410_p2.read()))) {
        k16_0_0_reg_287 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        k_0_0_reg_265 = add_ln211_reg_574.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln209_fu_306_p2.read(), ap_const_lv1_0))) {
        k_0_0_reg_265 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        add_ln211_reg_574 = add_ln211_fu_354_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        add_ln223_reg_627 = add_ln223_fu_454_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        cos_tab_V_5_load_reg_668 = cos_tab_V_5_q0.read();
        rotated_k_0_V_load_reg_683 = rotated_k_0_V_q0.read();
        rotated_q_0_V_load_reg_678 = rotated_q_0_V_q0.read();
        sin_tab_V_5_load_reg_673 = sin_tab_V_5_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i_2_reg_614 = i_2_fu_416_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_560 = i_fu_312_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        mul_ln1118_4_reg_693 = mul_ln1118_4_fu_502_p2.read();
        mul_ln1118_5_reg_698 = mul_ln1118_5_fu_512_p2.read();
        mul_ln1118_6_reg_703 = mul_ln1118_6_fu_521_p2.read();
        mul_ln1118_reg_688 = mul_ln1118_fu_490_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        reg_298 = input_q_0_V_q0.read();
        reg_302 = input_k_0_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln223_fu_448_p2.read()))) {
        sext_ln1116_reg_632 = sext_ln1116_fu_475_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln211_fu_348_p2.read()))) {
        sext_ln1265_reg_595 = sext_ln1265_fu_390_p1.read();
        sext_ln203_reg_579 = sext_ln203_fu_369_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln221_fu_410_p2.read()))) {
        sub_ln1116_reg_619 = sub_ln1116_fu_442_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln209_fu_306_p2.read(), ap_const_lv1_0))) {
        sub_ln1265_reg_565 = sub_ln1265_fu_338_p2.read();
    }
}

void apply_rotary_pos_emb::thread_add_ln1116_fu_470_p2() {
    add_ln1116_fu_470_p2 = (!sub_ln1116_reg_619.read().is_01() || !zext_ln1116_2_fu_466_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(sub_ln1116_reg_619.read()) + sc_biguint<8>(zext_ln1116_2_fu_466_p1.read()));
}

void apply_rotary_pos_emb::thread_add_ln1192_1_fu_542_p2() {
    add_ln1192_1_fu_542_p2 = (!mul_ln1118_5_reg_698.read().is_01() || !mul_ln1118_6_reg_703.read().is_01())? sc_lv<56>(): (sc_biguint<56>(mul_ln1118_5_reg_698.read()) + sc_biguint<56>(mul_ln1118_6_reg_703.read()));
}

void apply_rotary_pos_emb::thread_add_ln1192_fu_527_p2() {
    add_ln1192_fu_527_p2 = (!mul_ln1118_reg_688.read().is_01() || !mul_ln1118_4_reg_693.read().is_01())? sc_lv<56>(): (sc_biguint<56>(mul_ln1118_reg_688.read()) + sc_biguint<56>(mul_ln1118_4_reg_693.read()));
}

void apply_rotary_pos_emb::thread_add_ln1265_fu_385_p2() {
    add_ln1265_fu_385_p2 = (!sub_ln1265_reg_565.read().is_01() || !zext_ln1265_3_fu_381_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(sub_ln1265_reg_565.read()) + sc_biguint<8>(zext_ln1265_3_fu_381_p1.read()));
}

void apply_rotary_pos_emb::thread_add_ln203_fu_364_p2() {
    add_ln203_fu_364_p2 = (!sub_ln1265_reg_565.read().is_01() || !zext_ln203_fu_360_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(sub_ln1265_reg_565.read()) + sc_biguint<8>(zext_ln203_fu_360_p1.read()));
}

void apply_rotary_pos_emb::thread_add_ln211_fu_354_p2() {
    add_ln211_fu_354_p2 = (!k_0_0_reg_265.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(k_0_0_reg_265.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void apply_rotary_pos_emb::thread_add_ln212_fu_375_p2() {
    add_ln212_fu_375_p2 = (!zext_ln211_fu_344_p1.read().is_01() || !ap_const_lv5_C.is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln211_fu_344_p1.read()) + sc_biguint<5>(ap_const_lv5_C));
}

void apply_rotary_pos_emb::thread_add_ln223_fu_454_p2() {
    add_ln223_fu_454_p2 = (!k16_0_0_reg_287.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(k16_0_0_reg_287.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void apply_rotary_pos_emb::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void apply_rotary_pos_emb::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void apply_rotary_pos_emb::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void apply_rotary_pos_emb::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void apply_rotary_pos_emb::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void apply_rotary_pos_emb::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void apply_rotary_pos_emb::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void apply_rotary_pos_emb::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void apply_rotary_pos_emb::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void apply_rotary_pos_emb::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void apply_rotary_pos_emb::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(icmp_ln221_fu_410_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void apply_rotary_pos_emb::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void apply_rotary_pos_emb::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(icmp_ln221_fu_410_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void apply_rotary_pos_emb::thread_cos_tab_V_5_address0() {
    cos_tab_V_5_address0 =  (sc_lv<7>) (zext_ln224_fu_460_p1.read());
}

void apply_rotary_pos_emb::thread_cos_tab_V_5_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        cos_tab_V_5_ce0 = ap_const_logic_1;
    } else {
        cos_tab_V_5_ce0 = ap_const_logic_0;
    }
}

void apply_rotary_pos_emb::thread_i_2_fu_416_p2() {
    i_2_fu_416_p2 = (!i14_0_reg_276.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i14_0_reg_276.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void apply_rotary_pos_emb::thread_i_fu_312_p2() {
    i_fu_312_p2 = (!i_0_reg_254.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_0_reg_254.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void apply_rotary_pos_emb::thread_icmp_ln209_fu_306_p2() {
    icmp_ln209_fu_306_p2 = (!i_0_reg_254.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_254.read() == ap_const_lv3_4);
}

void apply_rotary_pos_emb::thread_icmp_ln211_fu_348_p2() {
    icmp_ln211_fu_348_p2 = (!k_0_0_reg_265.read().is_01() || !ap_const_lv4_C.is_01())? sc_lv<1>(): sc_lv<1>(k_0_0_reg_265.read() == ap_const_lv4_C);
}

void apply_rotary_pos_emb::thread_icmp_ln221_fu_410_p2() {
    icmp_ln221_fu_410_p2 = (!i14_0_reg_276.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i14_0_reg_276.read() == ap_const_lv3_4);
}

void apply_rotary_pos_emb::thread_icmp_ln223_fu_448_p2() {
    icmp_ln223_fu_448_p2 = (!k16_0_0_reg_287.read().is_01() || !ap_const_lv5_18.is_01())? sc_lv<1>(): sc_lv<1>(k16_0_0_reg_287.read() == ap_const_lv5_18);
}

void apply_rotary_pos_emb::thread_input_k_0_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        input_k_0_V_address0 =  (sc_lv<7>) (sext_ln1116_fu_475_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        input_k_0_V_address0 =  (sc_lv<7>) (sext_ln1265_fu_390_p1.read());
    } else {
        input_k_0_V_address0 = "XXXXXXX";
    }
}

void apply_rotary_pos_emb::thread_input_k_0_V_address1() {
    input_k_0_V_address1 =  (sc_lv<7>) (sext_ln203_fu_369_p1.read());
}

void apply_rotary_pos_emb::thread_input_k_0_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        input_k_0_V_ce0 = ap_const_logic_1;
    } else {
        input_k_0_V_ce0 = ap_const_logic_0;
    }
}

void apply_rotary_pos_emb::thread_input_k_0_V_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        input_k_0_V_ce1 = ap_const_logic_1;
    } else {
        input_k_0_V_ce1 = ap_const_logic_0;
    }
}

void apply_rotary_pos_emb::thread_input_q_0_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        input_q_0_V_address0 =  (sc_lv<7>) (sext_ln1116_fu_475_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        input_q_0_V_address0 =  (sc_lv<7>) (sext_ln1265_fu_390_p1.read());
    } else {
        input_q_0_V_address0 = "XXXXXXX";
    }
}

void apply_rotary_pos_emb::thread_input_q_0_V_address1() {
    input_q_0_V_address1 =  (sc_lv<7>) (sext_ln203_fu_369_p1.read());
}

void apply_rotary_pos_emb::thread_input_q_0_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        input_q_0_V_ce0 = ap_const_logic_1;
    } else {
        input_q_0_V_ce0 = ap_const_logic_0;
    }
}

void apply_rotary_pos_emb::thread_input_q_0_V_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        input_q_0_V_ce1 = ap_const_logic_1;
    } else {
        input_q_0_V_ce1 = ap_const_logic_0;
    }
}

void apply_rotary_pos_emb::thread_mul_ln1118_4_fu_502_p0() {
    mul_ln1118_4_fu_502_p0 =  (sc_lv<17>) (sext_ln1118_7_fu_499_p1.read());
}

void apply_rotary_pos_emb::thread_mul_ln1118_4_fu_502_p1() {
    mul_ln1118_4_fu_502_p1 = rotated_q_0_V_load_reg_678.read();
}

void apply_rotary_pos_emb::thread_mul_ln1118_4_fu_502_p2() {
    mul_ln1118_4_fu_502_p2 = (!mul_ln1118_4_fu_502_p0.read().is_01() || !mul_ln1118_4_fu_502_p1.read().is_01())? sc_lv<56>(): sc_bigint<17>(mul_ln1118_4_fu_502_p0.read()) * sc_bigint<40>(mul_ln1118_4_fu_502_p1.read());
}

void apply_rotary_pos_emb::thread_mul_ln1118_5_fu_512_p0() {
    mul_ln1118_5_fu_512_p0 =  (sc_lv<17>) (sext_ln1118_5_fu_487_p1.read());
}

void apply_rotary_pos_emb::thread_mul_ln1118_5_fu_512_p1() {
    mul_ln1118_5_fu_512_p1 = reg_302.read();
}

void apply_rotary_pos_emb::thread_mul_ln1118_5_fu_512_p2() {
    mul_ln1118_5_fu_512_p2 = (!mul_ln1118_5_fu_512_p0.read().is_01() || !mul_ln1118_5_fu_512_p1.read().is_01())? sc_lv<56>(): sc_bigint<17>(mul_ln1118_5_fu_512_p0.read()) * sc_bigint<40>(mul_ln1118_5_fu_512_p1.read());
}

void apply_rotary_pos_emb::thread_mul_ln1118_6_fu_521_p0() {
    mul_ln1118_6_fu_521_p0 =  (sc_lv<17>) (sext_ln1118_7_fu_499_p1.read());
}

void apply_rotary_pos_emb::thread_mul_ln1118_6_fu_521_p1() {
    mul_ln1118_6_fu_521_p1 = rotated_k_0_V_load_reg_683.read();
}

void apply_rotary_pos_emb::thread_mul_ln1118_6_fu_521_p2() {
    mul_ln1118_6_fu_521_p2 = (!mul_ln1118_6_fu_521_p0.read().is_01() || !mul_ln1118_6_fu_521_p1.read().is_01())? sc_lv<56>(): sc_bigint<17>(mul_ln1118_6_fu_521_p0.read()) * sc_bigint<40>(mul_ln1118_6_fu_521_p1.read());
}

void apply_rotary_pos_emb::thread_mul_ln1118_fu_490_p0() {
    mul_ln1118_fu_490_p0 =  (sc_lv<17>) (sext_ln1118_5_fu_487_p1.read());
}

void apply_rotary_pos_emb::thread_mul_ln1118_fu_490_p1() {
    mul_ln1118_fu_490_p1 = reg_298.read();
}

void apply_rotary_pos_emb::thread_mul_ln1118_fu_490_p2() {
    mul_ln1118_fu_490_p2 = (!mul_ln1118_fu_490_p0.read().is_01() || !mul_ln1118_fu_490_p1.read().is_01())? sc_lv<56>(): sc_bigint<17>(mul_ln1118_fu_490_p0.read()) * sc_bigint<40>(mul_ln1118_fu_490_p1.read());
}

void apply_rotary_pos_emb::thread_output_k_0_V_address0() {
    output_k_0_V_address0 =  (sc_lv<7>) (sext_ln1116_reg_632.read());
}

void apply_rotary_pos_emb::thread_output_k_0_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        output_k_0_V_ce0 = ap_const_logic_1;
    } else {
        output_k_0_V_ce0 = ap_const_logic_0;
    }
}

void apply_rotary_pos_emb::thread_output_k_0_V_d0() {
    output_k_0_V_d0 = add_ln1192_1_fu_542_p2.read().range(55, 16);
}

void apply_rotary_pos_emb::thread_output_k_0_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        output_k_0_V_we0 = ap_const_logic_1;
    } else {
        output_k_0_V_we0 = ap_const_logic_0;
    }
}

void apply_rotary_pos_emb::thread_output_q_0_V_address0() {
    output_q_0_V_address0 =  (sc_lv<7>) (sext_ln1116_reg_632.read());
}

void apply_rotary_pos_emb::thread_output_q_0_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        output_q_0_V_ce0 = ap_const_logic_1;
    } else {
        output_q_0_V_ce0 = ap_const_logic_0;
    }
}

void apply_rotary_pos_emb::thread_output_q_0_V_d0() {
    output_q_0_V_d0 = add_ln1192_fu_527_p2.read().range(55, 16);
}

void apply_rotary_pos_emb::thread_output_q_0_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        output_q_0_V_we0 = ap_const_logic_1;
    } else {
        output_q_0_V_we0 = ap_const_logic_0;
    }
}

void apply_rotary_pos_emb::thread_rotated_k_0_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        rotated_k_0_V_address0 =  (sc_lv<7>) (sext_ln1116_fu_475_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        rotated_k_0_V_address0 =  (sc_lv<7>) (sext_ln203_reg_579.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        rotated_k_0_V_address0 =  (sc_lv<7>) (sext_ln1265_reg_595.read());
    } else {
        rotated_k_0_V_address0 = "XXXXXXX";
    }
}

void apply_rotary_pos_emb::thread_rotated_k_0_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        rotated_k_0_V_ce0 = ap_const_logic_1;
    } else {
        rotated_k_0_V_ce0 = ap_const_logic_0;
    }
}

void apply_rotary_pos_emb::thread_rotated_k_0_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        rotated_k_0_V_d0 = sub_ln703_35_fu_403_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        rotated_k_0_V_d0 = input_k_0_V_q1.read();
    } else {
        rotated_k_0_V_d0 =  (sc_lv<40>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void apply_rotary_pos_emb::thread_rotated_k_0_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        rotated_k_0_V_we0 = ap_const_logic_1;
    } else {
        rotated_k_0_V_we0 = ap_const_logic_0;
    }
}

void apply_rotary_pos_emb::thread_rotated_q_0_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        rotated_q_0_V_address0 =  (sc_lv<7>) (sext_ln1116_fu_475_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        rotated_q_0_V_address0 =  (sc_lv<7>) (sext_ln203_reg_579.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        rotated_q_0_V_address0 =  (sc_lv<7>) (sext_ln1265_reg_595.read());
    } else {
        rotated_q_0_V_address0 = "XXXXXXX";
    }
}

void apply_rotary_pos_emb::thread_rotated_q_0_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        rotated_q_0_V_ce0 = ap_const_logic_1;
    } else {
        rotated_q_0_V_ce0 = ap_const_logic_0;
    }
}

void apply_rotary_pos_emb::thread_rotated_q_0_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        rotated_q_0_V_d0 = sub_ln703_fu_396_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        rotated_q_0_V_d0 = input_q_0_V_q1.read();
    } else {
        rotated_q_0_V_d0 =  (sc_lv<40>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void apply_rotary_pos_emb::thread_rotated_q_0_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        rotated_q_0_V_we0 = ap_const_logic_1;
    } else {
        rotated_q_0_V_we0 = ap_const_logic_0;
    }
}

void apply_rotary_pos_emb::thread_sext_ln1116_fu_475_p1() {
    sext_ln1116_fu_475_p1 = esl_sext<64,8>(add_ln1116_fu_470_p2.read());
}

void apply_rotary_pos_emb::thread_sext_ln1118_5_fu_487_p1() {
    sext_ln1118_5_fu_487_p1 = esl_sext<56,17>(cos_tab_V_5_load_reg_668.read());
}

void apply_rotary_pos_emb::thread_sext_ln1118_7_fu_499_p1() {
    sext_ln1118_7_fu_499_p1 = esl_sext<56,17>(sin_tab_V_5_load_reg_673.read());
}

void apply_rotary_pos_emb::thread_sext_ln1265_fu_390_p1() {
    sext_ln1265_fu_390_p1 = esl_sext<64,8>(add_ln1265_fu_385_p2.read());
}

void apply_rotary_pos_emb::thread_sext_ln203_fu_369_p1() {
    sext_ln203_fu_369_p1 = esl_sext<64,8>(add_ln203_fu_364_p2.read());
}

void apply_rotary_pos_emb::thread_sin_tab_V_5_address0() {
    sin_tab_V_5_address0 =  (sc_lv<7>) (zext_ln224_fu_460_p1.read());
}

void apply_rotary_pos_emb::thread_sin_tab_V_5_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        sin_tab_V_5_ce0 = ap_const_logic_1;
    } else {
        sin_tab_V_5_ce0 = ap_const_logic_0;
    }
}

void apply_rotary_pos_emb::thread_sub_ln1116_fu_442_p2() {
    sub_ln1116_fu_442_p2 = (!tmp_73_fu_422_p3.read().is_01() || !zext_ln1116_fu_438_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_73_fu_422_p3.read()) - sc_biguint<8>(zext_ln1116_fu_438_p1.read()));
}

void apply_rotary_pos_emb::thread_sub_ln1265_fu_338_p2() {
    sub_ln1265_fu_338_p2 = (!tmp_71_fu_318_p3.read().is_01() || !zext_ln1265_fu_334_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_71_fu_318_p3.read()) - sc_biguint<8>(zext_ln1265_fu_334_p1.read()));
}

void apply_rotary_pos_emb::thread_sub_ln703_35_fu_403_p2() {
    sub_ln703_35_fu_403_p2 = (!ap_const_lv40_0.is_01() || !reg_302.read().is_01())? sc_lv<40>(): (sc_biguint<40>(ap_const_lv40_0) - sc_biguint<40>(reg_302.read()));
}

void apply_rotary_pos_emb::thread_sub_ln703_fu_396_p2() {
    sub_ln703_fu_396_p2 = (!ap_const_lv40_0.is_01() || !reg_298.read().is_01())? sc_lv<40>(): (sc_biguint<40>(ap_const_lv40_0) - sc_biguint<40>(reg_298.read()));
}

void apply_rotary_pos_emb::thread_tmp_71_fu_318_p3() {
    tmp_71_fu_318_p3 = esl_concat<3,5>(i_0_reg_254.read(), ap_const_lv5_0);
}

void apply_rotary_pos_emb::thread_tmp_72_fu_326_p3() {
    tmp_72_fu_326_p3 = esl_concat<3,3>(i_0_reg_254.read(), ap_const_lv3_0);
}

void apply_rotary_pos_emb::thread_tmp_73_fu_422_p3() {
    tmp_73_fu_422_p3 = esl_concat<3,5>(i14_0_reg_276.read(), ap_const_lv5_0);
}

void apply_rotary_pos_emb::thread_tmp_74_fu_430_p3() {
    tmp_74_fu_430_p3 = esl_concat<3,3>(i14_0_reg_276.read(), ap_const_lv3_0);
}

void apply_rotary_pos_emb::thread_zext_ln1116_2_fu_466_p1() {
    zext_ln1116_2_fu_466_p1 = esl_zext<8,5>(k16_0_0_reg_287.read());
}

void apply_rotary_pos_emb::thread_zext_ln1116_fu_438_p1() {
    zext_ln1116_fu_438_p1 = esl_zext<8,6>(tmp_74_fu_430_p3.read());
}

void apply_rotary_pos_emb::thread_zext_ln1265_3_fu_381_p1() {
    zext_ln1265_3_fu_381_p1 = esl_zext<8,5>(add_ln212_fu_375_p2.read());
}

void apply_rotary_pos_emb::thread_zext_ln1265_fu_334_p1() {
    zext_ln1265_fu_334_p1 = esl_zext<8,6>(tmp_72_fu_326_p3.read());
}

void apply_rotary_pos_emb::thread_zext_ln203_fu_360_p1() {
    zext_ln203_fu_360_p1 = esl_zext<8,4>(k_0_0_reg_265.read());
}

void apply_rotary_pos_emb::thread_zext_ln211_fu_344_p1() {
    zext_ln211_fu_344_p1 = esl_zext<5,4>(k_0_0_reg_265.read());
}

void apply_rotary_pos_emb::thread_zext_ln224_fu_460_p1() {
    zext_ln224_fu_460_p1 = esl_zext<64,5>(k16_0_0_reg_287.read());
}

void apply_rotary_pos_emb::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln209_fu_306_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln211_fu_348_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(icmp_ln221_fu_410_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(icmp_ln223_fu_448_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<10>) ("XXXXXXXXXX");
            break;
    }
}

}

