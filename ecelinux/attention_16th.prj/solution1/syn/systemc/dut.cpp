// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dut.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dut::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dut::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> dut::ap_ST_fsm_state1 = "1";
const sc_lv<5> dut::ap_ST_fsm_state2 = "10";
const sc_lv<5> dut::ap_ST_fsm_state3 = "100";
const sc_lv<5> dut::ap_ST_fsm_state4 = "1000";
const sc_lv<5> dut::ap_ST_fsm_state5 = "10000";
const sc_lv<32> dut::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> dut::ap_const_lv32_1 = "1";
const sc_lv<1> dut::ap_const_lv1_0 = "0";
const sc_lv<32> dut::ap_const_lv32_4 = "100";
const sc_lv<32> dut::ap_const_lv32_3 = "11";
const sc_lv<7> dut::ap_const_lv7_0 = "0000000";
const sc_lv<32> dut::ap_const_lv32_2 = "10";
const sc_lv<1> dut::ap_const_lv1_1 = "1";
const sc_lv<7> dut::ap_const_lv7_60 = "1100000";
const sc_lv<7> dut::ap_const_lv7_1 = "1";
const sc_lv<2> dut::ap_const_lv2_0 = "00";
const sc_lv<32> dut::ap_const_lv32_21 = "100001";
const bool dut::ap_const_boolean_1 = true;

dut::dut(sc_module_name name) : sc_module(name), mVcdFile(0) {
    input_0_V_U = new dut_input_0_V("input_0_V_U");
    input_0_V_U->clk(ap_clk);
    input_0_V_U->reset(ap_rst);
    input_0_V_U->address0(input_0_V_address0);
    input_0_V_U->ce0(input_0_V_ce0);
    input_0_V_U->we0(input_0_V_we0);
    input_0_V_U->d0(input_0_V_d0);
    input_0_V_U->q0(input_0_V_q0);
    input_0_V_U->address1(grp_attention_fu_173_hidden_states_0_V_address1);
    input_0_V_U->ce1(input_0_V_ce1);
    input_0_V_U->q1(input_0_V_q1);
    output_0_U = new dut_output_0("output_0_U");
    output_0_U->clk(ap_clk);
    output_0_U->reset(ap_rst);
    output_0_U->address0(output_0_address0);
    output_0_U->ce0(output_0_ce0);
    output_0_U->we0(output_0_we0);
    output_0_U->d0(grp_attention_fu_173_final_output_0_V_d0);
    output_0_U->q0(output_0_q0);
    output_0_U->address1(grp_attention_fu_173_final_output_0_V_address1);
    output_0_U->ce1(output_0_ce1);
    output_0_U->we1(output_0_we1);
    output_0_U->d1(grp_attention_fu_173_final_output_0_V_d1);
    grp_attention_fu_173 = new attention("grp_attention_fu_173");
    grp_attention_fu_173->ap_clk(ap_clk);
    grp_attention_fu_173->ap_rst(ap_rst);
    grp_attention_fu_173->ap_start(grp_attention_fu_173_ap_start);
    grp_attention_fu_173->ap_done(grp_attention_fu_173_ap_done);
    grp_attention_fu_173->ap_idle(grp_attention_fu_173_ap_idle);
    grp_attention_fu_173->ap_ready(grp_attention_fu_173_ap_ready);
    grp_attention_fu_173->hidden_states_0_V_address0(grp_attention_fu_173_hidden_states_0_V_address0);
    grp_attention_fu_173->hidden_states_0_V_ce0(grp_attention_fu_173_hidden_states_0_V_ce0);
    grp_attention_fu_173->hidden_states_0_V_we0(grp_attention_fu_173_hidden_states_0_V_we0);
    grp_attention_fu_173->hidden_states_0_V_d0(grp_attention_fu_173_hidden_states_0_V_d0);
    grp_attention_fu_173->hidden_states_0_V_q0(input_0_V_q0);
    grp_attention_fu_173->hidden_states_0_V_address1(grp_attention_fu_173_hidden_states_0_V_address1);
    grp_attention_fu_173->hidden_states_0_V_ce1(grp_attention_fu_173_hidden_states_0_V_ce1);
    grp_attention_fu_173->hidden_states_0_V_q1(input_0_V_q1);
    grp_attention_fu_173->final_output_0_V_address0(grp_attention_fu_173_final_output_0_V_address0);
    grp_attention_fu_173->final_output_0_V_ce0(grp_attention_fu_173_final_output_0_V_ce0);
    grp_attention_fu_173->final_output_0_V_we0(grp_attention_fu_173_final_output_0_V_we0);
    grp_attention_fu_173->final_output_0_V_d0(grp_attention_fu_173_final_output_0_V_d0);
    grp_attention_fu_173->final_output_0_V_q0(output_0_q0);
    grp_attention_fu_173->final_output_0_V_address1(grp_attention_fu_173_final_output_0_V_address1);
    grp_attention_fu_173->final_output_0_V_ce1(grp_attention_fu_173_final_output_0_V_ce1);
    grp_attention_fu_173->final_output_0_V_we1(grp_attention_fu_173_final_output_0_V_we1);
    grp_attention_fu_173->final_output_0_V_d1(grp_attention_fu_173_final_output_0_V_d1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln19_fu_241_p2);
    sensitive << ( j_0_0_reg_151 );

    SC_METHOD(thread_add_ln51_fu_271_p2);
    sensitive << ( j9_0_0_reg_162 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( strm_in_V_V_empty_n );
    sensitive << ( icmp_ln19_fu_235_p2 );

    SC_METHOD(thread_ap_block_state2_ignore_call0);
    sensitive << ( strm_in_V_V_empty_n );
    sensitive << ( icmp_ln19_fu_235_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln51_fu_265_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln51_fu_265_p2 );

    SC_METHOD(thread_grp_attention_fu_173_ap_start);
    sensitive << ( grp_attention_fu_173_ap_start_reg );

    SC_METHOD(thread_icmp_ln19_fu_235_p2);
    sensitive << ( strm_in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln19_fu_235_p2 );
    sensitive << ( j_0_0_reg_151 );

    SC_METHOD(thread_icmp_ln51_fu_265_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( j9_0_0_reg_162 );

    SC_METHOD(thread_input_0_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln19_fu_235_p2 );
    sensitive << ( grp_attention_fu_173_hidden_states_0_V_address0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln20_fu_247_p1 );

    SC_METHOD(thread_input_0_V_ce0);
    sensitive << ( strm_in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln19_fu_235_p2 );
    sensitive << ( grp_attention_fu_173_hidden_states_0_V_ce0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_input_0_V_ce1);
    sensitive << ( grp_attention_fu_173_hidden_states_0_V_ce1 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_input_0_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln19_fu_235_p2 );
    sensitive << ( grp_attention_fu_173_hidden_states_0_V_d0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( sext_ln728_fu_260_p1 );

    SC_METHOD(thread_input_0_V_we0);
    sensitive << ( strm_in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln19_fu_235_p2 );
    sensitive << ( grp_attention_fu_173_hidden_states_0_V_we0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_output_0_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_attention_fu_173_final_output_0_V_address0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln52_fu_277_p1 );

    SC_METHOD(thread_output_0_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_attention_fu_173_final_output_0_V_ce0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_output_0_ce1);
    sensitive << ( grp_attention_fu_173_final_output_0_V_ce1 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_output_0_we0);
    sensitive << ( grp_attention_fu_173_final_output_0_V_we0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_output_0_we1);
    sensitive << ( grp_attention_fu_173_final_output_0_V_we1 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_sext_ln728_fu_260_p1);
    sensitive << ( shl_ln_fu_252_p3 );

    SC_METHOD(thread_shl_ln_fu_252_p3);
    sensitive << ( strm_in_V_V_dout );

    SC_METHOD(thread_strm_in_V_V_blk_n);
    sensitive << ( strm_in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln19_fu_235_p2 );

    SC_METHOD(thread_strm_in_V_V_read);
    sensitive << ( strm_in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln19_fu_235_p2 );

    SC_METHOD(thread_strm_out_V_V_blk_n);
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_strm_out_V_V_din);
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( output_0_q0 );

    SC_METHOD(thread_strm_out_V_V_write);
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_zext_ln20_fu_247_p1);
    sensitive << ( j_0_0_reg_151 );

    SC_METHOD(thread_zext_ln52_fu_277_p1);
    sensitive << ( j9_0_0_reg_162 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( strm_in_V_V_empty_n );
    sensitive << ( strm_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln19_fu_235_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln51_fu_265_p2 );
    sensitive << ( grp_attention_fu_173_ap_done );
    sensitive << ( ap_CS_fsm_state3 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00001";
    grp_attention_fu_173_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dut_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, strm_in_V_V_dout, "(port)strm_in_V_V_dout");
    sc_trace(mVcdFile, strm_in_V_V_empty_n, "(port)strm_in_V_V_empty_n");
    sc_trace(mVcdFile, strm_in_V_V_read, "(port)strm_in_V_V_read");
    sc_trace(mVcdFile, strm_out_V_V_din, "(port)strm_out_V_V_din");
    sc_trace(mVcdFile, strm_out_V_V_full_n, "(port)strm_out_V_V_full_n");
    sc_trace(mVcdFile, strm_out_V_V_write, "(port)strm_out_V_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, strm_in_V_V_blk_n, "strm_in_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln19_fu_235_p2, "icmp_ln19_fu_235_p2");
    sc_trace(mVcdFile, strm_out_V_V_blk_n, "strm_out_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, add_ln19_fu_241_p2, "add_ln19_fu_241_p2");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, add_ln51_fu_271_p2, "add_ln51_fu_271_p2");
    sc_trace(mVcdFile, add_ln51_reg_304, "add_ln51_reg_304");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln51_fu_265_p2, "icmp_ln51_fu_265_p2");
    sc_trace(mVcdFile, input_0_V_address0, "input_0_V_address0");
    sc_trace(mVcdFile, input_0_V_ce0, "input_0_V_ce0");
    sc_trace(mVcdFile, input_0_V_we0, "input_0_V_we0");
    sc_trace(mVcdFile, input_0_V_d0, "input_0_V_d0");
    sc_trace(mVcdFile, input_0_V_q0, "input_0_V_q0");
    sc_trace(mVcdFile, input_0_V_ce1, "input_0_V_ce1");
    sc_trace(mVcdFile, input_0_V_q1, "input_0_V_q1");
    sc_trace(mVcdFile, output_0_address0, "output_0_address0");
    sc_trace(mVcdFile, output_0_ce0, "output_0_ce0");
    sc_trace(mVcdFile, output_0_we0, "output_0_we0");
    sc_trace(mVcdFile, output_0_q0, "output_0_q0");
    sc_trace(mVcdFile, output_0_ce1, "output_0_ce1");
    sc_trace(mVcdFile, output_0_we1, "output_0_we1");
    sc_trace(mVcdFile, grp_attention_fu_173_ap_start, "grp_attention_fu_173_ap_start");
    sc_trace(mVcdFile, grp_attention_fu_173_ap_done, "grp_attention_fu_173_ap_done");
    sc_trace(mVcdFile, grp_attention_fu_173_ap_idle, "grp_attention_fu_173_ap_idle");
    sc_trace(mVcdFile, grp_attention_fu_173_ap_ready, "grp_attention_fu_173_ap_ready");
    sc_trace(mVcdFile, grp_attention_fu_173_hidden_states_0_V_address0, "grp_attention_fu_173_hidden_states_0_V_address0");
    sc_trace(mVcdFile, grp_attention_fu_173_hidden_states_0_V_ce0, "grp_attention_fu_173_hidden_states_0_V_ce0");
    sc_trace(mVcdFile, grp_attention_fu_173_hidden_states_0_V_we0, "grp_attention_fu_173_hidden_states_0_V_we0");
    sc_trace(mVcdFile, grp_attention_fu_173_hidden_states_0_V_d0, "grp_attention_fu_173_hidden_states_0_V_d0");
    sc_trace(mVcdFile, grp_attention_fu_173_hidden_states_0_V_address1, "grp_attention_fu_173_hidden_states_0_V_address1");
    sc_trace(mVcdFile, grp_attention_fu_173_hidden_states_0_V_ce1, "grp_attention_fu_173_hidden_states_0_V_ce1");
    sc_trace(mVcdFile, grp_attention_fu_173_final_output_0_V_address0, "grp_attention_fu_173_final_output_0_V_address0");
    sc_trace(mVcdFile, grp_attention_fu_173_final_output_0_V_ce0, "grp_attention_fu_173_final_output_0_V_ce0");
    sc_trace(mVcdFile, grp_attention_fu_173_final_output_0_V_we0, "grp_attention_fu_173_final_output_0_V_we0");
    sc_trace(mVcdFile, grp_attention_fu_173_final_output_0_V_d0, "grp_attention_fu_173_final_output_0_V_d0");
    sc_trace(mVcdFile, grp_attention_fu_173_final_output_0_V_address1, "grp_attention_fu_173_final_output_0_V_address1");
    sc_trace(mVcdFile, grp_attention_fu_173_final_output_0_V_ce1, "grp_attention_fu_173_final_output_0_V_ce1");
    sc_trace(mVcdFile, grp_attention_fu_173_final_output_0_V_we1, "grp_attention_fu_173_final_output_0_V_we1");
    sc_trace(mVcdFile, grp_attention_fu_173_final_output_0_V_d1, "grp_attention_fu_173_final_output_0_V_d1");
    sc_trace(mVcdFile, j_0_0_reg_151, "j_0_0_reg_151");
    sc_trace(mVcdFile, j9_0_0_reg_162, "j9_0_0_reg_162");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, grp_attention_fu_173_ap_start_reg, "grp_attention_fu_173_ap_start_reg");
    sc_trace(mVcdFile, ap_block_state2_ignore_call0, "ap_block_state2_ignore_call0");
    sc_trace(mVcdFile, zext_ln20_fu_247_p1, "zext_ln20_fu_247_p1");
    sc_trace(mVcdFile, zext_ln52_fu_277_p1, "zext_ln52_fu_277_p1");
    sc_trace(mVcdFile, sext_ln728_fu_260_p1, "sext_ln728_fu_260_p1");
    sc_trace(mVcdFile, shl_ln_fu_252_p3, "shl_ln_fu_252_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("dut.hdltvin.dat");
    mHdltvoutHandle.open("dut.hdltvout.dat");
}

dut::~dut() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete input_0_V_U;
    delete output_0_U;
    delete grp_attention_fu_173;
}

void dut::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_attention_fu_173_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
             !(esl_seteq<1,1,1>(icmp_ln19_fu_235_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read())) && 
             esl_seteq<1,1,1>(icmp_ln19_fu_235_p2.read(), ap_const_lv1_1))) {
            grp_attention_fu_173_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_attention_fu_173_ap_ready.read())) {
            grp_attention_fu_173_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(grp_attention_fu_173_ap_done.read(), ap_const_logic_1))) {
        j9_0_0_reg_162 = ap_const_lv7_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
        j9_0_0_reg_162 = add_ln51_reg_304.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_0_0_reg_151 = ap_const_lv7_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln19_fu_235_p2.read(), ap_const_lv1_0) && 
                !(esl_seteq<1,1,1>(icmp_ln19_fu_235_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read())))) {
        j_0_0_reg_151 = add_ln19_fu_241_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        add_ln51_reg_304 = add_ln51_fu_271_p2.read();
    }
}

void dut::thread_add_ln19_fu_241_p2() {
    add_ln19_fu_241_p2 = (!j_0_0_reg_151.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(j_0_0_reg_151.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void dut::thread_add_ln51_fu_271_p2() {
    add_ln51_fu_271_p2 = (!j9_0_0_reg_162.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(j9_0_0_reg_162.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void dut::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void dut::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void dut::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void dut::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void dut::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void dut::thread_ap_block_state2() {
    ap_block_state2 = (esl_seteq<1,1,1>(icmp_ln19_fu_235_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read()));
}

void dut::thread_ap_block_state2_ignore_call0() {
    ap_block_state2_ignore_call0 = (esl_seteq<1,1,1>(icmp_ln19_fu_235_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read()));
}

void dut::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln51_fu_265_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void dut::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dut::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln51_fu_265_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void dut::thread_grp_attention_fu_173_ap_start() {
    grp_attention_fu_173_ap_start = grp_attention_fu_173_ap_start_reg.read();
}

void dut::thread_icmp_ln19_fu_235_p2() {
    icmp_ln19_fu_235_p2 = (!j_0_0_reg_151.read().is_01() || !ap_const_lv7_60.is_01())? sc_lv<1>(): sc_lv<1>(j_0_0_reg_151.read() == ap_const_lv7_60);
}

void dut::thread_icmp_ln51_fu_265_p2() {
    icmp_ln51_fu_265_p2 = (!j9_0_0_reg_162.read().is_01() || !ap_const_lv7_60.is_01())? sc_lv<1>(): sc_lv<1>(j9_0_0_reg_162.read() == ap_const_lv7_60);
}

void dut::thread_input_0_V_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln19_fu_235_p2.read(), ap_const_lv1_0))) {
        input_0_V_address0 =  (sc_lv<7>) (zext_ln20_fu_247_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        input_0_V_address0 = grp_attention_fu_173_hidden_states_0_V_address0.read();
    } else {
        input_0_V_address0 = "XXXXXXX";
    }
}

void dut::thread_input_0_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln19_fu_235_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(icmp_ln19_fu_235_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read())))) {
        input_0_V_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        input_0_V_ce0 = grp_attention_fu_173_hidden_states_0_V_ce0.read();
    } else {
        input_0_V_ce0 = ap_const_logic_0;
    }
}

void dut::thread_input_0_V_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        input_0_V_ce1 = grp_attention_fu_173_hidden_states_0_V_ce1.read();
    } else {
        input_0_V_ce1 = ap_const_logic_0;
    }
}

void dut::thread_input_0_V_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln19_fu_235_p2.read(), ap_const_lv1_0))) {
        input_0_V_d0 = sext_ln728_fu_260_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        input_0_V_d0 = grp_attention_fu_173_hidden_states_0_V_d0.read();
    } else {
        input_0_V_d0 =  (sc_lv<38>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void dut::thread_input_0_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln19_fu_235_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(icmp_ln19_fu_235_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read())))) {
        input_0_V_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        input_0_V_we0 = grp_attention_fu_173_hidden_states_0_V_we0.read();
    } else {
        input_0_V_we0 = ap_const_logic_0;
    }
}

void dut::thread_output_0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        output_0_address0 =  (sc_lv<7>) (zext_ln52_fu_277_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        output_0_address0 = grp_attention_fu_173_final_output_0_V_address0.read();
    } else {
        output_0_address0 = "XXXXXXX";
    }
}

void dut::thread_output_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        output_0_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        output_0_ce0 = grp_attention_fu_173_final_output_0_V_ce0.read();
    } else {
        output_0_ce0 = ap_const_logic_0;
    }
}

void dut::thread_output_0_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        output_0_ce1 = grp_attention_fu_173_final_output_0_V_ce1.read();
    } else {
        output_0_ce1 = ap_const_logic_0;
    }
}

void dut::thread_output_0_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        output_0_we0 = grp_attention_fu_173_final_output_0_V_we0.read();
    } else {
        output_0_we0 = ap_const_logic_0;
    }
}

void dut::thread_output_0_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        output_0_we1 = grp_attention_fu_173_final_output_0_V_we1.read();
    } else {
        output_0_we1 = ap_const_logic_0;
    }
}

void dut::thread_sext_ln728_fu_260_p1() {
    sext_ln728_fu_260_p1 = esl_sext<38,34>(shl_ln_fu_252_p3.read());
}

void dut::thread_shl_ln_fu_252_p3() {
    shl_ln_fu_252_p3 = esl_concat<32,2>(strm_in_V_V_dout.read(), ap_const_lv2_0);
}

void dut::thread_strm_in_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln19_fu_235_p2.read(), ap_const_lv1_0))) {
        strm_in_V_V_blk_n = strm_in_V_V_empty_n.read();
    } else {
        strm_in_V_V_blk_n = ap_const_logic_1;
    }
}

void dut::thread_strm_in_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln19_fu_235_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(icmp_ln19_fu_235_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read())))) {
        strm_in_V_V_read = ap_const_logic_1;
    } else {
        strm_in_V_V_read = ap_const_logic_0;
    }
}

void dut::thread_strm_out_V_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        strm_out_V_V_blk_n = strm_out_V_V_full_n.read();
    } else {
        strm_out_V_V_blk_n = ap_const_logic_1;
    }
}

void dut::thread_strm_out_V_V_din() {
    strm_out_V_V_din = output_0_q0.read().range(33, 2);
}

void dut::thread_strm_out_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
        strm_out_V_V_write = ap_const_logic_1;
    } else {
        strm_out_V_V_write = ap_const_logic_0;
    }
}

void dut::thread_zext_ln20_fu_247_p1() {
    zext_ln20_fu_247_p1 = esl_zext<64,7>(j_0_0_reg_151.read());
}

void dut::thread_zext_ln52_fu_277_p1() {
    zext_ln52_fu_277_p1 = esl_zext<64,7>(j9_0_0_reg_162.read());
}

void dut::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln19_fu_235_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(icmp_ln19_fu_235_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(icmp_ln19_fu_235_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, strm_in_V_V_empty_n.read())) && esl_seteq<1,1,1>(icmp_ln19_fu_235_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(grp_attention_fu_173_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln51_fu_265_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(strm_out_V_V_full_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<5>) ("XXXXX");
            break;
    }
}

void dut::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"strm_in_V_V_dout\" :  \"" << strm_in_V_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"strm_in_V_V_empty_n\" :  \"" << strm_in_V_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"strm_in_V_V_read\" :  \"" << strm_in_V_V_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"strm_out_V_V_din\" :  \"" << strm_out_V_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"strm_out_V_V_full_n\" :  \"" << strm_out_V_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"strm_out_V_V_write\" :  \"" << strm_out_V_V_write.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

