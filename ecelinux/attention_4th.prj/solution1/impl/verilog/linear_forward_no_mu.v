// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module linear_forward_no_mu (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_0_0_V_address0,
        input_0_0_V_ce0,
        input_0_0_V_q0,
        input_0_0_V_address1,
        input_0_0_V_ce1,
        input_0_0_V_q1,
        input_1_0_V_address0,
        input_1_0_V_ce0,
        input_1_0_V_q0,
        input_1_0_V_address1,
        input_1_0_V_ce1,
        input_1_0_V_q1,
        input_2_0_V_address0,
        input_2_0_V_ce0,
        input_2_0_V_q0,
        input_2_0_V_address1,
        input_2_0_V_ce1,
        input_2_0_V_q1,
        input_3_0_V_address0,
        input_3_0_V_ce0,
        input_3_0_V_q0,
        input_3_0_V_address1,
        input_3_0_V_ce1,
        input_3_0_V_q1,
        output_0_V_address0,
        output_0_V_ce0,
        output_0_V_we0,
        output_0_V_d0,
        output_0_V_q0,
        scales_0_V_read,
        packed_weights_address0,
        packed_weights_ce0,
        packed_weights_q0,
        packed_weights_address1,
        packed_weights_ce1,
        packed_weights_q1,
        w_scale_V
);

parameter    ap_ST_fsm_state1 = 90'd1;
parameter    ap_ST_fsm_state2 = 90'd2;
parameter    ap_ST_fsm_state3 = 90'd4;
parameter    ap_ST_fsm_state4 = 90'd8;
parameter    ap_ST_fsm_state5 = 90'd16;
parameter    ap_ST_fsm_state6 = 90'd32;
parameter    ap_ST_fsm_state7 = 90'd64;
parameter    ap_ST_fsm_state8 = 90'd128;
parameter    ap_ST_fsm_state9 = 90'd256;
parameter    ap_ST_fsm_state10 = 90'd512;
parameter    ap_ST_fsm_state11 = 90'd1024;
parameter    ap_ST_fsm_state12 = 90'd2048;
parameter    ap_ST_fsm_state13 = 90'd4096;
parameter    ap_ST_fsm_state14 = 90'd8192;
parameter    ap_ST_fsm_state15 = 90'd16384;
parameter    ap_ST_fsm_state16 = 90'd32768;
parameter    ap_ST_fsm_state17 = 90'd65536;
parameter    ap_ST_fsm_state18 = 90'd131072;
parameter    ap_ST_fsm_state19 = 90'd262144;
parameter    ap_ST_fsm_state20 = 90'd524288;
parameter    ap_ST_fsm_state21 = 90'd1048576;
parameter    ap_ST_fsm_state22 = 90'd2097152;
parameter    ap_ST_fsm_state23 = 90'd4194304;
parameter    ap_ST_fsm_state24 = 90'd8388608;
parameter    ap_ST_fsm_state25 = 90'd16777216;
parameter    ap_ST_fsm_state26 = 90'd33554432;
parameter    ap_ST_fsm_state27 = 90'd67108864;
parameter    ap_ST_fsm_state28 = 90'd134217728;
parameter    ap_ST_fsm_state29 = 90'd268435456;
parameter    ap_ST_fsm_state30 = 90'd536870912;
parameter    ap_ST_fsm_state31 = 90'd1073741824;
parameter    ap_ST_fsm_state32 = 90'd2147483648;
parameter    ap_ST_fsm_state33 = 90'd4294967296;
parameter    ap_ST_fsm_state34 = 90'd8589934592;
parameter    ap_ST_fsm_state35 = 90'd17179869184;
parameter    ap_ST_fsm_state36 = 90'd34359738368;
parameter    ap_ST_fsm_state37 = 90'd68719476736;
parameter    ap_ST_fsm_state38 = 90'd137438953472;
parameter    ap_ST_fsm_state39 = 90'd274877906944;
parameter    ap_ST_fsm_state40 = 90'd549755813888;
parameter    ap_ST_fsm_state41 = 90'd1099511627776;
parameter    ap_ST_fsm_state42 = 90'd2199023255552;
parameter    ap_ST_fsm_state43 = 90'd4398046511104;
parameter    ap_ST_fsm_state44 = 90'd8796093022208;
parameter    ap_ST_fsm_state45 = 90'd17592186044416;
parameter    ap_ST_fsm_state46 = 90'd35184372088832;
parameter    ap_ST_fsm_state47 = 90'd70368744177664;
parameter    ap_ST_fsm_state48 = 90'd140737488355328;
parameter    ap_ST_fsm_state49 = 90'd281474976710656;
parameter    ap_ST_fsm_state50 = 90'd562949953421312;
parameter    ap_ST_fsm_state51 = 90'd1125899906842624;
parameter    ap_ST_fsm_state52 = 90'd2251799813685248;
parameter    ap_ST_fsm_state53 = 90'd4503599627370496;
parameter    ap_ST_fsm_state54 = 90'd9007199254740992;
parameter    ap_ST_fsm_state55 = 90'd18014398509481984;
parameter    ap_ST_fsm_state56 = 90'd36028797018963968;
parameter    ap_ST_fsm_state57 = 90'd72057594037927936;
parameter    ap_ST_fsm_state58 = 90'd144115188075855872;
parameter    ap_ST_fsm_state59 = 90'd288230376151711744;
parameter    ap_ST_fsm_state60 = 90'd576460752303423488;
parameter    ap_ST_fsm_state61 = 90'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 90'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 90'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 90'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 90'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 90'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 90'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 90'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 90'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 90'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 90'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 90'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 90'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 90'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 90'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 90'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 90'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 90'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 90'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 90'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 90'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 90'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 90'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 90'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 90'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 90'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 90'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 90'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 90'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 90'd618970019642690137449562112;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] input_0_0_V_address0;
output   input_0_0_V_ce0;
input  [7:0] input_0_0_V_q0;
output  [6:0] input_0_0_V_address1;
output   input_0_0_V_ce1;
input  [7:0] input_0_0_V_q1;
output  [6:0] input_1_0_V_address0;
output   input_1_0_V_ce0;
input  [7:0] input_1_0_V_q0;
output  [6:0] input_1_0_V_address1;
output   input_1_0_V_ce1;
input  [7:0] input_1_0_V_q1;
output  [6:0] input_2_0_V_address0;
output   input_2_0_V_ce0;
input  [7:0] input_2_0_V_q0;
output  [6:0] input_2_0_V_address1;
output   input_2_0_V_ce1;
input  [7:0] input_2_0_V_q1;
output  [6:0] input_3_0_V_address0;
output   input_3_0_V_ce0;
input  [7:0] input_3_0_V_q0;
output  [6:0] input_3_0_V_address1;
output   input_3_0_V_ce1;
input  [7:0] input_3_0_V_q1;
output  [8:0] output_0_V_address0;
output   output_0_V_ce0;
output   output_0_V_we0;
output  [39:0] output_0_V_d0;
input  [39:0] output_0_V_q0;
input  [39:0] scales_0_V_read;
output  [15:0] packed_weights_address0;
output   packed_weights_ce0;
input  [7:0] packed_weights_q0;
output  [15:0] packed_weights_address1;
output   packed_weights_ce1;
input  [7:0] packed_weights_q1;
input  [21:0] w_scale_V;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[6:0] input_0_0_V_address0;
reg input_0_0_V_ce0;
reg[6:0] input_0_0_V_address1;
reg input_0_0_V_ce1;
reg[6:0] input_1_0_V_address0;
reg input_1_0_V_ce0;
reg[6:0] input_1_0_V_address1;
reg input_1_0_V_ce1;
reg[6:0] input_2_0_V_address0;
reg input_2_0_V_ce0;
reg[6:0] input_2_0_V_address1;
reg input_2_0_V_ce1;
reg[6:0] input_3_0_V_address0;
reg input_3_0_V_ce0;
reg[6:0] input_3_0_V_address1;
reg input_3_0_V_ce1;
reg output_0_V_ce0;
reg output_0_V_we0;
reg[39:0] output_0_V_d0;
reg[15:0] packed_weights_address0;
reg packed_weights_ce0;
reg[15:0] packed_weights_address1;
reg packed_weights_ce1;

(* fsm_encoding = "none" *) reg   [89:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [1:0] grp_fu_876_p4;
reg   [1:0] reg_1032;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state11;
reg   [7:0] reg_1036;
wire   [1:0] grp_fu_886_p4;
reg   [1:0] reg_1040;
reg   [7:0] reg_1044;
wire   [1:0] grp_fu_896_p4;
reg   [1:0] reg_1048;
reg   [7:0] reg_1052;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
reg   [7:0] reg_1057;
wire   [1:0] grp_fu_906_p4;
reg   [1:0] reg_1062;
reg   [7:0] reg_1066;
wire   [1:0] grp_fu_926_p4;
reg   [1:0] reg_1070;
reg   [7:0] reg_1074;
wire  signed [71:0] sext_ln161_fu_1189_p1;
reg  signed [71:0] sext_ln161_reg_5612;
wire   [8:0] add_ln161_fu_1199_p2;
reg   [8:0] add_ln161_reg_5620;
wire    ap_CS_fsm_state2;
wire   [16:0] zext_ln1265_fu_1210_p1;
reg   [16:0] zext_ln1265_reg_5625;
wire   [0:0] icmp_ln161_fu_1193_p2;
reg   [8:0] output_0_V_addr_reg_5641;
wire   [2:0] add_ln162_fu_1220_p2;
reg   [2:0] add_ln162_reg_5649;
wire    ap_CS_fsm_state3;
wire   [6:0] shl_ln2_fu_1226_p3;
reg   [6:0] shl_ln2_reg_5654;
wire   [0:0] icmp_ln162_fu_1214_p2;
wire   [7:0] select_ln170_fu_1395_p3;
reg   [7:0] select_ln170_reg_5722;
wire   [1:0] trunc_ln167_2_fu_1403_p1;
reg   [1:0] trunc_ln167_2_reg_5727;
wire   [1:0] grp_fu_916_p4;
reg   [1:0] trunc_ln167_9_reg_5733;
reg   [7:0] input_2_0_V_load_1_reg_5739;
wire   [24:0] add_ln703_27_fu_2258_p2;
reg   [24:0] add_ln703_27_reg_5845;
wire   [25:0] add_ln703_31_fu_2284_p2;
reg   [25:0] add_ln703_31_reg_5850;
wire   [24:0] add_ln703_33_fu_2290_p2;
reg   [24:0] add_ln703_33_reg_5855;
wire   [24:0] add_ln703_34_fu_2296_p2;
reg   [24:0] add_ln703_34_reg_5860;
wire   [24:0] add_ln703_36_fu_2302_p2;
reg   [24:0] add_ln703_36_reg_5865;
wire   [24:0] add_ln703_37_fu_2308_p2;
reg   [24:0] add_ln703_37_reg_5870;
wire   [39:0] add_ln703_28_fu_2792_p2;
reg   [39:0] add_ln703_28_reg_5925;
wire   [26:0] add_ln703_39_fu_2830_p2;
reg   [26:0] add_ln703_39_reg_5930;
wire   [24:0] add_ln703_41_fu_2836_p2;
reg   [24:0] add_ln703_41_reg_5935;
wire   [24:0] add_ln703_42_fu_2842_p2;
reg   [24:0] add_ln703_42_reg_5940;
wire   [24:0] add_ln703_44_fu_2848_p2;
reg   [24:0] add_ln703_44_reg_5945;
wire   [24:0] add_ln703_45_fu_2854_p2;
reg   [24:0] add_ln703_45_reg_5950;
wire   [39:0] add_ln703_40_fu_3352_p2;
reg   [39:0] add_ln703_40_reg_6005;
wire   [26:0] add_ln703_47_fu_3390_p2;
reg   [26:0] add_ln703_47_reg_6010;
wire   [24:0] add_ln703_48_fu_3396_p2;
reg   [24:0] add_ln703_48_reg_6015;
wire   [24:0] add_ln703_49_fu_3402_p2;
reg   [24:0] add_ln703_49_reg_6020;
wire   [24:0] add_ln703_51_fu_3408_p2;
reg   [24:0] add_ln703_51_reg_6025;
wire   [24:0] add_ln703_52_fu_3414_p2;
reg   [24:0] add_ln703_52_reg_6030;
wire   [27:0] add_ln703_55_fu_3923_p2;
reg   [27:0] add_ln703_55_reg_6085;
wire   [24:0] add_ln703_57_fu_3929_p2;
reg   [24:0] add_ln703_57_reg_6090;
wire   [24:0] add_ln703_58_fu_3935_p2;
reg   [24:0] add_ln703_58_reg_6095;
wire   [24:0] add_ln703_60_fu_3941_p2;
reg   [24:0] add_ln703_60_reg_6100;
wire   [24:0] add_ln703_61_fu_3947_p2;
reg   [24:0] add_ln703_61_reg_6105;
wire   [26:0] add_ln703_63_fu_4466_p2;
reg   [26:0] add_ln703_63_reg_6160;
wire   [24:0] add_ln703_64_fu_4472_p2;
reg   [24:0] add_ln703_64_reg_6165;
wire   [24:0] add_ln703_65_fu_4478_p2;
reg   [24:0] add_ln703_65_reg_6170;
wire   [24:0] add_ln703_67_fu_4484_p2;
reg   [24:0] add_ln703_67_reg_6175;
wire   [24:0] add_ln703_68_fu_4490_p2;
reg   [24:0] add_ln703_68_reg_6180;
wire   [27:0] add_ln703_71_fu_4999_p2;
reg   [27:0] add_ln703_71_reg_6235;
wire   [24:0] add_ln703_72_fu_5005_p2;
reg   [24:0] add_ln703_72_reg_6240;
wire   [24:0] add_ln703_73_fu_5011_p2;
reg   [24:0] add_ln703_73_reg_6245;
wire   [24:0] add_ln703_75_fu_5017_p2;
reg   [24:0] add_ln703_75_reg_6250;
wire   [24:0] add_ln703_76_fu_5023_p2;
reg   [24:0] add_ln703_76_reg_6255;
wire   [1:0] trunc_ln167_41_fu_5029_p1;
reg   [1:0] trunc_ln167_41_reg_6260;
wire   [1:0] trunc_ln167_44_fu_5033_p1;
reg   [1:0] trunc_ln167_44_reg_6266;
reg   [7:0] input_0_0_V_load_15_reg_6272;
wire   [26:0] add_ln703_78_fu_5167_p2;
reg   [26:0] add_ln703_78_reg_6278;
wire   [24:0] add_ln703_83_fu_5173_p2;
reg   [24:0] add_ln703_83_reg_6283;
wire   [25:0] add_ln703_81_fu_5503_p2;
reg   [25:0] add_ln703_81_reg_6288;
wire    ap_CS_fsm_state12;
wire   [26:0] add_ln703_85_fu_5532_p2;
reg   [26:0] add_ln703_85_reg_6293;
wire   [29:0] add_ln703_88_fu_5570_p2;
reg   [29:0] add_ln703_88_reg_6298;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state15;
reg   [8:0] j_0_0_reg_847;
wire    ap_CS_fsm_state90;
reg   [2:0] ko_0_0_reg_859;
wire    ap_CS_fsm_state14;
wire   [63:0] zext_ln165_fu_1205_p1;
wire  signed [63:0] sext_ln165_fu_1300_p1;
wire   [63:0] zext_ln165_1_fu_1234_p1;
wire  signed [63:0] sext_ln165_1_fu_1354_p1;
wire   [63:0] zext_ln165_2_fu_1311_p1;
wire  signed [63:0] sext_ln165_2_fu_1455_p1;
wire   [63:0] zext_ln165_3_fu_1412_p1;
wire  signed [63:0] sext_ln165_3_fu_1508_p1;
wire   [63:0] zext_ln165_4_fu_1465_p1;
wire  signed [63:0] sext_ln165_4_fu_2200_p1;
wire   [63:0] zext_ln165_5_fu_2134_p1;
wire  signed [63:0] sext_ln165_5_fu_2253_p1;
wire   [63:0] zext_ln165_6_fu_2210_p1;
wire  signed [63:0] sext_ln165_6_fu_2725_p1;
wire   [63:0] zext_ln165_7_fu_2682_p1;
wire  signed [63:0] sext_ln165_7_fu_2778_p1;
wire   [63:0] zext_ln165_8_fu_2735_p1;
wire  signed [63:0] sext_ln165_8_fu_3283_p1;
wire   [63:0] zext_ln165_9_fu_3217_p1;
wire  signed [63:0] sext_ln165_9_fu_3336_p1;
wire   [63:0] zext_ln165_10_fu_3293_p1;
wire  signed [63:0] sext_ln165_10_fu_3820_p1;
wire   [63:0] zext_ln165_11_fu_3777_p1;
wire  signed [63:0] sext_ln165_11_fu_3873_p1;
wire   [63:0] zext_ln165_12_fu_3830_p1;
wire  signed [63:0] sext_ln165_12_fu_4376_p1;
wire   [63:0] zext_ln165_13_fu_4310_p1;
wire  signed [63:0] sext_ln165_13_fu_4429_p1;
wire   [63:0] zext_ln165_14_fu_4386_p1;
wire  signed [63:0] sext_ln165_14_fu_4896_p1;
wire   [63:0] zext_ln165_15_fu_4853_p1;
wire  signed [63:0] sext_ln165_15_fu_4949_p1;
wire   [63:0] zext_ln165_16_fu_4906_p1;
wire   [39:0] add_ln703_89_fu_5587_p2;
wire   [39:0] trunc_ln703_fu_5607_p1;
wire   [21:0] mul_ln1148_fu_1183_p0;
wire  signed [39:0] mul_ln1148_fu_1183_p1;
wire   [60:0] mul_ln1148_fu_1183_p2;
wire   [15:0] tmp_56_fu_1242_p3;
wire   [13:0] tmp_57_fu_1254_p3;
wire   [16:0] zext_ln165_17_fu_1250_p1;
wire   [16:0] zext_ln165_18_fu_1262_p1;
wire   [16:0] sub_ln165_fu_1266_p2;
wire   [8:0] trunc_ln165_fu_1272_p1;
wire   [7:0] tmp_86_fu_1282_p4;
wire   [8:0] or_ln165_fu_1276_p2;
wire   [16:0] tmp_87_fu_1292_p3;
wire   [6:0] or_ln164_fu_1305_p2;
wire   [15:0] tmp_58_fu_1319_p3;
wire   [13:0] tmp_59_fu_1331_p3;
wire   [16:0] zext_ln165_19_fu_1327_p1;
wire   [16:0] zext_ln165_20_fu_1339_p1;
wire   [16:0] sub_ln165_1_fu_1343_p2;
wire   [16:0] add_ln165_fu_1349_p2;
wire   [1:0] trunc_ln167_fu_1359_p1;
wire   [0:0] icmp_ln169_fu_1363_p2;
wire   [0:0] icmp_ln170_fu_1369_p2;
wire   [0:0] xor_ln169_fu_1375_p2;
wire   [0:0] and_ln170_fu_1381_p2;
wire   [7:0] grp_fu_870_p2;
wire   [7:0] select_ln169_fu_1387_p3;
wire   [6:0] or_ln164_1_fu_1407_p2;
wire   [15:0] tmp_60_fu_1420_p3;
wire   [13:0] tmp_61_fu_1432_p3;
wire   [16:0] zext_ln165_21_fu_1428_p1;
wire   [16:0] zext_ln165_22_fu_1440_p1;
wire   [16:0] sub_ln165_2_fu_1444_p2;
wire   [16:0] add_ln165_1_fu_1450_p2;
wire   [6:0] or_ln164_2_fu_1460_p2;
wire   [15:0] tmp_62_fu_1473_p3;
wire   [13:0] tmp_63_fu_1485_p3;
wire   [16:0] zext_ln165_23_fu_1481_p1;
wire   [16:0] zext_ln165_24_fu_1493_p1;
wire   [16:0] sub_ln165_3_fu_1497_p2;
wire   [16:0] add_ln165_2_fu_1503_p2;
wire   [0:0] grp_fu_1079_p2;
wire   [0:0] grp_fu_1085_p2;
wire   [0:0] xor_ln169_1_fu_1513_p2;
wire   [0:0] and_ln170_1_fu_1519_p2;
wire   [7:0] grp_fu_1091_p2;
wire   [7:0] select_ln169_1_fu_1525_p3;
wire   [7:0] select_ln170_1_fu_1533_p3;
wire   [23:0] shl_ln703_1_fu_1541_p3;
wire   [0:0] grp_fu_1097_p2;
wire   [0:0] grp_fu_1103_p2;
wire   [0:0] xor_ln169_2_fu_1553_p2;
wire   [0:0] and_ln170_2_fu_1559_p2;
wire   [7:0] grp_fu_1109_p2;
wire   [7:0] select_ln169_2_fu_1565_p3;
wire   [7:0] select_ln170_2_fu_1573_p3;
wire   [23:0] shl_ln703_2_fu_1581_p3;
wire   [0:0] grp_fu_1115_p2;
wire   [0:0] grp_fu_1121_p2;
wire   [0:0] xor_ln169_3_fu_1593_p2;
wire   [0:0] and_ln170_3_fu_1599_p2;
wire   [7:0] grp_fu_1127_p2;
wire   [7:0] select_ln169_3_fu_1605_p3;
wire   [7:0] select_ln170_3_fu_1613_p3;
wire   [23:0] shl_ln703_3_fu_1621_p3;
wire   [0:0] icmp_ln169_4_fu_1633_p2;
wire   [0:0] icmp_ln170_4_fu_1638_p2;
wire   [0:0] xor_ln169_4_fu_1643_p2;
wire   [0:0] and_ln170_4_fu_1649_p2;
wire   [7:0] grp_fu_1133_p2;
wire   [7:0] select_ln169_4_fu_1655_p3;
wire   [7:0] select_ln170_4_fu_1663_p3;
wire   [23:0] shl_ln703_4_fu_1671_p3;
wire   [0:0] grp_fu_1139_p2;
wire   [0:0] grp_fu_1145_p2;
wire   [0:0] xor_ln169_5_fu_1683_p2;
wire   [0:0] and_ln170_5_fu_1689_p2;
wire   [7:0] grp_fu_1151_p2;
wire   [7:0] select_ln169_5_fu_1695_p3;
wire   [7:0] select_ln170_5_fu_1703_p3;
wire   [23:0] shl_ln703_5_fu_1711_p3;
wire   [0:0] icmp_ln169_6_fu_1723_p2;
wire   [0:0] icmp_ln170_6_fu_1728_p2;
wire   [0:0] xor_ln169_6_fu_1738_p2;
wire   [0:0] and_ln170_6_fu_1744_p2;
wire   [7:0] sub_ln701_6_fu_1733_p2;
wire   [7:0] select_ln169_6_fu_1750_p3;
wire   [7:0] select_ln170_6_fu_1757_p3;
wire   [23:0] shl_ln703_6_fu_1765_p3;
wire   [0:0] grp_fu_1157_p2;
wire   [0:0] grp_fu_1163_p2;
wire   [0:0] xor_ln169_7_fu_1777_p2;
wire   [0:0] and_ln170_7_fu_1783_p2;
wire   [7:0] grp_fu_1169_p2;
wire   [7:0] select_ln169_7_fu_1789_p3;
wire   [7:0] select_ln170_7_fu_1797_p3;
wire   [23:0] shl_ln703_7_fu_1805_p3;
wire   [1:0] trunc_ln167_6_fu_1817_p1;
wire   [0:0] icmp_ln169_8_fu_1821_p2;
wire   [0:0] icmp_ln170_8_fu_1827_p2;
wire   [0:0] xor_ln169_8_fu_1833_p2;
wire   [0:0] and_ln170_8_fu_1839_p2;
wire   [7:0] select_ln169_8_fu_1845_p3;
wire   [7:0] select_ln170_8_fu_1853_p3;
wire   [23:0] shl_ln703_8_fu_1861_p3;
wire   [0:0] grp_fu_936_p2;
wire   [0:0] grp_fu_942_p2;
wire   [0:0] xor_ln169_9_fu_1873_p2;
wire   [0:0] and_ln170_9_fu_1879_p2;
wire   [7:0] grp_fu_948_p2;
wire   [7:0] select_ln169_9_fu_1885_p3;
wire   [7:0] select_ln170_9_fu_1893_p3;
wire   [23:0] shl_ln703_9_fu_1901_p3;
wire   [0:0] grp_fu_954_p2;
wire   [0:0] grp_fu_960_p2;
wire   [0:0] xor_ln169_10_fu_1913_p2;
wire   [0:0] and_ln170_10_fu_1919_p2;
wire   [7:0] grp_fu_966_p2;
wire   [7:0] select_ln169_10_fu_1925_p3;
wire   [7:0] select_ln170_10_fu_1933_p3;
wire   [23:0] shl_ln703_s_fu_1941_p3;
wire   [0:0] grp_fu_972_p2;
wire   [0:0] grp_fu_978_p2;
wire   [0:0] xor_ln169_11_fu_1953_p2;
wire   [0:0] and_ln170_11_fu_1959_p2;
wire   [7:0] grp_fu_984_p2;
wire   [7:0] select_ln169_11_fu_1965_p3;
wire   [7:0] select_ln170_11_fu_1973_p3;
wire   [23:0] shl_ln703_10_fu_1981_p3;
wire   [1:0] trunc_ln167_7_fu_1993_p1;
wire   [0:0] icmp_ln169_12_fu_1997_p2;
wire   [0:0] icmp_ln170_12_fu_2003_p2;
wire   [0:0] xor_ln169_12_fu_2009_p2;
wire   [0:0] and_ln170_12_fu_2015_p2;
wire   [7:0] grp_fu_990_p2;
wire   [7:0] select_ln169_12_fu_2021_p3;
wire   [7:0] select_ln170_12_fu_2029_p3;
wire   [23:0] shl_ln703_11_fu_2037_p3;
wire   [0:0] grp_fu_996_p2;
wire   [0:0] grp_fu_1002_p2;
wire   [0:0] xor_ln169_13_fu_2049_p2;
wire   [0:0] and_ln170_13_fu_2055_p2;
wire   [7:0] grp_fu_1008_p2;
wire   [7:0] select_ln169_13_fu_2061_p3;
wire   [7:0] select_ln170_13_fu_2069_p3;
wire   [23:0] shl_ln703_12_fu_2077_p3;
wire   [0:0] grp_fu_1014_p2;
wire   [0:0] grp_fu_1020_p2;
wire   [0:0] xor_ln169_14_fu_2089_p2;
wire   [0:0] and_ln170_14_fu_2095_p2;
wire   [7:0] grp_fu_1026_p2;
wire   [7:0] select_ln169_14_fu_2101_p3;
wire   [7:0] select_ln170_14_fu_2109_p3;
wire   [23:0] shl_ln703_13_fu_2117_p3;
wire   [6:0] or_ln164_3_fu_2129_p2;
wire   [15:0] tmp_64_fu_2142_p3;
wire   [13:0] tmp_65_fu_2154_p3;
wire   [16:0] zext_ln165_25_fu_2150_p1;
wire   [16:0] zext_ln165_26_fu_2162_p1;
wire   [16:0] sub_ln165_4_fu_2166_p2;
wire   [8:0] trunc_ln165_1_fu_2172_p1;
wire   [7:0] tmp_97_fu_2182_p4;
wire   [8:0] or_ln165_1_fu_2176_p2;
wire   [16:0] tmp_98_fu_2192_p3;
wire   [6:0] or_ln164_4_fu_2205_p2;
wire   [15:0] tmp_66_fu_2218_p3;
wire   [13:0] tmp_67_fu_2230_p3;
wire   [16:0] zext_ln165_27_fu_2226_p1;
wire   [16:0] zext_ln165_28_fu_2238_p1;
wire   [16:0] sub_ln165_5_fu_2242_p2;
wire   [16:0] add_ln165_3_fu_2248_p2;
wire  signed [24:0] sext_ln703_1_fu_1549_p1;
wire  signed [24:0] sext_ln703_2_fu_1589_p1;
wire  signed [24:0] sext_ln703_3_fu_1629_p1;
wire  signed [24:0] sext_ln703_4_fu_1679_p1;
wire   [24:0] add_ln703_29_fu_2264_p2;
wire  signed [24:0] sext_ln703_5_fu_1719_p1;
wire  signed [24:0] sext_ln703_6_fu_1773_p1;
wire   [24:0] add_ln703_30_fu_2274_p2;
wire  signed [25:0] sext_ln703_66_fu_2280_p1;
wire  signed [25:0] sext_ln703_65_fu_2270_p1;
wire  signed [24:0] sext_ln703_7_fu_1813_p1;
wire  signed [24:0] sext_ln703_8_fu_1869_p1;
wire  signed [24:0] sext_ln703_9_fu_1909_p1;
wire  signed [24:0] sext_ln703_10_fu_1949_p1;
wire  signed [24:0] sext_ln703_11_fu_1989_p1;
wire  signed [24:0] sext_ln703_12_fu_2045_p1;
wire  signed [24:0] sext_ln703_13_fu_2085_p1;
wire  signed [24:0] sext_ln703_14_fu_2125_p1;
wire   [23:0] shl_ln3_fu_2314_p3;
wire   [0:0] xor_ln169_15_fu_2325_p2;
wire   [0:0] and_ln170_15_fu_2331_p2;
wire   [7:0] select_ln169_15_fu_2337_p3;
wire   [7:0] select_ln170_15_fu_2345_p3;
wire   [23:0] shl_ln703_14_fu_2353_p3;
wire   [1:0] trunc_ln167_11_fu_2365_p1;
wire   [0:0] icmp_ln169_16_fu_2369_p2;
wire   [0:0] icmp_ln170_16_fu_2375_p2;
wire   [0:0] xor_ln169_16_fu_2381_p2;
wire   [0:0] and_ln170_16_fu_2387_p2;
wire   [7:0] select_ln169_16_fu_2393_p3;
wire   [7:0] select_ln170_16_fu_2401_p3;
wire   [23:0] shl_ln703_15_fu_2409_p3;
wire   [0:0] xor_ln169_17_fu_2421_p2;
wire   [0:0] and_ln170_17_fu_2427_p2;
wire   [7:0] select_ln169_17_fu_2433_p3;
wire   [7:0] select_ln170_17_fu_2441_p3;
wire   [23:0] shl_ln703_16_fu_2449_p3;
wire   [0:0] xor_ln169_18_fu_2461_p2;
wire   [0:0] and_ln170_18_fu_2467_p2;
wire   [7:0] select_ln169_18_fu_2473_p3;
wire   [7:0] select_ln170_18_fu_2481_p3;
wire   [23:0] shl_ln703_17_fu_2489_p3;
wire   [0:0] xor_ln169_19_fu_2501_p2;
wire   [0:0] and_ln170_19_fu_2507_p2;
wire   [7:0] select_ln169_19_fu_2513_p3;
wire   [7:0] select_ln170_19_fu_2521_p3;
wire   [23:0] shl_ln703_18_fu_2529_p3;
wire   [1:0] trunc_ln167_14_fu_2541_p1;
wire   [0:0] icmp_ln169_20_fu_2545_p2;
wire   [0:0] icmp_ln170_20_fu_2551_p2;
wire   [0:0] xor_ln169_20_fu_2557_p2;
wire   [0:0] and_ln170_20_fu_2563_p2;
wire   [7:0] select_ln169_20_fu_2569_p3;
wire   [7:0] select_ln170_20_fu_2577_p3;
wire   [23:0] shl_ln703_19_fu_2585_p3;
wire   [0:0] xor_ln169_21_fu_2597_p2;
wire   [0:0] and_ln170_21_fu_2603_p2;
wire   [7:0] select_ln169_21_fu_2609_p3;
wire   [7:0] select_ln170_21_fu_2617_p3;
wire   [23:0] shl_ln703_20_fu_2625_p3;
wire   [0:0] xor_ln169_22_fu_2637_p2;
wire   [0:0] and_ln170_22_fu_2643_p2;
wire   [7:0] select_ln169_22_fu_2649_p3;
wire   [7:0] select_ln170_22_fu_2657_p3;
wire   [23:0] shl_ln703_21_fu_2665_p3;
wire   [6:0] or_ln164_5_fu_2677_p2;
wire   [15:0] tmp_68_fu_2690_p3;
wire   [13:0] tmp_69_fu_2702_p3;
wire   [16:0] zext_ln165_29_fu_2698_p1;
wire   [16:0] zext_ln165_30_fu_2710_p1;
wire   [16:0] sub_ln165_6_fu_2714_p2;
wire   [16:0] add_ln165_4_fu_2720_p2;
wire   [6:0] or_ln164_6_fu_2730_p2;
wire   [15:0] tmp_70_fu_2743_p3;
wire   [13:0] tmp_71_fu_2755_p3;
wire   [16:0] zext_ln165_31_fu_2751_p1;
wire   [16:0] zext_ln165_32_fu_2763_p1;
wire   [16:0] sub_ln165_7_fu_2767_p2;
wire   [16:0] add_ln165_5_fu_2773_p2;
wire  signed [39:0] sext_ln703_fu_2321_p1;
wire  signed [39:0] sext_ln703_64_fu_2789_p1;
wire   [39:0] add_ln703_fu_2783_p2;
wire  signed [25:0] sext_ln703_69_fu_2801_p1;
wire  signed [25:0] sext_ln703_68_fu_2798_p1;
wire   [25:0] add_ln703_35_fu_2804_p2;
wire  signed [25:0] sext_ln703_72_fu_2817_p1;
wire  signed [25:0] sext_ln703_71_fu_2814_p1;
wire   [25:0] add_ln703_38_fu_2820_p2;
wire  signed [26:0] sext_ln703_73_fu_2826_p1;
wire  signed [26:0] sext_ln703_70_fu_2810_p1;
wire  signed [24:0] sext_ln703_15_fu_2361_p1;
wire  signed [24:0] sext_ln703_16_fu_2417_p1;
wire  signed [24:0] sext_ln703_17_fu_2457_p1;
wire  signed [24:0] sext_ln703_18_fu_2497_p1;
wire  signed [24:0] sext_ln703_19_fu_2537_p1;
wire  signed [24:0] sext_ln703_20_fu_2593_p1;
wire  signed [24:0] sext_ln703_21_fu_2633_p1;
wire  signed [24:0] sext_ln703_22_fu_2673_p1;
wire   [0:0] xor_ln169_23_fu_2860_p2;
wire   [0:0] and_ln170_23_fu_2866_p2;
wire   [7:0] select_ln169_23_fu_2872_p3;
wire   [7:0] select_ln170_23_fu_2880_p3;
wire   [23:0] shl_ln703_22_fu_2888_p3;
wire   [1:0] trunc_ln167_17_fu_2900_p1;
wire   [0:0] icmp_ln169_24_fu_2904_p2;
wire   [0:0] icmp_ln170_24_fu_2910_p2;
wire   [0:0] xor_ln169_24_fu_2916_p2;
wire   [0:0] and_ln170_24_fu_2922_p2;
wire   [7:0] select_ln169_24_fu_2928_p3;
wire   [7:0] select_ln170_24_fu_2936_p3;
wire   [23:0] shl_ln703_23_fu_2944_p3;
wire   [0:0] xor_ln169_25_fu_2956_p2;
wire   [0:0] and_ln170_25_fu_2962_p2;
wire   [7:0] select_ln169_25_fu_2968_p3;
wire   [7:0] select_ln170_25_fu_2976_p3;
wire   [23:0] shl_ln703_24_fu_2984_p3;
wire   [0:0] xor_ln169_26_fu_2996_p2;
wire   [0:0] and_ln170_26_fu_3002_p2;
wire   [7:0] select_ln169_26_fu_3008_p3;
wire   [7:0] select_ln170_26_fu_3016_p3;
wire   [23:0] shl_ln703_25_fu_3024_p3;
wire   [0:0] xor_ln169_27_fu_3036_p2;
wire   [0:0] and_ln170_27_fu_3042_p2;
wire   [7:0] select_ln169_27_fu_3048_p3;
wire   [7:0] select_ln170_27_fu_3056_p3;
wire   [23:0] shl_ln703_26_fu_3064_p3;
wire   [1:0] trunc_ln167_20_fu_3076_p1;
wire   [0:0] icmp_ln169_28_fu_3080_p2;
wire   [0:0] icmp_ln170_28_fu_3086_p2;
wire   [0:0] xor_ln169_28_fu_3092_p2;
wire   [0:0] and_ln170_28_fu_3098_p2;
wire   [7:0] select_ln169_28_fu_3104_p3;
wire   [7:0] select_ln170_28_fu_3112_p3;
wire   [23:0] shl_ln703_27_fu_3120_p3;
wire   [0:0] xor_ln169_29_fu_3132_p2;
wire   [0:0] and_ln170_29_fu_3138_p2;
wire   [7:0] select_ln169_29_fu_3144_p3;
wire   [7:0] select_ln170_29_fu_3152_p3;
wire   [23:0] shl_ln703_28_fu_3160_p3;
wire   [0:0] xor_ln169_30_fu_3172_p2;
wire   [0:0] and_ln170_30_fu_3178_p2;
wire   [7:0] select_ln169_30_fu_3184_p3;
wire   [7:0] select_ln170_30_fu_3192_p3;
wire   [23:0] shl_ln703_29_fu_3200_p3;
wire   [6:0] or_ln164_7_fu_3212_p2;
wire   [15:0] tmp_72_fu_3225_p3;
wire   [13:0] tmp_73_fu_3237_p3;
wire   [16:0] zext_ln165_33_fu_3233_p1;
wire   [16:0] zext_ln165_34_fu_3245_p1;
wire   [16:0] sub_ln165_8_fu_3249_p2;
wire   [8:0] trunc_ln165_2_fu_3255_p1;
wire   [7:0] tmp_106_fu_3265_p4;
wire   [8:0] or_ln165_2_fu_3259_p2;
wire   [16:0] tmp_107_fu_3275_p3;
wire   [6:0] or_ln164_8_fu_3288_p2;
wire   [15:0] tmp_74_fu_3301_p3;
wire   [13:0] tmp_75_fu_3313_p3;
wire   [16:0] zext_ln165_35_fu_3309_p1;
wire   [16:0] zext_ln165_36_fu_3321_p1;
wire   [16:0] sub_ln165_9_fu_3325_p2;
wire   [16:0] add_ln165_6_fu_3331_p2;
wire  signed [39:0] sext_ln703_67_fu_3341_p1;
wire  signed [39:0] sext_ln703_74_fu_3349_p1;
wire   [39:0] add_ln703_32_fu_3344_p2;
wire  signed [25:0] sext_ln703_76_fu_3361_p1;
wire  signed [25:0] sext_ln703_75_fu_3358_p1;
wire   [25:0] add_ln703_43_fu_3364_p2;
wire  signed [25:0] sext_ln703_79_fu_3377_p1;
wire  signed [25:0] sext_ln703_78_fu_3374_p1;
wire   [25:0] add_ln703_46_fu_3380_p2;
wire  signed [26:0] sext_ln703_80_fu_3386_p1;
wire  signed [26:0] sext_ln703_77_fu_3370_p1;
wire  signed [24:0] sext_ln703_23_fu_2896_p1;
wire  signed [24:0] sext_ln703_24_fu_2952_p1;
wire  signed [24:0] sext_ln703_25_fu_2992_p1;
wire  signed [24:0] sext_ln703_26_fu_3032_p1;
wire  signed [24:0] sext_ln703_27_fu_3072_p1;
wire  signed [24:0] sext_ln703_28_fu_3128_p1;
wire  signed [24:0] sext_ln703_29_fu_3168_p1;
wire  signed [24:0] sext_ln703_30_fu_3208_p1;
wire   [0:0] xor_ln169_31_fu_3420_p2;
wire   [0:0] and_ln170_31_fu_3426_p2;
wire   [7:0] select_ln169_31_fu_3432_p3;
wire   [7:0] select_ln170_31_fu_3440_p3;
wire   [23:0] shl_ln703_30_fu_3448_p3;
wire   [1:0] trunc_ln167_23_fu_3460_p1;
wire   [0:0] icmp_ln169_32_fu_3464_p2;
wire   [0:0] icmp_ln170_32_fu_3470_p2;
wire   [0:0] xor_ln169_32_fu_3476_p2;
wire   [0:0] and_ln170_32_fu_3482_p2;
wire   [7:0] select_ln169_32_fu_3488_p3;
wire   [7:0] select_ln170_32_fu_3496_p3;
wire   [23:0] shl_ln703_31_fu_3504_p3;
wire   [0:0] xor_ln169_33_fu_3516_p2;
wire   [0:0] and_ln170_33_fu_3522_p2;
wire   [7:0] select_ln169_33_fu_3528_p3;
wire   [7:0] select_ln170_33_fu_3536_p3;
wire   [23:0] shl_ln703_32_fu_3544_p3;
wire   [0:0] xor_ln169_34_fu_3556_p2;
wire   [0:0] and_ln170_34_fu_3562_p2;
wire   [7:0] select_ln169_34_fu_3568_p3;
wire   [7:0] select_ln170_34_fu_3576_p3;
wire   [23:0] shl_ln703_33_fu_3584_p3;
wire   [0:0] xor_ln169_35_fu_3596_p2;
wire   [0:0] and_ln170_35_fu_3602_p2;
wire   [7:0] select_ln169_35_fu_3608_p3;
wire   [7:0] select_ln170_35_fu_3616_p3;
wire   [23:0] shl_ln703_34_fu_3624_p3;
wire   [1:0] trunc_ln167_26_fu_3636_p1;
wire   [0:0] icmp_ln169_36_fu_3640_p2;
wire   [0:0] icmp_ln170_36_fu_3646_p2;
wire   [0:0] xor_ln169_36_fu_3652_p2;
wire   [0:0] and_ln170_36_fu_3658_p2;
wire   [7:0] select_ln169_36_fu_3664_p3;
wire   [7:0] select_ln170_36_fu_3672_p3;
wire   [23:0] shl_ln703_35_fu_3680_p3;
wire   [0:0] xor_ln169_37_fu_3692_p2;
wire   [0:0] and_ln170_37_fu_3698_p2;
wire   [7:0] select_ln169_37_fu_3704_p3;
wire   [7:0] select_ln170_37_fu_3712_p3;
wire   [23:0] shl_ln703_36_fu_3720_p3;
wire   [0:0] xor_ln169_38_fu_3732_p2;
wire   [0:0] and_ln170_38_fu_3738_p2;
wire   [7:0] select_ln169_38_fu_3744_p3;
wire   [7:0] select_ln170_38_fu_3752_p3;
wire   [23:0] shl_ln703_37_fu_3760_p3;
wire   [6:0] or_ln164_9_fu_3772_p2;
wire   [15:0] tmp_76_fu_3785_p3;
wire   [13:0] tmp_77_fu_3797_p3;
wire   [16:0] zext_ln165_37_fu_3793_p1;
wire   [16:0] zext_ln165_38_fu_3805_p1;
wire   [16:0] sub_ln165_10_fu_3809_p2;
wire   [16:0] add_ln165_7_fu_3815_p2;
wire   [6:0] or_ln164_10_fu_3825_p2;
wire   [15:0] tmp_78_fu_3838_p3;
wire   [13:0] tmp_79_fu_3850_p3;
wire   [16:0] zext_ln165_39_fu_3846_p1;
wire   [16:0] zext_ln165_40_fu_3858_p1;
wire   [16:0] sub_ln165_11_fu_3862_p2;
wire   [16:0] add_ln165_8_fu_3868_p2;
wire  signed [25:0] sext_ln703_83_fu_3884_p1;
wire  signed [25:0] sext_ln703_82_fu_3881_p1;
wire   [25:0] add_ln703_50_fu_3887_p2;
wire  signed [25:0] sext_ln703_86_fu_3900_p1;
wire  signed [25:0] sext_ln703_85_fu_3897_p1;
wire   [25:0] add_ln703_53_fu_3903_p2;
wire  signed [26:0] sext_ln703_87_fu_3909_p1;
wire  signed [26:0] sext_ln703_84_fu_3893_p1;
wire   [26:0] add_ln703_54_fu_3913_p2;
wire  signed [27:0] sext_ln703_88_fu_3919_p1;
wire  signed [27:0] sext_ln703_81_fu_3878_p1;
wire  signed [24:0] sext_ln703_31_fu_3456_p1;
wire  signed [24:0] sext_ln703_32_fu_3512_p1;
wire  signed [24:0] sext_ln703_33_fu_3552_p1;
wire  signed [24:0] sext_ln703_34_fu_3592_p1;
wire  signed [24:0] sext_ln703_35_fu_3632_p1;
wire  signed [24:0] sext_ln703_36_fu_3688_p1;
wire  signed [24:0] sext_ln703_37_fu_3728_p1;
wire  signed [24:0] sext_ln703_38_fu_3768_p1;
wire   [0:0] xor_ln169_39_fu_3953_p2;
wire   [0:0] and_ln170_39_fu_3959_p2;
wire   [7:0] select_ln169_39_fu_3965_p3;
wire   [7:0] select_ln170_39_fu_3973_p3;
wire   [23:0] shl_ln703_38_fu_3981_p3;
wire   [1:0] trunc_ln167_29_fu_3993_p1;
wire   [0:0] icmp_ln169_40_fu_3997_p2;
wire   [0:0] icmp_ln170_40_fu_4003_p2;
wire   [0:0] xor_ln169_40_fu_4009_p2;
wire   [0:0] and_ln170_40_fu_4015_p2;
wire   [7:0] select_ln169_40_fu_4021_p3;
wire   [7:0] select_ln170_40_fu_4029_p3;
wire   [23:0] shl_ln703_39_fu_4037_p3;
wire   [0:0] xor_ln169_41_fu_4049_p2;
wire   [0:0] and_ln170_41_fu_4055_p2;
wire   [7:0] select_ln169_41_fu_4061_p3;
wire   [7:0] select_ln170_41_fu_4069_p3;
wire   [23:0] shl_ln703_40_fu_4077_p3;
wire   [0:0] xor_ln169_42_fu_4089_p2;
wire   [0:0] and_ln170_42_fu_4095_p2;
wire   [7:0] select_ln169_42_fu_4101_p3;
wire   [7:0] select_ln170_42_fu_4109_p3;
wire   [23:0] shl_ln703_41_fu_4117_p3;
wire   [0:0] xor_ln169_43_fu_4129_p2;
wire   [0:0] and_ln170_43_fu_4135_p2;
wire   [7:0] select_ln169_43_fu_4141_p3;
wire   [7:0] select_ln170_43_fu_4149_p3;
wire   [23:0] shl_ln703_42_fu_4157_p3;
wire   [1:0] trunc_ln167_32_fu_4169_p1;
wire   [0:0] icmp_ln169_44_fu_4173_p2;
wire   [0:0] icmp_ln170_44_fu_4179_p2;
wire   [0:0] xor_ln169_44_fu_4185_p2;
wire   [0:0] and_ln170_44_fu_4191_p2;
wire   [7:0] select_ln169_44_fu_4197_p3;
wire   [7:0] select_ln170_44_fu_4205_p3;
wire   [23:0] shl_ln703_43_fu_4213_p3;
wire   [0:0] xor_ln169_45_fu_4225_p2;
wire   [0:0] and_ln170_45_fu_4231_p2;
wire   [7:0] select_ln169_45_fu_4237_p3;
wire   [7:0] select_ln170_45_fu_4245_p3;
wire   [23:0] shl_ln703_44_fu_4253_p3;
wire   [0:0] xor_ln169_46_fu_4265_p2;
wire   [0:0] and_ln170_46_fu_4271_p2;
wire   [7:0] select_ln169_46_fu_4277_p3;
wire   [7:0] select_ln170_46_fu_4285_p3;
wire   [23:0] shl_ln703_45_fu_4293_p3;
wire   [6:0] or_ln164_11_fu_4305_p2;
wire   [15:0] tmp_80_fu_4318_p3;
wire   [13:0] tmp_81_fu_4330_p3;
wire   [16:0] zext_ln165_41_fu_4326_p1;
wire   [16:0] zext_ln165_42_fu_4338_p1;
wire   [16:0] sub_ln165_12_fu_4342_p2;
wire   [8:0] trunc_ln165_3_fu_4348_p1;
wire   [7:0] tmp_108_fu_4358_p4;
wire   [8:0] or_ln165_3_fu_4352_p2;
wire   [16:0] tmp_109_fu_4368_p3;
wire   [6:0] or_ln164_12_fu_4381_p2;
wire   [15:0] tmp_82_fu_4394_p3;
wire   [13:0] tmp_83_fu_4406_p3;
wire   [16:0] zext_ln165_43_fu_4402_p1;
wire   [16:0] zext_ln165_44_fu_4414_p1;
wire   [16:0] sub_ln165_13_fu_4418_p2;
wire   [16:0] add_ln165_9_fu_4424_p2;
wire  signed [25:0] sext_ln703_91_fu_4437_p1;
wire  signed [25:0] sext_ln703_90_fu_4434_p1;
wire   [25:0] add_ln703_59_fu_4440_p2;
wire  signed [25:0] sext_ln703_94_fu_4453_p1;
wire  signed [25:0] sext_ln703_93_fu_4450_p1;
wire   [25:0] add_ln703_62_fu_4456_p2;
wire  signed [26:0] sext_ln703_95_fu_4462_p1;
wire  signed [26:0] sext_ln703_92_fu_4446_p1;
wire  signed [24:0] sext_ln703_39_fu_3989_p1;
wire  signed [24:0] sext_ln703_40_fu_4045_p1;
wire  signed [24:0] sext_ln703_41_fu_4085_p1;
wire  signed [24:0] sext_ln703_42_fu_4125_p1;
wire  signed [24:0] sext_ln703_43_fu_4165_p1;
wire  signed [24:0] sext_ln703_44_fu_4221_p1;
wire  signed [24:0] sext_ln703_45_fu_4261_p1;
wire  signed [24:0] sext_ln703_46_fu_4301_p1;
wire   [0:0] xor_ln169_47_fu_4496_p2;
wire   [0:0] and_ln170_47_fu_4502_p2;
wire   [7:0] select_ln169_47_fu_4508_p3;
wire   [7:0] select_ln170_47_fu_4516_p3;
wire   [23:0] shl_ln703_46_fu_4524_p3;
wire   [1:0] trunc_ln167_35_fu_4536_p1;
wire   [0:0] icmp_ln169_48_fu_4540_p2;
wire   [0:0] icmp_ln170_48_fu_4546_p2;
wire   [0:0] xor_ln169_48_fu_4552_p2;
wire   [0:0] and_ln170_48_fu_4558_p2;
wire   [7:0] select_ln169_48_fu_4564_p3;
wire   [7:0] select_ln170_48_fu_4572_p3;
wire   [23:0] shl_ln703_47_fu_4580_p3;
wire   [0:0] xor_ln169_49_fu_4592_p2;
wire   [0:0] and_ln170_49_fu_4598_p2;
wire   [7:0] select_ln169_49_fu_4604_p3;
wire   [7:0] select_ln170_49_fu_4612_p3;
wire   [23:0] shl_ln703_48_fu_4620_p3;
wire   [0:0] xor_ln169_50_fu_4632_p2;
wire   [0:0] and_ln170_50_fu_4638_p2;
wire   [7:0] select_ln169_50_fu_4644_p3;
wire   [7:0] select_ln170_50_fu_4652_p3;
wire   [23:0] shl_ln703_49_fu_4660_p3;
wire   [0:0] xor_ln169_51_fu_4672_p2;
wire   [0:0] and_ln170_51_fu_4678_p2;
wire   [7:0] select_ln169_51_fu_4684_p3;
wire   [7:0] select_ln170_51_fu_4692_p3;
wire   [23:0] shl_ln703_50_fu_4700_p3;
wire   [1:0] trunc_ln167_38_fu_4712_p1;
wire   [0:0] icmp_ln169_52_fu_4716_p2;
wire   [0:0] icmp_ln170_52_fu_4722_p2;
wire   [0:0] xor_ln169_52_fu_4728_p2;
wire   [0:0] and_ln170_52_fu_4734_p2;
wire   [7:0] select_ln169_52_fu_4740_p3;
wire   [7:0] select_ln170_52_fu_4748_p3;
wire   [23:0] shl_ln703_51_fu_4756_p3;
wire   [0:0] xor_ln169_53_fu_4768_p2;
wire   [0:0] and_ln170_53_fu_4774_p2;
wire   [7:0] select_ln169_53_fu_4780_p3;
wire   [7:0] select_ln170_53_fu_4788_p3;
wire   [23:0] shl_ln703_52_fu_4796_p3;
wire   [0:0] xor_ln169_54_fu_4808_p2;
wire   [0:0] and_ln170_54_fu_4814_p2;
wire   [7:0] select_ln169_54_fu_4820_p3;
wire   [7:0] select_ln170_54_fu_4828_p3;
wire   [23:0] shl_ln703_53_fu_4836_p3;
wire   [6:0] or_ln164_13_fu_4848_p2;
wire   [15:0] tmp_84_fu_4861_p3;
wire   [13:0] tmp_85_fu_4873_p3;
wire   [16:0] zext_ln165_45_fu_4869_p1;
wire   [16:0] zext_ln165_46_fu_4881_p1;
wire   [16:0] sub_ln165_14_fu_4885_p2;
wire   [16:0] add_ln165_10_fu_4891_p2;
wire   [6:0] or_ln164_14_fu_4901_p2;
wire   [15:0] tmp_88_fu_4914_p3;
wire   [13:0] tmp_89_fu_4926_p3;
wire   [16:0] zext_ln165_47_fu_4922_p1;
wire   [16:0] zext_ln165_48_fu_4934_p1;
wire   [16:0] sub_ln165_15_fu_4938_p2;
wire   [16:0] add_ln165_11_fu_4944_p2;
wire  signed [25:0] sext_ln703_98_fu_4960_p1;
wire  signed [25:0] sext_ln703_97_fu_4957_p1;
wire   [25:0] add_ln703_66_fu_4963_p2;
wire  signed [25:0] sext_ln703_101_fu_4976_p1;
wire  signed [25:0] sext_ln703_100_fu_4973_p1;
wire   [25:0] add_ln703_69_fu_4979_p2;
wire  signed [26:0] sext_ln703_102_fu_4985_p1;
wire  signed [26:0] sext_ln703_99_fu_4969_p1;
wire   [26:0] add_ln703_70_fu_4989_p2;
wire  signed [27:0] sext_ln703_103_fu_4995_p1;
wire  signed [27:0] sext_ln703_96_fu_4954_p1;
wire  signed [24:0] sext_ln703_47_fu_4532_p1;
wire  signed [24:0] sext_ln703_48_fu_4588_p1;
wire  signed [24:0] sext_ln703_49_fu_4628_p1;
wire  signed [24:0] sext_ln703_50_fu_4668_p1;
wire  signed [24:0] sext_ln703_51_fu_4708_p1;
wire  signed [24:0] sext_ln703_52_fu_4764_p1;
wire  signed [24:0] sext_ln703_53_fu_4804_p1;
wire  signed [24:0] sext_ln703_54_fu_4844_p1;
wire   [0:0] xor_ln169_62_fu_5037_p2;
wire   [0:0] and_ln170_62_fu_5043_p2;
wire   [7:0] select_ln169_62_fu_5049_p3;
wire   [7:0] select_ln170_62_fu_5057_p3;
wire   [23:0] shl_ln703_61_fu_5065_p3;
wire   [0:0] icmp_ln169_63_fu_5077_p2;
wire   [0:0] icmp_ln170_63_fu_5083_p2;
wire   [0:0] xor_ln169_63_fu_5095_p2;
wire   [0:0] and_ln170_63_fu_5101_p2;
wire   [7:0] sub_ln701_63_fu_5089_p2;
wire   [7:0] select_ln169_63_fu_5107_p3;
wire   [7:0] select_ln170_63_fu_5115_p3;
wire   [23:0] shl_ln703_62_fu_5123_p3;
wire  signed [25:0] sext_ln703_106_fu_5138_p1;
wire  signed [25:0] sext_ln703_105_fu_5135_p1;
wire   [25:0] add_ln703_74_fu_5141_p2;
wire  signed [25:0] sext_ln703_109_fu_5154_p1;
wire  signed [25:0] sext_ln703_108_fu_5151_p1;
wire   [25:0] add_ln703_77_fu_5157_p2;
wire  signed [26:0] sext_ln703_110_fu_5163_p1;
wire  signed [26:0] sext_ln703_107_fu_5147_p1;
wire  signed [24:0] sext_ln703_62_fu_5073_p1;
wire  signed [24:0] sext_ln703_63_fu_5131_p1;
wire   [0:0] xor_ln169_55_fu_5179_p2;
wire   [0:0] and_ln170_55_fu_5185_p2;
wire   [7:0] select_ln169_55_fu_5191_p3;
wire   [7:0] select_ln170_55_fu_5199_p3;
wire   [23:0] shl_ln703_54_fu_5207_p3;
wire   [0:0] icmp_ln169_56_fu_5219_p2;
wire   [0:0] icmp_ln170_56_fu_5224_p2;
wire   [0:0] xor_ln169_56_fu_5229_p2;
wire   [0:0] and_ln170_56_fu_5235_p2;
wire   [7:0] select_ln169_56_fu_5241_p3;
wire   [7:0] select_ln170_56_fu_5249_p3;
wire   [23:0] shl_ln703_55_fu_5257_p3;
wire   [0:0] xor_ln169_57_fu_5269_p2;
wire   [0:0] and_ln170_57_fu_5275_p2;
wire   [7:0] select_ln169_57_fu_5281_p3;
wire   [7:0] select_ln170_57_fu_5289_p3;
wire   [23:0] shl_ln703_56_fu_5297_p3;
wire   [0:0] xor_ln169_58_fu_5309_p2;
wire   [0:0] and_ln170_58_fu_5315_p2;
wire   [7:0] select_ln169_58_fu_5321_p3;
wire   [7:0] select_ln170_58_fu_5329_p3;
wire   [23:0] shl_ln703_57_fu_5337_p3;
wire   [0:0] xor_ln169_59_fu_5349_p2;
wire   [0:0] and_ln170_59_fu_5355_p2;
wire   [7:0] select_ln169_59_fu_5361_p3;
wire   [7:0] select_ln170_59_fu_5369_p3;
wire   [23:0] shl_ln703_58_fu_5377_p3;
wire   [0:0] icmp_ln169_60_fu_5389_p2;
wire   [0:0] icmp_ln170_60_fu_5394_p2;
wire   [0:0] xor_ln169_60_fu_5404_p2;
wire   [0:0] and_ln170_60_fu_5410_p2;
wire   [7:0] sub_ln701_60_fu_5399_p2;
wire   [7:0] select_ln169_60_fu_5416_p3;
wire   [7:0] select_ln170_60_fu_5423_p3;
wire   [23:0] shl_ln703_59_fu_5431_p3;
wire   [0:0] xor_ln169_61_fu_5443_p2;
wire   [0:0] and_ln170_61_fu_5449_p2;
wire   [7:0] select_ln169_61_fu_5455_p3;
wire   [7:0] select_ln170_61_fu_5463_p3;
wire   [23:0] shl_ln703_60_fu_5471_p3;
wire  signed [24:0] sext_ln703_55_fu_5215_p1;
wire  signed [24:0] sext_ln703_56_fu_5265_p1;
wire   [24:0] add_ln703_79_fu_5483_p2;
wire  signed [24:0] sext_ln703_57_fu_5305_p1;
wire  signed [24:0] sext_ln703_58_fu_5345_p1;
wire   [24:0] add_ln703_80_fu_5493_p2;
wire  signed [25:0] sext_ln703_113_fu_5499_p1;
wire  signed [25:0] sext_ln703_112_fu_5489_p1;
wire  signed [24:0] sext_ln703_59_fu_5385_p1;
wire  signed [24:0] sext_ln703_60_fu_5439_p1;
wire   [24:0] add_ln703_82_fu_5509_p2;
wire  signed [25:0] sext_ln703_116_fu_5519_p1;
wire  signed [25:0] sext_ln703_61_fu_5479_p1;
wire   [25:0] add_ln703_84_fu_5522_p2;
wire  signed [26:0] sext_ln703_117_fu_5528_p1;
wire  signed [26:0] sext_ln703_115_fu_5515_p1;
wire  signed [27:0] sext_ln703_118_fu_5547_p1;
wire  signed [27:0] sext_ln703_114_fu_5544_p1;
wire   [27:0] add_ln703_86_fu_5550_p2;
wire  signed [28:0] sext_ln703_119_fu_5556_p1;
wire  signed [28:0] sext_ln703_111_fu_5541_p1;
wire   [28:0] add_ln703_87_fu_5560_p2;
wire  signed [29:0] sext_ln703_120_fu_5566_p1;
wire  signed [29:0] sext_ln703_104_fu_5538_p1;
wire  signed [39:0] sext_ln703_89_fu_5576_p1;
wire  signed [39:0] sext_ln703_121_fu_5584_p1;
wire   [39:0] add_ln703_56_fu_5579_p2;
wire   [71:0] grp_fu_5602_p0;
wire  signed [60:0] grp_fu_5602_p1;
wire   [39:0] grp_fu_5602_p2;
reg    grp_fu_5602_ap_start;
wire    grp_fu_5602_ap_done;
reg   [89:0] ap_NS_fsm;
wire   [60:0] mul_ln1148_fu_1183_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 90'd1;
end

dut_sdiv_72ns_61sfYi #(
    .ID( 1 ),
    .NUM_STAGE( 76 ),
    .din0_WIDTH( 72 ),
    .din1_WIDTH( 61 ),
    .dout_WIDTH( 40 ))
dut_sdiv_72ns_61sfYi_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_5602_ap_start),
    .done(grp_fu_5602_ap_done),
    .din0(grp_fu_5602_p0),
    .din1(grp_fu_5602_p1),
    .ce(1'b1),
    .dout(grp_fu_5602_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        j_0_0_reg_847 <= add_ln161_reg_5620;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        j_0_0_reg_847 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ko_0_0_reg_859 <= add_ln162_reg_5649;
    end else if (((icmp_ln161_fu_1193_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ko_0_0_reg_859 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        reg_1052 <= input_3_0_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        reg_1052 <= input_3_0_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        reg_1057 <= input_0_0_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        reg_1057 <= input_0_0_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        reg_1074 <= input_3_0_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        reg_1074 <= input_3_0_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln161_reg_5620 <= add_ln161_fu_1199_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln162_reg_5649 <= add_ln162_fu_1220_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln703_27_reg_5845[24 : 16] <= add_ln703_27_fu_2258_p2[24 : 16];
        add_ln703_31_reg_5850[25 : 16] <= add_ln703_31_fu_2284_p2[25 : 16];
        add_ln703_33_reg_5855[24 : 16] <= add_ln703_33_fu_2290_p2[24 : 16];
        add_ln703_34_reg_5860[24 : 16] <= add_ln703_34_fu_2296_p2[24 : 16];
        add_ln703_36_reg_5865[24 : 16] <= add_ln703_36_fu_2302_p2[24 : 16];
        add_ln703_37_reg_5870[24 : 16] <= add_ln703_37_fu_2308_p2[24 : 16];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln703_28_reg_5925 <= add_ln703_28_fu_2792_p2;
        add_ln703_39_reg_5930[26 : 16] <= add_ln703_39_fu_2830_p2[26 : 16];
        add_ln703_41_reg_5935[24 : 16] <= add_ln703_41_fu_2836_p2[24 : 16];
        add_ln703_42_reg_5940[24 : 16] <= add_ln703_42_fu_2842_p2[24 : 16];
        add_ln703_44_reg_5945[24 : 16] <= add_ln703_44_fu_2848_p2[24 : 16];
        add_ln703_45_reg_5950[24 : 16] <= add_ln703_45_fu_2854_p2[24 : 16];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        add_ln703_40_reg_6005 <= add_ln703_40_fu_3352_p2;
        add_ln703_47_reg_6010[26 : 16] <= add_ln703_47_fu_3390_p2[26 : 16];
        add_ln703_48_reg_6015[24 : 16] <= add_ln703_48_fu_3396_p2[24 : 16];
        add_ln703_49_reg_6020[24 : 16] <= add_ln703_49_fu_3402_p2[24 : 16];
        add_ln703_51_reg_6025[24 : 16] <= add_ln703_51_fu_3408_p2[24 : 16];
        add_ln703_52_reg_6030[24 : 16] <= add_ln703_52_fu_3414_p2[24 : 16];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln703_55_reg_6085[27 : 16] <= add_ln703_55_fu_3923_p2[27 : 16];
        add_ln703_57_reg_6090[24 : 16] <= add_ln703_57_fu_3929_p2[24 : 16];
        add_ln703_58_reg_6095[24 : 16] <= add_ln703_58_fu_3935_p2[24 : 16];
        add_ln703_60_reg_6100[24 : 16] <= add_ln703_60_fu_3941_p2[24 : 16];
        add_ln703_61_reg_6105[24 : 16] <= add_ln703_61_fu_3947_p2[24 : 16];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln703_63_reg_6160[26 : 16] <= add_ln703_63_fu_4466_p2[26 : 16];
        add_ln703_64_reg_6165[24 : 16] <= add_ln703_64_fu_4472_p2[24 : 16];
        add_ln703_65_reg_6170[24 : 16] <= add_ln703_65_fu_4478_p2[24 : 16];
        add_ln703_67_reg_6175[24 : 16] <= add_ln703_67_fu_4484_p2[24 : 16];
        add_ln703_68_reg_6180[24 : 16] <= add_ln703_68_fu_4490_p2[24 : 16];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_ln703_71_reg_6235[27 : 16] <= add_ln703_71_fu_4999_p2[27 : 16];
        add_ln703_72_reg_6240[24 : 16] <= add_ln703_72_fu_5005_p2[24 : 16];
        add_ln703_73_reg_6245[24 : 16] <= add_ln703_73_fu_5011_p2[24 : 16];
        add_ln703_75_reg_6250[24 : 16] <= add_ln703_75_fu_5017_p2[24 : 16];
        add_ln703_76_reg_6255[24 : 16] <= add_ln703_76_fu_5023_p2[24 : 16];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln703_78_reg_6278[26 : 16] <= add_ln703_78_fu_5167_p2[26 : 16];
        add_ln703_83_reg_6283[24 : 16] <= add_ln703_83_fu_5173_p2[24 : 16];
        input_0_0_V_load_15_reg_6272 <= input_0_0_V_q1;
        trunc_ln167_41_reg_6260 <= trunc_ln167_41_fu_5029_p1;
        trunc_ln167_44_reg_6266 <= trunc_ln167_44_fu_5033_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        add_ln703_81_reg_6288[25 : 16] <= add_ln703_81_fu_5503_p2[25 : 16];
        add_ln703_85_reg_6293[26 : 16] <= add_ln703_85_fu_5532_p2[26 : 16];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        add_ln703_88_reg_6298[29 : 16] <= add_ln703_88_fu_5570_p2[29 : 16];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        input_2_0_V_load_1_reg_5739 <= input_2_0_V_q1;
        select_ln170_reg_5722 <= select_ln170_fu_1395_p3;
        trunc_ln167_2_reg_5727 <= trunc_ln167_2_fu_1403_p1;
        trunc_ln167_9_reg_5733 <= {{packed_weights_q1[5:4]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln161_fu_1193_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        output_0_V_addr_reg_5641 <= zext_ln165_fu_1205_p1;
        zext_ln1265_reg_5625[8 : 0] <= zext_ln1265_fu_1210_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_1032 <= {{packed_weights_q0[3:2]}};
        reg_1036 <= input_1_0_V_q0;
        reg_1040 <= {{packed_weights_q0[5:4]}};
        reg_1044 <= input_2_0_V_q0;
        reg_1048 <= {{packed_weights_q0[7:6]}};
        reg_1062 <= {{packed_weights_q1[3:2]}};
        reg_1066 <= input_1_0_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_1070 <= {{packed_weights_q1[7:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        sext_ln161_reg_5612 <= sext_ln161_fu_1189_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln162_fu_1214_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        shl_ln2_reg_5654[6 : 4] <= shl_ln2_fu_1226_p3[6 : 4];
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln161_fu_1193_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln161_fu_1193_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_5602_ap_start = 1'b1;
    end else begin
        grp_fu_5602_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        input_0_0_V_address0 = zext_ln165_15_fu_4853_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        input_0_0_V_address0 = zext_ln165_13_fu_4310_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        input_0_0_V_address0 = zext_ln165_11_fu_3777_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        input_0_0_V_address0 = zext_ln165_9_fu_3217_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        input_0_0_V_address0 = zext_ln165_7_fu_2682_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        input_0_0_V_address0 = zext_ln165_5_fu_2134_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        input_0_0_V_address0 = zext_ln165_3_fu_1412_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        input_0_0_V_address0 = zext_ln165_1_fu_1234_p1;
    end else begin
        input_0_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        input_0_0_V_address1 = zext_ln165_16_fu_4906_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        input_0_0_V_address1 = zext_ln165_14_fu_4386_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        input_0_0_V_address1 = zext_ln165_12_fu_3830_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        input_0_0_V_address1 = zext_ln165_10_fu_3293_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        input_0_0_V_address1 = zext_ln165_8_fu_2735_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        input_0_0_V_address1 = zext_ln165_6_fu_2210_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        input_0_0_V_address1 = zext_ln165_4_fu_1465_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        input_0_0_V_address1 = zext_ln165_2_fu_1311_p1;
    end else begin
        input_0_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        input_0_0_V_ce0 = 1'b1;
    end else begin
        input_0_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        input_0_0_V_ce1 = 1'b1;
    end else begin
        input_0_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        input_1_0_V_address0 = zext_ln165_15_fu_4853_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        input_1_0_V_address0 = zext_ln165_13_fu_4310_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        input_1_0_V_address0 = zext_ln165_11_fu_3777_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        input_1_0_V_address0 = zext_ln165_9_fu_3217_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        input_1_0_V_address0 = zext_ln165_7_fu_2682_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        input_1_0_V_address0 = zext_ln165_5_fu_2134_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        input_1_0_V_address0 = zext_ln165_3_fu_1412_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        input_1_0_V_address0 = zext_ln165_1_fu_1234_p1;
    end else begin
        input_1_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        input_1_0_V_address1 = zext_ln165_16_fu_4906_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        input_1_0_V_address1 = zext_ln165_14_fu_4386_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        input_1_0_V_address1 = zext_ln165_12_fu_3830_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        input_1_0_V_address1 = zext_ln165_10_fu_3293_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        input_1_0_V_address1 = zext_ln165_8_fu_2735_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        input_1_0_V_address1 = zext_ln165_6_fu_2210_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        input_1_0_V_address1 = zext_ln165_4_fu_1465_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        input_1_0_V_address1 = zext_ln165_2_fu_1311_p1;
    end else begin
        input_1_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        input_1_0_V_ce0 = 1'b1;
    end else begin
        input_1_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        input_1_0_V_ce1 = 1'b1;
    end else begin
        input_1_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        input_2_0_V_address0 = zext_ln165_15_fu_4853_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        input_2_0_V_address0 = zext_ln165_13_fu_4310_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        input_2_0_V_address0 = zext_ln165_11_fu_3777_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        input_2_0_V_address0 = zext_ln165_9_fu_3217_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        input_2_0_V_address0 = zext_ln165_7_fu_2682_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        input_2_0_V_address0 = zext_ln165_5_fu_2134_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        input_2_0_V_address0 = zext_ln165_3_fu_1412_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        input_2_0_V_address0 = zext_ln165_1_fu_1234_p1;
    end else begin
        input_2_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        input_2_0_V_address1 = zext_ln165_16_fu_4906_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        input_2_0_V_address1 = zext_ln165_14_fu_4386_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        input_2_0_V_address1 = zext_ln165_12_fu_3830_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        input_2_0_V_address1 = zext_ln165_10_fu_3293_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        input_2_0_V_address1 = zext_ln165_8_fu_2735_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        input_2_0_V_address1 = zext_ln165_6_fu_2210_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        input_2_0_V_address1 = zext_ln165_4_fu_1465_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        input_2_0_V_address1 = zext_ln165_2_fu_1311_p1;
    end else begin
        input_2_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        input_2_0_V_ce0 = 1'b1;
    end else begin
        input_2_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        input_2_0_V_ce1 = 1'b1;
    end else begin
        input_2_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        input_3_0_V_address0 = zext_ln165_15_fu_4853_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        input_3_0_V_address0 = zext_ln165_13_fu_4310_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        input_3_0_V_address0 = zext_ln165_11_fu_3777_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        input_3_0_V_address0 = zext_ln165_9_fu_3217_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        input_3_0_V_address0 = zext_ln165_7_fu_2682_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        input_3_0_V_address0 = zext_ln165_5_fu_2134_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        input_3_0_V_address0 = zext_ln165_3_fu_1412_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        input_3_0_V_address0 = zext_ln165_1_fu_1234_p1;
    end else begin
        input_3_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        input_3_0_V_address1 = zext_ln165_16_fu_4906_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        input_3_0_V_address1 = zext_ln165_14_fu_4386_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        input_3_0_V_address1 = zext_ln165_12_fu_3830_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        input_3_0_V_address1 = zext_ln165_10_fu_3293_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        input_3_0_V_address1 = zext_ln165_8_fu_2735_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        input_3_0_V_address1 = zext_ln165_6_fu_2210_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        input_3_0_V_address1 = zext_ln165_4_fu_1465_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        input_3_0_V_address1 = zext_ln165_2_fu_1311_p1;
    end else begin
        input_3_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        input_3_0_V_ce0 = 1'b1;
    end else begin
        input_3_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        input_3_0_V_ce1 = 1'b1;
    end else begin
        input_3_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state5))) begin
        output_0_V_ce0 = 1'b1;
    end else begin
        output_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        output_0_V_d0 = trunc_ln703_fu_5607_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        output_0_V_d0 = add_ln703_89_fu_5587_p2;
    end else begin
        output_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state90))) begin
        output_0_V_we0 = 1'b1;
    end else begin
        output_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        packed_weights_address0 = sext_ln165_14_fu_4896_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        packed_weights_address0 = sext_ln165_12_fu_4376_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        packed_weights_address0 = sext_ln165_10_fu_3820_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        packed_weights_address0 = sext_ln165_8_fu_3283_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        packed_weights_address0 = sext_ln165_6_fu_2725_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        packed_weights_address0 = sext_ln165_4_fu_2200_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        packed_weights_address0 = sext_ln165_2_fu_1455_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        packed_weights_address0 = sext_ln165_fu_1300_p1;
    end else begin
        packed_weights_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        packed_weights_address1 = sext_ln165_15_fu_4949_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        packed_weights_address1 = sext_ln165_13_fu_4429_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        packed_weights_address1 = sext_ln165_11_fu_3873_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        packed_weights_address1 = sext_ln165_9_fu_3336_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        packed_weights_address1 = sext_ln165_7_fu_2778_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        packed_weights_address1 = sext_ln165_5_fu_2253_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        packed_weights_address1 = sext_ln165_3_fu_1508_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        packed_weights_address1 = sext_ln165_1_fu_1354_p1;
    end else begin
        packed_weights_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        packed_weights_ce0 = 1'b1;
    end else begin
        packed_weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        packed_weights_ce1 = 1'b1;
    end else begin
        packed_weights_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln161_fu_1193_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln162_fu_1214_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln161_fu_1199_p2 = (j_0_0_reg_847 + 9'd1);

assign add_ln162_fu_1220_p2 = (ko_0_0_reg_859 + 3'd1);

assign add_ln165_10_fu_4891_p2 = (zext_ln1265_reg_5625 + sub_ln165_14_fu_4885_p2);

assign add_ln165_11_fu_4944_p2 = (zext_ln1265_reg_5625 + sub_ln165_15_fu_4938_p2);

assign add_ln165_1_fu_1450_p2 = (zext_ln1265_reg_5625 + sub_ln165_2_fu_1444_p2);

assign add_ln165_2_fu_1503_p2 = (zext_ln1265_reg_5625 + sub_ln165_3_fu_1497_p2);

assign add_ln165_3_fu_2248_p2 = (zext_ln1265_reg_5625 + sub_ln165_5_fu_2242_p2);

assign add_ln165_4_fu_2720_p2 = (zext_ln1265_reg_5625 + sub_ln165_6_fu_2714_p2);

assign add_ln165_5_fu_2773_p2 = (zext_ln1265_reg_5625 + sub_ln165_7_fu_2767_p2);

assign add_ln165_6_fu_3331_p2 = (zext_ln1265_reg_5625 + sub_ln165_9_fu_3325_p2);

assign add_ln165_7_fu_3815_p2 = (zext_ln1265_reg_5625 + sub_ln165_10_fu_3809_p2);

assign add_ln165_8_fu_3868_p2 = (zext_ln1265_reg_5625 + sub_ln165_11_fu_3862_p2);

assign add_ln165_9_fu_4424_p2 = (zext_ln1265_reg_5625 + sub_ln165_13_fu_4418_p2);

assign add_ln165_fu_1349_p2 = (zext_ln1265_reg_5625 + sub_ln165_1_fu_1343_p2);

assign add_ln703_27_fu_2258_p2 = ($signed(sext_ln703_1_fu_1549_p1) + $signed(sext_ln703_2_fu_1589_p1));

assign add_ln703_28_fu_2792_p2 = ($signed(sext_ln703_64_fu_2789_p1) + $signed(add_ln703_fu_2783_p2));

assign add_ln703_29_fu_2264_p2 = ($signed(sext_ln703_3_fu_1629_p1) + $signed(sext_ln703_4_fu_1679_p1));

assign add_ln703_30_fu_2274_p2 = ($signed(sext_ln703_5_fu_1719_p1) + $signed(sext_ln703_6_fu_1773_p1));

assign add_ln703_31_fu_2284_p2 = ($signed(sext_ln703_66_fu_2280_p1) + $signed(sext_ln703_65_fu_2270_p1));

assign add_ln703_32_fu_3344_p2 = ($signed(sext_ln703_67_fu_3341_p1) + $signed(add_ln703_28_reg_5925));

assign add_ln703_33_fu_2290_p2 = ($signed(sext_ln703_7_fu_1813_p1) + $signed(sext_ln703_8_fu_1869_p1));

assign add_ln703_34_fu_2296_p2 = ($signed(sext_ln703_9_fu_1909_p1) + $signed(sext_ln703_10_fu_1949_p1));

assign add_ln703_35_fu_2804_p2 = ($signed(sext_ln703_69_fu_2801_p1) + $signed(sext_ln703_68_fu_2798_p1));

assign add_ln703_36_fu_2302_p2 = ($signed(sext_ln703_11_fu_1989_p1) + $signed(sext_ln703_12_fu_2045_p1));

assign add_ln703_37_fu_2308_p2 = ($signed(sext_ln703_13_fu_2085_p1) + $signed(sext_ln703_14_fu_2125_p1));

assign add_ln703_38_fu_2820_p2 = ($signed(sext_ln703_72_fu_2817_p1) + $signed(sext_ln703_71_fu_2814_p1));

assign add_ln703_39_fu_2830_p2 = ($signed(sext_ln703_73_fu_2826_p1) + $signed(sext_ln703_70_fu_2810_p1));

assign add_ln703_40_fu_3352_p2 = ($signed(sext_ln703_74_fu_3349_p1) + $signed(add_ln703_32_fu_3344_p2));

assign add_ln703_41_fu_2836_p2 = ($signed(sext_ln703_15_fu_2361_p1) + $signed(sext_ln703_16_fu_2417_p1));

assign add_ln703_42_fu_2842_p2 = ($signed(sext_ln703_17_fu_2457_p1) + $signed(sext_ln703_18_fu_2497_p1));

assign add_ln703_43_fu_3364_p2 = ($signed(sext_ln703_76_fu_3361_p1) + $signed(sext_ln703_75_fu_3358_p1));

assign add_ln703_44_fu_2848_p2 = ($signed(sext_ln703_19_fu_2537_p1) + $signed(sext_ln703_20_fu_2593_p1));

assign add_ln703_45_fu_2854_p2 = ($signed(sext_ln703_21_fu_2633_p1) + $signed(sext_ln703_22_fu_2673_p1));

assign add_ln703_46_fu_3380_p2 = ($signed(sext_ln703_79_fu_3377_p1) + $signed(sext_ln703_78_fu_3374_p1));

assign add_ln703_47_fu_3390_p2 = ($signed(sext_ln703_80_fu_3386_p1) + $signed(sext_ln703_77_fu_3370_p1));

assign add_ln703_48_fu_3396_p2 = ($signed(sext_ln703_23_fu_2896_p1) + $signed(sext_ln703_24_fu_2952_p1));

assign add_ln703_49_fu_3402_p2 = ($signed(sext_ln703_25_fu_2992_p1) + $signed(sext_ln703_26_fu_3032_p1));

assign add_ln703_50_fu_3887_p2 = ($signed(sext_ln703_83_fu_3884_p1) + $signed(sext_ln703_82_fu_3881_p1));

assign add_ln703_51_fu_3408_p2 = ($signed(sext_ln703_27_fu_3072_p1) + $signed(sext_ln703_28_fu_3128_p1));

assign add_ln703_52_fu_3414_p2 = ($signed(sext_ln703_29_fu_3168_p1) + $signed(sext_ln703_30_fu_3208_p1));

assign add_ln703_53_fu_3903_p2 = ($signed(sext_ln703_86_fu_3900_p1) + $signed(sext_ln703_85_fu_3897_p1));

assign add_ln703_54_fu_3913_p2 = ($signed(sext_ln703_87_fu_3909_p1) + $signed(sext_ln703_84_fu_3893_p1));

assign add_ln703_55_fu_3923_p2 = ($signed(sext_ln703_88_fu_3919_p1) + $signed(sext_ln703_81_fu_3878_p1));

assign add_ln703_56_fu_5579_p2 = ($signed(sext_ln703_89_fu_5576_p1) + $signed(add_ln703_40_reg_6005));

assign add_ln703_57_fu_3929_p2 = ($signed(sext_ln703_31_fu_3456_p1) + $signed(sext_ln703_32_fu_3512_p1));

assign add_ln703_58_fu_3935_p2 = ($signed(sext_ln703_33_fu_3552_p1) + $signed(sext_ln703_34_fu_3592_p1));

assign add_ln703_59_fu_4440_p2 = ($signed(sext_ln703_91_fu_4437_p1) + $signed(sext_ln703_90_fu_4434_p1));

assign add_ln703_60_fu_3941_p2 = ($signed(sext_ln703_35_fu_3632_p1) + $signed(sext_ln703_36_fu_3688_p1));

assign add_ln703_61_fu_3947_p2 = ($signed(sext_ln703_37_fu_3728_p1) + $signed(sext_ln703_38_fu_3768_p1));

assign add_ln703_62_fu_4456_p2 = ($signed(sext_ln703_94_fu_4453_p1) + $signed(sext_ln703_93_fu_4450_p1));

assign add_ln703_63_fu_4466_p2 = ($signed(sext_ln703_95_fu_4462_p1) + $signed(sext_ln703_92_fu_4446_p1));

assign add_ln703_64_fu_4472_p2 = ($signed(sext_ln703_39_fu_3989_p1) + $signed(sext_ln703_40_fu_4045_p1));

assign add_ln703_65_fu_4478_p2 = ($signed(sext_ln703_41_fu_4085_p1) + $signed(sext_ln703_42_fu_4125_p1));

assign add_ln703_66_fu_4963_p2 = ($signed(sext_ln703_98_fu_4960_p1) + $signed(sext_ln703_97_fu_4957_p1));

assign add_ln703_67_fu_4484_p2 = ($signed(sext_ln703_43_fu_4165_p1) + $signed(sext_ln703_44_fu_4221_p1));

assign add_ln703_68_fu_4490_p2 = ($signed(sext_ln703_45_fu_4261_p1) + $signed(sext_ln703_46_fu_4301_p1));

assign add_ln703_69_fu_4979_p2 = ($signed(sext_ln703_101_fu_4976_p1) + $signed(sext_ln703_100_fu_4973_p1));

assign add_ln703_70_fu_4989_p2 = ($signed(sext_ln703_102_fu_4985_p1) + $signed(sext_ln703_99_fu_4969_p1));

assign add_ln703_71_fu_4999_p2 = ($signed(sext_ln703_103_fu_4995_p1) + $signed(sext_ln703_96_fu_4954_p1));

assign add_ln703_72_fu_5005_p2 = ($signed(sext_ln703_47_fu_4532_p1) + $signed(sext_ln703_48_fu_4588_p1));

assign add_ln703_73_fu_5011_p2 = ($signed(sext_ln703_49_fu_4628_p1) + $signed(sext_ln703_50_fu_4668_p1));

assign add_ln703_74_fu_5141_p2 = ($signed(sext_ln703_106_fu_5138_p1) + $signed(sext_ln703_105_fu_5135_p1));

assign add_ln703_75_fu_5017_p2 = ($signed(sext_ln703_51_fu_4708_p1) + $signed(sext_ln703_52_fu_4764_p1));

assign add_ln703_76_fu_5023_p2 = ($signed(sext_ln703_53_fu_4804_p1) + $signed(sext_ln703_54_fu_4844_p1));

assign add_ln703_77_fu_5157_p2 = ($signed(sext_ln703_109_fu_5154_p1) + $signed(sext_ln703_108_fu_5151_p1));

assign add_ln703_78_fu_5167_p2 = ($signed(sext_ln703_110_fu_5163_p1) + $signed(sext_ln703_107_fu_5147_p1));

assign add_ln703_79_fu_5483_p2 = ($signed(sext_ln703_55_fu_5215_p1) + $signed(sext_ln703_56_fu_5265_p1));

assign add_ln703_80_fu_5493_p2 = ($signed(sext_ln703_57_fu_5305_p1) + $signed(sext_ln703_58_fu_5345_p1));

assign add_ln703_81_fu_5503_p2 = ($signed(sext_ln703_113_fu_5499_p1) + $signed(sext_ln703_112_fu_5489_p1));

assign add_ln703_82_fu_5509_p2 = ($signed(sext_ln703_59_fu_5385_p1) + $signed(sext_ln703_60_fu_5439_p1));

assign add_ln703_83_fu_5173_p2 = ($signed(sext_ln703_62_fu_5073_p1) + $signed(sext_ln703_63_fu_5131_p1));

assign add_ln703_84_fu_5522_p2 = ($signed(sext_ln703_116_fu_5519_p1) + $signed(sext_ln703_61_fu_5479_p1));

assign add_ln703_85_fu_5532_p2 = ($signed(sext_ln703_117_fu_5528_p1) + $signed(sext_ln703_115_fu_5515_p1));

assign add_ln703_86_fu_5550_p2 = ($signed(sext_ln703_118_fu_5547_p1) + $signed(sext_ln703_114_fu_5544_p1));

assign add_ln703_87_fu_5560_p2 = ($signed(sext_ln703_119_fu_5556_p1) + $signed(sext_ln703_111_fu_5541_p1));

assign add_ln703_88_fu_5570_p2 = ($signed(sext_ln703_120_fu_5566_p1) + $signed(sext_ln703_104_fu_5538_p1));

assign add_ln703_89_fu_5587_p2 = ($signed(sext_ln703_121_fu_5584_p1) + $signed(add_ln703_56_fu_5579_p2));

assign add_ln703_fu_2783_p2 = ($signed(output_0_V_q0) + $signed(sext_ln703_fu_2321_p1));

assign and_ln170_10_fu_1919_p2 = (xor_ln169_10_fu_1913_p2 & grp_fu_960_p2);

assign and_ln170_11_fu_1959_p2 = (xor_ln169_11_fu_1953_p2 & grp_fu_978_p2);

assign and_ln170_12_fu_2015_p2 = (xor_ln169_12_fu_2009_p2 & icmp_ln170_12_fu_2003_p2);

assign and_ln170_13_fu_2055_p2 = (xor_ln169_13_fu_2049_p2 & grp_fu_1002_p2);

assign and_ln170_14_fu_2095_p2 = (xor_ln169_14_fu_2089_p2 & grp_fu_1020_p2);

assign and_ln170_15_fu_2331_p2 = (xor_ln169_15_fu_2325_p2 & grp_fu_1163_p2);

assign and_ln170_16_fu_2387_p2 = (xor_ln169_16_fu_2381_p2 & icmp_ln170_16_fu_2375_p2);

assign and_ln170_17_fu_2427_p2 = (xor_ln169_17_fu_2421_p2 & grp_fu_942_p2);

assign and_ln170_18_fu_2467_p2 = (xor_ln169_18_fu_2461_p2 & grp_fu_960_p2);

assign and_ln170_19_fu_2507_p2 = (xor_ln169_19_fu_2501_p2 & grp_fu_978_p2);

assign and_ln170_1_fu_1519_p2 = (xor_ln169_1_fu_1513_p2 & grp_fu_1085_p2);

assign and_ln170_20_fu_2563_p2 = (xor_ln169_20_fu_2557_p2 & icmp_ln170_20_fu_2551_p2);

assign and_ln170_21_fu_2603_p2 = (xor_ln169_21_fu_2597_p2 & grp_fu_1002_p2);

assign and_ln170_22_fu_2643_p2 = (xor_ln169_22_fu_2637_p2 & grp_fu_1020_p2);

assign and_ln170_23_fu_2866_p2 = (xor_ln169_23_fu_2860_p2 & grp_fu_1163_p2);

assign and_ln170_24_fu_2922_p2 = (xor_ln169_24_fu_2916_p2 & icmp_ln170_24_fu_2910_p2);

assign and_ln170_25_fu_2962_p2 = (xor_ln169_25_fu_2956_p2 & grp_fu_942_p2);

assign and_ln170_26_fu_3002_p2 = (xor_ln169_26_fu_2996_p2 & grp_fu_960_p2);

assign and_ln170_27_fu_3042_p2 = (xor_ln169_27_fu_3036_p2 & grp_fu_978_p2);

assign and_ln170_28_fu_3098_p2 = (xor_ln169_28_fu_3092_p2 & icmp_ln170_28_fu_3086_p2);

assign and_ln170_29_fu_3138_p2 = (xor_ln169_29_fu_3132_p2 & grp_fu_1002_p2);

assign and_ln170_2_fu_1559_p2 = (xor_ln169_2_fu_1553_p2 & grp_fu_1103_p2);

assign and_ln170_30_fu_3178_p2 = (xor_ln169_30_fu_3172_p2 & grp_fu_1020_p2);

assign and_ln170_31_fu_3426_p2 = (xor_ln169_31_fu_3420_p2 & grp_fu_1163_p2);

assign and_ln170_32_fu_3482_p2 = (xor_ln169_32_fu_3476_p2 & icmp_ln170_32_fu_3470_p2);

assign and_ln170_33_fu_3522_p2 = (xor_ln169_33_fu_3516_p2 & grp_fu_942_p2);

assign and_ln170_34_fu_3562_p2 = (xor_ln169_34_fu_3556_p2 & grp_fu_960_p2);

assign and_ln170_35_fu_3602_p2 = (xor_ln169_35_fu_3596_p2 & grp_fu_978_p2);

assign and_ln170_36_fu_3658_p2 = (xor_ln169_36_fu_3652_p2 & icmp_ln170_36_fu_3646_p2);

assign and_ln170_37_fu_3698_p2 = (xor_ln169_37_fu_3692_p2 & grp_fu_1002_p2);

assign and_ln170_38_fu_3738_p2 = (xor_ln169_38_fu_3732_p2 & grp_fu_1020_p2);

assign and_ln170_39_fu_3959_p2 = (xor_ln169_39_fu_3953_p2 & grp_fu_1163_p2);

assign and_ln170_3_fu_1599_p2 = (xor_ln169_3_fu_1593_p2 & grp_fu_1121_p2);

assign and_ln170_40_fu_4015_p2 = (xor_ln169_40_fu_4009_p2 & icmp_ln170_40_fu_4003_p2);

assign and_ln170_41_fu_4055_p2 = (xor_ln169_41_fu_4049_p2 & grp_fu_942_p2);

assign and_ln170_42_fu_4095_p2 = (xor_ln169_42_fu_4089_p2 & grp_fu_960_p2);

assign and_ln170_43_fu_4135_p2 = (xor_ln169_43_fu_4129_p2 & grp_fu_978_p2);

assign and_ln170_44_fu_4191_p2 = (xor_ln169_44_fu_4185_p2 & icmp_ln170_44_fu_4179_p2);

assign and_ln170_45_fu_4231_p2 = (xor_ln169_45_fu_4225_p2 & grp_fu_1002_p2);

assign and_ln170_46_fu_4271_p2 = (xor_ln169_46_fu_4265_p2 & grp_fu_1020_p2);

assign and_ln170_47_fu_4502_p2 = (xor_ln169_47_fu_4496_p2 & grp_fu_1163_p2);

assign and_ln170_48_fu_4558_p2 = (xor_ln169_48_fu_4552_p2 & icmp_ln170_48_fu_4546_p2);

assign and_ln170_49_fu_4598_p2 = (xor_ln169_49_fu_4592_p2 & grp_fu_942_p2);

assign and_ln170_4_fu_1649_p2 = (xor_ln169_4_fu_1643_p2 & icmp_ln170_4_fu_1638_p2);

assign and_ln170_50_fu_4638_p2 = (xor_ln169_50_fu_4632_p2 & grp_fu_960_p2);

assign and_ln170_51_fu_4678_p2 = (xor_ln169_51_fu_4672_p2 & grp_fu_978_p2);

assign and_ln170_52_fu_4734_p2 = (xor_ln169_52_fu_4728_p2 & icmp_ln170_52_fu_4722_p2);

assign and_ln170_53_fu_4774_p2 = (xor_ln169_53_fu_4768_p2 & grp_fu_1002_p2);

assign and_ln170_54_fu_4814_p2 = (xor_ln169_54_fu_4808_p2 & grp_fu_1020_p2);

assign and_ln170_55_fu_5185_p2 = (xor_ln169_55_fu_5179_p2 & grp_fu_1163_p2);

assign and_ln170_56_fu_5235_p2 = (xor_ln169_56_fu_5229_p2 & icmp_ln170_56_fu_5224_p2);

assign and_ln170_57_fu_5275_p2 = (xor_ln169_57_fu_5269_p2 & grp_fu_1085_p2);

assign and_ln170_58_fu_5315_p2 = (xor_ln169_58_fu_5309_p2 & grp_fu_1103_p2);

assign and_ln170_59_fu_5355_p2 = (xor_ln169_59_fu_5349_p2 & grp_fu_1121_p2);

assign and_ln170_5_fu_1689_p2 = (xor_ln169_5_fu_1683_p2 & grp_fu_1145_p2);

assign and_ln170_60_fu_5410_p2 = (xor_ln169_60_fu_5404_p2 & icmp_ln170_60_fu_5394_p2);

assign and_ln170_61_fu_5449_p2 = (xor_ln169_61_fu_5443_p2 & grp_fu_1145_p2);

assign and_ln170_62_fu_5043_p2 = (xor_ln169_62_fu_5037_p2 & grp_fu_1020_p2);

assign and_ln170_63_fu_5101_p2 = (xor_ln169_63_fu_5095_p2 & icmp_ln170_63_fu_5083_p2);

assign and_ln170_6_fu_1744_p2 = (xor_ln169_6_fu_1738_p2 & icmp_ln170_6_fu_1728_p2);

assign and_ln170_7_fu_1783_p2 = (xor_ln169_7_fu_1777_p2 & grp_fu_1163_p2);

assign and_ln170_8_fu_1839_p2 = (xor_ln169_8_fu_1833_p2 & icmp_ln170_8_fu_1827_p2);

assign and_ln170_9_fu_1879_p2 = (xor_ln169_9_fu_1873_p2 & grp_fu_942_p2);

assign and_ln170_fu_1381_p2 = (xor_ln169_fu_1375_p2 & icmp_ln170_fu_1369_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign grp_fu_1002_p2 = ((grp_fu_906_p4 == 2'd2) ? 1'b1 : 1'b0);

assign grp_fu_1008_p2 = (8'd0 - input_1_0_V_q1);

assign grp_fu_1014_p2 = ((grp_fu_916_p4 == 2'd1) ? 1'b1 : 1'b0);

assign grp_fu_1020_p2 = ((grp_fu_916_p4 == 2'd2) ? 1'b1 : 1'b0);

assign grp_fu_1026_p2 = (8'd0 - input_2_0_V_q1);

assign grp_fu_1079_p2 = ((reg_1032 == 2'd1) ? 1'b1 : 1'b0);

assign grp_fu_1085_p2 = ((reg_1032 == 2'd2) ? 1'b1 : 1'b0);

assign grp_fu_1091_p2 = (8'd0 - reg_1036);

assign grp_fu_1097_p2 = ((reg_1040 == 2'd1) ? 1'b1 : 1'b0);

assign grp_fu_1103_p2 = ((reg_1040 == 2'd2) ? 1'b1 : 1'b0);

assign grp_fu_1109_p2 = (8'd0 - reg_1044);

assign grp_fu_1115_p2 = ((reg_1048 == 2'd1) ? 1'b1 : 1'b0);

assign grp_fu_1121_p2 = ((reg_1048 == 2'd2) ? 1'b1 : 1'b0);

assign grp_fu_1127_p2 = (8'd0 - reg_1052);

assign grp_fu_1133_p2 = (8'd0 - reg_1057);

assign grp_fu_1139_p2 = ((reg_1062 == 2'd1) ? 1'b1 : 1'b0);

assign grp_fu_1145_p2 = ((reg_1062 == 2'd2) ? 1'b1 : 1'b0);

assign grp_fu_1151_p2 = (8'd0 - reg_1066);

assign grp_fu_1157_p2 = ((reg_1070 == 2'd1) ? 1'b1 : 1'b0);

assign grp_fu_1163_p2 = ((reg_1070 == 2'd2) ? 1'b1 : 1'b0);

assign grp_fu_1169_p2 = (8'd0 - reg_1074);

assign grp_fu_5602_p0 = {{output_0_V_q0}, {32'd0}};

assign grp_fu_5602_p1 = sext_ln161_reg_5612;

assign grp_fu_870_p2 = (8'd0 - input_0_0_V_q0);

assign grp_fu_876_p4 = {{packed_weights_q0[3:2]}};

assign grp_fu_886_p4 = {{packed_weights_q0[5:4]}};

assign grp_fu_896_p4 = {{packed_weights_q0[7:6]}};

assign grp_fu_906_p4 = {{packed_weights_q1[3:2]}};

assign grp_fu_916_p4 = {{packed_weights_q1[5:4]}};

assign grp_fu_926_p4 = {{packed_weights_q1[7:6]}};

assign grp_fu_936_p2 = ((grp_fu_876_p4 == 2'd1) ? 1'b1 : 1'b0);

assign grp_fu_942_p2 = ((grp_fu_876_p4 == 2'd2) ? 1'b1 : 1'b0);

assign grp_fu_948_p2 = (8'd0 - input_1_0_V_q0);

assign grp_fu_954_p2 = ((grp_fu_886_p4 == 2'd1) ? 1'b1 : 1'b0);

assign grp_fu_960_p2 = ((grp_fu_886_p4 == 2'd2) ? 1'b1 : 1'b0);

assign grp_fu_966_p2 = (8'd0 - input_2_0_V_q0);

assign grp_fu_972_p2 = ((grp_fu_896_p4 == 2'd1) ? 1'b1 : 1'b0);

assign grp_fu_978_p2 = ((grp_fu_896_p4 == 2'd2) ? 1'b1 : 1'b0);

assign grp_fu_984_p2 = (8'd0 - input_3_0_V_q0);

assign grp_fu_990_p2 = (8'd0 - input_0_0_V_q1);

assign grp_fu_996_p2 = ((grp_fu_906_p4 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln161_fu_1193_p2 = ((j_0_0_reg_847 == 9'd384) ? 1'b1 : 1'b0);

assign icmp_ln162_fu_1214_p2 = ((ko_0_0_reg_859 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln169_12_fu_1997_p2 = ((trunc_ln167_7_fu_1993_p1 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln169_16_fu_2369_p2 = ((trunc_ln167_11_fu_2365_p1 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln169_20_fu_2545_p2 = ((trunc_ln167_14_fu_2541_p1 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln169_24_fu_2904_p2 = ((trunc_ln167_17_fu_2900_p1 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln169_28_fu_3080_p2 = ((trunc_ln167_20_fu_3076_p1 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln169_32_fu_3464_p2 = ((trunc_ln167_23_fu_3460_p1 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln169_36_fu_3640_p2 = ((trunc_ln167_26_fu_3636_p1 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln169_40_fu_3997_p2 = ((trunc_ln167_29_fu_3993_p1 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln169_44_fu_4173_p2 = ((trunc_ln167_32_fu_4169_p1 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln169_48_fu_4540_p2 = ((trunc_ln167_35_fu_4536_p1 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln169_4_fu_1633_p2 = ((trunc_ln167_2_reg_5727 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln169_52_fu_4716_p2 = ((trunc_ln167_38_fu_4712_p1 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln169_56_fu_5219_p2 = ((trunc_ln167_41_reg_6260 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln169_60_fu_5389_p2 = ((trunc_ln167_44_reg_6266 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln169_63_fu_5077_p2 = ((grp_fu_926_p4 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln169_6_fu_1723_p2 = ((trunc_ln167_9_reg_5733 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln169_8_fu_1821_p2 = ((trunc_ln167_6_fu_1817_p1 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln169_fu_1363_p2 = ((trunc_ln167_fu_1359_p1 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln170_12_fu_2003_p2 = ((trunc_ln167_7_fu_1993_p1 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln170_16_fu_2375_p2 = ((trunc_ln167_11_fu_2365_p1 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln170_20_fu_2551_p2 = ((trunc_ln167_14_fu_2541_p1 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln170_24_fu_2910_p2 = ((trunc_ln167_17_fu_2900_p1 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln170_28_fu_3086_p2 = ((trunc_ln167_20_fu_3076_p1 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln170_32_fu_3470_p2 = ((trunc_ln167_23_fu_3460_p1 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln170_36_fu_3646_p2 = ((trunc_ln167_26_fu_3636_p1 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln170_40_fu_4003_p2 = ((trunc_ln167_29_fu_3993_p1 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln170_44_fu_4179_p2 = ((trunc_ln167_32_fu_4169_p1 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln170_48_fu_4546_p2 = ((trunc_ln167_35_fu_4536_p1 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln170_4_fu_1638_p2 = ((trunc_ln167_2_reg_5727 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln170_52_fu_4722_p2 = ((trunc_ln167_38_fu_4712_p1 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln170_56_fu_5224_p2 = ((trunc_ln167_41_reg_6260 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln170_60_fu_5394_p2 = ((trunc_ln167_44_reg_6266 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln170_63_fu_5083_p2 = ((grp_fu_926_p4 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln170_6_fu_1728_p2 = ((trunc_ln167_9_reg_5733 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln170_8_fu_1827_p2 = ((trunc_ln167_6_fu_1817_p1 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln170_fu_1369_p2 = ((trunc_ln167_fu_1359_p1 == 2'd2) ? 1'b1 : 1'b0);

assign mul_ln1148_fu_1183_p0 = mul_ln1148_fu_1183_p00;

assign mul_ln1148_fu_1183_p00 = w_scale_V;

assign mul_ln1148_fu_1183_p1 = scales_0_V_read;

assign mul_ln1148_fu_1183_p2 = ($signed({{1'b0}, {mul_ln1148_fu_1183_p0}}) * $signed(mul_ln1148_fu_1183_p1));

assign or_ln164_10_fu_3825_p2 = (shl_ln2_reg_5654 | 7'd11);

assign or_ln164_11_fu_4305_p2 = (shl_ln2_reg_5654 | 7'd12);

assign or_ln164_12_fu_4381_p2 = (shl_ln2_reg_5654 | 7'd13);

assign or_ln164_13_fu_4848_p2 = (shl_ln2_reg_5654 | 7'd14);

assign or_ln164_14_fu_4901_p2 = (shl_ln2_reg_5654 | 7'd15);

assign or_ln164_1_fu_1407_p2 = (shl_ln2_reg_5654 | 7'd2);

assign or_ln164_2_fu_1460_p2 = (shl_ln2_reg_5654 | 7'd3);

assign or_ln164_3_fu_2129_p2 = (shl_ln2_reg_5654 | 7'd4);

assign or_ln164_4_fu_2205_p2 = (shl_ln2_reg_5654 | 7'd5);

assign or_ln164_5_fu_2677_p2 = (shl_ln2_reg_5654 | 7'd6);

assign or_ln164_6_fu_2730_p2 = (shl_ln2_reg_5654 | 7'd7);

assign or_ln164_7_fu_3212_p2 = (shl_ln2_reg_5654 | 7'd8);

assign or_ln164_8_fu_3288_p2 = (shl_ln2_reg_5654 | 7'd9);

assign or_ln164_9_fu_3772_p2 = (shl_ln2_reg_5654 | 7'd10);

assign or_ln164_fu_1305_p2 = (shl_ln2_fu_1226_p3 | 7'd1);

assign or_ln165_1_fu_2176_p2 = (trunc_ln165_1_fu_2172_p1 | j_0_0_reg_847);

assign or_ln165_2_fu_3259_p2 = (trunc_ln165_2_fu_3255_p1 | j_0_0_reg_847);

assign or_ln165_3_fu_4352_p2 = (trunc_ln165_3_fu_4348_p1 | j_0_0_reg_847);

assign or_ln165_fu_1276_p2 = (trunc_ln165_fu_1272_p1 | j_0_0_reg_847);

assign output_0_V_address0 = output_0_V_addr_reg_5641;

assign select_ln169_10_fu_1925_p3 = ((grp_fu_954_p2[0:0] === 1'b1) ? input_2_0_V_q0 : 8'd0);

assign select_ln169_11_fu_1965_p3 = ((grp_fu_972_p2[0:0] === 1'b1) ? input_3_0_V_q0 : 8'd0);

assign select_ln169_12_fu_2021_p3 = ((icmp_ln169_12_fu_1997_p2[0:0] === 1'b1) ? input_0_0_V_q1 : 8'd0);

assign select_ln169_13_fu_2061_p3 = ((grp_fu_996_p2[0:0] === 1'b1) ? input_1_0_V_q1 : 8'd0);

assign select_ln169_14_fu_2101_p3 = ((grp_fu_1014_p2[0:0] === 1'b1) ? input_2_0_V_q1 : 8'd0);

assign select_ln169_15_fu_2337_p3 = ((grp_fu_1157_p2[0:0] === 1'b1) ? reg_1052 : 8'd0);

assign select_ln169_16_fu_2393_p3 = ((icmp_ln169_16_fu_2369_p2[0:0] === 1'b1) ? input_0_0_V_q0 : 8'd0);

assign select_ln169_17_fu_2433_p3 = ((grp_fu_936_p2[0:0] === 1'b1) ? input_1_0_V_q0 : 8'd0);

assign select_ln169_18_fu_2473_p3 = ((grp_fu_954_p2[0:0] === 1'b1) ? input_2_0_V_q0 : 8'd0);

assign select_ln169_19_fu_2513_p3 = ((grp_fu_972_p2[0:0] === 1'b1) ? input_3_0_V_q0 : 8'd0);

assign select_ln169_1_fu_1525_p3 = ((grp_fu_1079_p2[0:0] === 1'b1) ? reg_1036 : 8'd0);

assign select_ln169_20_fu_2569_p3 = ((icmp_ln169_20_fu_2545_p2[0:0] === 1'b1) ? input_0_0_V_q1 : 8'd0);

assign select_ln169_21_fu_2609_p3 = ((grp_fu_996_p2[0:0] === 1'b1) ? input_1_0_V_q1 : 8'd0);

assign select_ln169_22_fu_2649_p3 = ((grp_fu_1014_p2[0:0] === 1'b1) ? input_2_0_V_q1 : 8'd0);

assign select_ln169_23_fu_2872_p3 = ((grp_fu_1157_p2[0:0] === 1'b1) ? reg_1052 : 8'd0);

assign select_ln169_24_fu_2928_p3 = ((icmp_ln169_24_fu_2904_p2[0:0] === 1'b1) ? input_0_0_V_q0 : 8'd0);

assign select_ln169_25_fu_2968_p3 = ((grp_fu_936_p2[0:0] === 1'b1) ? input_1_0_V_q0 : 8'd0);

assign select_ln169_26_fu_3008_p3 = ((grp_fu_954_p2[0:0] === 1'b1) ? input_2_0_V_q0 : 8'd0);

assign select_ln169_27_fu_3048_p3 = ((grp_fu_972_p2[0:0] === 1'b1) ? input_3_0_V_q0 : 8'd0);

assign select_ln169_28_fu_3104_p3 = ((icmp_ln169_28_fu_3080_p2[0:0] === 1'b1) ? input_0_0_V_q1 : 8'd0);

assign select_ln169_29_fu_3144_p3 = ((grp_fu_996_p2[0:0] === 1'b1) ? input_1_0_V_q1 : 8'd0);

assign select_ln169_2_fu_1565_p3 = ((grp_fu_1097_p2[0:0] === 1'b1) ? reg_1044 : 8'd0);

assign select_ln169_30_fu_3184_p3 = ((grp_fu_1014_p2[0:0] === 1'b1) ? input_2_0_V_q1 : 8'd0);

assign select_ln169_31_fu_3432_p3 = ((grp_fu_1157_p2[0:0] === 1'b1) ? reg_1052 : 8'd0);

assign select_ln169_32_fu_3488_p3 = ((icmp_ln169_32_fu_3464_p2[0:0] === 1'b1) ? input_0_0_V_q0 : 8'd0);

assign select_ln169_33_fu_3528_p3 = ((grp_fu_936_p2[0:0] === 1'b1) ? input_1_0_V_q0 : 8'd0);

assign select_ln169_34_fu_3568_p3 = ((grp_fu_954_p2[0:0] === 1'b1) ? input_2_0_V_q0 : 8'd0);

assign select_ln169_35_fu_3608_p3 = ((grp_fu_972_p2[0:0] === 1'b1) ? input_3_0_V_q0 : 8'd0);

assign select_ln169_36_fu_3664_p3 = ((icmp_ln169_36_fu_3640_p2[0:0] === 1'b1) ? input_0_0_V_q1 : 8'd0);

assign select_ln169_37_fu_3704_p3 = ((grp_fu_996_p2[0:0] === 1'b1) ? input_1_0_V_q1 : 8'd0);

assign select_ln169_38_fu_3744_p3 = ((grp_fu_1014_p2[0:0] === 1'b1) ? input_2_0_V_q1 : 8'd0);

assign select_ln169_39_fu_3965_p3 = ((grp_fu_1157_p2[0:0] === 1'b1) ? reg_1052 : 8'd0);

assign select_ln169_3_fu_1605_p3 = ((grp_fu_1115_p2[0:0] === 1'b1) ? reg_1052 : 8'd0);

assign select_ln169_40_fu_4021_p3 = ((icmp_ln169_40_fu_3997_p2[0:0] === 1'b1) ? input_0_0_V_q0 : 8'd0);

assign select_ln169_41_fu_4061_p3 = ((grp_fu_936_p2[0:0] === 1'b1) ? input_1_0_V_q0 : 8'd0);

assign select_ln169_42_fu_4101_p3 = ((grp_fu_954_p2[0:0] === 1'b1) ? input_2_0_V_q0 : 8'd0);

assign select_ln169_43_fu_4141_p3 = ((grp_fu_972_p2[0:0] === 1'b1) ? input_3_0_V_q0 : 8'd0);

assign select_ln169_44_fu_4197_p3 = ((icmp_ln169_44_fu_4173_p2[0:0] === 1'b1) ? input_0_0_V_q1 : 8'd0);

assign select_ln169_45_fu_4237_p3 = ((grp_fu_996_p2[0:0] === 1'b1) ? input_1_0_V_q1 : 8'd0);

assign select_ln169_46_fu_4277_p3 = ((grp_fu_1014_p2[0:0] === 1'b1) ? input_2_0_V_q1 : 8'd0);

assign select_ln169_47_fu_4508_p3 = ((grp_fu_1157_p2[0:0] === 1'b1) ? reg_1052 : 8'd0);

assign select_ln169_48_fu_4564_p3 = ((icmp_ln169_48_fu_4540_p2[0:0] === 1'b1) ? input_0_0_V_q0 : 8'd0);

assign select_ln169_49_fu_4604_p3 = ((grp_fu_936_p2[0:0] === 1'b1) ? input_1_0_V_q0 : 8'd0);

assign select_ln169_4_fu_1655_p3 = ((icmp_ln169_4_fu_1633_p2[0:0] === 1'b1) ? reg_1057 : 8'd0);

assign select_ln169_50_fu_4644_p3 = ((grp_fu_954_p2[0:0] === 1'b1) ? input_2_0_V_q0 : 8'd0);

assign select_ln169_51_fu_4684_p3 = ((grp_fu_972_p2[0:0] === 1'b1) ? input_3_0_V_q0 : 8'd0);

assign select_ln169_52_fu_4740_p3 = ((icmp_ln169_52_fu_4716_p2[0:0] === 1'b1) ? input_0_0_V_q1 : 8'd0);

assign select_ln169_53_fu_4780_p3 = ((grp_fu_996_p2[0:0] === 1'b1) ? input_1_0_V_q1 : 8'd0);

assign select_ln169_54_fu_4820_p3 = ((grp_fu_1014_p2[0:0] === 1'b1) ? input_2_0_V_q1 : 8'd0);

assign select_ln169_55_fu_5191_p3 = ((grp_fu_1157_p2[0:0] === 1'b1) ? reg_1052 : 8'd0);

assign select_ln169_56_fu_5241_p3 = ((icmp_ln169_56_fu_5219_p2[0:0] === 1'b1) ? reg_1057 : 8'd0);

assign select_ln169_57_fu_5281_p3 = ((grp_fu_1079_p2[0:0] === 1'b1) ? reg_1036 : 8'd0);

assign select_ln169_58_fu_5321_p3 = ((grp_fu_1097_p2[0:0] === 1'b1) ? reg_1044 : 8'd0);

assign select_ln169_59_fu_5361_p3 = ((grp_fu_1115_p2[0:0] === 1'b1) ? reg_1074 : 8'd0);

assign select_ln169_5_fu_1695_p3 = ((grp_fu_1139_p2[0:0] === 1'b1) ? reg_1066 : 8'd0);

assign select_ln169_60_fu_5416_p3 = ((icmp_ln169_60_fu_5389_p2[0:0] === 1'b1) ? input_0_0_V_load_15_reg_6272 : 8'd0);

assign select_ln169_61_fu_5455_p3 = ((grp_fu_1139_p2[0:0] === 1'b1) ? reg_1066 : 8'd0);

assign select_ln169_62_fu_5049_p3 = ((grp_fu_1014_p2[0:0] === 1'b1) ? input_2_0_V_q1 : 8'd0);

assign select_ln169_63_fu_5107_p3 = ((icmp_ln169_63_fu_5077_p2[0:0] === 1'b1) ? input_3_0_V_q1 : 8'd0);

assign select_ln169_6_fu_1750_p3 = ((icmp_ln169_6_fu_1723_p2[0:0] === 1'b1) ? input_2_0_V_load_1_reg_5739 : 8'd0);

assign select_ln169_7_fu_1789_p3 = ((grp_fu_1157_p2[0:0] === 1'b1) ? reg_1074 : 8'd0);

assign select_ln169_8_fu_1845_p3 = ((icmp_ln169_8_fu_1821_p2[0:0] === 1'b1) ? input_0_0_V_q0 : 8'd0);

assign select_ln169_9_fu_1885_p3 = ((grp_fu_936_p2[0:0] === 1'b1) ? input_1_0_V_q0 : 8'd0);

assign select_ln169_fu_1387_p3 = ((icmp_ln169_fu_1363_p2[0:0] === 1'b1) ? input_0_0_V_q0 : 8'd0);

assign select_ln170_10_fu_1933_p3 = ((and_ln170_10_fu_1919_p2[0:0] === 1'b1) ? grp_fu_966_p2 : select_ln169_10_fu_1925_p3);

assign select_ln170_11_fu_1973_p3 = ((and_ln170_11_fu_1959_p2[0:0] === 1'b1) ? grp_fu_984_p2 : select_ln169_11_fu_1965_p3);

assign select_ln170_12_fu_2029_p3 = ((and_ln170_12_fu_2015_p2[0:0] === 1'b1) ? grp_fu_990_p2 : select_ln169_12_fu_2021_p3);

assign select_ln170_13_fu_2069_p3 = ((and_ln170_13_fu_2055_p2[0:0] === 1'b1) ? grp_fu_1008_p2 : select_ln169_13_fu_2061_p3);

assign select_ln170_14_fu_2109_p3 = ((and_ln170_14_fu_2095_p2[0:0] === 1'b1) ? grp_fu_1026_p2 : select_ln169_14_fu_2101_p3);

assign select_ln170_15_fu_2345_p3 = ((and_ln170_15_fu_2331_p2[0:0] === 1'b1) ? grp_fu_1127_p2 : select_ln169_15_fu_2337_p3);

assign select_ln170_16_fu_2401_p3 = ((and_ln170_16_fu_2387_p2[0:0] === 1'b1) ? grp_fu_870_p2 : select_ln169_16_fu_2393_p3);

assign select_ln170_17_fu_2441_p3 = ((and_ln170_17_fu_2427_p2[0:0] === 1'b1) ? grp_fu_948_p2 : select_ln169_17_fu_2433_p3);

assign select_ln170_18_fu_2481_p3 = ((and_ln170_18_fu_2467_p2[0:0] === 1'b1) ? grp_fu_966_p2 : select_ln169_18_fu_2473_p3);

assign select_ln170_19_fu_2521_p3 = ((and_ln170_19_fu_2507_p2[0:0] === 1'b1) ? grp_fu_984_p2 : select_ln169_19_fu_2513_p3);

assign select_ln170_1_fu_1533_p3 = ((and_ln170_1_fu_1519_p2[0:0] === 1'b1) ? grp_fu_1091_p2 : select_ln169_1_fu_1525_p3);

assign select_ln170_20_fu_2577_p3 = ((and_ln170_20_fu_2563_p2[0:0] === 1'b1) ? grp_fu_990_p2 : select_ln169_20_fu_2569_p3);

assign select_ln170_21_fu_2617_p3 = ((and_ln170_21_fu_2603_p2[0:0] === 1'b1) ? grp_fu_1008_p2 : select_ln169_21_fu_2609_p3);

assign select_ln170_22_fu_2657_p3 = ((and_ln170_22_fu_2643_p2[0:0] === 1'b1) ? grp_fu_1026_p2 : select_ln169_22_fu_2649_p3);

assign select_ln170_23_fu_2880_p3 = ((and_ln170_23_fu_2866_p2[0:0] === 1'b1) ? grp_fu_1127_p2 : select_ln169_23_fu_2872_p3);

assign select_ln170_24_fu_2936_p3 = ((and_ln170_24_fu_2922_p2[0:0] === 1'b1) ? grp_fu_870_p2 : select_ln169_24_fu_2928_p3);

assign select_ln170_25_fu_2976_p3 = ((and_ln170_25_fu_2962_p2[0:0] === 1'b1) ? grp_fu_948_p2 : select_ln169_25_fu_2968_p3);

assign select_ln170_26_fu_3016_p3 = ((and_ln170_26_fu_3002_p2[0:0] === 1'b1) ? grp_fu_966_p2 : select_ln169_26_fu_3008_p3);

assign select_ln170_27_fu_3056_p3 = ((and_ln170_27_fu_3042_p2[0:0] === 1'b1) ? grp_fu_984_p2 : select_ln169_27_fu_3048_p3);

assign select_ln170_28_fu_3112_p3 = ((and_ln170_28_fu_3098_p2[0:0] === 1'b1) ? grp_fu_990_p2 : select_ln169_28_fu_3104_p3);

assign select_ln170_29_fu_3152_p3 = ((and_ln170_29_fu_3138_p2[0:0] === 1'b1) ? grp_fu_1008_p2 : select_ln169_29_fu_3144_p3);

assign select_ln170_2_fu_1573_p3 = ((and_ln170_2_fu_1559_p2[0:0] === 1'b1) ? grp_fu_1109_p2 : select_ln169_2_fu_1565_p3);

assign select_ln170_30_fu_3192_p3 = ((and_ln170_30_fu_3178_p2[0:0] === 1'b1) ? grp_fu_1026_p2 : select_ln169_30_fu_3184_p3);

assign select_ln170_31_fu_3440_p3 = ((and_ln170_31_fu_3426_p2[0:0] === 1'b1) ? grp_fu_1127_p2 : select_ln169_31_fu_3432_p3);

assign select_ln170_32_fu_3496_p3 = ((and_ln170_32_fu_3482_p2[0:0] === 1'b1) ? grp_fu_870_p2 : select_ln169_32_fu_3488_p3);

assign select_ln170_33_fu_3536_p3 = ((and_ln170_33_fu_3522_p2[0:0] === 1'b1) ? grp_fu_948_p2 : select_ln169_33_fu_3528_p3);

assign select_ln170_34_fu_3576_p3 = ((and_ln170_34_fu_3562_p2[0:0] === 1'b1) ? grp_fu_966_p2 : select_ln169_34_fu_3568_p3);

assign select_ln170_35_fu_3616_p3 = ((and_ln170_35_fu_3602_p2[0:0] === 1'b1) ? grp_fu_984_p2 : select_ln169_35_fu_3608_p3);

assign select_ln170_36_fu_3672_p3 = ((and_ln170_36_fu_3658_p2[0:0] === 1'b1) ? grp_fu_990_p2 : select_ln169_36_fu_3664_p3);

assign select_ln170_37_fu_3712_p3 = ((and_ln170_37_fu_3698_p2[0:0] === 1'b1) ? grp_fu_1008_p2 : select_ln169_37_fu_3704_p3);

assign select_ln170_38_fu_3752_p3 = ((and_ln170_38_fu_3738_p2[0:0] === 1'b1) ? grp_fu_1026_p2 : select_ln169_38_fu_3744_p3);

assign select_ln170_39_fu_3973_p3 = ((and_ln170_39_fu_3959_p2[0:0] === 1'b1) ? grp_fu_1127_p2 : select_ln169_39_fu_3965_p3);

assign select_ln170_3_fu_1613_p3 = ((and_ln170_3_fu_1599_p2[0:0] === 1'b1) ? grp_fu_1127_p2 : select_ln169_3_fu_1605_p3);

assign select_ln170_40_fu_4029_p3 = ((and_ln170_40_fu_4015_p2[0:0] === 1'b1) ? grp_fu_870_p2 : select_ln169_40_fu_4021_p3);

assign select_ln170_41_fu_4069_p3 = ((and_ln170_41_fu_4055_p2[0:0] === 1'b1) ? grp_fu_948_p2 : select_ln169_41_fu_4061_p3);

assign select_ln170_42_fu_4109_p3 = ((and_ln170_42_fu_4095_p2[0:0] === 1'b1) ? grp_fu_966_p2 : select_ln169_42_fu_4101_p3);

assign select_ln170_43_fu_4149_p3 = ((and_ln170_43_fu_4135_p2[0:0] === 1'b1) ? grp_fu_984_p2 : select_ln169_43_fu_4141_p3);

assign select_ln170_44_fu_4205_p3 = ((and_ln170_44_fu_4191_p2[0:0] === 1'b1) ? grp_fu_990_p2 : select_ln169_44_fu_4197_p3);

assign select_ln170_45_fu_4245_p3 = ((and_ln170_45_fu_4231_p2[0:0] === 1'b1) ? grp_fu_1008_p2 : select_ln169_45_fu_4237_p3);

assign select_ln170_46_fu_4285_p3 = ((and_ln170_46_fu_4271_p2[0:0] === 1'b1) ? grp_fu_1026_p2 : select_ln169_46_fu_4277_p3);

assign select_ln170_47_fu_4516_p3 = ((and_ln170_47_fu_4502_p2[0:0] === 1'b1) ? grp_fu_1127_p2 : select_ln169_47_fu_4508_p3);

assign select_ln170_48_fu_4572_p3 = ((and_ln170_48_fu_4558_p2[0:0] === 1'b1) ? grp_fu_870_p2 : select_ln169_48_fu_4564_p3);

assign select_ln170_49_fu_4612_p3 = ((and_ln170_49_fu_4598_p2[0:0] === 1'b1) ? grp_fu_948_p2 : select_ln169_49_fu_4604_p3);

assign select_ln170_4_fu_1663_p3 = ((and_ln170_4_fu_1649_p2[0:0] === 1'b1) ? grp_fu_1133_p2 : select_ln169_4_fu_1655_p3);

assign select_ln170_50_fu_4652_p3 = ((and_ln170_50_fu_4638_p2[0:0] === 1'b1) ? grp_fu_966_p2 : select_ln169_50_fu_4644_p3);

assign select_ln170_51_fu_4692_p3 = ((and_ln170_51_fu_4678_p2[0:0] === 1'b1) ? grp_fu_984_p2 : select_ln169_51_fu_4684_p3);

assign select_ln170_52_fu_4748_p3 = ((and_ln170_52_fu_4734_p2[0:0] === 1'b1) ? grp_fu_990_p2 : select_ln169_52_fu_4740_p3);

assign select_ln170_53_fu_4788_p3 = ((and_ln170_53_fu_4774_p2[0:0] === 1'b1) ? grp_fu_1008_p2 : select_ln169_53_fu_4780_p3);

assign select_ln170_54_fu_4828_p3 = ((and_ln170_54_fu_4814_p2[0:0] === 1'b1) ? grp_fu_1026_p2 : select_ln169_54_fu_4820_p3);

assign select_ln170_55_fu_5199_p3 = ((and_ln170_55_fu_5185_p2[0:0] === 1'b1) ? grp_fu_1127_p2 : select_ln169_55_fu_5191_p3);

assign select_ln170_56_fu_5249_p3 = ((and_ln170_56_fu_5235_p2[0:0] === 1'b1) ? grp_fu_1133_p2 : select_ln169_56_fu_5241_p3);

assign select_ln170_57_fu_5289_p3 = ((and_ln170_57_fu_5275_p2[0:0] === 1'b1) ? grp_fu_1091_p2 : select_ln169_57_fu_5281_p3);

assign select_ln170_58_fu_5329_p3 = ((and_ln170_58_fu_5315_p2[0:0] === 1'b1) ? grp_fu_1109_p2 : select_ln169_58_fu_5321_p3);

assign select_ln170_59_fu_5369_p3 = ((and_ln170_59_fu_5355_p2[0:0] === 1'b1) ? grp_fu_1169_p2 : select_ln169_59_fu_5361_p3);

assign select_ln170_5_fu_1703_p3 = ((and_ln170_5_fu_1689_p2[0:0] === 1'b1) ? grp_fu_1151_p2 : select_ln169_5_fu_1695_p3);

assign select_ln170_60_fu_5423_p3 = ((and_ln170_60_fu_5410_p2[0:0] === 1'b1) ? sub_ln701_60_fu_5399_p2 : select_ln169_60_fu_5416_p3);

assign select_ln170_61_fu_5463_p3 = ((and_ln170_61_fu_5449_p2[0:0] === 1'b1) ? grp_fu_1151_p2 : select_ln169_61_fu_5455_p3);

assign select_ln170_62_fu_5057_p3 = ((and_ln170_62_fu_5043_p2[0:0] === 1'b1) ? grp_fu_1026_p2 : select_ln169_62_fu_5049_p3);

assign select_ln170_63_fu_5115_p3 = ((and_ln170_63_fu_5101_p2[0:0] === 1'b1) ? sub_ln701_63_fu_5089_p2 : select_ln169_63_fu_5107_p3);

assign select_ln170_6_fu_1757_p3 = ((and_ln170_6_fu_1744_p2[0:0] === 1'b1) ? sub_ln701_6_fu_1733_p2 : select_ln169_6_fu_1750_p3);

assign select_ln170_7_fu_1797_p3 = ((and_ln170_7_fu_1783_p2[0:0] === 1'b1) ? grp_fu_1169_p2 : select_ln169_7_fu_1789_p3);

assign select_ln170_8_fu_1853_p3 = ((and_ln170_8_fu_1839_p2[0:0] === 1'b1) ? grp_fu_870_p2 : select_ln169_8_fu_1845_p3);

assign select_ln170_9_fu_1893_p3 = ((and_ln170_9_fu_1879_p2[0:0] === 1'b1) ? grp_fu_948_p2 : select_ln169_9_fu_1885_p3);

assign select_ln170_fu_1395_p3 = ((and_ln170_fu_1381_p2[0:0] === 1'b1) ? grp_fu_870_p2 : select_ln169_fu_1387_p3);

assign sext_ln161_fu_1189_p1 = $signed(mul_ln1148_fu_1183_p2);

assign sext_ln165_10_fu_3820_p1 = $signed(add_ln165_7_fu_3815_p2);

assign sext_ln165_11_fu_3873_p1 = $signed(add_ln165_8_fu_3868_p2);

assign sext_ln165_12_fu_4376_p1 = $signed(tmp_109_fu_4368_p3);

assign sext_ln165_13_fu_4429_p1 = $signed(add_ln165_9_fu_4424_p2);

assign sext_ln165_14_fu_4896_p1 = $signed(add_ln165_10_fu_4891_p2);

assign sext_ln165_15_fu_4949_p1 = $signed(add_ln165_11_fu_4944_p2);

assign sext_ln165_1_fu_1354_p1 = $signed(add_ln165_fu_1349_p2);

assign sext_ln165_2_fu_1455_p1 = $signed(add_ln165_1_fu_1450_p2);

assign sext_ln165_3_fu_1508_p1 = $signed(add_ln165_2_fu_1503_p2);

assign sext_ln165_4_fu_2200_p1 = $signed(tmp_98_fu_2192_p3);

assign sext_ln165_5_fu_2253_p1 = $signed(add_ln165_3_fu_2248_p2);

assign sext_ln165_6_fu_2725_p1 = $signed(add_ln165_4_fu_2720_p2);

assign sext_ln165_7_fu_2778_p1 = $signed(add_ln165_5_fu_2773_p2);

assign sext_ln165_8_fu_3283_p1 = $signed(tmp_107_fu_3275_p3);

assign sext_ln165_9_fu_3336_p1 = $signed(add_ln165_6_fu_3331_p2);

assign sext_ln165_fu_1300_p1 = $signed(tmp_87_fu_1292_p3);

assign sext_ln703_100_fu_4973_p1 = $signed(add_ln703_67_reg_6175);

assign sext_ln703_101_fu_4976_p1 = $signed(add_ln703_68_reg_6180);

assign sext_ln703_102_fu_4985_p1 = $signed(add_ln703_69_fu_4979_p2);

assign sext_ln703_103_fu_4995_p1 = $signed(add_ln703_70_fu_4989_p2);

assign sext_ln703_104_fu_5538_p1 = $signed(add_ln703_71_reg_6235);

assign sext_ln703_105_fu_5135_p1 = $signed(add_ln703_72_reg_6240);

assign sext_ln703_106_fu_5138_p1 = $signed(add_ln703_73_reg_6245);

assign sext_ln703_107_fu_5147_p1 = $signed(add_ln703_74_fu_5141_p2);

assign sext_ln703_108_fu_5151_p1 = $signed(add_ln703_75_reg_6250);

assign sext_ln703_109_fu_5154_p1 = $signed(add_ln703_76_reg_6255);

assign sext_ln703_10_fu_1949_p1 = $signed(shl_ln703_s_fu_1941_p3);

assign sext_ln703_110_fu_5163_p1 = $signed(add_ln703_77_fu_5157_p2);

assign sext_ln703_111_fu_5541_p1 = $signed(add_ln703_78_reg_6278);

assign sext_ln703_112_fu_5489_p1 = $signed(add_ln703_79_fu_5483_p2);

assign sext_ln703_113_fu_5499_p1 = $signed(add_ln703_80_fu_5493_p2);

assign sext_ln703_114_fu_5544_p1 = $signed(add_ln703_81_reg_6288);

assign sext_ln703_115_fu_5515_p1 = $signed(add_ln703_82_fu_5509_p2);

assign sext_ln703_116_fu_5519_p1 = $signed(add_ln703_83_reg_6283);

assign sext_ln703_117_fu_5528_p1 = $signed(add_ln703_84_fu_5522_p2);

assign sext_ln703_118_fu_5547_p1 = $signed(add_ln703_85_reg_6293);

assign sext_ln703_119_fu_5556_p1 = $signed(add_ln703_86_fu_5550_p2);

assign sext_ln703_11_fu_1989_p1 = $signed(shl_ln703_10_fu_1981_p3);

assign sext_ln703_120_fu_5566_p1 = $signed(add_ln703_87_fu_5560_p2);

assign sext_ln703_121_fu_5584_p1 = $signed(add_ln703_88_reg_6298);

assign sext_ln703_12_fu_2045_p1 = $signed(shl_ln703_11_fu_2037_p3);

assign sext_ln703_13_fu_2085_p1 = $signed(shl_ln703_12_fu_2077_p3);

assign sext_ln703_14_fu_2125_p1 = $signed(shl_ln703_13_fu_2117_p3);

assign sext_ln703_15_fu_2361_p1 = $signed(shl_ln703_14_fu_2353_p3);

assign sext_ln703_16_fu_2417_p1 = $signed(shl_ln703_15_fu_2409_p3);

assign sext_ln703_17_fu_2457_p1 = $signed(shl_ln703_16_fu_2449_p3);

assign sext_ln703_18_fu_2497_p1 = $signed(shl_ln703_17_fu_2489_p3);

assign sext_ln703_19_fu_2537_p1 = $signed(shl_ln703_18_fu_2529_p3);

assign sext_ln703_1_fu_1549_p1 = $signed(shl_ln703_1_fu_1541_p3);

assign sext_ln703_20_fu_2593_p1 = $signed(shl_ln703_19_fu_2585_p3);

assign sext_ln703_21_fu_2633_p1 = $signed(shl_ln703_20_fu_2625_p3);

assign sext_ln703_22_fu_2673_p1 = $signed(shl_ln703_21_fu_2665_p3);

assign sext_ln703_23_fu_2896_p1 = $signed(shl_ln703_22_fu_2888_p3);

assign sext_ln703_24_fu_2952_p1 = $signed(shl_ln703_23_fu_2944_p3);

assign sext_ln703_25_fu_2992_p1 = $signed(shl_ln703_24_fu_2984_p3);

assign sext_ln703_26_fu_3032_p1 = $signed(shl_ln703_25_fu_3024_p3);

assign sext_ln703_27_fu_3072_p1 = $signed(shl_ln703_26_fu_3064_p3);

assign sext_ln703_28_fu_3128_p1 = $signed(shl_ln703_27_fu_3120_p3);

assign sext_ln703_29_fu_3168_p1 = $signed(shl_ln703_28_fu_3160_p3);

assign sext_ln703_2_fu_1589_p1 = $signed(shl_ln703_2_fu_1581_p3);

assign sext_ln703_30_fu_3208_p1 = $signed(shl_ln703_29_fu_3200_p3);

assign sext_ln703_31_fu_3456_p1 = $signed(shl_ln703_30_fu_3448_p3);

assign sext_ln703_32_fu_3512_p1 = $signed(shl_ln703_31_fu_3504_p3);

assign sext_ln703_33_fu_3552_p1 = $signed(shl_ln703_32_fu_3544_p3);

assign sext_ln703_34_fu_3592_p1 = $signed(shl_ln703_33_fu_3584_p3);

assign sext_ln703_35_fu_3632_p1 = $signed(shl_ln703_34_fu_3624_p3);

assign sext_ln703_36_fu_3688_p1 = $signed(shl_ln703_35_fu_3680_p3);

assign sext_ln703_37_fu_3728_p1 = $signed(shl_ln703_36_fu_3720_p3);

assign sext_ln703_38_fu_3768_p1 = $signed(shl_ln703_37_fu_3760_p3);

assign sext_ln703_39_fu_3989_p1 = $signed(shl_ln703_38_fu_3981_p3);

assign sext_ln703_3_fu_1629_p1 = $signed(shl_ln703_3_fu_1621_p3);

assign sext_ln703_40_fu_4045_p1 = $signed(shl_ln703_39_fu_4037_p3);

assign sext_ln703_41_fu_4085_p1 = $signed(shl_ln703_40_fu_4077_p3);

assign sext_ln703_42_fu_4125_p1 = $signed(shl_ln703_41_fu_4117_p3);

assign sext_ln703_43_fu_4165_p1 = $signed(shl_ln703_42_fu_4157_p3);

assign sext_ln703_44_fu_4221_p1 = $signed(shl_ln703_43_fu_4213_p3);

assign sext_ln703_45_fu_4261_p1 = $signed(shl_ln703_44_fu_4253_p3);

assign sext_ln703_46_fu_4301_p1 = $signed(shl_ln703_45_fu_4293_p3);

assign sext_ln703_47_fu_4532_p1 = $signed(shl_ln703_46_fu_4524_p3);

assign sext_ln703_48_fu_4588_p1 = $signed(shl_ln703_47_fu_4580_p3);

assign sext_ln703_49_fu_4628_p1 = $signed(shl_ln703_48_fu_4620_p3);

assign sext_ln703_4_fu_1679_p1 = $signed(shl_ln703_4_fu_1671_p3);

assign sext_ln703_50_fu_4668_p1 = $signed(shl_ln703_49_fu_4660_p3);

assign sext_ln703_51_fu_4708_p1 = $signed(shl_ln703_50_fu_4700_p3);

assign sext_ln703_52_fu_4764_p1 = $signed(shl_ln703_51_fu_4756_p3);

assign sext_ln703_53_fu_4804_p1 = $signed(shl_ln703_52_fu_4796_p3);

assign sext_ln703_54_fu_4844_p1 = $signed(shl_ln703_53_fu_4836_p3);

assign sext_ln703_55_fu_5215_p1 = $signed(shl_ln703_54_fu_5207_p3);

assign sext_ln703_56_fu_5265_p1 = $signed(shl_ln703_55_fu_5257_p3);

assign sext_ln703_57_fu_5305_p1 = $signed(shl_ln703_56_fu_5297_p3);

assign sext_ln703_58_fu_5345_p1 = $signed(shl_ln703_57_fu_5337_p3);

assign sext_ln703_59_fu_5385_p1 = $signed(shl_ln703_58_fu_5377_p3);

assign sext_ln703_5_fu_1719_p1 = $signed(shl_ln703_5_fu_1711_p3);

assign sext_ln703_60_fu_5439_p1 = $signed(shl_ln703_59_fu_5431_p3);

assign sext_ln703_61_fu_5479_p1 = $signed(shl_ln703_60_fu_5471_p3);

assign sext_ln703_62_fu_5073_p1 = $signed(shl_ln703_61_fu_5065_p3);

assign sext_ln703_63_fu_5131_p1 = $signed(shl_ln703_62_fu_5123_p3);

assign sext_ln703_64_fu_2789_p1 = $signed(add_ln703_27_reg_5845);

assign sext_ln703_65_fu_2270_p1 = $signed(add_ln703_29_fu_2264_p2);

assign sext_ln703_66_fu_2280_p1 = $signed(add_ln703_30_fu_2274_p2);

assign sext_ln703_67_fu_3341_p1 = $signed(add_ln703_31_reg_5850);

assign sext_ln703_68_fu_2798_p1 = $signed(add_ln703_33_reg_5855);

assign sext_ln703_69_fu_2801_p1 = $signed(add_ln703_34_reg_5860);

assign sext_ln703_6_fu_1773_p1 = $signed(shl_ln703_6_fu_1765_p3);

assign sext_ln703_70_fu_2810_p1 = $signed(add_ln703_35_fu_2804_p2);

assign sext_ln703_71_fu_2814_p1 = $signed(add_ln703_36_reg_5865);

assign sext_ln703_72_fu_2817_p1 = $signed(add_ln703_37_reg_5870);

assign sext_ln703_73_fu_2826_p1 = $signed(add_ln703_38_fu_2820_p2);

assign sext_ln703_74_fu_3349_p1 = $signed(add_ln703_39_reg_5930);

assign sext_ln703_75_fu_3358_p1 = $signed(add_ln703_41_reg_5935);

assign sext_ln703_76_fu_3361_p1 = $signed(add_ln703_42_reg_5940);

assign sext_ln703_77_fu_3370_p1 = $signed(add_ln703_43_fu_3364_p2);

assign sext_ln703_78_fu_3374_p1 = $signed(add_ln703_44_reg_5945);

assign sext_ln703_79_fu_3377_p1 = $signed(add_ln703_45_reg_5950);

assign sext_ln703_7_fu_1813_p1 = $signed(shl_ln703_7_fu_1805_p3);

assign sext_ln703_80_fu_3386_p1 = $signed(add_ln703_46_fu_3380_p2);

assign sext_ln703_81_fu_3878_p1 = $signed(add_ln703_47_reg_6010);

assign sext_ln703_82_fu_3881_p1 = $signed(add_ln703_48_reg_6015);

assign sext_ln703_83_fu_3884_p1 = $signed(add_ln703_49_reg_6020);

assign sext_ln703_84_fu_3893_p1 = $signed(add_ln703_50_fu_3887_p2);

assign sext_ln703_85_fu_3897_p1 = $signed(add_ln703_51_reg_6025);

assign sext_ln703_86_fu_3900_p1 = $signed(add_ln703_52_reg_6030);

assign sext_ln703_87_fu_3909_p1 = $signed(add_ln703_53_fu_3903_p2);

assign sext_ln703_88_fu_3919_p1 = $signed(add_ln703_54_fu_3913_p2);

assign sext_ln703_89_fu_5576_p1 = $signed(add_ln703_55_reg_6085);

assign sext_ln703_8_fu_1869_p1 = $signed(shl_ln703_8_fu_1861_p3);

assign sext_ln703_90_fu_4434_p1 = $signed(add_ln703_57_reg_6090);

assign sext_ln703_91_fu_4437_p1 = $signed(add_ln703_58_reg_6095);

assign sext_ln703_92_fu_4446_p1 = $signed(add_ln703_59_fu_4440_p2);

assign sext_ln703_93_fu_4450_p1 = $signed(add_ln703_60_reg_6100);

assign sext_ln703_94_fu_4453_p1 = $signed(add_ln703_61_reg_6105);

assign sext_ln703_95_fu_4462_p1 = $signed(add_ln703_62_fu_4456_p2);

assign sext_ln703_96_fu_4954_p1 = $signed(add_ln703_63_reg_6160);

assign sext_ln703_97_fu_4957_p1 = $signed(add_ln703_64_reg_6165);

assign sext_ln703_98_fu_4960_p1 = $signed(add_ln703_65_reg_6170);

assign sext_ln703_99_fu_4969_p1 = $signed(add_ln703_66_fu_4963_p2);

assign sext_ln703_9_fu_1909_p1 = $signed(shl_ln703_9_fu_1901_p3);

assign sext_ln703_fu_2321_p1 = $signed(shl_ln3_fu_2314_p3);

assign shl_ln2_fu_1226_p3 = {{ko_0_0_reg_859}, {4'd0}};

assign shl_ln3_fu_2314_p3 = {{select_ln170_reg_5722}, {16'd0}};

assign shl_ln703_10_fu_1981_p3 = {{select_ln170_11_fu_1973_p3}, {16'd0}};

assign shl_ln703_11_fu_2037_p3 = {{select_ln170_12_fu_2029_p3}, {16'd0}};

assign shl_ln703_12_fu_2077_p3 = {{select_ln170_13_fu_2069_p3}, {16'd0}};

assign shl_ln703_13_fu_2117_p3 = {{select_ln170_14_fu_2109_p3}, {16'd0}};

assign shl_ln703_14_fu_2353_p3 = {{select_ln170_15_fu_2345_p3}, {16'd0}};

assign shl_ln703_15_fu_2409_p3 = {{select_ln170_16_fu_2401_p3}, {16'd0}};

assign shl_ln703_16_fu_2449_p3 = {{select_ln170_17_fu_2441_p3}, {16'd0}};

assign shl_ln703_17_fu_2489_p3 = {{select_ln170_18_fu_2481_p3}, {16'd0}};

assign shl_ln703_18_fu_2529_p3 = {{select_ln170_19_fu_2521_p3}, {16'd0}};

assign shl_ln703_19_fu_2585_p3 = {{select_ln170_20_fu_2577_p3}, {16'd0}};

assign shl_ln703_1_fu_1541_p3 = {{select_ln170_1_fu_1533_p3}, {16'd0}};

assign shl_ln703_20_fu_2625_p3 = {{select_ln170_21_fu_2617_p3}, {16'd0}};

assign shl_ln703_21_fu_2665_p3 = {{select_ln170_22_fu_2657_p3}, {16'd0}};

assign shl_ln703_22_fu_2888_p3 = {{select_ln170_23_fu_2880_p3}, {16'd0}};

assign shl_ln703_23_fu_2944_p3 = {{select_ln170_24_fu_2936_p3}, {16'd0}};

assign shl_ln703_24_fu_2984_p3 = {{select_ln170_25_fu_2976_p3}, {16'd0}};

assign shl_ln703_25_fu_3024_p3 = {{select_ln170_26_fu_3016_p3}, {16'd0}};

assign shl_ln703_26_fu_3064_p3 = {{select_ln170_27_fu_3056_p3}, {16'd0}};

assign shl_ln703_27_fu_3120_p3 = {{select_ln170_28_fu_3112_p3}, {16'd0}};

assign shl_ln703_28_fu_3160_p3 = {{select_ln170_29_fu_3152_p3}, {16'd0}};

assign shl_ln703_29_fu_3200_p3 = {{select_ln170_30_fu_3192_p3}, {16'd0}};

assign shl_ln703_2_fu_1581_p3 = {{select_ln170_2_fu_1573_p3}, {16'd0}};

assign shl_ln703_30_fu_3448_p3 = {{select_ln170_31_fu_3440_p3}, {16'd0}};

assign shl_ln703_31_fu_3504_p3 = {{select_ln170_32_fu_3496_p3}, {16'd0}};

assign shl_ln703_32_fu_3544_p3 = {{select_ln170_33_fu_3536_p3}, {16'd0}};

assign shl_ln703_33_fu_3584_p3 = {{select_ln170_34_fu_3576_p3}, {16'd0}};

assign shl_ln703_34_fu_3624_p3 = {{select_ln170_35_fu_3616_p3}, {16'd0}};

assign shl_ln703_35_fu_3680_p3 = {{select_ln170_36_fu_3672_p3}, {16'd0}};

assign shl_ln703_36_fu_3720_p3 = {{select_ln170_37_fu_3712_p3}, {16'd0}};

assign shl_ln703_37_fu_3760_p3 = {{select_ln170_38_fu_3752_p3}, {16'd0}};

assign shl_ln703_38_fu_3981_p3 = {{select_ln170_39_fu_3973_p3}, {16'd0}};

assign shl_ln703_39_fu_4037_p3 = {{select_ln170_40_fu_4029_p3}, {16'd0}};

assign shl_ln703_3_fu_1621_p3 = {{select_ln170_3_fu_1613_p3}, {16'd0}};

assign shl_ln703_40_fu_4077_p3 = {{select_ln170_41_fu_4069_p3}, {16'd0}};

assign shl_ln703_41_fu_4117_p3 = {{select_ln170_42_fu_4109_p3}, {16'd0}};

assign shl_ln703_42_fu_4157_p3 = {{select_ln170_43_fu_4149_p3}, {16'd0}};

assign shl_ln703_43_fu_4213_p3 = {{select_ln170_44_fu_4205_p3}, {16'd0}};

assign shl_ln703_44_fu_4253_p3 = {{select_ln170_45_fu_4245_p3}, {16'd0}};

assign shl_ln703_45_fu_4293_p3 = {{select_ln170_46_fu_4285_p3}, {16'd0}};

assign shl_ln703_46_fu_4524_p3 = {{select_ln170_47_fu_4516_p3}, {16'd0}};

assign shl_ln703_47_fu_4580_p3 = {{select_ln170_48_fu_4572_p3}, {16'd0}};

assign shl_ln703_48_fu_4620_p3 = {{select_ln170_49_fu_4612_p3}, {16'd0}};

assign shl_ln703_49_fu_4660_p3 = {{select_ln170_50_fu_4652_p3}, {16'd0}};

assign shl_ln703_4_fu_1671_p3 = {{select_ln170_4_fu_1663_p3}, {16'd0}};

assign shl_ln703_50_fu_4700_p3 = {{select_ln170_51_fu_4692_p3}, {16'd0}};

assign shl_ln703_51_fu_4756_p3 = {{select_ln170_52_fu_4748_p3}, {16'd0}};

assign shl_ln703_52_fu_4796_p3 = {{select_ln170_53_fu_4788_p3}, {16'd0}};

assign shl_ln703_53_fu_4836_p3 = {{select_ln170_54_fu_4828_p3}, {16'd0}};

assign shl_ln703_54_fu_5207_p3 = {{select_ln170_55_fu_5199_p3}, {16'd0}};

assign shl_ln703_55_fu_5257_p3 = {{select_ln170_56_fu_5249_p3}, {16'd0}};

assign shl_ln703_56_fu_5297_p3 = {{select_ln170_57_fu_5289_p3}, {16'd0}};

assign shl_ln703_57_fu_5337_p3 = {{select_ln170_58_fu_5329_p3}, {16'd0}};

assign shl_ln703_58_fu_5377_p3 = {{select_ln170_59_fu_5369_p3}, {16'd0}};

assign shl_ln703_59_fu_5431_p3 = {{select_ln170_60_fu_5423_p3}, {16'd0}};

assign shl_ln703_5_fu_1711_p3 = {{select_ln170_5_fu_1703_p3}, {16'd0}};

assign shl_ln703_60_fu_5471_p3 = {{select_ln170_61_fu_5463_p3}, {16'd0}};

assign shl_ln703_61_fu_5065_p3 = {{select_ln170_62_fu_5057_p3}, {16'd0}};

assign shl_ln703_62_fu_5123_p3 = {{select_ln170_63_fu_5115_p3}, {16'd0}};

assign shl_ln703_6_fu_1765_p3 = {{select_ln170_6_fu_1757_p3}, {16'd0}};

assign shl_ln703_7_fu_1805_p3 = {{select_ln170_7_fu_1797_p3}, {16'd0}};

assign shl_ln703_8_fu_1861_p3 = {{select_ln170_8_fu_1853_p3}, {16'd0}};

assign shl_ln703_9_fu_1901_p3 = {{select_ln170_9_fu_1893_p3}, {16'd0}};

assign shl_ln703_s_fu_1941_p3 = {{select_ln170_10_fu_1933_p3}, {16'd0}};

assign sub_ln165_10_fu_3809_p2 = (zext_ln165_37_fu_3793_p1 - zext_ln165_38_fu_3805_p1);

assign sub_ln165_11_fu_3862_p2 = (zext_ln165_39_fu_3846_p1 - zext_ln165_40_fu_3858_p1);

assign sub_ln165_12_fu_4342_p2 = (zext_ln165_41_fu_4326_p1 - zext_ln165_42_fu_4338_p1);

assign sub_ln165_13_fu_4418_p2 = (zext_ln165_43_fu_4402_p1 - zext_ln165_44_fu_4414_p1);

assign sub_ln165_14_fu_4885_p2 = (zext_ln165_45_fu_4869_p1 - zext_ln165_46_fu_4881_p1);

assign sub_ln165_15_fu_4938_p2 = (zext_ln165_47_fu_4922_p1 - zext_ln165_48_fu_4934_p1);

assign sub_ln165_1_fu_1343_p2 = (zext_ln165_19_fu_1327_p1 - zext_ln165_20_fu_1339_p1);

assign sub_ln165_2_fu_1444_p2 = (zext_ln165_21_fu_1428_p1 - zext_ln165_22_fu_1440_p1);

assign sub_ln165_3_fu_1497_p2 = (zext_ln165_23_fu_1481_p1 - zext_ln165_24_fu_1493_p1);

assign sub_ln165_4_fu_2166_p2 = (zext_ln165_25_fu_2150_p1 - zext_ln165_26_fu_2162_p1);

assign sub_ln165_5_fu_2242_p2 = (zext_ln165_27_fu_2226_p1 - zext_ln165_28_fu_2238_p1);

assign sub_ln165_6_fu_2714_p2 = (zext_ln165_29_fu_2698_p1 - zext_ln165_30_fu_2710_p1);

assign sub_ln165_7_fu_2767_p2 = (zext_ln165_31_fu_2751_p1 - zext_ln165_32_fu_2763_p1);

assign sub_ln165_8_fu_3249_p2 = (zext_ln165_33_fu_3233_p1 - zext_ln165_34_fu_3245_p1);

assign sub_ln165_9_fu_3325_p2 = (zext_ln165_35_fu_3309_p1 - zext_ln165_36_fu_3321_p1);

assign sub_ln165_fu_1266_p2 = (zext_ln165_17_fu_1250_p1 - zext_ln165_18_fu_1262_p1);

assign sub_ln701_60_fu_5399_p2 = (8'd0 - input_0_0_V_load_15_reg_6272);

assign sub_ln701_63_fu_5089_p2 = (8'd0 - input_3_0_V_q1);

assign sub_ln701_6_fu_1733_p2 = (8'd0 - input_2_0_V_load_1_reg_5739);

assign tmp_106_fu_3265_p4 = {{sub_ln165_8_fu_3249_p2[16:9]}};

assign tmp_107_fu_3275_p3 = {{tmp_106_fu_3265_p4}, {or_ln165_2_fu_3259_p2}};

assign tmp_108_fu_4358_p4 = {{sub_ln165_12_fu_4342_p2[16:9]}};

assign tmp_109_fu_4368_p3 = {{tmp_108_fu_4358_p4}, {or_ln165_3_fu_4352_p2}};

assign tmp_56_fu_1242_p3 = {{ko_0_0_reg_859}, {13'd0}};

assign tmp_57_fu_1254_p3 = {{ko_0_0_reg_859}, {11'd0}};

assign tmp_58_fu_1319_p3 = {{or_ln164_fu_1305_p2}, {9'd0}};

assign tmp_59_fu_1331_p3 = {{or_ln164_fu_1305_p2}, {7'd0}};

assign tmp_60_fu_1420_p3 = {{or_ln164_1_fu_1407_p2}, {9'd0}};

assign tmp_61_fu_1432_p3 = {{or_ln164_1_fu_1407_p2}, {7'd0}};

assign tmp_62_fu_1473_p3 = {{or_ln164_2_fu_1460_p2}, {9'd0}};

assign tmp_63_fu_1485_p3 = {{or_ln164_2_fu_1460_p2}, {7'd0}};

assign tmp_64_fu_2142_p3 = {{or_ln164_3_fu_2129_p2}, {9'd0}};

assign tmp_65_fu_2154_p3 = {{or_ln164_3_fu_2129_p2}, {7'd0}};

assign tmp_66_fu_2218_p3 = {{or_ln164_4_fu_2205_p2}, {9'd0}};

assign tmp_67_fu_2230_p3 = {{or_ln164_4_fu_2205_p2}, {7'd0}};

assign tmp_68_fu_2690_p3 = {{or_ln164_5_fu_2677_p2}, {9'd0}};

assign tmp_69_fu_2702_p3 = {{or_ln164_5_fu_2677_p2}, {7'd0}};

assign tmp_70_fu_2743_p3 = {{or_ln164_6_fu_2730_p2}, {9'd0}};

assign tmp_71_fu_2755_p3 = {{or_ln164_6_fu_2730_p2}, {7'd0}};

assign tmp_72_fu_3225_p3 = {{or_ln164_7_fu_3212_p2}, {9'd0}};

assign tmp_73_fu_3237_p3 = {{or_ln164_7_fu_3212_p2}, {7'd0}};

assign tmp_74_fu_3301_p3 = {{or_ln164_8_fu_3288_p2}, {9'd0}};

assign tmp_75_fu_3313_p3 = {{or_ln164_8_fu_3288_p2}, {7'd0}};

assign tmp_76_fu_3785_p3 = {{or_ln164_9_fu_3772_p2}, {9'd0}};

assign tmp_77_fu_3797_p3 = {{or_ln164_9_fu_3772_p2}, {7'd0}};

assign tmp_78_fu_3838_p3 = {{or_ln164_10_fu_3825_p2}, {9'd0}};

assign tmp_79_fu_3850_p3 = {{or_ln164_10_fu_3825_p2}, {7'd0}};

assign tmp_80_fu_4318_p3 = {{or_ln164_11_fu_4305_p2}, {9'd0}};

assign tmp_81_fu_4330_p3 = {{or_ln164_11_fu_4305_p2}, {7'd0}};

assign tmp_82_fu_4394_p3 = {{or_ln164_12_fu_4381_p2}, {9'd0}};

assign tmp_83_fu_4406_p3 = {{or_ln164_12_fu_4381_p2}, {7'd0}};

assign tmp_84_fu_4861_p3 = {{or_ln164_13_fu_4848_p2}, {9'd0}};

assign tmp_85_fu_4873_p3 = {{or_ln164_13_fu_4848_p2}, {7'd0}};

assign tmp_86_fu_1282_p4 = {{sub_ln165_fu_1266_p2[16:9]}};

assign tmp_87_fu_1292_p3 = {{tmp_86_fu_1282_p4}, {or_ln165_fu_1276_p2}};

assign tmp_88_fu_4914_p3 = {{or_ln164_14_fu_4901_p2}, {9'd0}};

assign tmp_89_fu_4926_p3 = {{or_ln164_14_fu_4901_p2}, {7'd0}};

assign tmp_97_fu_2182_p4 = {{sub_ln165_4_fu_2166_p2[16:9]}};

assign tmp_98_fu_2192_p3 = {{tmp_97_fu_2182_p4}, {or_ln165_1_fu_2176_p2}};

assign trunc_ln165_1_fu_2172_p1 = sub_ln165_4_fu_2166_p2[8:0];

assign trunc_ln165_2_fu_3255_p1 = sub_ln165_8_fu_3249_p2[8:0];

assign trunc_ln165_3_fu_4348_p1 = sub_ln165_12_fu_4342_p2[8:0];

assign trunc_ln165_fu_1272_p1 = sub_ln165_fu_1266_p2[8:0];

assign trunc_ln167_11_fu_2365_p1 = packed_weights_q0[1:0];

assign trunc_ln167_14_fu_2541_p1 = packed_weights_q1[1:0];

assign trunc_ln167_17_fu_2900_p1 = packed_weights_q0[1:0];

assign trunc_ln167_20_fu_3076_p1 = packed_weights_q1[1:0];

assign trunc_ln167_23_fu_3460_p1 = packed_weights_q0[1:0];

assign trunc_ln167_26_fu_3636_p1 = packed_weights_q1[1:0];

assign trunc_ln167_29_fu_3993_p1 = packed_weights_q0[1:0];

assign trunc_ln167_2_fu_1403_p1 = packed_weights_q1[1:0];

assign trunc_ln167_32_fu_4169_p1 = packed_weights_q1[1:0];

assign trunc_ln167_35_fu_4536_p1 = packed_weights_q0[1:0];

assign trunc_ln167_38_fu_4712_p1 = packed_weights_q1[1:0];

assign trunc_ln167_41_fu_5029_p1 = packed_weights_q0[1:0];

assign trunc_ln167_44_fu_5033_p1 = packed_weights_q1[1:0];

assign trunc_ln167_6_fu_1817_p1 = packed_weights_q0[1:0];

assign trunc_ln167_7_fu_1993_p1 = packed_weights_q1[1:0];

assign trunc_ln167_fu_1359_p1 = packed_weights_q0[1:0];

assign trunc_ln703_fu_5607_p1 = grp_fu_5602_p2[39:0];

assign xor_ln169_10_fu_1913_p2 = (grp_fu_954_p2 ^ 1'd1);

assign xor_ln169_11_fu_1953_p2 = (grp_fu_972_p2 ^ 1'd1);

assign xor_ln169_12_fu_2009_p2 = (icmp_ln169_12_fu_1997_p2 ^ 1'd1);

assign xor_ln169_13_fu_2049_p2 = (grp_fu_996_p2 ^ 1'd1);

assign xor_ln169_14_fu_2089_p2 = (grp_fu_1014_p2 ^ 1'd1);

assign xor_ln169_15_fu_2325_p2 = (grp_fu_1157_p2 ^ 1'd1);

assign xor_ln169_16_fu_2381_p2 = (icmp_ln169_16_fu_2369_p2 ^ 1'd1);

assign xor_ln169_17_fu_2421_p2 = (grp_fu_936_p2 ^ 1'd1);

assign xor_ln169_18_fu_2461_p2 = (grp_fu_954_p2 ^ 1'd1);

assign xor_ln169_19_fu_2501_p2 = (grp_fu_972_p2 ^ 1'd1);

assign xor_ln169_1_fu_1513_p2 = (grp_fu_1079_p2 ^ 1'd1);

assign xor_ln169_20_fu_2557_p2 = (icmp_ln169_20_fu_2545_p2 ^ 1'd1);

assign xor_ln169_21_fu_2597_p2 = (grp_fu_996_p2 ^ 1'd1);

assign xor_ln169_22_fu_2637_p2 = (grp_fu_1014_p2 ^ 1'd1);

assign xor_ln169_23_fu_2860_p2 = (grp_fu_1157_p2 ^ 1'd1);

assign xor_ln169_24_fu_2916_p2 = (icmp_ln169_24_fu_2904_p2 ^ 1'd1);

assign xor_ln169_25_fu_2956_p2 = (grp_fu_936_p2 ^ 1'd1);

assign xor_ln169_26_fu_2996_p2 = (grp_fu_954_p2 ^ 1'd1);

assign xor_ln169_27_fu_3036_p2 = (grp_fu_972_p2 ^ 1'd1);

assign xor_ln169_28_fu_3092_p2 = (icmp_ln169_28_fu_3080_p2 ^ 1'd1);

assign xor_ln169_29_fu_3132_p2 = (grp_fu_996_p2 ^ 1'd1);

assign xor_ln169_2_fu_1553_p2 = (grp_fu_1097_p2 ^ 1'd1);

assign xor_ln169_30_fu_3172_p2 = (grp_fu_1014_p2 ^ 1'd1);

assign xor_ln169_31_fu_3420_p2 = (grp_fu_1157_p2 ^ 1'd1);

assign xor_ln169_32_fu_3476_p2 = (icmp_ln169_32_fu_3464_p2 ^ 1'd1);

assign xor_ln169_33_fu_3516_p2 = (grp_fu_936_p2 ^ 1'd1);

assign xor_ln169_34_fu_3556_p2 = (grp_fu_954_p2 ^ 1'd1);

assign xor_ln169_35_fu_3596_p2 = (grp_fu_972_p2 ^ 1'd1);

assign xor_ln169_36_fu_3652_p2 = (icmp_ln169_36_fu_3640_p2 ^ 1'd1);

assign xor_ln169_37_fu_3692_p2 = (grp_fu_996_p2 ^ 1'd1);

assign xor_ln169_38_fu_3732_p2 = (grp_fu_1014_p2 ^ 1'd1);

assign xor_ln169_39_fu_3953_p2 = (grp_fu_1157_p2 ^ 1'd1);

assign xor_ln169_3_fu_1593_p2 = (grp_fu_1115_p2 ^ 1'd1);

assign xor_ln169_40_fu_4009_p2 = (icmp_ln169_40_fu_3997_p2 ^ 1'd1);

assign xor_ln169_41_fu_4049_p2 = (grp_fu_936_p2 ^ 1'd1);

assign xor_ln169_42_fu_4089_p2 = (grp_fu_954_p2 ^ 1'd1);

assign xor_ln169_43_fu_4129_p2 = (grp_fu_972_p2 ^ 1'd1);

assign xor_ln169_44_fu_4185_p2 = (icmp_ln169_44_fu_4173_p2 ^ 1'd1);

assign xor_ln169_45_fu_4225_p2 = (grp_fu_996_p2 ^ 1'd1);

assign xor_ln169_46_fu_4265_p2 = (grp_fu_1014_p2 ^ 1'd1);

assign xor_ln169_47_fu_4496_p2 = (grp_fu_1157_p2 ^ 1'd1);

assign xor_ln169_48_fu_4552_p2 = (icmp_ln169_48_fu_4540_p2 ^ 1'd1);

assign xor_ln169_49_fu_4592_p2 = (grp_fu_936_p2 ^ 1'd1);

assign xor_ln169_4_fu_1643_p2 = (icmp_ln169_4_fu_1633_p2 ^ 1'd1);

assign xor_ln169_50_fu_4632_p2 = (grp_fu_954_p2 ^ 1'd1);

assign xor_ln169_51_fu_4672_p2 = (grp_fu_972_p2 ^ 1'd1);

assign xor_ln169_52_fu_4728_p2 = (icmp_ln169_52_fu_4716_p2 ^ 1'd1);

assign xor_ln169_53_fu_4768_p2 = (grp_fu_996_p2 ^ 1'd1);

assign xor_ln169_54_fu_4808_p2 = (grp_fu_1014_p2 ^ 1'd1);

assign xor_ln169_55_fu_5179_p2 = (grp_fu_1157_p2 ^ 1'd1);

assign xor_ln169_56_fu_5229_p2 = (icmp_ln169_56_fu_5219_p2 ^ 1'd1);

assign xor_ln169_57_fu_5269_p2 = (grp_fu_1079_p2 ^ 1'd1);

assign xor_ln169_58_fu_5309_p2 = (grp_fu_1097_p2 ^ 1'd1);

assign xor_ln169_59_fu_5349_p2 = (grp_fu_1115_p2 ^ 1'd1);

assign xor_ln169_5_fu_1683_p2 = (grp_fu_1139_p2 ^ 1'd1);

assign xor_ln169_60_fu_5404_p2 = (icmp_ln169_60_fu_5389_p2 ^ 1'd1);

assign xor_ln169_61_fu_5443_p2 = (grp_fu_1139_p2 ^ 1'd1);

assign xor_ln169_62_fu_5037_p2 = (grp_fu_1014_p2 ^ 1'd1);

assign xor_ln169_63_fu_5095_p2 = (icmp_ln169_63_fu_5077_p2 ^ 1'd1);

assign xor_ln169_6_fu_1738_p2 = (icmp_ln169_6_fu_1723_p2 ^ 1'd1);

assign xor_ln169_7_fu_1777_p2 = (grp_fu_1157_p2 ^ 1'd1);

assign xor_ln169_8_fu_1833_p2 = (icmp_ln169_8_fu_1821_p2 ^ 1'd1);

assign xor_ln169_9_fu_1873_p2 = (grp_fu_936_p2 ^ 1'd1);

assign xor_ln169_fu_1375_p2 = (icmp_ln169_fu_1363_p2 ^ 1'd1);

assign zext_ln1265_fu_1210_p1 = j_0_0_reg_847;

assign zext_ln165_10_fu_3293_p1 = or_ln164_8_fu_3288_p2;

assign zext_ln165_11_fu_3777_p1 = or_ln164_9_fu_3772_p2;

assign zext_ln165_12_fu_3830_p1 = or_ln164_10_fu_3825_p2;

assign zext_ln165_13_fu_4310_p1 = or_ln164_11_fu_4305_p2;

assign zext_ln165_14_fu_4386_p1 = or_ln164_12_fu_4381_p2;

assign zext_ln165_15_fu_4853_p1 = or_ln164_13_fu_4848_p2;

assign zext_ln165_16_fu_4906_p1 = or_ln164_14_fu_4901_p2;

assign zext_ln165_17_fu_1250_p1 = tmp_56_fu_1242_p3;

assign zext_ln165_18_fu_1262_p1 = tmp_57_fu_1254_p3;

assign zext_ln165_19_fu_1327_p1 = tmp_58_fu_1319_p3;

assign zext_ln165_1_fu_1234_p1 = shl_ln2_fu_1226_p3;

assign zext_ln165_20_fu_1339_p1 = tmp_59_fu_1331_p3;

assign zext_ln165_21_fu_1428_p1 = tmp_60_fu_1420_p3;

assign zext_ln165_22_fu_1440_p1 = tmp_61_fu_1432_p3;

assign zext_ln165_23_fu_1481_p1 = tmp_62_fu_1473_p3;

assign zext_ln165_24_fu_1493_p1 = tmp_63_fu_1485_p3;

assign zext_ln165_25_fu_2150_p1 = tmp_64_fu_2142_p3;

assign zext_ln165_26_fu_2162_p1 = tmp_65_fu_2154_p3;

assign zext_ln165_27_fu_2226_p1 = tmp_66_fu_2218_p3;

assign zext_ln165_28_fu_2238_p1 = tmp_67_fu_2230_p3;

assign zext_ln165_29_fu_2698_p1 = tmp_68_fu_2690_p3;

assign zext_ln165_2_fu_1311_p1 = or_ln164_fu_1305_p2;

assign zext_ln165_30_fu_2710_p1 = tmp_69_fu_2702_p3;

assign zext_ln165_31_fu_2751_p1 = tmp_70_fu_2743_p3;

assign zext_ln165_32_fu_2763_p1 = tmp_71_fu_2755_p3;

assign zext_ln165_33_fu_3233_p1 = tmp_72_fu_3225_p3;

assign zext_ln165_34_fu_3245_p1 = tmp_73_fu_3237_p3;

assign zext_ln165_35_fu_3309_p1 = tmp_74_fu_3301_p3;

assign zext_ln165_36_fu_3321_p1 = tmp_75_fu_3313_p3;

assign zext_ln165_37_fu_3793_p1 = tmp_76_fu_3785_p3;

assign zext_ln165_38_fu_3805_p1 = tmp_77_fu_3797_p3;

assign zext_ln165_39_fu_3846_p1 = tmp_78_fu_3838_p3;

assign zext_ln165_3_fu_1412_p1 = or_ln164_1_fu_1407_p2;

assign zext_ln165_40_fu_3858_p1 = tmp_79_fu_3850_p3;

assign zext_ln165_41_fu_4326_p1 = tmp_80_fu_4318_p3;

assign zext_ln165_42_fu_4338_p1 = tmp_81_fu_4330_p3;

assign zext_ln165_43_fu_4402_p1 = tmp_82_fu_4394_p3;

assign zext_ln165_44_fu_4414_p1 = tmp_83_fu_4406_p3;

assign zext_ln165_45_fu_4869_p1 = tmp_84_fu_4861_p3;

assign zext_ln165_46_fu_4881_p1 = tmp_85_fu_4873_p3;

assign zext_ln165_47_fu_4922_p1 = tmp_88_fu_4914_p3;

assign zext_ln165_48_fu_4934_p1 = tmp_89_fu_4926_p3;

assign zext_ln165_4_fu_1465_p1 = or_ln164_2_fu_1460_p2;

assign zext_ln165_5_fu_2134_p1 = or_ln164_3_fu_2129_p2;

assign zext_ln165_6_fu_2210_p1 = or_ln164_4_fu_2205_p2;

assign zext_ln165_7_fu_2682_p1 = or_ln164_5_fu_2677_p2;

assign zext_ln165_8_fu_2735_p1 = or_ln164_6_fu_2730_p2;

assign zext_ln165_9_fu_3217_p1 = or_ln164_7_fu_3212_p2;

assign zext_ln165_fu_1205_p1 = j_0_0_reg_847;

always @ (posedge ap_clk) begin
    zext_ln1265_reg_5625[16:9] <= 8'b00000000;
    shl_ln2_reg_5654[3:0] <= 4'b0000;
    add_ln703_27_reg_5845[15:0] <= 16'b0000000000000000;
    add_ln703_31_reg_5850[15:0] <= 16'b0000000000000000;
    add_ln703_33_reg_5855[15:0] <= 16'b0000000000000000;
    add_ln703_34_reg_5860[15:0] <= 16'b0000000000000000;
    add_ln703_36_reg_5865[15:0] <= 16'b0000000000000000;
    add_ln703_37_reg_5870[15:0] <= 16'b0000000000000000;
    add_ln703_39_reg_5930[15:0] <= 16'b0000000000000000;
    add_ln703_41_reg_5935[15:0] <= 16'b0000000000000000;
    add_ln703_42_reg_5940[15:0] <= 16'b0000000000000000;
    add_ln703_44_reg_5945[15:0] <= 16'b0000000000000000;
    add_ln703_45_reg_5950[15:0] <= 16'b0000000000000000;
    add_ln703_47_reg_6010[15:0] <= 16'b0000000000000000;
    add_ln703_48_reg_6015[15:0] <= 16'b0000000000000000;
    add_ln703_49_reg_6020[15:0] <= 16'b0000000000000000;
    add_ln703_51_reg_6025[15:0] <= 16'b0000000000000000;
    add_ln703_52_reg_6030[15:0] <= 16'b0000000000000000;
    add_ln703_55_reg_6085[15:0] <= 16'b0000000000000000;
    add_ln703_57_reg_6090[15:0] <= 16'b0000000000000000;
    add_ln703_58_reg_6095[15:0] <= 16'b0000000000000000;
    add_ln703_60_reg_6100[15:0] <= 16'b0000000000000000;
    add_ln703_61_reg_6105[15:0] <= 16'b0000000000000000;
    add_ln703_63_reg_6160[15:0] <= 16'b0000000000000000;
    add_ln703_64_reg_6165[15:0] <= 16'b0000000000000000;
    add_ln703_65_reg_6170[15:0] <= 16'b0000000000000000;
    add_ln703_67_reg_6175[15:0] <= 16'b0000000000000000;
    add_ln703_68_reg_6180[15:0] <= 16'b0000000000000000;
    add_ln703_71_reg_6235[15:0] <= 16'b0000000000000000;
    add_ln703_72_reg_6240[15:0] <= 16'b0000000000000000;
    add_ln703_73_reg_6245[15:0] <= 16'b0000000000000000;
    add_ln703_75_reg_6250[15:0] <= 16'b0000000000000000;
    add_ln703_76_reg_6255[15:0] <= 16'b0000000000000000;
    add_ln703_78_reg_6278[15:0] <= 16'b0000000000000000;
    add_ln703_83_reg_6283[15:0] <= 16'b0000000000000000;
    add_ln703_81_reg_6288[15:0] <= 16'b0000000000000000;
    add_ln703_85_reg_6293[15:0] <= 16'b0000000000000000;
    add_ln703_88_reg_6298[15:0] <= 16'b0000000000000000;
end

endmodule //linear_forward_no_mu
