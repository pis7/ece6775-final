// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _transpose_last_two_d_HH_
#define _transpose_last_two_d_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct transpose_last_two_d : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<12> > input_V_address0;
    sc_out< sc_logic > input_V_ce0;
    sc_in< sc_lv<40> > input_V_q0;
    sc_out< sc_lv<12> > output_V_address0;
    sc_out< sc_logic > output_V_ce0;
    sc_out< sc_logic > output_V_we0;
    sc_out< sc_lv<40> > output_V_d0;


    // Module declarations
    transpose_last_two_d(sc_module_name name);
    SC_HAS_PROCESS(transpose_last_two_d);

    ~transpose_last_two_d();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > i_fu_128_p2;
    sc_signal< sc_lv<4> > i_reg_326;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<9> > sext_ln203_fu_164_p1;
    sc_signal< sc_lv<9> > sext_ln203_reg_331;
    sc_signal< sc_lv<1> > icmp_ln249_fu_122_p2;
    sc_signal< sc_lv<12> > sext_ln203_1_fu_198_p1;
    sc_signal< sc_lv<12> > sext_ln203_1_reg_336;
    sc_signal< sc_lv<3> > j_fu_208_p2;
    sc_signal< sc_lv<3> > j_reg_344;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<13> > zext_ln203_4_fu_214_p1;
    sc_signal< sc_lv<13> > zext_ln203_4_reg_349;
    sc_signal< sc_lv<1> > icmp_ln250_fu_202_p2;
    sc_signal< sc_lv<13> > sub_ln203_2_fu_247_p2;
    sc_signal< sc_lv<13> > sub_ln203_2_reg_354;
    sc_signal< sc_lv<6> > k_fu_259_p2;
    sc_signal< sc_lv<6> > k_reg_362;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln251_fu_253_p2;
    sc_signal< sc_lv<13> > add_ln203_3_fu_314_p2;
    sc_signal< sc_lv<13> > add_ln203_3_reg_372;
    sc_signal< sc_lv<4> > i_0_reg_89;
    sc_signal< sc_lv<3> > j_0_reg_100;
    sc_signal< sc_lv<6> > k_0_reg_111;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<64> > zext_ln203_8_fu_278_p1;
    sc_signal< sc_lv<64> > zext_ln203_9_fu_319_p1;
    sc_signal< sc_lv<7> > tmp_2_fu_134_p3;
    sc_signal< sc_lv<5> > tmp_3_fu_146_p3;
    sc_signal< sc_lv<8> > zext_ln203_fu_142_p1;
    sc_signal< sc_lv<8> > zext_ln203_1_fu_154_p1;
    sc_signal< sc_lv<8> > sub_ln203_fu_158_p2;
    sc_signal< sc_lv<10> > tmp_4_fu_168_p3;
    sc_signal< sc_lv<8> > tmp_5_fu_180_p3;
    sc_signal< sc_lv<11> > zext_ln203_2_fu_176_p1;
    sc_signal< sc_lv<11> > zext_ln203_3_fu_188_p1;
    sc_signal< sc_lv<11> > sub_ln203_1_fu_192_p2;
    sc_signal< sc_lv<9> > zext_ln203_5_fu_218_p1;
    sc_signal< sc_lv<9> > add_ln203_fu_222_p2;
    sc_signal< sc_lv<7> > trunc_ln203_fu_227_p1;
    sc_signal< sc_lv<13> > p_shl4_cast_fu_231_p3;
    sc_signal< sc_lv<13> > p_shl5_cast_fu_239_p3;
    sc_signal< sc_lv<13> > zext_ln203_7_fu_269_p1;
    sc_signal< sc_lv<13> > add_ln203_1_fu_273_p2;
    sc_signal< sc_lv<12> > zext_ln203_6_fu_265_p1;
    sc_signal< sc_lv<12> > add_ln203_2_fu_283_p2;
    sc_signal< sc_lv<10> > trunc_ln203_1_fu_288_p1;
    sc_signal< sc_lv<13> > p_shl6_cast_fu_292_p3;
    sc_signal< sc_lv<13> > p_shl7_cast_fu_300_p3;
    sc_signal< sc_lv<13> > sub_ln203_3_fu_308_p2;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<6> ap_const_lv6_30;
    static const sc_lv<6> ap_const_lv6_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln203_1_fu_273_p2();
    void thread_add_ln203_2_fu_283_p2();
    void thread_add_ln203_3_fu_314_p2();
    void thread_add_ln203_fu_222_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_i_fu_128_p2();
    void thread_icmp_ln249_fu_122_p2();
    void thread_icmp_ln250_fu_202_p2();
    void thread_icmp_ln251_fu_253_p2();
    void thread_input_V_address0();
    void thread_input_V_ce0();
    void thread_j_fu_208_p2();
    void thread_k_fu_259_p2();
    void thread_output_V_address0();
    void thread_output_V_ce0();
    void thread_output_V_d0();
    void thread_output_V_we0();
    void thread_p_shl4_cast_fu_231_p3();
    void thread_p_shl5_cast_fu_239_p3();
    void thread_p_shl6_cast_fu_292_p3();
    void thread_p_shl7_cast_fu_300_p3();
    void thread_sext_ln203_1_fu_198_p1();
    void thread_sext_ln203_fu_164_p1();
    void thread_sub_ln203_1_fu_192_p2();
    void thread_sub_ln203_2_fu_247_p2();
    void thread_sub_ln203_3_fu_308_p2();
    void thread_sub_ln203_fu_158_p2();
    void thread_tmp_2_fu_134_p3();
    void thread_tmp_3_fu_146_p3();
    void thread_tmp_4_fu_168_p3();
    void thread_tmp_5_fu_180_p3();
    void thread_trunc_ln203_1_fu_288_p1();
    void thread_trunc_ln203_fu_227_p1();
    void thread_zext_ln203_1_fu_154_p1();
    void thread_zext_ln203_2_fu_176_p1();
    void thread_zext_ln203_3_fu_188_p1();
    void thread_zext_ln203_4_fu_214_p1();
    void thread_zext_ln203_5_fu_218_p1();
    void thread_zext_ln203_6_fu_265_p1();
    void thread_zext_ln203_7_fu_269_p1();
    void thread_zext_ln203_8_fu_278_p1();
    void thread_zext_ln203_9_fu_319_p1();
    void thread_zext_ln203_fu_142_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
