// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _GEMM_3D_float_1_HH_
#define _GEMM_3D_float_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct GEMM_3D_float_1 : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<9> > input_1_0_V_address0;
    sc_out< sc_logic > input_1_0_V_ce0;
    sc_in< sc_lv<40> > input_1_0_V_q0;
    sc_out< sc_lv<12> > input_2_V_address0;
    sc_out< sc_logic > input_2_V_ce0;
    sc_in< sc_lv<40> > input_2_V_q0;
    sc_out< sc_lv<6> > output_0_V_address0;
    sc_out< sc_logic > output_0_V_ce0;
    sc_out< sc_logic > output_0_V_we0;
    sc_out< sc_lv<40> > output_0_V_d0;


    // Module declarations
    GEMM_3D_float_1(sc_module_name name);
    SC_HAS_PROCESS(GEMM_3D_float_1);

    ~GEMM_3D_float_1();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > i_fu_164_p2;
    sc_signal< sc_lv<4> > i_reg_360;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<12> > sext_ln1116_fu_200_p1;
    sc_signal< sc_lv<12> > sext_ln1116_reg_365;
    sc_signal< sc_lv<1> > icmp_ln270_fu_158_p2;
    sc_signal< sc_lv<7> > sub_ln203_fu_224_p2;
    sc_signal< sc_lv<7> > sub_ln203_reg_370;
    sc_signal< sc_lv<3> > add_ln272_fu_236_p2;
    sc_signal< sc_lv<3> > add_ln272_reg_378;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<13> > zext_ln203_12_fu_242_p1;
    sc_signal< sc_lv<13> > zext_ln203_12_reg_383;
    sc_signal< sc_lv<1> > icmp_ln272_fu_230_p2;
    sc_signal< sc_lv<6> > output_0_V_addr_reg_388;
    sc_signal< sc_lv<6> > add_ln274_fu_266_p2;
    sc_signal< sc_lv<6> > add_ln274_reg_396;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln274_fu_260_p2;
    sc_signal< sc_lv<40> > input_1_0_V_load_reg_411;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<40> > input_2_V_load_reg_416;
    sc_signal< sc_lv<56> > mul_ln1192_fu_328_p2;
    sc_signal< sc_lv<56> > mul_ln1192_reg_421;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<4> > i_0_reg_112;
    sc_signal< sc_lv<3> > k_0_0_reg_123;
    sc_signal< sc_lv<40> > output_0_V_load_reg_134;
    sc_signal< sc_lv<6> > l_0_0_reg_147;
    sc_signal< sc_lv<64> > sext_ln203_fu_255_p1;
    sc_signal< sc_lv<64> > sext_ln1116_1_fu_281_p1;
    sc_signal< sc_lv<64> > zext_ln1117_fu_317_p1;
    sc_signal< sc_lv<10> > tmp_73_fu_170_p3;
    sc_signal< sc_lv<8> > tmp_74_fu_182_p3;
    sc_signal< sc_lv<11> > zext_ln1116_fu_178_p1;
    sc_signal< sc_lv<11> > zext_ln1116_3_fu_190_p1;
    sc_signal< sc_lv<11> > sub_ln1116_fu_194_p2;
    sc_signal< sc_lv<5> > tmp_76_fu_212_p3;
    sc_signal< sc_lv<7> > tmp_75_fu_204_p3;
    sc_signal< sc_lv<7> > zext_ln203_fu_220_p1;
    sc_signal< sc_lv<7> > zext_ln203_13_fu_246_p1;
    sc_signal< sc_lv<7> > add_ln203_fu_250_p2;
    sc_signal< sc_lv<12> > zext_ln1116_4_fu_272_p1;
    sc_signal< sc_lv<12> > add_ln1116_fu_276_p2;
    sc_signal< sc_lv<10> > trunc_ln1117_fu_286_p1;
    sc_signal< sc_lv<13> > p_shl4_cast_fu_290_p3;
    sc_signal< sc_lv<13> > p_shl5_cast_fu_298_p3;
    sc_signal< sc_lv<13> > sub_ln1117_fu_306_p2;
    sc_signal< sc_lv<13> > add_ln1117_fu_312_p2;
    sc_signal< sc_lv<40> > mul_ln1192_fu_328_p0;
    sc_signal< sc_lv<40> > mul_ln1192_fu_328_p1;
    sc_signal< sc_lv<56> > shl_ln_fu_334_p3;
    sc_signal< sc_lv<56> > add_ln1192_fu_342_p2;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<40> ap_const_lv40_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<6> ap_const_lv6_30;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_37;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln1116_fu_276_p2();
    void thread_add_ln1117_fu_312_p2();
    void thread_add_ln1192_fu_342_p2();
    void thread_add_ln203_fu_250_p2();
    void thread_add_ln272_fu_236_p2();
    void thread_add_ln274_fu_266_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_i_fu_164_p2();
    void thread_icmp_ln270_fu_158_p2();
    void thread_icmp_ln272_fu_230_p2();
    void thread_icmp_ln274_fu_260_p2();
    void thread_input_1_0_V_address0();
    void thread_input_1_0_V_ce0();
    void thread_input_2_V_address0();
    void thread_input_2_V_ce0();
    void thread_mul_ln1192_fu_328_p0();
    void thread_mul_ln1192_fu_328_p1();
    void thread_mul_ln1192_fu_328_p2();
    void thread_output_0_V_address0();
    void thread_output_0_V_ce0();
    void thread_output_0_V_d0();
    void thread_output_0_V_we0();
    void thread_p_shl4_cast_fu_290_p3();
    void thread_p_shl5_cast_fu_298_p3();
    void thread_sext_ln1116_1_fu_281_p1();
    void thread_sext_ln1116_fu_200_p1();
    void thread_sext_ln203_fu_255_p1();
    void thread_shl_ln_fu_334_p3();
    void thread_sub_ln1116_fu_194_p2();
    void thread_sub_ln1117_fu_306_p2();
    void thread_sub_ln203_fu_224_p2();
    void thread_tmp_73_fu_170_p3();
    void thread_tmp_74_fu_182_p3();
    void thread_tmp_75_fu_204_p3();
    void thread_tmp_76_fu_212_p3();
    void thread_trunc_ln1117_fu_286_p1();
    void thread_zext_ln1116_3_fu_190_p1();
    void thread_zext_ln1116_4_fu_272_p1();
    void thread_zext_ln1116_fu_178_p1();
    void thread_zext_ln1117_fu_317_p1();
    void thread_zext_ln203_12_fu_242_p1();
    void thread_zext_ln203_13_fu_246_p1();
    void thread_zext_ln203_fu_220_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
