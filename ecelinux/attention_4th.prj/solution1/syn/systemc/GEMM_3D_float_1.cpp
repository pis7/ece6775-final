// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "GEMM_3D_float_1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic GEMM_3D_float_1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic GEMM_3D_float_1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> GEMM_3D_float_1::ap_ST_fsm_state1 = "1";
const sc_lv<7> GEMM_3D_float_1::ap_ST_fsm_state2 = "10";
const sc_lv<7> GEMM_3D_float_1::ap_ST_fsm_state3 = "100";
const sc_lv<7> GEMM_3D_float_1::ap_ST_fsm_state4 = "1000";
const sc_lv<7> GEMM_3D_float_1::ap_ST_fsm_state5 = "10000";
const sc_lv<7> GEMM_3D_float_1::ap_ST_fsm_state6 = "100000";
const sc_lv<7> GEMM_3D_float_1::ap_ST_fsm_state7 = "1000000";
const sc_lv<32> GEMM_3D_float_1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> GEMM_3D_float_1::ap_const_lv32_1 = "1";
const sc_lv<1> GEMM_3D_float_1::ap_const_lv1_0 = "0";
const sc_lv<32> GEMM_3D_float_1::ap_const_lv32_2 = "10";
const sc_lv<32> GEMM_3D_float_1::ap_const_lv32_3 = "11";
const sc_lv<32> GEMM_3D_float_1::ap_const_lv32_4 = "100";
const sc_lv<32> GEMM_3D_float_1::ap_const_lv32_5 = "101";
const sc_lv<32> GEMM_3D_float_1::ap_const_lv32_6 = "110";
const sc_lv<4> GEMM_3D_float_1::ap_const_lv4_0 = "0000";
const sc_lv<1> GEMM_3D_float_1::ap_const_lv1_1 = "1";
const sc_lv<3> GEMM_3D_float_1::ap_const_lv3_0 = "000";
const sc_lv<40> GEMM_3D_float_1::ap_const_lv40_0 = "0000000000000000000000000000000000000000";
const sc_lv<6> GEMM_3D_float_1::ap_const_lv6_0 = "000000";
const sc_lv<4> GEMM_3D_float_1::ap_const_lv4_8 = "1000";
const sc_lv<4> GEMM_3D_float_1::ap_const_lv4_1 = "1";
const sc_lv<3> GEMM_3D_float_1::ap_const_lv3_6 = "110";
const sc_lv<3> GEMM_3D_float_1::ap_const_lv3_1 = "1";
const sc_lv<6> GEMM_3D_float_1::ap_const_lv6_30 = "110000";
const sc_lv<6> GEMM_3D_float_1::ap_const_lv6_1 = "1";
const sc_lv<16> GEMM_3D_float_1::ap_const_lv16_0 = "0000000000000000";
const sc_lv<32> GEMM_3D_float_1::ap_const_lv32_10 = "10000";
const sc_lv<32> GEMM_3D_float_1::ap_const_lv32_37 = "110111";
const bool GEMM_3D_float_1::ap_const_boolean_1 = true;

GEMM_3D_float_1::GEMM_3D_float_1(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln1116_fu_276_p2);
    sensitive << ( sext_ln1116_reg_365 );
    sensitive << ( zext_ln1116_4_fu_272_p1 );

    SC_METHOD(thread_add_ln1117_fu_312_p2);
    sensitive << ( zext_ln203_12_reg_383 );
    sensitive << ( sub_ln1117_fu_306_p2 );

    SC_METHOD(thread_add_ln1192_fu_342_p2);
    sensitive << ( mul_ln1192_reg_421 );
    sensitive << ( shl_ln_fu_334_p3 );

    SC_METHOD(thread_add_ln203_fu_250_p2);
    sensitive << ( sub_ln203_reg_370 );
    sensitive << ( zext_ln203_13_fu_246_p1 );

    SC_METHOD(thread_add_ln272_fu_236_p2);
    sensitive << ( k_0_0_reg_123 );

    SC_METHOD(thread_add_ln274_fu_266_p2);
    sensitive << ( l_0_0_reg_147 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln270_fu_158_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln270_fu_158_p2 );

    SC_METHOD(thread_i_fu_164_p2);
    sensitive << ( i_0_reg_112 );

    SC_METHOD(thread_icmp_ln270_fu_158_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_112 );

    SC_METHOD(thread_icmp_ln272_fu_230_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( k_0_0_reg_123 );

    SC_METHOD(thread_icmp_ln274_fu_260_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( l_0_0_reg_147 );

    SC_METHOD(thread_input_1_0_V_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln1116_1_fu_281_p1 );

    SC_METHOD(thread_input_1_0_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_input_2_V_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln1117_fu_317_p1 );

    SC_METHOD(thread_input_2_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_mul_ln1192_fu_328_p0);
    sensitive << ( input_2_V_load_reg_416 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_mul_ln1192_fu_328_p1);
    sensitive << ( input_1_0_V_load_reg_411 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_mul_ln1192_fu_328_p2);
    sensitive << ( mul_ln1192_fu_328_p0 );
    sensitive << ( mul_ln1192_fu_328_p1 );

    SC_METHOD(thread_output_0_V_address0);
    sensitive << ( output_0_V_addr_reg_388 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_output_0_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_output_0_V_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( output_0_V_load_reg_134 );

    SC_METHOD(thread_output_0_V_we0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_p_shl4_cast_fu_290_p3);
    sensitive << ( trunc_ln1117_fu_286_p1 );

    SC_METHOD(thread_p_shl5_cast_fu_298_p3);
    sensitive << ( add_ln1116_fu_276_p2 );

    SC_METHOD(thread_sext_ln1116_1_fu_281_p1);
    sensitive << ( add_ln1116_fu_276_p2 );

    SC_METHOD(thread_sext_ln1116_fu_200_p1);
    sensitive << ( sub_ln1116_fu_194_p2 );

    SC_METHOD(thread_sext_ln203_fu_255_p1);
    sensitive << ( add_ln203_fu_250_p2 );

    SC_METHOD(thread_shl_ln_fu_334_p3);
    sensitive << ( output_0_V_load_reg_134 );

    SC_METHOD(thread_sub_ln1116_fu_194_p2);
    sensitive << ( zext_ln1116_fu_178_p1 );
    sensitive << ( zext_ln1116_3_fu_190_p1 );

    SC_METHOD(thread_sub_ln1117_fu_306_p2);
    sensitive << ( p_shl4_cast_fu_290_p3 );
    sensitive << ( p_shl5_cast_fu_298_p3 );

    SC_METHOD(thread_sub_ln203_fu_224_p2);
    sensitive << ( tmp_75_fu_204_p3 );
    sensitive << ( zext_ln203_fu_220_p1 );

    SC_METHOD(thread_tmp_73_fu_170_p3);
    sensitive << ( i_0_reg_112 );

    SC_METHOD(thread_tmp_74_fu_182_p3);
    sensitive << ( i_0_reg_112 );

    SC_METHOD(thread_tmp_75_fu_204_p3);
    sensitive << ( i_0_reg_112 );

    SC_METHOD(thread_tmp_76_fu_212_p3);
    sensitive << ( i_0_reg_112 );

    SC_METHOD(thread_trunc_ln1117_fu_286_p1);
    sensitive << ( add_ln1116_fu_276_p2 );

    SC_METHOD(thread_zext_ln1116_3_fu_190_p1);
    sensitive << ( tmp_74_fu_182_p3 );

    SC_METHOD(thread_zext_ln1116_4_fu_272_p1);
    sensitive << ( l_0_0_reg_147 );

    SC_METHOD(thread_zext_ln1116_fu_178_p1);
    sensitive << ( tmp_73_fu_170_p3 );

    SC_METHOD(thread_zext_ln1117_fu_317_p1);
    sensitive << ( add_ln1117_fu_312_p2 );

    SC_METHOD(thread_zext_ln203_12_fu_242_p1);
    sensitive << ( k_0_0_reg_123 );

    SC_METHOD(thread_zext_ln203_13_fu_246_p1);
    sensitive << ( k_0_0_reg_123 );

    SC_METHOD(thread_zext_ln203_fu_220_p1);
    sensitive << ( tmp_76_fu_212_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln270_fu_158_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln272_fu_230_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln274_fu_260_p2 );

    ap_CS_fsm = "0000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "GEMM_3D_float_1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_1_0_V_address0, "(port)input_1_0_V_address0");
    sc_trace(mVcdFile, input_1_0_V_ce0, "(port)input_1_0_V_ce0");
    sc_trace(mVcdFile, input_1_0_V_q0, "(port)input_1_0_V_q0");
    sc_trace(mVcdFile, input_2_V_address0, "(port)input_2_V_address0");
    sc_trace(mVcdFile, input_2_V_ce0, "(port)input_2_V_ce0");
    sc_trace(mVcdFile, input_2_V_q0, "(port)input_2_V_q0");
    sc_trace(mVcdFile, output_0_V_address0, "(port)output_0_V_address0");
    sc_trace(mVcdFile, output_0_V_ce0, "(port)output_0_V_ce0");
    sc_trace(mVcdFile, output_0_V_we0, "(port)output_0_V_we0");
    sc_trace(mVcdFile, output_0_V_d0, "(port)output_0_V_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_fu_164_p2, "i_fu_164_p2");
    sc_trace(mVcdFile, i_reg_360, "i_reg_360");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, sext_ln1116_fu_200_p1, "sext_ln1116_fu_200_p1");
    sc_trace(mVcdFile, sext_ln1116_reg_365, "sext_ln1116_reg_365");
    sc_trace(mVcdFile, icmp_ln270_fu_158_p2, "icmp_ln270_fu_158_p2");
    sc_trace(mVcdFile, sub_ln203_fu_224_p2, "sub_ln203_fu_224_p2");
    sc_trace(mVcdFile, sub_ln203_reg_370, "sub_ln203_reg_370");
    sc_trace(mVcdFile, add_ln272_fu_236_p2, "add_ln272_fu_236_p2");
    sc_trace(mVcdFile, add_ln272_reg_378, "add_ln272_reg_378");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, zext_ln203_12_fu_242_p1, "zext_ln203_12_fu_242_p1");
    sc_trace(mVcdFile, zext_ln203_12_reg_383, "zext_ln203_12_reg_383");
    sc_trace(mVcdFile, icmp_ln272_fu_230_p2, "icmp_ln272_fu_230_p2");
    sc_trace(mVcdFile, output_0_V_addr_reg_388, "output_0_V_addr_reg_388");
    sc_trace(mVcdFile, add_ln274_fu_266_p2, "add_ln274_fu_266_p2");
    sc_trace(mVcdFile, add_ln274_reg_396, "add_ln274_reg_396");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln274_fu_260_p2, "icmp_ln274_fu_260_p2");
    sc_trace(mVcdFile, input_1_0_V_load_reg_411, "input_1_0_V_load_reg_411");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, input_2_V_load_reg_416, "input_2_V_load_reg_416");
    sc_trace(mVcdFile, mul_ln1192_fu_328_p2, "mul_ln1192_fu_328_p2");
    sc_trace(mVcdFile, mul_ln1192_reg_421, "mul_ln1192_reg_421");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, i_0_reg_112, "i_0_reg_112");
    sc_trace(mVcdFile, k_0_0_reg_123, "k_0_0_reg_123");
    sc_trace(mVcdFile, output_0_V_load_reg_134, "output_0_V_load_reg_134");
    sc_trace(mVcdFile, l_0_0_reg_147, "l_0_0_reg_147");
    sc_trace(mVcdFile, sext_ln203_fu_255_p1, "sext_ln203_fu_255_p1");
    sc_trace(mVcdFile, sext_ln1116_1_fu_281_p1, "sext_ln1116_1_fu_281_p1");
    sc_trace(mVcdFile, zext_ln1117_fu_317_p1, "zext_ln1117_fu_317_p1");
    sc_trace(mVcdFile, tmp_73_fu_170_p3, "tmp_73_fu_170_p3");
    sc_trace(mVcdFile, tmp_74_fu_182_p3, "tmp_74_fu_182_p3");
    sc_trace(mVcdFile, zext_ln1116_fu_178_p1, "zext_ln1116_fu_178_p1");
    sc_trace(mVcdFile, zext_ln1116_3_fu_190_p1, "zext_ln1116_3_fu_190_p1");
    sc_trace(mVcdFile, sub_ln1116_fu_194_p2, "sub_ln1116_fu_194_p2");
    sc_trace(mVcdFile, tmp_76_fu_212_p3, "tmp_76_fu_212_p3");
    sc_trace(mVcdFile, tmp_75_fu_204_p3, "tmp_75_fu_204_p3");
    sc_trace(mVcdFile, zext_ln203_fu_220_p1, "zext_ln203_fu_220_p1");
    sc_trace(mVcdFile, zext_ln203_13_fu_246_p1, "zext_ln203_13_fu_246_p1");
    sc_trace(mVcdFile, add_ln203_fu_250_p2, "add_ln203_fu_250_p2");
    sc_trace(mVcdFile, zext_ln1116_4_fu_272_p1, "zext_ln1116_4_fu_272_p1");
    sc_trace(mVcdFile, add_ln1116_fu_276_p2, "add_ln1116_fu_276_p2");
    sc_trace(mVcdFile, trunc_ln1117_fu_286_p1, "trunc_ln1117_fu_286_p1");
    sc_trace(mVcdFile, p_shl4_cast_fu_290_p3, "p_shl4_cast_fu_290_p3");
    sc_trace(mVcdFile, p_shl5_cast_fu_298_p3, "p_shl5_cast_fu_298_p3");
    sc_trace(mVcdFile, sub_ln1117_fu_306_p2, "sub_ln1117_fu_306_p2");
    sc_trace(mVcdFile, add_ln1117_fu_312_p2, "add_ln1117_fu_312_p2");
    sc_trace(mVcdFile, mul_ln1192_fu_328_p0, "mul_ln1192_fu_328_p0");
    sc_trace(mVcdFile, mul_ln1192_fu_328_p1, "mul_ln1192_fu_328_p1");
    sc_trace(mVcdFile, shl_ln_fu_334_p3, "shl_ln_fu_334_p3");
    sc_trace(mVcdFile, add_ln1192_fu_342_p2, "add_ln1192_fu_342_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

GEMM_3D_float_1::~GEMM_3D_float_1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void GEMM_3D_float_1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln272_fu_230_p2.read(), ap_const_lv1_1))) {
        i_0_reg_112 = i_reg_360.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_112 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln274_fu_260_p2.read(), ap_const_lv1_1))) {
        k_0_0_reg_123 = add_ln272_reg_378.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln270_fu_158_p2.read(), ap_const_lv1_0))) {
        k_0_0_reg_123 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        l_0_0_reg_147 = add_ln274_reg_396.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln272_fu_230_p2.read()))) {
        l_0_0_reg_147 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        output_0_V_load_reg_134 = add_ln1192_fu_342_p2.read().range(55, 16);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln272_fu_230_p2.read()))) {
        output_0_V_load_reg_134 = ap_const_lv40_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        add_ln272_reg_378 = add_ln272_fu_236_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        add_ln274_reg_396 = add_ln274_fu_266_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_360 = i_fu_164_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        input_1_0_V_load_reg_411 = input_1_0_V_q0.read();
        input_2_V_load_reg_416 = input_2_V_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        mul_ln1192_reg_421 = mul_ln1192_fu_328_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln272_fu_230_p2.read()))) {
        output_0_V_addr_reg_388 =  (sc_lv<6>) (sext_ln203_fu_255_p1.read());
        zext_ln203_12_reg_383 = zext_ln203_12_fu_242_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln270_fu_158_p2.read(), ap_const_lv1_0))) {
        sext_ln1116_reg_365 = sext_ln1116_fu_200_p1.read();
        sub_ln203_reg_370 = sub_ln203_fu_224_p2.read();
    }
}

void GEMM_3D_float_1::thread_add_ln1116_fu_276_p2() {
    add_ln1116_fu_276_p2 = (!sext_ln1116_reg_365.read().is_01() || !zext_ln1116_4_fu_272_p1.read().is_01())? sc_lv<12>(): (sc_bigint<12>(sext_ln1116_reg_365.read()) + sc_biguint<12>(zext_ln1116_4_fu_272_p1.read()));
}

void GEMM_3D_float_1::thread_add_ln1117_fu_312_p2() {
    add_ln1117_fu_312_p2 = (!sub_ln1117_fu_306_p2.read().is_01() || !zext_ln203_12_reg_383.read().is_01())? sc_lv<13>(): (sc_biguint<13>(sub_ln1117_fu_306_p2.read()) + sc_biguint<13>(zext_ln203_12_reg_383.read()));
}

void GEMM_3D_float_1::thread_add_ln1192_fu_342_p2() {
    add_ln1192_fu_342_p2 = (!mul_ln1192_reg_421.read().is_01() || !shl_ln_fu_334_p3.read().is_01())? sc_lv<56>(): (sc_biguint<56>(mul_ln1192_reg_421.read()) + sc_biguint<56>(shl_ln_fu_334_p3.read()));
}

void GEMM_3D_float_1::thread_add_ln203_fu_250_p2() {
    add_ln203_fu_250_p2 = (!sub_ln203_reg_370.read().is_01() || !zext_ln203_13_fu_246_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(sub_ln203_reg_370.read()) + sc_biguint<7>(zext_ln203_13_fu_246_p1.read()));
}

void GEMM_3D_float_1::thread_add_ln272_fu_236_p2() {
    add_ln272_fu_236_p2 = (!k_0_0_reg_123.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(k_0_0_reg_123.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void GEMM_3D_float_1::thread_add_ln274_fu_266_p2() {
    add_ln274_fu_266_p2 = (!l_0_0_reg_147.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(l_0_0_reg_147.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void GEMM_3D_float_1::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void GEMM_3D_float_1::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void GEMM_3D_float_1::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void GEMM_3D_float_1::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void GEMM_3D_float_1::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void GEMM_3D_float_1::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void GEMM_3D_float_1::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void GEMM_3D_float_1::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln270_fu_158_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void GEMM_3D_float_1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void GEMM_3D_float_1::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln270_fu_158_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void GEMM_3D_float_1::thread_i_fu_164_p2() {
    i_fu_164_p2 = (!i_0_reg_112.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_0_reg_112.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void GEMM_3D_float_1::thread_icmp_ln270_fu_158_p2() {
    icmp_ln270_fu_158_p2 = (!i_0_reg_112.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_112.read() == ap_const_lv4_8);
}

void GEMM_3D_float_1::thread_icmp_ln272_fu_230_p2() {
    icmp_ln272_fu_230_p2 = (!k_0_0_reg_123.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(k_0_0_reg_123.read() == ap_const_lv3_6);
}

void GEMM_3D_float_1::thread_icmp_ln274_fu_260_p2() {
    icmp_ln274_fu_260_p2 = (!l_0_0_reg_147.read().is_01() || !ap_const_lv6_30.is_01())? sc_lv<1>(): sc_lv<1>(l_0_0_reg_147.read() == ap_const_lv6_30);
}

void GEMM_3D_float_1::thread_input_1_0_V_address0() {
    input_1_0_V_address0 =  (sc_lv<9>) (sext_ln1116_1_fu_281_p1.read());
}

void GEMM_3D_float_1::thread_input_1_0_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        input_1_0_V_ce0 = ap_const_logic_1;
    } else {
        input_1_0_V_ce0 = ap_const_logic_0;
    }
}

void GEMM_3D_float_1::thread_input_2_V_address0() {
    input_2_V_address0 =  (sc_lv<12>) (zext_ln1117_fu_317_p1.read());
}

void GEMM_3D_float_1::thread_input_2_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        input_2_V_ce0 = ap_const_logic_1;
    } else {
        input_2_V_ce0 = ap_const_logic_0;
    }
}

void GEMM_3D_float_1::thread_mul_ln1192_fu_328_p0() {
    mul_ln1192_fu_328_p0 = input_2_V_load_reg_416.read();
}

void GEMM_3D_float_1::thread_mul_ln1192_fu_328_p1() {
    mul_ln1192_fu_328_p1 = input_1_0_V_load_reg_411.read();
}

void GEMM_3D_float_1::thread_mul_ln1192_fu_328_p2() {
    mul_ln1192_fu_328_p2 = (!mul_ln1192_fu_328_p0.read().is_01() || !mul_ln1192_fu_328_p1.read().is_01())? sc_lv<56>(): sc_bigint<40>(mul_ln1192_fu_328_p0.read()) * sc_bigint<40>(mul_ln1192_fu_328_p1.read());
}

void GEMM_3D_float_1::thread_output_0_V_address0() {
    output_0_V_address0 = output_0_V_addr_reg_388.read();
}

void GEMM_3D_float_1::thread_output_0_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        output_0_V_ce0 = ap_const_logic_1;
    } else {
        output_0_V_ce0 = ap_const_logic_0;
    }
}

void GEMM_3D_float_1::thread_output_0_V_d0() {
    output_0_V_d0 = output_0_V_load_reg_134.read();
}

void GEMM_3D_float_1::thread_output_0_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        output_0_V_we0 = ap_const_logic_1;
    } else {
        output_0_V_we0 = ap_const_logic_0;
    }
}

void GEMM_3D_float_1::thread_p_shl4_cast_fu_290_p3() {
    p_shl4_cast_fu_290_p3 = esl_concat<10,3>(trunc_ln1117_fu_286_p1.read(), ap_const_lv3_0);
}

void GEMM_3D_float_1::thread_p_shl5_cast_fu_298_p3() {
    p_shl5_cast_fu_298_p3 = esl_concat<12,1>(add_ln1116_fu_276_p2.read(), ap_const_lv1_0);
}

void GEMM_3D_float_1::thread_sext_ln1116_1_fu_281_p1() {
    sext_ln1116_1_fu_281_p1 = esl_sext<64,12>(add_ln1116_fu_276_p2.read());
}

void GEMM_3D_float_1::thread_sext_ln1116_fu_200_p1() {
    sext_ln1116_fu_200_p1 = esl_sext<12,11>(sub_ln1116_fu_194_p2.read());
}

void GEMM_3D_float_1::thread_sext_ln203_fu_255_p1() {
    sext_ln203_fu_255_p1 = esl_sext<64,7>(add_ln203_fu_250_p2.read());
}

void GEMM_3D_float_1::thread_shl_ln_fu_334_p3() {
    shl_ln_fu_334_p3 = esl_concat<40,16>(output_0_V_load_reg_134.read(), ap_const_lv16_0);
}

void GEMM_3D_float_1::thread_sub_ln1116_fu_194_p2() {
    sub_ln1116_fu_194_p2 = (!zext_ln1116_fu_178_p1.read().is_01() || !zext_ln1116_3_fu_190_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(zext_ln1116_fu_178_p1.read()) - sc_biguint<11>(zext_ln1116_3_fu_190_p1.read()));
}

void GEMM_3D_float_1::thread_sub_ln1117_fu_306_p2() {
    sub_ln1117_fu_306_p2 = (!p_shl4_cast_fu_290_p3.read().is_01() || !p_shl5_cast_fu_298_p3.read().is_01())? sc_lv<13>(): (sc_biguint<13>(p_shl4_cast_fu_290_p3.read()) - sc_biguint<13>(p_shl5_cast_fu_298_p3.read()));
}

void GEMM_3D_float_1::thread_sub_ln203_fu_224_p2() {
    sub_ln203_fu_224_p2 = (!tmp_75_fu_204_p3.read().is_01() || !zext_ln203_fu_220_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_75_fu_204_p3.read()) - sc_biguint<7>(zext_ln203_fu_220_p1.read()));
}

void GEMM_3D_float_1::thread_tmp_73_fu_170_p3() {
    tmp_73_fu_170_p3 = esl_concat<4,6>(i_0_reg_112.read(), ap_const_lv6_0);
}

void GEMM_3D_float_1::thread_tmp_74_fu_182_p3() {
    tmp_74_fu_182_p3 = esl_concat<4,4>(i_0_reg_112.read(), ap_const_lv4_0);
}

void GEMM_3D_float_1::thread_tmp_75_fu_204_p3() {
    tmp_75_fu_204_p3 = esl_concat<4,3>(i_0_reg_112.read(), ap_const_lv3_0);
}

void GEMM_3D_float_1::thread_tmp_76_fu_212_p3() {
    tmp_76_fu_212_p3 = esl_concat<4,1>(i_0_reg_112.read(), ap_const_lv1_0);
}

void GEMM_3D_float_1::thread_trunc_ln1117_fu_286_p1() {
    trunc_ln1117_fu_286_p1 = add_ln1116_fu_276_p2.read().range(10-1, 0);
}

void GEMM_3D_float_1::thread_zext_ln1116_3_fu_190_p1() {
    zext_ln1116_3_fu_190_p1 = esl_zext<11,8>(tmp_74_fu_182_p3.read());
}

void GEMM_3D_float_1::thread_zext_ln1116_4_fu_272_p1() {
    zext_ln1116_4_fu_272_p1 = esl_zext<12,6>(l_0_0_reg_147.read());
}

void GEMM_3D_float_1::thread_zext_ln1116_fu_178_p1() {
    zext_ln1116_fu_178_p1 = esl_zext<11,10>(tmp_73_fu_170_p3.read());
}

void GEMM_3D_float_1::thread_zext_ln1117_fu_317_p1() {
    zext_ln1117_fu_317_p1 = esl_zext<64,13>(add_ln1117_fu_312_p2.read());
}

void GEMM_3D_float_1::thread_zext_ln203_12_fu_242_p1() {
    zext_ln203_12_fu_242_p1 = esl_zext<13,3>(k_0_0_reg_123.read());
}

void GEMM_3D_float_1::thread_zext_ln203_13_fu_246_p1() {
    zext_ln203_13_fu_246_p1 = esl_zext<7,3>(k_0_0_reg_123.read());
}

void GEMM_3D_float_1::thread_zext_ln203_fu_220_p1() {
    zext_ln203_fu_220_p1 = esl_zext<7,5>(tmp_76_fu_212_p3.read());
}

void GEMM_3D_float_1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln270_fu_158_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln272_fu_230_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln274_fu_260_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm = "XXXXXXX";
            break;
    }
}

}

