// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _GEMM_3D_float_HH_
#define _GEMM_3D_float_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct GEMM_3D_float : public sc_module {
    // Port declarations 17
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<6> > input_1_0_V_address0;
    sc_out< sc_logic > input_1_0_V_ce0;
    sc_in< sc_lv<40> > input_1_0_V_q0;
    sc_out< sc_lv<12> > input_2_V_address0;
    sc_out< sc_logic > input_2_V_ce0;
    sc_in< sc_lv<40> > input_2_V_q0;
    sc_out< sc_lv<9> > output_0_V_address0;
    sc_out< sc_logic > output_0_V_ce0;
    sc_out< sc_logic > output_0_V_we0;
    sc_out< sc_lv<40> > output_0_V_d0;
    sc_in< sc_lv<40> > output_0_V_q0;


    // Module declarations
    GEMM_3D_float(sc_module_name name);
    SC_HAS_PROCESS(GEMM_3D_float);

    ~GEMM_3D_float();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > i_fu_149_p2;
    sc_signal< sc_lv<4> > i_reg_343;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<9> > sext_ln1116_fu_185_p1;
    sc_signal< sc_lv<9> > sext_ln1116_reg_348;
    sc_signal< sc_lv<1> > icmp_ln250_fu_143_p2;
    sc_signal< sc_lv<10> > sub_ln1265_fu_209_p2;
    sc_signal< sc_lv<10> > sub_ln1265_reg_353;
    sc_signal< sc_lv<6> > add_ln252_fu_221_p2;
    sc_signal< sc_lv<6> > add_ln252_reg_361;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<13> > zext_ln1265_6_fu_227_p1;
    sc_signal< sc_lv<13> > zext_ln1265_6_reg_366;
    sc_signal< sc_lv<1> > icmp_ln252_fu_215_p2;
    sc_signal< sc_lv<9> > output_0_V_addr_reg_371;
    sc_signal< sc_lv<3> > add_ln253_fu_251_p2;
    sc_signal< sc_lv<3> > add_ln253_reg_379;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<9> > add_ln1116_fu_261_p2;
    sc_signal< sc_lv<9> > add_ln1116_reg_384;
    sc_signal< sc_lv<1> > icmp_ln253_fu_245_p2;
    sc_signal< sc_lv<13> > add_ln1117_fu_292_p2;
    sc_signal< sc_lv<13> > add_ln1117_reg_389;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<40> > input_1_0_V_load_reg_404;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<40> > input_2_V_load_reg_409;
    sc_signal< sc_lv<56> > mul_ln1192_fu_311_p2;
    sc_signal< sc_lv<56> > mul_ln1192_reg_414;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<40> > output_0_V_load_reg_419;
    sc_signal< sc_lv<4> > i_0_reg_110;
    sc_signal< sc_lv<6> > k_0_0_reg_121;
    sc_signal< sc_lv<3> > l_0_0_reg_132;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<64> > sext_ln1265_fu_240_p1;
    sc_signal< sc_lv<64> > sext_ln1116_2_fu_297_p1;
    sc_signal< sc_lv<64> > zext_ln1117_fu_301_p1;
    sc_signal< sc_lv<7> > tmp_80_fu_155_p3;
    sc_signal< sc_lv<5> > tmp_81_fu_167_p3;
    sc_signal< sc_lv<8> > zext_ln1116_fu_163_p1;
    sc_signal< sc_lv<8> > zext_ln1116_5_fu_175_p1;
    sc_signal< sc_lv<8> > sub_ln1116_fu_179_p2;
    sc_signal< sc_lv<8> > tmp_83_fu_197_p3;
    sc_signal< sc_lv<10> > tmp_82_fu_189_p3;
    sc_signal< sc_lv<10> > zext_ln1265_fu_205_p1;
    sc_signal< sc_lv<10> > zext_ln1265_7_fu_231_p1;
    sc_signal< sc_lv<10> > add_ln1265_fu_235_p2;
    sc_signal< sc_lv<9> > zext_ln1116_6_fu_257_p1;
    sc_signal< sc_lv<7> > trunc_ln1117_fu_266_p1;
    sc_signal< sc_lv<13> > p_shl4_cast_fu_270_p3;
    sc_signal< sc_lv<13> > p_shl5_cast_fu_278_p3;
    sc_signal< sc_lv<13> > sub_ln1117_fu_286_p2;
    sc_signal< sc_lv<40> > mul_ln1192_fu_311_p0;
    sc_signal< sc_lv<40> > mul_ln1192_fu_311_p1;
    sc_signal< sc_lv<56> > shl_ln_fu_317_p3;
    sc_signal< sc_lv<56> > add_ln1192_fu_324_p2;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<6> ap_const_lv6_30;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_37;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln1116_fu_261_p2();
    void thread_add_ln1117_fu_292_p2();
    void thread_add_ln1192_fu_324_p2();
    void thread_add_ln1265_fu_235_p2();
    void thread_add_ln252_fu_221_p2();
    void thread_add_ln253_fu_251_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_i_fu_149_p2();
    void thread_icmp_ln250_fu_143_p2();
    void thread_icmp_ln252_fu_215_p2();
    void thread_icmp_ln253_fu_245_p2();
    void thread_input_1_0_V_address0();
    void thread_input_1_0_V_ce0();
    void thread_input_2_V_address0();
    void thread_input_2_V_ce0();
    void thread_mul_ln1192_fu_311_p0();
    void thread_mul_ln1192_fu_311_p1();
    void thread_mul_ln1192_fu_311_p2();
    void thread_output_0_V_address0();
    void thread_output_0_V_ce0();
    void thread_output_0_V_d0();
    void thread_output_0_V_we0();
    void thread_p_shl4_cast_fu_270_p3();
    void thread_p_shl5_cast_fu_278_p3();
    void thread_sext_ln1116_2_fu_297_p1();
    void thread_sext_ln1116_fu_185_p1();
    void thread_sext_ln1265_fu_240_p1();
    void thread_shl_ln_fu_317_p3();
    void thread_sub_ln1116_fu_179_p2();
    void thread_sub_ln1117_fu_286_p2();
    void thread_sub_ln1265_fu_209_p2();
    void thread_tmp_80_fu_155_p3();
    void thread_tmp_81_fu_167_p3();
    void thread_tmp_82_fu_189_p3();
    void thread_tmp_83_fu_197_p3();
    void thread_trunc_ln1117_fu_266_p1();
    void thread_zext_ln1116_5_fu_175_p1();
    void thread_zext_ln1116_6_fu_257_p1();
    void thread_zext_ln1116_fu_163_p1();
    void thread_zext_ln1117_fu_301_p1();
    void thread_zext_ln1265_6_fu_227_p1();
    void thread_zext_ln1265_7_fu_231_p1();
    void thread_zext_ln1265_fu_205_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
