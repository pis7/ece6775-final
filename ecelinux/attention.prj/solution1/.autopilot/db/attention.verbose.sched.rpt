

================================================================
== Vivado HLS Report for 'attention'
================================================================
* Date:           Thu Nov 28 07:55:32 2024

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        attention.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.750 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+------+------+---------+
    |  Latency (cycles) |   Latency (absolute)  |   Interval  | Pipeline|
    |   min   |   max   |    min    |    max    |  min |  max |   Type  |
    +---------+---------+-----------+-----------+------+------+---------+
    |     1229|     1229| 12.290 us | 12.290 us |  1229|  1229|   none  |
    +---------+---------+-----------+-----------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                  |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name    |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- SF_LOOP_1       |       32|       32|         8|          -|          -|     4|    no    |
        | + SF_LOOP_3      |        6|        6|         2|          -|          -|     3|    no    |
        |- CM_LOOP_1       |        4|        4|         1|          -|          -|     4|    no    |
        |- ATTN_2D_LOOP_2  |        8|        8|         2|          2|          2|     4|    yes   |
        +------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 29
* Pipeline : 1
  Pipeline-0 : II = 2, D = 2, States = { 22 23 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 19 
17 --> 18 16 
18 --> 17 
19 --> 20 19 
20 --> 21 
21 --> 22 
22 --> 24 23 
23 --> 22 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.90>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%attn_weights_V_0_3_0_6 = alloca i40"   --->   Operation 30 'alloca' 'attn_weights_V_0_3_0_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%attn_weights_V_0_2_0_6 = alloca i40"   --->   Operation 31 'alloca' 'attn_weights_V_0_2_0_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%attn_weights_V_0_1_0_6 = alloca i40"   --->   Operation 32 'alloca' 'attn_weights_V_0_1_0_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%attn_weights_V_0_0_0_6 = alloca i40"   --->   Operation 33 'alloca' 'attn_weights_V_0_0_0_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%attn_weights_V_2_3_0_4 = alloca i40"   --->   Operation 34 'alloca' 'attn_weights_V_2_3_0_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%attn_weights_V_2_2_0_4 = alloca i40"   --->   Operation 35 'alloca' 'attn_weights_V_2_2_0_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%attn_weights_V_2_1_0_4 = alloca i40"   --->   Operation 36 'alloca' 'attn_weights_V_2_1_0_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%attn_weights_V_2_0_0_4 = alloca i40"   --->   Operation 37 'alloca' 'attn_weights_V_2_0_0_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%attn_weights_V_1_3_0_4 = alloca i40"   --->   Operation 38 'alloca' 'attn_weights_V_1_3_0_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%attn_weights_V_1_2_0_4 = alloca i40"   --->   Operation 39 'alloca' 'attn_weights_V_1_2_0_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%attn_weights_V_1_1_0_4 = alloca i40"   --->   Operation 40 'alloca' 'attn_weights_V_1_1_0_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%attn_weights_V_1_0_0_4 = alloca i40"   --->   Operation 41 'alloca' 'attn_weights_V_1_0_0_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%q_proj_re_0_V = alloca [16 x i40], align 8" [attention.cpp:114]   --->   Operation 42 'alloca' 'q_proj_re_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%k_proj_re_0_V = alloca [16 x i40], align 8" [attention.cpp:115]   --->   Operation 43 'alloca' 'k_proj_re_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%v_proj_re_0_V = alloca [16 x i40], align 8" [attention.cpp:116]   --->   Operation 44 'alloca' 'v_proj_re_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%k_cache_upd_0_V = alloca [12 x i40], align 8" [attention.cpp:158]   --->   Operation 45 'alloca' 'k_cache_upd_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%k_cache_upd_1_V = alloca [12 x i40], align 8" [attention.cpp:158]   --->   Operation 46 'alloca' 'k_cache_upd_1_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%k_cache_upd_2_V = alloca [12 x i40], align 8" [attention.cpp:158]   --->   Operation 47 'alloca' 'k_cache_upd_2_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%k_cache_upd_3_V = alloca [12 x i40], align 8" [attention.cpp:158]   --->   Operation 48 'alloca' 'k_cache_upd_3_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%v_cache_upd_0_V = alloca [12 x i40], align 8" [attention.cpp:159]   --->   Operation 49 'alloca' 'v_cache_upd_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%v_cache_upd_1_V = alloca [12 x i40], align 8" [attention.cpp:159]   --->   Operation 50 'alloca' 'v_cache_upd_1_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%v_cache_upd_2_V = alloca [12 x i40], align 8" [attention.cpp:159]   --->   Operation 51 'alloca' 'v_cache_upd_2_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%v_cache_upd_3_V = alloca [12 x i40], align 8" [attention.cpp:159]   --->   Operation 52 'alloca' 'v_cache_upd_3_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%k_proj_transposed_0 = alloca [16 x i40], align 8" [attention.cpp:167]   --->   Operation 53 'alloca' 'k_proj_transposed_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%k_proj_transposed_1 = alloca [16 x i40], align 8" [attention.cpp:167]   --->   Operation 54 'alloca' 'k_proj_transposed_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%k_proj_transposed_2 = alloca [16 x i40], align 8" [attention.cpp:167]   --->   Operation 55 'alloca' 'k_proj_transposed_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%attn_output_2D_0_V = alloca [16 x i40], align 8" [attention.cpp:215]   --->   Operation 56 'alloca' 'attn_output_2D_0_V' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 40> <Depth = 16> <RAM>
ST_1 : Operation 57 [2/2] (1.76ns)   --->   "call fastcc void @"rms_norm<16>"([16 x i40]* %hidden_states_0_V, [16 x i40]* @ln_weight_in_V)" [attention.cpp:92]   --->   Operation 57 'call' <Predicate = true> <Delay = 1.76> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 58 [2/2] (1.90ns)   --->   "call fastcc void @init_2d_mem([16 x i40]* %q_proj_re_0_V)" [attention.cpp:118]   --->   Operation 58 'call' <Predicate = true> <Delay = 1.90> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 59 [2/2] (1.90ns)   --->   "call fastcc void @init_2d_mem([16 x i40]* %k_proj_re_0_V)" [attention.cpp:119]   --->   Operation 59 'call' <Predicate = true> <Delay = 1.90> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 60 [2/2] (1.90ns)   --->   "call fastcc void @init_2d_mem([16 x i40]* %v_proj_re_0_V)" [attention.cpp:120]   --->   Operation 60 'call' <Predicate = true> <Delay = 1.90> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 2 <SV = 1> <Delay = 0.00>
ST_2 : Operation 61 [1/2] (0.00ns)   --->   "call fastcc void @"rms_norm<16>"([16 x i40]* %hidden_states_0_V, [16 x i40]* @ln_weight_in_V)" [attention.cpp:92]   --->   Operation 61 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 62 [1/2] (0.00ns)   --->   "call fastcc void @init_2d_mem([16 x i40]* %q_proj_re_0_V)" [attention.cpp:118]   --->   Operation 62 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 63 [1/2] (0.00ns)   --->   "call fastcc void @init_2d_mem([16 x i40]* %k_proj_re_0_V)" [attention.cpp:119]   --->   Operation 63 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 64 [1/2] (0.00ns)   --->   "call fastcc void @init_2d_mem([16 x i40]* %v_proj_re_0_V)" [attention.cpp:120]   --->   Operation 64 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 3 <SV = 2> <Delay = 1.76>
ST_3 : Operation 65 [2/2] (1.76ns)   --->   "%call_ret2 = call fastcc { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @quantize_activation([16 x i40]* %hidden_states_0_V)" [attention.cpp:106]   --->   Operation 65 'call' 'call_ret2' <Predicate = true> <Delay = 1.76> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 3.69>
ST_4 : Operation 66 [1/2] (3.69ns)   --->   "%call_ret2 = call fastcc { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @quantize_activation([16 x i40]* %hidden_states_0_V)" [attention.cpp:106]   --->   Operation 66 'call' 'call_ret2' <Predicate = true> <Delay = 3.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 67 [1/1] (0.00ns)   --->   "%scales_0_V = extractvalue { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret2, 0" [attention.cpp:106]   --->   Operation 67 'extractvalue' 'scales_0_V' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 68 [1/1] (0.00ns)   --->   "%quantized_hidden_sta = extractvalue { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret2, 1" [attention.cpp:106]   --->   Operation 68 'extractvalue' 'quantized_hidden_sta' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 69 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_1 = extractvalue { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret2, 2" [attention.cpp:106]   --->   Operation 69 'extractvalue' 'quantized_hidden_sta_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 70 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_2 = extractvalue { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret2, 3" [attention.cpp:106]   --->   Operation 70 'extractvalue' 'quantized_hidden_sta_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 71 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_3 = extractvalue { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret2, 4" [attention.cpp:106]   --->   Operation 71 'extractvalue' 'quantized_hidden_sta_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 72 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_4 = extractvalue { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret2, 5" [attention.cpp:106]   --->   Operation 72 'extractvalue' 'quantized_hidden_sta_4' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 73 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_5 = extractvalue { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret2, 6" [attention.cpp:106]   --->   Operation 73 'extractvalue' 'quantized_hidden_sta_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 74 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_6 = extractvalue { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret2, 7" [attention.cpp:106]   --->   Operation 74 'extractvalue' 'quantized_hidden_sta_6' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 75 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_7 = extractvalue { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret2, 8" [attention.cpp:106]   --->   Operation 75 'extractvalue' 'quantized_hidden_sta_7' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 76 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_8 = extractvalue { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret2, 9" [attention.cpp:106]   --->   Operation 76 'extractvalue' 'quantized_hidden_sta_8' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 77 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_9 = extractvalue { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret2, 10" [attention.cpp:106]   --->   Operation 77 'extractvalue' 'quantized_hidden_sta_9' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 78 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_15 = extractvalue { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret2, 11" [attention.cpp:106]   --->   Operation 78 'extractvalue' 'quantized_hidden_sta_15' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 79 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_10 = extractvalue { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret2, 12" [attention.cpp:106]   --->   Operation 79 'extractvalue' 'quantized_hidden_sta_10' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 80 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_11 = extractvalue { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret2, 13" [attention.cpp:106]   --->   Operation 80 'extractvalue' 'quantized_hidden_sta_11' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 81 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_12 = extractvalue { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret2, 14" [attention.cpp:106]   --->   Operation 81 'extractvalue' 'quantized_hidden_sta_12' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 82 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_13 = extractvalue { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret2, 15" [attention.cpp:106]   --->   Operation 82 'extractvalue' 'quantized_hidden_sta_13' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 83 [1/1] (0.00ns)   --->   "%quantized_hidden_sta_14 = extractvalue { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret2, 16" [attention.cpp:106]   --->   Operation 83 'extractvalue' 'quantized_hidden_sta_14' <Predicate = true> <Delay = 0.00>

State 5 <SV = 4> <Delay = 8.75>
ST_5 : Operation 84 [2/2] (8.75ns)   --->   "call fastcc void @linear_forward_no_mu(i8 %quantized_hidden_sta, i8 %quantized_hidden_sta_1, i8 %quantized_hidden_sta_2, i8 %quantized_hidden_sta_3, i8 %quantized_hidden_sta_4, i8 %quantized_hidden_sta_5, i8 %quantized_hidden_sta_6, i8 %quantized_hidden_sta_7, i8 %quantized_hidden_sta_8, i8 %quantized_hidden_sta_9, i8 %quantized_hidden_sta_15, i8 %quantized_hidden_sta_10, i8 %quantized_hidden_sta_11, i8 %quantized_hidden_sta_12, i8 %quantized_hidden_sta_13, i8 %quantized_hidden_sta_14, [16 x i40]* %q_proj_re_0_V, i40 %scales_0_V, [16 x i8]* @q_weights_0, [16 x i8]* @q_weights_1, [16 x i8]* @q_weights_2, [16 x i8]* @q_weights_3, i22 1256162)" [attention.cpp:122]   --->   Operation 84 'call' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 85 [2/2] (8.75ns)   --->   "call fastcc void @linear_forward_no_mu(i8 %quantized_hidden_sta, i8 %quantized_hidden_sta_1, i8 %quantized_hidden_sta_2, i8 %quantized_hidden_sta_3, i8 %quantized_hidden_sta_4, i8 %quantized_hidden_sta_5, i8 %quantized_hidden_sta_6, i8 %quantized_hidden_sta_7, i8 %quantized_hidden_sta_8, i8 %quantized_hidden_sta_9, i8 %quantized_hidden_sta_15, i8 %quantized_hidden_sta_10, i8 %quantized_hidden_sta_11, i8 %quantized_hidden_sta_12, i8 %quantized_hidden_sta_13, i8 %quantized_hidden_sta_14, [16 x i40]* %k_proj_re_0_V, i40 %scales_0_V, [16 x i8]* @k_weights_0, [16 x i8]* @k_weights_1, [16 x i8]* @k_weights_2, [16 x i8]* @k_weights_3, i22 1234323)" [attention.cpp:129]   --->   Operation 85 'call' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 6 <SV = 5> <Delay = 0.00>
ST_6 : Operation 86 [1/2] (0.00ns)   --->   "call fastcc void @linear_forward_no_mu(i8 %quantized_hidden_sta, i8 %quantized_hidden_sta_1, i8 %quantized_hidden_sta_2, i8 %quantized_hidden_sta_3, i8 %quantized_hidden_sta_4, i8 %quantized_hidden_sta_5, i8 %quantized_hidden_sta_6, i8 %quantized_hidden_sta_7, i8 %quantized_hidden_sta_8, i8 %quantized_hidden_sta_9, i8 %quantized_hidden_sta_15, i8 %quantized_hidden_sta_10, i8 %quantized_hidden_sta_11, i8 %quantized_hidden_sta_12, i8 %quantized_hidden_sta_13, i8 %quantized_hidden_sta_14, [16 x i40]* %q_proj_re_0_V, i40 %scales_0_V, [16 x i8]* @q_weights_0, [16 x i8]* @q_weights_1, [16 x i8]* @q_weights_2, [16 x i8]* @q_weights_3, i22 1256162)" [attention.cpp:122]   --->   Operation 86 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 87 [1/2] (0.00ns)   --->   "call fastcc void @linear_forward_no_mu(i8 %quantized_hidden_sta, i8 %quantized_hidden_sta_1, i8 %quantized_hidden_sta_2, i8 %quantized_hidden_sta_3, i8 %quantized_hidden_sta_4, i8 %quantized_hidden_sta_5, i8 %quantized_hidden_sta_6, i8 %quantized_hidden_sta_7, i8 %quantized_hidden_sta_8, i8 %quantized_hidden_sta_9, i8 %quantized_hidden_sta_15, i8 %quantized_hidden_sta_10, i8 %quantized_hidden_sta_11, i8 %quantized_hidden_sta_12, i8 %quantized_hidden_sta_13, i8 %quantized_hidden_sta_14, [16 x i40]* %k_proj_re_0_V, i40 %scales_0_V, [16 x i8]* @k_weights_0, [16 x i8]* @k_weights_1, [16 x i8]* @k_weights_2, [16 x i8]* @k_weights_3, i22 1234323)" [attention.cpp:129]   --->   Operation 87 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 7 <SV = 6> <Delay = 8.75>
ST_7 : Operation 88 [2/2] (8.75ns)   --->   "call fastcc void @linear_forward_no_mu(i8 %quantized_hidden_sta, i8 %quantized_hidden_sta_1, i8 %quantized_hidden_sta_2, i8 %quantized_hidden_sta_3, i8 %quantized_hidden_sta_4, i8 %quantized_hidden_sta_5, i8 %quantized_hidden_sta_6, i8 %quantized_hidden_sta_7, i8 %quantized_hidden_sta_8, i8 %quantized_hidden_sta_9, i8 %quantized_hidden_sta_15, i8 %quantized_hidden_sta_10, i8 %quantized_hidden_sta_11, i8 %quantized_hidden_sta_12, i8 %quantized_hidden_sta_13, i8 %quantized_hidden_sta_14, [16 x i40]* %v_proj_re_0_V, i40 %scales_0_V, [16 x i8]* @v_weights_0, [16 x i8]* @v_weights_1, [16 x i8]* @v_weights_2, [16 x i8]* @v_weights_3, i22 716061)" [attention.cpp:136]   --->   Operation 88 'call' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_7 : Operation 89 [2/2] (1.81ns)   --->   "%call_ret3 = call fastcc { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } @reshape_2D_to_3D([16 x i40]* %q_proj_re_0_V)" [attention.cpp:148]   --->   Operation 89 'call' 'call_ret3' <Predicate = true> <Delay = 1.81> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_7 : Operation 90 [2/2] (1.81ns)   --->   "%call_ret4 = call fastcc { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } @reshape_2D_to_3D([16 x i40]* %k_proj_re_0_V)" [attention.cpp:149]   --->   Operation 90 'call' 'call_ret4' <Predicate = true> <Delay = 1.81> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 8 <SV = 7> <Delay = 0.00>
ST_8 : Operation 91 [1/2] (0.00ns)   --->   "call fastcc void @linear_forward_no_mu(i8 %quantized_hidden_sta, i8 %quantized_hidden_sta_1, i8 %quantized_hidden_sta_2, i8 %quantized_hidden_sta_3, i8 %quantized_hidden_sta_4, i8 %quantized_hidden_sta_5, i8 %quantized_hidden_sta_6, i8 %quantized_hidden_sta_7, i8 %quantized_hidden_sta_8, i8 %quantized_hidden_sta_9, i8 %quantized_hidden_sta_15, i8 %quantized_hidden_sta_10, i8 %quantized_hidden_sta_11, i8 %quantized_hidden_sta_12, i8 %quantized_hidden_sta_13, i8 %quantized_hidden_sta_14, [16 x i40]* %v_proj_re_0_V, i40 %scales_0_V, [16 x i8]* @v_weights_0, [16 x i8]* @v_weights_1, [16 x i8]* @v_weights_2, [16 x i8]* @v_weights_3, i22 716061)" [attention.cpp:136]   --->   Operation 91 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 92 [1/2] (0.00ns)   --->   "%call_ret3 = call fastcc { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } @reshape_2D_to_3D([16 x i40]* %q_proj_re_0_V)" [attention.cpp:148]   --->   Operation 92 'call' 'call_ret3' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 93 [1/1] (0.00ns)   --->   "%q_proj_V_0 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret3, 0" [attention.cpp:148]   --->   Operation 93 'extractvalue' 'q_proj_V_0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 94 [1/1] (0.00ns)   --->   "%q_proj_V_0_1 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret3, 1" [attention.cpp:148]   --->   Operation 94 'extractvalue' 'q_proj_V_0_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 95 [1/1] (0.00ns)   --->   "%q_proj_V_0_2 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret3, 2" [attention.cpp:148]   --->   Operation 95 'extractvalue' 'q_proj_V_0_2' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 96 [1/1] (0.00ns)   --->   "%q_proj_V_0_3 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret3, 3" [attention.cpp:148]   --->   Operation 96 'extractvalue' 'q_proj_V_0_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 97 [1/1] (0.00ns)   --->   "%q_proj_V_1 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret3, 4" [attention.cpp:148]   --->   Operation 97 'extractvalue' 'q_proj_V_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 98 [1/1] (0.00ns)   --->   "%q_proj_V_1_1 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret3, 5" [attention.cpp:148]   --->   Operation 98 'extractvalue' 'q_proj_V_1_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 99 [1/1] (0.00ns)   --->   "%q_proj_V_1_2 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret3, 6" [attention.cpp:148]   --->   Operation 99 'extractvalue' 'q_proj_V_1_2' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 100 [1/1] (0.00ns)   --->   "%q_proj_V_1_3 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret3, 7" [attention.cpp:148]   --->   Operation 100 'extractvalue' 'q_proj_V_1_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 101 [1/1] (0.00ns)   --->   "%q_proj_V_2 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret3, 8" [attention.cpp:148]   --->   Operation 101 'extractvalue' 'q_proj_V_2' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 102 [1/1] (0.00ns)   --->   "%q_proj_V_2_1 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret3, 9" [attention.cpp:148]   --->   Operation 102 'extractvalue' 'q_proj_V_2_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 103 [1/1] (0.00ns)   --->   "%q_proj_V_2_2 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret3, 10" [attention.cpp:148]   --->   Operation 103 'extractvalue' 'q_proj_V_2_2' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 104 [1/1] (0.00ns)   --->   "%q_proj_V_2_3 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret3, 11" [attention.cpp:148]   --->   Operation 104 'extractvalue' 'q_proj_V_2_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 105 [1/1] (0.00ns)   --->   "%q_proj_V_3 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret3, 12" [attention.cpp:148]   --->   Operation 105 'extractvalue' 'q_proj_V_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 106 [1/1] (0.00ns)   --->   "%q_proj_V_3_1 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret3, 13" [attention.cpp:148]   --->   Operation 106 'extractvalue' 'q_proj_V_3_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 107 [1/1] (0.00ns)   --->   "%q_proj_V_3_2 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret3, 14" [attention.cpp:148]   --->   Operation 107 'extractvalue' 'q_proj_V_3_2' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 108 [1/1] (0.00ns)   --->   "%q_proj_V_3_3 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret3, 15" [attention.cpp:148]   --->   Operation 108 'extractvalue' 'q_proj_V_3_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 109 [1/2] (0.00ns)   --->   "%call_ret4 = call fastcc { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } @reshape_2D_to_3D([16 x i40]* %k_proj_re_0_V)" [attention.cpp:149]   --->   Operation 109 'call' 'call_ret4' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 110 [1/1] (0.00ns)   --->   "%k_proj_V_0 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret4, 0" [attention.cpp:149]   --->   Operation 110 'extractvalue' 'k_proj_V_0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 111 [1/1] (0.00ns)   --->   "%k_proj_V_0_1 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret4, 1" [attention.cpp:149]   --->   Operation 111 'extractvalue' 'k_proj_V_0_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 112 [1/1] (0.00ns)   --->   "%k_proj_V_0_2 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret4, 2" [attention.cpp:149]   --->   Operation 112 'extractvalue' 'k_proj_V_0_2' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 113 [1/1] (0.00ns)   --->   "%k_proj_V_0_3 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret4, 3" [attention.cpp:149]   --->   Operation 113 'extractvalue' 'k_proj_V_0_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 114 [1/1] (0.00ns)   --->   "%k_proj_V_1 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret4, 4" [attention.cpp:149]   --->   Operation 114 'extractvalue' 'k_proj_V_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 115 [1/1] (0.00ns)   --->   "%k_proj_V_1_1 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret4, 5" [attention.cpp:149]   --->   Operation 115 'extractvalue' 'k_proj_V_1_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 116 [1/1] (0.00ns)   --->   "%k_proj_V_1_2 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret4, 6" [attention.cpp:149]   --->   Operation 116 'extractvalue' 'k_proj_V_1_2' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 117 [1/1] (0.00ns)   --->   "%k_proj_V_1_3 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret4, 7" [attention.cpp:149]   --->   Operation 117 'extractvalue' 'k_proj_V_1_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 118 [1/1] (0.00ns)   --->   "%k_proj_V_2 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret4, 8" [attention.cpp:149]   --->   Operation 118 'extractvalue' 'k_proj_V_2' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 119 [1/1] (0.00ns)   --->   "%k_proj_V_2_1 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret4, 9" [attention.cpp:149]   --->   Operation 119 'extractvalue' 'k_proj_V_2_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 120 [1/1] (0.00ns)   --->   "%k_proj_V_2_2 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret4, 10" [attention.cpp:149]   --->   Operation 120 'extractvalue' 'k_proj_V_2_2' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 121 [1/1] (0.00ns)   --->   "%k_proj_V_2_3 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret4, 11" [attention.cpp:149]   --->   Operation 121 'extractvalue' 'k_proj_V_2_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 122 [1/1] (0.00ns)   --->   "%k_proj_V_3 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret4, 12" [attention.cpp:149]   --->   Operation 122 'extractvalue' 'k_proj_V_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 123 [1/1] (0.00ns)   --->   "%k_proj_V_3_1 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret4, 13" [attention.cpp:149]   --->   Operation 123 'extractvalue' 'k_proj_V_3_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 124 [1/1] (0.00ns)   --->   "%k_proj_V_3_2 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret4, 14" [attention.cpp:149]   --->   Operation 124 'extractvalue' 'k_proj_V_3_2' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 125 [1/1] (0.00ns)   --->   "%k_proj_V_3_3 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret4, 15" [attention.cpp:149]   --->   Operation 125 'extractvalue' 'k_proj_V_3_3' <Predicate = true> <Delay = 0.00>

State 9 <SV = 8> <Delay = 1.81>
ST_9 : Operation 126 [2/2] (1.81ns)   --->   "%call_ret5 = call fastcc { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } @reshape_2D_to_3D([16 x i40]* %v_proj_re_0_V)" [attention.cpp:150]   --->   Operation 126 'call' 'call_ret5' <Predicate = true> <Delay = 1.81> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 127 [2/2] (0.00ns)   --->   "%call_ret1 = call fastcc { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } @apply_rotary_pos_emb(i40 %q_proj_V_0, i40 %q_proj_V_0_1, i40 %q_proj_V_0_2, i40 %q_proj_V_0_3, i40 %q_proj_V_1, i40 %q_proj_V_1_1, i40 %q_proj_V_1_2, i40 %q_proj_V_1_3, i40 %q_proj_V_2, i40 %q_proj_V_2_1, i40 %q_proj_V_2_2, i40 %q_proj_V_2_3, i40 %q_proj_V_3, i40 %q_proj_V_3_1, i40 %q_proj_V_3_2, i40 %q_proj_V_3_3, i40 %k_proj_V_0, i40 %k_proj_V_0_1, i40 %k_proj_V_0_2, i40 %k_proj_V_0_3, i40 %k_proj_V_1, i40 %k_proj_V_1_1, i40 %k_proj_V_1_2, i40 %k_proj_V_1_3, i40 %k_proj_V_2, i40 %k_proj_V_2_1, i40 %k_proj_V_2_2, i40 %k_proj_V_2_3, i40 %k_proj_V_3, i40 %k_proj_V_3_1, i40 %k_proj_V_3_2, i40 %k_proj_V_3_3)" [attention.cpp:155]   --->   Operation 127 'call' 'call_ret1' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 10 <SV = 9> <Delay = 1.76>
ST_10 : Operation 128 [1/2] (0.00ns)   --->   "%call_ret5 = call fastcc { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } @reshape_2D_to_3D([16 x i40]* %v_proj_re_0_V)" [attention.cpp:150]   --->   Operation 128 'call' 'call_ret5' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_10 : Operation 129 [1/1] (0.00ns)   --->   "%v_proj_V_0 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret5, 0" [attention.cpp:150]   --->   Operation 129 'extractvalue' 'v_proj_V_0' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 130 [1/1] (0.00ns)   --->   "%v_proj_V_0_1 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret5, 1" [attention.cpp:150]   --->   Operation 130 'extractvalue' 'v_proj_V_0_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 131 [1/1] (0.00ns)   --->   "%v_proj_V_0_2 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret5, 2" [attention.cpp:150]   --->   Operation 131 'extractvalue' 'v_proj_V_0_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 132 [1/1] (0.00ns)   --->   "%v_proj_V_0_3 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret5, 3" [attention.cpp:150]   --->   Operation 132 'extractvalue' 'v_proj_V_0_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 133 [1/1] (0.00ns)   --->   "%v_proj_V_1 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret5, 4" [attention.cpp:150]   --->   Operation 133 'extractvalue' 'v_proj_V_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 134 [1/1] (0.00ns)   --->   "%v_proj_V_1_1 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret5, 5" [attention.cpp:150]   --->   Operation 134 'extractvalue' 'v_proj_V_1_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 135 [1/1] (0.00ns)   --->   "%v_proj_V_1_2 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret5, 6" [attention.cpp:150]   --->   Operation 135 'extractvalue' 'v_proj_V_1_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 136 [1/1] (0.00ns)   --->   "%v_proj_V_1_3 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret5, 7" [attention.cpp:150]   --->   Operation 136 'extractvalue' 'v_proj_V_1_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 137 [1/1] (0.00ns)   --->   "%v_proj_V_2 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret5, 8" [attention.cpp:150]   --->   Operation 137 'extractvalue' 'v_proj_V_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 138 [1/1] (0.00ns)   --->   "%v_proj_V_2_1 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret5, 9" [attention.cpp:150]   --->   Operation 138 'extractvalue' 'v_proj_V_2_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 139 [1/1] (0.00ns)   --->   "%v_proj_V_2_2 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret5, 10" [attention.cpp:150]   --->   Operation 139 'extractvalue' 'v_proj_V_2_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 140 [1/1] (0.00ns)   --->   "%v_proj_V_2_3 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret5, 11" [attention.cpp:150]   --->   Operation 140 'extractvalue' 'v_proj_V_2_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 141 [1/1] (0.00ns)   --->   "%v_proj_V_3 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret5, 12" [attention.cpp:150]   --->   Operation 141 'extractvalue' 'v_proj_V_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 142 [1/1] (0.00ns)   --->   "%v_proj_V_3_1 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret5, 13" [attention.cpp:150]   --->   Operation 142 'extractvalue' 'v_proj_V_3_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 143 [1/1] (0.00ns)   --->   "%v_proj_V_3_2 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret5, 14" [attention.cpp:150]   --->   Operation 143 'extractvalue' 'v_proj_V_3_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 144 [1/1] (0.00ns)   --->   "%v_proj_V_3_3 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret5, 15" [attention.cpp:150]   --->   Operation 144 'extractvalue' 'v_proj_V_3_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 145 [1/2] (0.00ns)   --->   "%call_ret1 = call fastcc { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } @apply_rotary_pos_emb(i40 %q_proj_V_0, i40 %q_proj_V_0_1, i40 %q_proj_V_0_2, i40 %q_proj_V_0_3, i40 %q_proj_V_1, i40 %q_proj_V_1_1, i40 %q_proj_V_1_2, i40 %q_proj_V_1_3, i40 %q_proj_V_2, i40 %q_proj_V_2_1, i40 %q_proj_V_2_2, i40 %q_proj_V_2_3, i40 %q_proj_V_3, i40 %q_proj_V_3_1, i40 %q_proj_V_3_2, i40 %q_proj_V_3_3, i40 %k_proj_V_0, i40 %k_proj_V_0_1, i40 %k_proj_V_0_2, i40 %k_proj_V_0_3, i40 %k_proj_V_1, i40 %k_proj_V_1_1, i40 %k_proj_V_1_2, i40 %k_proj_V_1_3, i40 %k_proj_V_2, i40 %k_proj_V_2_1, i40 %k_proj_V_2_2, i40 %k_proj_V_2_3, i40 %k_proj_V_3, i40 %k_proj_V_3_1, i40 %k_proj_V_3_2, i40 %k_proj_V_3_3)" [attention.cpp:155]   --->   Operation 145 'call' 'call_ret1' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_10 : Operation 146 [1/1] (0.00ns)   --->   "%q_embed_V_0 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret1, 0" [attention.cpp:155]   --->   Operation 146 'extractvalue' 'q_embed_V_0' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 147 [1/1] (0.00ns)   --->   "%q_embed_V_0_1 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret1, 1" [attention.cpp:155]   --->   Operation 147 'extractvalue' 'q_embed_V_0_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 148 [1/1] (0.00ns)   --->   "%q_embed_V_0_2 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret1, 2" [attention.cpp:155]   --->   Operation 148 'extractvalue' 'q_embed_V_0_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 149 [1/1] (0.00ns)   --->   "%q_embed_V_0_3 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret1, 3" [attention.cpp:155]   --->   Operation 149 'extractvalue' 'q_embed_V_0_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 150 [1/1] (0.00ns)   --->   "%q_embed_V_1 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret1, 4" [attention.cpp:155]   --->   Operation 150 'extractvalue' 'q_embed_V_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 151 [1/1] (0.00ns)   --->   "%q_embed_V_1_1 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret1, 5" [attention.cpp:155]   --->   Operation 151 'extractvalue' 'q_embed_V_1_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 152 [1/1] (0.00ns)   --->   "%q_embed_V_1_2 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret1, 6" [attention.cpp:155]   --->   Operation 152 'extractvalue' 'q_embed_V_1_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 153 [1/1] (0.00ns)   --->   "%q_embed_V_1_3 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret1, 7" [attention.cpp:155]   --->   Operation 153 'extractvalue' 'q_embed_V_1_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 154 [1/1] (0.00ns)   --->   "%q_embed_V_2 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret1, 8" [attention.cpp:155]   --->   Operation 154 'extractvalue' 'q_embed_V_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 155 [1/1] (0.00ns)   --->   "%q_embed_V_2_1 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret1, 9" [attention.cpp:155]   --->   Operation 155 'extractvalue' 'q_embed_V_2_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 156 [1/1] (0.00ns)   --->   "%q_embed_V_2_2 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret1, 10" [attention.cpp:155]   --->   Operation 156 'extractvalue' 'q_embed_V_2_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 157 [1/1] (0.00ns)   --->   "%q_embed_V_2_3 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret1, 11" [attention.cpp:155]   --->   Operation 157 'extractvalue' 'q_embed_V_2_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 158 [1/1] (0.00ns)   --->   "%q_embed_V_3 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret1, 12" [attention.cpp:155]   --->   Operation 158 'extractvalue' 'q_embed_V_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 159 [1/1] (0.00ns)   --->   "%q_embed_V_3_1 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret1, 13" [attention.cpp:155]   --->   Operation 159 'extractvalue' 'q_embed_V_3_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 160 [1/1] (0.00ns)   --->   "%q_embed_V_3_2 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret1, 14" [attention.cpp:155]   --->   Operation 160 'extractvalue' 'q_embed_V_3_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 161 [1/1] (0.00ns)   --->   "%q_embed_V_3_3 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret1, 15" [attention.cpp:155]   --->   Operation 161 'extractvalue' 'q_embed_V_3_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 162 [1/1] (0.00ns)   --->   "%k_embed_V_0 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret1, 16" [attention.cpp:155]   --->   Operation 162 'extractvalue' 'k_embed_V_0' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 163 [1/1] (0.00ns)   --->   "%k_embed_V_0_1 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret1, 17" [attention.cpp:155]   --->   Operation 163 'extractvalue' 'k_embed_V_0_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 164 [1/1] (0.00ns)   --->   "%k_embed_V_0_2 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret1, 18" [attention.cpp:155]   --->   Operation 164 'extractvalue' 'k_embed_V_0_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 165 [1/1] (0.00ns)   --->   "%k_embed_V_0_3 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret1, 19" [attention.cpp:155]   --->   Operation 165 'extractvalue' 'k_embed_V_0_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 166 [1/1] (0.00ns)   --->   "%k_embed_V_1 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret1, 20" [attention.cpp:155]   --->   Operation 166 'extractvalue' 'k_embed_V_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 167 [1/1] (0.00ns)   --->   "%k_embed_V_1_1 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret1, 21" [attention.cpp:155]   --->   Operation 167 'extractvalue' 'k_embed_V_1_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 168 [1/1] (0.00ns)   --->   "%k_embed_V_1_2 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret1, 22" [attention.cpp:155]   --->   Operation 168 'extractvalue' 'k_embed_V_1_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 169 [1/1] (0.00ns)   --->   "%k_embed_V_1_3 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret1, 23" [attention.cpp:155]   --->   Operation 169 'extractvalue' 'k_embed_V_1_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 170 [1/1] (0.00ns)   --->   "%k_embed_V_2 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret1, 24" [attention.cpp:155]   --->   Operation 170 'extractvalue' 'k_embed_V_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 171 [1/1] (0.00ns)   --->   "%k_embed_V_2_1 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret1, 25" [attention.cpp:155]   --->   Operation 171 'extractvalue' 'k_embed_V_2_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 172 [1/1] (0.00ns)   --->   "%k_embed_V_2_2 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret1, 26" [attention.cpp:155]   --->   Operation 172 'extractvalue' 'k_embed_V_2_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 173 [1/1] (0.00ns)   --->   "%k_embed_V_2_3 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret1, 27" [attention.cpp:155]   --->   Operation 173 'extractvalue' 'k_embed_V_2_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 174 [1/1] (0.00ns)   --->   "%k_embed_V_3 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret1, 28" [attention.cpp:155]   --->   Operation 174 'extractvalue' 'k_embed_V_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 175 [1/1] (0.00ns)   --->   "%k_embed_V_3_1 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret1, 29" [attention.cpp:155]   --->   Operation 175 'extractvalue' 'k_embed_V_3_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 176 [1/1] (0.00ns)   --->   "%k_embed_V_3_2 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret1, 30" [attention.cpp:155]   --->   Operation 176 'extractvalue' 'k_embed_V_3_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 177 [1/1] (0.00ns)   --->   "%k_embed_V_3_3 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret1, 31" [attention.cpp:155]   --->   Operation 177 'extractvalue' 'k_embed_V_3_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 178 [2/2] (1.76ns)   --->   "call fastcc void @cache_update([8 x i40]* @k_cache_V_0, [8 x i40]* @k_cache_V_1, [8 x i40]* @k_cache_V_2, [8 x i40]* @k_cache_V_3, [12 x i40]* %k_cache_upd_0_V, [12 x i40]* %k_cache_upd_1_V, [12 x i40]* %k_cache_upd_2_V, [12 x i40]* %k_cache_upd_3_V, i40 %k_embed_V_0, i40 %k_embed_V_0_1, i40 %k_embed_V_0_2, i40 %k_embed_V_0_3, i40 %k_embed_V_1, i40 %k_embed_V_1_1, i40 %k_embed_V_1_2, i40 %k_embed_V_1_3, i40 %k_embed_V_2, i40 %k_embed_V_2_1, i40 %k_embed_V_2_2, i40 %k_embed_V_2_3, i40 %k_embed_V_3, i40 %k_embed_V_3_1, i40 %k_embed_V_3_2, i40 %k_embed_V_3_3)" [attention.cpp:160]   --->   Operation 178 'call' <Predicate = true> <Delay = 1.76> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 10> <Delay = 0.00>
ST_11 : Operation 179 [1/2] (0.00ns)   --->   "call fastcc void @cache_update([8 x i40]* @k_cache_V_0, [8 x i40]* @k_cache_V_1, [8 x i40]* @k_cache_V_2, [8 x i40]* @k_cache_V_3, [12 x i40]* %k_cache_upd_0_V, [12 x i40]* %k_cache_upd_1_V, [12 x i40]* %k_cache_upd_2_V, [12 x i40]* %k_cache_upd_3_V, i40 %k_embed_V_0, i40 %k_embed_V_0_1, i40 %k_embed_V_0_2, i40 %k_embed_V_0_3, i40 %k_embed_V_1, i40 %k_embed_V_1_1, i40 %k_embed_V_1_2, i40 %k_embed_V_1_3, i40 %k_embed_V_2, i40 %k_embed_V_2_1, i40 %k_embed_V_2_2, i40 %k_embed_V_2_3, i40 %k_embed_V_3, i40 %k_embed_V_3_1, i40 %k_embed_V_3_2, i40 %k_embed_V_3_3)" [attention.cpp:160]   --->   Operation 179 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 11> <Delay = 1.76>
ST_12 : Operation 180 [2/2] (1.76ns)   --->   "call fastcc void @cache_update([8 x i40]* @v_cache_V_0, [8 x i40]* @v_cache_V_1, [8 x i40]* @v_cache_V_2, [8 x i40]* @v_cache_V_3, [12 x i40]* %v_cache_upd_0_V, [12 x i40]* %v_cache_upd_1_V, [12 x i40]* %v_cache_upd_2_V, [12 x i40]* %v_cache_upd_3_V, i40 %v_proj_V_0, i40 %v_proj_V_0_1, i40 %v_proj_V_0_2, i40 %v_proj_V_0_3, i40 %v_proj_V_1, i40 %v_proj_V_1_1, i40 %v_proj_V_1_2, i40 %v_proj_V_1_3, i40 %v_proj_V_2, i40 %v_proj_V_2_1, i40 %v_proj_V_2_2, i40 %v_proj_V_2_3, i40 %v_proj_V_3, i40 %v_proj_V_3_1, i40 %v_proj_V_3_2, i40 %v_proj_V_3_3)" [attention.cpp:163]   --->   Operation 180 'call' <Predicate = true> <Delay = 1.76> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_12 : Operation 181 [2/2] (0.00ns)   --->   "call fastcc void @transpose_last_two_d([12 x i40]* %k_cache_upd_0_V, [12 x i40]* %k_cache_upd_1_V, [12 x i40]* %k_cache_upd_2_V, [12 x i40]* %k_cache_upd_3_V, [16 x i40]* %k_proj_transposed_0, [16 x i40]* %k_proj_transposed_1, [16 x i40]* %k_proj_transposed_2)" [attention.cpp:168]   --->   Operation 181 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 13 <SV = 12> <Delay = 0.00>
ST_13 : Operation 182 [1/2] (0.00ns)   --->   "call fastcc void @cache_update([8 x i40]* @v_cache_V_0, [8 x i40]* @v_cache_V_1, [8 x i40]* @v_cache_V_2, [8 x i40]* @v_cache_V_3, [12 x i40]* %v_cache_upd_0_V, [12 x i40]* %v_cache_upd_1_V, [12 x i40]* %v_cache_upd_2_V, [12 x i40]* %v_cache_upd_3_V, i40 %v_proj_V_0, i40 %v_proj_V_0_1, i40 %v_proj_V_0_2, i40 %v_proj_V_0_3, i40 %v_proj_V_1, i40 %v_proj_V_1_1, i40 %v_proj_V_1_2, i40 %v_proj_V_1_3, i40 %v_proj_V_2, i40 %v_proj_V_2_1, i40 %v_proj_V_2_2, i40 %v_proj_V_2_3, i40 %v_proj_V_3, i40 %v_proj_V_3_1, i40 %v_proj_V_3_2, i40 %v_proj_V_3_3)" [attention.cpp:163]   --->   Operation 182 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_13 : Operation 183 [1/2] (0.00ns)   --->   "call fastcc void @transpose_last_two_d([12 x i40]* %k_cache_upd_0_V, [12 x i40]* %k_cache_upd_1_V, [12 x i40]* %k_cache_upd_2_V, [12 x i40]* %k_cache_upd_3_V, [16 x i40]* %k_proj_transposed_0, [16 x i40]* %k_proj_transposed_1, [16 x i40]* %k_proj_transposed_2)" [attention.cpp:168]   --->   Operation 183 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 14 <SV = 13> <Delay = 0.00>
ST_14 : Operation 184 [2/2] (0.00ns)   --->   "%call_ret = call fastcc { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } @GEMM_3D_float(i40 %q_embed_V_0, i40 %q_embed_V_0_1, i40 %q_embed_V_0_2, i40 %q_embed_V_0_3, i40 %q_embed_V_1, i40 %q_embed_V_1_1, i40 %q_embed_V_1_2, i40 %q_embed_V_1_3, i40 %q_embed_V_2, i40 %q_embed_V_2_1, i40 %q_embed_V_2_2, i40 %q_embed_V_2_3, i40 %q_embed_V_3, i40 %q_embed_V_3_1, i40 %q_embed_V_3_2, i40 %q_embed_V_3_3, [16 x i40]* %k_proj_transposed_0, [16 x i40]* %k_proj_transposed_1, [16 x i40]* %k_proj_transposed_2)" [attention.cpp:172]   --->   Operation 184 'call' 'call_ret' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 15 <SV = 14> <Delay = 1.76>
ST_15 : Operation 185 [1/2] (0.00ns)   --->   "%call_ret = call fastcc { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } @GEMM_3D_float(i40 %q_embed_V_0, i40 %q_embed_V_0_1, i40 %q_embed_V_0_2, i40 %q_embed_V_0_3, i40 %q_embed_V_1, i40 %q_embed_V_1_1, i40 %q_embed_V_1_2, i40 %q_embed_V_1_3, i40 %q_embed_V_2, i40 %q_embed_V_2_1, i40 %q_embed_V_2_2, i40 %q_embed_V_2_3, i40 %q_embed_V_3, i40 %q_embed_V_3_1, i40 %q_embed_V_3_2, i40 %q_embed_V_3_3, [16 x i40]* %k_proj_transposed_0, [16 x i40]* %k_proj_transposed_1, [16 x i40]* %k_proj_transposed_2)" [attention.cpp:172]   --->   Operation 185 'call' 'call_ret' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_15 : Operation 186 [1/1] (0.00ns)   --->   "%attn_weights_V_0_0 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret, 0" [attention.cpp:172]   --->   Operation 186 'extractvalue' 'attn_weights_V_0_0' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 187 [1/1] (0.00ns)   --->   "%attn_weights_V_0_1 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret, 1" [attention.cpp:172]   --->   Operation 187 'extractvalue' 'attn_weights_V_0_1' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 188 [1/1] (0.00ns)   --->   "%attn_weights_V_0_2 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret, 2" [attention.cpp:172]   --->   Operation 188 'extractvalue' 'attn_weights_V_0_2' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 189 [1/1] (0.00ns)   --->   "%attn_weights_V_0_3 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret, 3" [attention.cpp:172]   --->   Operation 189 'extractvalue' 'attn_weights_V_0_3' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 190 [1/1] (0.00ns)   --->   "%attn_weights_V_1_0 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret, 4" [attention.cpp:172]   --->   Operation 190 'extractvalue' 'attn_weights_V_1_0' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 191 [1/1] (0.00ns)   --->   "%attn_weights_V_1_1 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret, 5" [attention.cpp:172]   --->   Operation 191 'extractvalue' 'attn_weights_V_1_1' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 192 [1/1] (0.00ns)   --->   "%attn_weights_V_1_2 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret, 6" [attention.cpp:172]   --->   Operation 192 'extractvalue' 'attn_weights_V_1_2' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 193 [1/1] (0.00ns)   --->   "%attn_weights_V_1_3 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret, 7" [attention.cpp:172]   --->   Operation 193 'extractvalue' 'attn_weights_V_1_3' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 194 [1/1] (0.00ns)   --->   "%attn_weights_V_2_0 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret, 8" [attention.cpp:172]   --->   Operation 194 'extractvalue' 'attn_weights_V_2_0' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 195 [1/1] (0.00ns)   --->   "%attn_weights_V_2_1 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret, 9" [attention.cpp:172]   --->   Operation 195 'extractvalue' 'attn_weights_V_2_1' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 196 [1/1] (0.00ns)   --->   "%attn_weights_V_2_2 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret, 10" [attention.cpp:172]   --->   Operation 196 'extractvalue' 'attn_weights_V_2_2' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 197 [1/1] (0.00ns)   --->   "%attn_weights_V_2_3 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret, 11" [attention.cpp:172]   --->   Operation 197 'extractvalue' 'attn_weights_V_2_3' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 198 [1/1] (1.76ns)   --->   "store i40 %attn_weights_V_1_0, i40* %attn_weights_V_1_0_0_4" [attention.cpp:185]   --->   Operation 198 'store' <Predicate = true> <Delay = 1.76>
ST_15 : Operation 199 [1/1] (1.76ns)   --->   "store i40 %attn_weights_V_1_1, i40* %attn_weights_V_1_1_0_4" [attention.cpp:185]   --->   Operation 199 'store' <Predicate = true> <Delay = 1.76>
ST_15 : Operation 200 [1/1] (1.76ns)   --->   "store i40 %attn_weights_V_1_2, i40* %attn_weights_V_1_2_0_4" [attention.cpp:185]   --->   Operation 200 'store' <Predicate = true> <Delay = 1.76>
ST_15 : Operation 201 [1/1] (1.76ns)   --->   "store i40 %attn_weights_V_1_3, i40* %attn_weights_V_1_3_0_4" [attention.cpp:185]   --->   Operation 201 'store' <Predicate = true> <Delay = 1.76>
ST_15 : Operation 202 [1/1] (1.76ns)   --->   "store i40 %attn_weights_V_2_0, i40* %attn_weights_V_2_0_0_4" [attention.cpp:185]   --->   Operation 202 'store' <Predicate = true> <Delay = 1.76>
ST_15 : Operation 203 [1/1] (1.76ns)   --->   "store i40 %attn_weights_V_2_1, i40* %attn_weights_V_2_1_0_4" [attention.cpp:185]   --->   Operation 203 'store' <Predicate = true> <Delay = 1.76>
ST_15 : Operation 204 [1/1] (1.76ns)   --->   "store i40 %attn_weights_V_2_2, i40* %attn_weights_V_2_2_0_4" [attention.cpp:185]   --->   Operation 204 'store' <Predicate = true> <Delay = 1.76>
ST_15 : Operation 205 [1/1] (1.76ns)   --->   "store i40 %attn_weights_V_2_3, i40* %attn_weights_V_2_3_0_4" [attention.cpp:185]   --->   Operation 205 'store' <Predicate = true> <Delay = 1.76>
ST_15 : Operation 206 [1/1] (1.76ns)   --->   "store i40 %attn_weights_V_0_0, i40* %attn_weights_V_0_0_0_6" [attention.cpp:185]   --->   Operation 206 'store' <Predicate = true> <Delay = 1.76>
ST_15 : Operation 207 [1/1] (1.76ns)   --->   "store i40 %attn_weights_V_0_1, i40* %attn_weights_V_0_1_0_6" [attention.cpp:185]   --->   Operation 207 'store' <Predicate = true> <Delay = 1.76>
ST_15 : Operation 208 [1/1] (1.76ns)   --->   "store i40 %attn_weights_V_0_2, i40* %attn_weights_V_0_2_0_6" [attention.cpp:185]   --->   Operation 208 'store' <Predicate = true> <Delay = 1.76>
ST_15 : Operation 209 [1/1] (1.76ns)   --->   "store i40 %attn_weights_V_0_3, i40* %attn_weights_V_0_3_0_6" [attention.cpp:185]   --->   Operation 209 'store' <Predicate = true> <Delay = 1.76>
ST_15 : Operation 210 [1/1] (1.76ns)   --->   "br label %0" [attention.cpp:185]   --->   Operation 210 'br' <Predicate = true> <Delay = 1.76>

State 16 <SV = 15> <Delay = 2.10>
ST_16 : Operation 211 [1/1] (0.00ns)   --->   "%h_0 = phi i3 [ 0, %arrayctor.loop.preheader ], [ %h_1, %SF_LOOP_2_end ]"   --->   Operation 211 'phi' 'h_0' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 212 [1/1] (0.00ns)   --->   "%attn_weights_V_0_3_0 = load i40* %attn_weights_V_0_3_0_6"   --->   Operation 212 'load' 'attn_weights_V_0_3_0' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 213 [1/1] (0.00ns)   --->   "%attn_weights_V_0_2_0 = load i40* %attn_weights_V_0_2_0_6"   --->   Operation 213 'load' 'attn_weights_V_0_2_0' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 214 [1/1] (0.00ns)   --->   "%attn_weights_V_0_1_0 = load i40* %attn_weights_V_0_1_0_6"   --->   Operation 214 'load' 'attn_weights_V_0_1_0' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 215 [1/1] (0.00ns)   --->   "%attn_weights_V_0_0_0 = load i40* %attn_weights_V_0_0_0_6"   --->   Operation 215 'load' 'attn_weights_V_0_0_0' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 216 [1/1] (1.13ns)   --->   "%icmp_ln185 = icmp eq i3 %h_0, -4" [attention.cpp:185]   --->   Operation 216 'icmp' 'icmp_ln185' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 217 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)"   --->   Operation 217 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 218 [1/1] (1.65ns)   --->   "%h_1 = add i3 %h_0, 1" [attention.cpp:185]   --->   Operation 218 'add' 'h_1' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 219 [1/1] (0.00ns)   --->   "br i1 %icmp_ln185, label %arrayctor.loop81.preheader.preheader, label %SF_LOOP_2_begin" [attention.cpp:185]   --->   Operation 219 'br' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 220 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str15) nounwind" [attention.cpp:186]   --->   Operation 220 'specloopname' <Predicate = (!icmp_ln185)> <Delay = 0.00>
ST_16 : Operation 221 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str16)" [attention.cpp:187]   --->   Operation 221 'specregionbegin' 'tmp' <Predicate = (!icmp_ln185)> <Delay = 0.00>
ST_16 : Operation 222 [1/1] (0.00ns)   --->   "%trunc_ln1265 = trunc i3 %h_0 to i2" [attention.cpp:188]   --->   Operation 222 'trunc' 'trunc_ln1265' <Predicate = (!icmp_ln185)> <Delay = 0.00>
ST_16 : Operation 223 [1/1] (1.76ns)   --->   "br label %_ZNK13ap_fixed_baseILi40ELi24ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEdvILi40ELi24ELb1ELS0_5ELS1_3ELi0EEENS2_5RTypeIXT_EXT0_EXT1_EE3divERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit.i.065" [attention.cpp:187]   --->   Operation 223 'br' <Predicate = (!icmp_ln185)> <Delay = 1.76>
ST_16 : Operation 224 [1/1] (1.76ns)   --->   "br label %arrayctor.loop81.preheader" [attention.cpp:192]   --->   Operation 224 'br' <Predicate = (icmp_ln185)> <Delay = 1.76>

State 17 <SV = 16> <Delay = 6.09>
ST_17 : Operation 225 [1/1] (0.00ns)   --->   "%d_0_0 = phi i2 [ 0, %SF_LOOP_2_begin ], [ %add_ln187, %_ZNK13ap_fixed_baseILi40ELi24ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEdvILi40ELi24ELb1ELS0_5ELS1_3ELi0EEENS2_5RTypeIXT_EXT0_EXT1_EE3divERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit.i.065.backedge ]" [attention.cpp:187]   --->   Operation 225 'phi' 'd_0_0' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 226 [1/1] (0.95ns)   --->   "%icmp_ln187 = icmp eq i2 %d_0_0, -1" [attention.cpp:187]   --->   Operation 226 'icmp' 'icmp_ln187' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 227 [1/1] (0.00ns)   --->   "%empty_85 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)"   --->   Operation 227 'speclooptripcount' 'empty_85' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 228 [1/1] (1.56ns)   --->   "%add_ln187 = add i2 %d_0_0, 1" [attention.cpp:187]   --->   Operation 228 'add' 'add_ln187' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 229 [1/1] (0.00ns)   --->   "br i1 %icmp_ln187, label %SF_LOOP_2_end, label %_ZNK13ap_fixed_baseILi40ELi24ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEdvILi40ELi24ELb1ELS0_5ELS1_3ELi0EEENS2_5RTypeIXT_EXT0_EXT1_EE3divERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit.i.0" [attention.cpp:187]   --->   Operation 229 'br' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 230 [1/1] (0.00ns)   --->   "%attn_weights_V_0_3_0_1 = load i40* %attn_weights_V_0_3_0_6" [attention.cpp:188]   --->   Operation 230 'load' 'attn_weights_V_0_3_0_1' <Predicate = (!icmp_ln187)> <Delay = 0.00>
ST_17 : Operation 231 [1/1] (0.00ns)   --->   "%attn_weights_V_0_2_0_1 = load i40* %attn_weights_V_0_2_0_6" [attention.cpp:188]   --->   Operation 231 'load' 'attn_weights_V_0_2_0_1' <Predicate = (!icmp_ln187)> <Delay = 0.00>
ST_17 : Operation 232 [1/1] (0.00ns)   --->   "%attn_weights_V_0_1_0_1 = load i40* %attn_weights_V_0_1_0_6" [attention.cpp:188]   --->   Operation 232 'load' 'attn_weights_V_0_1_0_1' <Predicate = (!icmp_ln187)> <Delay = 0.00>
ST_17 : Operation 233 [1/1] (0.00ns)   --->   "%attn_weights_V_0_0_0_1 = load i40* %attn_weights_V_0_0_0_6" [attention.cpp:188]   --->   Operation 233 'load' 'attn_weights_V_0_0_0_1' <Predicate = (!icmp_ln187)> <Delay = 0.00>
ST_17 : Operation 234 [1/1] (0.00ns)   --->   "%attn_weights_V_2_3_0 = load i40* %attn_weights_V_2_3_0_4" [attention.cpp:188]   --->   Operation 234 'load' 'attn_weights_V_2_3_0' <Predicate = (!icmp_ln187)> <Delay = 0.00>
ST_17 : Operation 235 [1/1] (0.00ns)   --->   "%attn_weights_V_2_2_0 = load i40* %attn_weights_V_2_2_0_4" [attention.cpp:188]   --->   Operation 235 'load' 'attn_weights_V_2_2_0' <Predicate = (!icmp_ln187)> <Delay = 0.00>
ST_17 : Operation 236 [1/1] (0.00ns)   --->   "%attn_weights_V_2_1_0 = load i40* %attn_weights_V_2_1_0_4" [attention.cpp:188]   --->   Operation 236 'load' 'attn_weights_V_2_1_0' <Predicate = (!icmp_ln187)> <Delay = 0.00>
ST_17 : Operation 237 [1/1] (0.00ns)   --->   "%attn_weights_V_2_0_0 = load i40* %attn_weights_V_2_0_0_4" [attention.cpp:188]   --->   Operation 237 'load' 'attn_weights_V_2_0_0' <Predicate = (!icmp_ln187)> <Delay = 0.00>
ST_17 : Operation 238 [1/1] (0.00ns)   --->   "%attn_weights_V_1_3_0 = load i40* %attn_weights_V_1_3_0_4" [attention.cpp:188]   --->   Operation 238 'load' 'attn_weights_V_1_3_0' <Predicate = (!icmp_ln187)> <Delay = 0.00>
ST_17 : Operation 239 [1/1] (0.00ns)   --->   "%attn_weights_V_1_2_0 = load i40* %attn_weights_V_1_2_0_4" [attention.cpp:188]   --->   Operation 239 'load' 'attn_weights_V_1_2_0' <Predicate = (!icmp_ln187)> <Delay = 0.00>
ST_17 : Operation 240 [1/1] (0.00ns)   --->   "%attn_weights_V_1_1_0 = load i40* %attn_weights_V_1_1_0_4" [attention.cpp:188]   --->   Operation 240 'load' 'attn_weights_V_1_1_0' <Predicate = (!icmp_ln187)> <Delay = 0.00>
ST_17 : Operation 241 [1/1] (0.00ns)   --->   "%attn_weights_V_1_0_0 = load i40* %attn_weights_V_1_0_0_4" [attention.cpp:188]   --->   Operation 241 'load' 'attn_weights_V_1_0_0' <Predicate = (!icmp_ln187)> <Delay = 0.00>
ST_17 : Operation 242 [1/1] (0.00ns)   --->   "%or_ln = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %d_0_0, i2 %trunc_ln1265)" [attention.cpp:188]   --->   Operation 242 'bitconcatenate' 'or_ln' <Predicate = (!icmp_ln187)> <Delay = 0.00>
ST_17 : Operation 243 [1/1] (2.78ns)   --->   "%tmp_11 = call i40 @_ssdm_op_Mux.ap_auto.12i40.i4(i40 %attn_weights_V_0_0_0_1, i40 %attn_weights_V_0_1_0_1, i40 %attn_weights_V_0_2_0_1, i40 %attn_weights_V_0_3_0_1, i40 %attn_weights_V_1_0_0, i40 %attn_weights_V_1_1_0, i40 %attn_weights_V_1_2_0, i40 %attn_weights_V_1_3_0, i40 %attn_weights_V_2_0_0, i40 %attn_weights_V_2_1_0, i40 %attn_weights_V_2_2_0, i40 %attn_weights_V_2_3_0, i4 %or_ln)" [attention.cpp:188]   --->   Operation 243 'mux' 'tmp_11' <Predicate = (!icmp_ln187)> <Delay = 2.78> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 244 [1/1] (0.00ns)   --->   "%shl_ln = call i56 @_ssdm_op_BitConcatenate.i56.i40.i16(i40 %tmp_11, i16 0)" [attention.cpp:188]   --->   Operation 244 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln187)> <Delay = 0.00>
ST_17 : Operation 245 [1/1] (0.00ns)   --->   "%tmp_106 = call i1 @_ssdm_op_BitSelect.i1.i40.i32(i40 %tmp_11, i32 39)" [attention.cpp:188]   --->   Operation 245 'bitselect' 'tmp_106' <Predicate = (!icmp_ln187)> <Delay = 0.00>
ST_17 : Operation 246 [1/1] (3.31ns)   --->   "%sub_ln1148 = sub i56 0, %shl_ln" [attention.cpp:188]   --->   Operation 246 'sub' 'sub_ln1148' <Predicate = (!icmp_ln187)> <Delay = 3.31> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 247 [1/1] (0.00ns)   --->   "%tmp_56 = call i39 @_ssdm_op_PartSelect.i39.i56.i32.i32(i56 %sub_ln1148, i32 17, i32 55)" [attention.cpp:188]   --->   Operation 247 'partselect' 'tmp_56' <Predicate = (!icmp_ln187)> <Delay = 0.00>
ST_17 : Operation 248 [1/1] (0.00ns)   --->   "%lshr_ln1148_4 = call i39 @_ssdm_op_PartSelect.i39.i40.i32.i32(i40 %tmp_11, i32 1, i32 39)" [attention.cpp:188]   --->   Operation 248 'partselect' 'lshr_ln1148_4' <Predicate = (!icmp_ln187)> <Delay = 0.00>
ST_17 : Operation 249 [1/1] (0.00ns)   --->   "%empty_84 = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str16, i32 %tmp)" [attention.cpp:188]   --->   Operation 249 'specregionend' 'empty_84' <Predicate = (icmp_ln187)> <Delay = 0.00>
ST_17 : Operation 250 [1/1] (0.00ns)   --->   "br label %0" [attention.cpp:185]   --->   Operation 250 'br' <Predicate = (icmp_ln187)> <Delay = 0.00>

State 18 <SV = 17> <Delay = 8.12>
ST_18 : Operation 251 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str17) nounwind" [attention.cpp:188]   --->   Operation 251 'specloopname' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 252 [1/1] (0.00ns)   --->   "%zext_ln1148 = zext i39 %tmp_56 to i40" [attention.cpp:188]   --->   Operation 252 'zext' 'zext_ln1148' <Predicate = (tmp_106)> <Delay = 0.00>
ST_18 : Operation 253 [1/1] (0.00ns)   --->   "%zext_ln1148_2 = zext i39 %lshr_ln1148_4 to i40" [attention.cpp:188]   --->   Operation 253 'zext' 'zext_ln1148_2' <Predicate = (!tmp_106)> <Delay = 0.00>
ST_18 : Operation 254 [1/1] (2.83ns)   --->   "%sub_ln1148_2 = sub i40 0, %zext_ln1148" [attention.cpp:188]   --->   Operation 254 'sub' 'sub_ln1148_2' <Predicate = (tmp_106)> <Delay = 2.83> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 255 [1/1] (1.56ns)   --->   "%select_ln1148 = select i1 %tmp_106, i40 %sub_ln1148_2, i40 %zext_ln1148_2" [attention.cpp:188]   --->   Operation 255 'select' 'select_ln1148' <Predicate = true> <Delay = 1.56> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.56> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 256 [1/1] (1.13ns)   --->   "switch i2 %d_0_0, label %branch2 [
    i2 0, label %branch0
    i2 1, label %branch1
  ]" [attention.cpp:188]   --->   Operation 256 'switch' <Predicate = true> <Delay = 1.13>
ST_18 : Operation 257 [1/1] (1.95ns)   --->   "%attn_weights_V_1_3_0_3 = call i40 @_ssdm_op_Mux.ap_auto.4i40.i2(i40 %attn_weights_V_1_3_0, i40 %attn_weights_V_1_3_0, i40 %attn_weights_V_1_3_0, i40 %select_ln1148, i2 %trunc_ln1265)" [attention.cpp:188]   --->   Operation 257 'mux' 'attn_weights_V_1_3_0_3' <Predicate = (d_0_0 == 1)> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 258 [1/1] (1.95ns)   --->   "%attn_weights_V_1_2_0_3 = call i40 @_ssdm_op_Mux.ap_auto.4i40.i2(i40 %attn_weights_V_1_2_0, i40 %attn_weights_V_1_2_0, i40 %select_ln1148, i40 %attn_weights_V_1_2_0, i2 %trunc_ln1265)" [attention.cpp:188]   --->   Operation 258 'mux' 'attn_weights_V_1_2_0_3' <Predicate = (d_0_0 == 1)> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 259 [1/1] (1.95ns)   --->   "%attn_weights_V_1_1_0_3 = call i40 @_ssdm_op_Mux.ap_auto.4i40.i2(i40 %attn_weights_V_1_1_0, i40 %select_ln1148, i40 %attn_weights_V_1_1_0, i40 %attn_weights_V_1_1_0, i2 %trunc_ln1265)" [attention.cpp:188]   --->   Operation 259 'mux' 'attn_weights_V_1_1_0_3' <Predicate = (d_0_0 == 1)> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 260 [1/1] (1.95ns)   --->   "%attn_weights_V_1_0_0_3 = call i40 @_ssdm_op_Mux.ap_auto.4i40.i2(i40 %select_ln1148, i40 %attn_weights_V_1_0_0, i40 %attn_weights_V_1_0_0, i40 %attn_weights_V_1_0_0, i2 %trunc_ln1265)" [attention.cpp:188]   --->   Operation 260 'mux' 'attn_weights_V_1_0_0_3' <Predicate = (d_0_0 == 1)> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 261 [1/1] (1.76ns)   --->   "store i40 %attn_weights_V_1_0_0_3, i40* %attn_weights_V_1_0_0_4" [attention.cpp:188]   --->   Operation 261 'store' <Predicate = (d_0_0 == 1)> <Delay = 1.76>
ST_18 : Operation 262 [1/1] (1.76ns)   --->   "store i40 %attn_weights_V_1_1_0_3, i40* %attn_weights_V_1_1_0_4" [attention.cpp:188]   --->   Operation 262 'store' <Predicate = (d_0_0 == 1)> <Delay = 1.76>
ST_18 : Operation 263 [1/1] (1.76ns)   --->   "store i40 %attn_weights_V_1_2_0_3, i40* %attn_weights_V_1_2_0_4" [attention.cpp:188]   --->   Operation 263 'store' <Predicate = (d_0_0 == 1)> <Delay = 1.76>
ST_18 : Operation 264 [1/1] (1.76ns)   --->   "store i40 %attn_weights_V_1_3_0_3, i40* %attn_weights_V_1_3_0_4" [attention.cpp:188]   --->   Operation 264 'store' <Predicate = (d_0_0 == 1)> <Delay = 1.76>
ST_18 : Operation 265 [1/1] (0.00ns)   --->   "br label %_ZNK13ap_fixed_baseILi40ELi24ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEdvILi40ELi24ELb1ELS0_5ELS1_3ELi0EEENS2_5RTypeIXT_EXT0_EXT1_EE3divERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit.i.065.backedge" [attention.cpp:188]   --->   Operation 265 'br' <Predicate = (d_0_0 == 1)> <Delay = 0.00>
ST_18 : Operation 266 [1/1] (1.95ns)   --->   "%attn_weights_V_0_3_0_5 = call i40 @_ssdm_op_Mux.ap_auto.4i40.i2(i40 %attn_weights_V_0_3_0_1, i40 %attn_weights_V_0_3_0_1, i40 %attn_weights_V_0_3_0_1, i40 %select_ln1148, i2 %trunc_ln1265)" [attention.cpp:188]   --->   Operation 266 'mux' 'attn_weights_V_0_3_0_5' <Predicate = (d_0_0 == 0)> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 267 [1/1] (1.95ns)   --->   "%attn_weights_V_0_2_0_5 = call i40 @_ssdm_op_Mux.ap_auto.4i40.i2(i40 %attn_weights_V_0_2_0_1, i40 %attn_weights_V_0_2_0_1, i40 %select_ln1148, i40 %attn_weights_V_0_2_0_1, i2 %trunc_ln1265)" [attention.cpp:188]   --->   Operation 267 'mux' 'attn_weights_V_0_2_0_5' <Predicate = (d_0_0 == 0)> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 268 [1/1] (1.95ns)   --->   "%attn_weights_V_0_1_0_5 = call i40 @_ssdm_op_Mux.ap_auto.4i40.i2(i40 %attn_weights_V_0_1_0_1, i40 %select_ln1148, i40 %attn_weights_V_0_1_0_1, i40 %attn_weights_V_0_1_0_1, i2 %trunc_ln1265)" [attention.cpp:188]   --->   Operation 268 'mux' 'attn_weights_V_0_1_0_5' <Predicate = (d_0_0 == 0)> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 269 [1/1] (1.95ns)   --->   "%attn_weights_V_0_0_0_5 = call i40 @_ssdm_op_Mux.ap_auto.4i40.i2(i40 %select_ln1148, i40 %attn_weights_V_0_0_0_1, i40 %attn_weights_V_0_0_0_1, i40 %attn_weights_V_0_0_0_1, i2 %trunc_ln1265)" [attention.cpp:188]   --->   Operation 269 'mux' 'attn_weights_V_0_0_0_5' <Predicate = (d_0_0 == 0)> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 270 [1/1] (1.76ns)   --->   "store i40 %attn_weights_V_0_0_0_5, i40* %attn_weights_V_0_0_0_6" [attention.cpp:188]   --->   Operation 270 'store' <Predicate = (d_0_0 == 0)> <Delay = 1.76>
ST_18 : Operation 271 [1/1] (1.76ns)   --->   "store i40 %attn_weights_V_0_1_0_5, i40* %attn_weights_V_0_1_0_6" [attention.cpp:188]   --->   Operation 271 'store' <Predicate = (d_0_0 == 0)> <Delay = 1.76>
ST_18 : Operation 272 [1/1] (1.76ns)   --->   "store i40 %attn_weights_V_0_2_0_5, i40* %attn_weights_V_0_2_0_6" [attention.cpp:188]   --->   Operation 272 'store' <Predicate = (d_0_0 == 0)> <Delay = 1.76>
ST_18 : Operation 273 [1/1] (1.76ns)   --->   "store i40 %attn_weights_V_0_3_0_5, i40* %attn_weights_V_0_3_0_6" [attention.cpp:188]   --->   Operation 273 'store' <Predicate = (d_0_0 == 0)> <Delay = 1.76>
ST_18 : Operation 274 [1/1] (0.00ns)   --->   "br label %_ZNK13ap_fixed_baseILi40ELi24ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEdvILi40ELi24ELb1ELS0_5ELS1_3ELi0EEENS2_5RTypeIXT_EXT0_EXT1_EE3divERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit.i.065.backedge" [attention.cpp:188]   --->   Operation 274 'br' <Predicate = (d_0_0 == 0)> <Delay = 0.00>
ST_18 : Operation 275 [1/1] (1.95ns)   --->   "%attn_weights_V_2_3_0_3 = call i40 @_ssdm_op_Mux.ap_auto.4i40.i2(i40 %attn_weights_V_2_3_0, i40 %attn_weights_V_2_3_0, i40 %attn_weights_V_2_3_0, i40 %select_ln1148, i2 %trunc_ln1265)" [attention.cpp:188]   --->   Operation 275 'mux' 'attn_weights_V_2_3_0_3' <Predicate = (d_0_0 != 0 & d_0_0 != 1)> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 276 [1/1] (1.95ns)   --->   "%attn_weights_V_2_2_0_3 = call i40 @_ssdm_op_Mux.ap_auto.4i40.i2(i40 %attn_weights_V_2_2_0, i40 %attn_weights_V_2_2_0, i40 %select_ln1148, i40 %attn_weights_V_2_2_0, i2 %trunc_ln1265)" [attention.cpp:188]   --->   Operation 276 'mux' 'attn_weights_V_2_2_0_3' <Predicate = (d_0_0 != 0 & d_0_0 != 1)> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 277 [1/1] (1.95ns)   --->   "%attn_weights_V_2_1_0_3 = call i40 @_ssdm_op_Mux.ap_auto.4i40.i2(i40 %attn_weights_V_2_1_0, i40 %select_ln1148, i40 %attn_weights_V_2_1_0, i40 %attn_weights_V_2_1_0, i2 %trunc_ln1265)" [attention.cpp:188]   --->   Operation 277 'mux' 'attn_weights_V_2_1_0_3' <Predicate = (d_0_0 != 0 & d_0_0 != 1)> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 278 [1/1] (1.95ns)   --->   "%attn_weights_V_2_0_0_3 = call i40 @_ssdm_op_Mux.ap_auto.4i40.i2(i40 %select_ln1148, i40 %attn_weights_V_2_0_0, i40 %attn_weights_V_2_0_0, i40 %attn_weights_V_2_0_0, i2 %trunc_ln1265)" [attention.cpp:188]   --->   Operation 278 'mux' 'attn_weights_V_2_0_0_3' <Predicate = (d_0_0 != 0 & d_0_0 != 1)> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 279 [1/1] (1.76ns)   --->   "store i40 %attn_weights_V_2_0_0_3, i40* %attn_weights_V_2_0_0_4" [attention.cpp:188]   --->   Operation 279 'store' <Predicate = (d_0_0 != 0 & d_0_0 != 1)> <Delay = 1.76>
ST_18 : Operation 280 [1/1] (1.76ns)   --->   "store i40 %attn_weights_V_2_1_0_3, i40* %attn_weights_V_2_1_0_4" [attention.cpp:188]   --->   Operation 280 'store' <Predicate = (d_0_0 != 0 & d_0_0 != 1)> <Delay = 1.76>
ST_18 : Operation 281 [1/1] (1.76ns)   --->   "store i40 %attn_weights_V_2_2_0_3, i40* %attn_weights_V_2_2_0_4" [attention.cpp:188]   --->   Operation 281 'store' <Predicate = (d_0_0 != 0 & d_0_0 != 1)> <Delay = 1.76>
ST_18 : Operation 282 [1/1] (1.76ns)   --->   "store i40 %attn_weights_V_2_3_0_3, i40* %attn_weights_V_2_3_0_4" [attention.cpp:188]   --->   Operation 282 'store' <Predicate = (d_0_0 != 0 & d_0_0 != 1)> <Delay = 1.76>
ST_18 : Operation 283 [1/1] (0.00ns)   --->   "br label %_ZNK13ap_fixed_baseILi40ELi24ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEdvILi40ELi24ELb1ELS0_5ELS1_3ELi0EEENS2_5RTypeIXT_EXT0_EXT1_EE3divERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit.i.065.backedge" [attention.cpp:188]   --->   Operation 283 'br' <Predicate = (d_0_0 != 0 & d_0_0 != 1)> <Delay = 0.00>
ST_18 : Operation 284 [1/1] (0.00ns)   --->   "br label %_ZNK13ap_fixed_baseILi40ELi24ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEdvILi40ELi24ELb1ELS0_5ELS1_3ELi0EEENS2_5RTypeIXT_EXT0_EXT1_EE3divERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit.i.065"   --->   Operation 284 'br' <Predicate = true> <Delay = 0.00>

State 19 <SV = 16> <Delay = 3.91>
ST_19 : Operation 285 [1/1] (0.00ns)   --->   "%attn_weights_V_0_0_0_3 = phi i40 [ %attn_weights_V_0_0_0_4, %_ZN13ap_fixed_baseILi41ELi25ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi40ELi24ELb1ELS0_5ELS1_3ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit9.i.i.0.0 ], [ %attn_weights_V_0_0_0, %arrayctor.loop81.preheader.preheader ]" [attention.cpp:195]   --->   Operation 285 'phi' 'attn_weights_V_0_0_0_3' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 286 [1/1] (0.00ns)   --->   "%attn_weights_V_0_1_0_3 = phi i40 [ %attn_weights_V_0_1_0_4, %_ZN13ap_fixed_baseILi41ELi25ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi40ELi24ELb1ELS0_5ELS1_3ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit9.i.i.0.0 ], [ %attn_weights_V_0_1_0, %arrayctor.loop81.preheader.preheader ]" [attention.cpp:195]   --->   Operation 286 'phi' 'attn_weights_V_0_1_0_3' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 287 [1/1] (0.00ns)   --->   "%attn_weights_V_0_2_0_3 = phi i40 [ %attn_weights_V_0_2_0_4, %_ZN13ap_fixed_baseILi41ELi25ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi40ELi24ELb1ELS0_5ELS1_3ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit9.i.i.0.0 ], [ %attn_weights_V_0_2_0, %arrayctor.loop81.preheader.preheader ]" [attention.cpp:195]   --->   Operation 287 'phi' 'attn_weights_V_0_2_0_3' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 288 [1/1] (0.00ns)   --->   "%attn_weights_V_0_3_0_3 = phi i40 [ %attn_weights_V_0_3_0_4, %_ZN13ap_fixed_baseILi41ELi25ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi40ELi24ELb1ELS0_5ELS1_3ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit9.i.i.0.0 ], [ %attn_weights_V_0_3_0, %arrayctor.loop81.preheader.preheader ]" [attention.cpp:195]   --->   Operation 288 'phi' 'attn_weights_V_0_3_0_3' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 289 [1/1] (0.00ns)   --->   "%h85_0 = phi i3 [ %h, %_ZN13ap_fixed_baseILi41ELi25ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi40ELi24ELb1ELS0_5ELS1_3ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit9.i.i.0.0 ], [ 0, %arrayctor.loop81.preheader.preheader ]"   --->   Operation 289 'phi' 'h85_0' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 290 [1/1] (1.13ns)   --->   "%icmp_ln192 = icmp eq i3 %h85_0, -4" [attention.cpp:192]   --->   Operation 290 'icmp' 'icmp_ln192' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 291 [1/1] (0.00ns)   --->   "%empty_86 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)"   --->   Operation 291 'speclooptripcount' 'empty_86' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 292 [1/1] (1.65ns)   --->   "%h = add i3 %h85_0, 1" [attention.cpp:192]   --->   Operation 292 'add' 'h' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 293 [1/1] (0.00ns)   --->   "br i1 %icmp_ln192, label %ATTN_2D_LOOP_1_begin, label %_ZN13ap_fixed_baseILi41ELi25ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi40ELi24ELb1ELS0_5ELS1_3ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit9.i.i.0.0" [attention.cpp:192]   --->   Operation 293 'br' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 294 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str18) nounwind" [attention.cpp:193]   --->   Operation 294 'specloopname' <Predicate = (!icmp_ln192)> <Delay = 0.00>
ST_19 : Operation 295 [1/1] (0.00ns)   --->   "%trunc_ln1265_1 = trunc i3 %h85_0 to i2" [attention.cpp:195]   --->   Operation 295 'trunc' 'trunc_ln1265_1' <Predicate = (!icmp_ln192)> <Delay = 0.00>
ST_19 : Operation 296 [1/1] (1.95ns)   --->   "%tmp_10 = call i40 @_ssdm_op_Mux.ap_auto.4i40.i2(i40 %attn_weights_V_0_0_0_3, i40 %attn_weights_V_0_1_0_3, i40 %attn_weights_V_0_2_0_3, i40 %attn_weights_V_0_3_0_3, i2 %trunc_ln1265_1)" [attention.cpp:195]   --->   Operation 296 'mux' 'tmp_10' <Predicate = (!icmp_ln192)> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 297 [1/1] (1.95ns)   --->   "%attn_weights_V_0_3_0_4 = call i40 @_ssdm_op_Mux.ap_auto.4i40.i2(i40 %attn_weights_V_0_3_0_3, i40 %attn_weights_V_0_3_0_3, i40 %attn_weights_V_0_3_0_3, i40 %tmp_10, i2 %trunc_ln1265_1)" [attention.cpp:195]   --->   Operation 297 'mux' 'attn_weights_V_0_3_0_4' <Predicate = (!icmp_ln192)> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 298 [1/1] (1.95ns)   --->   "%attn_weights_V_0_2_0_4 = call i40 @_ssdm_op_Mux.ap_auto.4i40.i2(i40 %attn_weights_V_0_2_0_3, i40 %attn_weights_V_0_2_0_3, i40 %tmp_10, i40 %attn_weights_V_0_2_0_3, i2 %trunc_ln1265_1)" [attention.cpp:195]   --->   Operation 298 'mux' 'attn_weights_V_0_2_0_4' <Predicate = (!icmp_ln192)> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 299 [1/1] (1.95ns)   --->   "%attn_weights_V_0_1_0_4 = call i40 @_ssdm_op_Mux.ap_auto.4i40.i2(i40 %attn_weights_V_0_1_0_3, i40 %tmp_10, i40 %attn_weights_V_0_1_0_3, i40 %attn_weights_V_0_1_0_3, i2 %trunc_ln1265_1)" [attention.cpp:195]   --->   Operation 299 'mux' 'attn_weights_V_0_1_0_4' <Predicate = (!icmp_ln192)> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 300 [1/1] (1.95ns)   --->   "%attn_weights_V_0_0_0_4 = call i40 @_ssdm_op_Mux.ap_auto.4i40.i2(i40 %tmp_10, i40 %attn_weights_V_0_0_0_3, i40 %attn_weights_V_0_0_0_3, i40 %attn_weights_V_0_0_0_3, i2 %trunc_ln1265_1)" [attention.cpp:195]   --->   Operation 300 'mux' 'attn_weights_V_0_0_0_4' <Predicate = (!icmp_ln192)> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 301 [1/1] (0.00ns)   --->   "br label %arrayctor.loop81.preheader" [attention.cpp:192]   --->   Operation 301 'br' <Predicate = (!icmp_ln192)> <Delay = 0.00>
ST_19 : Operation 302 [1/1] (0.00ns)   --->   "%attn_weights_V_2_3_0_1 = load i40* %attn_weights_V_2_3_0_4" [attention.cpp:198]   --->   Operation 302 'load' 'attn_weights_V_2_3_0_1' <Predicate = (icmp_ln192)> <Delay = 0.00>
ST_19 : Operation 303 [1/1] (0.00ns)   --->   "%attn_weights_V_2_2_0_1 = load i40* %attn_weights_V_2_2_0_4" [attention.cpp:198]   --->   Operation 303 'load' 'attn_weights_V_2_2_0_1' <Predicate = (icmp_ln192)> <Delay = 0.00>
ST_19 : Operation 304 [1/1] (0.00ns)   --->   "%attn_weights_V_2_1_0_1 = load i40* %attn_weights_V_2_1_0_4" [attention.cpp:198]   --->   Operation 304 'load' 'attn_weights_V_2_1_0_1' <Predicate = (icmp_ln192)> <Delay = 0.00>
ST_19 : Operation 305 [1/1] (0.00ns)   --->   "%attn_weights_V_2_0_0_1 = load i40* %attn_weights_V_2_0_0_4" [attention.cpp:198]   --->   Operation 305 'load' 'attn_weights_V_2_0_0_1' <Predicate = (icmp_ln192)> <Delay = 0.00>
ST_19 : Operation 306 [1/1] (0.00ns)   --->   "%attn_weights_V_1_3_0_1 = load i40* %attn_weights_V_1_3_0_4" [attention.cpp:198]   --->   Operation 306 'load' 'attn_weights_V_1_3_0_1' <Predicate = (icmp_ln192)> <Delay = 0.00>
ST_19 : Operation 307 [1/1] (0.00ns)   --->   "%attn_weights_V_1_2_0_1 = load i40* %attn_weights_V_1_2_0_4" [attention.cpp:198]   --->   Operation 307 'load' 'attn_weights_V_1_2_0_1' <Predicate = (icmp_ln192)> <Delay = 0.00>
ST_19 : Operation 308 [1/1] (0.00ns)   --->   "%attn_weights_V_1_1_0_1 = load i40* %attn_weights_V_1_1_0_4" [attention.cpp:198]   --->   Operation 308 'load' 'attn_weights_V_1_1_0_1' <Predicate = (icmp_ln192)> <Delay = 0.00>
ST_19 : Operation 309 [1/1] (0.00ns)   --->   "%attn_weights_V_1_0_0_1 = load i40* %attn_weights_V_1_0_0_4" [attention.cpp:198]   --->   Operation 309 'load' 'attn_weights_V_1_0_0_1' <Predicate = (icmp_ln192)> <Delay = 0.00>
ST_19 : Operation 310 [2/2] (1.76ns)   --->   "%call_ret7 = call fastcc { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } @"softmax<1, 4, 3>"(i40 %attn_weights_V_0_0_0_3, i40 %attn_weights_V_0_1_0_3, i40 %attn_weights_V_0_2_0_3, i40 %attn_weights_V_0_3_0_3, i40 %attn_weights_V_1_0_0_1, i40 %attn_weights_V_1_1_0_1, i40 %attn_weights_V_1_2_0_1, i40 %attn_weights_V_1_3_0_1, i40 %attn_weights_V_2_0_0_1, i40 %attn_weights_V_2_1_0_1, i40 %attn_weights_V_2_2_0_1, i40 %attn_weights_V_2_3_0_1)" [attention.cpp:198]   --->   Operation 310 'call' 'call_ret7' <Predicate = (icmp_ln192)> <Delay = 1.76> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_19 : Operation 311 [2/2] (1.90ns)   --->   "call fastcc void @init_2d_mem([16 x i40]* %attn_output_2D_0_V)" [attention.cpp:216]   --->   Operation 311 'call' <Predicate = (icmp_ln192)> <Delay = 1.90> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 20 <SV = 17> <Delay = 0.00>
ST_20 : Operation 312 [1/2] (0.00ns)   --->   "%call_ret7 = call fastcc { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } @"softmax<1, 4, 3>"(i40 %attn_weights_V_0_0_0_3, i40 %attn_weights_V_0_1_0_3, i40 %attn_weights_V_0_2_0_3, i40 %attn_weights_V_0_3_0_3, i40 %attn_weights_V_1_0_0_1, i40 %attn_weights_V_1_1_0_1, i40 %attn_weights_V_1_2_0_1, i40 %attn_weights_V_1_3_0_1, i40 %attn_weights_V_2_0_0_1, i40 %attn_weights_V_2_1_0_1, i40 %attn_weights_V_2_2_0_1, i40 %attn_weights_V_2_3_0_1)" [attention.cpp:198]   --->   Operation 312 'call' 'call_ret7' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_20 : Operation 313 [1/1] (0.00ns)   --->   "%attn_weights_V_0_0_0_7 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret7, 0" [attention.cpp:198]   --->   Operation 313 'extractvalue' 'attn_weights_V_0_0_0_7' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 314 [1/1] (0.00ns)   --->   "%attn_weights_V_0_1_0_7 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret7, 1" [attention.cpp:198]   --->   Operation 314 'extractvalue' 'attn_weights_V_0_1_0_7' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 315 [1/1] (0.00ns)   --->   "%attn_weights_V_0_2_0_7 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret7, 2" [attention.cpp:198]   --->   Operation 315 'extractvalue' 'attn_weights_V_0_2_0_7' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 316 [1/1] (0.00ns)   --->   "%attn_weights_V_0_3_0_7 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret7, 3" [attention.cpp:198]   --->   Operation 316 'extractvalue' 'attn_weights_V_0_3_0_7' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 317 [1/1] (0.00ns)   --->   "%attn_weights_V_1_0_0_5 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret7, 4" [attention.cpp:198]   --->   Operation 317 'extractvalue' 'attn_weights_V_1_0_0_5' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 318 [1/1] (0.00ns)   --->   "%attn_weights_V_1_1_0_5 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret7, 5" [attention.cpp:198]   --->   Operation 318 'extractvalue' 'attn_weights_V_1_1_0_5' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 319 [1/1] (0.00ns)   --->   "%attn_weights_V_1_2_0_5 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret7, 6" [attention.cpp:198]   --->   Operation 319 'extractvalue' 'attn_weights_V_1_2_0_5' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 320 [1/1] (0.00ns)   --->   "%attn_weights_V_1_3_0_5 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret7, 7" [attention.cpp:198]   --->   Operation 320 'extractvalue' 'attn_weights_V_1_3_0_5' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 321 [1/1] (0.00ns)   --->   "%attn_weights_V_2_0_0_5 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret7, 8" [attention.cpp:198]   --->   Operation 321 'extractvalue' 'attn_weights_V_2_0_0_5' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 322 [1/1] (0.00ns)   --->   "%attn_weights_V_2_1_0_5 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret7, 9" [attention.cpp:198]   --->   Operation 322 'extractvalue' 'attn_weights_V_2_1_0_5' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 323 [1/1] (0.00ns)   --->   "%attn_weights_V_2_2_0_5 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret7, 10" [attention.cpp:198]   --->   Operation 323 'extractvalue' 'attn_weights_V_2_2_0_5' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 324 [1/1] (0.00ns)   --->   "%attn_weights_V_2_3_0_5 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret7, 11" [attention.cpp:198]   --->   Operation 324 'extractvalue' 'attn_weights_V_2_3_0_5' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 325 [2/2] (0.00ns)   --->   "%call_ret6 = call fastcc { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } @GEMM_3D_float.1(i40 %attn_weights_V_0_0_0_7, i40 %attn_weights_V_0_1_0_7, i40 %attn_weights_V_0_2_0_7, i40 %attn_weights_V_0_3_0_7, i40 %attn_weights_V_1_0_0_5, i40 %attn_weights_V_1_1_0_5, i40 %attn_weights_V_1_2_0_5, i40 %attn_weights_V_1_3_0_5, i40 %attn_weights_V_2_0_0_5, i40 %attn_weights_V_2_1_0_5, i40 %attn_weights_V_2_2_0_5, i40 %attn_weights_V_2_3_0_5, [12 x i40]* %v_cache_upd_0_V, [12 x i40]* %v_cache_upd_1_V, [12 x i40]* %v_cache_upd_2_V, [12 x i40]* %v_cache_upd_3_V)" [attention.cpp:202]   --->   Operation 325 'call' 'call_ret6' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_20 : Operation 326 [1/2] (0.00ns)   --->   "call fastcc void @init_2d_mem([16 x i40]* %attn_output_2D_0_V)" [attention.cpp:216]   --->   Operation 326 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 21 <SV = 18> <Delay = 1.76>
ST_21 : Operation 327 [1/2] (0.00ns)   --->   "%call_ret6 = call fastcc { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } @GEMM_3D_float.1(i40 %attn_weights_V_0_0_0_7, i40 %attn_weights_V_0_1_0_7, i40 %attn_weights_V_0_2_0_7, i40 %attn_weights_V_0_3_0_7, i40 %attn_weights_V_1_0_0_5, i40 %attn_weights_V_1_1_0_5, i40 %attn_weights_V_1_2_0_5, i40 %attn_weights_V_1_3_0_5, i40 %attn_weights_V_2_0_0_5, i40 %attn_weights_V_2_1_0_5, i40 %attn_weights_V_2_2_0_5, i40 %attn_weights_V_2_3_0_5, [12 x i40]* %v_cache_upd_0_V, [12 x i40]* %v_cache_upd_1_V, [12 x i40]* %v_cache_upd_2_V, [12 x i40]* %v_cache_upd_3_V)" [attention.cpp:202]   --->   Operation 327 'call' 'call_ret6' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_21 : Operation 328 [1/1] (0.00ns)   --->   "%attn_output_0 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret6, 0" [attention.cpp:202]   --->   Operation 328 'extractvalue' 'attn_output_0' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 329 [1/1] (0.00ns)   --->   "%attn_output_0_1 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret6, 1" [attention.cpp:202]   --->   Operation 329 'extractvalue' 'attn_output_0_1' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 330 [1/1] (0.00ns)   --->   "%attn_output_0_2 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret6, 2" [attention.cpp:202]   --->   Operation 330 'extractvalue' 'attn_output_0_2' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 331 [1/1] (0.00ns)   --->   "%attn_output_0_3 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret6, 3" [attention.cpp:202]   --->   Operation 331 'extractvalue' 'attn_output_0_3' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 332 [1/1] (0.00ns)   --->   "%attn_output_1 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret6, 4" [attention.cpp:202]   --->   Operation 332 'extractvalue' 'attn_output_1' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 333 [1/1] (0.00ns)   --->   "%attn_output_1_1 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret6, 5" [attention.cpp:202]   --->   Operation 333 'extractvalue' 'attn_output_1_1' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 334 [1/1] (0.00ns)   --->   "%attn_output_1_2 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret6, 6" [attention.cpp:202]   --->   Operation 334 'extractvalue' 'attn_output_1_2' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 335 [1/1] (0.00ns)   --->   "%attn_output_1_3 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret6, 7" [attention.cpp:202]   --->   Operation 335 'extractvalue' 'attn_output_1_3' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 336 [1/1] (0.00ns)   --->   "%attn_output_2 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret6, 8" [attention.cpp:202]   --->   Operation 336 'extractvalue' 'attn_output_2' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 337 [1/1] (0.00ns)   --->   "%attn_output_2_1 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret6, 9" [attention.cpp:202]   --->   Operation 337 'extractvalue' 'attn_output_2_1' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 338 [1/1] (0.00ns)   --->   "%attn_output_2_2 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret6, 10" [attention.cpp:202]   --->   Operation 338 'extractvalue' 'attn_output_2_2' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 339 [1/1] (0.00ns)   --->   "%attn_output_2_3 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret6, 11" [attention.cpp:202]   --->   Operation 339 'extractvalue' 'attn_output_2_3' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 340 [1/1] (0.00ns)   --->   "%attn_output_3 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret6, 12" [attention.cpp:202]   --->   Operation 340 'extractvalue' 'attn_output_3' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 341 [1/1] (0.00ns)   --->   "%attn_output_3_1 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret6, 13" [attention.cpp:202]   --->   Operation 341 'extractvalue' 'attn_output_3_1' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 342 [1/1] (0.00ns)   --->   "%attn_output_3_2 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret6, 14" [attention.cpp:202]   --->   Operation 342 'extractvalue' 'attn_output_3_2' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 343 [1/1] (0.00ns)   --->   "%attn_output_3_3 = extractvalue { i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40, i40 } %call_ret6, 15" [attention.cpp:202]   --->   Operation 343 'extractvalue' 'attn_output_3_3' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 344 [1/1] (0.00ns)   --->   "%tmp_s = call i32 (...)* @_ssdm_op_SpecRegionBegin([15 x i8]* @p_str21)" [attention.cpp:218]   --->   Operation 344 'specregionbegin' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 345 [1/1] (1.76ns)   --->   "br label %1" [attention.cpp:218]   --->   Operation 345 'br' <Predicate = true> <Delay = 1.76>

State 22 <SV = 19> <Delay = 4.28>
ST_22 : Operation 346 [1/1] (0.00ns)   --->   "%h100_0_0 = phi i3 [ 0, %ATTN_2D_LOOP_1_begin ], [ %add_ln218, %ATTN_2D_LOOP_2 ]" [attention.cpp:218]   --->   Operation 346 'phi' 'h100_0_0' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 347 [1/1] (1.13ns)   --->   "%icmp_ln218 = icmp eq i3 %h100_0_0, -4" [attention.cpp:218]   --->   Operation 347 'icmp' 'icmp_ln218' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 348 [1/1] (0.00ns)   --->   "%empty_88 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)"   --->   Operation 348 'speclooptripcount' 'empty_88' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 349 [1/1] (1.65ns)   --->   "%add_ln218 = add i3 %h100_0_0, 1" [attention.cpp:218]   --->   Operation 349 'add' 'add_ln218' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 350 [1/1] (0.00ns)   --->   "br i1 %icmp_ln218, label %ATTN_2D_LOOP_1_end, label %ATTN_2D_LOOP_2" [attention.cpp:218]   --->   Operation 350 'br' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 351 [1/1] (0.00ns)   --->   "%trunc_ln220 = trunc i3 %h100_0_0 to i2" [attention.cpp:220]   --->   Operation 351 'trunc' 'trunc_ln220' <Predicate = (!icmp_ln218)> <Delay = 0.00>
ST_22 : Operation 352 [1/1] (0.00ns)   --->   "%shl_ln2 = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %trunc_ln220, i2 0)" [attention.cpp:220]   --->   Operation 352 'bitconcatenate' 'shl_ln2' <Predicate = (!icmp_ln218)> <Delay = 0.00>
ST_22 : Operation 353 [1/1] (0.00ns)   --->   "%zext_ln220 = zext i4 %shl_ln2 to i64" [attention.cpp:220]   --->   Operation 353 'zext' 'zext_ln220' <Predicate = (!icmp_ln218)> <Delay = 0.00>
ST_22 : Operation 354 [1/1] (1.95ns)   --->   "%tmp_12 = call i40 @_ssdm_op_Mux.ap_auto.4i40.i2(i40 %attn_output_0, i40 %attn_output_0_1, i40 %attn_output_0_2, i40 %attn_output_0_3, i2 %trunc_ln220)" [attention.cpp:220]   --->   Operation 354 'mux' 'tmp_12' <Predicate = (!icmp_ln218)> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 355 [1/1] (0.00ns)   --->   "%attn_output_2D_0_V_s = getelementptr [16 x i40]* %attn_output_2D_0_V, i64 0, i64 %zext_ln220" [attention.cpp:220]   --->   Operation 355 'getelementptr' 'attn_output_2D_0_V_s' <Predicate = (!icmp_ln218)> <Delay = 0.00>
ST_22 : Operation 356 [1/1] (2.32ns)   --->   "store i40 %tmp_12, i40* %attn_output_2D_0_V_s, align 8" [attention.cpp:220]   --->   Operation 356 'store' <Predicate = (!icmp_ln218)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 40> <Depth = 16> <RAM>
ST_22 : Operation 357 [1/1] (0.00ns)   --->   "%or_ln220 = or i4 %shl_ln2, 1" [attention.cpp:220]   --->   Operation 357 'or' 'or_ln220' <Predicate = (!icmp_ln218)> <Delay = 0.00>
ST_22 : Operation 358 [1/1] (0.00ns)   --->   "%zext_ln220_1 = zext i4 %or_ln220 to i64" [attention.cpp:220]   --->   Operation 358 'zext' 'zext_ln220_1' <Predicate = (!icmp_ln218)> <Delay = 0.00>
ST_22 : Operation 359 [1/1] (1.95ns)   --->   "%tmp_13 = call i40 @_ssdm_op_Mux.ap_auto.4i40.i2(i40 %attn_output_1, i40 %attn_output_1_1, i40 %attn_output_1_2, i40 %attn_output_1_3, i2 %trunc_ln220)" [attention.cpp:220]   --->   Operation 359 'mux' 'tmp_13' <Predicate = (!icmp_ln218)> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 360 [1/1] (0.00ns)   --->   "%attn_output_2D_0_V_1 = getelementptr [16 x i40]* %attn_output_2D_0_V, i64 0, i64 %zext_ln220_1" [attention.cpp:220]   --->   Operation 360 'getelementptr' 'attn_output_2D_0_V_1' <Predicate = (!icmp_ln218)> <Delay = 0.00>
ST_22 : Operation 361 [1/1] (2.32ns)   --->   "store i40 %tmp_13, i40* %attn_output_2D_0_V_1, align 8" [attention.cpp:220]   --->   Operation 361 'store' <Predicate = (!icmp_ln218)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 40> <Depth = 16> <RAM>

State 23 <SV = 20> <Delay = 4.28>
ST_23 : Operation 362 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([15 x i8]* @p_str22) nounwind" [attention.cpp:219]   --->   Operation 362 'specloopname' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 363 [1/1] (0.00ns)   --->   "%tmp_19 = call i32 (...)* @_ssdm_op_SpecRegionBegin([15 x i8]* @p_str22)" [attention.cpp:219]   --->   Operation 363 'specregionbegin' 'tmp_19' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 364 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 2, i32 1, i32 1, i32 0, [1 x i8]* @p_str13) nounwind" [attention.cpp:219]   --->   Operation 364 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 365 [1/1] (0.00ns)   --->   "%or_ln220_1 = or i4 %shl_ln2, 2" [attention.cpp:220]   --->   Operation 365 'or' 'or_ln220_1' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 366 [1/1] (0.00ns)   --->   "%zext_ln220_2 = zext i4 %or_ln220_1 to i64" [attention.cpp:220]   --->   Operation 366 'zext' 'zext_ln220_2' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 367 [1/1] (1.95ns)   --->   "%tmp_14 = call i40 @_ssdm_op_Mux.ap_auto.4i40.i2(i40 %attn_output_2, i40 %attn_output_2_1, i40 %attn_output_2_2, i40 %attn_output_2_3, i2 %trunc_ln220)" [attention.cpp:220]   --->   Operation 367 'mux' 'tmp_14' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 368 [1/1] (0.00ns)   --->   "%attn_output_2D_0_V_2 = getelementptr [16 x i40]* %attn_output_2D_0_V, i64 0, i64 %zext_ln220_2" [attention.cpp:220]   --->   Operation 368 'getelementptr' 'attn_output_2D_0_V_2' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 369 [1/1] (2.32ns)   --->   "store i40 %tmp_14, i40* %attn_output_2D_0_V_2, align 8" [attention.cpp:220]   --->   Operation 369 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 40> <Depth = 16> <RAM>
ST_23 : Operation 370 [1/1] (0.00ns)   --->   "%or_ln220_2 = or i4 %shl_ln2, 3" [attention.cpp:220]   --->   Operation 370 'or' 'or_ln220_2' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 371 [1/1] (0.00ns)   --->   "%zext_ln220_3 = zext i4 %or_ln220_2 to i64" [attention.cpp:220]   --->   Operation 371 'zext' 'zext_ln220_3' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 372 [1/1] (1.95ns)   --->   "%tmp_15 = call i40 @_ssdm_op_Mux.ap_auto.4i40.i2(i40 %attn_output_3, i40 %attn_output_3_1, i40 %attn_output_3_2, i40 %attn_output_3_3, i2 %trunc_ln220)" [attention.cpp:220]   --->   Operation 372 'mux' 'tmp_15' <Predicate = true> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 373 [1/1] (0.00ns)   --->   "%attn_output_2D_0_V_3 = getelementptr [16 x i40]* %attn_output_2D_0_V, i64 0, i64 %zext_ln220_3" [attention.cpp:220]   --->   Operation 373 'getelementptr' 'attn_output_2D_0_V_3' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 374 [1/1] (2.32ns)   --->   "store i40 %tmp_15, i40* %attn_output_2D_0_V_3, align 8" [attention.cpp:220]   --->   Operation 374 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 40> <Depth = 16> <RAM>
ST_23 : Operation 375 [1/1] (0.00ns)   --->   "%empty_89 = call i32 (...)* @_ssdm_op_SpecRegionEnd([15 x i8]* @p_str22, i32 %tmp_19)" [attention.cpp:220]   --->   Operation 375 'specregionend' 'empty_89' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 376 [1/1] (0.00ns)   --->   "br label %1" [attention.cpp:218]   --->   Operation 376 'br' <Predicate = true> <Delay = 0.00>

State 24 <SV = 20> <Delay = 1.90>
ST_24 : Operation 377 [2/2] (1.76ns)   --->   "call fastcc void @"rms_norm<16>"([16 x i40]* %attn_output_2D_0_V, [16 x i40]* @ln_weight_V)" [attention.cpp:224]   --->   Operation 377 'call' <Predicate = true> <Delay = 1.76> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_24 : Operation 378 [2/2] (1.90ns)   --->   "call fastcc void @init_2d_mem([16 x i40]* %final_output_0_V)" [attention.cpp:243]   --->   Operation 378 'call' <Predicate = true> <Delay = 1.90> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 25 <SV = 21> <Delay = 0.00>
ST_25 : Operation 379 [1/2] (0.00ns)   --->   "call fastcc void @"rms_norm<16>"([16 x i40]* %attn_output_2D_0_V, [16 x i40]* @ln_weight_V)" [attention.cpp:224]   --->   Operation 379 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_25 : Operation 380 [1/2] (0.00ns)   --->   "call fastcc void @init_2d_mem([16 x i40]* %final_output_0_V)" [attention.cpp:243]   --->   Operation 380 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 26 <SV = 22> <Delay = 1.76>
ST_26 : Operation 381 [2/2] (1.76ns)   --->   "%call_ret8 = call fastcc { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @quantize_activation([16 x i40]* %attn_output_2D_0_V)" [attention.cpp:236]   --->   Operation 381 'call' 'call_ret8' <Predicate = true> <Delay = 1.76> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 27 <SV = 23> <Delay = 3.69>
ST_27 : Operation 382 [1/2] (3.69ns)   --->   "%call_ret8 = call fastcc { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @quantize_activation([16 x i40]* %attn_output_2D_0_V)" [attention.cpp:236]   --->   Operation 382 'call' 'call_ret8' <Predicate = true> <Delay = 3.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_27 : Operation 383 [1/1] (0.00ns)   --->   "%final_scales_0_V = extractvalue { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret8, 0" [attention.cpp:236]   --->   Operation 383 'extractvalue' 'final_scales_0_V' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 384 [1/1] (0.00ns)   --->   "%quantized_final_outp = extractvalue { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret8, 1" [attention.cpp:236]   --->   Operation 384 'extractvalue' 'quantized_final_outp' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 385 [1/1] (0.00ns)   --->   "%quantized_final_outp_1 = extractvalue { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret8, 2" [attention.cpp:236]   --->   Operation 385 'extractvalue' 'quantized_final_outp_1' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 386 [1/1] (0.00ns)   --->   "%quantized_final_outp_2 = extractvalue { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret8, 3" [attention.cpp:236]   --->   Operation 386 'extractvalue' 'quantized_final_outp_2' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 387 [1/1] (0.00ns)   --->   "%quantized_final_outp_3 = extractvalue { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret8, 4" [attention.cpp:236]   --->   Operation 387 'extractvalue' 'quantized_final_outp_3' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 388 [1/1] (0.00ns)   --->   "%quantized_final_outp_4 = extractvalue { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret8, 5" [attention.cpp:236]   --->   Operation 388 'extractvalue' 'quantized_final_outp_4' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 389 [1/1] (0.00ns)   --->   "%quantized_final_outp_5 = extractvalue { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret8, 6" [attention.cpp:236]   --->   Operation 389 'extractvalue' 'quantized_final_outp_5' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 390 [1/1] (0.00ns)   --->   "%quantized_final_outp_6 = extractvalue { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret8, 7" [attention.cpp:236]   --->   Operation 390 'extractvalue' 'quantized_final_outp_6' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 391 [1/1] (0.00ns)   --->   "%quantized_final_outp_7 = extractvalue { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret8, 8" [attention.cpp:236]   --->   Operation 391 'extractvalue' 'quantized_final_outp_7' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 392 [1/1] (0.00ns)   --->   "%quantized_final_outp_8 = extractvalue { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret8, 9" [attention.cpp:236]   --->   Operation 392 'extractvalue' 'quantized_final_outp_8' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 393 [1/1] (0.00ns)   --->   "%quantized_final_outp_9 = extractvalue { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret8, 10" [attention.cpp:236]   --->   Operation 393 'extractvalue' 'quantized_final_outp_9' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 394 [1/1] (0.00ns)   --->   "%quantized_final_outp_15 = extractvalue { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret8, 11" [attention.cpp:236]   --->   Operation 394 'extractvalue' 'quantized_final_outp_15' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 395 [1/1] (0.00ns)   --->   "%quantized_final_outp_10 = extractvalue { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret8, 12" [attention.cpp:236]   --->   Operation 395 'extractvalue' 'quantized_final_outp_10' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 396 [1/1] (0.00ns)   --->   "%quantized_final_outp_11 = extractvalue { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret8, 13" [attention.cpp:236]   --->   Operation 396 'extractvalue' 'quantized_final_outp_11' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 397 [1/1] (0.00ns)   --->   "%quantized_final_outp_12 = extractvalue { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret8, 14" [attention.cpp:236]   --->   Operation 397 'extractvalue' 'quantized_final_outp_12' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 398 [1/1] (0.00ns)   --->   "%quantized_final_outp_13 = extractvalue { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret8, 15" [attention.cpp:236]   --->   Operation 398 'extractvalue' 'quantized_final_outp_13' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 399 [1/1] (0.00ns)   --->   "%quantized_final_outp_14 = extractvalue { i40, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret8, 16" [attention.cpp:236]   --->   Operation 399 'extractvalue' 'quantized_final_outp_14' <Predicate = true> <Delay = 0.00>

State 28 <SV = 24> <Delay = 8.75>
ST_28 : Operation 400 [2/2] (8.75ns)   --->   "call fastcc void @linear_forward_no_mu(i8 %quantized_final_outp, i8 %quantized_final_outp_1, i8 %quantized_final_outp_2, i8 %quantized_final_outp_3, i8 %quantized_final_outp_4, i8 %quantized_final_outp_5, i8 %quantized_final_outp_6, i8 %quantized_final_outp_7, i8 %quantized_final_outp_8, i8 %quantized_final_outp_9, i8 %quantized_final_outp_15, i8 %quantized_final_outp_10, i8 %quantized_final_outp_11, i8 %quantized_final_outp_12, i8 %quantized_final_outp_13, i8 %quantized_final_outp_14, [16 x i40]* %final_output_0_V, i40 %final_scales_0_V, [16 x i8]* @o_weights_0, [16 x i8]* @o_weights_1, [16 x i8]* @o_weights_2, [16 x i8]* @o_weights_3, i22 728135)" [attention.cpp:244]   --->   Operation 400 'call' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 29 <SV = 25> <Delay = 0.00>
ST_29 : Operation 401 [1/1] (0.00ns)   --->   "%empty_87 = call i32 (...)* @_ssdm_op_SpecRegionEnd([15 x i8]* @p_str21, i32 %tmp_s)" [attention.cpp:220]   --->   Operation 401 'specregionend' 'empty_87' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 402 [1/2] (0.00ns)   --->   "call fastcc void @linear_forward_no_mu(i8 %quantized_final_outp, i8 %quantized_final_outp_1, i8 %quantized_final_outp_2, i8 %quantized_final_outp_3, i8 %quantized_final_outp_4, i8 %quantized_final_outp_5, i8 %quantized_final_outp_6, i8 %quantized_final_outp_7, i8 %quantized_final_outp_8, i8 %quantized_final_outp_9, i8 %quantized_final_outp_15, i8 %quantized_final_outp_10, i8 %quantized_final_outp_11, i8 %quantized_final_outp_12, i8 %quantized_final_outp_13, i8 %quantized_final_outp_14, [16 x i40]* %final_output_0_V, i40 %final_scales_0_V, [16 x i8]* @o_weights_0, [16 x i8]* @o_weights_1, [16 x i8]* @o_weights_2, [16 x i8]* @o_weights_3, i22 728135)" [attention.cpp:244]   --->   Operation 402 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_29 : Operation 403 [1/1] (0.00ns)   --->   "ret void" [attention.cpp:251]   --->   Operation 403 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.91ns
The critical path consists of the following:
	'alloca' operation ('q_proj_re[0].V', attention.cpp:114) [71]  (0 ns)
	'call' operation ('call_ln118', attention.cpp:118) to 'init_2d_mem' [105]  (1.91 ns)

 <State 2>: 0ns
The critical path consists of the following:

 <State 3>: 1.77ns
The critical path consists of the following:
	'call' operation ('call_ret2', attention.cpp:106) to 'quantize_activation' [87]  (1.77 ns)

 <State 4>: 3.7ns
The critical path consists of the following:
	'call' operation ('call_ret2', attention.cpp:106) to 'quantize_activation' [87]  (3.7 ns)

 <State 5>: 8.75ns
The critical path consists of the following:
	'call' operation ('call_ln122', attention.cpp:122) to 'linear_forward_no_mu' [108]  (8.75 ns)

 <State 6>: 0ns
The critical path consists of the following:

 <State 7>: 8.75ns
The critical path consists of the following:
	'call' operation ('call_ln136', attention.cpp:136) to 'linear_forward_no_mu' [110]  (8.75 ns)

 <State 8>: 0ns
The critical path consists of the following:

 <State 9>: 1.81ns
The critical path consists of the following:
	'call' operation ('call_ret5', attention.cpp:150) to 'reshape_2D_to_3D' [145]  (1.81 ns)

 <State 10>: 1.77ns
The critical path consists of the following:
	'call' operation ('call_ret1', attention.cpp:155) to 'apply_rotary_pos_emb' [162]  (0 ns)
	'call' operation ('call_ln160', attention.cpp:160) to 'cache_update' [195]  (1.77 ns)

 <State 11>: 0ns
The critical path consists of the following:

 <State 12>: 1.77ns
The critical path consists of the following:
	'call' operation ('call_ln163', attention.cpp:163) to 'cache_update' [196]  (1.77 ns)

 <State 13>: 0ns
The critical path consists of the following:

 <State 14>: 0ns
The critical path consists of the following:

 <State 15>: 1.77ns
The critical path consists of the following:
	'call' operation ('call_ret', attention.cpp:172) to 'GEMM_3D_float' [198]  (0 ns)
	'store' operation ('store_ln185', attention.cpp:185) of variable 'attn_weights_V_1_0', attention.cpp:172 on local variable 'attn_weights_V_1_0_0_4' [211]  (1.77 ns)

 <State 16>: 2.11ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln185', attention.cpp:185) [230]  (1.13 ns)
	blocking operation 0.978 ns on control path)

 <State 17>: 6.09ns
The critical path consists of the following:
	'phi' operation ('d_0_0', attention.cpp:187) with incoming values : ('add_ln187', attention.cpp:187) [240]  (0 ns)
	'mux' operation ('tmp_11', attention.cpp:188) [260]  (2.78 ns)
	'sub' operation ('sub_ln1148', attention.cpp:188) [263]  (3.31 ns)

 <State 18>: 8.12ns
The critical path consists of the following:
	'sub' operation ('sub_ln1148_2', attention.cpp:188) [268]  (2.84 ns)
	'select' operation ('select_ln1148', attention.cpp:188) [269]  (1.56 ns)
	'mux' operation ('attn_weights_V_2_0_0_3', attention.cpp:188) [295]  (1.96 ns)
	'store' operation ('store_ln188', attention.cpp:188) of variable 'attn_weights_V_2_0_0_3', attention.cpp:188 on local variable 'attn_weights_V_2_0_0_4' [296]  (1.77 ns)

 <State 19>: 3.92ns
The critical path consists of the following:
	'phi' operation ('attn_weights_V_0_0_0_3', attention.cpp:195) with incoming values : ('attn_weights_V_0_0_0') ('attn_weights_V_0_0_0_4', attention.cpp:195) [309]  (0 ns)
	'mux' operation ('tmp_10', attention.cpp:195) [321]  (1.96 ns)
	'mux' operation ('attn_weights_V_0_3_0_4', attention.cpp:195) [322]  (1.96 ns)

 <State 20>: 0ns
The critical path consists of the following:

 <State 21>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('h100_0_0', attention.cpp:218) with incoming values : ('add_ln218', attention.cpp:218) [370]  (1.77 ns)

 <State 22>: 4.28ns
The critical path consists of the following:
	'phi' operation ('h100_0_0', attention.cpp:218) with incoming values : ('add_ln218', attention.cpp:218) [370]  (0 ns)
	'mux' operation ('tmp_12', attention.cpp:220) [382]  (1.96 ns)
	'store' operation ('store_ln220', attention.cpp:220) of variable 'tmp_12', attention.cpp:220 on array 'attn_output_2D[0].V', attention.cpp:215 [384]  (2.32 ns)

 <State 23>: 4.28ns
The critical path consists of the following:
	'mux' operation ('tmp_14', attention.cpp:220) [392]  (1.96 ns)
	'store' operation ('store_ln220', attention.cpp:220) of variable 'tmp_14', attention.cpp:220 on array 'attn_output_2D[0].V', attention.cpp:215 [394]  (2.32 ns)

 <State 24>: 1.91ns
The critical path consists of the following:
	'call' operation ('call_ln243', attention.cpp:243) to 'init_2d_mem' [423]  (1.91 ns)

 <State 25>: 0ns
The critical path consists of the following:

 <State 26>: 1.77ns
The critical path consists of the following:
	'call' operation ('call_ret8', attention.cpp:236) to 'quantize_activation' [405]  (1.77 ns)

 <State 27>: 3.7ns
The critical path consists of the following:
	'call' operation ('call_ret8', attention.cpp:236) to 'quantize_activation' [405]  (3.7 ns)

 <State 28>: 8.75ns
The critical path consists of the following:
	'call' operation ('call_ln244', attention.cpp:244) to 'linear_forward_no_mu' [424]  (8.75 ns)

 <State 29>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
