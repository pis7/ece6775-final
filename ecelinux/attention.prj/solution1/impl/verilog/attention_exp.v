// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module attention_exp (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_V,
        ap_return
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_state5 = 11'd16;
parameter    ap_ST_fsm_state6 = 11'd32;
parameter    ap_ST_fsm_state7 = 11'd64;
parameter    ap_ST_fsm_state8 = 11'd128;
parameter    ap_ST_fsm_state9 = 11'd256;
parameter    ap_ST_fsm_state10 = 11'd512;
parameter    ap_ST_fsm_state11 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] in_V;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg  signed [31:0] in_V_read_reg_572;
wire   [0:0] tmp_28_fu_75_p3;
reg   [0:0] tmp_28_reg_580;
wire   [31:0] sub_ln703_fu_83_p2;
reg   [31:0] sub_ln703_reg_588;
wire   [0:0] select_ln58_fu_105_p3;
reg   [0:0] select_ln58_reg_593;
wire   [0:0] tmp_31_fu_113_p3;
reg   [0:0] tmp_31_reg_597;
wire   [31:0] select_ln1148_fu_155_p3;
reg   [31:0] select_ln1148_reg_602;
reg  signed [31:0] p_Val2_s_reg_607;
wire    ap_CS_fsm_state2;
reg   [0:0] tmp_32_reg_614;
reg   [0:0] tmp_34_reg_619;
wire   [31:0] add_ln703_fu_201_p2;
reg   [31:0] add_ln703_reg_624;
wire    ap_CS_fsm_state3;
wire   [0:0] select_ln58_1_fu_219_p3;
reg   [0:0] select_ln58_1_reg_630;
wire  signed [64:0] sext_ln1148_fu_225_p1;
reg  signed [64:0] sext_ln1148_reg_634;
wire   [64:0] mul_ln1148_fu_228_p2;
reg   [64:0] mul_ln1148_reg_639;
reg   [30:0] tmp_reg_644;
wire   [31:0] select_ln1148_4_fu_279_p3;
reg   [31:0] select_ln1148_4_reg_649;
wire    ap_CS_fsm_state4;
reg  signed [31:0] p_Val2_43_reg_654;
wire    ap_CS_fsm_state5;
reg   [0:0] tmp_36_reg_661;
reg   [0:0] tmp_38_reg_666;
wire   [31:0] add_ln703_16_fu_324_p2;
reg   [31:0] add_ln703_16_reg_671;
wire    ap_CS_fsm_state6;
wire   [0:0] select_ln58_2_fu_341_p3;
reg   [0:0] select_ln58_2_reg_677;
wire   [30:0] select_ln1148_1_fu_379_p3;
reg   [30:0] select_ln1148_1_reg_681;
reg  signed [31:0] p_Val2_44_reg_686;
wire    ap_CS_fsm_state7;
reg   [0:0] tmp_39_reg_693;
reg   [0:0] tmp_41_reg_698;
wire   [31:0] add_ln703_17_fu_424_p2;
reg   [31:0] add_ln703_17_reg_703;
wire    ap_CS_fsm_state8;
wire   [0:0] select_ln58_3_fu_441_p3;
reg   [0:0] select_ln58_3_reg_709;
wire   [64:0] mul_ln1148_1_fu_447_p2;
reg   [64:0] mul_ln1148_1_reg_713;
reg   [29:0] tmp_43_reg_718;
wire   [31:0] select_ln1148_6_fu_497_p3;
reg   [31:0] select_ln1148_6_reg_723;
wire    ap_CS_fsm_state9;
reg   [31:0] p_Val2_45_reg_728;
wire    ap_CS_fsm_state10;
reg   [0:0] tmp_44_reg_734;
reg   [0:0] tmp_46_reg_739;
reg   [31:0] ap_phi_mux_agg_result_V_0_lcssa_phi_fu_60_p12;
reg   [31:0] agg_result_V_0_lcssa_reg_56;
wire   [31:0] add_ln703_18_fu_542_p2;
wire    ap_CS_fsm_state11;
wire   [0:0] select_ln58_4_fu_560_p3;
wire   [31:0] add_ln703_19_fu_566_p2;
wire  signed [31:0] tmp_28_fu_75_p1;
wire  signed [31:0] sub_ln703_fu_83_p1;
wire  signed [31:0] tmp_30_fu_97_p1;
wire   [0:0] tmp_29_fu_89_p3;
wire   [0:0] tmp_30_fu_97_p3;
wire  signed [31:0] tmp_31_fu_113_p1;
wire   [30:0] lshr_ln1148_8_fu_121_p4;
wire   [31:0] zext_ln1148_fu_131_p1;
wire  signed [31:0] lshr_ln1148_9_fu_141_p1;
wire   [30:0] lshr_ln1148_9_fu_141_p4;
wire   [31:0] sub_ln1148_5_fu_135_p2;
wire   [31:0] zext_ln1148_4_fu_151_p1;
wire  signed [31:0] mul_ln1118_fu_169_p0;
wire  signed [31:0] mul_ln1118_fu_169_p1;
wire   [53:0] mul_ln1118_fu_169_p2;
wire   [31:0] sub_ln703_16_fu_206_p2;
wire   [0:0] tmp_33_fu_211_p3;
wire  signed [31:0] mul_ln1148_fu_228_p0;
wire   [64:0] sub_ln1148_6_fu_244_p2;
wire   [30:0] tmp_35_fu_249_p4;
wire  signed [31:0] sext_ln1148_6_fu_259_p1;
wire  signed [31:0] sext_ln1148_7_fu_263_p1;
wire   [31:0] select_ln1148_3_fu_266_p3;
wire   [31:0] sub_ln1148_7_fu_273_p2;
wire  signed [31:0] mul_ln1118_1_fu_292_p0;
wire  signed [31:0] mul_ln1118_1_fu_292_p1;
wire   [53:0] mul_ln1118_1_fu_292_p2;
wire   [31:0] sub_ln703_17_fu_328_p2;
wire   [0:0] tmp_37_fu_333_p3;
wire   [29:0] tmp_s_fu_347_p4;
wire   [30:0] zext_ln1148_5_fu_356_p1;
wire   [29:0] tmp_4_fu_366_p4;
wire   [30:0] sub_ln1148_fu_360_p2;
wire   [30:0] zext_ln1148_6_fu_375_p1;
wire  signed [30:0] mul_ln1118_2_fu_392_p0;
wire  signed [31:0] mul_ln1118_2_fu_392_p1;
wire   [53:0] mul_ln1118_2_fu_392_p2;
wire   [31:0] sub_ln703_18_fu_428_p2;
wire   [0:0] tmp_40_fu_433_p3;
wire  signed [31:0] mul_ln1148_1_fu_447_p0;
wire   [64:0] sub_ln1148_8_fu_462_p2;
wire   [29:0] tmp_42_fu_467_p4;
wire  signed [31:0] sext_ln1148_8_fu_477_p1;
wire  signed [31:0] sext_ln1148_9_fu_481_p1;
wire   [31:0] select_ln1148_5_fu_484_p3;
wire   [31:0] sub_ln1148_9_fu_491_p2;
wire  signed [31:0] mul_ln1118_3_fu_510_p0;
wire  signed [31:0] mul_ln1118_3_fu_510_p1;
wire   [60:0] mul_ln1118_3_fu_510_p2;
wire   [31:0] sub_ln703_19_fu_547_p2;
wire   [0:0] tmp_45_fu_552_p3;
reg   [10:0] ap_NS_fsm;
reg    ap_condition_513;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln58_1_reg_630 == 1'd0) & (select_ln58_4_fu_560_p3 == 1'd0) & (select_ln58_3_reg_709 == 1'd0) & (select_ln58_2_reg_677 == 1'd0) & (select_ln58_reg_593 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        agg_result_V_0_lcssa_reg_56 <= add_ln703_19_fu_566_p2;
    end else if (((select_ln58_1_reg_630 == 1'd0) & (select_ln58_3_reg_709 == 1'd0) & (select_ln58_2_reg_677 == 1'd0) & (select_ln58_reg_593 == 1'd0) & (1'b1 == ap_CS_fsm_state11) & (select_ln58_4_fu_560_p3 == 1'd1))) begin
        agg_result_V_0_lcssa_reg_56 <= add_ln703_18_fu_542_p2;
    end else if (((select_ln58_1_reg_630 == 1'd0) & (select_ln58_2_reg_677 == 1'd0) & (select_ln58_reg_593 == 1'd0) & (1'b1 == ap_CS_fsm_state8) & (select_ln58_3_fu_441_p3 == 1'd1))) begin
        agg_result_V_0_lcssa_reg_56 <= add_ln703_17_fu_424_p2;
    end else if (((select_ln58_1_reg_630 == 1'd0) & (select_ln58_reg_593 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (select_ln58_2_fu_341_p3 == 1'd1))) begin
        agg_result_V_0_lcssa_reg_56 <= add_ln703_16_fu_324_p2;
    end else if (((select_ln58_1_fu_219_p3 == 1'd1) & (select_ln58_reg_593 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        agg_result_V_0_lcssa_reg_56 <= add_ln703_fu_201_p2;
    end else if (((select_ln58_fu_105_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        agg_result_V_0_lcssa_reg_56 <= 32'd4194304;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln58_1_reg_630 == 1'd0) & (select_ln58_reg_593 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        add_ln703_16_reg_671 <= add_ln703_16_fu_324_p2;
        select_ln58_2_reg_677 <= select_ln58_2_fu_341_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln58_1_reg_630 == 1'd0) & (select_ln58_2_reg_677 == 1'd0) & (select_ln58_reg_593 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        add_ln703_17_reg_703 <= add_ln703_17_fu_424_p2;
        select_ln58_3_reg_709 <= select_ln58_3_fu_441_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln58_reg_593 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        add_ln703_reg_624 <= add_ln703_fu_201_p2;
        select_ln58_1_reg_630 <= select_ln58_1_fu_219_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        in_V_read_reg_572 <= in_V;
        select_ln58_reg_593 <= select_ln58_fu_105_p3;
        sub_ln703_reg_588 <= sub_ln703_fu_83_p2;
        tmp_28_reg_580 <= tmp_28_fu_75_p1[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln58_1_reg_630 == 1'd0) & (select_ln58_3_fu_441_p3 == 1'd0) & (select_ln58_2_reg_677 == 1'd0) & (select_ln58_reg_593 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        mul_ln1148_1_reg_713[64 : 1] <= mul_ln1148_1_fu_447_p2[64 : 1];
        tmp_43_reg_718 <= {{mul_ln1148_1_fu_447_p2[64:35]}};
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln58_1_fu_219_p3 == 1'd0) & (select_ln58_reg_593 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        mul_ln1148_reg_639[64 : 1] <= mul_ln1148_fu_228_p2[64 : 1];
        sext_ln1148_reg_634 <= sext_ln1148_fu_225_p1;
        tmp_reg_644 <= {{mul_ln1148_fu_228_p2[64:34]}};
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln58_1_reg_630 == 1'd0) & (select_ln58_reg_593 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        p_Val2_43_reg_654 <= {{mul_ln1118_1_fu_292_p2[53:22]}};
        tmp_36_reg_661 <= mul_ln1118_1_fu_292_p2[32'd53];
        tmp_38_reg_666 <= mul_ln1118_1_fu_292_p2[32'd53];
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln58_1_reg_630 == 1'd0) & (select_ln58_2_reg_677 == 1'd0) & (select_ln58_reg_593 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        p_Val2_44_reg_686 <= {{mul_ln1118_2_fu_392_p2[53:22]}};
        tmp_39_reg_693 <= mul_ln1118_2_fu_392_p2[32'd53];
        tmp_41_reg_698 <= mul_ln1118_2_fu_392_p2[32'd53];
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln58_1_reg_630 == 1'd0) & (select_ln58_3_reg_709 == 1'd0) & (select_ln58_2_reg_677 == 1'd0) & (select_ln58_reg_593 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        p_Val2_45_reg_728 <= {{mul_ln1118_3_fu_510_p2[53:22]}};
        tmp_44_reg_734 <= mul_ln1118_3_fu_510_p2[32'd53];
        tmp_46_reg_739 <= mul_ln1118_3_fu_510_p2[32'd53];
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln58_reg_593 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        p_Val2_s_reg_607 <= {{mul_ln1118_fu_169_p2[53:22]}};
        tmp_32_reg_614 <= mul_ln1118_fu_169_p2[32'd53];
        tmp_34_reg_619 <= mul_ln1118_fu_169_p2[32'd53];
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln58_1_reg_630 == 1'd0) & (select_ln58_2_fu_341_p3 == 1'd0) & (select_ln58_reg_593 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        select_ln1148_1_reg_681 <= select_ln1148_1_fu_379_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln58_1_reg_630 == 1'd0) & (select_ln58_reg_593 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        select_ln1148_4_reg_649 <= select_ln1148_4_fu_279_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln58_1_reg_630 == 1'd0) & (select_ln58_3_reg_709 == 1'd0) & (select_ln58_2_reg_677 == 1'd0) & (select_ln58_reg_593 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        select_ln1148_6_reg_723 <= select_ln1148_6_fu_497_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln58_fu_105_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        select_ln1148_reg_602 <= select_ln1148_fu_155_p3;
        tmp_31_reg_597 <= tmp_31_fu_113_p1[32'd31];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_513)) begin
        if ((select_ln58_4_fu_560_p3 == 1'd0)) begin
            ap_phi_mux_agg_result_V_0_lcssa_phi_fu_60_p12 = add_ln703_19_fu_566_p2;
        end else if ((select_ln58_4_fu_560_p3 == 1'd1)) begin
            ap_phi_mux_agg_result_V_0_lcssa_phi_fu_60_p12 = add_ln703_18_fu_542_p2;
        end else begin
            ap_phi_mux_agg_result_V_0_lcssa_phi_fu_60_p12 = agg_result_V_0_lcssa_reg_56;
        end
    end else begin
        ap_phi_mux_agg_result_V_0_lcssa_phi_fu_60_p12 = agg_result_V_0_lcssa_reg_56;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln703_16_fu_324_p2 = ($signed(add_ln703_reg_624) + $signed(p_Val2_s_reg_607));

assign add_ln703_17_fu_424_p2 = ($signed(p_Val2_43_reg_654) + $signed(add_ln703_16_reg_671));

assign add_ln703_18_fu_542_p2 = ($signed(add_ln703_17_reg_703) + $signed(p_Val2_44_reg_686));

assign add_ln703_19_fu_566_p2 = (add_ln703_18_fu_542_p2 + p_Val2_45_reg_728);

assign add_ln703_fu_201_p2 = ($signed(in_V_read_reg_572) + $signed(32'd4194304));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_condition_513 = ((select_ln58_1_reg_630 == 1'd0) & (select_ln58_3_reg_709 == 1'd0) & (select_ln58_2_reg_677 == 1'd0) & (select_ln58_reg_593 == 1'd0) & (1'b1 == ap_CS_fsm_state11));
end

assign ap_return = ap_phi_mux_agg_result_V_0_lcssa_phi_fu_60_p12;

assign lshr_ln1148_8_fu_121_p4 = {{sub_ln703_fu_83_p2[31:1]}};

assign lshr_ln1148_9_fu_141_p1 = in_V;

assign lshr_ln1148_9_fu_141_p4 = {{lshr_ln1148_9_fu_141_p1[31:1]}};

assign mul_ln1118_1_fu_292_p0 = p_Val2_s_reg_607;

assign mul_ln1118_1_fu_292_p1 = select_ln1148_4_reg_649;

assign mul_ln1118_1_fu_292_p2 = ($signed(mul_ln1118_1_fu_292_p0) * $signed(mul_ln1118_1_fu_292_p1));

assign mul_ln1118_2_fu_392_p0 = select_ln1148_1_reg_681;

assign mul_ln1118_2_fu_392_p1 = p_Val2_43_reg_654;

assign mul_ln1118_2_fu_392_p2 = ($signed(mul_ln1118_2_fu_392_p0) * $signed(mul_ln1118_2_fu_392_p1));

assign mul_ln1118_3_fu_510_p0 = p_Val2_44_reg_686;

assign mul_ln1118_3_fu_510_p1 = select_ln1148_6_reg_723;

assign mul_ln1118_3_fu_510_p2 = ($signed(mul_ln1118_3_fu_510_p0) * $signed(mul_ln1118_3_fu_510_p1));

assign mul_ln1118_fu_169_p0 = select_ln1148_reg_602;

assign mul_ln1118_fu_169_p1 = in_V_read_reg_572;

assign mul_ln1118_fu_169_p2 = ($signed(mul_ln1118_fu_169_p0) * $signed(mul_ln1118_fu_169_p1));

assign mul_ln1148_1_fu_447_p0 = sext_ln1148_reg_634;

assign mul_ln1148_1_fu_447_p2 = ($signed(mul_ln1148_1_fu_447_p0) * $signed(65'h19999999A));

assign mul_ln1148_fu_228_p0 = in_V_read_reg_572;

assign mul_ln1148_fu_228_p2 = ($signed(mul_ln1148_fu_228_p0) * $signed(65'h155555556));

assign select_ln1148_1_fu_379_p3 = ((tmp_31_reg_597[0:0] === 1'b1) ? sub_ln1148_fu_360_p2 : zext_ln1148_6_fu_375_p1);

assign select_ln1148_3_fu_266_p3 = ((tmp_28_reg_580[0:0] === 1'b1) ? sext_ln1148_6_fu_259_p1 : sext_ln1148_7_fu_263_p1);

assign select_ln1148_4_fu_279_p3 = ((tmp_28_reg_580[0:0] === 1'b1) ? sub_ln1148_7_fu_273_p2 : sext_ln1148_7_fu_263_p1);

assign select_ln1148_5_fu_484_p3 = ((tmp_28_reg_580[0:0] === 1'b1) ? sext_ln1148_8_fu_477_p1 : sext_ln1148_9_fu_481_p1);

assign select_ln1148_6_fu_497_p3 = ((tmp_28_reg_580[0:0] === 1'b1) ? sub_ln1148_9_fu_491_p2 : sext_ln1148_9_fu_481_p1);

assign select_ln1148_fu_155_p3 = ((tmp_31_fu_113_p3[0:0] === 1'b1) ? sub_ln1148_5_fu_135_p2 : zext_ln1148_4_fu_151_p1);

assign select_ln58_1_fu_219_p3 = ((tmp_32_reg_614[0:0] === 1'b1) ? tmp_33_fu_211_p3 : tmp_34_reg_619);

assign select_ln58_2_fu_341_p3 = ((tmp_36_reg_661[0:0] === 1'b1) ? tmp_37_fu_333_p3 : tmp_38_reg_666);

assign select_ln58_3_fu_441_p3 = ((tmp_39_reg_693[0:0] === 1'b1) ? tmp_40_fu_433_p3 : tmp_41_reg_698);

assign select_ln58_4_fu_560_p3 = ((tmp_44_reg_734[0:0] === 1'b1) ? tmp_45_fu_552_p3 : tmp_46_reg_739);

assign select_ln58_fu_105_p3 = ((tmp_28_fu_75_p3[0:0] === 1'b1) ? tmp_29_fu_89_p3 : tmp_30_fu_97_p3);

assign sext_ln1148_6_fu_259_p1 = $signed(tmp_35_fu_249_p4);

assign sext_ln1148_7_fu_263_p1 = $signed(tmp_reg_644);

assign sext_ln1148_8_fu_477_p1 = $signed(tmp_42_fu_467_p4);

assign sext_ln1148_9_fu_481_p1 = $signed(tmp_43_reg_718);

assign sext_ln1148_fu_225_p1 = in_V_read_reg_572;

assign sub_ln1148_5_fu_135_p2 = (32'd0 - zext_ln1148_fu_131_p1);

assign sub_ln1148_6_fu_244_p2 = (65'd0 - mul_ln1148_reg_639);

assign sub_ln1148_7_fu_273_p2 = (32'd0 - select_ln1148_3_fu_266_p3);

assign sub_ln1148_8_fu_462_p2 = (65'd0 - mul_ln1148_1_reg_713);

assign sub_ln1148_9_fu_491_p2 = (32'd0 - select_ln1148_5_fu_484_p3);

assign sub_ln1148_fu_360_p2 = (31'd0 - zext_ln1148_5_fu_356_p1);

assign sub_ln703_16_fu_206_p2 = ($signed(32'd0) - $signed(p_Val2_s_reg_607));

assign sub_ln703_17_fu_328_p2 = ($signed(32'd0) - $signed(p_Val2_43_reg_654));

assign sub_ln703_18_fu_428_p2 = ($signed(32'd0) - $signed(p_Val2_44_reg_686));

assign sub_ln703_19_fu_547_p2 = (32'd0 - p_Val2_45_reg_728);

assign sub_ln703_fu_83_p1 = in_V;

assign sub_ln703_fu_83_p2 = ($signed(32'd0) - $signed(sub_ln703_fu_83_p1));

assign tmp_28_fu_75_p1 = in_V;

assign tmp_28_fu_75_p3 = tmp_28_fu_75_p1[32'd31];

assign tmp_29_fu_89_p3 = sub_ln703_fu_83_p2[32'd31];

assign tmp_30_fu_97_p1 = in_V;

assign tmp_30_fu_97_p3 = tmp_30_fu_97_p1[32'd31];

assign tmp_31_fu_113_p1 = in_V;

assign tmp_31_fu_113_p3 = tmp_31_fu_113_p1[32'd31];

assign tmp_33_fu_211_p3 = sub_ln703_16_fu_206_p2[32'd31];

assign tmp_35_fu_249_p4 = {{sub_ln1148_6_fu_244_p2[64:34]}};

assign tmp_37_fu_333_p3 = sub_ln703_17_fu_328_p2[32'd31];

assign tmp_40_fu_433_p3 = sub_ln703_18_fu_428_p2[32'd31];

assign tmp_42_fu_467_p4 = {{sub_ln1148_8_fu_462_p2[64:35]}};

assign tmp_45_fu_552_p3 = sub_ln703_19_fu_547_p2[32'd31];

assign tmp_4_fu_366_p4 = {{in_V_read_reg_572[31:2]}};

assign tmp_s_fu_347_p4 = {{sub_ln703_reg_588[31:2]}};

assign zext_ln1148_4_fu_151_p1 = lshr_ln1148_9_fu_141_p4;

assign zext_ln1148_5_fu_356_p1 = tmp_s_fu_347_p4;

assign zext_ln1148_6_fu_375_p1 = tmp_4_fu_366_p4;

assign zext_ln1148_fu_131_p1 = lshr_ln1148_8_fu_121_p4;

always @ (posedge ap_clk) begin
    mul_ln1148_reg_639[0] <= 1'b0;
    mul_ln1148_1_reg_713[0] <= 1'b0;
end

endmodule //attention_exp
