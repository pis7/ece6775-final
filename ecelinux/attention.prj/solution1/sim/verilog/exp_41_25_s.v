// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module exp_41_25_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x_V,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [40:0] x_V;
output  [40:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
reg    ap_block_pp0_stage0_11001;
wire   [7:0] f_x_msb_3_table_V_address0;
reg    f_x_msb_3_table_V_ce0;
wire   [50:0] f_x_msb_3_table_V_q0;
wire   [7:0] f_x_msb_2_table_V_address0;
reg    f_x_msb_2_table_V_ce0;
wire   [63:0] f_x_msb_2_table_V_q0;
wire   [7:0] exp_x_msb_1_table_V_address0;
reg    exp_x_msb_1_table_V_ce0;
wire   [67:0] exp_x_msb_1_table_V_q0;
wire   [5:0] trunc_ln103_fu_195_p1;
reg   [5:0] trunc_ln103_reg_955;
reg   [5:0] trunc_ln103_reg_955_pp0_iter1_reg;
wire   [0:0] p_Result_s_fu_359_p3;
reg   [0:0] p_Result_s_reg_960;
reg   [0:0] p_Result_s_reg_960_pp0_iter1_reg;
reg   [0:0] p_Result_s_reg_960_pp0_iter2_reg;
reg   [0:0] p_Result_s_reg_960_pp0_iter3_reg;
reg   [0:0] p_Result_s_reg_960_pp0_iter4_reg;
reg   [0:0] p_Result_s_reg_960_pp0_iter5_reg;
reg   [0:0] p_Result_s_reg_960_pp0_iter6_reg;
reg   [0:0] p_Result_s_reg_960_pp0_iter7_reg;
reg   [0:0] p_Result_s_reg_960_pp0_iter8_reg;
reg   [0:0] p_Result_s_reg_960_pp0_iter9_reg;
reg   [0:0] p_Result_s_reg_960_pp0_iter10_reg;
reg   [0:0] p_Result_s_reg_960_pp0_iter11_reg;
reg   [0:0] p_Result_s_reg_960_pp0_iter12_reg;
reg   [6:0] p_Result_s_102_reg_966;
reg   [6:0] p_Result_s_102_reg_966_pp0_iter1_reg;
reg   [6:0] p_Result_s_102_reg_966_pp0_iter2_reg;
reg   [6:0] p_Result_s_102_reg_966_pp0_iter3_reg;
reg   [6:0] p_Result_s_102_reg_966_pp0_iter4_reg;
reg   [6:0] p_Result_s_102_reg_966_pp0_iter5_reg;
wire   [7:0] tmp_V_fu_539_p4;
reg   [7:0] tmp_V_reg_971;
wire   [0:0] or_ln489_21_fu_711_p2;
reg   [0:0] or_ln489_21_reg_986;
reg   [0:0] or_ln489_21_reg_986_pp0_iter1_reg;
reg   [0:0] or_ln489_21_reg_986_pp0_iter2_reg;
reg   [0:0] or_ln489_21_reg_986_pp0_iter3_reg;
reg   [0:0] or_ln489_21_reg_986_pp0_iter4_reg;
reg   [0:0] or_ln489_21_reg_986_pp0_iter5_reg;
reg   [0:0] or_ln489_21_reg_986_pp0_iter6_reg;
reg   [0:0] or_ln489_21_reg_986_pp0_iter7_reg;
reg   [0:0] or_ln489_21_reg_986_pp0_iter8_reg;
reg   [0:0] or_ln489_21_reg_986_pp0_iter9_reg;
reg   [0:0] or_ln489_21_reg_986_pp0_iter10_reg;
reg   [0:0] or_ln489_21_reg_986_pp0_iter11_reg;
reg   [0:0] or_ln489_21_reg_986_pp0_iter12_reg;
reg   [50:0] f_x_msb_3_V_reg_991;
wire   [8:0] ret_V_fu_734_p2;
reg   [8:0] ret_V_reg_996;
reg   [8:0] ret_V_reg_996_pp0_iter2_reg;
reg   [8:0] ret_V_reg_996_pp0_iter3_reg;
reg   [8:0] ret_V_reg_996_pp0_iter4_reg;
reg   [8:0] ret_V_reg_996_pp0_iter5_reg;
reg   [8:0] ret_V_reg_996_pp0_iter6_reg;
wire   [57:0] trunc_ln612_fu_740_p1;
reg   [57:0] trunc_ln612_reg_1002;
reg   [57:0] trunc_ln612_reg_1002_pp0_iter2_reg;
reg   [57:0] trunc_ln612_reg_1002_pp0_iter3_reg;
reg   [57:0] trunc_ln612_reg_1002_pp0_iter4_reg;
reg   [57:0] trunc_ln612_reg_1002_pp0_iter5_reg;
reg   [57:0] trunc_ln612_reg_1002_pp0_iter6_reg;
wire   [61:0] p_Result_8_fu_744_p4;
reg   [61:0] p_Result_8_reg_1008;
reg   [61:0] p_Result_8_reg_1008_pp0_iter3_reg;
reg   [61:0] p_Result_8_reg_1008_pp0_iter4_reg;
reg   [61:0] p_Result_8_reg_1008_pp0_iter5_reg;
reg   [61:0] p_Result_8_reg_1008_pp0_iter6_reg;
reg   [60:0] tmp_s_reg_1023;
wire   [71:0] exp_x_msb_2_3_4_lsb_s_fu_821_p2;
reg   [71:0] exp_x_msb_2_3_4_lsb_s_reg_1033;
reg   [67:0] exp_x_msb_1_V_reg_1038;
reg   [67:0] exp_x_msb_1_V_reg_1038_pp0_iter8_reg;
reg   [67:0] exp_x_msb_1_V_reg_1038_pp0_iter9_reg;
reg   [67:0] exp_x_msb_1_V_reg_1038_pp0_iter10_reg;
reg   [67:0] exp_x_msb_1_V_reg_1038_pp0_iter11_reg;
reg   [67:0] exp_x_msb_1_V_reg_1038_pp0_iter12_reg;
reg   [67:0] y_lo_s_V_reg_1054;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln544_fu_557_p1;
wire   [63:0] zext_ln544_1_fu_562_p1;
wire   [63:0] zext_ln544_2_fu_788_p1;
wire   [15:0] trunc_ln339_fu_377_p1;
wire   [0:0] p_Result_99_s_fu_199_p3;
wire   [0:0] p_Result_99_1_fu_207_p3;
wire   [0:0] p_Result_99_2_fu_215_p3;
wire   [0:0] p_Result_99_3_fu_223_p3;
wire   [0:0] p_Result_99_4_fu_231_p3;
wire   [0:0] p_Result_99_5_fu_239_p3;
wire   [0:0] p_Result_99_6_fu_247_p3;
wire   [0:0] p_Result_99_7_fu_255_p3;
wire   [0:0] p_Result_99_8_fu_263_p3;
wire   [0:0] p_Result_99_9_fu_271_p3;
wire   [0:0] p_Result_99_10_fu_279_p3;
wire   [0:0] p_Result_99_11_fu_287_p3;
wire   [0:0] p_Result_99_12_fu_295_p3;
wire   [0:0] p_Result_99_13_fu_303_p3;
wire   [0:0] p_Result_99_14_fu_311_p3;
wire   [0:0] p_Result_99_15_fu_319_p3;
wire   [0:0] p_Result_99_16_fu_327_p3;
wire   [0:0] p_Result_99_17_fu_335_p3;
wire   [0:0] p_Result_99_18_fu_343_p3;
wire   [0:0] p_Result_99_19_fu_351_p3;
wire   [0:0] tmp_fu_509_p3;
wire   [5:0] p_Result_5_fu_367_p4;
wire   [7:0] tmp_V_1_fu_549_p3;
wire   [31:0] p_Result_6_fu_381_p3;
wire   [0:0] icmp_ln489_1_fu_573_p2;
wire   [0:0] icmp_ln489_fu_567_p2;
wire   [0:0] xor_ln486_fu_389_p2;
wire   [0:0] xor_ln486_1_fu_395_p2;
wire   [0:0] xor_ln486_3_fu_407_p2;
wire   [0:0] xor_ln486_4_fu_413_p2;
wire   [0:0] or_ln489_1_fu_591_p2;
wire   [0:0] xor_ln486_2_fu_401_p2;
wire   [0:0] or_ln489_2_fu_597_p2;
wire   [0:0] or_ln489_fu_585_p2;
wire   [0:0] xor_ln486_6_fu_425_p2;
wire   [0:0] xor_ln486_7_fu_431_p2;
wire   [0:0] or_ln489_4_fu_609_p2;
wire   [0:0] xor_ln486_5_fu_419_p2;
wire   [0:0] xor_ln486_9_fu_443_p2;
wire   [0:0] xor_ln486_10_fu_449_p2;
wire   [0:0] or_ln489_6_fu_621_p2;
wire   [0:0] xor_ln486_8_fu_437_p2;
wire   [0:0] or_ln489_7_fu_627_p2;
wire   [0:0] or_ln489_5_fu_615_p2;
wire   [0:0] or_ln489_8_fu_633_p2;
wire   [0:0] or_ln489_3_fu_603_p2;
wire   [0:0] xor_ln486_12_fu_461_p2;
wire   [0:0] xor_ln486_13_fu_467_p2;
wire   [0:0] or_ln489_10_fu_645_p2;
wire   [0:0] xor_ln486_11_fu_455_p2;
wire   [0:0] xor_ln486_15_fu_479_p2;
wire   [0:0] xor_ln486_16_fu_485_p2;
wire   [0:0] or_ln489_12_fu_657_p2;
wire   [0:0] xor_ln486_14_fu_473_p2;
wire   [0:0] or_ln489_13_fu_663_p2;
wire   [0:0] or_ln489_11_fu_651_p2;
wire   [0:0] xor_ln486_18_fu_497_p2;
wire   [0:0] xor_ln486_19_fu_503_p2;
wire   [0:0] or_ln489_15_fu_675_p2;
wire   [0:0] xor_ln486_17_fu_491_p2;
wire   [0:0] icmp_ln1494_fu_523_p2;
wire   [0:0] and_ln489_fu_579_p2;
wire   [0:0] or_ln489_17_fu_687_p2;
wire   [0:0] xor_ln486_20_fu_517_p2;
wire   [0:0] or_ln489_18_fu_693_p2;
wire   [0:0] or_ln489_16_fu_681_p2;
wire   [0:0] or_ln489_19_fu_699_p2;
wire   [0:0] or_ln489_14_fu_669_p2;
wire   [0:0] or_ln489_20_fu_705_p2;
wire   [0:0] or_ln489_9_fu_639_p2;
wire   [5:0] p_Result_9_fu_717_p4;
wire   [8:0] rhs_V_fu_731_p1;
wire   [8:0] lhs_V_fu_727_p1;
wire   [66:0] p_Result_10_fu_752_p3;
wire   [66:0] grp_fu_766_p0;
wire   [61:0] grp_fu_766_p1;
wire   [128:0] grp_fu_766_p2;
wire   [7:0] p_Result_7_fu_772_p3;
wire   [70:0] rhs_V_1_fu_796_p4;
wire   [62:0] zext_ln703_3_fu_808_p1;
wire   [62:0] zext_ln703_fu_793_p1;
wire   [62:0] add_ln703_fu_811_p2;
wire   [71:0] zext_ln703_4_fu_817_p1;
wire   [71:0] zext_ln728_fu_804_p1;
wire   [71:0] grp_fu_833_p0;
wire   [67:0] grp_fu_833_p1;
wire   [139:0] grp_fu_833_p2;
wire   [67:0] y_l_V_fu_849_p2;
wire   [0:0] xor_ln490_fu_863_p2;
wire   [63:0] select_ln490_fu_868_p3;
wire   [63:0] y_V_fu_853_p4;
wire   [63:0] p_Val2_20_fu_876_p3;
wire   [1:0] tmp_80_fu_893_p4;
wire   [1:0] tmp_79_fu_883_p4;
wire   [1:0] or_ln852_fu_903_p2;
wire   [3:0] tmp_81_fu_915_p4;
wire   [0:0] icmp_ln852_1_fu_925_p2;
wire   [0:0] icmp_ln852_fu_909_p2;
wire   [0:0] or_ln852_1_fu_931_p2;
wire   [40:0] tmp_59_fu_937_p4;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to12;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [128:0] grp_fu_766_p00;
wire   [128:0] grp_fu_766_p10;
wire   [139:0] grp_fu_833_p00;
wire   [139:0] grp_fu_833_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
end

exp_41_25_s_f_x_mlbW #(
    .DataWidth( 51 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
f_x_msb_3_table_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(f_x_msb_3_table_V_address0),
    .ce0(f_x_msb_3_table_V_ce0),
    .q0(f_x_msb_3_table_V_q0)
);

exp_41_25_s_f_x_mmb6 #(
    .DataWidth( 64 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
f_x_msb_2_table_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(f_x_msb_2_table_V_address0),
    .ce0(f_x_msb_2_table_V_ce0),
    .q0(f_x_msb_2_table_V_q0)
);

exp_41_25_s_exp_xncg #(
    .DataWidth( 68 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
exp_x_msb_1_table_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_x_msb_1_table_V_address0),
    .ce0(exp_x_msb_1_table_V_ce0),
    .q0(exp_x_msb_1_table_V_q0)
);

dut_mul_67ns_62nsocq #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 67 ),
    .din1_WIDTH( 62 ),
    .dout_WIDTH( 129 ))
dut_mul_67ns_62nsocq_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_766_p0),
    .din1(grp_fu_766_p1),
    .ce(1'b1),
    .dout(grp_fu_766_p2)
);

dut_mul_72ns_68nspcA #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 72 ),
    .din1_WIDTH( 68 ),
    .dout_WIDTH( 140 ))
dut_mul_72ns_68nspcA_U45(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_833_p0),
    .din1(grp_fu_833_p1),
    .ce(1'b1),
    .dout(grp_fu_833_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_ln489_21_reg_986_pp0_iter6_reg == 1'd0))) begin
        exp_x_msb_1_V_reg_1038 <= exp_x_msb_1_table_V_q0;
        exp_x_msb_2_3_4_lsb_s_reg_1033 <= exp_x_msb_2_3_4_lsb_s_fu_821_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exp_x_msb_1_V_reg_1038_pp0_iter10_reg <= exp_x_msb_1_V_reg_1038_pp0_iter9_reg;
        exp_x_msb_1_V_reg_1038_pp0_iter11_reg <= exp_x_msb_1_V_reg_1038_pp0_iter10_reg;
        exp_x_msb_1_V_reg_1038_pp0_iter12_reg <= exp_x_msb_1_V_reg_1038_pp0_iter11_reg;
        exp_x_msb_1_V_reg_1038_pp0_iter8_reg <= exp_x_msb_1_V_reg_1038;
        exp_x_msb_1_V_reg_1038_pp0_iter9_reg <= exp_x_msb_1_V_reg_1038_pp0_iter8_reg;
        or_ln489_21_reg_986_pp0_iter10_reg <= or_ln489_21_reg_986_pp0_iter9_reg;
        or_ln489_21_reg_986_pp0_iter11_reg <= or_ln489_21_reg_986_pp0_iter10_reg;
        or_ln489_21_reg_986_pp0_iter12_reg <= or_ln489_21_reg_986_pp0_iter11_reg;
        or_ln489_21_reg_986_pp0_iter2_reg <= or_ln489_21_reg_986_pp0_iter1_reg;
        or_ln489_21_reg_986_pp0_iter3_reg <= or_ln489_21_reg_986_pp0_iter2_reg;
        or_ln489_21_reg_986_pp0_iter4_reg <= or_ln489_21_reg_986_pp0_iter3_reg;
        or_ln489_21_reg_986_pp0_iter5_reg <= or_ln489_21_reg_986_pp0_iter4_reg;
        or_ln489_21_reg_986_pp0_iter6_reg <= or_ln489_21_reg_986_pp0_iter5_reg;
        or_ln489_21_reg_986_pp0_iter7_reg <= or_ln489_21_reg_986_pp0_iter6_reg;
        or_ln489_21_reg_986_pp0_iter8_reg <= or_ln489_21_reg_986_pp0_iter7_reg;
        or_ln489_21_reg_986_pp0_iter9_reg <= or_ln489_21_reg_986_pp0_iter8_reg;
        p_Result_8_reg_1008_pp0_iter3_reg[50 : 0] <= p_Result_8_reg_1008[50 : 0];
p_Result_8_reg_1008_pp0_iter3_reg[61 : 56] <= p_Result_8_reg_1008[61 : 56];
        p_Result_8_reg_1008_pp0_iter4_reg[50 : 0] <= p_Result_8_reg_1008_pp0_iter3_reg[50 : 0];
p_Result_8_reg_1008_pp0_iter4_reg[61 : 56] <= p_Result_8_reg_1008_pp0_iter3_reg[61 : 56];
        p_Result_8_reg_1008_pp0_iter5_reg[50 : 0] <= p_Result_8_reg_1008_pp0_iter4_reg[50 : 0];
p_Result_8_reg_1008_pp0_iter5_reg[61 : 56] <= p_Result_8_reg_1008_pp0_iter4_reg[61 : 56];
        p_Result_8_reg_1008_pp0_iter6_reg[50 : 0] <= p_Result_8_reg_1008_pp0_iter5_reg[50 : 0];
p_Result_8_reg_1008_pp0_iter6_reg[61 : 56] <= p_Result_8_reg_1008_pp0_iter5_reg[61 : 56];
        p_Result_s_102_reg_966_pp0_iter2_reg <= p_Result_s_102_reg_966_pp0_iter1_reg;
        p_Result_s_102_reg_966_pp0_iter3_reg <= p_Result_s_102_reg_966_pp0_iter2_reg;
        p_Result_s_102_reg_966_pp0_iter4_reg <= p_Result_s_102_reg_966_pp0_iter3_reg;
        p_Result_s_102_reg_966_pp0_iter5_reg <= p_Result_s_102_reg_966_pp0_iter4_reg;
        p_Result_s_reg_960_pp0_iter10_reg <= p_Result_s_reg_960_pp0_iter9_reg;
        p_Result_s_reg_960_pp0_iter11_reg <= p_Result_s_reg_960_pp0_iter10_reg;
        p_Result_s_reg_960_pp0_iter12_reg <= p_Result_s_reg_960_pp0_iter11_reg;
        p_Result_s_reg_960_pp0_iter2_reg <= p_Result_s_reg_960_pp0_iter1_reg;
        p_Result_s_reg_960_pp0_iter3_reg <= p_Result_s_reg_960_pp0_iter2_reg;
        p_Result_s_reg_960_pp0_iter4_reg <= p_Result_s_reg_960_pp0_iter3_reg;
        p_Result_s_reg_960_pp0_iter5_reg <= p_Result_s_reg_960_pp0_iter4_reg;
        p_Result_s_reg_960_pp0_iter6_reg <= p_Result_s_reg_960_pp0_iter5_reg;
        p_Result_s_reg_960_pp0_iter7_reg <= p_Result_s_reg_960_pp0_iter6_reg;
        p_Result_s_reg_960_pp0_iter8_reg <= p_Result_s_reg_960_pp0_iter7_reg;
        p_Result_s_reg_960_pp0_iter9_reg <= p_Result_s_reg_960_pp0_iter8_reg;
        ret_V_reg_996_pp0_iter2_reg <= ret_V_reg_996;
        ret_V_reg_996_pp0_iter3_reg <= ret_V_reg_996_pp0_iter2_reg;
        ret_V_reg_996_pp0_iter4_reg <= ret_V_reg_996_pp0_iter3_reg;
        ret_V_reg_996_pp0_iter5_reg <= ret_V_reg_996_pp0_iter4_reg;
        ret_V_reg_996_pp0_iter6_reg <= ret_V_reg_996_pp0_iter5_reg;
        trunc_ln612_reg_1002_pp0_iter2_reg <= trunc_ln612_reg_1002;
        trunc_ln612_reg_1002_pp0_iter3_reg <= trunc_ln612_reg_1002_pp0_iter2_reg;
        trunc_ln612_reg_1002_pp0_iter4_reg <= trunc_ln612_reg_1002_pp0_iter3_reg;
        trunc_ln612_reg_1002_pp0_iter5_reg <= trunc_ln612_reg_1002_pp0_iter4_reg;
        trunc_ln612_reg_1002_pp0_iter6_reg <= trunc_ln612_reg_1002_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        f_x_msb_3_V_reg_991 <= f_x_msb_3_table_V_q0;
        or_ln489_21_reg_986 <= or_ln489_21_fu_711_p2;
        or_ln489_21_reg_986_pp0_iter1_reg <= or_ln489_21_reg_986;
        p_Result_s_102_reg_966 <= {{x_V[20:14]}};
        p_Result_s_102_reg_966_pp0_iter1_reg <= p_Result_s_102_reg_966;
        p_Result_s_reg_960 <= x_V[32'd40];
        p_Result_s_reg_960_pp0_iter1_reg <= p_Result_s_reg_960;
        tmp_V_reg_971 <= {{x_V[13:6]}};
        trunc_ln103_reg_955 <= trunc_ln103_fu_195_p1;
        trunc_ln103_reg_955_pp0_iter1_reg <= trunc_ln103_reg_955;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_ln489_21_reg_986_pp0_iter1_reg == 1'd0))) begin
        p_Result_8_reg_1008[50 : 0] <= p_Result_8_fu_744_p4[50 : 0];
p_Result_8_reg_1008[61 : 56] <= p_Result_8_fu_744_p4[61 : 56];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (or_ln489_21_reg_986 == 1'd0))) begin
        ret_V_reg_996 <= ret_V_fu_734_p2;
        trunc_ln612_reg_1002 <= trunc_ln612_fu_740_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_ln489_21_reg_986_pp0_iter5_reg == 1'd0))) begin
        tmp_s_reg_1023 <= {{grp_fu_766_p2[128:68]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_ln489_21_reg_986_pp0_iter11_reg == 1'd0))) begin
        y_lo_s_V_reg_1054 <= {{grp_fu_833_p2[139:72]}};
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1)) | ((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to12 = 1'b1;
    end else begin
        ap_idle_pp0_0to12 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to12 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        exp_x_msb_1_table_V_ce0 = 1'b1;
    end else begin
        exp_x_msb_1_table_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        f_x_msb_2_table_V_ce0 = 1'b1;
    end else begin
        f_x_msb_2_table_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        f_x_msb_3_table_V_ce0 = 1'b1;
    end else begin
        f_x_msb_3_table_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln703_fu_811_p2 = (zext_ln703_3_fu_808_p1 + zext_ln703_fu_793_p1);

assign and_ln489_fu_579_p2 = (icmp_ln489_fu_567_p2 & icmp_ln489_1_fu_573_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = ((or_ln852_1_fu_931_p2[0:0] === 1'b1) ? 41'd1099511627775 : tmp_59_fu_937_p4);

assign exp_x_msb_1_table_V_address0 = zext_ln544_2_fu_788_p1;

assign exp_x_msb_2_3_4_lsb_s_fu_821_p2 = (zext_ln703_4_fu_817_p1 + zext_ln728_fu_804_p1);

assign f_x_msb_2_table_V_address0 = zext_ln544_1_fu_562_p1;

assign f_x_msb_3_table_V_address0 = zext_ln544_fu_557_p1;

assign grp_fu_766_p0 = grp_fu_766_p00;

assign grp_fu_766_p00 = p_Result_10_fu_752_p3;

assign grp_fu_766_p1 = grp_fu_766_p10;

assign grp_fu_766_p10 = p_Result_8_fu_744_p4;

assign grp_fu_833_p0 = grp_fu_833_p00;

assign grp_fu_833_p00 = exp_x_msb_2_3_4_lsb_s_reg_1033;

assign grp_fu_833_p1 = grp_fu_833_p10;

assign grp_fu_833_p10 = exp_x_msb_1_V_reg_1038;

assign icmp_ln1494_fu_523_p2 = (($signed(p_Result_5_fu_367_p4) > $signed(6'd22)) ? 1'b1 : 1'b0);

assign icmp_ln489_1_fu_573_p2 = ((p_Result_6_fu_381_p3 > 32'd776142585) ? 1'b1 : 1'b0);

assign icmp_ln489_fu_567_p2 = ((p_Result_5_fu_367_p4 == 6'd22) ? 1'b1 : 1'b0);

assign icmp_ln852_1_fu_925_p2 = ((tmp_81_fu_915_p4 != 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln852_fu_909_p2 = ((or_ln852_fu_903_p2 != 2'd0) ? 1'b1 : 1'b0);

assign lhs_V_fu_727_p1 = p_Result_9_fu_717_p4;

assign or_ln489_10_fu_645_p2 = (xor_ln486_13_fu_467_p2 | xor_ln486_12_fu_461_p2);

assign or_ln489_11_fu_651_p2 = (xor_ln486_11_fu_455_p2 | or_ln489_10_fu_645_p2);

assign or_ln489_12_fu_657_p2 = (xor_ln486_16_fu_485_p2 | xor_ln486_15_fu_479_p2);

assign or_ln489_13_fu_663_p2 = (xor_ln486_14_fu_473_p2 | or_ln489_12_fu_657_p2);

assign or_ln489_14_fu_669_p2 = (or_ln489_13_fu_663_p2 | or_ln489_11_fu_651_p2);

assign or_ln489_15_fu_675_p2 = (xor_ln486_19_fu_503_p2 | xor_ln486_18_fu_497_p2);

assign or_ln489_16_fu_681_p2 = (xor_ln486_17_fu_491_p2 | or_ln489_15_fu_675_p2);

assign or_ln489_17_fu_687_p2 = (icmp_ln1494_fu_523_p2 | and_ln489_fu_579_p2);

assign or_ln489_18_fu_693_p2 = (xor_ln486_20_fu_517_p2 | or_ln489_17_fu_687_p2);

assign or_ln489_19_fu_699_p2 = (or_ln489_18_fu_693_p2 | or_ln489_16_fu_681_p2);

assign or_ln489_1_fu_591_p2 = (xor_ln486_4_fu_413_p2 | xor_ln486_3_fu_407_p2);

assign or_ln489_20_fu_705_p2 = (or_ln489_19_fu_699_p2 | or_ln489_14_fu_669_p2);

assign or_ln489_21_fu_711_p2 = (or_ln489_9_fu_639_p2 | or_ln489_20_fu_705_p2);

assign or_ln489_2_fu_597_p2 = (xor_ln486_2_fu_401_p2 | or_ln489_1_fu_591_p2);

assign or_ln489_3_fu_603_p2 = (or_ln489_fu_585_p2 | or_ln489_2_fu_597_p2);

assign or_ln489_4_fu_609_p2 = (xor_ln486_7_fu_431_p2 | xor_ln486_6_fu_425_p2);

assign or_ln489_5_fu_615_p2 = (xor_ln486_5_fu_419_p2 | or_ln489_4_fu_609_p2);

assign or_ln489_6_fu_621_p2 = (xor_ln486_9_fu_443_p2 | xor_ln486_10_fu_449_p2);

assign or_ln489_7_fu_627_p2 = (xor_ln486_8_fu_437_p2 | or_ln489_6_fu_621_p2);

assign or_ln489_8_fu_633_p2 = (or_ln489_7_fu_627_p2 | or_ln489_5_fu_615_p2);

assign or_ln489_9_fu_639_p2 = (or_ln489_8_fu_633_p2 | or_ln489_3_fu_603_p2);

assign or_ln489_fu_585_p2 = (xor_ln486_fu_389_p2 | xor_ln486_1_fu_395_p2);

assign or_ln852_1_fu_931_p2 = (icmp_ln852_fu_909_p2 | icmp_ln852_1_fu_925_p2);

assign or_ln852_fu_903_p2 = (tmp_80_fu_893_p4 | tmp_79_fu_883_p4);

assign p_Result_10_fu_752_p3 = {{ret_V_reg_996}, {trunc_ln612_reg_1002}};

assign p_Result_5_fu_367_p4 = {{x_V[21:16]}};

assign p_Result_6_fu_381_p3 = {{trunc_ln339_fu_377_p1}, {16'd0}};

assign p_Result_7_fu_772_p3 = {{p_Result_s_reg_960_pp0_iter5_reg}, {p_Result_s_102_reg_966_pp0_iter5_reg}};

assign p_Result_8_fu_744_p4 = {{{trunc_ln103_reg_955_pp0_iter1_reg}, {5'd0}}, {f_x_msb_3_V_reg_991}};

assign p_Result_99_10_fu_279_p3 = x_V[32'd31];

assign p_Result_99_11_fu_287_p3 = x_V[32'd32];

assign p_Result_99_12_fu_295_p3 = x_V[32'd33];

assign p_Result_99_13_fu_303_p3 = x_V[32'd34];

assign p_Result_99_14_fu_311_p3 = x_V[32'd35];

assign p_Result_99_15_fu_319_p3 = x_V[32'd36];

assign p_Result_99_16_fu_327_p3 = x_V[32'd37];

assign p_Result_99_17_fu_335_p3 = x_V[32'd38];

assign p_Result_99_18_fu_343_p3 = x_V[32'd39];

assign p_Result_99_19_fu_351_p3 = x_V[32'd40];

assign p_Result_99_1_fu_207_p3 = x_V[32'd22];

assign p_Result_99_2_fu_215_p3 = x_V[32'd23];

assign p_Result_99_3_fu_223_p3 = x_V[32'd24];

assign p_Result_99_4_fu_231_p3 = x_V[32'd25];

assign p_Result_99_5_fu_239_p3 = x_V[32'd26];

assign p_Result_99_6_fu_247_p3 = x_V[32'd27];

assign p_Result_99_7_fu_255_p3 = x_V[32'd28];

assign p_Result_99_8_fu_263_p3 = x_V[32'd29];

assign p_Result_99_9_fu_271_p3 = x_V[32'd30];

assign p_Result_99_s_fu_199_p3 = x_V[32'd21];

assign p_Result_9_fu_717_p4 = {{f_x_msb_2_table_V_q0[63:58]}};

assign p_Result_s_fu_359_p3 = x_V[32'd40];

assign p_Val2_20_fu_876_p3 = ((or_ln489_21_reg_986_pp0_iter12_reg[0:0] === 1'b1) ? select_ln490_fu_868_p3 : y_V_fu_853_p4);

assign ret_V_fu_734_p2 = (rhs_V_fu_731_p1 + lhs_V_fu_727_p1);

assign rhs_V_1_fu_796_p4 = {{{ret_V_reg_996_pp0_iter6_reg}, {trunc_ln612_reg_1002_pp0_iter6_reg}}, {4'd0}};

assign rhs_V_fu_731_p1 = tmp_V_reg_971;

assign select_ln490_fu_868_p3 = ((xor_ln490_fu_863_p2[0:0] === 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign tmp_59_fu_937_p4 = {{p_Val2_20_fu_876_p3[56:16]}};

assign tmp_79_fu_883_p4 = {{p_Val2_20_fu_876_p3[63:62]}};

assign tmp_80_fu_893_p4 = {{p_Val2_20_fu_876_p3[61:60]}};

assign tmp_81_fu_915_p4 = {{p_Val2_20_fu_876_p3[59:56]}};

assign tmp_V_1_fu_549_p3 = {{trunc_ln103_fu_195_p1}, {2'd0}};

assign tmp_V_fu_539_p4 = {{x_V[13:6]}};

assign tmp_fu_509_p3 = x_V[32'd40];

assign trunc_ln103_fu_195_p1 = x_V[5:0];

assign trunc_ln339_fu_377_p1 = x_V[15:0];

assign trunc_ln612_fu_740_p1 = f_x_msb_2_table_V_q0[57:0];

assign xor_ln486_10_fu_449_p2 = (p_Result_s_fu_359_p3 ^ p_Result_99_10_fu_279_p3);

assign xor_ln486_11_fu_455_p2 = (p_Result_s_fu_359_p3 ^ p_Result_99_11_fu_287_p3);

assign xor_ln486_12_fu_461_p2 = (p_Result_s_fu_359_p3 ^ p_Result_99_12_fu_295_p3);

assign xor_ln486_13_fu_467_p2 = (p_Result_s_fu_359_p3 ^ p_Result_99_13_fu_303_p3);

assign xor_ln486_14_fu_473_p2 = (p_Result_s_fu_359_p3 ^ p_Result_99_14_fu_311_p3);

assign xor_ln486_15_fu_479_p2 = (p_Result_s_fu_359_p3 ^ p_Result_99_15_fu_319_p3);

assign xor_ln486_16_fu_485_p2 = (p_Result_s_fu_359_p3 ^ p_Result_99_16_fu_327_p3);

assign xor_ln486_17_fu_491_p2 = (p_Result_s_fu_359_p3 ^ p_Result_99_17_fu_335_p3);

assign xor_ln486_18_fu_497_p2 = (p_Result_s_fu_359_p3 ^ p_Result_99_18_fu_343_p3);

assign xor_ln486_19_fu_503_p2 = (p_Result_s_fu_359_p3 ^ p_Result_99_19_fu_351_p3);

assign xor_ln486_1_fu_395_p2 = (p_Result_s_fu_359_p3 ^ p_Result_99_1_fu_207_p3);

assign xor_ln486_20_fu_517_p2 = (tmp_fu_509_p3 ^ p_Result_s_fu_359_p3);

assign xor_ln486_2_fu_401_p2 = (p_Result_s_fu_359_p3 ^ p_Result_99_2_fu_215_p3);

assign xor_ln486_3_fu_407_p2 = (p_Result_s_fu_359_p3 ^ p_Result_99_3_fu_223_p3);

assign xor_ln486_4_fu_413_p2 = (p_Result_s_fu_359_p3 ^ p_Result_99_4_fu_231_p3);

assign xor_ln486_5_fu_419_p2 = (p_Result_s_fu_359_p3 ^ p_Result_99_5_fu_239_p3);

assign xor_ln486_6_fu_425_p2 = (p_Result_s_fu_359_p3 ^ p_Result_99_6_fu_247_p3);

assign xor_ln486_7_fu_431_p2 = (p_Result_s_fu_359_p3 ^ p_Result_99_7_fu_255_p3);

assign xor_ln486_8_fu_437_p2 = (p_Result_s_fu_359_p3 ^ p_Result_99_8_fu_263_p3);

assign xor_ln486_9_fu_443_p2 = (p_Result_s_fu_359_p3 ^ p_Result_99_9_fu_271_p3);

assign xor_ln486_fu_389_p2 = (p_Result_s_fu_359_p3 ^ p_Result_99_s_fu_199_p3);

assign xor_ln490_fu_863_p2 = (p_Result_s_reg_960_pp0_iter12_reg ^ 1'd1);

assign y_V_fu_853_p4 = {{y_l_V_fu_849_p2[67:4]}};

assign y_l_V_fu_849_p2 = (exp_x_msb_1_V_reg_1038_pp0_iter12_reg + y_lo_s_V_reg_1054);

assign zext_ln544_1_fu_562_p1 = tmp_V_fu_539_p4;

assign zext_ln544_2_fu_788_p1 = p_Result_7_fu_772_p3;

assign zext_ln544_fu_557_p1 = tmp_V_1_fu_549_p3;

assign zext_ln703_3_fu_808_p1 = p_Result_8_reg_1008_pp0_iter6_reg;

assign zext_ln703_4_fu_817_p1 = add_ln703_fu_811_p2;

assign zext_ln703_fu_793_p1 = tmp_s_reg_1023;

assign zext_ln728_fu_804_p1 = rhs_V_1_fu_796_p4;

always @ (posedge ap_clk) begin
    p_Result_8_reg_1008[55:51] <= 5'b00000;
    p_Result_8_reg_1008_pp0_iter3_reg[55:51] <= 5'b00000;
    p_Result_8_reg_1008_pp0_iter4_reg[55:51] <= 5'b00000;
    p_Result_8_reg_1008_pp0_iter5_reg[55:51] <= 5'b00000;
    p_Result_8_reg_1008_pp0_iter6_reg[55:51] <= 5'b00000;
end

endmodule //exp_41_25_s
