// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module attention_exp (
        ap_clk,
        ap_rst,
        in_V,
        ap_return
);


input   ap_clk;
input   ap_rst;
input  [31:0] in_V;
output  [31:0] ap_return;

reg  signed [31:0] in_V_read_reg_573;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_pp0_stage0_11001;
reg  signed [31:0] in_V_read_reg_573_pp0_iter1_reg;
reg  signed [31:0] in_V_read_reg_573_pp0_iter2_reg;
reg  signed [31:0] in_V_read_reg_573_pp0_iter3_reg;
reg  signed [31:0] in_V_read_reg_573_pp0_iter4_reg;
wire   [0:0] tmp_28_fu_75_p3;
reg   [0:0] tmp_28_reg_581;
reg   [0:0] tmp_28_reg_581_pp0_iter1_reg;
reg   [0:0] tmp_28_reg_581_pp0_iter2_reg;
reg   [0:0] tmp_28_reg_581_pp0_iter3_reg;
reg   [0:0] tmp_28_reg_581_pp0_iter4_reg;
reg   [0:0] tmp_28_reg_581_pp0_iter5_reg;
reg   [0:0] tmp_28_reg_581_pp0_iter6_reg;
reg   [0:0] tmp_28_reg_581_pp0_iter7_reg;
wire   [31:0] sub_ln703_fu_83_p2;
reg   [31:0] sub_ln703_reg_589;
reg   [31:0] sub_ln703_reg_589_pp0_iter1_reg;
reg   [31:0] sub_ln703_reg_589_pp0_iter2_reg;
reg   [31:0] sub_ln703_reg_589_pp0_iter3_reg;
reg   [31:0] sub_ln703_reg_589_pp0_iter4_reg;
wire   [0:0] select_ln58_fu_105_p3;
reg   [0:0] select_ln58_reg_594;
reg   [0:0] select_ln58_reg_594_pp0_iter1_reg;
reg   [0:0] select_ln58_reg_594_pp0_iter2_reg;
reg   [0:0] select_ln58_reg_594_pp0_iter3_reg;
reg   [0:0] select_ln58_reg_594_pp0_iter4_reg;
reg   [0:0] select_ln58_reg_594_pp0_iter5_reg;
reg   [0:0] select_ln58_reg_594_pp0_iter6_reg;
reg   [0:0] select_ln58_reg_594_pp0_iter7_reg;
reg   [0:0] select_ln58_reg_594_pp0_iter8_reg;
reg   [0:0] select_ln58_reg_594_pp0_iter9_reg;
wire   [0:0] tmp_31_fu_113_p3;
reg   [0:0] tmp_31_reg_598;
reg   [0:0] tmp_31_reg_598_pp0_iter1_reg;
reg   [0:0] tmp_31_reg_598_pp0_iter2_reg;
reg   [0:0] tmp_31_reg_598_pp0_iter3_reg;
reg   [0:0] tmp_31_reg_598_pp0_iter4_reg;
wire   [31:0] select_ln1148_fu_155_p3;
reg   [31:0] select_ln1148_reg_603;
reg  signed [31:0] p_Val2_s_reg_608;
reg  signed [31:0] p_Val2_s_reg_608_pp0_iter2_reg;
reg  signed [31:0] p_Val2_s_reg_608_pp0_iter3_reg;
reg  signed [31:0] p_Val2_s_reg_608_pp0_iter4_reg;
reg   [0:0] tmp_32_reg_615;
reg   [0:0] tmp_34_reg_620;
wire   [0:0] select_ln58_1_fu_214_p3;
reg   [0:0] select_ln58_1_reg_625;
reg   [0:0] select_ln58_1_reg_625_pp0_iter3_reg;
reg   [0:0] select_ln58_1_reg_625_pp0_iter4_reg;
reg   [0:0] select_ln58_1_reg_625_pp0_iter5_reg;
reg   [0:0] select_ln58_1_reg_625_pp0_iter6_reg;
reg   [0:0] select_ln58_1_reg_625_pp0_iter7_reg;
reg   [0:0] select_ln58_1_reg_625_pp0_iter8_reg;
reg   [0:0] select_ln58_1_reg_625_pp0_iter9_reg;
wire  signed [64:0] sext_ln1148_fu_220_p1;
reg  signed [64:0] sext_ln1148_reg_629;
reg  signed [64:0] sext_ln1148_reg_629_pp0_iter3_reg;
reg  signed [64:0] sext_ln1148_reg_629_pp0_iter4_reg;
reg  signed [64:0] sext_ln1148_reg_629_pp0_iter5_reg;
reg  signed [64:0] sext_ln1148_reg_629_pp0_iter6_reg;
wire   [64:0] mul_ln1148_fu_223_p2;
reg   [64:0] mul_ln1148_reg_634;
reg   [30:0] tmp_reg_639;
wire   [31:0] select_ln1148_4_fu_274_p3;
reg   [31:0] select_ln1148_4_reg_644;
reg  signed [31:0] p_Val2_43_reg_649;
reg  signed [31:0] p_Val2_43_reg_649_pp0_iter5_reg;
reg  signed [31:0] p_Val2_43_reg_649_pp0_iter6_reg;
reg   [0:0] tmp_36_reg_656;
reg   [0:0] tmp_38_reg_661;
wire   [31:0] add_ln703_fu_319_p2;
wire   [31:0] add_ln703_16_fu_324_p2;
reg   [31:0] add_ln703_16_reg_671;
reg   [31:0] add_ln703_16_reg_671_pp0_iter6_reg;
wire   [0:0] select_ln58_2_fu_342_p3;
reg   [0:0] select_ln58_2_reg_677;
reg   [0:0] select_ln58_2_reg_677_pp0_iter6_reg;
reg   [0:0] select_ln58_2_reg_677_pp0_iter7_reg;
reg   [0:0] select_ln58_2_reg_677_pp0_iter8_reg;
reg   [0:0] select_ln58_2_reg_677_pp0_iter9_reg;
wire   [30:0] select_ln1148_1_fu_380_p3;
reg   [30:0] select_ln1148_1_reg_681;
reg  signed [31:0] p_Val2_44_reg_686;
reg  signed [31:0] p_Val2_44_reg_686_pp0_iter7_reg;
reg  signed [31:0] p_Val2_44_reg_686_pp0_iter8_reg;
reg  signed [31:0] p_Val2_44_reg_686_pp0_iter9_reg;
reg   [0:0] tmp_39_reg_693;
reg   [0:0] tmp_41_reg_698;
wire   [31:0] add_ln703_17_fu_425_p2;
reg   [31:0] add_ln703_17_reg_703;
reg   [31:0] add_ln703_17_reg_703_pp0_iter8_reg;
reg   [31:0] add_ln703_17_reg_703_pp0_iter9_reg;
wire   [0:0] select_ln58_3_fu_442_p3;
reg   [0:0] select_ln58_3_reg_709;
reg   [0:0] select_ln58_3_reg_709_pp0_iter8_reg;
reg   [0:0] select_ln58_3_reg_709_pp0_iter9_reg;
wire   [64:0] mul_ln1148_1_fu_448_p2;
reg   [64:0] mul_ln1148_1_reg_713;
reg   [29:0] tmp_43_reg_718;
wire   [31:0] select_ln1148_6_fu_498_p3;
reg   [31:0] select_ln1148_6_reg_723;
reg   [31:0] p_Val2_45_reg_728;
reg   [0:0] tmp_44_reg_734;
reg   [0:0] tmp_46_reg_739;
reg   [31:0] ap_phi_mux_agg_result_V_0_lcssa_phi_fu_60_p12;
wire   [31:0] ap_phi_reg_pp0_iter0_agg_result_V_0_lcssa_reg_56;
reg   [31:0] ap_phi_reg_pp0_iter1_agg_result_V_0_lcssa_reg_56;
reg   [31:0] ap_phi_reg_pp0_iter2_agg_result_V_0_lcssa_reg_56;
reg   [31:0] ap_phi_reg_pp0_iter3_agg_result_V_0_lcssa_reg_56;
reg   [31:0] ap_phi_reg_pp0_iter4_agg_result_V_0_lcssa_reg_56;
reg   [31:0] ap_phi_reg_pp0_iter5_agg_result_V_0_lcssa_reg_56;
reg   [31:0] ap_phi_reg_pp0_iter6_agg_result_V_0_lcssa_reg_56;
reg   [31:0] ap_phi_reg_pp0_iter7_agg_result_V_0_lcssa_reg_56;
reg   [31:0] ap_phi_reg_pp0_iter8_agg_result_V_0_lcssa_reg_56;
reg   [31:0] ap_phi_reg_pp0_iter9_agg_result_V_0_lcssa_reg_56;
reg   [31:0] ap_phi_reg_pp0_iter10_agg_result_V_0_lcssa_reg_56;
wire   [31:0] add_ln703_18_fu_543_p2;
wire   [0:0] select_ln58_4_fu_561_p3;
wire   [31:0] add_ln703_19_fu_567_p2;
wire  signed [31:0] tmp_28_fu_75_p1;
wire    ap_block_pp0_stage0;
wire  signed [31:0] sub_ln703_fu_83_p1;
wire  signed [31:0] tmp_30_fu_97_p1;
wire   [0:0] tmp_29_fu_89_p3;
wire   [0:0] tmp_30_fu_97_p3;
wire  signed [31:0] tmp_31_fu_113_p1;
wire   [30:0] lshr_ln1148_8_fu_121_p4;
wire   [31:0] zext_ln1148_fu_131_p1;
wire  signed [31:0] lshr_ln1148_9_fu_141_p1;
wire   [30:0] lshr_ln1148_9_fu_141_p4;
wire   [31:0] sub_ln1148_5_fu_135_p2;
wire   [31:0] zext_ln1148_4_fu_151_p1;
wire  signed [31:0] mul_ln1118_fu_169_p0;
wire  signed [31:0] mul_ln1118_fu_169_p1;
wire   [53:0] mul_ln1118_fu_169_p2;
wire   [31:0] sub_ln703_16_fu_201_p2;
wire   [0:0] tmp_33_fu_206_p3;
wire  signed [31:0] mul_ln1148_fu_223_p0;
wire   [64:0] sub_ln1148_6_fu_239_p2;
wire   [30:0] tmp_35_fu_244_p4;
wire  signed [31:0] sext_ln1148_6_fu_254_p1;
wire  signed [31:0] sext_ln1148_7_fu_258_p1;
wire   [31:0] select_ln1148_3_fu_261_p3;
wire   [31:0] sub_ln1148_7_fu_268_p2;
wire  signed [31:0] mul_ln1118_1_fu_287_p0;
wire  signed [31:0] mul_ln1118_1_fu_287_p1;
wire   [53:0] mul_ln1118_1_fu_287_p2;
wire   [31:0] sub_ln703_17_fu_329_p2;
wire   [0:0] tmp_37_fu_334_p3;
wire   [29:0] tmp_s_fu_348_p4;
wire   [30:0] zext_ln1148_5_fu_357_p1;
wire   [29:0] tmp_4_fu_367_p4;
wire   [30:0] sub_ln1148_fu_361_p2;
wire   [30:0] zext_ln1148_6_fu_376_p1;
wire  signed [30:0] mul_ln1118_2_fu_393_p0;
wire  signed [31:0] mul_ln1118_2_fu_393_p1;
wire   [53:0] mul_ln1118_2_fu_393_p2;
wire   [31:0] sub_ln703_18_fu_429_p2;
wire   [0:0] tmp_40_fu_434_p3;
wire  signed [31:0] mul_ln1148_1_fu_448_p0;
wire   [64:0] sub_ln1148_8_fu_463_p2;
wire   [29:0] tmp_42_fu_468_p4;
wire  signed [31:0] sext_ln1148_8_fu_478_p1;
wire  signed [31:0] sext_ln1148_9_fu_482_p1;
wire   [31:0] select_ln1148_5_fu_485_p3;
wire   [31:0] sub_ln1148_9_fu_492_p2;
wire  signed [31:0] mul_ln1118_3_fu_511_p0;
wire  signed [31:0] mul_ln1118_3_fu_511_p1;
wire   [60:0] mul_ln1118_3_fu_511_p2;
wire   [31:0] sub_ln703_19_fu_548_p2;
wire   [0:0] tmp_45_fu_553_p3;
reg   [31:0] in_V_int_reg;
reg    ap_condition_251;
reg    ap_condition_239;
reg    ap_condition_242;

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if ((select_ln58_fu_105_p3 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_agg_result_V_0_lcssa_reg_56 <= 32'd4194304;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_agg_result_V_0_lcssa_reg_56 <= ap_phi_reg_pp0_iter0_agg_result_V_0_lcssa_reg_56;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if ((1'b1 == ap_condition_239)) begin
            ap_phi_reg_pp0_iter6_agg_result_V_0_lcssa_reg_56 <= add_ln703_16_fu_324_p2;
        end else if (((select_ln58_1_reg_625_pp0_iter4_reg == 1'd1) & (select_ln58_reg_594_pp0_iter4_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter6_agg_result_V_0_lcssa_reg_56 <= add_ln703_fu_319_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter6_agg_result_V_0_lcssa_reg_56 <= ap_phi_reg_pp0_iter5_agg_result_V_0_lcssa_reg_56;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if ((1'b1 == ap_condition_242)) begin
            ap_phi_reg_pp0_iter8_agg_result_V_0_lcssa_reg_56 <= add_ln703_17_fu_425_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter8_agg_result_V_0_lcssa_reg_56 <= ap_phi_reg_pp0_iter7_agg_result_V_0_lcssa_reg_56;
        end
    end
end

always @ (posedge ap_clk) begin
    in_V_int_reg <= in_V;
end

always @ (posedge ap_clk) begin
    if (((select_ln58_1_reg_625_pp0_iter4_reg == 1'd0) & (select_ln58_reg_594_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln703_16_reg_671 <= add_ln703_16_fu_324_p2;
        select_ln58_2_reg_677 <= select_ln58_2_fu_342_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln703_16_reg_671_pp0_iter6_reg <= add_ln703_16_reg_671;
        add_ln703_17_reg_703_pp0_iter8_reg <= add_ln703_17_reg_703;
        add_ln703_17_reg_703_pp0_iter9_reg <= add_ln703_17_reg_703_pp0_iter8_reg;
        ap_phi_reg_pp0_iter10_agg_result_V_0_lcssa_reg_56 <= ap_phi_reg_pp0_iter9_agg_result_V_0_lcssa_reg_56;
        ap_phi_reg_pp0_iter2_agg_result_V_0_lcssa_reg_56 <= ap_phi_reg_pp0_iter1_agg_result_V_0_lcssa_reg_56;
        ap_phi_reg_pp0_iter3_agg_result_V_0_lcssa_reg_56 <= ap_phi_reg_pp0_iter2_agg_result_V_0_lcssa_reg_56;
        ap_phi_reg_pp0_iter4_agg_result_V_0_lcssa_reg_56 <= ap_phi_reg_pp0_iter3_agg_result_V_0_lcssa_reg_56;
        ap_phi_reg_pp0_iter5_agg_result_V_0_lcssa_reg_56 <= ap_phi_reg_pp0_iter4_agg_result_V_0_lcssa_reg_56;
        ap_phi_reg_pp0_iter7_agg_result_V_0_lcssa_reg_56 <= ap_phi_reg_pp0_iter6_agg_result_V_0_lcssa_reg_56;
        ap_phi_reg_pp0_iter9_agg_result_V_0_lcssa_reg_56 <= ap_phi_reg_pp0_iter8_agg_result_V_0_lcssa_reg_56;
        in_V_read_reg_573 <= in_V_int_reg;
        in_V_read_reg_573_pp0_iter1_reg <= in_V_read_reg_573;
        in_V_read_reg_573_pp0_iter2_reg <= in_V_read_reg_573_pp0_iter1_reg;
        in_V_read_reg_573_pp0_iter3_reg <= in_V_read_reg_573_pp0_iter2_reg;
        in_V_read_reg_573_pp0_iter4_reg <= in_V_read_reg_573_pp0_iter3_reg;
        p_Val2_43_reg_649_pp0_iter5_reg <= p_Val2_43_reg_649;
        p_Val2_43_reg_649_pp0_iter6_reg <= p_Val2_43_reg_649_pp0_iter5_reg;
        p_Val2_44_reg_686_pp0_iter7_reg <= p_Val2_44_reg_686;
        p_Val2_44_reg_686_pp0_iter8_reg <= p_Val2_44_reg_686_pp0_iter7_reg;
        p_Val2_44_reg_686_pp0_iter9_reg <= p_Val2_44_reg_686_pp0_iter8_reg;
        p_Val2_s_reg_608_pp0_iter2_reg <= p_Val2_s_reg_608;
        p_Val2_s_reg_608_pp0_iter3_reg <= p_Val2_s_reg_608_pp0_iter2_reg;
        p_Val2_s_reg_608_pp0_iter4_reg <= p_Val2_s_reg_608_pp0_iter3_reg;
        select_ln58_1_reg_625_pp0_iter3_reg <= select_ln58_1_reg_625;
        select_ln58_1_reg_625_pp0_iter4_reg <= select_ln58_1_reg_625_pp0_iter3_reg;
        select_ln58_1_reg_625_pp0_iter5_reg <= select_ln58_1_reg_625_pp0_iter4_reg;
        select_ln58_1_reg_625_pp0_iter6_reg <= select_ln58_1_reg_625_pp0_iter5_reg;
        select_ln58_1_reg_625_pp0_iter7_reg <= select_ln58_1_reg_625_pp0_iter6_reg;
        select_ln58_1_reg_625_pp0_iter8_reg <= select_ln58_1_reg_625_pp0_iter7_reg;
        select_ln58_1_reg_625_pp0_iter9_reg <= select_ln58_1_reg_625_pp0_iter8_reg;
        select_ln58_2_reg_677_pp0_iter6_reg <= select_ln58_2_reg_677;
        select_ln58_2_reg_677_pp0_iter7_reg <= select_ln58_2_reg_677_pp0_iter6_reg;
        select_ln58_2_reg_677_pp0_iter8_reg <= select_ln58_2_reg_677_pp0_iter7_reg;
        select_ln58_2_reg_677_pp0_iter9_reg <= select_ln58_2_reg_677_pp0_iter8_reg;
        select_ln58_3_reg_709_pp0_iter8_reg <= select_ln58_3_reg_709;
        select_ln58_3_reg_709_pp0_iter9_reg <= select_ln58_3_reg_709_pp0_iter8_reg;
        select_ln58_reg_594 <= select_ln58_fu_105_p3;
        select_ln58_reg_594_pp0_iter1_reg <= select_ln58_reg_594;
        select_ln58_reg_594_pp0_iter2_reg <= select_ln58_reg_594_pp0_iter1_reg;
        select_ln58_reg_594_pp0_iter3_reg <= select_ln58_reg_594_pp0_iter2_reg;
        select_ln58_reg_594_pp0_iter4_reg <= select_ln58_reg_594_pp0_iter3_reg;
        select_ln58_reg_594_pp0_iter5_reg <= select_ln58_reg_594_pp0_iter4_reg;
        select_ln58_reg_594_pp0_iter6_reg <= select_ln58_reg_594_pp0_iter5_reg;
        select_ln58_reg_594_pp0_iter7_reg <= select_ln58_reg_594_pp0_iter6_reg;
        select_ln58_reg_594_pp0_iter8_reg <= select_ln58_reg_594_pp0_iter7_reg;
        select_ln58_reg_594_pp0_iter9_reg <= select_ln58_reg_594_pp0_iter8_reg;
        sext_ln1148_reg_629_pp0_iter3_reg <= sext_ln1148_reg_629;
        sext_ln1148_reg_629_pp0_iter4_reg <= sext_ln1148_reg_629_pp0_iter3_reg;
        sext_ln1148_reg_629_pp0_iter5_reg <= sext_ln1148_reg_629_pp0_iter4_reg;
        sext_ln1148_reg_629_pp0_iter6_reg <= sext_ln1148_reg_629_pp0_iter5_reg;
        sub_ln703_reg_589 <= sub_ln703_fu_83_p2;
        sub_ln703_reg_589_pp0_iter1_reg <= sub_ln703_reg_589;
        sub_ln703_reg_589_pp0_iter2_reg <= sub_ln703_reg_589_pp0_iter1_reg;
        sub_ln703_reg_589_pp0_iter3_reg <= sub_ln703_reg_589_pp0_iter2_reg;
        sub_ln703_reg_589_pp0_iter4_reg <= sub_ln703_reg_589_pp0_iter3_reg;
        tmp_28_reg_581 <= tmp_28_fu_75_p1[32'd31];
        tmp_28_reg_581_pp0_iter1_reg <= tmp_28_reg_581;
        tmp_28_reg_581_pp0_iter2_reg <= tmp_28_reg_581_pp0_iter1_reg;
        tmp_28_reg_581_pp0_iter3_reg <= tmp_28_reg_581_pp0_iter2_reg;
        tmp_28_reg_581_pp0_iter4_reg <= tmp_28_reg_581_pp0_iter3_reg;
        tmp_28_reg_581_pp0_iter5_reg <= tmp_28_reg_581_pp0_iter4_reg;
        tmp_28_reg_581_pp0_iter6_reg <= tmp_28_reg_581_pp0_iter5_reg;
        tmp_28_reg_581_pp0_iter7_reg <= tmp_28_reg_581_pp0_iter6_reg;
        tmp_31_reg_598_pp0_iter1_reg <= tmp_31_reg_598;
        tmp_31_reg_598_pp0_iter2_reg <= tmp_31_reg_598_pp0_iter1_reg;
        tmp_31_reg_598_pp0_iter3_reg <= tmp_31_reg_598_pp0_iter2_reg;
        tmp_31_reg_598_pp0_iter4_reg <= tmp_31_reg_598_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln58_1_reg_625_pp0_iter6_reg == 1'd0) & (select_ln58_2_reg_677_pp0_iter6_reg == 1'd0) & (select_ln58_reg_594_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln703_17_reg_703 <= add_ln703_17_fu_425_p2;
        select_ln58_3_reg_709 <= select_ln58_3_fu_442_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln58_1_reg_625_pp0_iter6_reg == 1'd0) & (select_ln58_3_fu_442_p3 == 1'd0) & (select_ln58_2_reg_677_pp0_iter6_reg == 1'd0) & (select_ln58_reg_594_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_ln1148_1_reg_713[64 : 1] <= mul_ln1148_1_fu_448_p2[64 : 1];
        tmp_43_reg_718 <= {{mul_ln1148_1_fu_448_p2[64:35]}};
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln58_1_fu_214_p3 == 1'd0) & (select_ln58_reg_594_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_ln1148_reg_634[64 : 1] <= mul_ln1148_fu_223_p2[64 : 1];
        sext_ln1148_reg_629 <= sext_ln1148_fu_220_p1;
        tmp_reg_639 <= {{mul_ln1148_fu_223_p2[64:34]}};
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln58_1_reg_625_pp0_iter3_reg == 1'd0) & (select_ln58_reg_594_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_43_reg_649 <= {{mul_ln1118_1_fu_287_p2[53:22]}};
        tmp_36_reg_656 <= mul_ln1118_1_fu_287_p2[32'd53];
        tmp_38_reg_661 <= mul_ln1118_1_fu_287_p2[32'd53];
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln58_1_reg_625_pp0_iter5_reg == 1'd0) & (select_ln58_2_reg_677 == 1'd0) & (select_ln58_reg_594_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_44_reg_686 <= {{mul_ln1118_2_fu_393_p2[53:22]}};
        tmp_39_reg_693 <= mul_ln1118_2_fu_393_p2[32'd53];
        tmp_41_reg_698 <= mul_ln1118_2_fu_393_p2[32'd53];
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln58_1_reg_625_pp0_iter8_reg == 1'd0) & (select_ln58_3_reg_709_pp0_iter8_reg == 1'd0) & (select_ln58_2_reg_677_pp0_iter8_reg == 1'd0) & (select_ln58_reg_594_pp0_iter8_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_45_reg_728 <= {{mul_ln1118_3_fu_511_p2[53:22]}};
        tmp_44_reg_734 <= mul_ln1118_3_fu_511_p2[32'd53];
        tmp_46_reg_739 <= mul_ln1118_3_fu_511_p2[32'd53];
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln58_reg_594 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_s_reg_608 <= {{mul_ln1118_fu_169_p2[53:22]}};
        tmp_32_reg_615 <= mul_ln1118_fu_169_p2[32'd53];
        tmp_34_reg_620 <= mul_ln1118_fu_169_p2[32'd53];
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln58_1_reg_625_pp0_iter4_reg == 1'd0) & (select_ln58_2_fu_342_p3 == 1'd0) & (select_ln58_reg_594_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln1148_1_reg_681 <= select_ln1148_1_fu_380_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln58_1_reg_625 == 1'd0) & (select_ln58_reg_594_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln1148_4_reg_644 <= select_ln1148_4_fu_274_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln58_1_reg_625_pp0_iter7_reg == 1'd0) & (select_ln58_3_reg_709 == 1'd0) & (select_ln58_2_reg_677_pp0_iter7_reg == 1'd0) & (select_ln58_reg_594_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln1148_6_reg_723 <= select_ln1148_6_fu_498_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln58_fu_105_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln1148_reg_603 <= select_ln1148_fu_155_p3;
        tmp_31_reg_598 <= tmp_31_fu_113_p1[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln58_reg_594_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln58_1_reg_625 <= select_ln58_1_fu_214_p3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_251)) begin
        if ((select_ln58_4_fu_561_p3 == 1'd0)) begin
            ap_phi_mux_agg_result_V_0_lcssa_phi_fu_60_p12 = add_ln703_19_fu_567_p2;
        end else if ((select_ln58_4_fu_561_p3 == 1'd1)) begin
            ap_phi_mux_agg_result_V_0_lcssa_phi_fu_60_p12 = add_ln703_18_fu_543_p2;
        end else begin
            ap_phi_mux_agg_result_V_0_lcssa_phi_fu_60_p12 = ap_phi_reg_pp0_iter10_agg_result_V_0_lcssa_reg_56;
        end
    end else begin
        ap_phi_mux_agg_result_V_0_lcssa_phi_fu_60_p12 = ap_phi_reg_pp0_iter10_agg_result_V_0_lcssa_reg_56;
    end
end

assign add_ln703_16_fu_324_p2 = ($signed(add_ln703_fu_319_p2) + $signed(p_Val2_s_reg_608_pp0_iter4_reg));

assign add_ln703_17_fu_425_p2 = ($signed(p_Val2_43_reg_649_pp0_iter6_reg) + $signed(add_ln703_16_reg_671_pp0_iter6_reg));

assign add_ln703_18_fu_543_p2 = ($signed(add_ln703_17_reg_703_pp0_iter9_reg) + $signed(p_Val2_44_reg_686_pp0_iter9_reg));

assign add_ln703_19_fu_567_p2 = (add_ln703_18_fu_543_p2 + p_Val2_45_reg_728);

assign add_ln703_fu_319_p2 = ($signed(in_V_read_reg_573_pp0_iter4_reg) + $signed(32'd4194304));

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_239 = ((select_ln58_1_reg_625_pp0_iter4_reg == 1'd0) & (select_ln58_reg_594_pp0_iter4_reg == 1'd0) & (select_ln58_2_fu_342_p3 == 1'd1));
end

always @ (*) begin
    ap_condition_242 = ((select_ln58_1_reg_625_pp0_iter6_reg == 1'd0) & (select_ln58_2_reg_677_pp0_iter6_reg == 1'd0) & (select_ln58_reg_594_pp0_iter6_reg == 1'd0) & (select_ln58_3_fu_442_p3 == 1'd1));
end

always @ (*) begin
    ap_condition_251 = ((select_ln58_1_reg_625_pp0_iter9_reg == 1'd0) & (select_ln58_3_reg_709_pp0_iter9_reg == 1'd0) & (select_ln58_2_reg_677_pp0_iter9_reg == 1'd0) & (select_ln58_reg_594_pp0_iter9_reg == 1'd0));
end

assign ap_phi_reg_pp0_iter0_agg_result_V_0_lcssa_reg_56 = 'bx;

assign ap_return = ap_phi_mux_agg_result_V_0_lcssa_phi_fu_60_p12;

assign lshr_ln1148_8_fu_121_p4 = {{sub_ln703_fu_83_p2[31:1]}};

assign lshr_ln1148_9_fu_141_p1 = in_V_int_reg;

assign lshr_ln1148_9_fu_141_p4 = {{lshr_ln1148_9_fu_141_p1[31:1]}};

assign mul_ln1118_1_fu_287_p0 = p_Val2_s_reg_608_pp0_iter3_reg;

assign mul_ln1118_1_fu_287_p1 = select_ln1148_4_reg_644;

assign mul_ln1118_1_fu_287_p2 = ($signed(mul_ln1118_1_fu_287_p0) * $signed(mul_ln1118_1_fu_287_p1));

assign mul_ln1118_2_fu_393_p0 = select_ln1148_1_reg_681;

assign mul_ln1118_2_fu_393_p1 = p_Val2_43_reg_649_pp0_iter5_reg;

assign mul_ln1118_2_fu_393_p2 = ($signed(mul_ln1118_2_fu_393_p0) * $signed(mul_ln1118_2_fu_393_p1));

assign mul_ln1118_3_fu_511_p0 = p_Val2_44_reg_686_pp0_iter8_reg;

assign mul_ln1118_3_fu_511_p1 = select_ln1148_6_reg_723;

assign mul_ln1118_3_fu_511_p2 = ($signed(mul_ln1118_3_fu_511_p0) * $signed(mul_ln1118_3_fu_511_p1));

assign mul_ln1118_fu_169_p0 = select_ln1148_reg_603;

assign mul_ln1118_fu_169_p1 = in_V_read_reg_573;

assign mul_ln1118_fu_169_p2 = ($signed(mul_ln1118_fu_169_p0) * $signed(mul_ln1118_fu_169_p1));

assign mul_ln1148_1_fu_448_p0 = sext_ln1148_reg_629_pp0_iter6_reg;

assign mul_ln1148_1_fu_448_p2 = ($signed(mul_ln1148_1_fu_448_p0) * $signed(65'h19999999A));

assign mul_ln1148_fu_223_p0 = in_V_read_reg_573_pp0_iter1_reg;

assign mul_ln1148_fu_223_p2 = ($signed(mul_ln1148_fu_223_p0) * $signed(65'h155555556));

assign select_ln1148_1_fu_380_p3 = ((tmp_31_reg_598_pp0_iter4_reg[0:0] === 1'b1) ? sub_ln1148_fu_361_p2 : zext_ln1148_6_fu_376_p1);

assign select_ln1148_3_fu_261_p3 = ((tmp_28_reg_581_pp0_iter2_reg[0:0] === 1'b1) ? sext_ln1148_6_fu_254_p1 : sext_ln1148_7_fu_258_p1);

assign select_ln1148_4_fu_274_p3 = ((tmp_28_reg_581_pp0_iter2_reg[0:0] === 1'b1) ? sub_ln1148_7_fu_268_p2 : sext_ln1148_7_fu_258_p1);

assign select_ln1148_5_fu_485_p3 = ((tmp_28_reg_581_pp0_iter7_reg[0:0] === 1'b1) ? sext_ln1148_8_fu_478_p1 : sext_ln1148_9_fu_482_p1);

assign select_ln1148_6_fu_498_p3 = ((tmp_28_reg_581_pp0_iter7_reg[0:0] === 1'b1) ? sub_ln1148_9_fu_492_p2 : sext_ln1148_9_fu_482_p1);

assign select_ln1148_fu_155_p3 = ((tmp_31_fu_113_p3[0:0] === 1'b1) ? sub_ln1148_5_fu_135_p2 : zext_ln1148_4_fu_151_p1);

assign select_ln58_1_fu_214_p3 = ((tmp_32_reg_615[0:0] === 1'b1) ? tmp_33_fu_206_p3 : tmp_34_reg_620);

assign select_ln58_2_fu_342_p3 = ((tmp_36_reg_656[0:0] === 1'b1) ? tmp_37_fu_334_p3 : tmp_38_reg_661);

assign select_ln58_3_fu_442_p3 = ((tmp_39_reg_693[0:0] === 1'b1) ? tmp_40_fu_434_p3 : tmp_41_reg_698);

assign select_ln58_4_fu_561_p3 = ((tmp_44_reg_734[0:0] === 1'b1) ? tmp_45_fu_553_p3 : tmp_46_reg_739);

assign select_ln58_fu_105_p3 = ((tmp_28_fu_75_p3[0:0] === 1'b1) ? tmp_29_fu_89_p3 : tmp_30_fu_97_p3);

assign sext_ln1148_6_fu_254_p1 = $signed(tmp_35_fu_244_p4);

assign sext_ln1148_7_fu_258_p1 = $signed(tmp_reg_639);

assign sext_ln1148_8_fu_478_p1 = $signed(tmp_42_fu_468_p4);

assign sext_ln1148_9_fu_482_p1 = $signed(tmp_43_reg_718);

assign sext_ln1148_fu_220_p1 = in_V_read_reg_573_pp0_iter1_reg;

assign sub_ln1148_5_fu_135_p2 = (32'd0 - zext_ln1148_fu_131_p1);

assign sub_ln1148_6_fu_239_p2 = (65'd0 - mul_ln1148_reg_634);

assign sub_ln1148_7_fu_268_p2 = (32'd0 - select_ln1148_3_fu_261_p3);

assign sub_ln1148_8_fu_463_p2 = (65'd0 - mul_ln1148_1_reg_713);

assign sub_ln1148_9_fu_492_p2 = (32'd0 - select_ln1148_5_fu_485_p3);

assign sub_ln1148_fu_361_p2 = (31'd0 - zext_ln1148_5_fu_357_p1);

assign sub_ln703_16_fu_201_p2 = ($signed(32'd0) - $signed(p_Val2_s_reg_608));

assign sub_ln703_17_fu_329_p2 = ($signed(32'd0) - $signed(p_Val2_43_reg_649));

assign sub_ln703_18_fu_429_p2 = ($signed(32'd0) - $signed(p_Val2_44_reg_686));

assign sub_ln703_19_fu_548_p2 = (32'd0 - p_Val2_45_reg_728);

assign sub_ln703_fu_83_p1 = in_V_int_reg;

assign sub_ln703_fu_83_p2 = ($signed(32'd0) - $signed(sub_ln703_fu_83_p1));

assign tmp_28_fu_75_p1 = in_V_int_reg;

assign tmp_28_fu_75_p3 = tmp_28_fu_75_p1[32'd31];

assign tmp_29_fu_89_p3 = sub_ln703_fu_83_p2[32'd31];

assign tmp_30_fu_97_p1 = in_V_int_reg;

assign tmp_30_fu_97_p3 = tmp_30_fu_97_p1[32'd31];

assign tmp_31_fu_113_p1 = in_V_int_reg;

assign tmp_31_fu_113_p3 = tmp_31_fu_113_p1[32'd31];

assign tmp_33_fu_206_p3 = sub_ln703_16_fu_201_p2[32'd31];

assign tmp_35_fu_244_p4 = {{sub_ln1148_6_fu_239_p2[64:34]}};

assign tmp_37_fu_334_p3 = sub_ln703_17_fu_329_p2[32'd31];

assign tmp_40_fu_434_p3 = sub_ln703_18_fu_429_p2[32'd31];

assign tmp_42_fu_468_p4 = {{sub_ln1148_8_fu_463_p2[64:35]}};

assign tmp_45_fu_553_p3 = sub_ln703_19_fu_548_p2[32'd31];

assign tmp_4_fu_367_p4 = {{in_V_read_reg_573_pp0_iter4_reg[31:2]}};

assign tmp_s_fu_348_p4 = {{sub_ln703_reg_589_pp0_iter4_reg[31:2]}};

assign zext_ln1148_4_fu_151_p1 = lshr_ln1148_9_fu_141_p4;

assign zext_ln1148_5_fu_357_p1 = tmp_s_fu_348_p4;

assign zext_ln1148_6_fu_376_p1 = tmp_4_fu_367_p4;

assign zext_ln1148_fu_131_p1 = lshr_ln1148_8_fu_121_p4;

always @ (posedge ap_clk) begin
    mul_ln1148_reg_634[0] <= 1'b0;
    mul_ln1148_1_reg_713[0] <= 1'b0;
end

endmodule //attention_exp
