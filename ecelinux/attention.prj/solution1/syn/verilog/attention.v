// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module attention (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        hidden_states_0_V_address0,
        hidden_states_0_V_ce0,
        hidden_states_0_V_q0,
        hidden_states_0_V_address1,
        hidden_states_0_V_ce1,
        hidden_states_0_V_we1,
        hidden_states_0_V_d1,
        hidden_states_0_V_q1,
        final_output_0_V_address0,
        final_output_0_V_ce0,
        final_output_0_V_we0,
        final_output_0_V_d0,
        final_output_0_V_q0,
        final_output_0_V_address1,
        final_output_0_V_ce1,
        final_output_0_V_we1,
        final_output_0_V_d1,
        final_output_0_V_q1
);

parameter    ap_ST_fsm_state1 = 31'd1;
parameter    ap_ST_fsm_state2 = 31'd2;
parameter    ap_ST_fsm_state3 = 31'd4;
parameter    ap_ST_fsm_state4 = 31'd8;
parameter    ap_ST_fsm_state5 = 31'd16;
parameter    ap_ST_fsm_state6 = 31'd32;
parameter    ap_ST_fsm_state7 = 31'd64;
parameter    ap_ST_fsm_state8 = 31'd128;
parameter    ap_ST_fsm_state9 = 31'd256;
parameter    ap_ST_fsm_state10 = 31'd512;
parameter    ap_ST_fsm_state11 = 31'd1024;
parameter    ap_ST_fsm_state12 = 31'd2048;
parameter    ap_ST_fsm_state13 = 31'd4096;
parameter    ap_ST_fsm_state14 = 31'd8192;
parameter    ap_ST_fsm_state15 = 31'd16384;
parameter    ap_ST_fsm_state16 = 31'd32768;
parameter    ap_ST_fsm_state17 = 31'd65536;
parameter    ap_ST_fsm_state18 = 31'd131072;
parameter    ap_ST_fsm_state19 = 31'd262144;
parameter    ap_ST_fsm_state20 = 31'd524288;
parameter    ap_ST_fsm_state21 = 31'd1048576;
parameter    ap_ST_fsm_state22 = 31'd2097152;
parameter    ap_ST_fsm_state23 = 31'd4194304;
parameter    ap_ST_fsm_state24 = 31'd8388608;
parameter    ap_ST_fsm_state25 = 31'd16777216;
parameter    ap_ST_fsm_state26 = 31'd33554432;
parameter    ap_ST_fsm_state27 = 31'd67108864;
parameter    ap_ST_fsm_state28 = 31'd134217728;
parameter    ap_ST_fsm_state29 = 31'd268435456;
parameter    ap_ST_fsm_state30 = 31'd536870912;
parameter    ap_ST_fsm_state31 = 31'd1073741824;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] hidden_states_0_V_address0;
output   hidden_states_0_V_ce0;
input  [31:0] hidden_states_0_V_q0;
output  [3:0] hidden_states_0_V_address1;
output   hidden_states_0_V_ce1;
output   hidden_states_0_V_we1;
output  [31:0] hidden_states_0_V_d1;
input  [31:0] hidden_states_0_V_q1;
output  [3:0] final_output_0_V_address0;
output   final_output_0_V_ce0;
output   final_output_0_V_we0;
output  [31:0] final_output_0_V_d0;
input  [31:0] final_output_0_V_q0;
output  [3:0] final_output_0_V_address1;
output   final_output_0_V_ce1;
output   final_output_0_V_we1;
output  [31:0] final_output_0_V_d1;
input  [31:0] final_output_0_V_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] hidden_states_0_V_address0;
reg hidden_states_0_V_ce0;
reg[3:0] hidden_states_0_V_address1;
reg hidden_states_0_V_ce1;
reg hidden_states_0_V_we1;
reg[3:0] final_output_0_V_address0;
reg final_output_0_V_ce0;
reg final_output_0_V_we0;
reg[31:0] final_output_0_V_d0;
reg final_output_0_V_ce1;
reg final_output_0_V_we1;

(* fsm_encoding = "none" *) reg   [30:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ln_weight_in_V_ce0;
wire   [31:0] ln_weight_in_V_q0;
reg    q_weights_V_0_ce0;
wire   [7:0] q_weights_V_0_q0;
reg    q_weights_V_1_ce0;
wire   [7:0] q_weights_V_1_q0;
reg    q_weights_V_2_ce0;
wire   [7:0] q_weights_V_2_q0;
reg    q_weights_V_3_ce0;
wire   [7:0] q_weights_V_3_q0;
reg    k_weights_V_0_ce0;
wire   [7:0] k_weights_V_0_q0;
reg    k_weights_V_1_ce0;
wire   [7:0] k_weights_V_1_q0;
reg    k_weights_V_2_ce0;
wire   [7:0] k_weights_V_2_q0;
reg    k_weights_V_3_ce0;
wire   [7:0] k_weights_V_3_q0;
reg    v_weights_V_0_ce0;
wire   [7:0] v_weights_V_0_q0;
reg    v_weights_V_1_ce0;
wire   [7:0] v_weights_V_1_q0;
reg    v_weights_V_2_ce0;
wire   [7:0] v_weights_V_2_q0;
reg    v_weights_V_3_ce0;
wire   [7:0] v_weights_V_3_q0;
reg    k_cache_V_ce0;
wire   [31:0] k_cache_V_q0;
reg    v_cache_V_ce0;
wire   [31:0] v_cache_V_q0;
reg    ln_weight_V_ce0;
wire   [31:0] ln_weight_V_q0;
reg    o_weights_V_0_ce0;
wire   [7:0] o_weights_V_0_q0;
reg    o_weights_V_1_ce0;
wire   [7:0] o_weights_V_1_q0;
reg    o_weights_V_2_ce0;
wire   [7:0] o_weights_V_2_q0;
reg    o_weights_V_3_ce0;
wire   [7:0] o_weights_V_3_q0;
wire   [31:0] grp_quantize_activation_fu_560_ap_return;
reg   [31:0] reg_777;
wire    ap_CS_fsm_state4;
wire    grp_quantize_activation_fu_560_ap_ready;
wire    grp_quantize_activation_fu_560_ap_done;
wire    grp_init_2d_mem_fu_653_ap_ready;
wire    grp_init_2d_mem_fu_653_ap_done;
wire    grp_init_2d_mem_fu_658_ap_ready;
wire    grp_init_2d_mem_fu_658_ap_done;
wire    grp_init_2d_mem_fu_663_ap_ready;
wire    grp_init_2d_mem_fu_663_ap_done;
reg    ap_block_state4_on_subcall_done;
wire    ap_CS_fsm_state29;
reg    ap_block_state29_on_subcall_done;
reg   [31:0] reg_782;
wire    ap_CS_fsm_state8;
wire    grp_linear_forward_no_mu_fu_458_ap_ready;
wire    grp_linear_forward_no_mu_fu_458_ap_done;
wire    grp_reshape_2D_to_3D_fu_637_ap_ready;
wire    grp_reshape_2D_to_3D_fu_637_ap_done;
reg    ap_block_state8_on_subcall_done;
wire    ap_CS_fsm_state12;
wire    grp_apply_rotary_pos_emb_fu_511_ap_ready;
wire    grp_apply_rotary_pos_emb_fu_511_ap_done;
reg    ap_block_state12_on_subcall_done;
reg   [31:0] reg_788;
reg   [31:0] reg_794;
reg   [31:0] reg_800;
reg   [31:0] reg_806;
reg   [31:0] reg_812;
reg   [31:0] reg_818;
reg   [31:0] reg_824;
reg   [31:0] reg_830;
reg   [31:0] reg_836;
reg   [31:0] reg_842;
reg   [31:0] reg_848;
reg   [31:0] reg_854;
reg   [31:0] reg_860;
reg   [31:0] reg_866;
reg   [31:0] reg_872;
reg   [31:0] reg_878;
wire    ap_CS_fsm_state19;
wire   [0:0] icmp_ln190_fu_1203_p2;
wire    ap_CS_fsm_state21;
wire   [0:0] icmp_ln195_fu_1517_p2;
reg   [31:0] reg_883;
reg   [31:0] reg_888;
reg   [31:0] reg_893;
reg   [31:0] reg_898;
reg   [31:0] reg_903;
reg   [31:0] reg_908;
reg   [31:0] reg_913;
wire   [4:0] add_ln36_fu_924_p2;
wire    ap_CS_fsm_state3;
reg   [31:0] k_proj_V_0_reg_1938;
wire    ap_CS_fsm_state10;
reg    ap_block_state10_on_subcall_done;
reg   [31:0] k_proj_V_0_1_reg_1943;
reg   [31:0] k_proj_V_0_2_reg_1948;
reg   [31:0] k_proj_V_0_3_reg_1953;
reg   [31:0] k_proj_V_1_reg_1958;
reg   [31:0] k_proj_V_1_1_reg_1963;
reg   [31:0] k_proj_V_1_2_reg_1968;
reg   [31:0] k_proj_V_1_3_reg_1973;
reg   [31:0] k_proj_V_2_reg_1978;
reg   [31:0] k_proj_V_2_1_reg_1983;
reg   [31:0] k_proj_V_2_2_reg_1988;
reg   [31:0] k_proj_V_2_3_reg_1993;
reg   [31:0] k_proj_V_3_reg_1998;
reg   [31:0] k_proj_V_3_1_reg_2003;
reg   [31:0] k_proj_V_3_2_reg_2008;
reg   [31:0] k_proj_V_3_3_reg_2013;
reg   [31:0] q_embed_V_0_reg_2018;
reg   [31:0] q_embed_V_0_1_reg_2023;
reg   [31:0] q_embed_V_0_2_reg_2028;
reg   [31:0] q_embed_V_0_3_reg_2033;
reg   [31:0] q_embed_V_1_reg_2038;
reg   [31:0] q_embed_V_1_1_reg_2043;
reg   [31:0] q_embed_V_1_2_reg_2048;
reg   [31:0] q_embed_V_1_3_reg_2053;
reg   [31:0] q_embed_V_2_reg_2058;
reg   [31:0] q_embed_V_2_1_reg_2063;
reg   [31:0] q_embed_V_2_2_reg_2068;
reg   [31:0] q_embed_V_2_3_reg_2073;
reg   [31:0] q_embed_V_3_reg_2078;
reg   [31:0] q_embed_V_3_1_reg_2083;
reg   [31:0] q_embed_V_3_2_reg_2088;
reg   [31:0] q_embed_V_3_3_reg_2093;
reg   [31:0] k_embed_V_0_reg_2098;
reg   [31:0] k_embed_V_0_1_reg_2103;
reg   [31:0] k_embed_V_0_2_reg_2108;
reg   [31:0] k_embed_V_0_3_reg_2113;
reg   [31:0] k_embed_V_1_reg_2118;
reg   [31:0] k_embed_V_1_1_reg_2123;
reg   [31:0] k_embed_V_1_2_reg_2128;
reg   [31:0] k_embed_V_1_3_reg_2133;
reg   [31:0] k_embed_V_2_reg_2138;
reg   [31:0] k_embed_V_2_1_reg_2143;
reg   [31:0] k_embed_V_2_2_reg_2148;
reg   [31:0] k_embed_V_2_3_reg_2153;
reg   [31:0] k_embed_V_3_reg_2158;
reg   [31:0] k_embed_V_3_1_reg_2163;
reg   [31:0] k_embed_V_3_2_reg_2168;
reg   [31:0] k_embed_V_3_3_reg_2173;
wire    ap_CS_fsm_state18;
wire   [2:0] h_1_fu_1193_p2;
reg   [2:0] h_1_reg_2201;
wire   [1:0] trunc_ln1265_fu_1199_p1;
reg   [1:0] trunc_ln1265_reg_2206;
wire   [0:0] icmp_ln188_fu_1187_p2;
wire   [1:0] add_ln190_fu_1209_p2;
reg   [1:0] add_ln190_reg_2226;
reg   [31:0] attn_weights_V_0_3_0_1_reg_2231;
reg   [31:0] attn_weights_V_0_2_0_1_reg_2238;
reg   [31:0] attn_weights_V_0_1_0_1_reg_2245;
reg   [31:0] attn_weights_V_0_0_0_1_reg_2252;
reg   [0:0] tmp_47_reg_2259;
reg   [30:0] tmp_8_reg_2264;
reg   [30:0] lshr_ln1148_s_reg_2269;
wire   [2:0] h_fu_1523_p2;
wire   [31:0] attn_weights_V_0_3_0_4_fu_1547_p6;
wire   [31:0] attn_weights_V_0_2_0_4_fu_1561_p6;
wire   [31:0] attn_weights_V_0_1_0_4_fu_1575_p6;
wire   [31:0] attn_weights_V_0_0_0_4_fu_1589_p6;
reg   [31:0] attn_weights_V_0_0_0_7_reg_2302;
wire    ap_CS_fsm_state22;
wire    grp_softmax_1_4_3_s_fu_491_ap_ready;
wire    grp_softmax_1_4_3_s_fu_491_ap_done;
reg    ap_block_state22_on_subcall_done;
reg   [31:0] attn_weights_V_0_1_0_7_reg_2307;
reg   [31:0] attn_weights_V_0_2_0_7_reg_2312;
reg   [31:0] attn_weights_V_0_3_0_7_reg_2317;
reg   [31:0] attn_weights_V_1_0_0_5_reg_2322;
reg   [31:0] attn_weights_V_1_1_0_5_reg_2327;
reg   [31:0] attn_weights_V_1_2_0_5_reg_2332;
reg   [31:0] attn_weights_V_1_3_0_5_reg_2337;
reg   [31:0] attn_weights_V_2_0_0_5_reg_2342;
reg   [31:0] attn_weights_V_2_1_0_5_reg_2347;
reg   [31:0] attn_weights_V_2_2_0_5_reg_2352;
reg   [31:0] attn_weights_V_2_3_0_5_reg_2357;
reg   [31:0] attn_output_0_reg_2362;
wire    ap_CS_fsm_state23;
wire    grp_GEMM_3D_float_1_fu_590_ap_ready;
wire    grp_GEMM_3D_float_1_fu_590_ap_done;
reg   [31:0] attn_output_0_1_reg_2367;
reg   [31:0] attn_output_0_2_reg_2372;
reg   [31:0] attn_output_0_3_reg_2377;
reg   [31:0] attn_output_1_reg_2382;
reg   [31:0] attn_output_1_1_reg_2387;
reg   [31:0] attn_output_1_2_reg_2392;
reg   [31:0] attn_output_1_3_reg_2397;
reg   [31:0] attn_output_2_reg_2402;
reg   [31:0] attn_output_2_1_reg_2407;
reg   [31:0] attn_output_2_2_reg_2412;
reg   [31:0] attn_output_2_3_reg_2417;
reg   [31:0] attn_output_3_reg_2422;
reg   [31:0] attn_output_3_1_reg_2427;
reg   [31:0] attn_output_3_2_reg_2432;
reg   [31:0] attn_output_3_3_reg_2437;
wire   [2:0] add_ln221_fu_1733_p2;
reg   [2:0] add_ln221_reg_2445;
wire    ap_CS_fsm_state24;
wire   [1:0] trunc_ln223_fu_1739_p1;
reg   [1:0] trunc_ln223_reg_2450;
wire   [0:0] icmp_ln221_fu_1727_p2;
wire   [3:0] shl_ln3_fu_1743_p3;
reg   [3:0] shl_ln3_reg_2456;
wire   [4:0] add_ln36_1_fu_1835_p2;
wire    ap_CS_fsm_state28;
reg   [3:0] quantized_hidden_sta_address0;
reg    quantized_hidden_sta_ce0;
reg    quantized_hidden_sta_we0;
reg   [7:0] quantized_hidden_sta_d0;
wire   [7:0] quantized_hidden_sta_q0;
reg    quantized_hidden_sta_ce1;
wire   [7:0] quantized_hidden_sta_q1;
reg   [3:0] q_proj_re_0_V_address0;
reg    q_proj_re_0_V_ce0;
reg    q_proj_re_0_V_we0;
reg   [31:0] q_proj_re_0_V_d0;
wire   [31:0] q_proj_re_0_V_q0;
reg    q_proj_re_0_V_ce1;
reg    q_proj_re_0_V_we1;
wire   [31:0] q_proj_re_0_V_q1;
reg   [3:0] k_proj_re_0_V_address0;
reg    k_proj_re_0_V_ce0;
reg    k_proj_re_0_V_we0;
reg   [31:0] k_proj_re_0_V_d0;
wire   [31:0] k_proj_re_0_V_q0;
reg    k_proj_re_0_V_ce1;
reg    k_proj_re_0_V_we1;
wire   [31:0] k_proj_re_0_V_q1;
reg   [3:0] v_proj_re_0_V_address0;
reg    v_proj_re_0_V_ce0;
reg    v_proj_re_0_V_we0;
reg   [31:0] v_proj_re_0_V_d0;
wire   [31:0] v_proj_re_0_V_q0;
reg    v_proj_re_0_V_ce1;
reg    v_proj_re_0_V_we1;
wire   [31:0] v_proj_re_0_V_q1;
reg   [3:0] k_cache_upd_0_V_address0;
reg    k_cache_upd_0_V_ce0;
reg    k_cache_upd_0_V_we0;
wire   [31:0] k_cache_upd_0_V_q0;
reg   [3:0] k_cache_upd_1_V_address0;
reg    k_cache_upd_1_V_ce0;
reg    k_cache_upd_1_V_we0;
wire   [31:0] k_cache_upd_1_V_q0;
reg   [3:0] k_cache_upd_2_V_address0;
reg    k_cache_upd_2_V_ce0;
reg    k_cache_upd_2_V_we0;
wire   [31:0] k_cache_upd_2_V_q0;
reg   [3:0] k_cache_upd_3_V_address0;
reg    k_cache_upd_3_V_ce0;
reg    k_cache_upd_3_V_we0;
wire   [31:0] k_cache_upd_3_V_q0;
reg   [3:0] v_cache_upd_0_V_address0;
reg    v_cache_upd_0_V_ce0;
reg    v_cache_upd_0_V_we0;
wire   [31:0] v_cache_upd_0_V_q0;
reg    v_cache_upd_0_V_ce1;
wire   [31:0] v_cache_upd_0_V_q1;
reg   [3:0] v_cache_upd_1_V_address0;
reg    v_cache_upd_1_V_ce0;
reg    v_cache_upd_1_V_we0;
wire   [31:0] v_cache_upd_1_V_q0;
reg    v_cache_upd_1_V_ce1;
wire   [31:0] v_cache_upd_1_V_q1;
reg   [3:0] v_cache_upd_2_V_address0;
reg    v_cache_upd_2_V_ce0;
reg    v_cache_upd_2_V_we0;
wire   [31:0] v_cache_upd_2_V_q0;
reg    v_cache_upd_2_V_ce1;
wire   [31:0] v_cache_upd_2_V_q1;
reg   [3:0] v_cache_upd_3_V_address0;
reg    v_cache_upd_3_V_ce0;
reg    v_cache_upd_3_V_we0;
wire   [31:0] v_cache_upd_3_V_q0;
reg    v_cache_upd_3_V_ce1;
wire   [31:0] v_cache_upd_3_V_q1;
reg   [3:0] k_proj_transposed_0_address0;
reg    k_proj_transposed_0_ce0;
reg    k_proj_transposed_0_we0;
wire   [31:0] k_proj_transposed_0_q0;
reg   [3:0] k_proj_transposed_0_address1;
reg    k_proj_transposed_0_ce1;
reg    k_proj_transposed_0_we1;
wire   [31:0] k_proj_transposed_0_q1;
reg   [3:0] k_proj_transposed_1_address0;
reg    k_proj_transposed_1_ce0;
reg    k_proj_transposed_1_we0;
wire   [31:0] k_proj_transposed_1_q0;
reg   [3:0] k_proj_transposed_1_address1;
reg    k_proj_transposed_1_ce1;
reg    k_proj_transposed_1_we1;
wire   [31:0] k_proj_transposed_1_q1;
reg   [3:0] k_proj_transposed_2_address0;
reg    k_proj_transposed_2_ce0;
reg    k_proj_transposed_2_we0;
wire   [31:0] k_proj_transposed_2_q0;
reg   [3:0] k_proj_transposed_2_address1;
reg    k_proj_transposed_2_ce1;
reg    k_proj_transposed_2_we1;
wire   [31:0] k_proj_transposed_2_q1;
reg   [3:0] attn_output_2D_0_V_address0;
reg    attn_output_2D_0_V_ce0;
reg    attn_output_2D_0_V_we0;
reg   [31:0] attn_output_2D_0_V_d0;
wire   [31:0] attn_output_2D_0_V_q0;
reg   [3:0] attn_output_2D_0_V_address1;
reg    attn_output_2D_0_V_ce1;
reg    attn_output_2D_0_V_we1;
reg   [31:0] attn_output_2D_0_V_d1;
wire   [31:0] attn_output_2D_0_V_q1;
reg   [3:0] quantized_final_outp_address0;
reg    quantized_final_outp_ce0;
reg    quantized_final_outp_we0;
reg   [7:0] quantized_final_outp_d0;
wire   [7:0] quantized_final_outp_q0;
reg    quantized_final_outp_ce1;
wire   [7:0] quantized_final_outp_q1;
wire    grp_linear_forward_no_mu_fu_458_ap_start;
wire    grp_linear_forward_no_mu_fu_458_ap_idle;
wire   [3:0] grp_linear_forward_no_mu_fu_458_input_0_V_address0;
wire    grp_linear_forward_no_mu_fu_458_input_0_V_ce0;
reg   [7:0] grp_linear_forward_no_mu_fu_458_input_0_V_q0;
wire   [3:0] grp_linear_forward_no_mu_fu_458_input_0_V_address1;
wire    grp_linear_forward_no_mu_fu_458_input_0_V_ce1;
reg   [7:0] grp_linear_forward_no_mu_fu_458_input_0_V_q1;
wire   [3:0] grp_linear_forward_no_mu_fu_458_output_0_V_address0;
wire    grp_linear_forward_no_mu_fu_458_output_0_V_ce0;
wire    grp_linear_forward_no_mu_fu_458_output_0_V_we0;
wire   [31:0] grp_linear_forward_no_mu_fu_458_output_0_V_d0;
reg   [31:0] grp_linear_forward_no_mu_fu_458_output_0_V_q0;
wire   [3:0] grp_linear_forward_no_mu_fu_458_output_0_V_address1;
wire    grp_linear_forward_no_mu_fu_458_output_0_V_ce1;
wire    grp_linear_forward_no_mu_fu_458_output_0_V_we1;
wire   [31:0] grp_linear_forward_no_mu_fu_458_output_0_V_d1;
reg   [31:0] grp_linear_forward_no_mu_fu_458_output_0_V_q1;
wire   [3:0] grp_linear_forward_no_mu_fu_458_packed_weights_0_V_address0;
wire    grp_linear_forward_no_mu_fu_458_packed_weights_0_V_ce0;
reg   [7:0] grp_linear_forward_no_mu_fu_458_packed_weights_0_V_q0;
wire   [3:0] grp_linear_forward_no_mu_fu_458_packed_weights_1_V_address0;
wire    grp_linear_forward_no_mu_fu_458_packed_weights_1_V_ce0;
reg   [7:0] grp_linear_forward_no_mu_fu_458_packed_weights_1_V_q0;
wire   [3:0] grp_linear_forward_no_mu_fu_458_packed_weights_2_V_address0;
wire    grp_linear_forward_no_mu_fu_458_packed_weights_2_V_ce0;
reg   [7:0] grp_linear_forward_no_mu_fu_458_packed_weights_2_V_q0;
wire   [3:0] grp_linear_forward_no_mu_fu_458_packed_weights_3_V_address0;
wire    grp_linear_forward_no_mu_fu_458_packed_weights_3_V_ce0;
reg   [7:0] grp_linear_forward_no_mu_fu_458_packed_weights_3_V_q0;
reg   [27:0] grp_linear_forward_no_mu_fu_458_w_scale_V;
wire    grp_softmax_1_4_3_s_fu_491_ap_start;
wire    grp_softmax_1_4_3_s_fu_491_ap_idle;
wire   [31:0] grp_softmax_1_4_3_s_fu_491_ap_return_0;
wire   [31:0] grp_softmax_1_4_3_s_fu_491_ap_return_1;
wire   [31:0] grp_softmax_1_4_3_s_fu_491_ap_return_2;
wire   [31:0] grp_softmax_1_4_3_s_fu_491_ap_return_3;
wire   [31:0] grp_softmax_1_4_3_s_fu_491_ap_return_4;
wire   [31:0] grp_softmax_1_4_3_s_fu_491_ap_return_5;
wire   [31:0] grp_softmax_1_4_3_s_fu_491_ap_return_6;
wire   [31:0] grp_softmax_1_4_3_s_fu_491_ap_return_7;
wire   [31:0] grp_softmax_1_4_3_s_fu_491_ap_return_8;
wire   [31:0] grp_softmax_1_4_3_s_fu_491_ap_return_9;
wire   [31:0] grp_softmax_1_4_3_s_fu_491_ap_return_10;
wire   [31:0] grp_softmax_1_4_3_s_fu_491_ap_return_11;
wire    grp_apply_rotary_pos_emb_fu_511_ap_start;
wire    grp_apply_rotary_pos_emb_fu_511_ap_idle;
wire   [31:0] grp_apply_rotary_pos_emb_fu_511_ap_return_0;
wire   [31:0] grp_apply_rotary_pos_emb_fu_511_ap_return_1;
wire   [31:0] grp_apply_rotary_pos_emb_fu_511_ap_return_2;
wire   [31:0] grp_apply_rotary_pos_emb_fu_511_ap_return_3;
wire   [31:0] grp_apply_rotary_pos_emb_fu_511_ap_return_4;
wire   [31:0] grp_apply_rotary_pos_emb_fu_511_ap_return_5;
wire   [31:0] grp_apply_rotary_pos_emb_fu_511_ap_return_6;
wire   [31:0] grp_apply_rotary_pos_emb_fu_511_ap_return_7;
wire   [31:0] grp_apply_rotary_pos_emb_fu_511_ap_return_8;
wire   [31:0] grp_apply_rotary_pos_emb_fu_511_ap_return_9;
wire   [31:0] grp_apply_rotary_pos_emb_fu_511_ap_return_10;
wire   [31:0] grp_apply_rotary_pos_emb_fu_511_ap_return_11;
wire   [31:0] grp_apply_rotary_pos_emb_fu_511_ap_return_12;
wire   [31:0] grp_apply_rotary_pos_emb_fu_511_ap_return_13;
wire   [31:0] grp_apply_rotary_pos_emb_fu_511_ap_return_14;
wire   [31:0] grp_apply_rotary_pos_emb_fu_511_ap_return_15;
wire   [31:0] grp_apply_rotary_pos_emb_fu_511_ap_return_16;
wire   [31:0] grp_apply_rotary_pos_emb_fu_511_ap_return_17;
wire   [31:0] grp_apply_rotary_pos_emb_fu_511_ap_return_18;
wire   [31:0] grp_apply_rotary_pos_emb_fu_511_ap_return_19;
wire   [31:0] grp_apply_rotary_pos_emb_fu_511_ap_return_20;
wire   [31:0] grp_apply_rotary_pos_emb_fu_511_ap_return_21;
wire   [31:0] grp_apply_rotary_pos_emb_fu_511_ap_return_22;
wire   [31:0] grp_apply_rotary_pos_emb_fu_511_ap_return_23;
wire   [31:0] grp_apply_rotary_pos_emb_fu_511_ap_return_24;
wire   [31:0] grp_apply_rotary_pos_emb_fu_511_ap_return_25;
wire   [31:0] grp_apply_rotary_pos_emb_fu_511_ap_return_26;
wire   [31:0] grp_apply_rotary_pos_emb_fu_511_ap_return_27;
wire   [31:0] grp_apply_rotary_pos_emb_fu_511_ap_return_28;
wire   [31:0] grp_apply_rotary_pos_emb_fu_511_ap_return_29;
wire   [31:0] grp_apply_rotary_pos_emb_fu_511_ap_return_30;
wire   [31:0] grp_apply_rotary_pos_emb_fu_511_ap_return_31;
wire    grp_rms_norm_16_s_fu_551_ap_start;
wire    grp_rms_norm_16_s_fu_551_ap_done;
wire    grp_rms_norm_16_s_fu_551_ap_idle;
wire    grp_rms_norm_16_s_fu_551_ap_ready;
wire   [3:0] grp_rms_norm_16_s_fu_551_input_0_V_address0;
wire    grp_rms_norm_16_s_fu_551_input_0_V_ce0;
reg   [31:0] grp_rms_norm_16_s_fu_551_input_0_V_q0;
wire   [3:0] grp_rms_norm_16_s_fu_551_input_0_V_address1;
wire    grp_rms_norm_16_s_fu_551_input_0_V_ce1;
wire    grp_rms_norm_16_s_fu_551_input_0_V_we1;
wire   [31:0] grp_rms_norm_16_s_fu_551_input_0_V_d1;
wire   [3:0] grp_rms_norm_16_s_fu_551_weight_V_address0;
wire    grp_rms_norm_16_s_fu_551_weight_V_ce0;
reg   [31:0] grp_rms_norm_16_s_fu_551_weight_V_q0;
wire    grp_quantize_activation_fu_560_ap_start;
wire    grp_quantize_activation_fu_560_ap_idle;
wire   [3:0] grp_quantize_activation_fu_560_input_0_V_address0;
wire    grp_quantize_activation_fu_560_input_0_V_ce0;
reg   [31:0] grp_quantize_activation_fu_560_input_0_V_q0;
wire   [3:0] grp_quantize_activation_fu_560_input_0_V_address1;
wire    grp_quantize_activation_fu_560_input_0_V_ce1;
reg   [31:0] grp_quantize_activation_fu_560_input_0_V_q1;
wire   [3:0] grp_quantize_activation_fu_560_output_states_0_V_address0;
wire    grp_quantize_activation_fu_560_output_states_0_V_ce0;
wire    grp_quantize_activation_fu_560_output_states_0_V_we0;
wire   [7:0] grp_quantize_activation_fu_560_output_states_0_V_d0;
wire    grp_GEMM_3D_float_fu_567_ap_start;
wire    grp_GEMM_3D_float_fu_567_ap_done;
wire    grp_GEMM_3D_float_fu_567_ap_idle;
wire    grp_GEMM_3D_float_fu_567_ap_ready;
wire   [3:0] grp_GEMM_3D_float_fu_567_input_2_0_V_address0;
wire    grp_GEMM_3D_float_fu_567_input_2_0_V_ce0;
wire   [3:0] grp_GEMM_3D_float_fu_567_input_2_0_V_address1;
wire    grp_GEMM_3D_float_fu_567_input_2_0_V_ce1;
wire   [3:0] grp_GEMM_3D_float_fu_567_input_2_1_V_address0;
wire    grp_GEMM_3D_float_fu_567_input_2_1_V_ce0;
wire   [3:0] grp_GEMM_3D_float_fu_567_input_2_1_V_address1;
wire    grp_GEMM_3D_float_fu_567_input_2_1_V_ce1;
wire   [3:0] grp_GEMM_3D_float_fu_567_input_2_2_V_address0;
wire    grp_GEMM_3D_float_fu_567_input_2_2_V_ce0;
wire   [3:0] grp_GEMM_3D_float_fu_567_input_2_2_V_address1;
wire    grp_GEMM_3D_float_fu_567_input_2_2_V_ce1;
wire   [31:0] grp_GEMM_3D_float_fu_567_ap_return_0;
wire   [31:0] grp_GEMM_3D_float_fu_567_ap_return_1;
wire   [31:0] grp_GEMM_3D_float_fu_567_ap_return_2;
wire   [31:0] grp_GEMM_3D_float_fu_567_ap_return_3;
wire   [31:0] grp_GEMM_3D_float_fu_567_ap_return_4;
wire   [31:0] grp_GEMM_3D_float_fu_567_ap_return_5;
wire   [31:0] grp_GEMM_3D_float_fu_567_ap_return_6;
wire   [31:0] grp_GEMM_3D_float_fu_567_ap_return_7;
wire   [31:0] grp_GEMM_3D_float_fu_567_ap_return_8;
wire   [31:0] grp_GEMM_3D_float_fu_567_ap_return_9;
wire   [31:0] grp_GEMM_3D_float_fu_567_ap_return_10;
wire   [31:0] grp_GEMM_3D_float_fu_567_ap_return_11;
wire    grp_GEMM_3D_float_1_fu_590_ap_start;
wire    grp_GEMM_3D_float_1_fu_590_ap_idle;
wire   [3:0] grp_GEMM_3D_float_1_fu_590_input_2_0_V_address0;
wire    grp_GEMM_3D_float_1_fu_590_input_2_0_V_ce0;
wire   [3:0] grp_GEMM_3D_float_1_fu_590_input_2_0_V_address1;
wire    grp_GEMM_3D_float_1_fu_590_input_2_0_V_ce1;
wire   [3:0] grp_GEMM_3D_float_1_fu_590_input_2_1_V_address0;
wire    grp_GEMM_3D_float_1_fu_590_input_2_1_V_ce0;
wire   [3:0] grp_GEMM_3D_float_1_fu_590_input_2_1_V_address1;
wire    grp_GEMM_3D_float_1_fu_590_input_2_1_V_ce1;
wire   [3:0] grp_GEMM_3D_float_1_fu_590_input_2_2_V_address0;
wire    grp_GEMM_3D_float_1_fu_590_input_2_2_V_ce0;
wire   [3:0] grp_GEMM_3D_float_1_fu_590_input_2_2_V_address1;
wire    grp_GEMM_3D_float_1_fu_590_input_2_2_V_ce1;
wire   [3:0] grp_GEMM_3D_float_1_fu_590_input_2_3_V_address0;
wire    grp_GEMM_3D_float_1_fu_590_input_2_3_V_ce0;
wire   [3:0] grp_GEMM_3D_float_1_fu_590_input_2_3_V_address1;
wire    grp_GEMM_3D_float_1_fu_590_input_2_3_V_ce1;
wire   [31:0] grp_GEMM_3D_float_1_fu_590_ap_return_0;
wire   [31:0] grp_GEMM_3D_float_1_fu_590_ap_return_1;
wire   [31:0] grp_GEMM_3D_float_1_fu_590_ap_return_2;
wire   [31:0] grp_GEMM_3D_float_1_fu_590_ap_return_3;
wire   [31:0] grp_GEMM_3D_float_1_fu_590_ap_return_4;
wire   [31:0] grp_GEMM_3D_float_1_fu_590_ap_return_5;
wire   [31:0] grp_GEMM_3D_float_1_fu_590_ap_return_6;
wire   [31:0] grp_GEMM_3D_float_1_fu_590_ap_return_7;
wire   [31:0] grp_GEMM_3D_float_1_fu_590_ap_return_8;
wire   [31:0] grp_GEMM_3D_float_1_fu_590_ap_return_9;
wire   [31:0] grp_GEMM_3D_float_1_fu_590_ap_return_10;
wire   [31:0] grp_GEMM_3D_float_1_fu_590_ap_return_11;
wire   [31:0] grp_GEMM_3D_float_1_fu_590_ap_return_12;
wire   [31:0] grp_GEMM_3D_float_1_fu_590_ap_return_13;
wire   [31:0] grp_GEMM_3D_float_1_fu_590_ap_return_14;
wire   [31:0] grp_GEMM_3D_float_1_fu_590_ap_return_15;
wire    grp_cache_update_fu_610_ap_start;
wire    grp_cache_update_fu_610_ap_done;
wire    grp_cache_update_fu_610_ap_idle;
wire    grp_cache_update_fu_610_ap_ready;
wire   [4:0] grp_cache_update_fu_610_cache_in_V_address0;
wire    grp_cache_update_fu_610_cache_in_V_ce0;
reg   [31:0] grp_cache_update_fu_610_cache_in_V_q0;
wire   [3:0] grp_cache_update_fu_610_cache_out_0_V_address0;
wire    grp_cache_update_fu_610_cache_out_0_V_ce0;
wire    grp_cache_update_fu_610_cache_out_0_V_we0;
wire   [31:0] grp_cache_update_fu_610_cache_out_0_V_d0;
wire   [3:0] grp_cache_update_fu_610_cache_out_1_V_address0;
wire    grp_cache_update_fu_610_cache_out_1_V_ce0;
wire    grp_cache_update_fu_610_cache_out_1_V_we0;
wire   [31:0] grp_cache_update_fu_610_cache_out_1_V_d0;
wire   [3:0] grp_cache_update_fu_610_cache_out_2_V_address0;
wire    grp_cache_update_fu_610_cache_out_2_V_ce0;
wire    grp_cache_update_fu_610_cache_out_2_V_we0;
wire   [31:0] grp_cache_update_fu_610_cache_out_2_V_d0;
wire   [3:0] grp_cache_update_fu_610_cache_out_3_V_address0;
wire    grp_cache_update_fu_610_cache_out_3_V_ce0;
wire    grp_cache_update_fu_610_cache_out_3_V_we0;
wire   [31:0] grp_cache_update_fu_610_cache_out_3_V_d0;
reg   [31:0] grp_cache_update_fu_610_p_read;
reg   [31:0] grp_cache_update_fu_610_p_read1;
reg   [31:0] grp_cache_update_fu_610_p_read2;
reg   [31:0] grp_cache_update_fu_610_p_read3;
reg   [31:0] grp_cache_update_fu_610_p_read4;
reg   [31:0] grp_cache_update_fu_610_p_read5;
reg   [31:0] grp_cache_update_fu_610_p_read6;
reg   [31:0] grp_cache_update_fu_610_p_read7;
reg   [31:0] grp_cache_update_fu_610_p_read8;
reg   [31:0] grp_cache_update_fu_610_p_read9;
reg   [31:0] grp_cache_update_fu_610_p_read10;
reg   [31:0] grp_cache_update_fu_610_p_read11;
reg   [31:0] grp_cache_update_fu_610_p_read12;
reg   [31:0] grp_cache_update_fu_610_p_read13;
reg   [31:0] grp_cache_update_fu_610_p_read14;
reg   [31:0] grp_cache_update_fu_610_p_read15;
wire    grp_reshape_2D_to_3D_fu_637_ap_start;
wire    grp_reshape_2D_to_3D_fu_637_ap_idle;
wire   [3:0] grp_reshape_2D_to_3D_fu_637_input_0_V_address0;
wire    grp_reshape_2D_to_3D_fu_637_input_0_V_ce0;
reg   [31:0] grp_reshape_2D_to_3D_fu_637_input_0_V_q0;
wire   [31:0] grp_reshape_2D_to_3D_fu_637_ap_return_0;
wire   [31:0] grp_reshape_2D_to_3D_fu_637_ap_return_1;
wire   [31:0] grp_reshape_2D_to_3D_fu_637_ap_return_2;
wire   [31:0] grp_reshape_2D_to_3D_fu_637_ap_return_3;
wire   [31:0] grp_reshape_2D_to_3D_fu_637_ap_return_4;
wire   [31:0] grp_reshape_2D_to_3D_fu_637_ap_return_5;
wire   [31:0] grp_reshape_2D_to_3D_fu_637_ap_return_6;
wire   [31:0] grp_reshape_2D_to_3D_fu_637_ap_return_7;
wire   [31:0] grp_reshape_2D_to_3D_fu_637_ap_return_8;
wire   [31:0] grp_reshape_2D_to_3D_fu_637_ap_return_9;
wire   [31:0] grp_reshape_2D_to_3D_fu_637_ap_return_10;
wire   [31:0] grp_reshape_2D_to_3D_fu_637_ap_return_11;
wire   [31:0] grp_reshape_2D_to_3D_fu_637_ap_return_12;
wire   [31:0] grp_reshape_2D_to_3D_fu_637_ap_return_13;
wire   [31:0] grp_reshape_2D_to_3D_fu_637_ap_return_14;
wire   [31:0] grp_reshape_2D_to_3D_fu_637_ap_return_15;
wire    grp_transpose_last_two_d_fu_642_ap_start;
wire    grp_transpose_last_two_d_fu_642_ap_done;
wire    grp_transpose_last_two_d_fu_642_ap_idle;
wire    grp_transpose_last_two_d_fu_642_ap_ready;
wire   [3:0] grp_transpose_last_two_d_fu_642_input_0_V_address0;
wire    grp_transpose_last_two_d_fu_642_input_0_V_ce0;
wire   [3:0] grp_transpose_last_two_d_fu_642_input_1_V_address0;
wire    grp_transpose_last_two_d_fu_642_input_1_V_ce0;
wire   [3:0] grp_transpose_last_two_d_fu_642_input_2_V_address0;
wire    grp_transpose_last_two_d_fu_642_input_2_V_ce0;
wire   [3:0] grp_transpose_last_two_d_fu_642_input_3_V_address0;
wire    grp_transpose_last_two_d_fu_642_input_3_V_ce0;
wire   [3:0] grp_transpose_last_two_d_fu_642_output_0_V_address0;
wire    grp_transpose_last_two_d_fu_642_output_0_V_ce0;
wire    grp_transpose_last_two_d_fu_642_output_0_V_we0;
wire   [31:0] grp_transpose_last_two_d_fu_642_output_0_V_d0;
wire   [3:0] grp_transpose_last_two_d_fu_642_output_0_V_address1;
wire    grp_transpose_last_two_d_fu_642_output_0_V_ce1;
wire    grp_transpose_last_two_d_fu_642_output_0_V_we1;
wire   [31:0] grp_transpose_last_two_d_fu_642_output_0_V_d1;
wire   [3:0] grp_transpose_last_two_d_fu_642_output_1_V_address0;
wire    grp_transpose_last_two_d_fu_642_output_1_V_ce0;
wire    grp_transpose_last_two_d_fu_642_output_1_V_we0;
wire   [31:0] grp_transpose_last_two_d_fu_642_output_1_V_d0;
wire   [3:0] grp_transpose_last_two_d_fu_642_output_1_V_address1;
wire    grp_transpose_last_two_d_fu_642_output_1_V_ce1;
wire    grp_transpose_last_two_d_fu_642_output_1_V_we1;
wire   [31:0] grp_transpose_last_two_d_fu_642_output_1_V_d1;
wire   [3:0] grp_transpose_last_two_d_fu_642_output_2_V_address0;
wire    grp_transpose_last_two_d_fu_642_output_2_V_ce0;
wire    grp_transpose_last_two_d_fu_642_output_2_V_we0;
wire   [31:0] grp_transpose_last_two_d_fu_642_output_2_V_d0;
wire   [3:0] grp_transpose_last_two_d_fu_642_output_2_V_address1;
wire    grp_transpose_last_two_d_fu_642_output_2_V_ce1;
wire    grp_transpose_last_two_d_fu_642_output_2_V_we1;
wire   [31:0] grp_transpose_last_two_d_fu_642_output_2_V_d1;
wire    grp_init_2d_mem_fu_653_ap_start;
wire    grp_init_2d_mem_fu_653_ap_idle;
wire   [3:0] grp_init_2d_mem_fu_653_mem_0_V_address0;
wire    grp_init_2d_mem_fu_653_mem_0_V_ce0;
wire    grp_init_2d_mem_fu_653_mem_0_V_we0;
wire   [31:0] grp_init_2d_mem_fu_653_mem_0_V_d0;
wire    grp_init_2d_mem_fu_658_ap_start;
wire    grp_init_2d_mem_fu_658_ap_idle;
wire   [3:0] grp_init_2d_mem_fu_658_mem_0_V_address0;
wire    grp_init_2d_mem_fu_658_mem_0_V_ce0;
wire    grp_init_2d_mem_fu_658_mem_0_V_we0;
wire   [31:0] grp_init_2d_mem_fu_658_mem_0_V_d0;
wire    grp_init_2d_mem_fu_663_ap_start;
wire    grp_init_2d_mem_fu_663_ap_idle;
wire   [3:0] grp_init_2d_mem_fu_663_mem_0_V_address0;
wire    grp_init_2d_mem_fu_663_mem_0_V_ce0;
wire    grp_init_2d_mem_fu_663_mem_0_V_we0;
wire   [31:0] grp_init_2d_mem_fu_663_mem_0_V_d0;
reg   [4:0] j_0_0_i_reg_351;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln36_fu_918_p2;
reg   [2:0] h_0_reg_362;
wire    ap_CS_fsm_state17;
reg   [1:0] d_0_0_reg_373;
wire    ap_CS_fsm_state20;
reg   [31:0] attn_weights_V_0_0_0_3_reg_385;
reg   [31:0] attn_weights_V_0_1_0_3_reg_395;
reg   [31:0] attn_weights_V_0_2_0_3_reg_405;
reg   [31:0] attn_weights_V_0_3_0_3_reg_415;
reg   [2:0] h85_0_reg_425;
reg   [2:0] h100_0_0_reg_436;
wire    ap_CS_fsm_state25;
reg   [4:0] j_0_0_i2_reg_447;
wire    ap_CS_fsm_state27;
wire   [0:0] icmp_ln36_1_fu_1829_p2;
reg    grp_linear_forward_no_mu_fu_458_ap_start_reg;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state31;
reg    grp_softmax_1_4_3_s_fu_491_ap_start_reg;
reg    grp_apply_rotary_pos_emb_fu_511_ap_start_reg;
wire    ap_CS_fsm_state11;
reg    grp_rms_norm_16_s_fu_551_ap_start_reg;
wire    ap_CS_fsm_state26;
reg    grp_quantize_activation_fu_560_ap_start_reg;
reg    grp_GEMM_3D_float_fu_567_ap_start_reg;
wire    ap_CS_fsm_state16;
reg    grp_GEMM_3D_float_1_fu_590_ap_start_reg;
reg    grp_cache_update_fu_610_ap_start_reg;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state15;
reg    grp_reshape_2D_to_3D_fu_637_ap_start_reg;
reg    grp_transpose_last_two_d_fu_642_ap_start_reg;
reg    grp_init_2d_mem_fu_653_ap_start_reg;
reg    grp_init_2d_mem_fu_658_ap_start_reg;
reg    grp_init_2d_mem_fu_663_ap_start_reg;
wire   [63:0] zext_ln37_fu_930_p1;
wire   [63:0] zext_ln223_fu_1751_p1;
wire   [63:0] zext_ln223_1_fu_1773_p1;
wire   [63:0] zext_ln223_2_fu_1794_p1;
wire   [63:0] zext_ln223_3_fu_1814_p1;
wire   [63:0] zext_ln37_1_fu_1841_p1;
reg   [31:0] attn_weights_V_0_3_0_6_fu_240;
wire   [31:0] attn_weights_V_0_3_0_5_fu_1385_p6;
reg   [31:0] attn_weights_V_0_2_0_6_fu_244;
wire   [31:0] attn_weights_V_0_2_0_5_fu_1395_p6;
reg   [31:0] attn_weights_V_0_1_0_6_fu_248;
wire   [31:0] attn_weights_V_0_1_0_5_fu_1405_p6;
reg   [31:0] attn_weights_V_0_0_0_6_fu_252;
wire   [31:0] attn_weights_V_0_0_0_5_fu_1415_p6;
reg   [31:0] attn_weights_V_2_3_0_4_fu_256;
wire   [31:0] attn_weights_V_2_3_0_3_fu_1445_p6;
reg   [31:0] attn_weights_V_2_2_0_4_fu_260;
wire   [31:0] attn_weights_V_2_2_0_3_fu_1458_p6;
reg   [31:0] attn_weights_V_2_1_0_4_fu_264;
wire   [31:0] attn_weights_V_2_1_0_3_fu_1471_p6;
reg   [31:0] attn_weights_V_2_0_0_4_fu_268;
wire   [31:0] attn_weights_V_2_0_0_3_fu_1484_p6;
reg   [31:0] attn_weights_V_1_3_0_4_fu_272;
wire   [31:0] attn_weights_V_1_3_0_3_fu_1313_p6;
reg   [31:0] attn_weights_V_1_2_0_4_fu_276;
wire   [31:0] attn_weights_V_1_2_0_3_fu_1326_p6;
reg   [31:0] attn_weights_V_1_1_0_4_fu_280;
wire   [31:0] attn_weights_V_1_1_0_3_fu_1339_p6;
reg   [31:0] attn_weights_V_1_0_0_4_fu_284;
wire   [31:0] attn_weights_V_1_0_0_3_fu_1352_p6;
wire   [31:0] tmp_3_fu_1756_p6;
wire   [31:0] tmp_4_fu_1778_p6;
wire   [31:0] tmp_6_fu_1799_p6;
wire   [31:0] tmp_7_fu_1819_p6;
wire   [3:0] tmp_2_fu_1222_p13;
wire   [31:0] tmp_2_fu_1222_p14;
wire   [53:0] shl_ln_fu_1252_p3;
wire   [53:0] sub_ln1148_fu_1268_p2;
wire   [31:0] zext_ln1148_fu_1294_p1;
wire   [31:0] sub_ln1148_6_fu_1300_p2;
wire   [31:0] zext_ln1148_7_fu_1297_p1;
wire   [31:0] select_ln1148_fu_1306_p3;
wire   [1:0] trunc_ln1265_1_fu_1529_p1;
wire   [31:0] tmp_1_fu_1533_p6;
wire   [3:0] or_ln223_fu_1767_p2;
wire   [3:0] or_ln223_1_fu_1789_p2;
wire   [3:0] or_ln223_2_fu_1809_p2;
reg   [30:0] ap_NS_fsm;
reg    ap_block_state15_on_subcall_done;

// power-on initialization
initial begin
#0 ap_CS_fsm = 31'd1;
#0 grp_linear_forward_no_mu_fu_458_ap_start_reg = 1'b0;
#0 grp_softmax_1_4_3_s_fu_491_ap_start_reg = 1'b0;
#0 grp_apply_rotary_pos_emb_fu_511_ap_start_reg = 1'b0;
#0 grp_rms_norm_16_s_fu_551_ap_start_reg = 1'b0;
#0 grp_quantize_activation_fu_560_ap_start_reg = 1'b0;
#0 grp_GEMM_3D_float_fu_567_ap_start_reg = 1'b0;
#0 grp_GEMM_3D_float_1_fu_590_ap_start_reg = 1'b0;
#0 grp_cache_update_fu_610_ap_start_reg = 1'b0;
#0 grp_reshape_2D_to_3D_fu_637_ap_start_reg = 1'b0;
#0 grp_transpose_last_two_d_fu_642_ap_start_reg = 1'b0;
#0 grp_init_2d_mem_fu_653_ap_start_reg = 1'b0;
#0 grp_init_2d_mem_fu_658_ap_start_reg = 1'b0;
#0 grp_init_2d_mem_fu_663_ap_start_reg = 1'b0;
end

attention_ln_weigjbC #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
ln_weight_in_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_rms_norm_16_s_fu_551_weight_V_address0),
    .ce0(ln_weight_in_V_ce0),
    .q0(ln_weight_in_V_q0)
);

attention_q_weighkbM #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
q_weights_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_linear_forward_no_mu_fu_458_packed_weights_0_V_address0),
    .ce0(q_weights_V_0_ce0),
    .q0(q_weights_V_0_q0)
);

attention_q_weighlbW #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
q_weights_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_linear_forward_no_mu_fu_458_packed_weights_1_V_address0),
    .ce0(q_weights_V_1_ce0),
    .q0(q_weights_V_1_q0)
);

attention_q_weighmb6 #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
q_weights_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_linear_forward_no_mu_fu_458_packed_weights_2_V_address0),
    .ce0(q_weights_V_2_ce0),
    .q0(q_weights_V_2_q0)
);

attention_q_weighncg #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
q_weights_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_linear_forward_no_mu_fu_458_packed_weights_3_V_address0),
    .ce0(q_weights_V_3_ce0),
    .q0(q_weights_V_3_q0)
);

attention_k_weighocq #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
k_weights_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_linear_forward_no_mu_fu_458_packed_weights_0_V_address0),
    .ce0(k_weights_V_0_ce0),
    .q0(k_weights_V_0_q0)
);

attention_k_weighpcA #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
k_weights_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_linear_forward_no_mu_fu_458_packed_weights_1_V_address0),
    .ce0(k_weights_V_1_ce0),
    .q0(k_weights_V_1_q0)
);

attention_k_weighqcK #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
k_weights_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_linear_forward_no_mu_fu_458_packed_weights_2_V_address0),
    .ce0(k_weights_V_2_ce0),
    .q0(k_weights_V_2_q0)
);

attention_k_weighrcU #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
k_weights_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_linear_forward_no_mu_fu_458_packed_weights_3_V_address0),
    .ce0(k_weights_V_3_ce0),
    .q0(k_weights_V_3_q0)
);

attention_v_weighsc4 #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
v_weights_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_linear_forward_no_mu_fu_458_packed_weights_0_V_address0),
    .ce0(v_weights_V_0_ce0),
    .q0(v_weights_V_0_q0)
);

attention_v_weightde #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
v_weights_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_linear_forward_no_mu_fu_458_packed_weights_1_V_address0),
    .ce0(v_weights_V_1_ce0),
    .q0(v_weights_V_1_q0)
);

attention_v_weighudo #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
v_weights_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_linear_forward_no_mu_fu_458_packed_weights_2_V_address0),
    .ce0(v_weights_V_2_ce0),
    .q0(v_weights_V_2_q0)
);

attention_v_weighvdy #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
v_weights_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_linear_forward_no_mu_fu_458_packed_weights_3_V_address0),
    .ce0(v_weights_V_3_ce0),
    .q0(v_weights_V_3_q0)
);

attention_k_cache_V #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
k_cache_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_cache_update_fu_610_cache_in_V_address0),
    .ce0(k_cache_V_ce0),
    .q0(k_cache_V_q0)
);

attention_v_cache_V #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
v_cache_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_cache_update_fu_610_cache_in_V_address0),
    .ce0(v_cache_V_ce0),
    .q0(v_cache_V_q0)
);

attention_ln_weigwdI #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
ln_weight_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_rms_norm_16_s_fu_551_weight_V_address0),
    .ce0(ln_weight_V_ce0),
    .q0(ln_weight_V_q0)
);

attention_o_weighxdS #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
o_weights_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_linear_forward_no_mu_fu_458_packed_weights_0_V_address0),
    .ce0(o_weights_V_0_ce0),
    .q0(o_weights_V_0_q0)
);

attention_o_weighyd2 #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
o_weights_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_linear_forward_no_mu_fu_458_packed_weights_1_V_address0),
    .ce0(o_weights_V_1_ce0),
    .q0(o_weights_V_1_q0)
);

attention_o_weighzec #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
o_weights_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_linear_forward_no_mu_fu_458_packed_weights_2_V_address0),
    .ce0(o_weights_V_2_ce0),
    .q0(o_weights_V_2_q0)
);

attention_o_weighAem #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
o_weights_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_linear_forward_no_mu_fu_458_packed_weights_3_V_address0),
    .ce0(o_weights_V_3_ce0),
    .q0(o_weights_V_3_q0)
);

attention_quantizBew #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
quantized_hidden_sta_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(quantized_hidden_sta_address0),
    .ce0(quantized_hidden_sta_ce0),
    .we0(quantized_hidden_sta_we0),
    .d0(quantized_hidden_sta_d0),
    .q0(quantized_hidden_sta_q0),
    .address1(grp_linear_forward_no_mu_fu_458_input_0_V_address1),
    .ce1(quantized_hidden_sta_ce1),
    .q1(quantized_hidden_sta_q1)
);

attention_q_proj_CeG #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
q_proj_re_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(q_proj_re_0_V_address0),
    .ce0(q_proj_re_0_V_ce0),
    .we0(q_proj_re_0_V_we0),
    .d0(q_proj_re_0_V_d0),
    .q0(q_proj_re_0_V_q0),
    .address1(grp_linear_forward_no_mu_fu_458_output_0_V_address1),
    .ce1(q_proj_re_0_V_ce1),
    .we1(q_proj_re_0_V_we1),
    .d1(grp_linear_forward_no_mu_fu_458_output_0_V_d1),
    .q1(q_proj_re_0_V_q1)
);

attention_q_proj_CeG #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
k_proj_re_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_proj_re_0_V_address0),
    .ce0(k_proj_re_0_V_ce0),
    .we0(k_proj_re_0_V_we0),
    .d0(k_proj_re_0_V_d0),
    .q0(k_proj_re_0_V_q0),
    .address1(grp_linear_forward_no_mu_fu_458_output_0_V_address1),
    .ce1(k_proj_re_0_V_ce1),
    .we1(k_proj_re_0_V_we1),
    .d1(grp_linear_forward_no_mu_fu_458_output_0_V_d1),
    .q1(k_proj_re_0_V_q1)
);

attention_q_proj_CeG #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
v_proj_re_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(v_proj_re_0_V_address0),
    .ce0(v_proj_re_0_V_ce0),
    .we0(v_proj_re_0_V_we0),
    .d0(v_proj_re_0_V_d0),
    .q0(v_proj_re_0_V_q0),
    .address1(grp_linear_forward_no_mu_fu_458_output_0_V_address1),
    .ce1(v_proj_re_0_V_ce1),
    .we1(v_proj_re_0_V_we1),
    .d1(grp_linear_forward_no_mu_fu_458_output_0_V_d1),
    .q1(v_proj_re_0_V_q1)
);

attention_k_cacheFfa #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
k_cache_upd_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_cache_upd_0_V_address0),
    .ce0(k_cache_upd_0_V_ce0),
    .we0(k_cache_upd_0_V_we0),
    .d0(grp_cache_update_fu_610_cache_out_0_V_d0),
    .q0(k_cache_upd_0_V_q0)
);

attention_k_cacheFfa #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
k_cache_upd_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_cache_upd_1_V_address0),
    .ce0(k_cache_upd_1_V_ce0),
    .we0(k_cache_upd_1_V_we0),
    .d0(grp_cache_update_fu_610_cache_out_1_V_d0),
    .q0(k_cache_upd_1_V_q0)
);

attention_k_cacheFfa #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
k_cache_upd_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_cache_upd_2_V_address0),
    .ce0(k_cache_upd_2_V_ce0),
    .we0(k_cache_upd_2_V_we0),
    .d0(grp_cache_update_fu_610_cache_out_2_V_d0),
    .q0(k_cache_upd_2_V_q0)
);

attention_k_cacheFfa #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
k_cache_upd_3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_cache_upd_3_V_address0),
    .ce0(k_cache_upd_3_V_ce0),
    .we0(k_cache_upd_3_V_we0),
    .d0(grp_cache_update_fu_610_cache_out_3_V_d0),
    .q0(k_cache_upd_3_V_q0)
);

attention_v_cacheJfO #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
v_cache_upd_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(v_cache_upd_0_V_address0),
    .ce0(v_cache_upd_0_V_ce0),
    .we0(v_cache_upd_0_V_we0),
    .d0(grp_cache_update_fu_610_cache_out_0_V_d0),
    .q0(v_cache_upd_0_V_q0),
    .address1(grp_GEMM_3D_float_1_fu_590_input_2_0_V_address1),
    .ce1(v_cache_upd_0_V_ce1),
    .q1(v_cache_upd_0_V_q1)
);

attention_v_cacheJfO #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
v_cache_upd_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(v_cache_upd_1_V_address0),
    .ce0(v_cache_upd_1_V_ce0),
    .we0(v_cache_upd_1_V_we0),
    .d0(grp_cache_update_fu_610_cache_out_1_V_d0),
    .q0(v_cache_upd_1_V_q0),
    .address1(grp_GEMM_3D_float_1_fu_590_input_2_1_V_address1),
    .ce1(v_cache_upd_1_V_ce1),
    .q1(v_cache_upd_1_V_q1)
);

attention_v_cacheJfO #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
v_cache_upd_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(v_cache_upd_2_V_address0),
    .ce0(v_cache_upd_2_V_ce0),
    .we0(v_cache_upd_2_V_we0),
    .d0(grp_cache_update_fu_610_cache_out_2_V_d0),
    .q0(v_cache_upd_2_V_q0),
    .address1(grp_GEMM_3D_float_1_fu_590_input_2_2_V_address1),
    .ce1(v_cache_upd_2_V_ce1),
    .q1(v_cache_upd_2_V_q1)
);

attention_v_cacheJfO #(
    .DataWidth( 32 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
v_cache_upd_3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(v_cache_upd_3_V_address0),
    .ce0(v_cache_upd_3_V_ce0),
    .we0(v_cache_upd_3_V_we0),
    .d0(grp_cache_update_fu_610_cache_out_3_V_d0),
    .q0(v_cache_upd_3_V_q0),
    .address1(grp_GEMM_3D_float_1_fu_590_input_2_3_V_address1),
    .ce1(v_cache_upd_3_V_ce1),
    .q1(v_cache_upd_3_V_q1)
);

attention_q_proj_CeG #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
k_proj_transposed_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_proj_transposed_0_address0),
    .ce0(k_proj_transposed_0_ce0),
    .we0(k_proj_transposed_0_we0),
    .d0(grp_transpose_last_two_d_fu_642_output_0_V_d0),
    .q0(k_proj_transposed_0_q0),
    .address1(k_proj_transposed_0_address1),
    .ce1(k_proj_transposed_0_ce1),
    .we1(k_proj_transposed_0_we1),
    .d1(grp_transpose_last_two_d_fu_642_output_0_V_d1),
    .q1(k_proj_transposed_0_q1)
);

attention_q_proj_CeG #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
k_proj_transposed_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_proj_transposed_1_address0),
    .ce0(k_proj_transposed_1_ce0),
    .we0(k_proj_transposed_1_we0),
    .d0(grp_transpose_last_two_d_fu_642_output_1_V_d0),
    .q0(k_proj_transposed_1_q0),
    .address1(k_proj_transposed_1_address1),
    .ce1(k_proj_transposed_1_ce1),
    .we1(k_proj_transposed_1_we1),
    .d1(grp_transpose_last_two_d_fu_642_output_1_V_d1),
    .q1(k_proj_transposed_1_q1)
);

attention_q_proj_CeG #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
k_proj_transposed_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_proj_transposed_2_address0),
    .ce0(k_proj_transposed_2_ce0),
    .we0(k_proj_transposed_2_we0),
    .d0(grp_transpose_last_two_d_fu_642_output_2_V_d0),
    .q0(k_proj_transposed_2_q0),
    .address1(k_proj_transposed_2_address1),
    .ce1(k_proj_transposed_2_ce1),
    .we1(k_proj_transposed_2_we1),
    .d1(grp_transpose_last_two_d_fu_642_output_2_V_d1),
    .q1(k_proj_transposed_2_q1)
);

attention_q_proj_CeG #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
attn_output_2D_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(attn_output_2D_0_V_address0),
    .ce0(attn_output_2D_0_V_ce0),
    .we0(attn_output_2D_0_V_we0),
    .d0(attn_output_2D_0_V_d0),
    .q0(attn_output_2D_0_V_q0),
    .address1(attn_output_2D_0_V_address1),
    .ce1(attn_output_2D_0_V_ce1),
    .we1(attn_output_2D_0_V_we1),
    .d1(attn_output_2D_0_V_d1),
    .q1(attn_output_2D_0_V_q1)
);

attention_quantizBew #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
quantized_final_outp_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(quantized_final_outp_address0),
    .ce0(quantized_final_outp_ce0),
    .we0(quantized_final_outp_we0),
    .d0(quantized_final_outp_d0),
    .q0(quantized_final_outp_q0),
    .address1(grp_linear_forward_no_mu_fu_458_input_0_V_address1),
    .ce1(quantized_final_outp_ce1),
    .q1(quantized_final_outp_q1)
);

linear_forward_no_mu grp_linear_forward_no_mu_fu_458(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_linear_forward_no_mu_fu_458_ap_start),
    .ap_done(grp_linear_forward_no_mu_fu_458_ap_done),
    .ap_idle(grp_linear_forward_no_mu_fu_458_ap_idle),
    .ap_ready(grp_linear_forward_no_mu_fu_458_ap_ready),
    .input_0_V_address0(grp_linear_forward_no_mu_fu_458_input_0_V_address0),
    .input_0_V_ce0(grp_linear_forward_no_mu_fu_458_input_0_V_ce0),
    .input_0_V_q0(grp_linear_forward_no_mu_fu_458_input_0_V_q0),
    .input_0_V_address1(grp_linear_forward_no_mu_fu_458_input_0_V_address1),
    .input_0_V_ce1(grp_linear_forward_no_mu_fu_458_input_0_V_ce1),
    .input_0_V_q1(grp_linear_forward_no_mu_fu_458_input_0_V_q1),
    .output_0_V_address0(grp_linear_forward_no_mu_fu_458_output_0_V_address0),
    .output_0_V_ce0(grp_linear_forward_no_mu_fu_458_output_0_V_ce0),
    .output_0_V_we0(grp_linear_forward_no_mu_fu_458_output_0_V_we0),
    .output_0_V_d0(grp_linear_forward_no_mu_fu_458_output_0_V_d0),
    .output_0_V_q0(grp_linear_forward_no_mu_fu_458_output_0_V_q0),
    .output_0_V_address1(grp_linear_forward_no_mu_fu_458_output_0_V_address1),
    .output_0_V_ce1(grp_linear_forward_no_mu_fu_458_output_0_V_ce1),
    .output_0_V_we1(grp_linear_forward_no_mu_fu_458_output_0_V_we1),
    .output_0_V_d1(grp_linear_forward_no_mu_fu_458_output_0_V_d1),
    .output_0_V_q1(grp_linear_forward_no_mu_fu_458_output_0_V_q1),
    .scales_0_V_read(reg_777),
    .packed_weights_0_V_address0(grp_linear_forward_no_mu_fu_458_packed_weights_0_V_address0),
    .packed_weights_0_V_ce0(grp_linear_forward_no_mu_fu_458_packed_weights_0_V_ce0),
    .packed_weights_0_V_q0(grp_linear_forward_no_mu_fu_458_packed_weights_0_V_q0),
    .packed_weights_1_V_address0(grp_linear_forward_no_mu_fu_458_packed_weights_1_V_address0),
    .packed_weights_1_V_ce0(grp_linear_forward_no_mu_fu_458_packed_weights_1_V_ce0),
    .packed_weights_1_V_q0(grp_linear_forward_no_mu_fu_458_packed_weights_1_V_q0),
    .packed_weights_2_V_address0(grp_linear_forward_no_mu_fu_458_packed_weights_2_V_address0),
    .packed_weights_2_V_ce0(grp_linear_forward_no_mu_fu_458_packed_weights_2_V_ce0),
    .packed_weights_2_V_q0(grp_linear_forward_no_mu_fu_458_packed_weights_2_V_q0),
    .packed_weights_3_V_address0(grp_linear_forward_no_mu_fu_458_packed_weights_3_V_address0),
    .packed_weights_3_V_ce0(grp_linear_forward_no_mu_fu_458_packed_weights_3_V_ce0),
    .packed_weights_3_V_q0(grp_linear_forward_no_mu_fu_458_packed_weights_3_V_q0),
    .w_scale_V(grp_linear_forward_no_mu_fu_458_w_scale_V)
);

softmax_1_4_3_s grp_softmax_1_4_3_s_fu_491(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_softmax_1_4_3_s_fu_491_ap_start),
    .ap_done(grp_softmax_1_4_3_s_fu_491_ap_done),
    .ap_idle(grp_softmax_1_4_3_s_fu_491_ap_idle),
    .ap_ready(grp_softmax_1_4_3_s_fu_491_ap_ready),
    .p_read(attn_weights_V_0_0_0_3_reg_385),
    .p_read1(attn_weights_V_0_1_0_3_reg_395),
    .p_read2(attn_weights_V_0_2_0_3_reg_405),
    .p_read3(attn_weights_V_0_3_0_3_reg_415),
    .p_read4(reg_913),
    .p_read5(reg_908),
    .p_read6(reg_903),
    .p_read7(reg_898),
    .p_read8(reg_893),
    .p_read9(reg_888),
    .p_read10(reg_883),
    .p_read11(reg_878),
    .ap_return_0(grp_softmax_1_4_3_s_fu_491_ap_return_0),
    .ap_return_1(grp_softmax_1_4_3_s_fu_491_ap_return_1),
    .ap_return_2(grp_softmax_1_4_3_s_fu_491_ap_return_2),
    .ap_return_3(grp_softmax_1_4_3_s_fu_491_ap_return_3),
    .ap_return_4(grp_softmax_1_4_3_s_fu_491_ap_return_4),
    .ap_return_5(grp_softmax_1_4_3_s_fu_491_ap_return_5),
    .ap_return_6(grp_softmax_1_4_3_s_fu_491_ap_return_6),
    .ap_return_7(grp_softmax_1_4_3_s_fu_491_ap_return_7),
    .ap_return_8(grp_softmax_1_4_3_s_fu_491_ap_return_8),
    .ap_return_9(grp_softmax_1_4_3_s_fu_491_ap_return_9),
    .ap_return_10(grp_softmax_1_4_3_s_fu_491_ap_return_10),
    .ap_return_11(grp_softmax_1_4_3_s_fu_491_ap_return_11)
);

apply_rotary_pos_emb grp_apply_rotary_pos_emb_fu_511(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_apply_rotary_pos_emb_fu_511_ap_start),
    .ap_done(grp_apply_rotary_pos_emb_fu_511_ap_done),
    .ap_idle(grp_apply_rotary_pos_emb_fu_511_ap_idle),
    .ap_ready(grp_apply_rotary_pos_emb_fu_511_ap_ready),
    .p_read(reg_782),
    .p_read1(reg_788),
    .p_read2(reg_794),
    .p_read3(reg_800),
    .p_read4(reg_806),
    .p_read5(reg_812),
    .p_read6(reg_818),
    .p_read7(reg_824),
    .p_read8(reg_830),
    .p_read9(reg_836),
    .p_read10(reg_842),
    .p_read11(reg_848),
    .p_read12(reg_854),
    .p_read13(reg_860),
    .p_read14(reg_866),
    .p_read15(reg_872),
    .p_read16(k_proj_V_0_reg_1938),
    .p_read17(k_proj_V_0_1_reg_1943),
    .p_read18(k_proj_V_0_2_reg_1948),
    .p_read19(k_proj_V_0_3_reg_1953),
    .p_read20(k_proj_V_1_reg_1958),
    .p_read21(k_proj_V_1_1_reg_1963),
    .p_read22(k_proj_V_1_2_reg_1968),
    .p_read23(k_proj_V_1_3_reg_1973),
    .p_read24(k_proj_V_2_reg_1978),
    .p_read25(k_proj_V_2_1_reg_1983),
    .p_read26(k_proj_V_2_2_reg_1988),
    .p_read27(k_proj_V_2_3_reg_1993),
    .p_read28(k_proj_V_3_reg_1998),
    .p_read29(k_proj_V_3_1_reg_2003),
    .p_read30(k_proj_V_3_2_reg_2008),
    .p_read31(k_proj_V_3_3_reg_2013),
    .ap_return_0(grp_apply_rotary_pos_emb_fu_511_ap_return_0),
    .ap_return_1(grp_apply_rotary_pos_emb_fu_511_ap_return_1),
    .ap_return_2(grp_apply_rotary_pos_emb_fu_511_ap_return_2),
    .ap_return_3(grp_apply_rotary_pos_emb_fu_511_ap_return_3),
    .ap_return_4(grp_apply_rotary_pos_emb_fu_511_ap_return_4),
    .ap_return_5(grp_apply_rotary_pos_emb_fu_511_ap_return_5),
    .ap_return_6(grp_apply_rotary_pos_emb_fu_511_ap_return_6),
    .ap_return_7(grp_apply_rotary_pos_emb_fu_511_ap_return_7),
    .ap_return_8(grp_apply_rotary_pos_emb_fu_511_ap_return_8),
    .ap_return_9(grp_apply_rotary_pos_emb_fu_511_ap_return_9),
    .ap_return_10(grp_apply_rotary_pos_emb_fu_511_ap_return_10),
    .ap_return_11(grp_apply_rotary_pos_emb_fu_511_ap_return_11),
    .ap_return_12(grp_apply_rotary_pos_emb_fu_511_ap_return_12),
    .ap_return_13(grp_apply_rotary_pos_emb_fu_511_ap_return_13),
    .ap_return_14(grp_apply_rotary_pos_emb_fu_511_ap_return_14),
    .ap_return_15(grp_apply_rotary_pos_emb_fu_511_ap_return_15),
    .ap_return_16(grp_apply_rotary_pos_emb_fu_511_ap_return_16),
    .ap_return_17(grp_apply_rotary_pos_emb_fu_511_ap_return_17),
    .ap_return_18(grp_apply_rotary_pos_emb_fu_511_ap_return_18),
    .ap_return_19(grp_apply_rotary_pos_emb_fu_511_ap_return_19),
    .ap_return_20(grp_apply_rotary_pos_emb_fu_511_ap_return_20),
    .ap_return_21(grp_apply_rotary_pos_emb_fu_511_ap_return_21),
    .ap_return_22(grp_apply_rotary_pos_emb_fu_511_ap_return_22),
    .ap_return_23(grp_apply_rotary_pos_emb_fu_511_ap_return_23),
    .ap_return_24(grp_apply_rotary_pos_emb_fu_511_ap_return_24),
    .ap_return_25(grp_apply_rotary_pos_emb_fu_511_ap_return_25),
    .ap_return_26(grp_apply_rotary_pos_emb_fu_511_ap_return_26),
    .ap_return_27(grp_apply_rotary_pos_emb_fu_511_ap_return_27),
    .ap_return_28(grp_apply_rotary_pos_emb_fu_511_ap_return_28),
    .ap_return_29(grp_apply_rotary_pos_emb_fu_511_ap_return_29),
    .ap_return_30(grp_apply_rotary_pos_emb_fu_511_ap_return_30),
    .ap_return_31(grp_apply_rotary_pos_emb_fu_511_ap_return_31)
);

rms_norm_16_s grp_rms_norm_16_s_fu_551(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_rms_norm_16_s_fu_551_ap_start),
    .ap_done(grp_rms_norm_16_s_fu_551_ap_done),
    .ap_idle(grp_rms_norm_16_s_fu_551_ap_idle),
    .ap_ready(grp_rms_norm_16_s_fu_551_ap_ready),
    .input_0_V_address0(grp_rms_norm_16_s_fu_551_input_0_V_address0),
    .input_0_V_ce0(grp_rms_norm_16_s_fu_551_input_0_V_ce0),
    .input_0_V_q0(grp_rms_norm_16_s_fu_551_input_0_V_q0),
    .input_0_V_address1(grp_rms_norm_16_s_fu_551_input_0_V_address1),
    .input_0_V_ce1(grp_rms_norm_16_s_fu_551_input_0_V_ce1),
    .input_0_V_we1(grp_rms_norm_16_s_fu_551_input_0_V_we1),
    .input_0_V_d1(grp_rms_norm_16_s_fu_551_input_0_V_d1),
    .weight_V_address0(grp_rms_norm_16_s_fu_551_weight_V_address0),
    .weight_V_ce0(grp_rms_norm_16_s_fu_551_weight_V_ce0),
    .weight_V_q0(grp_rms_norm_16_s_fu_551_weight_V_q0)
);

quantize_activation grp_quantize_activation_fu_560(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_quantize_activation_fu_560_ap_start),
    .ap_done(grp_quantize_activation_fu_560_ap_done),
    .ap_idle(grp_quantize_activation_fu_560_ap_idle),
    .ap_ready(grp_quantize_activation_fu_560_ap_ready),
    .input_0_V_address0(grp_quantize_activation_fu_560_input_0_V_address0),
    .input_0_V_ce0(grp_quantize_activation_fu_560_input_0_V_ce0),
    .input_0_V_q0(grp_quantize_activation_fu_560_input_0_V_q0),
    .input_0_V_address1(grp_quantize_activation_fu_560_input_0_V_address1),
    .input_0_V_ce1(grp_quantize_activation_fu_560_input_0_V_ce1),
    .input_0_V_q1(grp_quantize_activation_fu_560_input_0_V_q1),
    .output_states_0_V_address0(grp_quantize_activation_fu_560_output_states_0_V_address0),
    .output_states_0_V_ce0(grp_quantize_activation_fu_560_output_states_0_V_ce0),
    .output_states_0_V_we0(grp_quantize_activation_fu_560_output_states_0_V_we0),
    .output_states_0_V_d0(grp_quantize_activation_fu_560_output_states_0_V_d0),
    .ap_return(grp_quantize_activation_fu_560_ap_return)
);

GEMM_3D_float grp_GEMM_3D_float_fu_567(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GEMM_3D_float_fu_567_ap_start),
    .ap_done(grp_GEMM_3D_float_fu_567_ap_done),
    .ap_idle(grp_GEMM_3D_float_fu_567_ap_idle),
    .ap_ready(grp_GEMM_3D_float_fu_567_ap_ready),
    .p_read(q_embed_V_0_reg_2018),
    .p_read1(q_embed_V_0_1_reg_2023),
    .p_read2(q_embed_V_0_2_reg_2028),
    .p_read3(q_embed_V_0_3_reg_2033),
    .p_read4(q_embed_V_1_reg_2038),
    .p_read5(q_embed_V_1_1_reg_2043),
    .p_read6(q_embed_V_1_2_reg_2048),
    .p_read7(q_embed_V_1_3_reg_2053),
    .p_read8(q_embed_V_2_reg_2058),
    .p_read9(q_embed_V_2_1_reg_2063),
    .p_read10(q_embed_V_2_2_reg_2068),
    .p_read11(q_embed_V_2_3_reg_2073),
    .p_read12(q_embed_V_3_reg_2078),
    .p_read13(q_embed_V_3_1_reg_2083),
    .p_read14(q_embed_V_3_2_reg_2088),
    .p_read15(q_embed_V_3_3_reg_2093),
    .input_2_0_V_address0(grp_GEMM_3D_float_fu_567_input_2_0_V_address0),
    .input_2_0_V_ce0(grp_GEMM_3D_float_fu_567_input_2_0_V_ce0),
    .input_2_0_V_q0(k_proj_transposed_0_q0),
    .input_2_0_V_address1(grp_GEMM_3D_float_fu_567_input_2_0_V_address1),
    .input_2_0_V_ce1(grp_GEMM_3D_float_fu_567_input_2_0_V_ce1),
    .input_2_0_V_q1(k_proj_transposed_0_q1),
    .input_2_1_V_address0(grp_GEMM_3D_float_fu_567_input_2_1_V_address0),
    .input_2_1_V_ce0(grp_GEMM_3D_float_fu_567_input_2_1_V_ce0),
    .input_2_1_V_q0(k_proj_transposed_1_q0),
    .input_2_1_V_address1(grp_GEMM_3D_float_fu_567_input_2_1_V_address1),
    .input_2_1_V_ce1(grp_GEMM_3D_float_fu_567_input_2_1_V_ce1),
    .input_2_1_V_q1(k_proj_transposed_1_q1),
    .input_2_2_V_address0(grp_GEMM_3D_float_fu_567_input_2_2_V_address0),
    .input_2_2_V_ce0(grp_GEMM_3D_float_fu_567_input_2_2_V_ce0),
    .input_2_2_V_q0(k_proj_transposed_2_q0),
    .input_2_2_V_address1(grp_GEMM_3D_float_fu_567_input_2_2_V_address1),
    .input_2_2_V_ce1(grp_GEMM_3D_float_fu_567_input_2_2_V_ce1),
    .input_2_2_V_q1(k_proj_transposed_2_q1),
    .ap_return_0(grp_GEMM_3D_float_fu_567_ap_return_0),
    .ap_return_1(grp_GEMM_3D_float_fu_567_ap_return_1),
    .ap_return_2(grp_GEMM_3D_float_fu_567_ap_return_2),
    .ap_return_3(grp_GEMM_3D_float_fu_567_ap_return_3),
    .ap_return_4(grp_GEMM_3D_float_fu_567_ap_return_4),
    .ap_return_5(grp_GEMM_3D_float_fu_567_ap_return_5),
    .ap_return_6(grp_GEMM_3D_float_fu_567_ap_return_6),
    .ap_return_7(grp_GEMM_3D_float_fu_567_ap_return_7),
    .ap_return_8(grp_GEMM_3D_float_fu_567_ap_return_8),
    .ap_return_9(grp_GEMM_3D_float_fu_567_ap_return_9),
    .ap_return_10(grp_GEMM_3D_float_fu_567_ap_return_10),
    .ap_return_11(grp_GEMM_3D_float_fu_567_ap_return_11)
);

GEMM_3D_float_1 grp_GEMM_3D_float_1_fu_590(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GEMM_3D_float_1_fu_590_ap_start),
    .ap_done(grp_GEMM_3D_float_1_fu_590_ap_done),
    .ap_idle(grp_GEMM_3D_float_1_fu_590_ap_idle),
    .ap_ready(grp_GEMM_3D_float_1_fu_590_ap_ready),
    .p_read(attn_weights_V_0_0_0_7_reg_2302),
    .p_read1(attn_weights_V_0_1_0_7_reg_2307),
    .p_read2(attn_weights_V_0_2_0_7_reg_2312),
    .p_read3(attn_weights_V_0_3_0_7_reg_2317),
    .p_read4(attn_weights_V_1_0_0_5_reg_2322),
    .p_read5(attn_weights_V_1_1_0_5_reg_2327),
    .p_read6(attn_weights_V_1_2_0_5_reg_2332),
    .p_read7(attn_weights_V_1_3_0_5_reg_2337),
    .p_read8(attn_weights_V_2_0_0_5_reg_2342),
    .p_read9(attn_weights_V_2_1_0_5_reg_2347),
    .p_read10(attn_weights_V_2_2_0_5_reg_2352),
    .p_read11(attn_weights_V_2_3_0_5_reg_2357),
    .input_2_0_V_address0(grp_GEMM_3D_float_1_fu_590_input_2_0_V_address0),
    .input_2_0_V_ce0(grp_GEMM_3D_float_1_fu_590_input_2_0_V_ce0),
    .input_2_0_V_q0(v_cache_upd_0_V_q0),
    .input_2_0_V_address1(grp_GEMM_3D_float_1_fu_590_input_2_0_V_address1),
    .input_2_0_V_ce1(grp_GEMM_3D_float_1_fu_590_input_2_0_V_ce1),
    .input_2_0_V_q1(v_cache_upd_0_V_q1),
    .input_2_1_V_address0(grp_GEMM_3D_float_1_fu_590_input_2_1_V_address0),
    .input_2_1_V_ce0(grp_GEMM_3D_float_1_fu_590_input_2_1_V_ce0),
    .input_2_1_V_q0(v_cache_upd_1_V_q0),
    .input_2_1_V_address1(grp_GEMM_3D_float_1_fu_590_input_2_1_V_address1),
    .input_2_1_V_ce1(grp_GEMM_3D_float_1_fu_590_input_2_1_V_ce1),
    .input_2_1_V_q1(v_cache_upd_1_V_q1),
    .input_2_2_V_address0(grp_GEMM_3D_float_1_fu_590_input_2_2_V_address0),
    .input_2_2_V_ce0(grp_GEMM_3D_float_1_fu_590_input_2_2_V_ce0),
    .input_2_2_V_q0(v_cache_upd_2_V_q0),
    .input_2_2_V_address1(grp_GEMM_3D_float_1_fu_590_input_2_2_V_address1),
    .input_2_2_V_ce1(grp_GEMM_3D_float_1_fu_590_input_2_2_V_ce1),
    .input_2_2_V_q1(v_cache_upd_2_V_q1),
    .input_2_3_V_address0(grp_GEMM_3D_float_1_fu_590_input_2_3_V_address0),
    .input_2_3_V_ce0(grp_GEMM_3D_float_1_fu_590_input_2_3_V_ce0),
    .input_2_3_V_q0(v_cache_upd_3_V_q0),
    .input_2_3_V_address1(grp_GEMM_3D_float_1_fu_590_input_2_3_V_address1),
    .input_2_3_V_ce1(grp_GEMM_3D_float_1_fu_590_input_2_3_V_ce1),
    .input_2_3_V_q1(v_cache_upd_3_V_q1),
    .ap_return_0(grp_GEMM_3D_float_1_fu_590_ap_return_0),
    .ap_return_1(grp_GEMM_3D_float_1_fu_590_ap_return_1),
    .ap_return_2(grp_GEMM_3D_float_1_fu_590_ap_return_2),
    .ap_return_3(grp_GEMM_3D_float_1_fu_590_ap_return_3),
    .ap_return_4(grp_GEMM_3D_float_1_fu_590_ap_return_4),
    .ap_return_5(grp_GEMM_3D_float_1_fu_590_ap_return_5),
    .ap_return_6(grp_GEMM_3D_float_1_fu_590_ap_return_6),
    .ap_return_7(grp_GEMM_3D_float_1_fu_590_ap_return_7),
    .ap_return_8(grp_GEMM_3D_float_1_fu_590_ap_return_8),
    .ap_return_9(grp_GEMM_3D_float_1_fu_590_ap_return_9),
    .ap_return_10(grp_GEMM_3D_float_1_fu_590_ap_return_10),
    .ap_return_11(grp_GEMM_3D_float_1_fu_590_ap_return_11),
    .ap_return_12(grp_GEMM_3D_float_1_fu_590_ap_return_12),
    .ap_return_13(grp_GEMM_3D_float_1_fu_590_ap_return_13),
    .ap_return_14(grp_GEMM_3D_float_1_fu_590_ap_return_14),
    .ap_return_15(grp_GEMM_3D_float_1_fu_590_ap_return_15)
);

cache_update grp_cache_update_fu_610(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_cache_update_fu_610_ap_start),
    .ap_done(grp_cache_update_fu_610_ap_done),
    .ap_idle(grp_cache_update_fu_610_ap_idle),
    .ap_ready(grp_cache_update_fu_610_ap_ready),
    .cache_in_V_address0(grp_cache_update_fu_610_cache_in_V_address0),
    .cache_in_V_ce0(grp_cache_update_fu_610_cache_in_V_ce0),
    .cache_in_V_q0(grp_cache_update_fu_610_cache_in_V_q0),
    .cache_out_0_V_address0(grp_cache_update_fu_610_cache_out_0_V_address0),
    .cache_out_0_V_ce0(grp_cache_update_fu_610_cache_out_0_V_ce0),
    .cache_out_0_V_we0(grp_cache_update_fu_610_cache_out_0_V_we0),
    .cache_out_0_V_d0(grp_cache_update_fu_610_cache_out_0_V_d0),
    .cache_out_1_V_address0(grp_cache_update_fu_610_cache_out_1_V_address0),
    .cache_out_1_V_ce0(grp_cache_update_fu_610_cache_out_1_V_ce0),
    .cache_out_1_V_we0(grp_cache_update_fu_610_cache_out_1_V_we0),
    .cache_out_1_V_d0(grp_cache_update_fu_610_cache_out_1_V_d0),
    .cache_out_2_V_address0(grp_cache_update_fu_610_cache_out_2_V_address0),
    .cache_out_2_V_ce0(grp_cache_update_fu_610_cache_out_2_V_ce0),
    .cache_out_2_V_we0(grp_cache_update_fu_610_cache_out_2_V_we0),
    .cache_out_2_V_d0(grp_cache_update_fu_610_cache_out_2_V_d0),
    .cache_out_3_V_address0(grp_cache_update_fu_610_cache_out_3_V_address0),
    .cache_out_3_V_ce0(grp_cache_update_fu_610_cache_out_3_V_ce0),
    .cache_out_3_V_we0(grp_cache_update_fu_610_cache_out_3_V_we0),
    .cache_out_3_V_d0(grp_cache_update_fu_610_cache_out_3_V_d0),
    .p_read(grp_cache_update_fu_610_p_read),
    .p_read1(grp_cache_update_fu_610_p_read1),
    .p_read2(grp_cache_update_fu_610_p_read2),
    .p_read3(grp_cache_update_fu_610_p_read3),
    .p_read4(grp_cache_update_fu_610_p_read4),
    .p_read5(grp_cache_update_fu_610_p_read5),
    .p_read6(grp_cache_update_fu_610_p_read6),
    .p_read7(grp_cache_update_fu_610_p_read7),
    .p_read8(grp_cache_update_fu_610_p_read8),
    .p_read9(grp_cache_update_fu_610_p_read9),
    .p_read10(grp_cache_update_fu_610_p_read10),
    .p_read11(grp_cache_update_fu_610_p_read11),
    .p_read12(grp_cache_update_fu_610_p_read12),
    .p_read13(grp_cache_update_fu_610_p_read13),
    .p_read14(grp_cache_update_fu_610_p_read14),
    .p_read15(grp_cache_update_fu_610_p_read15)
);

reshape_2D_to_3D grp_reshape_2D_to_3D_fu_637(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_reshape_2D_to_3D_fu_637_ap_start),
    .ap_done(grp_reshape_2D_to_3D_fu_637_ap_done),
    .ap_idle(grp_reshape_2D_to_3D_fu_637_ap_idle),
    .ap_ready(grp_reshape_2D_to_3D_fu_637_ap_ready),
    .input_0_V_address0(grp_reshape_2D_to_3D_fu_637_input_0_V_address0),
    .input_0_V_ce0(grp_reshape_2D_to_3D_fu_637_input_0_V_ce0),
    .input_0_V_q0(grp_reshape_2D_to_3D_fu_637_input_0_V_q0),
    .ap_return_0(grp_reshape_2D_to_3D_fu_637_ap_return_0),
    .ap_return_1(grp_reshape_2D_to_3D_fu_637_ap_return_1),
    .ap_return_2(grp_reshape_2D_to_3D_fu_637_ap_return_2),
    .ap_return_3(grp_reshape_2D_to_3D_fu_637_ap_return_3),
    .ap_return_4(grp_reshape_2D_to_3D_fu_637_ap_return_4),
    .ap_return_5(grp_reshape_2D_to_3D_fu_637_ap_return_5),
    .ap_return_6(grp_reshape_2D_to_3D_fu_637_ap_return_6),
    .ap_return_7(grp_reshape_2D_to_3D_fu_637_ap_return_7),
    .ap_return_8(grp_reshape_2D_to_3D_fu_637_ap_return_8),
    .ap_return_9(grp_reshape_2D_to_3D_fu_637_ap_return_9),
    .ap_return_10(grp_reshape_2D_to_3D_fu_637_ap_return_10),
    .ap_return_11(grp_reshape_2D_to_3D_fu_637_ap_return_11),
    .ap_return_12(grp_reshape_2D_to_3D_fu_637_ap_return_12),
    .ap_return_13(grp_reshape_2D_to_3D_fu_637_ap_return_13),
    .ap_return_14(grp_reshape_2D_to_3D_fu_637_ap_return_14),
    .ap_return_15(grp_reshape_2D_to_3D_fu_637_ap_return_15)
);

transpose_last_two_d grp_transpose_last_two_d_fu_642(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_transpose_last_two_d_fu_642_ap_start),
    .ap_done(grp_transpose_last_two_d_fu_642_ap_done),
    .ap_idle(grp_transpose_last_two_d_fu_642_ap_idle),
    .ap_ready(grp_transpose_last_two_d_fu_642_ap_ready),
    .input_0_V_address0(grp_transpose_last_two_d_fu_642_input_0_V_address0),
    .input_0_V_ce0(grp_transpose_last_two_d_fu_642_input_0_V_ce0),
    .input_0_V_q0(k_cache_upd_0_V_q0),
    .input_1_V_address0(grp_transpose_last_two_d_fu_642_input_1_V_address0),
    .input_1_V_ce0(grp_transpose_last_two_d_fu_642_input_1_V_ce0),
    .input_1_V_q0(k_cache_upd_1_V_q0),
    .input_2_V_address0(grp_transpose_last_two_d_fu_642_input_2_V_address0),
    .input_2_V_ce0(grp_transpose_last_two_d_fu_642_input_2_V_ce0),
    .input_2_V_q0(k_cache_upd_2_V_q0),
    .input_3_V_address0(grp_transpose_last_two_d_fu_642_input_3_V_address0),
    .input_3_V_ce0(grp_transpose_last_two_d_fu_642_input_3_V_ce0),
    .input_3_V_q0(k_cache_upd_3_V_q0),
    .output_0_V_address0(grp_transpose_last_two_d_fu_642_output_0_V_address0),
    .output_0_V_ce0(grp_transpose_last_two_d_fu_642_output_0_V_ce0),
    .output_0_V_we0(grp_transpose_last_two_d_fu_642_output_0_V_we0),
    .output_0_V_d0(grp_transpose_last_two_d_fu_642_output_0_V_d0),
    .output_0_V_address1(grp_transpose_last_two_d_fu_642_output_0_V_address1),
    .output_0_V_ce1(grp_transpose_last_two_d_fu_642_output_0_V_ce1),
    .output_0_V_we1(grp_transpose_last_two_d_fu_642_output_0_V_we1),
    .output_0_V_d1(grp_transpose_last_two_d_fu_642_output_0_V_d1),
    .output_1_V_address0(grp_transpose_last_two_d_fu_642_output_1_V_address0),
    .output_1_V_ce0(grp_transpose_last_two_d_fu_642_output_1_V_ce0),
    .output_1_V_we0(grp_transpose_last_two_d_fu_642_output_1_V_we0),
    .output_1_V_d0(grp_transpose_last_two_d_fu_642_output_1_V_d0),
    .output_1_V_address1(grp_transpose_last_two_d_fu_642_output_1_V_address1),
    .output_1_V_ce1(grp_transpose_last_two_d_fu_642_output_1_V_ce1),
    .output_1_V_we1(grp_transpose_last_two_d_fu_642_output_1_V_we1),
    .output_1_V_d1(grp_transpose_last_two_d_fu_642_output_1_V_d1),
    .output_2_V_address0(grp_transpose_last_two_d_fu_642_output_2_V_address0),
    .output_2_V_ce0(grp_transpose_last_two_d_fu_642_output_2_V_ce0),
    .output_2_V_we0(grp_transpose_last_two_d_fu_642_output_2_V_we0),
    .output_2_V_d0(grp_transpose_last_two_d_fu_642_output_2_V_d0),
    .output_2_V_address1(grp_transpose_last_two_d_fu_642_output_2_V_address1),
    .output_2_V_ce1(grp_transpose_last_two_d_fu_642_output_2_V_ce1),
    .output_2_V_we1(grp_transpose_last_two_d_fu_642_output_2_V_we1),
    .output_2_V_d1(grp_transpose_last_two_d_fu_642_output_2_V_d1)
);

init_2d_mem grp_init_2d_mem_fu_653(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_init_2d_mem_fu_653_ap_start),
    .ap_done(grp_init_2d_mem_fu_653_ap_done),
    .ap_idle(grp_init_2d_mem_fu_653_ap_idle),
    .ap_ready(grp_init_2d_mem_fu_653_ap_ready),
    .mem_0_V_address0(grp_init_2d_mem_fu_653_mem_0_V_address0),
    .mem_0_V_ce0(grp_init_2d_mem_fu_653_mem_0_V_ce0),
    .mem_0_V_we0(grp_init_2d_mem_fu_653_mem_0_V_we0),
    .mem_0_V_d0(grp_init_2d_mem_fu_653_mem_0_V_d0)
);

init_2d_mem grp_init_2d_mem_fu_658(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_init_2d_mem_fu_658_ap_start),
    .ap_done(grp_init_2d_mem_fu_658_ap_done),
    .ap_idle(grp_init_2d_mem_fu_658_ap_idle),
    .ap_ready(grp_init_2d_mem_fu_658_ap_ready),
    .mem_0_V_address0(grp_init_2d_mem_fu_658_mem_0_V_address0),
    .mem_0_V_ce0(grp_init_2d_mem_fu_658_mem_0_V_ce0),
    .mem_0_V_we0(grp_init_2d_mem_fu_658_mem_0_V_we0),
    .mem_0_V_d0(grp_init_2d_mem_fu_658_mem_0_V_d0)
);

init_2d_mem grp_init_2d_mem_fu_663(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_init_2d_mem_fu_663_ap_start),
    .ap_done(grp_init_2d_mem_fu_663_ap_done),
    .ap_idle(grp_init_2d_mem_fu_663_ap_idle),
    .ap_ready(grp_init_2d_mem_fu_663_ap_ready),
    .mem_0_V_address0(grp_init_2d_mem_fu_663_mem_0_V_address0),
    .mem_0_V_ce0(grp_init_2d_mem_fu_663_mem_0_V_ce0),
    .mem_0_V_we0(grp_init_2d_mem_fu_663_mem_0_V_we0),
    .mem_0_V_d0(grp_init_2d_mem_fu_663_mem_0_V_d0)
);

dut_mux_124_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
dut_mux_124_32_1_1_U186(
    .din0(attn_weights_V_0_0_0_6_fu_252),
    .din1(attn_weights_V_0_1_0_6_fu_248),
    .din2(attn_weights_V_0_2_0_6_fu_244),
    .din3(attn_weights_V_0_3_0_6_fu_240),
    .din4(attn_weights_V_1_0_0_4_fu_284),
    .din5(attn_weights_V_1_1_0_4_fu_280),
    .din6(attn_weights_V_1_2_0_4_fu_276),
    .din7(attn_weights_V_1_3_0_4_fu_272),
    .din8(attn_weights_V_2_0_0_4_fu_268),
    .din9(attn_weights_V_2_1_0_4_fu_264),
    .din10(attn_weights_V_2_2_0_4_fu_260),
    .din11(attn_weights_V_2_3_0_4_fu_256),
    .din12(tmp_2_fu_1222_p13),
    .dout(tmp_2_fu_1222_p14)
);

dut_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
dut_mux_42_32_1_1_U187(
    .din0(reg_898),
    .din1(reg_898),
    .din2(reg_898),
    .din3(select_ln1148_fu_1306_p3),
    .din4(trunc_ln1265_reg_2206),
    .dout(attn_weights_V_1_3_0_3_fu_1313_p6)
);

dut_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
dut_mux_42_32_1_1_U188(
    .din0(reg_903),
    .din1(reg_903),
    .din2(select_ln1148_fu_1306_p3),
    .din3(reg_903),
    .din4(trunc_ln1265_reg_2206),
    .dout(attn_weights_V_1_2_0_3_fu_1326_p6)
);

dut_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
dut_mux_42_32_1_1_U189(
    .din0(reg_908),
    .din1(select_ln1148_fu_1306_p3),
    .din2(reg_908),
    .din3(reg_908),
    .din4(trunc_ln1265_reg_2206),
    .dout(attn_weights_V_1_1_0_3_fu_1339_p6)
);

dut_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
dut_mux_42_32_1_1_U190(
    .din0(select_ln1148_fu_1306_p3),
    .din1(reg_913),
    .din2(reg_913),
    .din3(reg_913),
    .din4(trunc_ln1265_reg_2206),
    .dout(attn_weights_V_1_0_0_3_fu_1352_p6)
);

dut_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
dut_mux_42_32_1_1_U191(
    .din0(attn_weights_V_0_3_0_1_reg_2231),
    .din1(attn_weights_V_0_3_0_1_reg_2231),
    .din2(attn_weights_V_0_3_0_1_reg_2231),
    .din3(select_ln1148_fu_1306_p3),
    .din4(trunc_ln1265_reg_2206),
    .dout(attn_weights_V_0_3_0_5_fu_1385_p6)
);

dut_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
dut_mux_42_32_1_1_U192(
    .din0(attn_weights_V_0_2_0_1_reg_2238),
    .din1(attn_weights_V_0_2_0_1_reg_2238),
    .din2(select_ln1148_fu_1306_p3),
    .din3(attn_weights_V_0_2_0_1_reg_2238),
    .din4(trunc_ln1265_reg_2206),
    .dout(attn_weights_V_0_2_0_5_fu_1395_p6)
);

dut_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
dut_mux_42_32_1_1_U193(
    .din0(attn_weights_V_0_1_0_1_reg_2245),
    .din1(select_ln1148_fu_1306_p3),
    .din2(attn_weights_V_0_1_0_1_reg_2245),
    .din3(attn_weights_V_0_1_0_1_reg_2245),
    .din4(trunc_ln1265_reg_2206),
    .dout(attn_weights_V_0_1_0_5_fu_1405_p6)
);

dut_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
dut_mux_42_32_1_1_U194(
    .din0(select_ln1148_fu_1306_p3),
    .din1(attn_weights_V_0_0_0_1_reg_2252),
    .din2(attn_weights_V_0_0_0_1_reg_2252),
    .din3(attn_weights_V_0_0_0_1_reg_2252),
    .din4(trunc_ln1265_reg_2206),
    .dout(attn_weights_V_0_0_0_5_fu_1415_p6)
);

dut_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
dut_mux_42_32_1_1_U195(
    .din0(reg_878),
    .din1(reg_878),
    .din2(reg_878),
    .din3(select_ln1148_fu_1306_p3),
    .din4(trunc_ln1265_reg_2206),
    .dout(attn_weights_V_2_3_0_3_fu_1445_p6)
);

dut_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
dut_mux_42_32_1_1_U196(
    .din0(reg_883),
    .din1(reg_883),
    .din2(select_ln1148_fu_1306_p3),
    .din3(reg_883),
    .din4(trunc_ln1265_reg_2206),
    .dout(attn_weights_V_2_2_0_3_fu_1458_p6)
);

dut_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
dut_mux_42_32_1_1_U197(
    .din0(reg_888),
    .din1(select_ln1148_fu_1306_p3),
    .din2(reg_888),
    .din3(reg_888),
    .din4(trunc_ln1265_reg_2206),
    .dout(attn_weights_V_2_1_0_3_fu_1471_p6)
);

dut_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
dut_mux_42_32_1_1_U198(
    .din0(select_ln1148_fu_1306_p3),
    .din1(reg_893),
    .din2(reg_893),
    .din3(reg_893),
    .din4(trunc_ln1265_reg_2206),
    .dout(attn_weights_V_2_0_0_3_fu_1484_p6)
);

dut_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
dut_mux_42_32_1_1_U199(
    .din0(attn_weights_V_0_0_0_3_reg_385),
    .din1(attn_weights_V_0_1_0_3_reg_395),
    .din2(attn_weights_V_0_2_0_3_reg_405),
    .din3(attn_weights_V_0_3_0_3_reg_415),
    .din4(trunc_ln1265_1_fu_1529_p1),
    .dout(tmp_1_fu_1533_p6)
);

dut_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
dut_mux_42_32_1_1_U200(
    .din0(attn_weights_V_0_3_0_3_reg_415),
    .din1(attn_weights_V_0_3_0_3_reg_415),
    .din2(attn_weights_V_0_3_0_3_reg_415),
    .din3(tmp_1_fu_1533_p6),
    .din4(trunc_ln1265_1_fu_1529_p1),
    .dout(attn_weights_V_0_3_0_4_fu_1547_p6)
);

dut_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
dut_mux_42_32_1_1_U201(
    .din0(attn_weights_V_0_2_0_3_reg_405),
    .din1(attn_weights_V_0_2_0_3_reg_405),
    .din2(tmp_1_fu_1533_p6),
    .din3(attn_weights_V_0_2_0_3_reg_405),
    .din4(trunc_ln1265_1_fu_1529_p1),
    .dout(attn_weights_V_0_2_0_4_fu_1561_p6)
);

dut_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
dut_mux_42_32_1_1_U202(
    .din0(attn_weights_V_0_1_0_3_reg_395),
    .din1(tmp_1_fu_1533_p6),
    .din2(attn_weights_V_0_1_0_3_reg_395),
    .din3(attn_weights_V_0_1_0_3_reg_395),
    .din4(trunc_ln1265_1_fu_1529_p1),
    .dout(attn_weights_V_0_1_0_4_fu_1575_p6)
);

dut_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
dut_mux_42_32_1_1_U203(
    .din0(tmp_1_fu_1533_p6),
    .din1(attn_weights_V_0_0_0_3_reg_385),
    .din2(attn_weights_V_0_0_0_3_reg_385),
    .din3(attn_weights_V_0_0_0_3_reg_385),
    .din4(trunc_ln1265_1_fu_1529_p1),
    .dout(attn_weights_V_0_0_0_4_fu_1589_p6)
);

dut_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
dut_mux_42_32_1_1_U204(
    .din0(attn_output_0_reg_2362),
    .din1(attn_output_0_1_reg_2367),
    .din2(attn_output_0_2_reg_2372),
    .din3(attn_output_0_3_reg_2377),
    .din4(trunc_ln223_fu_1739_p1),
    .dout(tmp_3_fu_1756_p6)
);

dut_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
dut_mux_42_32_1_1_U205(
    .din0(attn_output_1_reg_2382),
    .din1(attn_output_1_1_reg_2387),
    .din2(attn_output_1_2_reg_2392),
    .din3(attn_output_1_3_reg_2397),
    .din4(trunc_ln223_fu_1739_p1),
    .dout(tmp_4_fu_1778_p6)
);

dut_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
dut_mux_42_32_1_1_U206(
    .din0(attn_output_2_reg_2402),
    .din1(attn_output_2_1_reg_2407),
    .din2(attn_output_2_2_reg_2412),
    .din3(attn_output_2_3_reg_2417),
    .din4(trunc_ln223_reg_2450),
    .dout(tmp_6_fu_1799_p6)
);

dut_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
dut_mux_42_32_1_1_U207(
    .din0(attn_output_3_reg_2422),
    .din1(attn_output_3_1_reg_2427),
    .din2(attn_output_3_2_reg_2432),
    .din3(attn_output_3_3_reg_2437),
    .din4(trunc_ln223_reg_2450),
    .dout(tmp_7_fu_1819_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_GEMM_3D_float_1_fu_590_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state22_on_subcall_done) & (1'b1 == ap_CS_fsm_state22))) begin
            grp_GEMM_3D_float_1_fu_590_ap_start_reg <= 1'b1;
        end else if ((grp_GEMM_3D_float_1_fu_590_ap_ready == 1'b1)) begin
            grp_GEMM_3D_float_1_fu_590_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_GEMM_3D_float_fu_567_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state16)) begin
            grp_GEMM_3D_float_fu_567_ap_start_reg <= 1'b1;
        end else if ((grp_GEMM_3D_float_fu_567_ap_ready == 1'b1)) begin
            grp_GEMM_3D_float_fu_567_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_apply_rotary_pos_emb_fu_511_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_apply_rotary_pos_emb_fu_511_ap_start_reg <= 1'b1;
        end else if ((grp_apply_rotary_pos_emb_fu_511_ap_ready == 1'b1)) begin
            grp_apply_rotary_pos_emb_fu_511_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_cache_update_fu_610_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_state12_on_subcall_done) & (1'b1 == ap_CS_fsm_state12)))) begin
            grp_cache_update_fu_610_ap_start_reg <= 1'b1;
        end else if ((grp_cache_update_fu_610_ap_ready == 1'b1)) begin
            grp_cache_update_fu_610_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_init_2d_mem_fu_653_ap_start_reg <= 1'b0;
    end else begin
        if ((((icmp_ln36_1_fu_1829_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28)) | ((icmp_ln36_fu_918_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln195_fu_1517_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21)))) begin
            grp_init_2d_mem_fu_653_ap_start_reg <= 1'b1;
        end else if ((grp_init_2d_mem_fu_653_ap_ready == 1'b1)) begin
            grp_init_2d_mem_fu_653_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_init_2d_mem_fu_658_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln36_fu_918_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            grp_init_2d_mem_fu_658_ap_start_reg <= 1'b1;
        end else if ((grp_init_2d_mem_fu_658_ap_ready == 1'b1)) begin
            grp_init_2d_mem_fu_658_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_init_2d_mem_fu_663_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln36_fu_918_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            grp_init_2d_mem_fu_663_ap_start_reg <= 1'b1;
        end else if ((grp_init_2d_mem_fu_663_ap_ready == 1'b1)) begin
            grp_init_2d_mem_fu_663_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_linear_forward_no_mu_fu_458_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
            grp_linear_forward_no_mu_fu_458_ap_start_reg <= 1'b1;
        end else if ((grp_linear_forward_no_mu_fu_458_ap_ready == 1'b1)) begin
            grp_linear_forward_no_mu_fu_458_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_quantize_activation_fu_560_ap_start_reg <= 1'b0;
    end else begin
        if ((((icmp_ln36_1_fu_1829_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28)) | ((icmp_ln36_fu_918_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
            grp_quantize_activation_fu_560_ap_start_reg <= 1'b1;
        end else if ((grp_quantize_activation_fu_560_ap_ready == 1'b1)) begin
            grp_quantize_activation_fu_560_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_reshape_2D_to_3D_fu_637_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7))) begin
            grp_reshape_2D_to_3D_fu_637_ap_start_reg <= 1'b1;
        end else if ((grp_reshape_2D_to_3D_fu_637_ap_ready == 1'b1)) begin
            grp_reshape_2D_to_3D_fu_637_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_rms_norm_16_s_fu_551_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state26) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
            grp_rms_norm_16_s_fu_551_ap_start_reg <= 1'b1;
        end else if ((grp_rms_norm_16_s_fu_551_ap_ready == 1'b1)) begin
            grp_rms_norm_16_s_fu_551_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_softmax_1_4_3_s_fu_491_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln195_fu_1517_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
            grp_softmax_1_4_3_s_fu_491_ap_start_reg <= 1'b1;
        end else if ((grp_softmax_1_4_3_s_fu_491_ap_ready == 1'b1)) begin
            grp_softmax_1_4_3_s_fu_491_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_transpose_last_two_d_fu_642_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state14)) begin
            grp_transpose_last_two_d_fu_642_ap_start_reg <= 1'b1;
        end else if ((grp_transpose_last_two_d_fu_642_ap_ready == 1'b1)) begin
            grp_transpose_last_two_d_fu_642_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln188_fu_1187_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        attn_weights_V_0_0_0_3_reg_385 <= attn_weights_V_0_0_0_6_fu_252;
    end else if (((icmp_ln195_fu_1517_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        attn_weights_V_0_0_0_3_reg_385 <= attn_weights_V_0_0_0_4_fu_1589_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (d_0_0_reg_373 == 2'd0))) begin
        attn_weights_V_0_0_0_6_fu_252 <= attn_weights_V_0_0_0_5_fu_1415_p6;
    end else if (((grp_GEMM_3D_float_fu_567_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        attn_weights_V_0_0_0_6_fu_252 <= grp_GEMM_3D_float_fu_567_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln188_fu_1187_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        attn_weights_V_0_1_0_3_reg_395 <= attn_weights_V_0_1_0_6_fu_248;
    end else if (((icmp_ln195_fu_1517_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        attn_weights_V_0_1_0_3_reg_395 <= attn_weights_V_0_1_0_4_fu_1575_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (d_0_0_reg_373 == 2'd0))) begin
        attn_weights_V_0_1_0_6_fu_248 <= attn_weights_V_0_1_0_5_fu_1405_p6;
    end else if (((grp_GEMM_3D_float_fu_567_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        attn_weights_V_0_1_0_6_fu_248 <= grp_GEMM_3D_float_fu_567_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln188_fu_1187_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        attn_weights_V_0_2_0_3_reg_405 <= attn_weights_V_0_2_0_6_fu_244;
    end else if (((icmp_ln195_fu_1517_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        attn_weights_V_0_2_0_3_reg_405 <= attn_weights_V_0_2_0_4_fu_1561_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (d_0_0_reg_373 == 2'd0))) begin
        attn_weights_V_0_2_0_6_fu_244 <= attn_weights_V_0_2_0_5_fu_1395_p6;
    end else if (((grp_GEMM_3D_float_fu_567_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        attn_weights_V_0_2_0_6_fu_244 <= grp_GEMM_3D_float_fu_567_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln188_fu_1187_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        attn_weights_V_0_3_0_3_reg_415 <= attn_weights_V_0_3_0_6_fu_240;
    end else if (((icmp_ln195_fu_1517_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        attn_weights_V_0_3_0_3_reg_415 <= attn_weights_V_0_3_0_4_fu_1547_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (d_0_0_reg_373 == 2'd0))) begin
        attn_weights_V_0_3_0_6_fu_240 <= attn_weights_V_0_3_0_5_fu_1385_p6;
    end else if (((grp_GEMM_3D_float_fu_567_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        attn_weights_V_0_3_0_6_fu_240 <= grp_GEMM_3D_float_fu_567_ap_return_3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (d_0_0_reg_373 == 2'd1))) begin
        attn_weights_V_1_0_0_4_fu_284 <= attn_weights_V_1_0_0_3_fu_1352_p6;
    end else if (((grp_GEMM_3D_float_fu_567_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        attn_weights_V_1_0_0_4_fu_284 <= grp_GEMM_3D_float_fu_567_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (d_0_0_reg_373 == 2'd1))) begin
        attn_weights_V_1_1_0_4_fu_280 <= attn_weights_V_1_1_0_3_fu_1339_p6;
    end else if (((grp_GEMM_3D_float_fu_567_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        attn_weights_V_1_1_0_4_fu_280 <= grp_GEMM_3D_float_fu_567_ap_return_5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (d_0_0_reg_373 == 2'd1))) begin
        attn_weights_V_1_2_0_4_fu_276 <= attn_weights_V_1_2_0_3_fu_1326_p6;
    end else if (((grp_GEMM_3D_float_fu_567_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        attn_weights_V_1_2_0_4_fu_276 <= grp_GEMM_3D_float_fu_567_ap_return_6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (d_0_0_reg_373 == 2'd1))) begin
        attn_weights_V_1_3_0_4_fu_272 <= attn_weights_V_1_3_0_3_fu_1313_p6;
    end else if (((grp_GEMM_3D_float_fu_567_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        attn_weights_V_1_3_0_4_fu_272 <= grp_GEMM_3D_float_fu_567_ap_return_7;
    end
end

always @ (posedge ap_clk) begin
    if ((~(d_0_0_reg_373 == 2'd1) & ~(d_0_0_reg_373 == 2'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        attn_weights_V_2_0_0_4_fu_268 <= attn_weights_V_2_0_0_3_fu_1484_p6;
    end else if (((grp_GEMM_3D_float_fu_567_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        attn_weights_V_2_0_0_4_fu_268 <= grp_GEMM_3D_float_fu_567_ap_return_8;
    end
end

always @ (posedge ap_clk) begin
    if ((~(d_0_0_reg_373 == 2'd1) & ~(d_0_0_reg_373 == 2'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        attn_weights_V_2_1_0_4_fu_264 <= attn_weights_V_2_1_0_3_fu_1471_p6;
    end else if (((grp_GEMM_3D_float_fu_567_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        attn_weights_V_2_1_0_4_fu_264 <= grp_GEMM_3D_float_fu_567_ap_return_9;
    end
end

always @ (posedge ap_clk) begin
    if ((~(d_0_0_reg_373 == 2'd1) & ~(d_0_0_reg_373 == 2'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        attn_weights_V_2_2_0_4_fu_260 <= attn_weights_V_2_2_0_3_fu_1458_p6;
    end else if (((grp_GEMM_3D_float_fu_567_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        attn_weights_V_2_2_0_4_fu_260 <= grp_GEMM_3D_float_fu_567_ap_return_10;
    end
end

always @ (posedge ap_clk) begin
    if ((~(d_0_0_reg_373 == 2'd1) & ~(d_0_0_reg_373 == 2'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        attn_weights_V_2_3_0_4_fu_256 <= attn_weights_V_2_3_0_3_fu_1445_p6;
    end else if (((grp_GEMM_3D_float_fu_567_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        attn_weights_V_2_3_0_4_fu_256 <= grp_GEMM_3D_float_fu_567_ap_return_11;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        d_0_0_reg_373 <= add_ln190_reg_2226;
    end else if (((icmp_ln188_fu_1187_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        d_0_0_reg_373 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        h100_0_0_reg_436 <= add_ln221_reg_2445;
    end else if (((grp_GEMM_3D_float_1_fu_590_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
        h100_0_0_reg_436 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln188_fu_1187_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        h85_0_reg_425 <= 3'd0;
    end else if (((icmp_ln195_fu_1517_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        h85_0_reg_425 <= h_fu_1523_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln190_fu_1203_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
        h_0_reg_362 <= h_1_reg_2201;
    end else if (((grp_GEMM_3D_float_fu_567_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        h_0_reg_362 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln36_1_fu_1829_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        j_0_0_i2_reg_447 <= add_ln36_1_fu_1835_p2;
    end else if (((grp_rms_norm_16_s_fu_551_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        j_0_0_i2_reg_447 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln36_fu_918_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        j_0_0_i_reg_351 <= add_ln36_fu_924_p2;
    end else if (((grp_rms_norm_16_s_fu_551_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        j_0_0_i_reg_351 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        add_ln190_reg_2226 <= add_ln190_fu_1209_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        add_ln221_reg_2445 <= add_ln221_fu_1733_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_GEMM_3D_float_1_fu_590_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
        attn_output_0_1_reg_2367 <= grp_GEMM_3D_float_1_fu_590_ap_return_1;
        attn_output_0_2_reg_2372 <= grp_GEMM_3D_float_1_fu_590_ap_return_2;
        attn_output_0_3_reg_2377 <= grp_GEMM_3D_float_1_fu_590_ap_return_3;
        attn_output_0_reg_2362 <= grp_GEMM_3D_float_1_fu_590_ap_return_0;
        attn_output_1_1_reg_2387 <= grp_GEMM_3D_float_1_fu_590_ap_return_5;
        attn_output_1_2_reg_2392 <= grp_GEMM_3D_float_1_fu_590_ap_return_6;
        attn_output_1_3_reg_2397 <= grp_GEMM_3D_float_1_fu_590_ap_return_7;
        attn_output_1_reg_2382 <= grp_GEMM_3D_float_1_fu_590_ap_return_4;
        attn_output_2_1_reg_2407 <= grp_GEMM_3D_float_1_fu_590_ap_return_9;
        attn_output_2_2_reg_2412 <= grp_GEMM_3D_float_1_fu_590_ap_return_10;
        attn_output_2_3_reg_2417 <= grp_GEMM_3D_float_1_fu_590_ap_return_11;
        attn_output_2_reg_2402 <= grp_GEMM_3D_float_1_fu_590_ap_return_8;
        attn_output_3_1_reg_2427 <= grp_GEMM_3D_float_1_fu_590_ap_return_13;
        attn_output_3_2_reg_2432 <= grp_GEMM_3D_float_1_fu_590_ap_return_14;
        attn_output_3_3_reg_2437 <= grp_GEMM_3D_float_1_fu_590_ap_return_15;
        attn_output_3_reg_2422 <= grp_GEMM_3D_float_1_fu_590_ap_return_12;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln190_fu_1203_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        attn_weights_V_0_0_0_1_reg_2252 <= attn_weights_V_0_0_0_6_fu_252;
        attn_weights_V_0_1_0_1_reg_2245 <= attn_weights_V_0_1_0_6_fu_248;
        attn_weights_V_0_2_0_1_reg_2238 <= attn_weights_V_0_2_0_6_fu_244;
        attn_weights_V_0_3_0_1_reg_2231 <= attn_weights_V_0_3_0_6_fu_240;
        lshr_ln1148_s_reg_2269 <= {{tmp_2_fu_1222_p14[31:1]}};
        tmp_47_reg_2259 <= tmp_2_fu_1222_p14[32'd31];
        tmp_8_reg_2264 <= {{sub_ln1148_fu_1268_p2[53:23]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state22_on_subcall_done) & (1'b1 == ap_CS_fsm_state22))) begin
        attn_weights_V_0_0_0_7_reg_2302 <= grp_softmax_1_4_3_s_fu_491_ap_return_0;
        attn_weights_V_0_1_0_7_reg_2307 <= grp_softmax_1_4_3_s_fu_491_ap_return_1;
        attn_weights_V_0_2_0_7_reg_2312 <= grp_softmax_1_4_3_s_fu_491_ap_return_2;
        attn_weights_V_0_3_0_7_reg_2317 <= grp_softmax_1_4_3_s_fu_491_ap_return_3;
        attn_weights_V_1_0_0_5_reg_2322 <= grp_softmax_1_4_3_s_fu_491_ap_return_4;
        attn_weights_V_1_1_0_5_reg_2327 <= grp_softmax_1_4_3_s_fu_491_ap_return_5;
        attn_weights_V_1_2_0_5_reg_2332 <= grp_softmax_1_4_3_s_fu_491_ap_return_6;
        attn_weights_V_1_3_0_5_reg_2337 <= grp_softmax_1_4_3_s_fu_491_ap_return_7;
        attn_weights_V_2_0_0_5_reg_2342 <= grp_softmax_1_4_3_s_fu_491_ap_return_8;
        attn_weights_V_2_1_0_5_reg_2347 <= grp_softmax_1_4_3_s_fu_491_ap_return_9;
        attn_weights_V_2_2_0_5_reg_2352 <= grp_softmax_1_4_3_s_fu_491_ap_return_10;
        attn_weights_V_2_3_0_5_reg_2357 <= grp_softmax_1_4_3_s_fu_491_ap_return_11;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        h_1_reg_2201 <= h_1_fu_1193_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state12_on_subcall_done) & (1'b1 == ap_CS_fsm_state12))) begin
        k_embed_V_0_1_reg_2103 <= grp_apply_rotary_pos_emb_fu_511_ap_return_17;
        k_embed_V_0_2_reg_2108 <= grp_apply_rotary_pos_emb_fu_511_ap_return_18;
        k_embed_V_0_3_reg_2113 <= grp_apply_rotary_pos_emb_fu_511_ap_return_19;
        k_embed_V_0_reg_2098 <= grp_apply_rotary_pos_emb_fu_511_ap_return_16;
        k_embed_V_1_1_reg_2123 <= grp_apply_rotary_pos_emb_fu_511_ap_return_21;
        k_embed_V_1_2_reg_2128 <= grp_apply_rotary_pos_emb_fu_511_ap_return_22;
        k_embed_V_1_3_reg_2133 <= grp_apply_rotary_pos_emb_fu_511_ap_return_23;
        k_embed_V_1_reg_2118 <= grp_apply_rotary_pos_emb_fu_511_ap_return_20;
        k_embed_V_2_1_reg_2143 <= grp_apply_rotary_pos_emb_fu_511_ap_return_25;
        k_embed_V_2_2_reg_2148 <= grp_apply_rotary_pos_emb_fu_511_ap_return_26;
        k_embed_V_2_3_reg_2153 <= grp_apply_rotary_pos_emb_fu_511_ap_return_27;
        k_embed_V_2_reg_2138 <= grp_apply_rotary_pos_emb_fu_511_ap_return_24;
        k_embed_V_3_1_reg_2163 <= grp_apply_rotary_pos_emb_fu_511_ap_return_29;
        k_embed_V_3_2_reg_2168 <= grp_apply_rotary_pos_emb_fu_511_ap_return_30;
        k_embed_V_3_3_reg_2173 <= grp_apply_rotary_pos_emb_fu_511_ap_return_31;
        k_embed_V_3_reg_2158 <= grp_apply_rotary_pos_emb_fu_511_ap_return_28;
        q_embed_V_0_1_reg_2023 <= grp_apply_rotary_pos_emb_fu_511_ap_return_1;
        q_embed_V_0_2_reg_2028 <= grp_apply_rotary_pos_emb_fu_511_ap_return_2;
        q_embed_V_0_3_reg_2033 <= grp_apply_rotary_pos_emb_fu_511_ap_return_3;
        q_embed_V_0_reg_2018 <= grp_apply_rotary_pos_emb_fu_511_ap_return_0;
        q_embed_V_1_1_reg_2043 <= grp_apply_rotary_pos_emb_fu_511_ap_return_5;
        q_embed_V_1_2_reg_2048 <= grp_apply_rotary_pos_emb_fu_511_ap_return_6;
        q_embed_V_1_3_reg_2053 <= grp_apply_rotary_pos_emb_fu_511_ap_return_7;
        q_embed_V_1_reg_2038 <= grp_apply_rotary_pos_emb_fu_511_ap_return_4;
        q_embed_V_2_1_reg_2063 <= grp_apply_rotary_pos_emb_fu_511_ap_return_9;
        q_embed_V_2_2_reg_2068 <= grp_apply_rotary_pos_emb_fu_511_ap_return_10;
        q_embed_V_2_3_reg_2073 <= grp_apply_rotary_pos_emb_fu_511_ap_return_11;
        q_embed_V_2_reg_2058 <= grp_apply_rotary_pos_emb_fu_511_ap_return_8;
        q_embed_V_3_1_reg_2083 <= grp_apply_rotary_pos_emb_fu_511_ap_return_13;
        q_embed_V_3_2_reg_2088 <= grp_apply_rotary_pos_emb_fu_511_ap_return_14;
        q_embed_V_3_3_reg_2093 <= grp_apply_rotary_pos_emb_fu_511_ap_return_15;
        q_embed_V_3_reg_2078 <= grp_apply_rotary_pos_emb_fu_511_ap_return_12;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state10_on_subcall_done) & (1'b1 == ap_CS_fsm_state10))) begin
        k_proj_V_0_1_reg_1943 <= grp_reshape_2D_to_3D_fu_637_ap_return_1;
        k_proj_V_0_2_reg_1948 <= grp_reshape_2D_to_3D_fu_637_ap_return_2;
        k_proj_V_0_3_reg_1953 <= grp_reshape_2D_to_3D_fu_637_ap_return_3;
        k_proj_V_0_reg_1938 <= grp_reshape_2D_to_3D_fu_637_ap_return_0;
        k_proj_V_1_1_reg_1963 <= grp_reshape_2D_to_3D_fu_637_ap_return_5;
        k_proj_V_1_2_reg_1968 <= grp_reshape_2D_to_3D_fu_637_ap_return_6;
        k_proj_V_1_3_reg_1973 <= grp_reshape_2D_to_3D_fu_637_ap_return_7;
        k_proj_V_1_reg_1958 <= grp_reshape_2D_to_3D_fu_637_ap_return_4;
        k_proj_V_2_1_reg_1983 <= grp_reshape_2D_to_3D_fu_637_ap_return_9;
        k_proj_V_2_2_reg_1988 <= grp_reshape_2D_to_3D_fu_637_ap_return_10;
        k_proj_V_2_3_reg_1993 <= grp_reshape_2D_to_3D_fu_637_ap_return_11;
        k_proj_V_2_reg_1978 <= grp_reshape_2D_to_3D_fu_637_ap_return_8;
        k_proj_V_3_1_reg_2003 <= grp_reshape_2D_to_3D_fu_637_ap_return_13;
        k_proj_V_3_2_reg_2008 <= grp_reshape_2D_to_3D_fu_637_ap_return_14;
        k_proj_V_3_3_reg_2013 <= grp_reshape_2D_to_3D_fu_637_ap_return_15;
        k_proj_V_3_reg_1998 <= grp_reshape_2D_to_3D_fu_637_ap_return_12;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_state29_on_subcall_done) & (1'b1 == ap_CS_fsm_state29)) | ((1'b0 == ap_block_state4_on_subcall_done) & (1'b1 == ap_CS_fsm_state4)))) begin
        reg_777 <= grp_quantize_activation_fu_560_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_state12_on_subcall_done) & (1'b1 == ap_CS_fsm_state12)) | ((1'b0 == ap_block_state8_on_subcall_done) & (1'b1 == ap_CS_fsm_state8)))) begin
        reg_782 <= grp_reshape_2D_to_3D_fu_637_ap_return_0;
        reg_788 <= grp_reshape_2D_to_3D_fu_637_ap_return_1;
        reg_794 <= grp_reshape_2D_to_3D_fu_637_ap_return_2;
        reg_800 <= grp_reshape_2D_to_3D_fu_637_ap_return_3;
        reg_806 <= grp_reshape_2D_to_3D_fu_637_ap_return_4;
        reg_812 <= grp_reshape_2D_to_3D_fu_637_ap_return_5;
        reg_818 <= grp_reshape_2D_to_3D_fu_637_ap_return_6;
        reg_824 <= grp_reshape_2D_to_3D_fu_637_ap_return_7;
        reg_830 <= grp_reshape_2D_to_3D_fu_637_ap_return_8;
        reg_836 <= grp_reshape_2D_to_3D_fu_637_ap_return_9;
        reg_842 <= grp_reshape_2D_to_3D_fu_637_ap_return_10;
        reg_848 <= grp_reshape_2D_to_3D_fu_637_ap_return_11;
        reg_854 <= grp_reshape_2D_to_3D_fu_637_ap_return_12;
        reg_860 <= grp_reshape_2D_to_3D_fu_637_ap_return_13;
        reg_866 <= grp_reshape_2D_to_3D_fu_637_ap_return_14;
        reg_872 <= grp_reshape_2D_to_3D_fu_637_ap_return_15;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln195_fu_1517_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21)) | ((icmp_ln190_fu_1203_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19)))) begin
        reg_878 <= attn_weights_V_2_3_0_4_fu_256;
        reg_883 <= attn_weights_V_2_2_0_4_fu_260;
        reg_888 <= attn_weights_V_2_1_0_4_fu_264;
        reg_893 <= attn_weights_V_2_0_0_4_fu_268;
        reg_898 <= attn_weights_V_1_3_0_4_fu_272;
        reg_903 <= attn_weights_V_1_2_0_4_fu_276;
        reg_908 <= attn_weights_V_1_1_0_4_fu_280;
        reg_913 <= attn_weights_V_1_0_0_4_fu_284;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln221_fu_1727_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        shl_ln3_reg_2456[3 : 2] <= shl_ln3_fu_1743_p3[3 : 2];
        trunc_ln223_reg_2450 <= trunc_ln223_fu_1739_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln188_fu_1187_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        trunc_ln1265_reg_2206 <= trunc_ln1265_fu_1199_p1;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((grp_linear_forward_no_mu_fu_458_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state31)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_linear_forward_no_mu_fu_458_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state31))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        attn_output_2D_0_V_address0 = zext_ln223_2_fu_1794_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        attn_output_2D_0_V_address0 = zext_ln223_fu_1751_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        attn_output_2D_0_V_address0 = grp_init_2d_mem_fu_653_mem_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        attn_output_2D_0_V_address0 = grp_quantize_activation_fu_560_input_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        attn_output_2D_0_V_address0 = grp_rms_norm_16_s_fu_551_input_0_V_address0;
    end else begin
        attn_output_2D_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        attn_output_2D_0_V_address1 = zext_ln223_3_fu_1814_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        attn_output_2D_0_V_address1 = zext_ln223_1_fu_1773_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        attn_output_2D_0_V_address1 = grp_quantize_activation_fu_560_input_0_V_address1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        attn_output_2D_0_V_address1 = grp_rms_norm_16_s_fu_551_input_0_V_address1;
    end else begin
        attn_output_2D_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state25))) begin
        attn_output_2D_0_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        attn_output_2D_0_V_ce0 = grp_init_2d_mem_fu_653_mem_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        attn_output_2D_0_V_ce0 = grp_quantize_activation_fu_560_input_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        attn_output_2D_0_V_ce0 = grp_rms_norm_16_s_fu_551_input_0_V_ce0;
    end else begin
        attn_output_2D_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state25))) begin
        attn_output_2D_0_V_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        attn_output_2D_0_V_ce1 = grp_quantize_activation_fu_560_input_0_V_ce1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        attn_output_2D_0_V_ce1 = grp_rms_norm_16_s_fu_551_input_0_V_ce1;
    end else begin
        attn_output_2D_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        attn_output_2D_0_V_d0 = tmp_6_fu_1799_p6;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        attn_output_2D_0_V_d0 = tmp_3_fu_1756_p6;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        attn_output_2D_0_V_d0 = grp_init_2d_mem_fu_653_mem_0_V_d0;
    end else begin
        attn_output_2D_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        attn_output_2D_0_V_d1 = tmp_7_fu_1819_p6;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        attn_output_2D_0_V_d1 = tmp_4_fu_1778_p6;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        attn_output_2D_0_V_d1 = grp_rms_norm_16_s_fu_551_input_0_V_d1;
    end else begin
        attn_output_2D_0_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | ((icmp_ln221_fu_1727_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24)))) begin
        attn_output_2D_0_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        attn_output_2D_0_V_we0 = grp_init_2d_mem_fu_653_mem_0_V_we0;
    end else begin
        attn_output_2D_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | ((icmp_ln221_fu_1727_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24)))) begin
        attn_output_2D_0_V_we1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        attn_output_2D_0_V_we1 = grp_rms_norm_16_s_fu_551_input_0_V_we1;
    end else begin
        attn_output_2D_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        final_output_0_V_address0 = grp_init_2d_mem_fu_653_mem_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        final_output_0_V_address0 = grp_linear_forward_no_mu_fu_458_output_0_V_address0;
    end else begin
        final_output_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        final_output_0_V_ce0 = grp_init_2d_mem_fu_653_mem_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        final_output_0_V_ce0 = grp_linear_forward_no_mu_fu_458_output_0_V_ce0;
    end else begin
        final_output_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        final_output_0_V_ce1 = grp_linear_forward_no_mu_fu_458_output_0_V_ce1;
    end else begin
        final_output_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        final_output_0_V_d0 = grp_init_2d_mem_fu_653_mem_0_V_d0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        final_output_0_V_d0 = grp_linear_forward_no_mu_fu_458_output_0_V_d0;
    end else begin
        final_output_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        final_output_0_V_we0 = grp_init_2d_mem_fu_653_mem_0_V_we0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        final_output_0_V_we0 = grp_linear_forward_no_mu_fu_458_output_0_V_we0;
    end else begin
        final_output_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        final_output_0_V_we1 = grp_linear_forward_no_mu_fu_458_output_0_V_we1;
    end else begin
        final_output_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_cache_update_fu_610_cache_in_V_q0 = v_cache_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_cache_update_fu_610_cache_in_V_q0 = k_cache_V_q0;
    end else begin
        grp_cache_update_fu_610_cache_in_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_cache_update_fu_610_p_read = reg_782;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_cache_update_fu_610_p_read = k_embed_V_0_reg_2098;
    end else begin
        grp_cache_update_fu_610_p_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_cache_update_fu_610_p_read1 = reg_788;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_cache_update_fu_610_p_read1 = k_embed_V_0_1_reg_2103;
    end else begin
        grp_cache_update_fu_610_p_read1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_cache_update_fu_610_p_read10 = reg_842;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_cache_update_fu_610_p_read10 = k_embed_V_2_2_reg_2148;
    end else begin
        grp_cache_update_fu_610_p_read10 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_cache_update_fu_610_p_read11 = reg_848;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_cache_update_fu_610_p_read11 = k_embed_V_2_3_reg_2153;
    end else begin
        grp_cache_update_fu_610_p_read11 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_cache_update_fu_610_p_read12 = reg_854;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_cache_update_fu_610_p_read12 = k_embed_V_3_reg_2158;
    end else begin
        grp_cache_update_fu_610_p_read12 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_cache_update_fu_610_p_read13 = reg_860;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_cache_update_fu_610_p_read13 = k_embed_V_3_1_reg_2163;
    end else begin
        grp_cache_update_fu_610_p_read13 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_cache_update_fu_610_p_read14 = reg_866;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_cache_update_fu_610_p_read14 = k_embed_V_3_2_reg_2168;
    end else begin
        grp_cache_update_fu_610_p_read14 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_cache_update_fu_610_p_read15 = reg_872;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_cache_update_fu_610_p_read15 = k_embed_V_3_3_reg_2173;
    end else begin
        grp_cache_update_fu_610_p_read15 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_cache_update_fu_610_p_read2 = reg_794;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_cache_update_fu_610_p_read2 = k_embed_V_0_2_reg_2108;
    end else begin
        grp_cache_update_fu_610_p_read2 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_cache_update_fu_610_p_read3 = reg_800;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_cache_update_fu_610_p_read3 = k_embed_V_0_3_reg_2113;
    end else begin
        grp_cache_update_fu_610_p_read3 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_cache_update_fu_610_p_read4 = reg_806;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_cache_update_fu_610_p_read4 = k_embed_V_1_reg_2118;
    end else begin
        grp_cache_update_fu_610_p_read4 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_cache_update_fu_610_p_read5 = reg_812;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_cache_update_fu_610_p_read5 = k_embed_V_1_1_reg_2123;
    end else begin
        grp_cache_update_fu_610_p_read5 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_cache_update_fu_610_p_read6 = reg_818;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_cache_update_fu_610_p_read6 = k_embed_V_1_2_reg_2128;
    end else begin
        grp_cache_update_fu_610_p_read6 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_cache_update_fu_610_p_read7 = reg_824;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_cache_update_fu_610_p_read7 = k_embed_V_1_3_reg_2133;
    end else begin
        grp_cache_update_fu_610_p_read7 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_cache_update_fu_610_p_read8 = reg_830;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_cache_update_fu_610_p_read8 = k_embed_V_2_reg_2138;
    end else begin
        grp_cache_update_fu_610_p_read8 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_cache_update_fu_610_p_read9 = reg_836;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_cache_update_fu_610_p_read9 = k_embed_V_2_1_reg_2143;
    end else begin
        grp_cache_update_fu_610_p_read9 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_linear_forward_no_mu_fu_458_input_0_V_q0 = quantized_final_outp_q0;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6))) begin
        grp_linear_forward_no_mu_fu_458_input_0_V_q0 = quantized_hidden_sta_q0;
    end else begin
        grp_linear_forward_no_mu_fu_458_input_0_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_linear_forward_no_mu_fu_458_input_0_V_q1 = quantized_final_outp_q1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6))) begin
        grp_linear_forward_no_mu_fu_458_input_0_V_q1 = quantized_hidden_sta_q1;
    end else begin
        grp_linear_forward_no_mu_fu_458_input_0_V_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_linear_forward_no_mu_fu_458_output_0_V_q0 = final_output_0_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_linear_forward_no_mu_fu_458_output_0_V_q0 = v_proj_re_0_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_linear_forward_no_mu_fu_458_output_0_V_q0 = k_proj_re_0_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_linear_forward_no_mu_fu_458_output_0_V_q0 = q_proj_re_0_V_q0;
    end else begin
        grp_linear_forward_no_mu_fu_458_output_0_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_linear_forward_no_mu_fu_458_output_0_V_q1 = final_output_0_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_linear_forward_no_mu_fu_458_output_0_V_q1 = v_proj_re_0_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_linear_forward_no_mu_fu_458_output_0_V_q1 = k_proj_re_0_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_linear_forward_no_mu_fu_458_output_0_V_q1 = q_proj_re_0_V_q1;
    end else begin
        grp_linear_forward_no_mu_fu_458_output_0_V_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_linear_forward_no_mu_fu_458_packed_weights_0_V_q0 = o_weights_V_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_linear_forward_no_mu_fu_458_packed_weights_0_V_q0 = v_weights_V_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_linear_forward_no_mu_fu_458_packed_weights_0_V_q0 = k_weights_V_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_linear_forward_no_mu_fu_458_packed_weights_0_V_q0 = q_weights_V_0_q0;
    end else begin
        grp_linear_forward_no_mu_fu_458_packed_weights_0_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_linear_forward_no_mu_fu_458_packed_weights_1_V_q0 = o_weights_V_1_q0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_linear_forward_no_mu_fu_458_packed_weights_1_V_q0 = v_weights_V_1_q0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_linear_forward_no_mu_fu_458_packed_weights_1_V_q0 = k_weights_V_1_q0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_linear_forward_no_mu_fu_458_packed_weights_1_V_q0 = q_weights_V_1_q0;
    end else begin
        grp_linear_forward_no_mu_fu_458_packed_weights_1_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_linear_forward_no_mu_fu_458_packed_weights_2_V_q0 = o_weights_V_2_q0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_linear_forward_no_mu_fu_458_packed_weights_2_V_q0 = v_weights_V_2_q0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_linear_forward_no_mu_fu_458_packed_weights_2_V_q0 = k_weights_V_2_q0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_linear_forward_no_mu_fu_458_packed_weights_2_V_q0 = q_weights_V_2_q0;
    end else begin
        grp_linear_forward_no_mu_fu_458_packed_weights_2_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_linear_forward_no_mu_fu_458_packed_weights_3_V_q0 = o_weights_V_3_q0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_linear_forward_no_mu_fu_458_packed_weights_3_V_q0 = v_weights_V_3_q0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_linear_forward_no_mu_fu_458_packed_weights_3_V_q0 = k_weights_V_3_q0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_linear_forward_no_mu_fu_458_packed_weights_3_V_q0 = q_weights_V_3_q0;
    end else begin
        grp_linear_forward_no_mu_fu_458_packed_weights_3_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_linear_forward_no_mu_fu_458_w_scale_V = 28'd46600656;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_linear_forward_no_mu_fu_458_w_scale_V = 28'd45827904;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_linear_forward_no_mu_fu_458_w_scale_V = 28'd78996735;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_linear_forward_no_mu_fu_458_w_scale_V = 28'd80394400;
    end else begin
        grp_linear_forward_no_mu_fu_458_w_scale_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_quantize_activation_fu_560_input_0_V_q0 = attn_output_2D_0_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_quantize_activation_fu_560_input_0_V_q0 = hidden_states_0_V_q0;
    end else begin
        grp_quantize_activation_fu_560_input_0_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_quantize_activation_fu_560_input_0_V_q1 = attn_output_2D_0_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_quantize_activation_fu_560_input_0_V_q1 = hidden_states_0_V_q1;
    end else begin
        grp_quantize_activation_fu_560_input_0_V_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_reshape_2D_to_3D_fu_637_input_0_V_q0 = v_proj_re_0_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_reshape_2D_to_3D_fu_637_input_0_V_q0 = k_proj_re_0_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_reshape_2D_to_3D_fu_637_input_0_V_q0 = q_proj_re_0_V_q0;
    end else begin
        grp_reshape_2D_to_3D_fu_637_input_0_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_rms_norm_16_s_fu_551_input_0_V_q0 = attn_output_2D_0_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_rms_norm_16_s_fu_551_input_0_V_q0 = hidden_states_0_V_q0;
    end else begin
        grp_rms_norm_16_s_fu_551_input_0_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_rms_norm_16_s_fu_551_weight_V_q0 = ln_weight_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_rms_norm_16_s_fu_551_weight_V_q0 = ln_weight_in_V_q0;
    end else begin
        grp_rms_norm_16_s_fu_551_weight_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        hidden_states_0_V_address0 = grp_quantize_activation_fu_560_input_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        hidden_states_0_V_address0 = grp_rms_norm_16_s_fu_551_input_0_V_address0;
    end else begin
        hidden_states_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        hidden_states_0_V_address1 = grp_quantize_activation_fu_560_input_0_V_address1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        hidden_states_0_V_address1 = grp_rms_norm_16_s_fu_551_input_0_V_address1;
    end else begin
        hidden_states_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        hidden_states_0_V_ce0 = grp_quantize_activation_fu_560_input_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        hidden_states_0_V_ce0 = grp_rms_norm_16_s_fu_551_input_0_V_ce0;
    end else begin
        hidden_states_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        hidden_states_0_V_ce1 = grp_quantize_activation_fu_560_input_0_V_ce1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        hidden_states_0_V_ce1 = grp_rms_norm_16_s_fu_551_input_0_V_ce1;
    end else begin
        hidden_states_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        hidden_states_0_V_we1 = grp_rms_norm_16_s_fu_551_input_0_V_we1;
    end else begin
        hidden_states_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        k_cache_V_ce0 = grp_cache_update_fu_610_cache_in_V_ce0;
    end else begin
        k_cache_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        k_cache_upd_0_V_address0 = grp_transpose_last_two_d_fu_642_input_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        k_cache_upd_0_V_address0 = grp_cache_update_fu_610_cache_out_0_V_address0;
    end else begin
        k_cache_upd_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        k_cache_upd_0_V_ce0 = grp_transpose_last_two_d_fu_642_input_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        k_cache_upd_0_V_ce0 = grp_cache_update_fu_610_cache_out_0_V_ce0;
    end else begin
        k_cache_upd_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        k_cache_upd_0_V_we0 = grp_cache_update_fu_610_cache_out_0_V_we0;
    end else begin
        k_cache_upd_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        k_cache_upd_1_V_address0 = grp_transpose_last_two_d_fu_642_input_1_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        k_cache_upd_1_V_address0 = grp_cache_update_fu_610_cache_out_1_V_address0;
    end else begin
        k_cache_upd_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        k_cache_upd_1_V_ce0 = grp_transpose_last_two_d_fu_642_input_1_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        k_cache_upd_1_V_ce0 = grp_cache_update_fu_610_cache_out_1_V_ce0;
    end else begin
        k_cache_upd_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        k_cache_upd_1_V_we0 = grp_cache_update_fu_610_cache_out_1_V_we0;
    end else begin
        k_cache_upd_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        k_cache_upd_2_V_address0 = grp_transpose_last_two_d_fu_642_input_2_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        k_cache_upd_2_V_address0 = grp_cache_update_fu_610_cache_out_2_V_address0;
    end else begin
        k_cache_upd_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        k_cache_upd_2_V_ce0 = grp_transpose_last_two_d_fu_642_input_2_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        k_cache_upd_2_V_ce0 = grp_cache_update_fu_610_cache_out_2_V_ce0;
    end else begin
        k_cache_upd_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        k_cache_upd_2_V_we0 = grp_cache_update_fu_610_cache_out_2_V_we0;
    end else begin
        k_cache_upd_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        k_cache_upd_3_V_address0 = grp_transpose_last_two_d_fu_642_input_3_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        k_cache_upd_3_V_address0 = grp_cache_update_fu_610_cache_out_3_V_address0;
    end else begin
        k_cache_upd_3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        k_cache_upd_3_V_ce0 = grp_transpose_last_two_d_fu_642_input_3_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        k_cache_upd_3_V_ce0 = grp_cache_update_fu_610_cache_out_3_V_ce0;
    end else begin
        k_cache_upd_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        k_cache_upd_3_V_we0 = grp_cache_update_fu_610_cache_out_3_V_we0;
    end else begin
        k_cache_upd_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        k_proj_re_0_V_address0 = grp_init_2d_mem_fu_658_mem_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        k_proj_re_0_V_address0 = grp_reshape_2D_to_3D_fu_637_input_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        k_proj_re_0_V_address0 = grp_linear_forward_no_mu_fu_458_output_0_V_address0;
    end else begin
        k_proj_re_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        k_proj_re_0_V_ce0 = grp_init_2d_mem_fu_658_mem_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        k_proj_re_0_V_ce0 = grp_reshape_2D_to_3D_fu_637_input_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        k_proj_re_0_V_ce0 = grp_linear_forward_no_mu_fu_458_output_0_V_ce0;
    end else begin
        k_proj_re_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        k_proj_re_0_V_ce1 = grp_linear_forward_no_mu_fu_458_output_0_V_ce1;
    end else begin
        k_proj_re_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        k_proj_re_0_V_d0 = grp_init_2d_mem_fu_658_mem_0_V_d0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        k_proj_re_0_V_d0 = grp_linear_forward_no_mu_fu_458_output_0_V_d0;
    end else begin
        k_proj_re_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        k_proj_re_0_V_we0 = grp_init_2d_mem_fu_658_mem_0_V_we0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        k_proj_re_0_V_we0 = grp_linear_forward_no_mu_fu_458_output_0_V_we0;
    end else begin
        k_proj_re_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        k_proj_re_0_V_we1 = grp_linear_forward_no_mu_fu_458_output_0_V_we1;
    end else begin
        k_proj_re_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        k_proj_transposed_0_address0 = grp_transpose_last_two_d_fu_642_output_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        k_proj_transposed_0_address0 = grp_GEMM_3D_float_fu_567_input_2_0_V_address0;
    end else begin
        k_proj_transposed_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        k_proj_transposed_0_address1 = grp_transpose_last_two_d_fu_642_output_0_V_address1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        k_proj_transposed_0_address1 = grp_GEMM_3D_float_fu_567_input_2_0_V_address1;
    end else begin
        k_proj_transposed_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        k_proj_transposed_0_ce0 = grp_transpose_last_two_d_fu_642_output_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        k_proj_transposed_0_ce0 = grp_GEMM_3D_float_fu_567_input_2_0_V_ce0;
    end else begin
        k_proj_transposed_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        k_proj_transposed_0_ce1 = grp_transpose_last_two_d_fu_642_output_0_V_ce1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        k_proj_transposed_0_ce1 = grp_GEMM_3D_float_fu_567_input_2_0_V_ce1;
    end else begin
        k_proj_transposed_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        k_proj_transposed_0_we0 = grp_transpose_last_two_d_fu_642_output_0_V_we0;
    end else begin
        k_proj_transposed_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        k_proj_transposed_0_we1 = grp_transpose_last_two_d_fu_642_output_0_V_we1;
    end else begin
        k_proj_transposed_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        k_proj_transposed_1_address0 = grp_transpose_last_two_d_fu_642_output_1_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        k_proj_transposed_1_address0 = grp_GEMM_3D_float_fu_567_input_2_1_V_address0;
    end else begin
        k_proj_transposed_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        k_proj_transposed_1_address1 = grp_transpose_last_two_d_fu_642_output_1_V_address1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        k_proj_transposed_1_address1 = grp_GEMM_3D_float_fu_567_input_2_1_V_address1;
    end else begin
        k_proj_transposed_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        k_proj_transposed_1_ce0 = grp_transpose_last_two_d_fu_642_output_1_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        k_proj_transposed_1_ce0 = grp_GEMM_3D_float_fu_567_input_2_1_V_ce0;
    end else begin
        k_proj_transposed_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        k_proj_transposed_1_ce1 = grp_transpose_last_two_d_fu_642_output_1_V_ce1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        k_proj_transposed_1_ce1 = grp_GEMM_3D_float_fu_567_input_2_1_V_ce1;
    end else begin
        k_proj_transposed_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        k_proj_transposed_1_we0 = grp_transpose_last_two_d_fu_642_output_1_V_we0;
    end else begin
        k_proj_transposed_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        k_proj_transposed_1_we1 = grp_transpose_last_two_d_fu_642_output_1_V_we1;
    end else begin
        k_proj_transposed_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        k_proj_transposed_2_address0 = grp_transpose_last_two_d_fu_642_output_2_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        k_proj_transposed_2_address0 = grp_GEMM_3D_float_fu_567_input_2_2_V_address0;
    end else begin
        k_proj_transposed_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        k_proj_transposed_2_address1 = grp_transpose_last_two_d_fu_642_output_2_V_address1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        k_proj_transposed_2_address1 = grp_GEMM_3D_float_fu_567_input_2_2_V_address1;
    end else begin
        k_proj_transposed_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        k_proj_transposed_2_ce0 = grp_transpose_last_two_d_fu_642_output_2_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        k_proj_transposed_2_ce0 = grp_GEMM_3D_float_fu_567_input_2_2_V_ce0;
    end else begin
        k_proj_transposed_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        k_proj_transposed_2_ce1 = grp_transpose_last_two_d_fu_642_output_2_V_ce1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        k_proj_transposed_2_ce1 = grp_GEMM_3D_float_fu_567_input_2_2_V_ce1;
    end else begin
        k_proj_transposed_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        k_proj_transposed_2_we0 = grp_transpose_last_two_d_fu_642_output_2_V_we0;
    end else begin
        k_proj_transposed_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        k_proj_transposed_2_we1 = grp_transpose_last_two_d_fu_642_output_2_V_we1;
    end else begin
        k_proj_transposed_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        k_weights_V_0_ce0 = grp_linear_forward_no_mu_fu_458_packed_weights_0_V_ce0;
    end else begin
        k_weights_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        k_weights_V_1_ce0 = grp_linear_forward_no_mu_fu_458_packed_weights_1_V_ce0;
    end else begin
        k_weights_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        k_weights_V_2_ce0 = grp_linear_forward_no_mu_fu_458_packed_weights_2_V_ce0;
    end else begin
        k_weights_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        k_weights_V_3_ce0 = grp_linear_forward_no_mu_fu_458_packed_weights_3_V_ce0;
    end else begin
        k_weights_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        ln_weight_V_ce0 = grp_rms_norm_16_s_fu_551_weight_V_ce0;
    end else begin
        ln_weight_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        ln_weight_in_V_ce0 = grp_rms_norm_16_s_fu_551_weight_V_ce0;
    end else begin
        ln_weight_in_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        o_weights_V_0_ce0 = grp_linear_forward_no_mu_fu_458_packed_weights_0_V_ce0;
    end else begin
        o_weights_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        o_weights_V_1_ce0 = grp_linear_forward_no_mu_fu_458_packed_weights_1_V_ce0;
    end else begin
        o_weights_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        o_weights_V_2_ce0 = grp_linear_forward_no_mu_fu_458_packed_weights_2_V_ce0;
    end else begin
        o_weights_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        o_weights_V_3_ce0 = grp_linear_forward_no_mu_fu_458_packed_weights_3_V_ce0;
    end else begin
        o_weights_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        q_proj_re_0_V_address0 = grp_init_2d_mem_fu_653_mem_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        q_proj_re_0_V_address0 = grp_reshape_2D_to_3D_fu_637_input_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        q_proj_re_0_V_address0 = grp_linear_forward_no_mu_fu_458_output_0_V_address0;
    end else begin
        q_proj_re_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        q_proj_re_0_V_ce0 = grp_init_2d_mem_fu_653_mem_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        q_proj_re_0_V_ce0 = grp_reshape_2D_to_3D_fu_637_input_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        q_proj_re_0_V_ce0 = grp_linear_forward_no_mu_fu_458_output_0_V_ce0;
    end else begin
        q_proj_re_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        q_proj_re_0_V_ce1 = grp_linear_forward_no_mu_fu_458_output_0_V_ce1;
    end else begin
        q_proj_re_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        q_proj_re_0_V_d0 = grp_init_2d_mem_fu_653_mem_0_V_d0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        q_proj_re_0_V_d0 = grp_linear_forward_no_mu_fu_458_output_0_V_d0;
    end else begin
        q_proj_re_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        q_proj_re_0_V_we0 = grp_init_2d_mem_fu_653_mem_0_V_we0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        q_proj_re_0_V_we0 = grp_linear_forward_no_mu_fu_458_output_0_V_we0;
    end else begin
        q_proj_re_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        q_proj_re_0_V_we1 = grp_linear_forward_no_mu_fu_458_output_0_V_we1;
    end else begin
        q_proj_re_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        q_weights_V_0_ce0 = grp_linear_forward_no_mu_fu_458_packed_weights_0_V_ce0;
    end else begin
        q_weights_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        q_weights_V_1_ce0 = grp_linear_forward_no_mu_fu_458_packed_weights_1_V_ce0;
    end else begin
        q_weights_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        q_weights_V_2_ce0 = grp_linear_forward_no_mu_fu_458_packed_weights_2_V_ce0;
    end else begin
        q_weights_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        q_weights_V_3_ce0 = grp_linear_forward_no_mu_fu_458_packed_weights_3_V_ce0;
    end else begin
        q_weights_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln36_1_fu_1829_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        quantized_final_outp_address0 = zext_ln37_1_fu_1841_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        quantized_final_outp_address0 = grp_quantize_activation_fu_560_output_states_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        quantized_final_outp_address0 = grp_linear_forward_no_mu_fu_458_input_0_V_address0;
    end else begin
        quantized_final_outp_address0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln36_1_fu_1829_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        quantized_final_outp_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        quantized_final_outp_ce0 = grp_quantize_activation_fu_560_output_states_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        quantized_final_outp_ce0 = grp_linear_forward_no_mu_fu_458_input_0_V_ce0;
    end else begin
        quantized_final_outp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        quantized_final_outp_ce1 = grp_linear_forward_no_mu_fu_458_input_0_V_ce1;
    end else begin
        quantized_final_outp_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln36_1_fu_1829_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        quantized_final_outp_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        quantized_final_outp_d0 = grp_quantize_activation_fu_560_output_states_0_V_d0;
    end else begin
        quantized_final_outp_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln36_1_fu_1829_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        quantized_final_outp_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        quantized_final_outp_we0 = grp_quantize_activation_fu_560_output_states_0_V_we0;
    end else begin
        quantized_final_outp_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln36_fu_918_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        quantized_hidden_sta_address0 = zext_ln37_fu_930_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        quantized_hidden_sta_address0 = grp_quantize_activation_fu_560_output_states_0_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6))) begin
        quantized_hidden_sta_address0 = grp_linear_forward_no_mu_fu_458_input_0_V_address0;
    end else begin
        quantized_hidden_sta_address0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln36_fu_918_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        quantized_hidden_sta_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        quantized_hidden_sta_ce0 = grp_quantize_activation_fu_560_output_states_0_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6))) begin
        quantized_hidden_sta_ce0 = grp_linear_forward_no_mu_fu_458_input_0_V_ce0;
    end else begin
        quantized_hidden_sta_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6))) begin
        quantized_hidden_sta_ce1 = grp_linear_forward_no_mu_fu_458_input_0_V_ce1;
    end else begin
        quantized_hidden_sta_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln36_fu_918_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        quantized_hidden_sta_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        quantized_hidden_sta_d0 = grp_quantize_activation_fu_560_output_states_0_V_d0;
    end else begin
        quantized_hidden_sta_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln36_fu_918_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        quantized_hidden_sta_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        quantized_hidden_sta_we0 = grp_quantize_activation_fu_560_output_states_0_V_we0;
    end else begin
        quantized_hidden_sta_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        v_cache_V_ce0 = grp_cache_update_fu_610_cache_in_V_ce0;
    end else begin
        v_cache_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        v_cache_upd_0_V_address0 = grp_cache_update_fu_610_cache_out_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        v_cache_upd_0_V_address0 = grp_GEMM_3D_float_1_fu_590_input_2_0_V_address0;
    end else begin
        v_cache_upd_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        v_cache_upd_0_V_ce0 = grp_cache_update_fu_610_cache_out_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        v_cache_upd_0_V_ce0 = grp_GEMM_3D_float_1_fu_590_input_2_0_V_ce0;
    end else begin
        v_cache_upd_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        v_cache_upd_0_V_ce1 = grp_GEMM_3D_float_1_fu_590_input_2_0_V_ce1;
    end else begin
        v_cache_upd_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        v_cache_upd_0_V_we0 = grp_cache_update_fu_610_cache_out_0_V_we0;
    end else begin
        v_cache_upd_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        v_cache_upd_1_V_address0 = grp_cache_update_fu_610_cache_out_1_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        v_cache_upd_1_V_address0 = grp_GEMM_3D_float_1_fu_590_input_2_1_V_address0;
    end else begin
        v_cache_upd_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        v_cache_upd_1_V_ce0 = grp_cache_update_fu_610_cache_out_1_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        v_cache_upd_1_V_ce0 = grp_GEMM_3D_float_1_fu_590_input_2_1_V_ce0;
    end else begin
        v_cache_upd_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        v_cache_upd_1_V_ce1 = grp_GEMM_3D_float_1_fu_590_input_2_1_V_ce1;
    end else begin
        v_cache_upd_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        v_cache_upd_1_V_we0 = grp_cache_update_fu_610_cache_out_1_V_we0;
    end else begin
        v_cache_upd_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        v_cache_upd_2_V_address0 = grp_cache_update_fu_610_cache_out_2_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        v_cache_upd_2_V_address0 = grp_GEMM_3D_float_1_fu_590_input_2_2_V_address0;
    end else begin
        v_cache_upd_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        v_cache_upd_2_V_ce0 = grp_cache_update_fu_610_cache_out_2_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        v_cache_upd_2_V_ce0 = grp_GEMM_3D_float_1_fu_590_input_2_2_V_ce0;
    end else begin
        v_cache_upd_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        v_cache_upd_2_V_ce1 = grp_GEMM_3D_float_1_fu_590_input_2_2_V_ce1;
    end else begin
        v_cache_upd_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        v_cache_upd_2_V_we0 = grp_cache_update_fu_610_cache_out_2_V_we0;
    end else begin
        v_cache_upd_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        v_cache_upd_3_V_address0 = grp_cache_update_fu_610_cache_out_3_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        v_cache_upd_3_V_address0 = grp_GEMM_3D_float_1_fu_590_input_2_3_V_address0;
    end else begin
        v_cache_upd_3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        v_cache_upd_3_V_ce0 = grp_cache_update_fu_610_cache_out_3_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        v_cache_upd_3_V_ce0 = grp_GEMM_3D_float_1_fu_590_input_2_3_V_ce0;
    end else begin
        v_cache_upd_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        v_cache_upd_3_V_ce1 = grp_GEMM_3D_float_1_fu_590_input_2_3_V_ce1;
    end else begin
        v_cache_upd_3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        v_cache_upd_3_V_we0 = grp_cache_update_fu_610_cache_out_3_V_we0;
    end else begin
        v_cache_upd_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        v_proj_re_0_V_address0 = grp_init_2d_mem_fu_663_mem_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        v_proj_re_0_V_address0 = grp_reshape_2D_to_3D_fu_637_input_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        v_proj_re_0_V_address0 = grp_linear_forward_no_mu_fu_458_output_0_V_address0;
    end else begin
        v_proj_re_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        v_proj_re_0_V_ce0 = grp_init_2d_mem_fu_663_mem_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        v_proj_re_0_V_ce0 = grp_reshape_2D_to_3D_fu_637_input_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        v_proj_re_0_V_ce0 = grp_linear_forward_no_mu_fu_458_output_0_V_ce0;
    end else begin
        v_proj_re_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        v_proj_re_0_V_ce1 = grp_linear_forward_no_mu_fu_458_output_0_V_ce1;
    end else begin
        v_proj_re_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        v_proj_re_0_V_d0 = grp_init_2d_mem_fu_663_mem_0_V_d0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        v_proj_re_0_V_d0 = grp_linear_forward_no_mu_fu_458_output_0_V_d0;
    end else begin
        v_proj_re_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        v_proj_re_0_V_we0 = grp_init_2d_mem_fu_663_mem_0_V_we0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        v_proj_re_0_V_we0 = grp_linear_forward_no_mu_fu_458_output_0_V_we0;
    end else begin
        v_proj_re_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        v_proj_re_0_V_we1 = grp_linear_forward_no_mu_fu_458_output_0_V_we1;
    end else begin
        v_proj_re_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        v_weights_V_0_ce0 = grp_linear_forward_no_mu_fu_458_packed_weights_0_V_ce0;
    end else begin
        v_weights_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        v_weights_V_1_ce0 = grp_linear_forward_no_mu_fu_458_packed_weights_1_V_ce0;
    end else begin
        v_weights_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        v_weights_V_2_ce0 = grp_linear_forward_no_mu_fu_458_packed_weights_2_V_ce0;
    end else begin
        v_weights_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        v_weights_V_3_ce0 = grp_linear_forward_no_mu_fu_458_packed_weights_3_V_ce0;
    end else begin
        v_weights_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_rms_norm_16_s_fu_551_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln36_fu_918_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b0 == ap_block_state4_on_subcall_done) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_linear_forward_no_mu_fu_458_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b0 == ap_block_state8_on_subcall_done) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b0 == ap_block_state10_on_subcall_done) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b0 == ap_block_state12_on_subcall_done) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (grp_cache_update_fu_610_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b0 == ap_block_state15_on_subcall_done) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((grp_GEMM_3D_float_fu_567_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((icmp_ln188_fu_1187_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((icmp_ln190_fu_1203_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state21 : begin
            if (((icmp_ln195_fu_1517_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((1'b0 == ap_block_state22_on_subcall_done) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((grp_GEMM_3D_float_1_fu_590_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((icmp_ln221_fu_1727_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            if (((grp_rms_norm_16_s_fu_551_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((icmp_ln36_1_fu_1829_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((1'b0 == ap_block_state29_on_subcall_done) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            if (((grp_linear_forward_no_mu_fu_458_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln190_fu_1209_p2 = (d_0_0_reg_373 + 2'd1);

assign add_ln221_fu_1733_p2 = (h100_0_0_reg_436 + 3'd1);

assign add_ln36_1_fu_1835_p2 = (j_0_0_i2_reg_447 + 5'd1);

assign add_ln36_fu_924_p2 = (j_0_0_i_reg_351 + 5'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state10_on_subcall_done = ((grp_reshape_2D_to_3D_fu_637_ap_done == 1'b0) | (grp_linear_forward_no_mu_fu_458_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state12_on_subcall_done = ((grp_apply_rotary_pos_emb_fu_511_ap_done == 1'b0) | (grp_reshape_2D_to_3D_fu_637_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state15_on_subcall_done = ((grp_transpose_last_two_d_fu_642_ap_done == 1'b0) | (grp_cache_update_fu_610_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state22_on_subcall_done = ((grp_softmax_1_4_3_s_fu_491_ap_done == 1'b0) | (grp_init_2d_mem_fu_653_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state29_on_subcall_done = ((grp_init_2d_mem_fu_653_ap_done == 1'b0) | (grp_quantize_activation_fu_560_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state4_on_subcall_done = ((grp_init_2d_mem_fu_663_ap_done == 1'b0) | (grp_init_2d_mem_fu_658_ap_done == 1'b0) | (grp_init_2d_mem_fu_653_ap_done == 1'b0) | (grp_quantize_activation_fu_560_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state8_on_subcall_done = ((grp_reshape_2D_to_3D_fu_637_ap_done == 1'b0) | (grp_linear_forward_no_mu_fu_458_ap_done == 1'b0));
end

assign final_output_0_V_address1 = grp_linear_forward_no_mu_fu_458_output_0_V_address1;

assign final_output_0_V_d1 = grp_linear_forward_no_mu_fu_458_output_0_V_d1;

assign grp_GEMM_3D_float_1_fu_590_ap_start = grp_GEMM_3D_float_1_fu_590_ap_start_reg;

assign grp_GEMM_3D_float_fu_567_ap_start = grp_GEMM_3D_float_fu_567_ap_start_reg;

assign grp_apply_rotary_pos_emb_fu_511_ap_start = grp_apply_rotary_pos_emb_fu_511_ap_start_reg;

assign grp_cache_update_fu_610_ap_start = grp_cache_update_fu_610_ap_start_reg;

assign grp_init_2d_mem_fu_653_ap_start = grp_init_2d_mem_fu_653_ap_start_reg;

assign grp_init_2d_mem_fu_658_ap_start = grp_init_2d_mem_fu_658_ap_start_reg;

assign grp_init_2d_mem_fu_663_ap_start = grp_init_2d_mem_fu_663_ap_start_reg;

assign grp_linear_forward_no_mu_fu_458_ap_start = grp_linear_forward_no_mu_fu_458_ap_start_reg;

assign grp_quantize_activation_fu_560_ap_start = grp_quantize_activation_fu_560_ap_start_reg;

assign grp_reshape_2D_to_3D_fu_637_ap_start = grp_reshape_2D_to_3D_fu_637_ap_start_reg;

assign grp_rms_norm_16_s_fu_551_ap_start = grp_rms_norm_16_s_fu_551_ap_start_reg;

assign grp_softmax_1_4_3_s_fu_491_ap_start = grp_softmax_1_4_3_s_fu_491_ap_start_reg;

assign grp_transpose_last_two_d_fu_642_ap_start = grp_transpose_last_two_d_fu_642_ap_start_reg;

assign h_1_fu_1193_p2 = (h_0_reg_362 + 3'd1);

assign h_fu_1523_p2 = (h85_0_reg_425 + 3'd1);

assign hidden_states_0_V_d1 = grp_rms_norm_16_s_fu_551_input_0_V_d1;

assign icmp_ln188_fu_1187_p2 = ((h_0_reg_362 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln190_fu_1203_p2 = ((d_0_0_reg_373 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln195_fu_1517_p2 = ((h85_0_reg_425 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln221_fu_1727_p2 = ((h100_0_0_reg_436 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln36_1_fu_1829_p2 = ((j_0_0_i2_reg_447 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln36_fu_918_p2 = ((j_0_0_i_reg_351 == 5'd16) ? 1'b1 : 1'b0);

assign or_ln223_1_fu_1789_p2 = (shl_ln3_reg_2456 | 4'd2);

assign or_ln223_2_fu_1809_p2 = (shl_ln3_reg_2456 | 4'd3);

assign or_ln223_fu_1767_p2 = (shl_ln3_fu_1743_p3 | 4'd1);

assign select_ln1148_fu_1306_p3 = ((tmp_47_reg_2259[0:0] === 1'b1) ? sub_ln1148_6_fu_1300_p2 : zext_ln1148_7_fu_1297_p1);

assign shl_ln3_fu_1743_p3 = {{trunc_ln223_fu_1739_p1}, {2'd0}};

assign shl_ln_fu_1252_p3 = {{tmp_2_fu_1222_p14}, {22'd0}};

assign sub_ln1148_6_fu_1300_p2 = (32'd0 - zext_ln1148_fu_1294_p1);

assign sub_ln1148_fu_1268_p2 = (54'd0 - shl_ln_fu_1252_p3);

assign tmp_2_fu_1222_p13 = {{d_0_0_reg_373}, {trunc_ln1265_reg_2206}};

assign trunc_ln1265_1_fu_1529_p1 = h85_0_reg_425[1:0];

assign trunc_ln1265_fu_1199_p1 = h_0_reg_362[1:0];

assign trunc_ln223_fu_1739_p1 = h100_0_0_reg_436[1:0];

assign zext_ln1148_7_fu_1297_p1 = lshr_ln1148_s_reg_2269;

assign zext_ln1148_fu_1294_p1 = tmp_8_reg_2264;

assign zext_ln223_1_fu_1773_p1 = or_ln223_fu_1767_p2;

assign zext_ln223_2_fu_1794_p1 = or_ln223_1_fu_1789_p2;

assign zext_ln223_3_fu_1814_p1 = or_ln223_2_fu_1809_p2;

assign zext_ln223_fu_1751_p1 = shl_ln3_fu_1743_p3;

assign zext_ln37_1_fu_1841_p1 = j_0_0_i2_reg_447;

assign zext_ln37_fu_930_p1 = j_0_0_i_reg_351;

always @ (posedge ap_clk) begin
    shl_ln3_reg_2456[1:0] <= 2'b00;
end

endmodule //attention
