-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity attention is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    hidden_states_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    hidden_states_0_V_ce0 : OUT STD_LOGIC;
    hidden_states_0_V_q0 : IN STD_LOGIC_VECTOR (39 downto 0);
    hidden_states_0_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    hidden_states_0_V_ce1 : OUT STD_LOGIC;
    hidden_states_0_V_we1 : OUT STD_LOGIC;
    hidden_states_0_V_d1 : OUT STD_LOGIC_VECTOR (39 downto 0);
    hidden_states_0_V_q1 : IN STD_LOGIC_VECTOR (39 downto 0);
    final_output_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    final_output_0_V_ce0 : OUT STD_LOGIC;
    final_output_0_V_we0 : OUT STD_LOGIC;
    final_output_0_V_d0 : OUT STD_LOGIC_VECTOR (39 downto 0);
    final_output_0_V_q0 : IN STD_LOGIC_VECTOR (39 downto 0) );
end;


architecture behav of attention is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (28 downto 0) := "00000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (28 downto 0) := "00000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (28 downto 0) := "00000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (28 downto 0) := "00000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (28 downto 0) := "00000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (28 downto 0) := "00000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (28 downto 0) := "00001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (28 downto 0) := "00010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (28 downto 0) := "00100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (28 downto 0) := "01000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (28 downto 0) := "10000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv22_132AE2 : STD_LOGIC_VECTOR (21 downto 0) := "0100110010101011100010";
    constant ap_const_lv22_AED1D : STD_LOGIC_VECTOR (21 downto 0) := "0010101110110100011101";
    constant ap_const_lv22_B1C47 : STD_LOGIC_VECTOR (21 downto 0) := "0010110001110001000111";
    constant ap_const_lv22_12D593 : STD_LOGIC_VECTOR (21 downto 0) := "0100101101010110010011";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv56_0 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv40_0 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ln_weight_in_V_ce0 : STD_LOGIC;
    signal ln_weight_in_V_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal q_weights_0_ce0 : STD_LOGIC;
    signal q_weights_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_weights_1_ce0 : STD_LOGIC;
    signal q_weights_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_weights_2_ce0 : STD_LOGIC;
    signal q_weights_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_weights_3_ce0 : STD_LOGIC;
    signal q_weights_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_weights_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_weights_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_weights_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_weights_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal v_weights_0_ce0 : STD_LOGIC;
    signal v_weights_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal v_weights_1_ce0 : STD_LOGIC;
    signal v_weights_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal v_weights_2_ce0 : STD_LOGIC;
    signal v_weights_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal v_weights_3_ce0 : STD_LOGIC;
    signal v_weights_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_cache_V_0_ce0 : STD_LOGIC;
    signal k_cache_V_0_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_cache_V_1_ce0 : STD_LOGIC;
    signal k_cache_V_1_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_cache_V_2_ce0 : STD_LOGIC;
    signal k_cache_V_2_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_cache_V_3_ce0 : STD_LOGIC;
    signal k_cache_V_3_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal v_cache_V_0_ce0 : STD_LOGIC;
    signal v_cache_V_0_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal v_cache_V_1_ce0 : STD_LOGIC;
    signal v_cache_V_1_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal v_cache_V_2_ce0 : STD_LOGIC;
    signal v_cache_V_2_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal v_cache_V_3_ce0 : STD_LOGIC;
    signal v_cache_V_3_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal ln_weight_V_ce0 : STD_LOGIC;
    signal ln_weight_V_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal o_weights_0_ce0 : STD_LOGIC;
    signal o_weights_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal o_weights_1_ce0 : STD_LOGIC;
    signal o_weights_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal o_weights_2_ce0 : STD_LOGIC;
    signal o_weights_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal o_weights_3_ce0 : STD_LOGIC;
    signal o_weights_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_847 : STD_LOGIC_VECTOR (39 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_quantize_activation_fu_526_ap_ready : STD_LOGIC;
    signal grp_quantize_activation_fu_526_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal reg_853 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_859 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_865 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_871 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_877 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_883 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_889 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_895 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_901 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_907 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_913 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_919 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_925 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_931 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_937 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_943 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_949 : STD_LOGIC_VECTOR (39 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_linear_forward_no_mu_fu_402_ap_ready : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_402_ap_done : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_631_ap_ready : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_631_ap_done : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_636_ap_ready : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_636_ap_done : STD_LOGIC;
    signal ap_block_state8_on_subcall_done : BOOLEAN;
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_apply_rotary_pos_emb_fu_486_ap_ready : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_486_ap_done : STD_LOGIC;
    signal ap_block_state10_on_subcall_done : BOOLEAN;
    signal reg_955 : STD_LOGIC_VECTOR (39 downto 0);
    signal reg_961 : STD_LOGIC_VECTOR (39 downto 0);
    signal reg_967 : STD_LOGIC_VECTOR (39 downto 0);
    signal reg_973 : STD_LOGIC_VECTOR (39 downto 0);
    signal reg_979 : STD_LOGIC_VECTOR (39 downto 0);
    signal reg_985 : STD_LOGIC_VECTOR (39 downto 0);
    signal reg_991 : STD_LOGIC_VECTOR (39 downto 0);
    signal reg_997 : STD_LOGIC_VECTOR (39 downto 0);
    signal reg_1003 : STD_LOGIC_VECTOR (39 downto 0);
    signal reg_1009 : STD_LOGIC_VECTOR (39 downto 0);
    signal reg_1015 : STD_LOGIC_VECTOR (39 downto 0);
    signal reg_1021 : STD_LOGIC_VECTOR (39 downto 0);
    signal reg_1027 : STD_LOGIC_VECTOR (39 downto 0);
    signal reg_1033 : STD_LOGIC_VECTOR (39 downto 0);
    signal reg_1039 : STD_LOGIC_VECTOR (39 downto 0);
    signal reg_1045 : STD_LOGIC_VECTOR (39 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal icmp_ln187_fu_1417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal icmp_ln192_fu_1731_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_1050 : STD_LOGIC_VECTOR (39 downto 0);
    signal reg_1055 : STD_LOGIC_VECTOR (39 downto 0);
    signal reg_1060 : STD_LOGIC_VECTOR (39 downto 0);
    signal reg_1065 : STD_LOGIC_VECTOR (39 downto 0);
    signal reg_1070 : STD_LOGIC_VECTOR (39 downto 0);
    signal reg_1075 : STD_LOGIC_VECTOR (39 downto 0);
    signal reg_1080 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_proj_V_0_reg_2127 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_proj_V_0_1_reg_2132 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_proj_V_0_2_reg_2137 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_proj_V_0_3_reg_2142 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_proj_V_1_reg_2147 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_proj_V_1_1_reg_2152 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_proj_V_1_2_reg_2157 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_proj_V_1_3_reg_2162 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_proj_V_2_reg_2167 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_proj_V_2_1_reg_2172 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_proj_V_2_2_reg_2177 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_proj_V_2_3_reg_2182 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_proj_V_3_reg_2187 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_proj_V_3_1_reg_2192 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_proj_V_3_2_reg_2197 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_proj_V_3_3_reg_2202 : STD_LOGIC_VECTOR (39 downto 0);
    signal q_embed_V_0_reg_2207 : STD_LOGIC_VECTOR (39 downto 0);
    signal q_embed_V_0_1_reg_2212 : STD_LOGIC_VECTOR (39 downto 0);
    signal q_embed_V_0_2_reg_2217 : STD_LOGIC_VECTOR (39 downto 0);
    signal q_embed_V_0_3_reg_2222 : STD_LOGIC_VECTOR (39 downto 0);
    signal q_embed_V_1_reg_2227 : STD_LOGIC_VECTOR (39 downto 0);
    signal q_embed_V_1_1_reg_2232 : STD_LOGIC_VECTOR (39 downto 0);
    signal q_embed_V_1_2_reg_2237 : STD_LOGIC_VECTOR (39 downto 0);
    signal q_embed_V_1_3_reg_2242 : STD_LOGIC_VECTOR (39 downto 0);
    signal q_embed_V_2_reg_2247 : STD_LOGIC_VECTOR (39 downto 0);
    signal q_embed_V_2_1_reg_2252 : STD_LOGIC_VECTOR (39 downto 0);
    signal q_embed_V_2_2_reg_2257 : STD_LOGIC_VECTOR (39 downto 0);
    signal q_embed_V_2_3_reg_2262 : STD_LOGIC_VECTOR (39 downto 0);
    signal q_embed_V_3_reg_2267 : STD_LOGIC_VECTOR (39 downto 0);
    signal q_embed_V_3_1_reg_2272 : STD_LOGIC_VECTOR (39 downto 0);
    signal q_embed_V_3_2_reg_2277 : STD_LOGIC_VECTOR (39 downto 0);
    signal q_embed_V_3_3_reg_2282 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_embed_V_0_reg_2287 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_embed_V_0_1_reg_2292 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_embed_V_0_2_reg_2297 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_embed_V_0_3_reg_2302 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_embed_V_1_reg_2307 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_embed_V_1_1_reg_2312 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_embed_V_1_2_reg_2317 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_embed_V_1_3_reg_2322 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_embed_V_2_reg_2327 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_embed_V_2_1_reg_2332 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_embed_V_2_2_reg_2337 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_embed_V_2_3_reg_2342 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_embed_V_3_reg_2347 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_embed_V_3_1_reg_2352 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_embed_V_3_2_reg_2357 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_embed_V_3_3_reg_2362 : STD_LOGIC_VECTOR (39 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal h_1_fu_1407_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal h_1_reg_2390 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln1265_fu_1413_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln1265_reg_2395 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln185_fu_1401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln187_fu_1423_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln187_reg_2415 : STD_LOGIC_VECTOR (1 downto 0);
    signal attn_weights_V_0_3_0_1_reg_2420 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_0_2_0_1_reg_2427 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_0_1_0_1_reg_2434 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_0_0_0_1_reg_2441 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_106_reg_2448 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_reg_2453 : STD_LOGIC_VECTOR (38 downto 0);
    signal lshr_ln1148_4_reg_2458 : STD_LOGIC_VECTOR (38 downto 0);
    signal h_fu_1737_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal attn_weights_V_0_3_0_4_fu_1761_p6 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_0_2_0_4_fu_1775_p6 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_0_1_0_4_fu_1789_p6 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_0_0_0_4_fu_1803_p6 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_0_0_0_7_reg_2491 : STD_LOGIC_VECTOR (39 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal grp_softmax_1_4_3_s_fu_532_ap_ready : STD_LOGIC;
    signal grp_softmax_1_4_3_s_fu_532_ap_done : STD_LOGIC;
    signal grp_init_2d_mem_fu_652_ap_ready : STD_LOGIC;
    signal grp_init_2d_mem_fu_652_ap_done : STD_LOGIC;
    signal ap_block_state20_on_subcall_done : BOOLEAN;
    signal attn_weights_V_0_1_0_7_reg_2496 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_0_2_0_7_reg_2501 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_0_3_0_7_reg_2506 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_1_0_0_5_reg_2511 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_1_1_0_5_reg_2516 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_1_2_0_5_reg_2521 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_1_3_0_5_reg_2526 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_2_0_0_5_reg_2531 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_2_1_0_5_reg_2536 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_2_2_0_5_reg_2541 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_2_3_0_5_reg_2546 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_output_0_reg_2551 : STD_LOGIC_VECTOR (39 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal grp_GEMM_3D_float_1_fu_575_ap_ready : STD_LOGIC;
    signal grp_GEMM_3D_float_1_fu_575_ap_done : STD_LOGIC;
    signal attn_output_0_1_reg_2556 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_output_0_2_reg_2561 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_output_0_3_reg_2566 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_output_1_reg_2571 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_output_1_1_reg_2576 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_output_1_2_reg_2581 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_output_1_3_reg_2586 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_output_2_reg_2591 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_output_2_1_reg_2596 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_output_2_2_reg_2601 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_output_2_3_reg_2606 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_output_3_reg_2611 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_output_3_1_reg_2616 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_output_3_2_reg_2621 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_output_3_3_reg_2626 : STD_LOGIC_VECTOR (39 downto 0);
    signal add_ln218_fu_1947_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln218_reg_2634 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal trunc_ln220_fu_1953_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln220_reg_2639 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln218_fu_1941_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln2_fu_1957_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln2_reg_2645 : STD_LOGIC_VECTOR (3 downto 0);
    signal q_proj_re_0_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal q_proj_re_0_V_ce0 : STD_LOGIC;
    signal q_proj_re_0_V_we0 : STD_LOGIC;
    signal q_proj_re_0_V_d0 : STD_LOGIC_VECTOR (39 downto 0);
    signal q_proj_re_0_V_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_proj_re_0_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal k_proj_re_0_V_ce0 : STD_LOGIC;
    signal k_proj_re_0_V_we0 : STD_LOGIC;
    signal k_proj_re_0_V_d0 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_proj_re_0_V_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal v_proj_re_0_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal v_proj_re_0_V_ce0 : STD_LOGIC;
    signal v_proj_re_0_V_we0 : STD_LOGIC;
    signal v_proj_re_0_V_d0 : STD_LOGIC_VECTOR (39 downto 0);
    signal v_proj_re_0_V_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_cache_upd_0_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal k_cache_upd_0_V_ce0 : STD_LOGIC;
    signal k_cache_upd_0_V_we0 : STD_LOGIC;
    signal k_cache_upd_0_V_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_cache_upd_1_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal k_cache_upd_1_V_ce0 : STD_LOGIC;
    signal k_cache_upd_1_V_we0 : STD_LOGIC;
    signal k_cache_upd_1_V_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_cache_upd_2_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal k_cache_upd_2_V_ce0 : STD_LOGIC;
    signal k_cache_upd_2_V_we0 : STD_LOGIC;
    signal k_cache_upd_2_V_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_cache_upd_3_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal k_cache_upd_3_V_ce0 : STD_LOGIC;
    signal k_cache_upd_3_V_we0 : STD_LOGIC;
    signal k_cache_upd_3_V_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal v_cache_upd_0_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal v_cache_upd_0_V_ce0 : STD_LOGIC;
    signal v_cache_upd_0_V_we0 : STD_LOGIC;
    signal v_cache_upd_0_V_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal v_cache_upd_0_V_ce1 : STD_LOGIC;
    signal v_cache_upd_0_V_q1 : STD_LOGIC_VECTOR (39 downto 0);
    signal v_cache_upd_1_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal v_cache_upd_1_V_ce0 : STD_LOGIC;
    signal v_cache_upd_1_V_we0 : STD_LOGIC;
    signal v_cache_upd_1_V_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal v_cache_upd_1_V_ce1 : STD_LOGIC;
    signal v_cache_upd_1_V_q1 : STD_LOGIC_VECTOR (39 downto 0);
    signal v_cache_upd_2_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal v_cache_upd_2_V_ce0 : STD_LOGIC;
    signal v_cache_upd_2_V_we0 : STD_LOGIC;
    signal v_cache_upd_2_V_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal v_cache_upd_2_V_ce1 : STD_LOGIC;
    signal v_cache_upd_2_V_q1 : STD_LOGIC_VECTOR (39 downto 0);
    signal v_cache_upd_3_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal v_cache_upd_3_V_ce0 : STD_LOGIC;
    signal v_cache_upd_3_V_we0 : STD_LOGIC;
    signal v_cache_upd_3_V_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal v_cache_upd_3_V_ce1 : STD_LOGIC;
    signal v_cache_upd_3_V_q1 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_proj_transposed_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal k_proj_transposed_0_ce0 : STD_LOGIC;
    signal k_proj_transposed_0_we0 : STD_LOGIC;
    signal k_proj_transposed_0_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_proj_transposed_0_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal k_proj_transposed_0_ce1 : STD_LOGIC;
    signal k_proj_transposed_0_we1 : STD_LOGIC;
    signal k_proj_transposed_0_q1 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_proj_transposed_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal k_proj_transposed_1_ce0 : STD_LOGIC;
    signal k_proj_transposed_1_we0 : STD_LOGIC;
    signal k_proj_transposed_1_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_proj_transposed_1_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal k_proj_transposed_1_ce1 : STD_LOGIC;
    signal k_proj_transposed_1_we1 : STD_LOGIC;
    signal k_proj_transposed_1_q1 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_proj_transposed_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal k_proj_transposed_2_ce0 : STD_LOGIC;
    signal k_proj_transposed_2_we0 : STD_LOGIC;
    signal k_proj_transposed_2_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal k_proj_transposed_2_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal k_proj_transposed_2_ce1 : STD_LOGIC;
    signal k_proj_transposed_2_we1 : STD_LOGIC;
    signal k_proj_transposed_2_q1 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_output_2D_0_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal attn_output_2D_0_V_ce0 : STD_LOGIC;
    signal attn_output_2D_0_V_we0 : STD_LOGIC;
    signal attn_output_2D_0_V_d0 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_output_2D_0_V_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_output_2D_0_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal attn_output_2D_0_V_ce1 : STD_LOGIC;
    signal attn_output_2D_0_V_we1 : STD_LOGIC;
    signal attn_output_2D_0_V_d1 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_output_2D_0_V_q1 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_linear_forward_no_mu_fu_402_ap_start : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_402_ap_idle : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_402_output_0_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_linear_forward_no_mu_fu_402_output_0_V_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_402_output_0_V_we0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_402_output_0_V_d0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_linear_forward_no_mu_fu_402_output_0_V_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_linear_forward_no_mu_fu_402_packed_weights_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_linear_forward_no_mu_fu_402_packed_weights_0_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_402_packed_weights_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_402_packed_weights_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_linear_forward_no_mu_fu_402_packed_weights_1_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_402_packed_weights_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_402_packed_weights_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_linear_forward_no_mu_fu_402_packed_weights_2_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_402_packed_weights_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_402_packed_weights_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_linear_forward_no_mu_fu_402_packed_weights_3_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_402_packed_weights_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_402_w_scale_V : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_linear_forward_no_mu_fu_434_ap_start : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_434_ap_done : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_434_ap_idle : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_434_ap_ready : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_434_output_0_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_linear_forward_no_mu_fu_434_output_0_V_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_434_output_0_V_we0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_434_output_0_V_d0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_linear_forward_no_mu_fu_434_packed_weights_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_linear_forward_no_mu_fu_434_packed_weights_0_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_434_packed_weights_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_linear_forward_no_mu_fu_434_packed_weights_1_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_434_packed_weights_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_linear_forward_no_mu_fu_434_packed_weights_2_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_434_packed_weights_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_linear_forward_no_mu_fu_434_packed_weights_3_ce0 : STD_LOGIC;
    signal grp_rms_norm_16_s_fu_477_ap_start : STD_LOGIC;
    signal grp_rms_norm_16_s_fu_477_ap_done : STD_LOGIC;
    signal grp_rms_norm_16_s_fu_477_ap_idle : STD_LOGIC;
    signal grp_rms_norm_16_s_fu_477_ap_ready : STD_LOGIC;
    signal grp_rms_norm_16_s_fu_477_input_0_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_rms_norm_16_s_fu_477_input_0_V_ce0 : STD_LOGIC;
    signal grp_rms_norm_16_s_fu_477_input_0_V_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_rms_norm_16_s_fu_477_input_0_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_rms_norm_16_s_fu_477_input_0_V_ce1 : STD_LOGIC;
    signal grp_rms_norm_16_s_fu_477_input_0_V_we1 : STD_LOGIC;
    signal grp_rms_norm_16_s_fu_477_input_0_V_d1 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_rms_norm_16_s_fu_477_weight_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_rms_norm_16_s_fu_477_weight_V_ce0 : STD_LOGIC;
    signal grp_rms_norm_16_s_fu_477_weight_V_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_apply_rotary_pos_emb_fu_486_ap_start : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_486_ap_idle : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_486_ap_return_0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_apply_rotary_pos_emb_fu_486_ap_return_1 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_apply_rotary_pos_emb_fu_486_ap_return_2 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_apply_rotary_pos_emb_fu_486_ap_return_3 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_apply_rotary_pos_emb_fu_486_ap_return_4 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_apply_rotary_pos_emb_fu_486_ap_return_5 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_apply_rotary_pos_emb_fu_486_ap_return_6 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_apply_rotary_pos_emb_fu_486_ap_return_7 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_apply_rotary_pos_emb_fu_486_ap_return_8 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_apply_rotary_pos_emb_fu_486_ap_return_9 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_apply_rotary_pos_emb_fu_486_ap_return_10 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_apply_rotary_pos_emb_fu_486_ap_return_11 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_apply_rotary_pos_emb_fu_486_ap_return_12 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_apply_rotary_pos_emb_fu_486_ap_return_13 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_apply_rotary_pos_emb_fu_486_ap_return_14 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_apply_rotary_pos_emb_fu_486_ap_return_15 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_apply_rotary_pos_emb_fu_486_ap_return_16 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_apply_rotary_pos_emb_fu_486_ap_return_17 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_apply_rotary_pos_emb_fu_486_ap_return_18 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_apply_rotary_pos_emb_fu_486_ap_return_19 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_apply_rotary_pos_emb_fu_486_ap_return_20 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_apply_rotary_pos_emb_fu_486_ap_return_21 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_apply_rotary_pos_emb_fu_486_ap_return_22 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_apply_rotary_pos_emb_fu_486_ap_return_23 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_apply_rotary_pos_emb_fu_486_ap_return_24 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_apply_rotary_pos_emb_fu_486_ap_return_25 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_apply_rotary_pos_emb_fu_486_ap_return_26 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_apply_rotary_pos_emb_fu_486_ap_return_27 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_apply_rotary_pos_emb_fu_486_ap_return_28 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_apply_rotary_pos_emb_fu_486_ap_return_29 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_apply_rotary_pos_emb_fu_486_ap_return_30 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_apply_rotary_pos_emb_fu_486_ap_return_31 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_quantize_activation_fu_526_ap_start : STD_LOGIC;
    signal grp_quantize_activation_fu_526_ap_idle : STD_LOGIC;
    signal grp_quantize_activation_fu_526_input_0_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_quantize_activation_fu_526_input_0_V_ce0 : STD_LOGIC;
    signal grp_quantize_activation_fu_526_input_0_V_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_quantize_activation_fu_526_input_0_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_quantize_activation_fu_526_input_0_V_ce1 : STD_LOGIC;
    signal grp_quantize_activation_fu_526_input_0_V_q1 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_quantize_activation_fu_526_ap_return_0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_quantize_activation_fu_526_ap_return_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_quantize_activation_fu_526_ap_return_2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_quantize_activation_fu_526_ap_return_3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_quantize_activation_fu_526_ap_return_4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_quantize_activation_fu_526_ap_return_5 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_quantize_activation_fu_526_ap_return_6 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_quantize_activation_fu_526_ap_return_7 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_quantize_activation_fu_526_ap_return_8 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_quantize_activation_fu_526_ap_return_9 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_quantize_activation_fu_526_ap_return_10 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_quantize_activation_fu_526_ap_return_11 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_quantize_activation_fu_526_ap_return_12 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_quantize_activation_fu_526_ap_return_13 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_quantize_activation_fu_526_ap_return_14 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_quantize_activation_fu_526_ap_return_15 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_quantize_activation_fu_526_ap_return_16 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_softmax_1_4_3_s_fu_532_ap_start : STD_LOGIC;
    signal grp_softmax_1_4_3_s_fu_532_ap_idle : STD_LOGIC;
    signal grp_softmax_1_4_3_s_fu_532_ap_return_0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_softmax_1_4_3_s_fu_532_ap_return_1 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_softmax_1_4_3_s_fu_532_ap_return_2 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_softmax_1_4_3_s_fu_532_ap_return_3 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_softmax_1_4_3_s_fu_532_ap_return_4 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_softmax_1_4_3_s_fu_532_ap_return_5 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_softmax_1_4_3_s_fu_532_ap_return_6 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_softmax_1_4_3_s_fu_532_ap_return_7 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_softmax_1_4_3_s_fu_532_ap_return_8 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_softmax_1_4_3_s_fu_532_ap_return_9 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_softmax_1_4_3_s_fu_532_ap_return_10 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_softmax_1_4_3_s_fu_532_ap_return_11 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_GEMM_3D_float_fu_552_ap_start : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_552_ap_done : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_552_ap_idle : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_552_ap_ready : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_552_input_2_0_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_GEMM_3D_float_fu_552_input_2_0_V_ce0 : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_552_input_2_0_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_GEMM_3D_float_fu_552_input_2_0_V_ce1 : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_552_input_2_1_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_GEMM_3D_float_fu_552_input_2_1_V_ce0 : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_552_input_2_1_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_GEMM_3D_float_fu_552_input_2_1_V_ce1 : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_552_input_2_2_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_GEMM_3D_float_fu_552_input_2_2_V_ce0 : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_552_input_2_2_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_GEMM_3D_float_fu_552_input_2_2_V_ce1 : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_552_ap_return_0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_GEMM_3D_float_fu_552_ap_return_1 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_GEMM_3D_float_fu_552_ap_return_2 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_GEMM_3D_float_fu_552_ap_return_3 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_GEMM_3D_float_fu_552_ap_return_4 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_GEMM_3D_float_fu_552_ap_return_5 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_GEMM_3D_float_fu_552_ap_return_6 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_GEMM_3D_float_fu_552_ap_return_7 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_GEMM_3D_float_fu_552_ap_return_8 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_GEMM_3D_float_fu_552_ap_return_9 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_GEMM_3D_float_fu_552_ap_return_10 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_GEMM_3D_float_fu_552_ap_return_11 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_GEMM_3D_float_1_fu_575_ap_start : STD_LOGIC;
    signal grp_GEMM_3D_float_1_fu_575_ap_idle : STD_LOGIC;
    signal grp_GEMM_3D_float_1_fu_575_input_2_0_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_GEMM_3D_float_1_fu_575_input_2_0_V_ce0 : STD_LOGIC;
    signal grp_GEMM_3D_float_1_fu_575_input_2_0_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_GEMM_3D_float_1_fu_575_input_2_0_V_ce1 : STD_LOGIC;
    signal grp_GEMM_3D_float_1_fu_575_input_2_1_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_GEMM_3D_float_1_fu_575_input_2_1_V_ce0 : STD_LOGIC;
    signal grp_GEMM_3D_float_1_fu_575_input_2_1_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_GEMM_3D_float_1_fu_575_input_2_1_V_ce1 : STD_LOGIC;
    signal grp_GEMM_3D_float_1_fu_575_input_2_2_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_GEMM_3D_float_1_fu_575_input_2_2_V_ce0 : STD_LOGIC;
    signal grp_GEMM_3D_float_1_fu_575_input_2_2_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_GEMM_3D_float_1_fu_575_input_2_2_V_ce1 : STD_LOGIC;
    signal grp_GEMM_3D_float_1_fu_575_input_2_3_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_GEMM_3D_float_1_fu_575_input_2_3_V_ce0 : STD_LOGIC;
    signal grp_GEMM_3D_float_1_fu_575_input_2_3_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_GEMM_3D_float_1_fu_575_input_2_3_V_ce1 : STD_LOGIC;
    signal grp_GEMM_3D_float_1_fu_575_ap_return_0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_GEMM_3D_float_1_fu_575_ap_return_1 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_GEMM_3D_float_1_fu_575_ap_return_2 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_GEMM_3D_float_1_fu_575_ap_return_3 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_GEMM_3D_float_1_fu_575_ap_return_4 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_GEMM_3D_float_1_fu_575_ap_return_5 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_GEMM_3D_float_1_fu_575_ap_return_6 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_GEMM_3D_float_1_fu_575_ap_return_7 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_GEMM_3D_float_1_fu_575_ap_return_8 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_GEMM_3D_float_1_fu_575_ap_return_9 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_GEMM_3D_float_1_fu_575_ap_return_10 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_GEMM_3D_float_1_fu_575_ap_return_11 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_GEMM_3D_float_1_fu_575_ap_return_12 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_GEMM_3D_float_1_fu_575_ap_return_13 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_GEMM_3D_float_1_fu_575_ap_return_14 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_GEMM_3D_float_1_fu_575_ap_return_15 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_cache_update_fu_595_ap_start : STD_LOGIC;
    signal grp_cache_update_fu_595_ap_done : STD_LOGIC;
    signal grp_cache_update_fu_595_ap_idle : STD_LOGIC;
    signal grp_cache_update_fu_595_ap_ready : STD_LOGIC;
    signal grp_cache_update_fu_595_cache_in_0_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cache_update_fu_595_cache_in_0_V_ce0 : STD_LOGIC;
    signal grp_cache_update_fu_595_cache_in_0_V_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_cache_update_fu_595_cache_in_1_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cache_update_fu_595_cache_in_1_V_ce0 : STD_LOGIC;
    signal grp_cache_update_fu_595_cache_in_1_V_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_cache_update_fu_595_cache_in_2_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cache_update_fu_595_cache_in_2_V_ce0 : STD_LOGIC;
    signal grp_cache_update_fu_595_cache_in_2_V_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_cache_update_fu_595_cache_in_3_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cache_update_fu_595_cache_in_3_V_ce0 : STD_LOGIC;
    signal grp_cache_update_fu_595_cache_in_3_V_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_cache_update_fu_595_cache_out_0_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cache_update_fu_595_cache_out_0_V_ce0 : STD_LOGIC;
    signal grp_cache_update_fu_595_cache_out_0_V_we0 : STD_LOGIC;
    signal grp_cache_update_fu_595_cache_out_0_V_d0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_cache_update_fu_595_cache_out_1_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cache_update_fu_595_cache_out_1_V_ce0 : STD_LOGIC;
    signal grp_cache_update_fu_595_cache_out_1_V_we0 : STD_LOGIC;
    signal grp_cache_update_fu_595_cache_out_1_V_d0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_cache_update_fu_595_cache_out_2_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cache_update_fu_595_cache_out_2_V_ce0 : STD_LOGIC;
    signal grp_cache_update_fu_595_cache_out_2_V_we0 : STD_LOGIC;
    signal grp_cache_update_fu_595_cache_out_2_V_d0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_cache_update_fu_595_cache_out_3_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cache_update_fu_595_cache_out_3_V_ce0 : STD_LOGIC;
    signal grp_cache_update_fu_595_cache_out_3_V_we0 : STD_LOGIC;
    signal grp_cache_update_fu_595_cache_out_3_V_d0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_cache_update_fu_595_p_read : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_cache_update_fu_595_p_read1 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_cache_update_fu_595_p_read2 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_cache_update_fu_595_p_read3 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_cache_update_fu_595_p_read4 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_cache_update_fu_595_p_read5 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_cache_update_fu_595_p_read6 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_cache_update_fu_595_p_read7 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_cache_update_fu_595_p_read8 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_cache_update_fu_595_p_read9 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_cache_update_fu_595_p_read10 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_cache_update_fu_595_p_read11 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_cache_update_fu_595_p_read12 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_cache_update_fu_595_p_read13 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_cache_update_fu_595_p_read14 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_cache_update_fu_595_p_read15 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_reshape_2D_to_3D_fu_631_ap_start : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_631_ap_idle : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_631_input_0_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_reshape_2D_to_3D_fu_631_input_0_V_ce0 : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_631_input_0_V_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_reshape_2D_to_3D_fu_631_ap_return_0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_reshape_2D_to_3D_fu_631_ap_return_1 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_reshape_2D_to_3D_fu_631_ap_return_2 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_reshape_2D_to_3D_fu_631_ap_return_3 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_reshape_2D_to_3D_fu_631_ap_return_4 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_reshape_2D_to_3D_fu_631_ap_return_5 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_reshape_2D_to_3D_fu_631_ap_return_6 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_reshape_2D_to_3D_fu_631_ap_return_7 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_reshape_2D_to_3D_fu_631_ap_return_8 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_reshape_2D_to_3D_fu_631_ap_return_9 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_reshape_2D_to_3D_fu_631_ap_return_10 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_reshape_2D_to_3D_fu_631_ap_return_11 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_reshape_2D_to_3D_fu_631_ap_return_12 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_reshape_2D_to_3D_fu_631_ap_return_13 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_reshape_2D_to_3D_fu_631_ap_return_14 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_reshape_2D_to_3D_fu_631_ap_return_15 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_reshape_2D_to_3D_fu_636_ap_start : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_636_ap_idle : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_636_input_0_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_reshape_2D_to_3D_fu_636_input_0_V_ce0 : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_636_ap_return_0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_reshape_2D_to_3D_fu_636_ap_return_1 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_reshape_2D_to_3D_fu_636_ap_return_2 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_reshape_2D_to_3D_fu_636_ap_return_3 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_reshape_2D_to_3D_fu_636_ap_return_4 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_reshape_2D_to_3D_fu_636_ap_return_5 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_reshape_2D_to_3D_fu_636_ap_return_6 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_reshape_2D_to_3D_fu_636_ap_return_7 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_reshape_2D_to_3D_fu_636_ap_return_8 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_reshape_2D_to_3D_fu_636_ap_return_9 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_reshape_2D_to_3D_fu_636_ap_return_10 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_reshape_2D_to_3D_fu_636_ap_return_11 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_reshape_2D_to_3D_fu_636_ap_return_12 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_reshape_2D_to_3D_fu_636_ap_return_13 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_reshape_2D_to_3D_fu_636_ap_return_14 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_reshape_2D_to_3D_fu_636_ap_return_15 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_transpose_last_two_d_fu_641_ap_start : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_641_ap_done : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_641_ap_idle : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_641_ap_ready : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_641_input_0_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_transpose_last_two_d_fu_641_input_0_V_ce0 : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_641_input_1_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_transpose_last_two_d_fu_641_input_1_V_ce0 : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_641_input_2_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_transpose_last_two_d_fu_641_input_2_V_ce0 : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_641_input_3_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_transpose_last_two_d_fu_641_input_3_V_ce0 : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_641_output_0_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_transpose_last_two_d_fu_641_output_0_V_ce0 : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_641_output_0_V_we0 : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_641_output_0_V_d0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_transpose_last_two_d_fu_641_output_0_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_transpose_last_two_d_fu_641_output_0_V_ce1 : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_641_output_0_V_we1 : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_641_output_0_V_d1 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_transpose_last_two_d_fu_641_output_1_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_transpose_last_two_d_fu_641_output_1_V_ce0 : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_641_output_1_V_we0 : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_641_output_1_V_d0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_transpose_last_two_d_fu_641_output_1_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_transpose_last_two_d_fu_641_output_1_V_ce1 : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_641_output_1_V_we1 : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_641_output_1_V_d1 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_transpose_last_two_d_fu_641_output_2_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_transpose_last_two_d_fu_641_output_2_V_ce0 : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_641_output_2_V_we0 : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_641_output_2_V_d0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_transpose_last_two_d_fu_641_output_2_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_transpose_last_two_d_fu_641_output_2_V_ce1 : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_641_output_2_V_we1 : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_641_output_2_V_d1 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_init_2d_mem_fu_652_ap_start : STD_LOGIC;
    signal grp_init_2d_mem_fu_652_ap_idle : STD_LOGIC;
    signal grp_init_2d_mem_fu_652_mem_0_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_init_2d_mem_fu_652_mem_0_V_ce0 : STD_LOGIC;
    signal grp_init_2d_mem_fu_652_mem_0_V_we0 : STD_LOGIC;
    signal grp_init_2d_mem_fu_652_mem_0_V_d0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_init_2d_mem_fu_658_ap_start : STD_LOGIC;
    signal grp_init_2d_mem_fu_658_ap_done : STD_LOGIC;
    signal grp_init_2d_mem_fu_658_ap_idle : STD_LOGIC;
    signal grp_init_2d_mem_fu_658_ap_ready : STD_LOGIC;
    signal grp_init_2d_mem_fu_658_mem_0_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_init_2d_mem_fu_658_mem_0_V_ce0 : STD_LOGIC;
    signal grp_init_2d_mem_fu_658_mem_0_V_we0 : STD_LOGIC;
    signal grp_init_2d_mem_fu_658_mem_0_V_d0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_init_2d_mem_fu_664_ap_start : STD_LOGIC;
    signal grp_init_2d_mem_fu_664_ap_done : STD_LOGIC;
    signal grp_init_2d_mem_fu_664_ap_idle : STD_LOGIC;
    signal grp_init_2d_mem_fu_664_ap_ready : STD_LOGIC;
    signal grp_init_2d_mem_fu_664_mem_0_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_init_2d_mem_fu_664_mem_0_V_ce0 : STD_LOGIC;
    signal grp_init_2d_mem_fu_664_mem_0_V_we0 : STD_LOGIC;
    signal grp_init_2d_mem_fu_664_mem_0_V_d0 : STD_LOGIC_VECTOR (39 downto 0);
    signal h_0_reg_317 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal d_0_0_reg_328 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal attn_weights_V_0_0_0_3_reg_340 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_0_1_0_3_reg_350 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_0_2_0_3_reg_360 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_0_3_0_3_reg_370 : STD_LOGIC_VECTOR (39 downto 0);
    signal h85_0_reg_380 : STD_LOGIC_VECTOR (2 downto 0);
    signal h100_0_0_reg_391 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal grp_linear_forward_no_mu_fu_402_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal grp_linear_forward_no_mu_fu_434_ap_start_reg : STD_LOGIC := '0';
    signal grp_rms_norm_16_s_fu_477_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal grp_apply_rotary_pos_emb_fu_486_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_quantize_activation_fu_526_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal grp_softmax_1_4_3_s_fu_532_ap_start_reg : STD_LOGIC := '0';
    signal grp_GEMM_3D_float_fu_552_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal grp_GEMM_3D_float_1_fu_575_ap_start_reg : STD_LOGIC := '0';
    signal grp_cache_update_fu_595_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal grp_reshape_2D_to_3D_fu_631_ap_start_reg : STD_LOGIC := '0';
    signal grp_reshape_2D_to_3D_fu_636_ap_start_reg : STD_LOGIC := '0';
    signal grp_transpose_last_two_d_fu_641_ap_start_reg : STD_LOGIC := '0';
    signal grp_init_2d_mem_fu_652_ap_start_reg : STD_LOGIC := '0';
    signal grp_init_2d_mem_fu_658_ap_start_reg : STD_LOGIC := '0';
    signal grp_init_2d_mem_fu_664_ap_start_reg : STD_LOGIC := '0';
    signal zext_ln220_fu_1965_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln220_1_fu_1987_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln220_2_fu_2008_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln220_3_fu_2028_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal attn_weights_V_0_3_0_6_fu_172 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_0_3_0_5_fu_1599_p6 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_0_2_0_6_fu_176 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_0_2_0_5_fu_1609_p6 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_0_1_0_6_fu_180 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_0_1_0_5_fu_1619_p6 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_0_0_0_6_fu_184 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_0_0_0_5_fu_1629_p6 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_2_3_0_4_fu_188 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_2_3_0_3_fu_1659_p6 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_2_2_0_4_fu_192 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_2_2_0_3_fu_1672_p6 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_2_1_0_4_fu_196 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_2_1_0_3_fu_1685_p6 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_2_0_0_4_fu_200 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_2_0_0_3_fu_1698_p6 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_1_3_0_4_fu_204 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_1_3_0_3_fu_1527_p6 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_1_2_0_4_fu_208 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_1_2_0_3_fu_1540_p6 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_1_1_0_4_fu_212 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_1_1_0_3_fu_1553_p6 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_1_0_0_4_fu_216 : STD_LOGIC_VECTOR (39 downto 0);
    signal attn_weights_V_1_0_0_3_fu_1566_p6 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_12_fu_1970_p6 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_13_fu_1992_p6 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_14_fu_2013_p6 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_15_fu_2033_p6 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_11_fu_1436_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_11_fu_1436_p14 : STD_LOGIC_VECTOR (39 downto 0);
    signal shl_ln_fu_1466_p3 : STD_LOGIC_VECTOR (55 downto 0);
    signal sub_ln1148_fu_1482_p2 : STD_LOGIC_VECTOR (55 downto 0);
    signal zext_ln1148_fu_1508_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sub_ln1148_2_fu_1514_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal zext_ln1148_2_fu_1511_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal select_ln1148_fu_1520_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal trunc_ln1265_1_fu_1743_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_10_fu_1747_p6 : STD_LOGIC_VECTOR (39 downto 0);
    signal or_ln220_fu_1981_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln220_1_fu_2003_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln220_2_fu_2023_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal ap_block_state6_on_subcall_done : BOOLEAN;
    signal ap_block_state13_on_subcall_done : BOOLEAN;
    signal ap_block_state25_on_subcall_done : BOOLEAN;

    component linear_forward_no_mu IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read9 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read10 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read11 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read12 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read13 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read14 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read15 : IN STD_LOGIC_VECTOR (7 downto 0);
        output_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        output_0_V_ce0 : OUT STD_LOGIC;
        output_0_V_we0 : OUT STD_LOGIC;
        output_0_V_d0 : OUT STD_LOGIC_VECTOR (39 downto 0);
        output_0_V_q0 : IN STD_LOGIC_VECTOR (39 downto 0);
        scales_0_V_read : IN STD_LOGIC_VECTOR (39 downto 0);
        packed_weights_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        packed_weights_0_ce0 : OUT STD_LOGIC;
        packed_weights_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        packed_weights_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        packed_weights_1_ce0 : OUT STD_LOGIC;
        packed_weights_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        packed_weights_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        packed_weights_2_ce0 : OUT STD_LOGIC;
        packed_weights_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        packed_weights_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        packed_weights_3_ce0 : OUT STD_LOGIC;
        packed_weights_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        w_scale_V : IN STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component rms_norm_16_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_0_V_ce0 : OUT STD_LOGIC;
        input_0_V_q0 : IN STD_LOGIC_VECTOR (39 downto 0);
        input_0_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_0_V_ce1 : OUT STD_LOGIC;
        input_0_V_we1 : OUT STD_LOGIC;
        input_0_V_d1 : OUT STD_LOGIC_VECTOR (39 downto 0);
        weight_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        weight_V_ce0 : OUT STD_LOGIC;
        weight_V_q0 : IN STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component apply_rotary_pos_emb IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read9 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read10 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read11 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read12 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read13 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read14 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read15 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read16 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read17 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read18 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read19 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read20 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read21 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read22 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read23 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read24 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read25 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read26 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read27 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read28 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read29 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read30 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read31 : IN STD_LOGIC_VECTOR (39 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component quantize_activation IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_0_V_ce0 : OUT STD_LOGIC;
        input_0_V_q0 : IN STD_LOGIC_VECTOR (39 downto 0);
        input_0_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_0_V_ce1 : OUT STD_LOGIC;
        input_0_V_q1 : IN STD_LOGIC_VECTOR (39 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component softmax_1_4_3_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read9 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read10 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read11 : IN STD_LOGIC_VECTOR (39 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component GEMM_3D_float IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read9 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read10 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read11 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read12 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read13 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read14 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read15 : IN STD_LOGIC_VECTOR (39 downto 0);
        input_2_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_2_0_V_ce0 : OUT STD_LOGIC;
        input_2_0_V_q0 : IN STD_LOGIC_VECTOR (39 downto 0);
        input_2_0_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_2_0_V_ce1 : OUT STD_LOGIC;
        input_2_0_V_q1 : IN STD_LOGIC_VECTOR (39 downto 0);
        input_2_1_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_2_1_V_ce0 : OUT STD_LOGIC;
        input_2_1_V_q0 : IN STD_LOGIC_VECTOR (39 downto 0);
        input_2_1_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_2_1_V_ce1 : OUT STD_LOGIC;
        input_2_1_V_q1 : IN STD_LOGIC_VECTOR (39 downto 0);
        input_2_2_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_2_2_V_ce0 : OUT STD_LOGIC;
        input_2_2_V_q0 : IN STD_LOGIC_VECTOR (39 downto 0);
        input_2_2_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_2_2_V_ce1 : OUT STD_LOGIC;
        input_2_2_V_q1 : IN STD_LOGIC_VECTOR (39 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component GEMM_3D_float_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read9 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read10 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read11 : IN STD_LOGIC_VECTOR (39 downto 0);
        input_2_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_2_0_V_ce0 : OUT STD_LOGIC;
        input_2_0_V_q0 : IN STD_LOGIC_VECTOR (39 downto 0);
        input_2_0_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_2_0_V_ce1 : OUT STD_LOGIC;
        input_2_0_V_q1 : IN STD_LOGIC_VECTOR (39 downto 0);
        input_2_1_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_2_1_V_ce0 : OUT STD_LOGIC;
        input_2_1_V_q0 : IN STD_LOGIC_VECTOR (39 downto 0);
        input_2_1_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_2_1_V_ce1 : OUT STD_LOGIC;
        input_2_1_V_q1 : IN STD_LOGIC_VECTOR (39 downto 0);
        input_2_2_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_2_2_V_ce0 : OUT STD_LOGIC;
        input_2_2_V_q0 : IN STD_LOGIC_VECTOR (39 downto 0);
        input_2_2_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_2_2_V_ce1 : OUT STD_LOGIC;
        input_2_2_V_q1 : IN STD_LOGIC_VECTOR (39 downto 0);
        input_2_3_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_2_3_V_ce0 : OUT STD_LOGIC;
        input_2_3_V_q0 : IN STD_LOGIC_VECTOR (39 downto 0);
        input_2_3_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_2_3_V_ce1 : OUT STD_LOGIC;
        input_2_3_V_q1 : IN STD_LOGIC_VECTOR (39 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component cache_update IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        cache_in_0_V_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        cache_in_0_V_ce0 : OUT STD_LOGIC;
        cache_in_0_V_q0 : IN STD_LOGIC_VECTOR (39 downto 0);
        cache_in_1_V_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        cache_in_1_V_ce0 : OUT STD_LOGIC;
        cache_in_1_V_q0 : IN STD_LOGIC_VECTOR (39 downto 0);
        cache_in_2_V_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        cache_in_2_V_ce0 : OUT STD_LOGIC;
        cache_in_2_V_q0 : IN STD_LOGIC_VECTOR (39 downto 0);
        cache_in_3_V_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        cache_in_3_V_ce0 : OUT STD_LOGIC;
        cache_in_3_V_q0 : IN STD_LOGIC_VECTOR (39 downto 0);
        cache_out_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        cache_out_0_V_ce0 : OUT STD_LOGIC;
        cache_out_0_V_we0 : OUT STD_LOGIC;
        cache_out_0_V_d0 : OUT STD_LOGIC_VECTOR (39 downto 0);
        cache_out_1_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        cache_out_1_V_ce0 : OUT STD_LOGIC;
        cache_out_1_V_we0 : OUT STD_LOGIC;
        cache_out_1_V_d0 : OUT STD_LOGIC_VECTOR (39 downto 0);
        cache_out_2_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        cache_out_2_V_ce0 : OUT STD_LOGIC;
        cache_out_2_V_we0 : OUT STD_LOGIC;
        cache_out_2_V_d0 : OUT STD_LOGIC_VECTOR (39 downto 0);
        cache_out_3_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        cache_out_3_V_ce0 : OUT STD_LOGIC;
        cache_out_3_V_we0 : OUT STD_LOGIC;
        cache_out_3_V_d0 : OUT STD_LOGIC_VECTOR (39 downto 0);
        p_read : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read9 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read10 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read11 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read12 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read13 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read14 : IN STD_LOGIC_VECTOR (39 downto 0);
        p_read15 : IN STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component reshape_2D_to_3D IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_0_V_ce0 : OUT STD_LOGIC;
        input_0_V_q0 : IN STD_LOGIC_VECTOR (39 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (39 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component transpose_last_two_d IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_0_V_ce0 : OUT STD_LOGIC;
        input_0_V_q0 : IN STD_LOGIC_VECTOR (39 downto 0);
        input_1_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_1_V_ce0 : OUT STD_LOGIC;
        input_1_V_q0 : IN STD_LOGIC_VECTOR (39 downto 0);
        input_2_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_2_V_ce0 : OUT STD_LOGIC;
        input_2_V_q0 : IN STD_LOGIC_VECTOR (39 downto 0);
        input_3_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        input_3_V_ce0 : OUT STD_LOGIC;
        input_3_V_q0 : IN STD_LOGIC_VECTOR (39 downto 0);
        output_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        output_0_V_ce0 : OUT STD_LOGIC;
        output_0_V_we0 : OUT STD_LOGIC;
        output_0_V_d0 : OUT STD_LOGIC_VECTOR (39 downto 0);
        output_0_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        output_0_V_ce1 : OUT STD_LOGIC;
        output_0_V_we1 : OUT STD_LOGIC;
        output_0_V_d1 : OUT STD_LOGIC_VECTOR (39 downto 0);
        output_1_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        output_1_V_ce0 : OUT STD_LOGIC;
        output_1_V_we0 : OUT STD_LOGIC;
        output_1_V_d0 : OUT STD_LOGIC_VECTOR (39 downto 0);
        output_1_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        output_1_V_ce1 : OUT STD_LOGIC;
        output_1_V_we1 : OUT STD_LOGIC;
        output_1_V_d1 : OUT STD_LOGIC_VECTOR (39 downto 0);
        output_2_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        output_2_V_ce0 : OUT STD_LOGIC;
        output_2_V_we0 : OUT STD_LOGIC;
        output_2_V_d0 : OUT STD_LOGIC_VECTOR (39 downto 0);
        output_2_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        output_2_V_ce1 : OUT STD_LOGIC;
        output_2_V_we1 : OUT STD_LOGIC;
        output_2_V_d1 : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component init_2d_mem IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        mem_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        mem_0_V_ce0 : OUT STD_LOGIC;
        mem_0_V_we0 : OUT STD_LOGIC;
        mem_0_V_d0 : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component dut_mux_124_40_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (39 downto 0);
        din1 : IN STD_LOGIC_VECTOR (39 downto 0);
        din2 : IN STD_LOGIC_VECTOR (39 downto 0);
        din3 : IN STD_LOGIC_VECTOR (39 downto 0);
        din4 : IN STD_LOGIC_VECTOR (39 downto 0);
        din5 : IN STD_LOGIC_VECTOR (39 downto 0);
        din6 : IN STD_LOGIC_VECTOR (39 downto 0);
        din7 : IN STD_LOGIC_VECTOR (39 downto 0);
        din8 : IN STD_LOGIC_VECTOR (39 downto 0);
        din9 : IN STD_LOGIC_VECTOR (39 downto 0);
        din10 : IN STD_LOGIC_VECTOR (39 downto 0);
        din11 : IN STD_LOGIC_VECTOR (39 downto 0);
        din12 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component dut_mux_42_40_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (39 downto 0);
        din1 : IN STD_LOGIC_VECTOR (39 downto 0);
        din2 : IN STD_LOGIC_VECTOR (39 downto 0);
        din3 : IN STD_LOGIC_VECTOR (39 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component attention_ln_weigibs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component attention_q_weighjbC IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component attention_q_weighkbM IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component attention_q_weighlbW IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component attention_q_weighmb6 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component attention_k_weighncg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component attention_k_weighocq IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component attention_k_weighpcA IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component attention_k_weighqcK IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component attention_v_weighrcU IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component attention_v_weighsc4 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component attention_v_weightde IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component attention_v_weighudo IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component attention_k_cachevdy IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component attention_k_cachewdI IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component attention_k_cachexdS IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component attention_k_cacheyd2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component attention_v_cachezec IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component attention_v_cacheAem IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component attention_v_cacheBew IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component attention_v_cacheCeG IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component attention_ln_weigDeQ IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component attention_o_weighEe0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component attention_o_weighFfa IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component attention_o_weighGfk IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component attention_o_weighHfu IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component attention_q_proj_IfE IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (39 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component attention_k_cacheLf8 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (39 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component attention_v_cachePgM IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (39 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (39 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component attention_k_proj_Thq IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (39 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (39 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (39 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;



begin
    ln_weight_in_V_U : component attention_ln_weigibs
    generic map (
        DataWidth => 40,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_rms_norm_16_s_fu_477_weight_V_address0,
        ce0 => ln_weight_in_V_ce0,
        q0 => ln_weight_in_V_q0);

    q_weights_0_U : component attention_q_weighjbC
    generic map (
        DataWidth => 8,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_linear_forward_no_mu_fu_402_packed_weights_0_address0,
        ce0 => q_weights_0_ce0,
        q0 => q_weights_0_q0);

    q_weights_1_U : component attention_q_weighkbM
    generic map (
        DataWidth => 8,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_linear_forward_no_mu_fu_402_packed_weights_1_address0,
        ce0 => q_weights_1_ce0,
        q0 => q_weights_1_q0);

    q_weights_2_U : component attention_q_weighlbW
    generic map (
        DataWidth => 8,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_linear_forward_no_mu_fu_402_packed_weights_2_address0,
        ce0 => q_weights_2_ce0,
        q0 => q_weights_2_q0);

    q_weights_3_U : component attention_q_weighmb6
    generic map (
        DataWidth => 8,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_linear_forward_no_mu_fu_402_packed_weights_3_address0,
        ce0 => q_weights_3_ce0,
        q0 => q_weights_3_q0);

    k_weights_0_U : component attention_k_weighncg
    generic map (
        DataWidth => 8,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_linear_forward_no_mu_fu_434_packed_weights_0_address0,
        ce0 => grp_linear_forward_no_mu_fu_434_packed_weights_0_ce0,
        q0 => k_weights_0_q0);

    k_weights_1_U : component attention_k_weighocq
    generic map (
        DataWidth => 8,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_linear_forward_no_mu_fu_434_packed_weights_1_address0,
        ce0 => grp_linear_forward_no_mu_fu_434_packed_weights_1_ce0,
        q0 => k_weights_1_q0);

    k_weights_2_U : component attention_k_weighpcA
    generic map (
        DataWidth => 8,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_linear_forward_no_mu_fu_434_packed_weights_2_address0,
        ce0 => grp_linear_forward_no_mu_fu_434_packed_weights_2_ce0,
        q0 => k_weights_2_q0);

    k_weights_3_U : component attention_k_weighqcK
    generic map (
        DataWidth => 8,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_linear_forward_no_mu_fu_434_packed_weights_3_address0,
        ce0 => grp_linear_forward_no_mu_fu_434_packed_weights_3_ce0,
        q0 => k_weights_3_q0);

    v_weights_0_U : component attention_v_weighrcU
    generic map (
        DataWidth => 8,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_linear_forward_no_mu_fu_402_packed_weights_0_address0,
        ce0 => v_weights_0_ce0,
        q0 => v_weights_0_q0);

    v_weights_1_U : component attention_v_weighsc4
    generic map (
        DataWidth => 8,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_linear_forward_no_mu_fu_402_packed_weights_1_address0,
        ce0 => v_weights_1_ce0,
        q0 => v_weights_1_q0);

    v_weights_2_U : component attention_v_weightde
    generic map (
        DataWidth => 8,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_linear_forward_no_mu_fu_402_packed_weights_2_address0,
        ce0 => v_weights_2_ce0,
        q0 => v_weights_2_q0);

    v_weights_3_U : component attention_v_weighudo
    generic map (
        DataWidth => 8,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_linear_forward_no_mu_fu_402_packed_weights_3_address0,
        ce0 => v_weights_3_ce0,
        q0 => v_weights_3_q0);

    k_cache_V_0_U : component attention_k_cachevdy
    generic map (
        DataWidth => 40,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_cache_update_fu_595_cache_in_0_V_address0,
        ce0 => k_cache_V_0_ce0,
        q0 => k_cache_V_0_q0);

    k_cache_V_1_U : component attention_k_cachewdI
    generic map (
        DataWidth => 40,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_cache_update_fu_595_cache_in_1_V_address0,
        ce0 => k_cache_V_1_ce0,
        q0 => k_cache_V_1_q0);

    k_cache_V_2_U : component attention_k_cachexdS
    generic map (
        DataWidth => 40,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_cache_update_fu_595_cache_in_2_V_address0,
        ce0 => k_cache_V_2_ce0,
        q0 => k_cache_V_2_q0);

    k_cache_V_3_U : component attention_k_cacheyd2
    generic map (
        DataWidth => 40,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_cache_update_fu_595_cache_in_3_V_address0,
        ce0 => k_cache_V_3_ce0,
        q0 => k_cache_V_3_q0);

    v_cache_V_0_U : component attention_v_cachezec
    generic map (
        DataWidth => 40,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_cache_update_fu_595_cache_in_0_V_address0,
        ce0 => v_cache_V_0_ce0,
        q0 => v_cache_V_0_q0);

    v_cache_V_1_U : component attention_v_cacheAem
    generic map (
        DataWidth => 40,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_cache_update_fu_595_cache_in_1_V_address0,
        ce0 => v_cache_V_1_ce0,
        q0 => v_cache_V_1_q0);

    v_cache_V_2_U : component attention_v_cacheBew
    generic map (
        DataWidth => 40,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_cache_update_fu_595_cache_in_2_V_address0,
        ce0 => v_cache_V_2_ce0,
        q0 => v_cache_V_2_q0);

    v_cache_V_3_U : component attention_v_cacheCeG
    generic map (
        DataWidth => 40,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_cache_update_fu_595_cache_in_3_V_address0,
        ce0 => v_cache_V_3_ce0,
        q0 => v_cache_V_3_q0);

    ln_weight_V_U : component attention_ln_weigDeQ
    generic map (
        DataWidth => 40,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_rms_norm_16_s_fu_477_weight_V_address0,
        ce0 => ln_weight_V_ce0,
        q0 => ln_weight_V_q0);

    o_weights_0_U : component attention_o_weighEe0
    generic map (
        DataWidth => 8,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_linear_forward_no_mu_fu_402_packed_weights_0_address0,
        ce0 => o_weights_0_ce0,
        q0 => o_weights_0_q0);

    o_weights_1_U : component attention_o_weighFfa
    generic map (
        DataWidth => 8,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_linear_forward_no_mu_fu_402_packed_weights_1_address0,
        ce0 => o_weights_1_ce0,
        q0 => o_weights_1_q0);

    o_weights_2_U : component attention_o_weighGfk
    generic map (
        DataWidth => 8,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_linear_forward_no_mu_fu_402_packed_weights_2_address0,
        ce0 => o_weights_2_ce0,
        q0 => o_weights_2_q0);

    o_weights_3_U : component attention_o_weighHfu
    generic map (
        DataWidth => 8,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_linear_forward_no_mu_fu_402_packed_weights_3_address0,
        ce0 => o_weights_3_ce0,
        q0 => o_weights_3_q0);

    q_proj_re_0_V_U : component attention_q_proj_IfE
    generic map (
        DataWidth => 40,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => q_proj_re_0_V_address0,
        ce0 => q_proj_re_0_V_ce0,
        we0 => q_proj_re_0_V_we0,
        d0 => q_proj_re_0_V_d0,
        q0 => q_proj_re_0_V_q0);

    k_proj_re_0_V_U : component attention_q_proj_IfE
    generic map (
        DataWidth => 40,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_proj_re_0_V_address0,
        ce0 => k_proj_re_0_V_ce0,
        we0 => k_proj_re_0_V_we0,
        d0 => k_proj_re_0_V_d0,
        q0 => k_proj_re_0_V_q0);

    v_proj_re_0_V_U : component attention_q_proj_IfE
    generic map (
        DataWidth => 40,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => v_proj_re_0_V_address0,
        ce0 => v_proj_re_0_V_ce0,
        we0 => v_proj_re_0_V_we0,
        d0 => v_proj_re_0_V_d0,
        q0 => v_proj_re_0_V_q0);

    k_cache_upd_0_V_U : component attention_k_cacheLf8
    generic map (
        DataWidth => 40,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_cache_upd_0_V_address0,
        ce0 => k_cache_upd_0_V_ce0,
        we0 => k_cache_upd_0_V_we0,
        d0 => grp_cache_update_fu_595_cache_out_0_V_d0,
        q0 => k_cache_upd_0_V_q0);

    k_cache_upd_1_V_U : component attention_k_cacheLf8
    generic map (
        DataWidth => 40,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_cache_upd_1_V_address0,
        ce0 => k_cache_upd_1_V_ce0,
        we0 => k_cache_upd_1_V_we0,
        d0 => grp_cache_update_fu_595_cache_out_1_V_d0,
        q0 => k_cache_upd_1_V_q0);

    k_cache_upd_2_V_U : component attention_k_cacheLf8
    generic map (
        DataWidth => 40,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_cache_upd_2_V_address0,
        ce0 => k_cache_upd_2_V_ce0,
        we0 => k_cache_upd_2_V_we0,
        d0 => grp_cache_update_fu_595_cache_out_2_V_d0,
        q0 => k_cache_upd_2_V_q0);

    k_cache_upd_3_V_U : component attention_k_cacheLf8
    generic map (
        DataWidth => 40,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_cache_upd_3_V_address0,
        ce0 => k_cache_upd_3_V_ce0,
        we0 => k_cache_upd_3_V_we0,
        d0 => grp_cache_update_fu_595_cache_out_3_V_d0,
        q0 => k_cache_upd_3_V_q0);

    v_cache_upd_0_V_U : component attention_v_cachePgM
    generic map (
        DataWidth => 40,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => v_cache_upd_0_V_address0,
        ce0 => v_cache_upd_0_V_ce0,
        we0 => v_cache_upd_0_V_we0,
        d0 => grp_cache_update_fu_595_cache_out_0_V_d0,
        q0 => v_cache_upd_0_V_q0,
        address1 => grp_GEMM_3D_float_1_fu_575_input_2_0_V_address1,
        ce1 => v_cache_upd_0_V_ce1,
        q1 => v_cache_upd_0_V_q1);

    v_cache_upd_1_V_U : component attention_v_cachePgM
    generic map (
        DataWidth => 40,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => v_cache_upd_1_V_address0,
        ce0 => v_cache_upd_1_V_ce0,
        we0 => v_cache_upd_1_V_we0,
        d0 => grp_cache_update_fu_595_cache_out_1_V_d0,
        q0 => v_cache_upd_1_V_q0,
        address1 => grp_GEMM_3D_float_1_fu_575_input_2_1_V_address1,
        ce1 => v_cache_upd_1_V_ce1,
        q1 => v_cache_upd_1_V_q1);

    v_cache_upd_2_V_U : component attention_v_cachePgM
    generic map (
        DataWidth => 40,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => v_cache_upd_2_V_address0,
        ce0 => v_cache_upd_2_V_ce0,
        we0 => v_cache_upd_2_V_we0,
        d0 => grp_cache_update_fu_595_cache_out_2_V_d0,
        q0 => v_cache_upd_2_V_q0,
        address1 => grp_GEMM_3D_float_1_fu_575_input_2_2_V_address1,
        ce1 => v_cache_upd_2_V_ce1,
        q1 => v_cache_upd_2_V_q1);

    v_cache_upd_3_V_U : component attention_v_cachePgM
    generic map (
        DataWidth => 40,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => v_cache_upd_3_V_address0,
        ce0 => v_cache_upd_3_V_ce0,
        we0 => v_cache_upd_3_V_we0,
        d0 => grp_cache_update_fu_595_cache_out_3_V_d0,
        q0 => v_cache_upd_3_V_q0,
        address1 => grp_GEMM_3D_float_1_fu_575_input_2_3_V_address1,
        ce1 => v_cache_upd_3_V_ce1,
        q1 => v_cache_upd_3_V_q1);

    k_proj_transposed_0_U : component attention_k_proj_Thq
    generic map (
        DataWidth => 40,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_proj_transposed_0_address0,
        ce0 => k_proj_transposed_0_ce0,
        we0 => k_proj_transposed_0_we0,
        d0 => grp_transpose_last_two_d_fu_641_output_0_V_d0,
        q0 => k_proj_transposed_0_q0,
        address1 => k_proj_transposed_0_address1,
        ce1 => k_proj_transposed_0_ce1,
        we1 => k_proj_transposed_0_we1,
        d1 => grp_transpose_last_two_d_fu_641_output_0_V_d1,
        q1 => k_proj_transposed_0_q1);

    k_proj_transposed_1_U : component attention_k_proj_Thq
    generic map (
        DataWidth => 40,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_proj_transposed_1_address0,
        ce0 => k_proj_transposed_1_ce0,
        we0 => k_proj_transposed_1_we0,
        d0 => grp_transpose_last_two_d_fu_641_output_1_V_d0,
        q0 => k_proj_transposed_1_q0,
        address1 => k_proj_transposed_1_address1,
        ce1 => k_proj_transposed_1_ce1,
        we1 => k_proj_transposed_1_we1,
        d1 => grp_transpose_last_two_d_fu_641_output_1_V_d1,
        q1 => k_proj_transposed_1_q1);

    k_proj_transposed_2_U : component attention_k_proj_Thq
    generic map (
        DataWidth => 40,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_proj_transposed_2_address0,
        ce0 => k_proj_transposed_2_ce0,
        we0 => k_proj_transposed_2_we0,
        d0 => grp_transpose_last_two_d_fu_641_output_2_V_d0,
        q0 => k_proj_transposed_2_q0,
        address1 => k_proj_transposed_2_address1,
        ce1 => k_proj_transposed_2_ce1,
        we1 => k_proj_transposed_2_we1,
        d1 => grp_transpose_last_two_d_fu_641_output_2_V_d1,
        q1 => k_proj_transposed_2_q1);

    attn_output_2D_0_V_U : component attention_k_proj_Thq
    generic map (
        DataWidth => 40,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => attn_output_2D_0_V_address0,
        ce0 => attn_output_2D_0_V_ce0,
        we0 => attn_output_2D_0_V_we0,
        d0 => attn_output_2D_0_V_d0,
        q0 => attn_output_2D_0_V_q0,
        address1 => attn_output_2D_0_V_address1,
        ce1 => attn_output_2D_0_V_ce1,
        we1 => attn_output_2D_0_V_we1,
        d1 => attn_output_2D_0_V_d1,
        q1 => attn_output_2D_0_V_q1);

    grp_linear_forward_no_mu_fu_402 : component linear_forward_no_mu
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_linear_forward_no_mu_fu_402_ap_start,
        ap_done => grp_linear_forward_no_mu_fu_402_ap_done,
        ap_idle => grp_linear_forward_no_mu_fu_402_ap_idle,
        ap_ready => grp_linear_forward_no_mu_fu_402_ap_ready,
        p_read => reg_853,
        p_read1 => reg_859,
        p_read2 => reg_865,
        p_read3 => reg_871,
        p_read4 => reg_877,
        p_read5 => reg_883,
        p_read6 => reg_889,
        p_read7 => reg_895,
        p_read8 => reg_901,
        p_read9 => reg_907,
        p_read10 => reg_913,
        p_read11 => reg_919,
        p_read12 => reg_925,
        p_read13 => reg_931,
        p_read14 => reg_937,
        p_read15 => reg_943,
        output_0_V_address0 => grp_linear_forward_no_mu_fu_402_output_0_V_address0,
        output_0_V_ce0 => grp_linear_forward_no_mu_fu_402_output_0_V_ce0,
        output_0_V_we0 => grp_linear_forward_no_mu_fu_402_output_0_V_we0,
        output_0_V_d0 => grp_linear_forward_no_mu_fu_402_output_0_V_d0,
        output_0_V_q0 => grp_linear_forward_no_mu_fu_402_output_0_V_q0,
        scales_0_V_read => reg_847,
        packed_weights_0_address0 => grp_linear_forward_no_mu_fu_402_packed_weights_0_address0,
        packed_weights_0_ce0 => grp_linear_forward_no_mu_fu_402_packed_weights_0_ce0,
        packed_weights_0_q0 => grp_linear_forward_no_mu_fu_402_packed_weights_0_q0,
        packed_weights_1_address0 => grp_linear_forward_no_mu_fu_402_packed_weights_1_address0,
        packed_weights_1_ce0 => grp_linear_forward_no_mu_fu_402_packed_weights_1_ce0,
        packed_weights_1_q0 => grp_linear_forward_no_mu_fu_402_packed_weights_1_q0,
        packed_weights_2_address0 => grp_linear_forward_no_mu_fu_402_packed_weights_2_address0,
        packed_weights_2_ce0 => grp_linear_forward_no_mu_fu_402_packed_weights_2_ce0,
        packed_weights_2_q0 => grp_linear_forward_no_mu_fu_402_packed_weights_2_q0,
        packed_weights_3_address0 => grp_linear_forward_no_mu_fu_402_packed_weights_3_address0,
        packed_weights_3_ce0 => grp_linear_forward_no_mu_fu_402_packed_weights_3_ce0,
        packed_weights_3_q0 => grp_linear_forward_no_mu_fu_402_packed_weights_3_q0,
        w_scale_V => grp_linear_forward_no_mu_fu_402_w_scale_V);

    grp_linear_forward_no_mu_fu_434 : component linear_forward_no_mu
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_linear_forward_no_mu_fu_434_ap_start,
        ap_done => grp_linear_forward_no_mu_fu_434_ap_done,
        ap_idle => grp_linear_forward_no_mu_fu_434_ap_idle,
        ap_ready => grp_linear_forward_no_mu_fu_434_ap_ready,
        p_read => reg_853,
        p_read1 => reg_859,
        p_read2 => reg_865,
        p_read3 => reg_871,
        p_read4 => reg_877,
        p_read5 => reg_883,
        p_read6 => reg_889,
        p_read7 => reg_895,
        p_read8 => reg_901,
        p_read9 => reg_907,
        p_read10 => reg_913,
        p_read11 => reg_919,
        p_read12 => reg_925,
        p_read13 => reg_931,
        p_read14 => reg_937,
        p_read15 => reg_943,
        output_0_V_address0 => grp_linear_forward_no_mu_fu_434_output_0_V_address0,
        output_0_V_ce0 => grp_linear_forward_no_mu_fu_434_output_0_V_ce0,
        output_0_V_we0 => grp_linear_forward_no_mu_fu_434_output_0_V_we0,
        output_0_V_d0 => grp_linear_forward_no_mu_fu_434_output_0_V_d0,
        output_0_V_q0 => k_proj_re_0_V_q0,
        scales_0_V_read => reg_847,
        packed_weights_0_address0 => grp_linear_forward_no_mu_fu_434_packed_weights_0_address0,
        packed_weights_0_ce0 => grp_linear_forward_no_mu_fu_434_packed_weights_0_ce0,
        packed_weights_0_q0 => k_weights_0_q0,
        packed_weights_1_address0 => grp_linear_forward_no_mu_fu_434_packed_weights_1_address0,
        packed_weights_1_ce0 => grp_linear_forward_no_mu_fu_434_packed_weights_1_ce0,
        packed_weights_1_q0 => k_weights_1_q0,
        packed_weights_2_address0 => grp_linear_forward_no_mu_fu_434_packed_weights_2_address0,
        packed_weights_2_ce0 => grp_linear_forward_no_mu_fu_434_packed_weights_2_ce0,
        packed_weights_2_q0 => k_weights_2_q0,
        packed_weights_3_address0 => grp_linear_forward_no_mu_fu_434_packed_weights_3_address0,
        packed_weights_3_ce0 => grp_linear_forward_no_mu_fu_434_packed_weights_3_ce0,
        packed_weights_3_q0 => k_weights_3_q0,
        w_scale_V => ap_const_lv22_12D593);

    grp_rms_norm_16_s_fu_477 : component rms_norm_16_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_rms_norm_16_s_fu_477_ap_start,
        ap_done => grp_rms_norm_16_s_fu_477_ap_done,
        ap_idle => grp_rms_norm_16_s_fu_477_ap_idle,
        ap_ready => grp_rms_norm_16_s_fu_477_ap_ready,
        input_0_V_address0 => grp_rms_norm_16_s_fu_477_input_0_V_address0,
        input_0_V_ce0 => grp_rms_norm_16_s_fu_477_input_0_V_ce0,
        input_0_V_q0 => grp_rms_norm_16_s_fu_477_input_0_V_q0,
        input_0_V_address1 => grp_rms_norm_16_s_fu_477_input_0_V_address1,
        input_0_V_ce1 => grp_rms_norm_16_s_fu_477_input_0_V_ce1,
        input_0_V_we1 => grp_rms_norm_16_s_fu_477_input_0_V_we1,
        input_0_V_d1 => grp_rms_norm_16_s_fu_477_input_0_V_d1,
        weight_V_address0 => grp_rms_norm_16_s_fu_477_weight_V_address0,
        weight_V_ce0 => grp_rms_norm_16_s_fu_477_weight_V_ce0,
        weight_V_q0 => grp_rms_norm_16_s_fu_477_weight_V_q0);

    grp_apply_rotary_pos_emb_fu_486 : component apply_rotary_pos_emb
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_apply_rotary_pos_emb_fu_486_ap_start,
        ap_done => grp_apply_rotary_pos_emb_fu_486_ap_done,
        ap_idle => grp_apply_rotary_pos_emb_fu_486_ap_idle,
        ap_ready => grp_apply_rotary_pos_emb_fu_486_ap_ready,
        p_read => reg_949,
        p_read1 => reg_955,
        p_read2 => reg_961,
        p_read3 => reg_967,
        p_read4 => reg_973,
        p_read5 => reg_979,
        p_read6 => reg_985,
        p_read7 => reg_991,
        p_read8 => reg_997,
        p_read9 => reg_1003,
        p_read10 => reg_1009,
        p_read11 => reg_1015,
        p_read12 => reg_1021,
        p_read13 => reg_1027,
        p_read14 => reg_1033,
        p_read15 => reg_1039,
        p_read16 => k_proj_V_0_reg_2127,
        p_read17 => k_proj_V_0_1_reg_2132,
        p_read18 => k_proj_V_0_2_reg_2137,
        p_read19 => k_proj_V_0_3_reg_2142,
        p_read20 => k_proj_V_1_reg_2147,
        p_read21 => k_proj_V_1_1_reg_2152,
        p_read22 => k_proj_V_1_2_reg_2157,
        p_read23 => k_proj_V_1_3_reg_2162,
        p_read24 => k_proj_V_2_reg_2167,
        p_read25 => k_proj_V_2_1_reg_2172,
        p_read26 => k_proj_V_2_2_reg_2177,
        p_read27 => k_proj_V_2_3_reg_2182,
        p_read28 => k_proj_V_3_reg_2187,
        p_read29 => k_proj_V_3_1_reg_2192,
        p_read30 => k_proj_V_3_2_reg_2197,
        p_read31 => k_proj_V_3_3_reg_2202,
        ap_return_0 => grp_apply_rotary_pos_emb_fu_486_ap_return_0,
        ap_return_1 => grp_apply_rotary_pos_emb_fu_486_ap_return_1,
        ap_return_2 => grp_apply_rotary_pos_emb_fu_486_ap_return_2,
        ap_return_3 => grp_apply_rotary_pos_emb_fu_486_ap_return_3,
        ap_return_4 => grp_apply_rotary_pos_emb_fu_486_ap_return_4,
        ap_return_5 => grp_apply_rotary_pos_emb_fu_486_ap_return_5,
        ap_return_6 => grp_apply_rotary_pos_emb_fu_486_ap_return_6,
        ap_return_7 => grp_apply_rotary_pos_emb_fu_486_ap_return_7,
        ap_return_8 => grp_apply_rotary_pos_emb_fu_486_ap_return_8,
        ap_return_9 => grp_apply_rotary_pos_emb_fu_486_ap_return_9,
        ap_return_10 => grp_apply_rotary_pos_emb_fu_486_ap_return_10,
        ap_return_11 => grp_apply_rotary_pos_emb_fu_486_ap_return_11,
        ap_return_12 => grp_apply_rotary_pos_emb_fu_486_ap_return_12,
        ap_return_13 => grp_apply_rotary_pos_emb_fu_486_ap_return_13,
        ap_return_14 => grp_apply_rotary_pos_emb_fu_486_ap_return_14,
        ap_return_15 => grp_apply_rotary_pos_emb_fu_486_ap_return_15,
        ap_return_16 => grp_apply_rotary_pos_emb_fu_486_ap_return_16,
        ap_return_17 => grp_apply_rotary_pos_emb_fu_486_ap_return_17,
        ap_return_18 => grp_apply_rotary_pos_emb_fu_486_ap_return_18,
        ap_return_19 => grp_apply_rotary_pos_emb_fu_486_ap_return_19,
        ap_return_20 => grp_apply_rotary_pos_emb_fu_486_ap_return_20,
        ap_return_21 => grp_apply_rotary_pos_emb_fu_486_ap_return_21,
        ap_return_22 => grp_apply_rotary_pos_emb_fu_486_ap_return_22,
        ap_return_23 => grp_apply_rotary_pos_emb_fu_486_ap_return_23,
        ap_return_24 => grp_apply_rotary_pos_emb_fu_486_ap_return_24,
        ap_return_25 => grp_apply_rotary_pos_emb_fu_486_ap_return_25,
        ap_return_26 => grp_apply_rotary_pos_emb_fu_486_ap_return_26,
        ap_return_27 => grp_apply_rotary_pos_emb_fu_486_ap_return_27,
        ap_return_28 => grp_apply_rotary_pos_emb_fu_486_ap_return_28,
        ap_return_29 => grp_apply_rotary_pos_emb_fu_486_ap_return_29,
        ap_return_30 => grp_apply_rotary_pos_emb_fu_486_ap_return_30,
        ap_return_31 => grp_apply_rotary_pos_emb_fu_486_ap_return_31);

    grp_quantize_activation_fu_526 : component quantize_activation
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_quantize_activation_fu_526_ap_start,
        ap_done => grp_quantize_activation_fu_526_ap_done,
        ap_idle => grp_quantize_activation_fu_526_ap_idle,
        ap_ready => grp_quantize_activation_fu_526_ap_ready,
        input_0_V_address0 => grp_quantize_activation_fu_526_input_0_V_address0,
        input_0_V_ce0 => grp_quantize_activation_fu_526_input_0_V_ce0,
        input_0_V_q0 => grp_quantize_activation_fu_526_input_0_V_q0,
        input_0_V_address1 => grp_quantize_activation_fu_526_input_0_V_address1,
        input_0_V_ce1 => grp_quantize_activation_fu_526_input_0_V_ce1,
        input_0_V_q1 => grp_quantize_activation_fu_526_input_0_V_q1,
        ap_return_0 => grp_quantize_activation_fu_526_ap_return_0,
        ap_return_1 => grp_quantize_activation_fu_526_ap_return_1,
        ap_return_2 => grp_quantize_activation_fu_526_ap_return_2,
        ap_return_3 => grp_quantize_activation_fu_526_ap_return_3,
        ap_return_4 => grp_quantize_activation_fu_526_ap_return_4,
        ap_return_5 => grp_quantize_activation_fu_526_ap_return_5,
        ap_return_6 => grp_quantize_activation_fu_526_ap_return_6,
        ap_return_7 => grp_quantize_activation_fu_526_ap_return_7,
        ap_return_8 => grp_quantize_activation_fu_526_ap_return_8,
        ap_return_9 => grp_quantize_activation_fu_526_ap_return_9,
        ap_return_10 => grp_quantize_activation_fu_526_ap_return_10,
        ap_return_11 => grp_quantize_activation_fu_526_ap_return_11,
        ap_return_12 => grp_quantize_activation_fu_526_ap_return_12,
        ap_return_13 => grp_quantize_activation_fu_526_ap_return_13,
        ap_return_14 => grp_quantize_activation_fu_526_ap_return_14,
        ap_return_15 => grp_quantize_activation_fu_526_ap_return_15,
        ap_return_16 => grp_quantize_activation_fu_526_ap_return_16);

    grp_softmax_1_4_3_s_fu_532 : component softmax_1_4_3_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_softmax_1_4_3_s_fu_532_ap_start,
        ap_done => grp_softmax_1_4_3_s_fu_532_ap_done,
        ap_idle => grp_softmax_1_4_3_s_fu_532_ap_idle,
        ap_ready => grp_softmax_1_4_3_s_fu_532_ap_ready,
        p_read => attn_weights_V_0_0_0_3_reg_340,
        p_read1 => attn_weights_V_0_1_0_3_reg_350,
        p_read2 => attn_weights_V_0_2_0_3_reg_360,
        p_read3 => attn_weights_V_0_3_0_3_reg_370,
        p_read4 => reg_1080,
        p_read5 => reg_1075,
        p_read6 => reg_1070,
        p_read7 => reg_1065,
        p_read8 => reg_1060,
        p_read9 => reg_1055,
        p_read10 => reg_1050,
        p_read11 => reg_1045,
        ap_return_0 => grp_softmax_1_4_3_s_fu_532_ap_return_0,
        ap_return_1 => grp_softmax_1_4_3_s_fu_532_ap_return_1,
        ap_return_2 => grp_softmax_1_4_3_s_fu_532_ap_return_2,
        ap_return_3 => grp_softmax_1_4_3_s_fu_532_ap_return_3,
        ap_return_4 => grp_softmax_1_4_3_s_fu_532_ap_return_4,
        ap_return_5 => grp_softmax_1_4_3_s_fu_532_ap_return_5,
        ap_return_6 => grp_softmax_1_4_3_s_fu_532_ap_return_6,
        ap_return_7 => grp_softmax_1_4_3_s_fu_532_ap_return_7,
        ap_return_8 => grp_softmax_1_4_3_s_fu_532_ap_return_8,
        ap_return_9 => grp_softmax_1_4_3_s_fu_532_ap_return_9,
        ap_return_10 => grp_softmax_1_4_3_s_fu_532_ap_return_10,
        ap_return_11 => grp_softmax_1_4_3_s_fu_532_ap_return_11);

    grp_GEMM_3D_float_fu_552 : component GEMM_3D_float
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_GEMM_3D_float_fu_552_ap_start,
        ap_done => grp_GEMM_3D_float_fu_552_ap_done,
        ap_idle => grp_GEMM_3D_float_fu_552_ap_idle,
        ap_ready => grp_GEMM_3D_float_fu_552_ap_ready,
        p_read => q_embed_V_0_reg_2207,
        p_read1 => q_embed_V_0_1_reg_2212,
        p_read2 => q_embed_V_0_2_reg_2217,
        p_read3 => q_embed_V_0_3_reg_2222,
        p_read4 => q_embed_V_1_reg_2227,
        p_read5 => q_embed_V_1_1_reg_2232,
        p_read6 => q_embed_V_1_2_reg_2237,
        p_read7 => q_embed_V_1_3_reg_2242,
        p_read8 => q_embed_V_2_reg_2247,
        p_read9 => q_embed_V_2_1_reg_2252,
        p_read10 => q_embed_V_2_2_reg_2257,
        p_read11 => q_embed_V_2_3_reg_2262,
        p_read12 => q_embed_V_3_reg_2267,
        p_read13 => q_embed_V_3_1_reg_2272,
        p_read14 => q_embed_V_3_2_reg_2277,
        p_read15 => q_embed_V_3_3_reg_2282,
        input_2_0_V_address0 => grp_GEMM_3D_float_fu_552_input_2_0_V_address0,
        input_2_0_V_ce0 => grp_GEMM_3D_float_fu_552_input_2_0_V_ce0,
        input_2_0_V_q0 => k_proj_transposed_0_q0,
        input_2_0_V_address1 => grp_GEMM_3D_float_fu_552_input_2_0_V_address1,
        input_2_0_V_ce1 => grp_GEMM_3D_float_fu_552_input_2_0_V_ce1,
        input_2_0_V_q1 => k_proj_transposed_0_q1,
        input_2_1_V_address0 => grp_GEMM_3D_float_fu_552_input_2_1_V_address0,
        input_2_1_V_ce0 => grp_GEMM_3D_float_fu_552_input_2_1_V_ce0,
        input_2_1_V_q0 => k_proj_transposed_1_q0,
        input_2_1_V_address1 => grp_GEMM_3D_float_fu_552_input_2_1_V_address1,
        input_2_1_V_ce1 => grp_GEMM_3D_float_fu_552_input_2_1_V_ce1,
        input_2_1_V_q1 => k_proj_transposed_1_q1,
        input_2_2_V_address0 => grp_GEMM_3D_float_fu_552_input_2_2_V_address0,
        input_2_2_V_ce0 => grp_GEMM_3D_float_fu_552_input_2_2_V_ce0,
        input_2_2_V_q0 => k_proj_transposed_2_q0,
        input_2_2_V_address1 => grp_GEMM_3D_float_fu_552_input_2_2_V_address1,
        input_2_2_V_ce1 => grp_GEMM_3D_float_fu_552_input_2_2_V_ce1,
        input_2_2_V_q1 => k_proj_transposed_2_q1,
        ap_return_0 => grp_GEMM_3D_float_fu_552_ap_return_0,
        ap_return_1 => grp_GEMM_3D_float_fu_552_ap_return_1,
        ap_return_2 => grp_GEMM_3D_float_fu_552_ap_return_2,
        ap_return_3 => grp_GEMM_3D_float_fu_552_ap_return_3,
        ap_return_4 => grp_GEMM_3D_float_fu_552_ap_return_4,
        ap_return_5 => grp_GEMM_3D_float_fu_552_ap_return_5,
        ap_return_6 => grp_GEMM_3D_float_fu_552_ap_return_6,
        ap_return_7 => grp_GEMM_3D_float_fu_552_ap_return_7,
        ap_return_8 => grp_GEMM_3D_float_fu_552_ap_return_8,
        ap_return_9 => grp_GEMM_3D_float_fu_552_ap_return_9,
        ap_return_10 => grp_GEMM_3D_float_fu_552_ap_return_10,
        ap_return_11 => grp_GEMM_3D_float_fu_552_ap_return_11);

    grp_GEMM_3D_float_1_fu_575 : component GEMM_3D_float_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_GEMM_3D_float_1_fu_575_ap_start,
        ap_done => grp_GEMM_3D_float_1_fu_575_ap_done,
        ap_idle => grp_GEMM_3D_float_1_fu_575_ap_idle,
        ap_ready => grp_GEMM_3D_float_1_fu_575_ap_ready,
        p_read => attn_weights_V_0_0_0_7_reg_2491,
        p_read1 => attn_weights_V_0_1_0_7_reg_2496,
        p_read2 => attn_weights_V_0_2_0_7_reg_2501,
        p_read3 => attn_weights_V_0_3_0_7_reg_2506,
        p_read4 => attn_weights_V_1_0_0_5_reg_2511,
        p_read5 => attn_weights_V_1_1_0_5_reg_2516,
        p_read6 => attn_weights_V_1_2_0_5_reg_2521,
        p_read7 => attn_weights_V_1_3_0_5_reg_2526,
        p_read8 => attn_weights_V_2_0_0_5_reg_2531,
        p_read9 => attn_weights_V_2_1_0_5_reg_2536,
        p_read10 => attn_weights_V_2_2_0_5_reg_2541,
        p_read11 => attn_weights_V_2_3_0_5_reg_2546,
        input_2_0_V_address0 => grp_GEMM_3D_float_1_fu_575_input_2_0_V_address0,
        input_2_0_V_ce0 => grp_GEMM_3D_float_1_fu_575_input_2_0_V_ce0,
        input_2_0_V_q0 => v_cache_upd_0_V_q0,
        input_2_0_V_address1 => grp_GEMM_3D_float_1_fu_575_input_2_0_V_address1,
        input_2_0_V_ce1 => grp_GEMM_3D_float_1_fu_575_input_2_0_V_ce1,
        input_2_0_V_q1 => v_cache_upd_0_V_q1,
        input_2_1_V_address0 => grp_GEMM_3D_float_1_fu_575_input_2_1_V_address0,
        input_2_1_V_ce0 => grp_GEMM_3D_float_1_fu_575_input_2_1_V_ce0,
        input_2_1_V_q0 => v_cache_upd_1_V_q0,
        input_2_1_V_address1 => grp_GEMM_3D_float_1_fu_575_input_2_1_V_address1,
        input_2_1_V_ce1 => grp_GEMM_3D_float_1_fu_575_input_2_1_V_ce1,
        input_2_1_V_q1 => v_cache_upd_1_V_q1,
        input_2_2_V_address0 => grp_GEMM_3D_float_1_fu_575_input_2_2_V_address0,
        input_2_2_V_ce0 => grp_GEMM_3D_float_1_fu_575_input_2_2_V_ce0,
        input_2_2_V_q0 => v_cache_upd_2_V_q0,
        input_2_2_V_address1 => grp_GEMM_3D_float_1_fu_575_input_2_2_V_address1,
        input_2_2_V_ce1 => grp_GEMM_3D_float_1_fu_575_input_2_2_V_ce1,
        input_2_2_V_q1 => v_cache_upd_2_V_q1,
        input_2_3_V_address0 => grp_GEMM_3D_float_1_fu_575_input_2_3_V_address0,
        input_2_3_V_ce0 => grp_GEMM_3D_float_1_fu_575_input_2_3_V_ce0,
        input_2_3_V_q0 => v_cache_upd_3_V_q0,
        input_2_3_V_address1 => grp_GEMM_3D_float_1_fu_575_input_2_3_V_address1,
        input_2_3_V_ce1 => grp_GEMM_3D_float_1_fu_575_input_2_3_V_ce1,
        input_2_3_V_q1 => v_cache_upd_3_V_q1,
        ap_return_0 => grp_GEMM_3D_float_1_fu_575_ap_return_0,
        ap_return_1 => grp_GEMM_3D_float_1_fu_575_ap_return_1,
        ap_return_2 => grp_GEMM_3D_float_1_fu_575_ap_return_2,
        ap_return_3 => grp_GEMM_3D_float_1_fu_575_ap_return_3,
        ap_return_4 => grp_GEMM_3D_float_1_fu_575_ap_return_4,
        ap_return_5 => grp_GEMM_3D_float_1_fu_575_ap_return_5,
        ap_return_6 => grp_GEMM_3D_float_1_fu_575_ap_return_6,
        ap_return_7 => grp_GEMM_3D_float_1_fu_575_ap_return_7,
        ap_return_8 => grp_GEMM_3D_float_1_fu_575_ap_return_8,
        ap_return_9 => grp_GEMM_3D_float_1_fu_575_ap_return_9,
        ap_return_10 => grp_GEMM_3D_float_1_fu_575_ap_return_10,
        ap_return_11 => grp_GEMM_3D_float_1_fu_575_ap_return_11,
        ap_return_12 => grp_GEMM_3D_float_1_fu_575_ap_return_12,
        ap_return_13 => grp_GEMM_3D_float_1_fu_575_ap_return_13,
        ap_return_14 => grp_GEMM_3D_float_1_fu_575_ap_return_14,
        ap_return_15 => grp_GEMM_3D_float_1_fu_575_ap_return_15);

    grp_cache_update_fu_595 : component cache_update
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cache_update_fu_595_ap_start,
        ap_done => grp_cache_update_fu_595_ap_done,
        ap_idle => grp_cache_update_fu_595_ap_idle,
        ap_ready => grp_cache_update_fu_595_ap_ready,
        cache_in_0_V_address0 => grp_cache_update_fu_595_cache_in_0_V_address0,
        cache_in_0_V_ce0 => grp_cache_update_fu_595_cache_in_0_V_ce0,
        cache_in_0_V_q0 => grp_cache_update_fu_595_cache_in_0_V_q0,
        cache_in_1_V_address0 => grp_cache_update_fu_595_cache_in_1_V_address0,
        cache_in_1_V_ce0 => grp_cache_update_fu_595_cache_in_1_V_ce0,
        cache_in_1_V_q0 => grp_cache_update_fu_595_cache_in_1_V_q0,
        cache_in_2_V_address0 => grp_cache_update_fu_595_cache_in_2_V_address0,
        cache_in_2_V_ce0 => grp_cache_update_fu_595_cache_in_2_V_ce0,
        cache_in_2_V_q0 => grp_cache_update_fu_595_cache_in_2_V_q0,
        cache_in_3_V_address0 => grp_cache_update_fu_595_cache_in_3_V_address0,
        cache_in_3_V_ce0 => grp_cache_update_fu_595_cache_in_3_V_ce0,
        cache_in_3_V_q0 => grp_cache_update_fu_595_cache_in_3_V_q0,
        cache_out_0_V_address0 => grp_cache_update_fu_595_cache_out_0_V_address0,
        cache_out_0_V_ce0 => grp_cache_update_fu_595_cache_out_0_V_ce0,
        cache_out_0_V_we0 => grp_cache_update_fu_595_cache_out_0_V_we0,
        cache_out_0_V_d0 => grp_cache_update_fu_595_cache_out_0_V_d0,
        cache_out_1_V_address0 => grp_cache_update_fu_595_cache_out_1_V_address0,
        cache_out_1_V_ce0 => grp_cache_update_fu_595_cache_out_1_V_ce0,
        cache_out_1_V_we0 => grp_cache_update_fu_595_cache_out_1_V_we0,
        cache_out_1_V_d0 => grp_cache_update_fu_595_cache_out_1_V_d0,
        cache_out_2_V_address0 => grp_cache_update_fu_595_cache_out_2_V_address0,
        cache_out_2_V_ce0 => grp_cache_update_fu_595_cache_out_2_V_ce0,
        cache_out_2_V_we0 => grp_cache_update_fu_595_cache_out_2_V_we0,
        cache_out_2_V_d0 => grp_cache_update_fu_595_cache_out_2_V_d0,
        cache_out_3_V_address0 => grp_cache_update_fu_595_cache_out_3_V_address0,
        cache_out_3_V_ce0 => grp_cache_update_fu_595_cache_out_3_V_ce0,
        cache_out_3_V_we0 => grp_cache_update_fu_595_cache_out_3_V_we0,
        cache_out_3_V_d0 => grp_cache_update_fu_595_cache_out_3_V_d0,
        p_read => grp_cache_update_fu_595_p_read,
        p_read1 => grp_cache_update_fu_595_p_read1,
        p_read2 => grp_cache_update_fu_595_p_read2,
        p_read3 => grp_cache_update_fu_595_p_read3,
        p_read4 => grp_cache_update_fu_595_p_read4,
        p_read5 => grp_cache_update_fu_595_p_read5,
        p_read6 => grp_cache_update_fu_595_p_read6,
        p_read7 => grp_cache_update_fu_595_p_read7,
        p_read8 => grp_cache_update_fu_595_p_read8,
        p_read9 => grp_cache_update_fu_595_p_read9,
        p_read10 => grp_cache_update_fu_595_p_read10,
        p_read11 => grp_cache_update_fu_595_p_read11,
        p_read12 => grp_cache_update_fu_595_p_read12,
        p_read13 => grp_cache_update_fu_595_p_read13,
        p_read14 => grp_cache_update_fu_595_p_read14,
        p_read15 => grp_cache_update_fu_595_p_read15);

    grp_reshape_2D_to_3D_fu_631 : component reshape_2D_to_3D
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_reshape_2D_to_3D_fu_631_ap_start,
        ap_done => grp_reshape_2D_to_3D_fu_631_ap_done,
        ap_idle => grp_reshape_2D_to_3D_fu_631_ap_idle,
        ap_ready => grp_reshape_2D_to_3D_fu_631_ap_ready,
        input_0_V_address0 => grp_reshape_2D_to_3D_fu_631_input_0_V_address0,
        input_0_V_ce0 => grp_reshape_2D_to_3D_fu_631_input_0_V_ce0,
        input_0_V_q0 => grp_reshape_2D_to_3D_fu_631_input_0_V_q0,
        ap_return_0 => grp_reshape_2D_to_3D_fu_631_ap_return_0,
        ap_return_1 => grp_reshape_2D_to_3D_fu_631_ap_return_1,
        ap_return_2 => grp_reshape_2D_to_3D_fu_631_ap_return_2,
        ap_return_3 => grp_reshape_2D_to_3D_fu_631_ap_return_3,
        ap_return_4 => grp_reshape_2D_to_3D_fu_631_ap_return_4,
        ap_return_5 => grp_reshape_2D_to_3D_fu_631_ap_return_5,
        ap_return_6 => grp_reshape_2D_to_3D_fu_631_ap_return_6,
        ap_return_7 => grp_reshape_2D_to_3D_fu_631_ap_return_7,
        ap_return_8 => grp_reshape_2D_to_3D_fu_631_ap_return_8,
        ap_return_9 => grp_reshape_2D_to_3D_fu_631_ap_return_9,
        ap_return_10 => grp_reshape_2D_to_3D_fu_631_ap_return_10,
        ap_return_11 => grp_reshape_2D_to_3D_fu_631_ap_return_11,
        ap_return_12 => grp_reshape_2D_to_3D_fu_631_ap_return_12,
        ap_return_13 => grp_reshape_2D_to_3D_fu_631_ap_return_13,
        ap_return_14 => grp_reshape_2D_to_3D_fu_631_ap_return_14,
        ap_return_15 => grp_reshape_2D_to_3D_fu_631_ap_return_15);

    grp_reshape_2D_to_3D_fu_636 : component reshape_2D_to_3D
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_reshape_2D_to_3D_fu_636_ap_start,
        ap_done => grp_reshape_2D_to_3D_fu_636_ap_done,
        ap_idle => grp_reshape_2D_to_3D_fu_636_ap_idle,
        ap_ready => grp_reshape_2D_to_3D_fu_636_ap_ready,
        input_0_V_address0 => grp_reshape_2D_to_3D_fu_636_input_0_V_address0,
        input_0_V_ce0 => grp_reshape_2D_to_3D_fu_636_input_0_V_ce0,
        input_0_V_q0 => k_proj_re_0_V_q0,
        ap_return_0 => grp_reshape_2D_to_3D_fu_636_ap_return_0,
        ap_return_1 => grp_reshape_2D_to_3D_fu_636_ap_return_1,
        ap_return_2 => grp_reshape_2D_to_3D_fu_636_ap_return_2,
        ap_return_3 => grp_reshape_2D_to_3D_fu_636_ap_return_3,
        ap_return_4 => grp_reshape_2D_to_3D_fu_636_ap_return_4,
        ap_return_5 => grp_reshape_2D_to_3D_fu_636_ap_return_5,
        ap_return_6 => grp_reshape_2D_to_3D_fu_636_ap_return_6,
        ap_return_7 => grp_reshape_2D_to_3D_fu_636_ap_return_7,
        ap_return_8 => grp_reshape_2D_to_3D_fu_636_ap_return_8,
        ap_return_9 => grp_reshape_2D_to_3D_fu_636_ap_return_9,
        ap_return_10 => grp_reshape_2D_to_3D_fu_636_ap_return_10,
        ap_return_11 => grp_reshape_2D_to_3D_fu_636_ap_return_11,
        ap_return_12 => grp_reshape_2D_to_3D_fu_636_ap_return_12,
        ap_return_13 => grp_reshape_2D_to_3D_fu_636_ap_return_13,
        ap_return_14 => grp_reshape_2D_to_3D_fu_636_ap_return_14,
        ap_return_15 => grp_reshape_2D_to_3D_fu_636_ap_return_15);

    grp_transpose_last_two_d_fu_641 : component transpose_last_two_d
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_transpose_last_two_d_fu_641_ap_start,
        ap_done => grp_transpose_last_two_d_fu_641_ap_done,
        ap_idle => grp_transpose_last_two_d_fu_641_ap_idle,
        ap_ready => grp_transpose_last_two_d_fu_641_ap_ready,
        input_0_V_address0 => grp_transpose_last_two_d_fu_641_input_0_V_address0,
        input_0_V_ce0 => grp_transpose_last_two_d_fu_641_input_0_V_ce0,
        input_0_V_q0 => k_cache_upd_0_V_q0,
        input_1_V_address0 => grp_transpose_last_two_d_fu_641_input_1_V_address0,
        input_1_V_ce0 => grp_transpose_last_two_d_fu_641_input_1_V_ce0,
        input_1_V_q0 => k_cache_upd_1_V_q0,
        input_2_V_address0 => grp_transpose_last_two_d_fu_641_input_2_V_address0,
        input_2_V_ce0 => grp_transpose_last_two_d_fu_641_input_2_V_ce0,
        input_2_V_q0 => k_cache_upd_2_V_q0,
        input_3_V_address0 => grp_transpose_last_two_d_fu_641_input_3_V_address0,
        input_3_V_ce0 => grp_transpose_last_two_d_fu_641_input_3_V_ce0,
        input_3_V_q0 => k_cache_upd_3_V_q0,
        output_0_V_address0 => grp_transpose_last_two_d_fu_641_output_0_V_address0,
        output_0_V_ce0 => grp_transpose_last_two_d_fu_641_output_0_V_ce0,
        output_0_V_we0 => grp_transpose_last_two_d_fu_641_output_0_V_we0,
        output_0_V_d0 => grp_transpose_last_two_d_fu_641_output_0_V_d0,
        output_0_V_address1 => grp_transpose_last_two_d_fu_641_output_0_V_address1,
        output_0_V_ce1 => grp_transpose_last_two_d_fu_641_output_0_V_ce1,
        output_0_V_we1 => grp_transpose_last_two_d_fu_641_output_0_V_we1,
        output_0_V_d1 => grp_transpose_last_two_d_fu_641_output_0_V_d1,
        output_1_V_address0 => grp_transpose_last_two_d_fu_641_output_1_V_address0,
        output_1_V_ce0 => grp_transpose_last_two_d_fu_641_output_1_V_ce0,
        output_1_V_we0 => grp_transpose_last_two_d_fu_641_output_1_V_we0,
        output_1_V_d0 => grp_transpose_last_two_d_fu_641_output_1_V_d0,
        output_1_V_address1 => grp_transpose_last_two_d_fu_641_output_1_V_address1,
        output_1_V_ce1 => grp_transpose_last_two_d_fu_641_output_1_V_ce1,
        output_1_V_we1 => grp_transpose_last_two_d_fu_641_output_1_V_we1,
        output_1_V_d1 => grp_transpose_last_two_d_fu_641_output_1_V_d1,
        output_2_V_address0 => grp_transpose_last_two_d_fu_641_output_2_V_address0,
        output_2_V_ce0 => grp_transpose_last_two_d_fu_641_output_2_V_ce0,
        output_2_V_we0 => grp_transpose_last_two_d_fu_641_output_2_V_we0,
        output_2_V_d0 => grp_transpose_last_two_d_fu_641_output_2_V_d0,
        output_2_V_address1 => grp_transpose_last_two_d_fu_641_output_2_V_address1,
        output_2_V_ce1 => grp_transpose_last_two_d_fu_641_output_2_V_ce1,
        output_2_V_we1 => grp_transpose_last_two_d_fu_641_output_2_V_we1,
        output_2_V_d1 => grp_transpose_last_two_d_fu_641_output_2_V_d1);

    grp_init_2d_mem_fu_652 : component init_2d_mem
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_init_2d_mem_fu_652_ap_start,
        ap_done => grp_init_2d_mem_fu_652_ap_done,
        ap_idle => grp_init_2d_mem_fu_652_ap_idle,
        ap_ready => grp_init_2d_mem_fu_652_ap_ready,
        mem_0_V_address0 => grp_init_2d_mem_fu_652_mem_0_V_address0,
        mem_0_V_ce0 => grp_init_2d_mem_fu_652_mem_0_V_ce0,
        mem_0_V_we0 => grp_init_2d_mem_fu_652_mem_0_V_we0,
        mem_0_V_d0 => grp_init_2d_mem_fu_652_mem_0_V_d0);

    grp_init_2d_mem_fu_658 : component init_2d_mem
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_init_2d_mem_fu_658_ap_start,
        ap_done => grp_init_2d_mem_fu_658_ap_done,
        ap_idle => grp_init_2d_mem_fu_658_ap_idle,
        ap_ready => grp_init_2d_mem_fu_658_ap_ready,
        mem_0_V_address0 => grp_init_2d_mem_fu_658_mem_0_V_address0,
        mem_0_V_ce0 => grp_init_2d_mem_fu_658_mem_0_V_ce0,
        mem_0_V_we0 => grp_init_2d_mem_fu_658_mem_0_V_we0,
        mem_0_V_d0 => grp_init_2d_mem_fu_658_mem_0_V_d0);

    grp_init_2d_mem_fu_664 : component init_2d_mem
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_init_2d_mem_fu_664_ap_start,
        ap_done => grp_init_2d_mem_fu_664_ap_done,
        ap_idle => grp_init_2d_mem_fu_664_ap_idle,
        ap_ready => grp_init_2d_mem_fu_664_ap_ready,
        mem_0_V_address0 => grp_init_2d_mem_fu_664_mem_0_V_address0,
        mem_0_V_ce0 => grp_init_2d_mem_fu_664_mem_0_V_ce0,
        mem_0_V_we0 => grp_init_2d_mem_fu_664_mem_0_V_we0,
        mem_0_V_d0 => grp_init_2d_mem_fu_664_mem_0_V_d0);

    dut_mux_124_40_1_1_U199 : component dut_mux_124_40_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 40,
        din1_WIDTH => 40,
        din2_WIDTH => 40,
        din3_WIDTH => 40,
        din4_WIDTH => 40,
        din5_WIDTH => 40,
        din6_WIDTH => 40,
        din7_WIDTH => 40,
        din8_WIDTH => 40,
        din9_WIDTH => 40,
        din10_WIDTH => 40,
        din11_WIDTH => 40,
        din12_WIDTH => 4,
        dout_WIDTH => 40)
    port map (
        din0 => attn_weights_V_0_0_0_6_fu_184,
        din1 => attn_weights_V_0_1_0_6_fu_180,
        din2 => attn_weights_V_0_2_0_6_fu_176,
        din3 => attn_weights_V_0_3_0_6_fu_172,
        din4 => attn_weights_V_1_0_0_4_fu_216,
        din5 => attn_weights_V_1_1_0_4_fu_212,
        din6 => attn_weights_V_1_2_0_4_fu_208,
        din7 => attn_weights_V_1_3_0_4_fu_204,
        din8 => attn_weights_V_2_0_0_4_fu_200,
        din9 => attn_weights_V_2_1_0_4_fu_196,
        din10 => attn_weights_V_2_2_0_4_fu_192,
        din11 => attn_weights_V_2_3_0_4_fu_188,
        din12 => tmp_11_fu_1436_p13,
        dout => tmp_11_fu_1436_p14);

    dut_mux_42_40_1_1_U200 : component dut_mux_42_40_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 40,
        din1_WIDTH => 40,
        din2_WIDTH => 40,
        din3_WIDTH => 40,
        din4_WIDTH => 2,
        dout_WIDTH => 40)
    port map (
        din0 => reg_1065,
        din1 => reg_1065,
        din2 => reg_1065,
        din3 => select_ln1148_fu_1520_p3,
        din4 => trunc_ln1265_reg_2395,
        dout => attn_weights_V_1_3_0_3_fu_1527_p6);

    dut_mux_42_40_1_1_U201 : component dut_mux_42_40_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 40,
        din1_WIDTH => 40,
        din2_WIDTH => 40,
        din3_WIDTH => 40,
        din4_WIDTH => 2,
        dout_WIDTH => 40)
    port map (
        din0 => reg_1070,
        din1 => reg_1070,
        din2 => select_ln1148_fu_1520_p3,
        din3 => reg_1070,
        din4 => trunc_ln1265_reg_2395,
        dout => attn_weights_V_1_2_0_3_fu_1540_p6);

    dut_mux_42_40_1_1_U202 : component dut_mux_42_40_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 40,
        din1_WIDTH => 40,
        din2_WIDTH => 40,
        din3_WIDTH => 40,
        din4_WIDTH => 2,
        dout_WIDTH => 40)
    port map (
        din0 => reg_1075,
        din1 => select_ln1148_fu_1520_p3,
        din2 => reg_1075,
        din3 => reg_1075,
        din4 => trunc_ln1265_reg_2395,
        dout => attn_weights_V_1_1_0_3_fu_1553_p6);

    dut_mux_42_40_1_1_U203 : component dut_mux_42_40_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 40,
        din1_WIDTH => 40,
        din2_WIDTH => 40,
        din3_WIDTH => 40,
        din4_WIDTH => 2,
        dout_WIDTH => 40)
    port map (
        din0 => select_ln1148_fu_1520_p3,
        din1 => reg_1080,
        din2 => reg_1080,
        din3 => reg_1080,
        din4 => trunc_ln1265_reg_2395,
        dout => attn_weights_V_1_0_0_3_fu_1566_p6);

    dut_mux_42_40_1_1_U204 : component dut_mux_42_40_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 40,
        din1_WIDTH => 40,
        din2_WIDTH => 40,
        din3_WIDTH => 40,
        din4_WIDTH => 2,
        dout_WIDTH => 40)
    port map (
        din0 => attn_weights_V_0_3_0_1_reg_2420,
        din1 => attn_weights_V_0_3_0_1_reg_2420,
        din2 => attn_weights_V_0_3_0_1_reg_2420,
        din3 => select_ln1148_fu_1520_p3,
        din4 => trunc_ln1265_reg_2395,
        dout => attn_weights_V_0_3_0_5_fu_1599_p6);

    dut_mux_42_40_1_1_U205 : component dut_mux_42_40_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 40,
        din1_WIDTH => 40,
        din2_WIDTH => 40,
        din3_WIDTH => 40,
        din4_WIDTH => 2,
        dout_WIDTH => 40)
    port map (
        din0 => attn_weights_V_0_2_0_1_reg_2427,
        din1 => attn_weights_V_0_2_0_1_reg_2427,
        din2 => select_ln1148_fu_1520_p3,
        din3 => attn_weights_V_0_2_0_1_reg_2427,
        din4 => trunc_ln1265_reg_2395,
        dout => attn_weights_V_0_2_0_5_fu_1609_p6);

    dut_mux_42_40_1_1_U206 : component dut_mux_42_40_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 40,
        din1_WIDTH => 40,
        din2_WIDTH => 40,
        din3_WIDTH => 40,
        din4_WIDTH => 2,
        dout_WIDTH => 40)
    port map (
        din0 => attn_weights_V_0_1_0_1_reg_2434,
        din1 => select_ln1148_fu_1520_p3,
        din2 => attn_weights_V_0_1_0_1_reg_2434,
        din3 => attn_weights_V_0_1_0_1_reg_2434,
        din4 => trunc_ln1265_reg_2395,
        dout => attn_weights_V_0_1_0_5_fu_1619_p6);

    dut_mux_42_40_1_1_U207 : component dut_mux_42_40_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 40,
        din1_WIDTH => 40,
        din2_WIDTH => 40,
        din3_WIDTH => 40,
        din4_WIDTH => 2,
        dout_WIDTH => 40)
    port map (
        din0 => select_ln1148_fu_1520_p3,
        din1 => attn_weights_V_0_0_0_1_reg_2441,
        din2 => attn_weights_V_0_0_0_1_reg_2441,
        din3 => attn_weights_V_0_0_0_1_reg_2441,
        din4 => trunc_ln1265_reg_2395,
        dout => attn_weights_V_0_0_0_5_fu_1629_p6);

    dut_mux_42_40_1_1_U208 : component dut_mux_42_40_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 40,
        din1_WIDTH => 40,
        din2_WIDTH => 40,
        din3_WIDTH => 40,
        din4_WIDTH => 2,
        dout_WIDTH => 40)
    port map (
        din0 => reg_1045,
        din1 => reg_1045,
        din2 => reg_1045,
        din3 => select_ln1148_fu_1520_p3,
        din4 => trunc_ln1265_reg_2395,
        dout => attn_weights_V_2_3_0_3_fu_1659_p6);

    dut_mux_42_40_1_1_U209 : component dut_mux_42_40_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 40,
        din1_WIDTH => 40,
        din2_WIDTH => 40,
        din3_WIDTH => 40,
        din4_WIDTH => 2,
        dout_WIDTH => 40)
    port map (
        din0 => reg_1050,
        din1 => reg_1050,
        din2 => select_ln1148_fu_1520_p3,
        din3 => reg_1050,
        din4 => trunc_ln1265_reg_2395,
        dout => attn_weights_V_2_2_0_3_fu_1672_p6);

    dut_mux_42_40_1_1_U210 : component dut_mux_42_40_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 40,
        din1_WIDTH => 40,
        din2_WIDTH => 40,
        din3_WIDTH => 40,
        din4_WIDTH => 2,
        dout_WIDTH => 40)
    port map (
        din0 => reg_1055,
        din1 => select_ln1148_fu_1520_p3,
        din2 => reg_1055,
        din3 => reg_1055,
        din4 => trunc_ln1265_reg_2395,
        dout => attn_weights_V_2_1_0_3_fu_1685_p6);

    dut_mux_42_40_1_1_U211 : component dut_mux_42_40_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 40,
        din1_WIDTH => 40,
        din2_WIDTH => 40,
        din3_WIDTH => 40,
        din4_WIDTH => 2,
        dout_WIDTH => 40)
    port map (
        din0 => select_ln1148_fu_1520_p3,
        din1 => reg_1060,
        din2 => reg_1060,
        din3 => reg_1060,
        din4 => trunc_ln1265_reg_2395,
        dout => attn_weights_V_2_0_0_3_fu_1698_p6);

    dut_mux_42_40_1_1_U212 : component dut_mux_42_40_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 40,
        din1_WIDTH => 40,
        din2_WIDTH => 40,
        din3_WIDTH => 40,
        din4_WIDTH => 2,
        dout_WIDTH => 40)
    port map (
        din0 => attn_weights_V_0_0_0_3_reg_340,
        din1 => attn_weights_V_0_1_0_3_reg_350,
        din2 => attn_weights_V_0_2_0_3_reg_360,
        din3 => attn_weights_V_0_3_0_3_reg_370,
        din4 => trunc_ln1265_1_fu_1743_p1,
        dout => tmp_10_fu_1747_p6);

    dut_mux_42_40_1_1_U213 : component dut_mux_42_40_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 40,
        din1_WIDTH => 40,
        din2_WIDTH => 40,
        din3_WIDTH => 40,
        din4_WIDTH => 2,
        dout_WIDTH => 40)
    port map (
        din0 => attn_weights_V_0_3_0_3_reg_370,
        din1 => attn_weights_V_0_3_0_3_reg_370,
        din2 => attn_weights_V_0_3_0_3_reg_370,
        din3 => tmp_10_fu_1747_p6,
        din4 => trunc_ln1265_1_fu_1743_p1,
        dout => attn_weights_V_0_3_0_4_fu_1761_p6);

    dut_mux_42_40_1_1_U214 : component dut_mux_42_40_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 40,
        din1_WIDTH => 40,
        din2_WIDTH => 40,
        din3_WIDTH => 40,
        din4_WIDTH => 2,
        dout_WIDTH => 40)
    port map (
        din0 => attn_weights_V_0_2_0_3_reg_360,
        din1 => attn_weights_V_0_2_0_3_reg_360,
        din2 => tmp_10_fu_1747_p6,
        din3 => attn_weights_V_0_2_0_3_reg_360,
        din4 => trunc_ln1265_1_fu_1743_p1,
        dout => attn_weights_V_0_2_0_4_fu_1775_p6);

    dut_mux_42_40_1_1_U215 : component dut_mux_42_40_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 40,
        din1_WIDTH => 40,
        din2_WIDTH => 40,
        din3_WIDTH => 40,
        din4_WIDTH => 2,
        dout_WIDTH => 40)
    port map (
        din0 => attn_weights_V_0_1_0_3_reg_350,
        din1 => tmp_10_fu_1747_p6,
        din2 => attn_weights_V_0_1_0_3_reg_350,
        din3 => attn_weights_V_0_1_0_3_reg_350,
        din4 => trunc_ln1265_1_fu_1743_p1,
        dout => attn_weights_V_0_1_0_4_fu_1789_p6);

    dut_mux_42_40_1_1_U216 : component dut_mux_42_40_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 40,
        din1_WIDTH => 40,
        din2_WIDTH => 40,
        din3_WIDTH => 40,
        din4_WIDTH => 2,
        dout_WIDTH => 40)
    port map (
        din0 => tmp_10_fu_1747_p6,
        din1 => attn_weights_V_0_0_0_3_reg_340,
        din2 => attn_weights_V_0_0_0_3_reg_340,
        din3 => attn_weights_V_0_0_0_3_reg_340,
        din4 => trunc_ln1265_1_fu_1743_p1,
        dout => attn_weights_V_0_0_0_4_fu_1803_p6);

    dut_mux_42_40_1_1_U217 : component dut_mux_42_40_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 40,
        din1_WIDTH => 40,
        din2_WIDTH => 40,
        din3_WIDTH => 40,
        din4_WIDTH => 2,
        dout_WIDTH => 40)
    port map (
        din0 => attn_output_0_reg_2551,
        din1 => attn_output_0_1_reg_2556,
        din2 => attn_output_0_2_reg_2561,
        din3 => attn_output_0_3_reg_2566,
        din4 => trunc_ln220_fu_1953_p1,
        dout => tmp_12_fu_1970_p6);

    dut_mux_42_40_1_1_U218 : component dut_mux_42_40_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 40,
        din1_WIDTH => 40,
        din2_WIDTH => 40,
        din3_WIDTH => 40,
        din4_WIDTH => 2,
        dout_WIDTH => 40)
    port map (
        din0 => attn_output_1_reg_2571,
        din1 => attn_output_1_1_reg_2576,
        din2 => attn_output_1_2_reg_2581,
        din3 => attn_output_1_3_reg_2586,
        din4 => trunc_ln220_fu_1953_p1,
        dout => tmp_13_fu_1992_p6);

    dut_mux_42_40_1_1_U219 : component dut_mux_42_40_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 40,
        din1_WIDTH => 40,
        din2_WIDTH => 40,
        din3_WIDTH => 40,
        din4_WIDTH => 2,
        dout_WIDTH => 40)
    port map (
        din0 => attn_output_2_reg_2591,
        din1 => attn_output_2_1_reg_2596,
        din2 => attn_output_2_2_reg_2601,
        din3 => attn_output_2_3_reg_2606,
        din4 => trunc_ln220_reg_2639,
        dout => tmp_14_fu_2013_p6);

    dut_mux_42_40_1_1_U220 : component dut_mux_42_40_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 40,
        din1_WIDTH => 40,
        din2_WIDTH => 40,
        din3_WIDTH => 40,
        din4_WIDTH => 2,
        dout_WIDTH => 40)
    port map (
        din0 => attn_output_3_reg_2611,
        din1 => attn_output_3_1_reg_2616,
        din2 => attn_output_3_2_reg_2621,
        din3 => attn_output_3_3_reg_2626,
        din4 => trunc_ln220_reg_2639,
        dout => tmp_15_fu_2033_p6);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_GEMM_3D_float_1_fu_575_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_GEMM_3D_float_1_fu_575_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state20_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                    grp_GEMM_3D_float_1_fu_575_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_GEMM_3D_float_1_fu_575_ap_ready = ap_const_logic_1)) then 
                    grp_GEMM_3D_float_1_fu_575_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_GEMM_3D_float_fu_552_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_GEMM_3D_float_fu_552_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    grp_GEMM_3D_float_fu_552_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_GEMM_3D_float_fu_552_ap_ready = ap_const_logic_1)) then 
                    grp_GEMM_3D_float_fu_552_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_apply_rotary_pos_emb_fu_486_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_apply_rotary_pos_emb_fu_486_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    grp_apply_rotary_pos_emb_fu_486_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_apply_rotary_pos_emb_fu_486_ap_ready = ap_const_logic_1)) then 
                    grp_apply_rotary_pos_emb_fu_486_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cache_update_fu_595_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_cache_update_fu_595_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_boolean_0 = ap_block_state10_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
                    grp_cache_update_fu_595_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cache_update_fu_595_ap_ready = ap_const_logic_1)) then 
                    grp_cache_update_fu_595_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_init_2d_mem_fu_652_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_init_2d_mem_fu_652_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state24) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((icmp_ln192_fu_1731_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
                    grp_init_2d_mem_fu_652_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_init_2d_mem_fu_652_ap_ready = ap_const_logic_1)) then 
                    grp_init_2d_mem_fu_652_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_init_2d_mem_fu_658_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_init_2d_mem_fu_658_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_init_2d_mem_fu_658_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_init_2d_mem_fu_658_ap_ready = ap_const_logic_1)) then 
                    grp_init_2d_mem_fu_658_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_init_2d_mem_fu_664_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_init_2d_mem_fu_664_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_init_2d_mem_fu_664_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_init_2d_mem_fu_664_ap_ready = ap_const_logic_1)) then 
                    grp_init_2d_mem_fu_664_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_linear_forward_no_mu_fu_402_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_linear_forward_no_mu_fu_402_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                    grp_linear_forward_no_mu_fu_402_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_linear_forward_no_mu_fu_402_ap_ready = ap_const_logic_1)) then 
                    grp_linear_forward_no_mu_fu_402_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_linear_forward_no_mu_fu_434_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_linear_forward_no_mu_fu_434_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_linear_forward_no_mu_fu_434_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_linear_forward_no_mu_fu_434_ap_ready = ap_const_logic_1)) then 
                    grp_linear_forward_no_mu_fu_434_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_quantize_activation_fu_526_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_quantize_activation_fu_526_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    grp_quantize_activation_fu_526_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_quantize_activation_fu_526_ap_ready = ap_const_logic_1)) then 
                    grp_quantize_activation_fu_526_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_reshape_2D_to_3D_fu_631_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_reshape_2D_to_3D_fu_631_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                    grp_reshape_2D_to_3D_fu_631_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_reshape_2D_to_3D_fu_631_ap_ready = ap_const_logic_1)) then 
                    grp_reshape_2D_to_3D_fu_631_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_reshape_2D_to_3D_fu_636_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_reshape_2D_to_3D_fu_636_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_reshape_2D_to_3D_fu_636_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_reshape_2D_to_3D_fu_636_ap_ready = ap_const_logic_1)) then 
                    grp_reshape_2D_to_3D_fu_636_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_rms_norm_16_s_fu_477_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_rms_norm_16_s_fu_477_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state24) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                    grp_rms_norm_16_s_fu_477_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_rms_norm_16_s_fu_477_ap_ready = ap_const_logic_1)) then 
                    grp_rms_norm_16_s_fu_477_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_softmax_1_4_3_s_fu_532_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_softmax_1_4_3_s_fu_532_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln192_fu_1731_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                    grp_softmax_1_4_3_s_fu_532_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_softmax_1_4_3_s_fu_532_ap_ready = ap_const_logic_1)) then 
                    grp_softmax_1_4_3_s_fu_532_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_transpose_last_two_d_fu_641_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_transpose_last_two_d_fu_641_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    grp_transpose_last_two_d_fu_641_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_transpose_last_two_d_fu_641_ap_ready = ap_const_logic_1)) then 
                    grp_transpose_last_two_d_fu_641_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    attn_weights_V_0_0_0_3_reg_340_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln185_fu_1401_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                attn_weights_V_0_0_0_3_reg_340 <= attn_weights_V_0_0_0_6_fu_184;
            elsif (((icmp_ln192_fu_1731_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                attn_weights_V_0_0_0_3_reg_340 <= attn_weights_V_0_0_0_4_fu_1803_p6;
            end if; 
        end if;
    end process;

    attn_weights_V_0_0_0_6_fu_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) and (d_0_0_reg_328 = ap_const_lv2_0))) then 
                attn_weights_V_0_0_0_6_fu_184 <= attn_weights_V_0_0_0_5_fu_1629_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_GEMM_3D_float_fu_552_ap_done = ap_const_logic_1))) then 
                attn_weights_V_0_0_0_6_fu_184 <= grp_GEMM_3D_float_fu_552_ap_return_0;
            end if; 
        end if;
    end process;

    attn_weights_V_0_1_0_3_reg_350_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln185_fu_1401_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                attn_weights_V_0_1_0_3_reg_350 <= attn_weights_V_0_1_0_6_fu_180;
            elsif (((icmp_ln192_fu_1731_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                attn_weights_V_0_1_0_3_reg_350 <= attn_weights_V_0_1_0_4_fu_1789_p6;
            end if; 
        end if;
    end process;

    attn_weights_V_0_1_0_6_fu_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) and (d_0_0_reg_328 = ap_const_lv2_0))) then 
                attn_weights_V_0_1_0_6_fu_180 <= attn_weights_V_0_1_0_5_fu_1619_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_GEMM_3D_float_fu_552_ap_done = ap_const_logic_1))) then 
                attn_weights_V_0_1_0_6_fu_180 <= grp_GEMM_3D_float_fu_552_ap_return_1;
            end if; 
        end if;
    end process;

    attn_weights_V_0_2_0_3_reg_360_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln185_fu_1401_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                attn_weights_V_0_2_0_3_reg_360 <= attn_weights_V_0_2_0_6_fu_176;
            elsif (((icmp_ln192_fu_1731_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                attn_weights_V_0_2_0_3_reg_360 <= attn_weights_V_0_2_0_4_fu_1775_p6;
            end if; 
        end if;
    end process;

    attn_weights_V_0_2_0_6_fu_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) and (d_0_0_reg_328 = ap_const_lv2_0))) then 
                attn_weights_V_0_2_0_6_fu_176 <= attn_weights_V_0_2_0_5_fu_1609_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_GEMM_3D_float_fu_552_ap_done = ap_const_logic_1))) then 
                attn_weights_V_0_2_0_6_fu_176 <= grp_GEMM_3D_float_fu_552_ap_return_2;
            end if; 
        end if;
    end process;

    attn_weights_V_0_3_0_3_reg_370_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln185_fu_1401_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                attn_weights_V_0_3_0_3_reg_370 <= attn_weights_V_0_3_0_6_fu_172;
            elsif (((icmp_ln192_fu_1731_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                attn_weights_V_0_3_0_3_reg_370 <= attn_weights_V_0_3_0_4_fu_1761_p6;
            end if; 
        end if;
    end process;

    attn_weights_V_0_3_0_6_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) and (d_0_0_reg_328 = ap_const_lv2_0))) then 
                attn_weights_V_0_3_0_6_fu_172 <= attn_weights_V_0_3_0_5_fu_1599_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_GEMM_3D_float_fu_552_ap_done = ap_const_logic_1))) then 
                attn_weights_V_0_3_0_6_fu_172 <= grp_GEMM_3D_float_fu_552_ap_return_3;
            end if; 
        end if;
    end process;

    attn_weights_V_1_0_0_4_fu_216_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) and (d_0_0_reg_328 = ap_const_lv2_1))) then 
                attn_weights_V_1_0_0_4_fu_216 <= attn_weights_V_1_0_0_3_fu_1566_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_GEMM_3D_float_fu_552_ap_done = ap_const_logic_1))) then 
                attn_weights_V_1_0_0_4_fu_216 <= grp_GEMM_3D_float_fu_552_ap_return_4;
            end if; 
        end if;
    end process;

    attn_weights_V_1_1_0_4_fu_212_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) and (d_0_0_reg_328 = ap_const_lv2_1))) then 
                attn_weights_V_1_1_0_4_fu_212 <= attn_weights_V_1_1_0_3_fu_1553_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_GEMM_3D_float_fu_552_ap_done = ap_const_logic_1))) then 
                attn_weights_V_1_1_0_4_fu_212 <= grp_GEMM_3D_float_fu_552_ap_return_5;
            end if; 
        end if;
    end process;

    attn_weights_V_1_2_0_4_fu_208_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) and (d_0_0_reg_328 = ap_const_lv2_1))) then 
                attn_weights_V_1_2_0_4_fu_208 <= attn_weights_V_1_2_0_3_fu_1540_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_GEMM_3D_float_fu_552_ap_done = ap_const_logic_1))) then 
                attn_weights_V_1_2_0_4_fu_208 <= grp_GEMM_3D_float_fu_552_ap_return_6;
            end if; 
        end if;
    end process;

    attn_weights_V_1_3_0_4_fu_204_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) and (d_0_0_reg_328 = ap_const_lv2_1))) then 
                attn_weights_V_1_3_0_4_fu_204 <= attn_weights_V_1_3_0_3_fu_1527_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_GEMM_3D_float_fu_552_ap_done = ap_const_logic_1))) then 
                attn_weights_V_1_3_0_4_fu_204 <= grp_GEMM_3D_float_fu_552_ap_return_7;
            end if; 
        end if;
    end process;

    attn_weights_V_2_0_0_4_fu_200_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((d_0_0_reg_328 = ap_const_lv2_1)) and not((d_0_0_reg_328 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                attn_weights_V_2_0_0_4_fu_200 <= attn_weights_V_2_0_0_3_fu_1698_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_GEMM_3D_float_fu_552_ap_done = ap_const_logic_1))) then 
                attn_weights_V_2_0_0_4_fu_200 <= grp_GEMM_3D_float_fu_552_ap_return_8;
            end if; 
        end if;
    end process;

    attn_weights_V_2_1_0_4_fu_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((d_0_0_reg_328 = ap_const_lv2_1)) and not((d_0_0_reg_328 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                attn_weights_V_2_1_0_4_fu_196 <= attn_weights_V_2_1_0_3_fu_1685_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_GEMM_3D_float_fu_552_ap_done = ap_const_logic_1))) then 
                attn_weights_V_2_1_0_4_fu_196 <= grp_GEMM_3D_float_fu_552_ap_return_9;
            end if; 
        end if;
    end process;

    attn_weights_V_2_2_0_4_fu_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((d_0_0_reg_328 = ap_const_lv2_1)) and not((d_0_0_reg_328 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                attn_weights_V_2_2_0_4_fu_192 <= attn_weights_V_2_2_0_3_fu_1672_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_GEMM_3D_float_fu_552_ap_done = ap_const_logic_1))) then 
                attn_weights_V_2_2_0_4_fu_192 <= grp_GEMM_3D_float_fu_552_ap_return_10;
            end if; 
        end if;
    end process;

    attn_weights_V_2_3_0_4_fu_188_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((d_0_0_reg_328 = ap_const_lv2_1)) and not((d_0_0_reg_328 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                attn_weights_V_2_3_0_4_fu_188 <= attn_weights_V_2_3_0_3_fu_1659_p6;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_GEMM_3D_float_fu_552_ap_done = ap_const_logic_1))) then 
                attn_weights_V_2_3_0_4_fu_188 <= grp_GEMM_3D_float_fu_552_ap_return_11;
            end if; 
        end if;
    end process;

    d_0_0_reg_328_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                d_0_0_reg_328 <= add_ln187_reg_2415;
            elsif (((icmp_ln185_fu_1401_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                d_0_0_reg_328 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    h100_0_0_reg_391_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                h100_0_0_reg_391 <= add_ln218_reg_2634;
            elsif (((grp_GEMM_3D_float_1_fu_575_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                h100_0_0_reg_391 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    h85_0_reg_380_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln185_fu_1401_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                h85_0_reg_380 <= ap_const_lv3_0;
            elsif (((icmp_ln192_fu_1731_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                h85_0_reg_380 <= h_fu_1737_p2;
            end if; 
        end if;
    end process;

    h_0_reg_317_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln187_fu_1417_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                h_0_reg_317 <= h_1_reg_2390;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_GEMM_3D_float_fu_552_ap_done = ap_const_logic_1))) then 
                h_0_reg_317 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                add_ln187_reg_2415 <= add_ln187_fu_1423_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                add_ln218_reg_2634 <= add_ln218_fu_1947_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_GEMM_3D_float_1_fu_575_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                attn_output_0_1_reg_2556 <= grp_GEMM_3D_float_1_fu_575_ap_return_1;
                attn_output_0_2_reg_2561 <= grp_GEMM_3D_float_1_fu_575_ap_return_2;
                attn_output_0_3_reg_2566 <= grp_GEMM_3D_float_1_fu_575_ap_return_3;
                attn_output_0_reg_2551 <= grp_GEMM_3D_float_1_fu_575_ap_return_0;
                attn_output_1_1_reg_2576 <= grp_GEMM_3D_float_1_fu_575_ap_return_5;
                attn_output_1_2_reg_2581 <= grp_GEMM_3D_float_1_fu_575_ap_return_6;
                attn_output_1_3_reg_2586 <= grp_GEMM_3D_float_1_fu_575_ap_return_7;
                attn_output_1_reg_2571 <= grp_GEMM_3D_float_1_fu_575_ap_return_4;
                attn_output_2_1_reg_2596 <= grp_GEMM_3D_float_1_fu_575_ap_return_9;
                attn_output_2_2_reg_2601 <= grp_GEMM_3D_float_1_fu_575_ap_return_10;
                attn_output_2_3_reg_2606 <= grp_GEMM_3D_float_1_fu_575_ap_return_11;
                attn_output_2_reg_2591 <= grp_GEMM_3D_float_1_fu_575_ap_return_8;
                attn_output_3_1_reg_2616 <= grp_GEMM_3D_float_1_fu_575_ap_return_13;
                attn_output_3_2_reg_2621 <= grp_GEMM_3D_float_1_fu_575_ap_return_14;
                attn_output_3_3_reg_2626 <= grp_GEMM_3D_float_1_fu_575_ap_return_15;
                attn_output_3_reg_2611 <= grp_GEMM_3D_float_1_fu_575_ap_return_12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln187_fu_1417_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                attn_weights_V_0_0_0_1_reg_2441 <= attn_weights_V_0_0_0_6_fu_184;
                attn_weights_V_0_1_0_1_reg_2434 <= attn_weights_V_0_1_0_6_fu_180;
                attn_weights_V_0_2_0_1_reg_2427 <= attn_weights_V_0_2_0_6_fu_176;
                attn_weights_V_0_3_0_1_reg_2420 <= attn_weights_V_0_3_0_6_fu_172;
                lshr_ln1148_4_reg_2458 <= tmp_11_fu_1436_p14(39 downto 1);
                tmp_106_reg_2448 <= tmp_11_fu_1436_p14(39 downto 39);
                tmp_56_reg_2453 <= sub_ln1148_fu_1482_p2(55 downto 17);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state20_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                attn_weights_V_0_0_0_7_reg_2491 <= grp_softmax_1_4_3_s_fu_532_ap_return_0;
                attn_weights_V_0_1_0_7_reg_2496 <= grp_softmax_1_4_3_s_fu_532_ap_return_1;
                attn_weights_V_0_2_0_7_reg_2501 <= grp_softmax_1_4_3_s_fu_532_ap_return_2;
                attn_weights_V_0_3_0_7_reg_2506 <= grp_softmax_1_4_3_s_fu_532_ap_return_3;
                attn_weights_V_1_0_0_5_reg_2511 <= grp_softmax_1_4_3_s_fu_532_ap_return_4;
                attn_weights_V_1_1_0_5_reg_2516 <= grp_softmax_1_4_3_s_fu_532_ap_return_5;
                attn_weights_V_1_2_0_5_reg_2521 <= grp_softmax_1_4_3_s_fu_532_ap_return_6;
                attn_weights_V_1_3_0_5_reg_2526 <= grp_softmax_1_4_3_s_fu_532_ap_return_7;
                attn_weights_V_2_0_0_5_reg_2531 <= grp_softmax_1_4_3_s_fu_532_ap_return_8;
                attn_weights_V_2_1_0_5_reg_2536 <= grp_softmax_1_4_3_s_fu_532_ap_return_9;
                attn_weights_V_2_2_0_5_reg_2541 <= grp_softmax_1_4_3_s_fu_532_ap_return_10;
                attn_weights_V_2_3_0_5_reg_2546 <= grp_softmax_1_4_3_s_fu_532_ap_return_11;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                h_1_reg_2390 <= h_1_fu_1407_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state10_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                k_embed_V_0_1_reg_2292 <= grp_apply_rotary_pos_emb_fu_486_ap_return_17;
                k_embed_V_0_2_reg_2297 <= grp_apply_rotary_pos_emb_fu_486_ap_return_18;
                k_embed_V_0_3_reg_2302 <= grp_apply_rotary_pos_emb_fu_486_ap_return_19;
                k_embed_V_0_reg_2287 <= grp_apply_rotary_pos_emb_fu_486_ap_return_16;
                k_embed_V_1_1_reg_2312 <= grp_apply_rotary_pos_emb_fu_486_ap_return_21;
                k_embed_V_1_2_reg_2317 <= grp_apply_rotary_pos_emb_fu_486_ap_return_22;
                k_embed_V_1_3_reg_2322 <= grp_apply_rotary_pos_emb_fu_486_ap_return_23;
                k_embed_V_1_reg_2307 <= grp_apply_rotary_pos_emb_fu_486_ap_return_20;
                k_embed_V_2_1_reg_2332 <= grp_apply_rotary_pos_emb_fu_486_ap_return_25;
                k_embed_V_2_2_reg_2337 <= grp_apply_rotary_pos_emb_fu_486_ap_return_26;
                k_embed_V_2_3_reg_2342 <= grp_apply_rotary_pos_emb_fu_486_ap_return_27;
                k_embed_V_2_reg_2327 <= grp_apply_rotary_pos_emb_fu_486_ap_return_24;
                k_embed_V_3_1_reg_2352 <= grp_apply_rotary_pos_emb_fu_486_ap_return_29;
                k_embed_V_3_2_reg_2357 <= grp_apply_rotary_pos_emb_fu_486_ap_return_30;
                k_embed_V_3_3_reg_2362 <= grp_apply_rotary_pos_emb_fu_486_ap_return_31;
                k_embed_V_3_reg_2347 <= grp_apply_rotary_pos_emb_fu_486_ap_return_28;
                q_embed_V_0_1_reg_2212 <= grp_apply_rotary_pos_emb_fu_486_ap_return_1;
                q_embed_V_0_2_reg_2217 <= grp_apply_rotary_pos_emb_fu_486_ap_return_2;
                q_embed_V_0_3_reg_2222 <= grp_apply_rotary_pos_emb_fu_486_ap_return_3;
                q_embed_V_0_reg_2207 <= grp_apply_rotary_pos_emb_fu_486_ap_return_0;
                q_embed_V_1_1_reg_2232 <= grp_apply_rotary_pos_emb_fu_486_ap_return_5;
                q_embed_V_1_2_reg_2237 <= grp_apply_rotary_pos_emb_fu_486_ap_return_6;
                q_embed_V_1_3_reg_2242 <= grp_apply_rotary_pos_emb_fu_486_ap_return_7;
                q_embed_V_1_reg_2227 <= grp_apply_rotary_pos_emb_fu_486_ap_return_4;
                q_embed_V_2_1_reg_2252 <= grp_apply_rotary_pos_emb_fu_486_ap_return_9;
                q_embed_V_2_2_reg_2257 <= grp_apply_rotary_pos_emb_fu_486_ap_return_10;
                q_embed_V_2_3_reg_2262 <= grp_apply_rotary_pos_emb_fu_486_ap_return_11;
                q_embed_V_2_reg_2247 <= grp_apply_rotary_pos_emb_fu_486_ap_return_8;
                q_embed_V_3_1_reg_2272 <= grp_apply_rotary_pos_emb_fu_486_ap_return_13;
                q_embed_V_3_2_reg_2277 <= grp_apply_rotary_pos_emb_fu_486_ap_return_14;
                q_embed_V_3_3_reg_2282 <= grp_apply_rotary_pos_emb_fu_486_ap_return_15;
                q_embed_V_3_reg_2267 <= grp_apply_rotary_pos_emb_fu_486_ap_return_12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                k_proj_V_0_1_reg_2132 <= grp_reshape_2D_to_3D_fu_636_ap_return_1;
                k_proj_V_0_2_reg_2137 <= grp_reshape_2D_to_3D_fu_636_ap_return_2;
                k_proj_V_0_3_reg_2142 <= grp_reshape_2D_to_3D_fu_636_ap_return_3;
                k_proj_V_0_reg_2127 <= grp_reshape_2D_to_3D_fu_636_ap_return_0;
                k_proj_V_1_1_reg_2152 <= grp_reshape_2D_to_3D_fu_636_ap_return_5;
                k_proj_V_1_2_reg_2157 <= grp_reshape_2D_to_3D_fu_636_ap_return_6;
                k_proj_V_1_3_reg_2162 <= grp_reshape_2D_to_3D_fu_636_ap_return_7;
                k_proj_V_1_reg_2147 <= grp_reshape_2D_to_3D_fu_636_ap_return_4;
                k_proj_V_2_1_reg_2172 <= grp_reshape_2D_to_3D_fu_636_ap_return_9;
                k_proj_V_2_2_reg_2177 <= grp_reshape_2D_to_3D_fu_636_ap_return_10;
                k_proj_V_2_3_reg_2182 <= grp_reshape_2D_to_3D_fu_636_ap_return_11;
                k_proj_V_2_reg_2167 <= grp_reshape_2D_to_3D_fu_636_ap_return_8;
                k_proj_V_3_1_reg_2192 <= grp_reshape_2D_to_3D_fu_636_ap_return_13;
                k_proj_V_3_2_reg_2197 <= grp_reshape_2D_to_3D_fu_636_ap_return_14;
                k_proj_V_3_3_reg_2202 <= grp_reshape_2D_to_3D_fu_636_ap_return_15;
                k_proj_V_3_reg_2187 <= grp_reshape_2D_to_3D_fu_636_ap_return_12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_state10_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then
                reg_1003 <= grp_reshape_2D_to_3D_fu_631_ap_return_9;
                reg_1009 <= grp_reshape_2D_to_3D_fu_631_ap_return_10;
                reg_1015 <= grp_reshape_2D_to_3D_fu_631_ap_return_11;
                reg_1021 <= grp_reshape_2D_to_3D_fu_631_ap_return_12;
                reg_1027 <= grp_reshape_2D_to_3D_fu_631_ap_return_13;
                reg_1033 <= grp_reshape_2D_to_3D_fu_631_ap_return_14;
                reg_1039 <= grp_reshape_2D_to_3D_fu_631_ap_return_15;
                reg_949 <= grp_reshape_2D_to_3D_fu_631_ap_return_0;
                reg_955 <= grp_reshape_2D_to_3D_fu_631_ap_return_1;
                reg_961 <= grp_reshape_2D_to_3D_fu_631_ap_return_2;
                reg_967 <= grp_reshape_2D_to_3D_fu_631_ap_return_3;
                reg_973 <= grp_reshape_2D_to_3D_fu_631_ap_return_4;
                reg_979 <= grp_reshape_2D_to_3D_fu_631_ap_return_5;
                reg_985 <= grp_reshape_2D_to_3D_fu_631_ap_return_6;
                reg_991 <= grp_reshape_2D_to_3D_fu_631_ap_return_7;
                reg_997 <= grp_reshape_2D_to_3D_fu_631_ap_return_8;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln192_fu_1731_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((icmp_ln187_fu_1417_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then
                reg_1045 <= attn_weights_V_2_3_0_4_fu_188;
                reg_1050 <= attn_weights_V_2_2_0_4_fu_192;
                reg_1055 <= attn_weights_V_2_1_0_4_fu_196;
                reg_1060 <= attn_weights_V_2_0_0_4_fu_200;
                reg_1065 <= attn_weights_V_1_3_0_4_fu_204;
                reg_1070 <= attn_weights_V_1_2_0_4_fu_208;
                reg_1075 <= attn_weights_V_1_1_0_4_fu_212;
                reg_1080 <= attn_weights_V_1_0_0_4_fu_216;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((grp_quantize_activation_fu_526_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27)) or ((grp_quantize_activation_fu_526_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then
                reg_847 <= grp_quantize_activation_fu_526_ap_return_0;
                reg_853 <= grp_quantize_activation_fu_526_ap_return_1;
                reg_859 <= grp_quantize_activation_fu_526_ap_return_2;
                reg_865 <= grp_quantize_activation_fu_526_ap_return_3;
                reg_871 <= grp_quantize_activation_fu_526_ap_return_4;
                reg_877 <= grp_quantize_activation_fu_526_ap_return_5;
                reg_883 <= grp_quantize_activation_fu_526_ap_return_6;
                reg_889 <= grp_quantize_activation_fu_526_ap_return_7;
                reg_895 <= grp_quantize_activation_fu_526_ap_return_8;
                reg_901 <= grp_quantize_activation_fu_526_ap_return_9;
                reg_907 <= grp_quantize_activation_fu_526_ap_return_10;
                reg_913 <= grp_quantize_activation_fu_526_ap_return_11;
                reg_919 <= grp_quantize_activation_fu_526_ap_return_12;
                reg_925 <= grp_quantize_activation_fu_526_ap_return_13;
                reg_931 <= grp_quantize_activation_fu_526_ap_return_14;
                reg_937 <= grp_quantize_activation_fu_526_ap_return_15;
                reg_943 <= grp_quantize_activation_fu_526_ap_return_16;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln218_fu_1941_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    shl_ln2_reg_2645(3 downto 2) <= shl_ln2_fu_1957_p3(3 downto 2);
                trunc_ln220_reg_2639 <= trunc_ln220_fu_1953_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln185_fu_1401_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                trunc_ln1265_reg_2395 <= trunc_ln1265_fu_1413_p1;
            end if;
        end if;
    end process;
    shl_ln2_reg_2645(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state4, grp_quantize_activation_fu_526_ap_done, ap_CS_fsm_state27, ap_CS_fsm_state8, grp_linear_forward_no_mu_fu_402_ap_done, ap_block_state8_on_subcall_done, ap_CS_fsm_state10, ap_block_state10_on_subcall_done, ap_CS_fsm_state17, icmp_ln187_fu_1417_p2, ap_CS_fsm_state19, icmp_ln192_fu_1731_p2, ap_CS_fsm_state16, icmp_ln185_fu_1401_p2, ap_CS_fsm_state20, ap_block_state20_on_subcall_done, ap_CS_fsm_state21, grp_GEMM_3D_float_1_fu_575_ap_done, ap_CS_fsm_state22, icmp_ln218_fu_1941_p2, grp_GEMM_3D_float_fu_552_ap_done, grp_cache_update_fu_595_ap_done, ap_CS_fsm_state15, ap_CS_fsm_state6, ap_CS_fsm_state29, ap_CS_fsm_state2, ap_CS_fsm_state25, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_block_state2_on_subcall_done, ap_block_state6_on_subcall_done, ap_block_state13_on_subcall_done, ap_block_state25_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_quantize_activation_fu_526_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_boolean_0 = ap_block_state6_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((ap_const_boolean_0 = ap_block_state10_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (grp_cache_update_fu_595_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((ap_const_boolean_0 = ap_block_state13_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_GEMM_3D_float_fu_552_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                if (((icmp_ln185_fu_1401_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state17 => 
                if (((icmp_ln187_fu_1417_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state19 => 
                if (((icmp_ln192_fu_1731_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state20 => 
                if (((ap_const_boolean_0 = ap_block_state20_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                if (((grp_GEMM_3D_float_1_fu_575_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state22 => 
                if (((icmp_ln218_fu_1941_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                if (((ap_const_boolean_0 = ap_block_state25_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                if (((grp_quantize_activation_fu_526_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                if (((grp_linear_forward_no_mu_fu_402_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln187_fu_1423_p2 <= std_logic_vector(unsigned(d_0_0_reg_328) + unsigned(ap_const_lv2_1));
    add_ln218_fu_1947_p2 <= std_logic_vector(unsigned(h100_0_0_reg_391) + unsigned(ap_const_lv3_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state10_on_subcall_done_assign_proc : process(grp_reshape_2D_to_3D_fu_631_ap_done, grp_apply_rotary_pos_emb_fu_486_ap_done)
    begin
                ap_block_state10_on_subcall_done <= ((grp_apply_rotary_pos_emb_fu_486_ap_done = ap_const_logic_0) or (grp_reshape_2D_to_3D_fu_631_ap_done = ap_const_logic_0));
    end process;


    ap_block_state13_on_subcall_done_assign_proc : process(grp_cache_update_fu_595_ap_done, grp_transpose_last_two_d_fu_641_ap_done)
    begin
                ap_block_state13_on_subcall_done <= ((grp_transpose_last_two_d_fu_641_ap_done = ap_const_logic_0) or (grp_cache_update_fu_595_ap_done = ap_const_logic_0));
    end process;


    ap_block_state20_on_subcall_done_assign_proc : process(grp_softmax_1_4_3_s_fu_532_ap_done, grp_init_2d_mem_fu_652_ap_done)
    begin
                ap_block_state20_on_subcall_done <= ((grp_init_2d_mem_fu_652_ap_done = ap_const_logic_0) or (grp_softmax_1_4_3_s_fu_532_ap_done = ap_const_logic_0));
    end process;


    ap_block_state25_on_subcall_done_assign_proc : process(grp_init_2d_mem_fu_652_ap_done, grp_rms_norm_16_s_fu_477_ap_done)
    begin
                ap_block_state25_on_subcall_done <= ((grp_rms_norm_16_s_fu_477_ap_done = ap_const_logic_0) or (grp_init_2d_mem_fu_652_ap_done = ap_const_logic_0));
    end process;


    ap_block_state2_on_subcall_done_assign_proc : process(grp_init_2d_mem_fu_652_ap_done, grp_rms_norm_16_s_fu_477_ap_done, grp_init_2d_mem_fu_658_ap_done, grp_init_2d_mem_fu_664_ap_done)
    begin
                ap_block_state2_on_subcall_done <= ((grp_rms_norm_16_s_fu_477_ap_done = ap_const_logic_0) or (grp_init_2d_mem_fu_652_ap_done = ap_const_logic_0) or (grp_init_2d_mem_fu_664_ap_done = ap_const_logic_0) or (grp_init_2d_mem_fu_658_ap_done = ap_const_logic_0));
    end process;


    ap_block_state6_on_subcall_done_assign_proc : process(grp_linear_forward_no_mu_fu_402_ap_done, grp_linear_forward_no_mu_fu_434_ap_done)
    begin
                ap_block_state6_on_subcall_done <= ((grp_linear_forward_no_mu_fu_434_ap_done = ap_const_logic_0) or (grp_linear_forward_no_mu_fu_402_ap_done = ap_const_logic_0));
    end process;


    ap_block_state8_on_subcall_done_assign_proc : process(grp_linear_forward_no_mu_fu_402_ap_done, grp_reshape_2D_to_3D_fu_631_ap_done, grp_reshape_2D_to_3D_fu_636_ap_done)
    begin
                ap_block_state8_on_subcall_done <= ((grp_reshape_2D_to_3D_fu_636_ap_done = ap_const_logic_0) or (grp_reshape_2D_to_3D_fu_631_ap_done = ap_const_logic_0) or (grp_linear_forward_no_mu_fu_402_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_linear_forward_no_mu_fu_402_ap_done, ap_CS_fsm_state29)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((grp_linear_forward_no_mu_fu_402_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state29)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_linear_forward_no_mu_fu_402_ap_done, ap_CS_fsm_state29)
    begin
        if (((grp_linear_forward_no_mu_fu_402_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    attn_output_2D_0_V_address0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state20, ap_CS_fsm_state22, grp_rms_norm_16_s_fu_477_input_0_V_address0, grp_quantize_activation_fu_526_input_0_V_address0, grp_init_2d_mem_fu_652_mem_0_V_address0, ap_CS_fsm_state23, ap_CS_fsm_state25, zext_ln220_fu_1965_p1, zext_ln220_2_fu_2008_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            attn_output_2D_0_V_address0 <= zext_ln220_2_fu_2008_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            attn_output_2D_0_V_address0 <= zext_ln220_fu_1965_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            attn_output_2D_0_V_address0 <= grp_init_2d_mem_fu_652_mem_0_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            attn_output_2D_0_V_address0 <= grp_quantize_activation_fu_526_input_0_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            attn_output_2D_0_V_address0 <= grp_rms_norm_16_s_fu_477_input_0_V_address0;
        else 
            attn_output_2D_0_V_address0 <= "XXXX";
        end if; 
    end process;


    attn_output_2D_0_V_address1_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state22, grp_rms_norm_16_s_fu_477_input_0_V_address1, grp_quantize_activation_fu_526_input_0_V_address1, ap_CS_fsm_state23, ap_CS_fsm_state25, zext_ln220_1_fu_1987_p1, zext_ln220_3_fu_2028_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            attn_output_2D_0_V_address1 <= zext_ln220_3_fu_2028_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            attn_output_2D_0_V_address1 <= zext_ln220_1_fu_1987_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            attn_output_2D_0_V_address1 <= grp_quantize_activation_fu_526_input_0_V_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            attn_output_2D_0_V_address1 <= grp_rms_norm_16_s_fu_477_input_0_V_address1;
        else 
            attn_output_2D_0_V_address1 <= "XXXX";
        end if; 
    end process;


    attn_output_2D_0_V_ce0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state20, ap_CS_fsm_state22, grp_rms_norm_16_s_fu_477_input_0_V_ce0, grp_quantize_activation_fu_526_input_0_V_ce0, grp_init_2d_mem_fu_652_mem_0_V_ce0, ap_CS_fsm_state23, ap_CS_fsm_state25)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            attn_output_2D_0_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            attn_output_2D_0_V_ce0 <= grp_init_2d_mem_fu_652_mem_0_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            attn_output_2D_0_V_ce0 <= grp_quantize_activation_fu_526_input_0_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            attn_output_2D_0_V_ce0 <= grp_rms_norm_16_s_fu_477_input_0_V_ce0;
        else 
            attn_output_2D_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    attn_output_2D_0_V_ce1_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state22, grp_rms_norm_16_s_fu_477_input_0_V_ce1, grp_quantize_activation_fu_526_input_0_V_ce1, ap_CS_fsm_state23, ap_CS_fsm_state25)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            attn_output_2D_0_V_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            attn_output_2D_0_V_ce1 <= grp_quantize_activation_fu_526_input_0_V_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            attn_output_2D_0_V_ce1 <= grp_rms_norm_16_s_fu_477_input_0_V_ce1;
        else 
            attn_output_2D_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    attn_output_2D_0_V_d0_assign_proc : process(ap_CS_fsm_state20, ap_CS_fsm_state22, grp_init_2d_mem_fu_652_mem_0_V_d0, ap_CS_fsm_state23, tmp_12_fu_1970_p6, tmp_14_fu_2013_p6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            attn_output_2D_0_V_d0 <= tmp_14_fu_2013_p6;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            attn_output_2D_0_V_d0 <= tmp_12_fu_1970_p6;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            attn_output_2D_0_V_d0 <= grp_init_2d_mem_fu_652_mem_0_V_d0;
        else 
            attn_output_2D_0_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    attn_output_2D_0_V_d1_assign_proc : process(ap_CS_fsm_state22, grp_rms_norm_16_s_fu_477_input_0_V_d1, ap_CS_fsm_state23, ap_CS_fsm_state25, tmp_13_fu_1992_p6, tmp_15_fu_2033_p6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            attn_output_2D_0_V_d1 <= tmp_15_fu_2033_p6;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            attn_output_2D_0_V_d1 <= tmp_13_fu_1992_p6;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            attn_output_2D_0_V_d1 <= grp_rms_norm_16_s_fu_477_input_0_V_d1;
        else 
            attn_output_2D_0_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    attn_output_2D_0_V_we0_assign_proc : process(ap_CS_fsm_state20, ap_CS_fsm_state22, icmp_ln218_fu_1941_p2, grp_init_2d_mem_fu_652_mem_0_V_we0, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or ((icmp_ln218_fu_1941_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22)))) then 
            attn_output_2D_0_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            attn_output_2D_0_V_we0 <= grp_init_2d_mem_fu_652_mem_0_V_we0;
        else 
            attn_output_2D_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    attn_output_2D_0_V_we1_assign_proc : process(ap_CS_fsm_state22, icmp_ln218_fu_1941_p2, grp_rms_norm_16_s_fu_477_input_0_V_we1, ap_CS_fsm_state23, ap_CS_fsm_state25)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or ((icmp_ln218_fu_1941_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22)))) then 
            attn_output_2D_0_V_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            attn_output_2D_0_V_we1 <= grp_rms_norm_16_s_fu_477_input_0_V_we1;
        else 
            attn_output_2D_0_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    final_output_0_V_address0_assign_proc : process(grp_linear_forward_no_mu_fu_402_output_0_V_address0, grp_init_2d_mem_fu_652_mem_0_V_address0, ap_CS_fsm_state29, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            final_output_0_V_address0 <= grp_init_2d_mem_fu_652_mem_0_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            final_output_0_V_address0 <= grp_linear_forward_no_mu_fu_402_output_0_V_address0;
        else 
            final_output_0_V_address0 <= "XXXX";
        end if; 
    end process;


    final_output_0_V_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_402_output_0_V_ce0, grp_init_2d_mem_fu_652_mem_0_V_ce0, ap_CS_fsm_state29, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            final_output_0_V_ce0 <= grp_init_2d_mem_fu_652_mem_0_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            final_output_0_V_ce0 <= grp_linear_forward_no_mu_fu_402_output_0_V_ce0;
        else 
            final_output_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    final_output_0_V_d0_assign_proc : process(grp_linear_forward_no_mu_fu_402_output_0_V_d0, grp_init_2d_mem_fu_652_mem_0_V_d0, ap_CS_fsm_state29, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            final_output_0_V_d0 <= grp_init_2d_mem_fu_652_mem_0_V_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            final_output_0_V_d0 <= grp_linear_forward_no_mu_fu_402_output_0_V_d0;
        else 
            final_output_0_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    final_output_0_V_we0_assign_proc : process(grp_linear_forward_no_mu_fu_402_output_0_V_we0, grp_init_2d_mem_fu_652_mem_0_V_we0, ap_CS_fsm_state29, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            final_output_0_V_we0 <= grp_init_2d_mem_fu_652_mem_0_V_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            final_output_0_V_we0 <= grp_linear_forward_no_mu_fu_402_output_0_V_we0;
        else 
            final_output_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_GEMM_3D_float_1_fu_575_ap_start <= grp_GEMM_3D_float_1_fu_575_ap_start_reg;
    grp_GEMM_3D_float_fu_552_ap_start <= grp_GEMM_3D_float_fu_552_ap_start_reg;
    grp_apply_rotary_pos_emb_fu_486_ap_start <= grp_apply_rotary_pos_emb_fu_486_ap_start_reg;
    grp_cache_update_fu_595_ap_start <= grp_cache_update_fu_595_ap_start_reg;

    grp_cache_update_fu_595_cache_in_0_V_q0_assign_proc : process(k_cache_V_0_q0, v_cache_V_0_q0, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_cache_update_fu_595_cache_in_0_V_q0 <= v_cache_V_0_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_cache_update_fu_595_cache_in_0_V_q0 <= k_cache_V_0_q0;
        else 
            grp_cache_update_fu_595_cache_in_0_V_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_cache_update_fu_595_cache_in_1_V_q0_assign_proc : process(k_cache_V_1_q0, v_cache_V_1_q0, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_cache_update_fu_595_cache_in_1_V_q0 <= v_cache_V_1_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_cache_update_fu_595_cache_in_1_V_q0 <= k_cache_V_1_q0;
        else 
            grp_cache_update_fu_595_cache_in_1_V_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_cache_update_fu_595_cache_in_2_V_q0_assign_proc : process(k_cache_V_2_q0, v_cache_V_2_q0, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_cache_update_fu_595_cache_in_2_V_q0 <= v_cache_V_2_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_cache_update_fu_595_cache_in_2_V_q0 <= k_cache_V_2_q0;
        else 
            grp_cache_update_fu_595_cache_in_2_V_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_cache_update_fu_595_cache_in_3_V_q0_assign_proc : process(k_cache_V_3_q0, v_cache_V_3_q0, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_cache_update_fu_595_cache_in_3_V_q0 <= v_cache_V_3_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_cache_update_fu_595_cache_in_3_V_q0 <= k_cache_V_3_q0;
        else 
            grp_cache_update_fu_595_cache_in_3_V_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_cache_update_fu_595_p_read_assign_proc : process(reg_949, k_embed_V_0_reg_2287, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_cache_update_fu_595_p_read <= reg_949;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_cache_update_fu_595_p_read <= k_embed_V_0_reg_2287;
        else 
            grp_cache_update_fu_595_p_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_cache_update_fu_595_p_read1_assign_proc : process(reg_955, k_embed_V_0_1_reg_2292, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_cache_update_fu_595_p_read1 <= reg_955;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_cache_update_fu_595_p_read1 <= k_embed_V_0_1_reg_2292;
        else 
            grp_cache_update_fu_595_p_read1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_cache_update_fu_595_p_read10_assign_proc : process(reg_1009, k_embed_V_2_2_reg_2337, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_cache_update_fu_595_p_read10 <= reg_1009;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_cache_update_fu_595_p_read10 <= k_embed_V_2_2_reg_2337;
        else 
            grp_cache_update_fu_595_p_read10 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_cache_update_fu_595_p_read11_assign_proc : process(reg_1015, k_embed_V_2_3_reg_2342, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_cache_update_fu_595_p_read11 <= reg_1015;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_cache_update_fu_595_p_read11 <= k_embed_V_2_3_reg_2342;
        else 
            grp_cache_update_fu_595_p_read11 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_cache_update_fu_595_p_read12_assign_proc : process(reg_1021, k_embed_V_3_reg_2347, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_cache_update_fu_595_p_read12 <= reg_1021;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_cache_update_fu_595_p_read12 <= k_embed_V_3_reg_2347;
        else 
            grp_cache_update_fu_595_p_read12 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_cache_update_fu_595_p_read13_assign_proc : process(reg_1027, k_embed_V_3_1_reg_2352, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_cache_update_fu_595_p_read13 <= reg_1027;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_cache_update_fu_595_p_read13 <= k_embed_V_3_1_reg_2352;
        else 
            grp_cache_update_fu_595_p_read13 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_cache_update_fu_595_p_read14_assign_proc : process(reg_1033, k_embed_V_3_2_reg_2357, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_cache_update_fu_595_p_read14 <= reg_1033;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_cache_update_fu_595_p_read14 <= k_embed_V_3_2_reg_2357;
        else 
            grp_cache_update_fu_595_p_read14 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_cache_update_fu_595_p_read15_assign_proc : process(reg_1039, k_embed_V_3_3_reg_2362, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_cache_update_fu_595_p_read15 <= reg_1039;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_cache_update_fu_595_p_read15 <= k_embed_V_3_3_reg_2362;
        else 
            grp_cache_update_fu_595_p_read15 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_cache_update_fu_595_p_read2_assign_proc : process(reg_961, k_embed_V_0_2_reg_2297, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_cache_update_fu_595_p_read2 <= reg_961;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_cache_update_fu_595_p_read2 <= k_embed_V_0_2_reg_2297;
        else 
            grp_cache_update_fu_595_p_read2 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_cache_update_fu_595_p_read3_assign_proc : process(reg_967, k_embed_V_0_3_reg_2302, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_cache_update_fu_595_p_read3 <= reg_967;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_cache_update_fu_595_p_read3 <= k_embed_V_0_3_reg_2302;
        else 
            grp_cache_update_fu_595_p_read3 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_cache_update_fu_595_p_read4_assign_proc : process(reg_973, k_embed_V_1_reg_2307, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_cache_update_fu_595_p_read4 <= reg_973;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_cache_update_fu_595_p_read4 <= k_embed_V_1_reg_2307;
        else 
            grp_cache_update_fu_595_p_read4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_cache_update_fu_595_p_read5_assign_proc : process(reg_979, k_embed_V_1_1_reg_2312, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_cache_update_fu_595_p_read5 <= reg_979;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_cache_update_fu_595_p_read5 <= k_embed_V_1_1_reg_2312;
        else 
            grp_cache_update_fu_595_p_read5 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_cache_update_fu_595_p_read6_assign_proc : process(reg_985, k_embed_V_1_2_reg_2317, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_cache_update_fu_595_p_read6 <= reg_985;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_cache_update_fu_595_p_read6 <= k_embed_V_1_2_reg_2317;
        else 
            grp_cache_update_fu_595_p_read6 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_cache_update_fu_595_p_read7_assign_proc : process(reg_991, k_embed_V_1_3_reg_2322, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_cache_update_fu_595_p_read7 <= reg_991;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_cache_update_fu_595_p_read7 <= k_embed_V_1_3_reg_2322;
        else 
            grp_cache_update_fu_595_p_read7 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_cache_update_fu_595_p_read8_assign_proc : process(reg_997, k_embed_V_2_reg_2327, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_cache_update_fu_595_p_read8 <= reg_997;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_cache_update_fu_595_p_read8 <= k_embed_V_2_reg_2327;
        else 
            grp_cache_update_fu_595_p_read8 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_cache_update_fu_595_p_read9_assign_proc : process(reg_1003, k_embed_V_2_1_reg_2332, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_cache_update_fu_595_p_read9 <= reg_1003;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_cache_update_fu_595_p_read9 <= k_embed_V_2_1_reg_2332;
        else 
            grp_cache_update_fu_595_p_read9 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_init_2d_mem_fu_652_ap_start <= grp_init_2d_mem_fu_652_ap_start_reg;
    grp_init_2d_mem_fu_658_ap_start <= grp_init_2d_mem_fu_658_ap_start_reg;
    grp_init_2d_mem_fu_664_ap_start <= grp_init_2d_mem_fu_664_ap_start_reg;
    grp_linear_forward_no_mu_fu_402_ap_start <= grp_linear_forward_no_mu_fu_402_ap_start_reg;

    grp_linear_forward_no_mu_fu_402_output_0_V_q0_assign_proc : process(final_output_0_V_q0, ap_CS_fsm_state8, q_proj_re_0_V_q0, v_proj_re_0_V_q0, ap_CS_fsm_state6, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_linear_forward_no_mu_fu_402_output_0_V_q0 <= final_output_0_V_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_linear_forward_no_mu_fu_402_output_0_V_q0 <= v_proj_re_0_V_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_linear_forward_no_mu_fu_402_output_0_V_q0 <= q_proj_re_0_V_q0;
        else 
            grp_linear_forward_no_mu_fu_402_output_0_V_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_402_packed_weights_0_q0_assign_proc : process(q_weights_0_q0, v_weights_0_q0, o_weights_0_q0, ap_CS_fsm_state8, ap_CS_fsm_state6, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_linear_forward_no_mu_fu_402_packed_weights_0_q0 <= o_weights_0_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_linear_forward_no_mu_fu_402_packed_weights_0_q0 <= v_weights_0_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_linear_forward_no_mu_fu_402_packed_weights_0_q0 <= q_weights_0_q0;
        else 
            grp_linear_forward_no_mu_fu_402_packed_weights_0_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_402_packed_weights_1_q0_assign_proc : process(q_weights_1_q0, v_weights_1_q0, o_weights_1_q0, ap_CS_fsm_state8, ap_CS_fsm_state6, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_linear_forward_no_mu_fu_402_packed_weights_1_q0 <= o_weights_1_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_linear_forward_no_mu_fu_402_packed_weights_1_q0 <= v_weights_1_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_linear_forward_no_mu_fu_402_packed_weights_1_q0 <= q_weights_1_q0;
        else 
            grp_linear_forward_no_mu_fu_402_packed_weights_1_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_402_packed_weights_2_q0_assign_proc : process(q_weights_2_q0, v_weights_2_q0, o_weights_2_q0, ap_CS_fsm_state8, ap_CS_fsm_state6, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_linear_forward_no_mu_fu_402_packed_weights_2_q0 <= o_weights_2_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_linear_forward_no_mu_fu_402_packed_weights_2_q0 <= v_weights_2_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_linear_forward_no_mu_fu_402_packed_weights_2_q0 <= q_weights_2_q0;
        else 
            grp_linear_forward_no_mu_fu_402_packed_weights_2_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_402_packed_weights_3_q0_assign_proc : process(q_weights_3_q0, v_weights_3_q0, o_weights_3_q0, ap_CS_fsm_state8, ap_CS_fsm_state6, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_linear_forward_no_mu_fu_402_packed_weights_3_q0 <= o_weights_3_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_linear_forward_no_mu_fu_402_packed_weights_3_q0 <= v_weights_3_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_linear_forward_no_mu_fu_402_packed_weights_3_q0 <= q_weights_3_q0;
        else 
            grp_linear_forward_no_mu_fu_402_packed_weights_3_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_402_w_scale_V_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state6, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_linear_forward_no_mu_fu_402_w_scale_V <= ap_const_lv22_B1C47;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_linear_forward_no_mu_fu_402_w_scale_V <= ap_const_lv22_AED1D;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_linear_forward_no_mu_fu_402_w_scale_V <= ap_const_lv22_132AE2;
        else 
            grp_linear_forward_no_mu_fu_402_w_scale_V <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_linear_forward_no_mu_fu_434_ap_start <= grp_linear_forward_no_mu_fu_434_ap_start_reg;
    grp_quantize_activation_fu_526_ap_start <= grp_quantize_activation_fu_526_ap_start_reg;

    grp_quantize_activation_fu_526_input_0_V_q0_assign_proc : process(hidden_states_0_V_q0, ap_CS_fsm_state4, ap_CS_fsm_state27, attn_output_2D_0_V_q0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_quantize_activation_fu_526_input_0_V_q0 <= attn_output_2D_0_V_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_quantize_activation_fu_526_input_0_V_q0 <= hidden_states_0_V_q0;
        else 
            grp_quantize_activation_fu_526_input_0_V_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_quantize_activation_fu_526_input_0_V_q1_assign_proc : process(hidden_states_0_V_q1, ap_CS_fsm_state4, ap_CS_fsm_state27, attn_output_2D_0_V_q1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_quantize_activation_fu_526_input_0_V_q1 <= attn_output_2D_0_V_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_quantize_activation_fu_526_input_0_V_q1 <= hidden_states_0_V_q1;
        else 
            grp_quantize_activation_fu_526_input_0_V_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_reshape_2D_to_3D_fu_631_ap_start <= grp_reshape_2D_to_3D_fu_631_ap_start_reg;

    grp_reshape_2D_to_3D_fu_631_input_0_V_q0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state10, q_proj_re_0_V_q0, v_proj_re_0_V_q0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_reshape_2D_to_3D_fu_631_input_0_V_q0 <= v_proj_re_0_V_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_reshape_2D_to_3D_fu_631_input_0_V_q0 <= q_proj_re_0_V_q0;
        else 
            grp_reshape_2D_to_3D_fu_631_input_0_V_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_reshape_2D_to_3D_fu_636_ap_start <= grp_reshape_2D_to_3D_fu_636_ap_start_reg;
    grp_rms_norm_16_s_fu_477_ap_start <= grp_rms_norm_16_s_fu_477_ap_start_reg;

    grp_rms_norm_16_s_fu_477_input_0_V_q0_assign_proc : process(hidden_states_0_V_q0, attn_output_2D_0_V_q0, ap_CS_fsm_state2, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            grp_rms_norm_16_s_fu_477_input_0_V_q0 <= attn_output_2D_0_V_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_rms_norm_16_s_fu_477_input_0_V_q0 <= hidden_states_0_V_q0;
        else 
            grp_rms_norm_16_s_fu_477_input_0_V_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_rms_norm_16_s_fu_477_weight_V_q0_assign_proc : process(ln_weight_in_V_q0, ln_weight_V_q0, ap_CS_fsm_state2, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            grp_rms_norm_16_s_fu_477_weight_V_q0 <= ln_weight_V_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_rms_norm_16_s_fu_477_weight_V_q0 <= ln_weight_in_V_q0;
        else 
            grp_rms_norm_16_s_fu_477_weight_V_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_softmax_1_4_3_s_fu_532_ap_start <= grp_softmax_1_4_3_s_fu_532_ap_start_reg;
    grp_transpose_last_two_d_fu_641_ap_start <= grp_transpose_last_two_d_fu_641_ap_start_reg;
    h_1_fu_1407_p2 <= std_logic_vector(unsigned(h_0_reg_317) + unsigned(ap_const_lv3_1));
    h_fu_1737_p2 <= std_logic_vector(unsigned(h85_0_reg_380) + unsigned(ap_const_lv3_1));

    hidden_states_0_V_address0_assign_proc : process(ap_CS_fsm_state4, grp_rms_norm_16_s_fu_477_input_0_V_address0, grp_quantize_activation_fu_526_input_0_V_address0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            hidden_states_0_V_address0 <= grp_quantize_activation_fu_526_input_0_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            hidden_states_0_V_address0 <= grp_rms_norm_16_s_fu_477_input_0_V_address0;
        else 
            hidden_states_0_V_address0 <= "XXXX";
        end if; 
    end process;


    hidden_states_0_V_address1_assign_proc : process(ap_CS_fsm_state4, grp_rms_norm_16_s_fu_477_input_0_V_address1, grp_quantize_activation_fu_526_input_0_V_address1, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            hidden_states_0_V_address1 <= grp_quantize_activation_fu_526_input_0_V_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            hidden_states_0_V_address1 <= grp_rms_norm_16_s_fu_477_input_0_V_address1;
        else 
            hidden_states_0_V_address1 <= "XXXX";
        end if; 
    end process;


    hidden_states_0_V_ce0_assign_proc : process(ap_CS_fsm_state4, grp_rms_norm_16_s_fu_477_input_0_V_ce0, grp_quantize_activation_fu_526_input_0_V_ce0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            hidden_states_0_V_ce0 <= grp_quantize_activation_fu_526_input_0_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            hidden_states_0_V_ce0 <= grp_rms_norm_16_s_fu_477_input_0_V_ce0;
        else 
            hidden_states_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    hidden_states_0_V_ce1_assign_proc : process(ap_CS_fsm_state4, grp_rms_norm_16_s_fu_477_input_0_V_ce1, grp_quantize_activation_fu_526_input_0_V_ce1, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            hidden_states_0_V_ce1 <= grp_quantize_activation_fu_526_input_0_V_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            hidden_states_0_V_ce1 <= grp_rms_norm_16_s_fu_477_input_0_V_ce1;
        else 
            hidden_states_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    hidden_states_0_V_d1 <= grp_rms_norm_16_s_fu_477_input_0_V_d1;

    hidden_states_0_V_we1_assign_proc : process(grp_rms_norm_16_s_fu_477_input_0_V_we1, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            hidden_states_0_V_we1 <= grp_rms_norm_16_s_fu_477_input_0_V_we1;
        else 
            hidden_states_0_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln185_fu_1401_p2 <= "1" when (h_0_reg_317 = ap_const_lv3_4) else "0";
    icmp_ln187_fu_1417_p2 <= "1" when (d_0_0_reg_328 = ap_const_lv2_3) else "0";
    icmp_ln192_fu_1731_p2 <= "1" when (h85_0_reg_380 = ap_const_lv3_4) else "0";
    icmp_ln218_fu_1941_p2 <= "1" when (h100_0_0_reg_391 = ap_const_lv3_4) else "0";

    k_cache_V_0_ce0_assign_proc : process(grp_cache_update_fu_595_cache_in_0_V_ce0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            k_cache_V_0_ce0 <= grp_cache_update_fu_595_cache_in_0_V_ce0;
        else 
            k_cache_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_cache_V_1_ce0_assign_proc : process(grp_cache_update_fu_595_cache_in_1_V_ce0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            k_cache_V_1_ce0 <= grp_cache_update_fu_595_cache_in_1_V_ce0;
        else 
            k_cache_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_cache_V_2_ce0_assign_proc : process(grp_cache_update_fu_595_cache_in_2_V_ce0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            k_cache_V_2_ce0 <= grp_cache_update_fu_595_cache_in_2_V_ce0;
        else 
            k_cache_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_cache_V_3_ce0_assign_proc : process(grp_cache_update_fu_595_cache_in_3_V_ce0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            k_cache_V_3_ce0 <= grp_cache_update_fu_595_cache_in_3_V_ce0;
        else 
            k_cache_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_cache_upd_0_V_address0_assign_proc : process(grp_cache_update_fu_595_cache_out_0_V_address0, grp_transpose_last_two_d_fu_641_input_0_V_address0, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            k_cache_upd_0_V_address0 <= grp_transpose_last_two_d_fu_641_input_0_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            k_cache_upd_0_V_address0 <= grp_cache_update_fu_595_cache_out_0_V_address0;
        else 
            k_cache_upd_0_V_address0 <= "XXXX";
        end if; 
    end process;


    k_cache_upd_0_V_ce0_assign_proc : process(grp_cache_update_fu_595_cache_out_0_V_ce0, grp_transpose_last_two_d_fu_641_input_0_V_ce0, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            k_cache_upd_0_V_ce0 <= grp_transpose_last_two_d_fu_641_input_0_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            k_cache_upd_0_V_ce0 <= grp_cache_update_fu_595_cache_out_0_V_ce0;
        else 
            k_cache_upd_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_cache_upd_0_V_we0_assign_proc : process(grp_cache_update_fu_595_cache_out_0_V_we0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            k_cache_upd_0_V_we0 <= grp_cache_update_fu_595_cache_out_0_V_we0;
        else 
            k_cache_upd_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_cache_upd_1_V_address0_assign_proc : process(grp_cache_update_fu_595_cache_out_1_V_address0, grp_transpose_last_two_d_fu_641_input_1_V_address0, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            k_cache_upd_1_V_address0 <= grp_transpose_last_two_d_fu_641_input_1_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            k_cache_upd_1_V_address0 <= grp_cache_update_fu_595_cache_out_1_V_address0;
        else 
            k_cache_upd_1_V_address0 <= "XXXX";
        end if; 
    end process;


    k_cache_upd_1_V_ce0_assign_proc : process(grp_cache_update_fu_595_cache_out_1_V_ce0, grp_transpose_last_two_d_fu_641_input_1_V_ce0, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            k_cache_upd_1_V_ce0 <= grp_transpose_last_two_d_fu_641_input_1_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            k_cache_upd_1_V_ce0 <= grp_cache_update_fu_595_cache_out_1_V_ce0;
        else 
            k_cache_upd_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_cache_upd_1_V_we0_assign_proc : process(grp_cache_update_fu_595_cache_out_1_V_we0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            k_cache_upd_1_V_we0 <= grp_cache_update_fu_595_cache_out_1_V_we0;
        else 
            k_cache_upd_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_cache_upd_2_V_address0_assign_proc : process(grp_cache_update_fu_595_cache_out_2_V_address0, grp_transpose_last_two_d_fu_641_input_2_V_address0, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            k_cache_upd_2_V_address0 <= grp_transpose_last_two_d_fu_641_input_2_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            k_cache_upd_2_V_address0 <= grp_cache_update_fu_595_cache_out_2_V_address0;
        else 
            k_cache_upd_2_V_address0 <= "XXXX";
        end if; 
    end process;


    k_cache_upd_2_V_ce0_assign_proc : process(grp_cache_update_fu_595_cache_out_2_V_ce0, grp_transpose_last_two_d_fu_641_input_2_V_ce0, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            k_cache_upd_2_V_ce0 <= grp_transpose_last_two_d_fu_641_input_2_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            k_cache_upd_2_V_ce0 <= grp_cache_update_fu_595_cache_out_2_V_ce0;
        else 
            k_cache_upd_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_cache_upd_2_V_we0_assign_proc : process(grp_cache_update_fu_595_cache_out_2_V_we0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            k_cache_upd_2_V_we0 <= grp_cache_update_fu_595_cache_out_2_V_we0;
        else 
            k_cache_upd_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_cache_upd_3_V_address0_assign_proc : process(grp_cache_update_fu_595_cache_out_3_V_address0, grp_transpose_last_two_d_fu_641_input_3_V_address0, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            k_cache_upd_3_V_address0 <= grp_transpose_last_two_d_fu_641_input_3_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            k_cache_upd_3_V_address0 <= grp_cache_update_fu_595_cache_out_3_V_address0;
        else 
            k_cache_upd_3_V_address0 <= "XXXX";
        end if; 
    end process;


    k_cache_upd_3_V_ce0_assign_proc : process(grp_cache_update_fu_595_cache_out_3_V_ce0, grp_transpose_last_two_d_fu_641_input_3_V_ce0, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            k_cache_upd_3_V_ce0 <= grp_transpose_last_two_d_fu_641_input_3_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            k_cache_upd_3_V_ce0 <= grp_cache_update_fu_595_cache_out_3_V_ce0;
        else 
            k_cache_upd_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_cache_upd_3_V_we0_assign_proc : process(grp_cache_update_fu_595_cache_out_3_V_we0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            k_cache_upd_3_V_we0 <= grp_cache_update_fu_595_cache_out_3_V_we0;
        else 
            k_cache_upd_3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_re_0_V_address0_assign_proc : process(ap_CS_fsm_state8, grp_linear_forward_no_mu_fu_434_output_0_V_address0, grp_reshape_2D_to_3D_fu_636_input_0_V_address0, grp_init_2d_mem_fu_658_mem_0_V_address0, ap_CS_fsm_state6, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            k_proj_re_0_V_address0 <= grp_init_2d_mem_fu_658_mem_0_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            k_proj_re_0_V_address0 <= grp_reshape_2D_to_3D_fu_636_input_0_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            k_proj_re_0_V_address0 <= grp_linear_forward_no_mu_fu_434_output_0_V_address0;
        else 
            k_proj_re_0_V_address0 <= "XXXX";
        end if; 
    end process;


    k_proj_re_0_V_ce0_assign_proc : process(ap_CS_fsm_state8, grp_linear_forward_no_mu_fu_434_output_0_V_ce0, grp_reshape_2D_to_3D_fu_636_input_0_V_ce0, grp_init_2d_mem_fu_658_mem_0_V_ce0, ap_CS_fsm_state6, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            k_proj_re_0_V_ce0 <= grp_init_2d_mem_fu_658_mem_0_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            k_proj_re_0_V_ce0 <= grp_reshape_2D_to_3D_fu_636_input_0_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            k_proj_re_0_V_ce0 <= grp_linear_forward_no_mu_fu_434_output_0_V_ce0;
        else 
            k_proj_re_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_re_0_V_d0_assign_proc : process(grp_linear_forward_no_mu_fu_434_output_0_V_d0, grp_init_2d_mem_fu_658_mem_0_V_d0, ap_CS_fsm_state6, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            k_proj_re_0_V_d0 <= grp_init_2d_mem_fu_658_mem_0_V_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            k_proj_re_0_V_d0 <= grp_linear_forward_no_mu_fu_434_output_0_V_d0;
        else 
            k_proj_re_0_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    k_proj_re_0_V_we0_assign_proc : process(grp_linear_forward_no_mu_fu_434_output_0_V_we0, grp_init_2d_mem_fu_658_mem_0_V_we0, ap_CS_fsm_state6, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            k_proj_re_0_V_we0 <= grp_init_2d_mem_fu_658_mem_0_V_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            k_proj_re_0_V_we0 <= grp_linear_forward_no_mu_fu_434_output_0_V_we0;
        else 
            k_proj_re_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_transposed_0_address0_assign_proc : process(grp_GEMM_3D_float_fu_552_input_2_0_V_address0, grp_transpose_last_two_d_fu_641_output_0_V_address0, ap_CS_fsm_state15, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            k_proj_transposed_0_address0 <= grp_transpose_last_two_d_fu_641_output_0_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            k_proj_transposed_0_address0 <= grp_GEMM_3D_float_fu_552_input_2_0_V_address0;
        else 
            k_proj_transposed_0_address0 <= "XXXX";
        end if; 
    end process;


    k_proj_transposed_0_address1_assign_proc : process(grp_GEMM_3D_float_fu_552_input_2_0_V_address1, grp_transpose_last_two_d_fu_641_output_0_V_address1, ap_CS_fsm_state15, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            k_proj_transposed_0_address1 <= grp_transpose_last_two_d_fu_641_output_0_V_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            k_proj_transposed_0_address1 <= grp_GEMM_3D_float_fu_552_input_2_0_V_address1;
        else 
            k_proj_transposed_0_address1 <= "XXXX";
        end if; 
    end process;


    k_proj_transposed_0_ce0_assign_proc : process(grp_GEMM_3D_float_fu_552_input_2_0_V_ce0, grp_transpose_last_two_d_fu_641_output_0_V_ce0, ap_CS_fsm_state15, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            k_proj_transposed_0_ce0 <= grp_transpose_last_two_d_fu_641_output_0_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            k_proj_transposed_0_ce0 <= grp_GEMM_3D_float_fu_552_input_2_0_V_ce0;
        else 
            k_proj_transposed_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_transposed_0_ce1_assign_proc : process(grp_GEMM_3D_float_fu_552_input_2_0_V_ce1, grp_transpose_last_two_d_fu_641_output_0_V_ce1, ap_CS_fsm_state15, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            k_proj_transposed_0_ce1 <= grp_transpose_last_two_d_fu_641_output_0_V_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            k_proj_transposed_0_ce1 <= grp_GEMM_3D_float_fu_552_input_2_0_V_ce1;
        else 
            k_proj_transposed_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_transposed_0_we0_assign_proc : process(grp_transpose_last_two_d_fu_641_output_0_V_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            k_proj_transposed_0_we0 <= grp_transpose_last_two_d_fu_641_output_0_V_we0;
        else 
            k_proj_transposed_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_transposed_0_we1_assign_proc : process(grp_transpose_last_two_d_fu_641_output_0_V_we1, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            k_proj_transposed_0_we1 <= grp_transpose_last_two_d_fu_641_output_0_V_we1;
        else 
            k_proj_transposed_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_transposed_1_address0_assign_proc : process(grp_GEMM_3D_float_fu_552_input_2_1_V_address0, grp_transpose_last_two_d_fu_641_output_1_V_address0, ap_CS_fsm_state15, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            k_proj_transposed_1_address0 <= grp_transpose_last_two_d_fu_641_output_1_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            k_proj_transposed_1_address0 <= grp_GEMM_3D_float_fu_552_input_2_1_V_address0;
        else 
            k_proj_transposed_1_address0 <= "XXXX";
        end if; 
    end process;


    k_proj_transposed_1_address1_assign_proc : process(grp_GEMM_3D_float_fu_552_input_2_1_V_address1, grp_transpose_last_two_d_fu_641_output_1_V_address1, ap_CS_fsm_state15, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            k_proj_transposed_1_address1 <= grp_transpose_last_two_d_fu_641_output_1_V_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            k_proj_transposed_1_address1 <= grp_GEMM_3D_float_fu_552_input_2_1_V_address1;
        else 
            k_proj_transposed_1_address1 <= "XXXX";
        end if; 
    end process;


    k_proj_transposed_1_ce0_assign_proc : process(grp_GEMM_3D_float_fu_552_input_2_1_V_ce0, grp_transpose_last_two_d_fu_641_output_1_V_ce0, ap_CS_fsm_state15, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            k_proj_transposed_1_ce0 <= grp_transpose_last_two_d_fu_641_output_1_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            k_proj_transposed_1_ce0 <= grp_GEMM_3D_float_fu_552_input_2_1_V_ce0;
        else 
            k_proj_transposed_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_transposed_1_ce1_assign_proc : process(grp_GEMM_3D_float_fu_552_input_2_1_V_ce1, grp_transpose_last_two_d_fu_641_output_1_V_ce1, ap_CS_fsm_state15, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            k_proj_transposed_1_ce1 <= grp_transpose_last_two_d_fu_641_output_1_V_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            k_proj_transposed_1_ce1 <= grp_GEMM_3D_float_fu_552_input_2_1_V_ce1;
        else 
            k_proj_transposed_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_transposed_1_we0_assign_proc : process(grp_transpose_last_two_d_fu_641_output_1_V_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            k_proj_transposed_1_we0 <= grp_transpose_last_two_d_fu_641_output_1_V_we0;
        else 
            k_proj_transposed_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_transposed_1_we1_assign_proc : process(grp_transpose_last_two_d_fu_641_output_1_V_we1, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            k_proj_transposed_1_we1 <= grp_transpose_last_two_d_fu_641_output_1_V_we1;
        else 
            k_proj_transposed_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_transposed_2_address0_assign_proc : process(grp_GEMM_3D_float_fu_552_input_2_2_V_address0, grp_transpose_last_two_d_fu_641_output_2_V_address0, ap_CS_fsm_state15, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            k_proj_transposed_2_address0 <= grp_transpose_last_two_d_fu_641_output_2_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            k_proj_transposed_2_address0 <= grp_GEMM_3D_float_fu_552_input_2_2_V_address0;
        else 
            k_proj_transposed_2_address0 <= "XXXX";
        end if; 
    end process;


    k_proj_transposed_2_address1_assign_proc : process(grp_GEMM_3D_float_fu_552_input_2_2_V_address1, grp_transpose_last_two_d_fu_641_output_2_V_address1, ap_CS_fsm_state15, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            k_proj_transposed_2_address1 <= grp_transpose_last_two_d_fu_641_output_2_V_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            k_proj_transposed_2_address1 <= grp_GEMM_3D_float_fu_552_input_2_2_V_address1;
        else 
            k_proj_transposed_2_address1 <= "XXXX";
        end if; 
    end process;


    k_proj_transposed_2_ce0_assign_proc : process(grp_GEMM_3D_float_fu_552_input_2_2_V_ce0, grp_transpose_last_two_d_fu_641_output_2_V_ce0, ap_CS_fsm_state15, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            k_proj_transposed_2_ce0 <= grp_transpose_last_two_d_fu_641_output_2_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            k_proj_transposed_2_ce0 <= grp_GEMM_3D_float_fu_552_input_2_2_V_ce0;
        else 
            k_proj_transposed_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_transposed_2_ce1_assign_proc : process(grp_GEMM_3D_float_fu_552_input_2_2_V_ce1, grp_transpose_last_two_d_fu_641_output_2_V_ce1, ap_CS_fsm_state15, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            k_proj_transposed_2_ce1 <= grp_transpose_last_two_d_fu_641_output_2_V_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            k_proj_transposed_2_ce1 <= grp_GEMM_3D_float_fu_552_input_2_2_V_ce1;
        else 
            k_proj_transposed_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_transposed_2_we0_assign_proc : process(grp_transpose_last_two_d_fu_641_output_2_V_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            k_proj_transposed_2_we0 <= grp_transpose_last_two_d_fu_641_output_2_V_we0;
        else 
            k_proj_transposed_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_transposed_2_we1_assign_proc : process(grp_transpose_last_two_d_fu_641_output_2_V_we1, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            k_proj_transposed_2_we1 <= grp_transpose_last_two_d_fu_641_output_2_V_we1;
        else 
            k_proj_transposed_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    ln_weight_V_ce0_assign_proc : process(grp_rms_norm_16_s_fu_477_weight_V_ce0, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            ln_weight_V_ce0 <= grp_rms_norm_16_s_fu_477_weight_V_ce0;
        else 
            ln_weight_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ln_weight_in_V_ce0_assign_proc : process(grp_rms_norm_16_s_fu_477_weight_V_ce0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ln_weight_in_V_ce0 <= grp_rms_norm_16_s_fu_477_weight_V_ce0;
        else 
            ln_weight_in_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    o_weights_0_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_402_packed_weights_0_ce0, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            o_weights_0_ce0 <= grp_linear_forward_no_mu_fu_402_packed_weights_0_ce0;
        else 
            o_weights_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    o_weights_1_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_402_packed_weights_1_ce0, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            o_weights_1_ce0 <= grp_linear_forward_no_mu_fu_402_packed_weights_1_ce0;
        else 
            o_weights_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    o_weights_2_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_402_packed_weights_2_ce0, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            o_weights_2_ce0 <= grp_linear_forward_no_mu_fu_402_packed_weights_2_ce0;
        else 
            o_weights_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    o_weights_3_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_402_packed_weights_3_ce0, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            o_weights_3_ce0 <= grp_linear_forward_no_mu_fu_402_packed_weights_3_ce0;
        else 
            o_weights_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln220_1_fu_2003_p2 <= (shl_ln2_reg_2645 or ap_const_lv4_2);
    or_ln220_2_fu_2023_p2 <= (shl_ln2_reg_2645 or ap_const_lv4_3);
    or_ln220_fu_1981_p2 <= (shl_ln2_fu_1957_p3 or ap_const_lv4_1);

    q_proj_re_0_V_address0_assign_proc : process(ap_CS_fsm_state8, grp_linear_forward_no_mu_fu_402_output_0_V_address0, grp_reshape_2D_to_3D_fu_631_input_0_V_address0, grp_init_2d_mem_fu_652_mem_0_V_address0, ap_CS_fsm_state6, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            q_proj_re_0_V_address0 <= grp_init_2d_mem_fu_652_mem_0_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            q_proj_re_0_V_address0 <= grp_reshape_2D_to_3D_fu_631_input_0_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            q_proj_re_0_V_address0 <= grp_linear_forward_no_mu_fu_402_output_0_V_address0;
        else 
            q_proj_re_0_V_address0 <= "XXXX";
        end if; 
    end process;


    q_proj_re_0_V_ce0_assign_proc : process(ap_CS_fsm_state8, grp_linear_forward_no_mu_fu_402_output_0_V_ce0, grp_reshape_2D_to_3D_fu_631_input_0_V_ce0, grp_init_2d_mem_fu_652_mem_0_V_ce0, ap_CS_fsm_state6, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            q_proj_re_0_V_ce0 <= grp_init_2d_mem_fu_652_mem_0_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            q_proj_re_0_V_ce0 <= grp_reshape_2D_to_3D_fu_631_input_0_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            q_proj_re_0_V_ce0 <= grp_linear_forward_no_mu_fu_402_output_0_V_ce0;
        else 
            q_proj_re_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    q_proj_re_0_V_d0_assign_proc : process(grp_linear_forward_no_mu_fu_402_output_0_V_d0, grp_init_2d_mem_fu_652_mem_0_V_d0, ap_CS_fsm_state6, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            q_proj_re_0_V_d0 <= grp_init_2d_mem_fu_652_mem_0_V_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            q_proj_re_0_V_d0 <= grp_linear_forward_no_mu_fu_402_output_0_V_d0;
        else 
            q_proj_re_0_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    q_proj_re_0_V_we0_assign_proc : process(grp_linear_forward_no_mu_fu_402_output_0_V_we0, grp_init_2d_mem_fu_652_mem_0_V_we0, ap_CS_fsm_state6, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            q_proj_re_0_V_we0 <= grp_init_2d_mem_fu_652_mem_0_V_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            q_proj_re_0_V_we0 <= grp_linear_forward_no_mu_fu_402_output_0_V_we0;
        else 
            q_proj_re_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    q_weights_0_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_402_packed_weights_0_ce0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            q_weights_0_ce0 <= grp_linear_forward_no_mu_fu_402_packed_weights_0_ce0;
        else 
            q_weights_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    q_weights_1_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_402_packed_weights_1_ce0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            q_weights_1_ce0 <= grp_linear_forward_no_mu_fu_402_packed_weights_1_ce0;
        else 
            q_weights_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    q_weights_2_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_402_packed_weights_2_ce0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            q_weights_2_ce0 <= grp_linear_forward_no_mu_fu_402_packed_weights_2_ce0;
        else 
            q_weights_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    q_weights_3_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_402_packed_weights_3_ce0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            q_weights_3_ce0 <= grp_linear_forward_no_mu_fu_402_packed_weights_3_ce0;
        else 
            q_weights_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln1148_fu_1520_p3 <= 
        sub_ln1148_2_fu_1514_p2 when (tmp_106_reg_2448(0) = '1') else 
        zext_ln1148_2_fu_1511_p1;
    shl_ln2_fu_1957_p3 <= (trunc_ln220_fu_1953_p1 & ap_const_lv2_0);
    shl_ln_fu_1466_p3 <= (tmp_11_fu_1436_p14 & ap_const_lv16_0);
    sub_ln1148_2_fu_1514_p2 <= std_logic_vector(unsigned(ap_const_lv40_0) - unsigned(zext_ln1148_fu_1508_p1));
    sub_ln1148_fu_1482_p2 <= std_logic_vector(unsigned(ap_const_lv56_0) - unsigned(shl_ln_fu_1466_p3));
    tmp_11_fu_1436_p13 <= (d_0_0_reg_328 & trunc_ln1265_reg_2395);
    trunc_ln1265_1_fu_1743_p1 <= h85_0_reg_380(2 - 1 downto 0);
    trunc_ln1265_fu_1413_p1 <= h_0_reg_317(2 - 1 downto 0);
    trunc_ln220_fu_1953_p1 <= h100_0_0_reg_391(2 - 1 downto 0);

    v_cache_V_0_ce0_assign_proc : process(grp_cache_update_fu_595_cache_in_0_V_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            v_cache_V_0_ce0 <= grp_cache_update_fu_595_cache_in_0_V_ce0;
        else 
            v_cache_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v_cache_V_1_ce0_assign_proc : process(grp_cache_update_fu_595_cache_in_1_V_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            v_cache_V_1_ce0 <= grp_cache_update_fu_595_cache_in_1_V_ce0;
        else 
            v_cache_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v_cache_V_2_ce0_assign_proc : process(grp_cache_update_fu_595_cache_in_2_V_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            v_cache_V_2_ce0 <= grp_cache_update_fu_595_cache_in_2_V_ce0;
        else 
            v_cache_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v_cache_V_3_ce0_assign_proc : process(grp_cache_update_fu_595_cache_in_3_V_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            v_cache_V_3_ce0 <= grp_cache_update_fu_595_cache_in_3_V_ce0;
        else 
            v_cache_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v_cache_upd_0_V_address0_assign_proc : process(ap_CS_fsm_state21, grp_GEMM_3D_float_1_fu_575_input_2_0_V_address0, grp_cache_update_fu_595_cache_out_0_V_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            v_cache_upd_0_V_address0 <= grp_cache_update_fu_595_cache_out_0_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            v_cache_upd_0_V_address0 <= grp_GEMM_3D_float_1_fu_575_input_2_0_V_address0;
        else 
            v_cache_upd_0_V_address0 <= "XXXX";
        end if; 
    end process;


    v_cache_upd_0_V_ce0_assign_proc : process(ap_CS_fsm_state21, grp_GEMM_3D_float_1_fu_575_input_2_0_V_ce0, grp_cache_update_fu_595_cache_out_0_V_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            v_cache_upd_0_V_ce0 <= grp_cache_update_fu_595_cache_out_0_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            v_cache_upd_0_V_ce0 <= grp_GEMM_3D_float_1_fu_575_input_2_0_V_ce0;
        else 
            v_cache_upd_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v_cache_upd_0_V_ce1_assign_proc : process(ap_CS_fsm_state21, grp_GEMM_3D_float_1_fu_575_input_2_0_V_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            v_cache_upd_0_V_ce1 <= grp_GEMM_3D_float_1_fu_575_input_2_0_V_ce1;
        else 
            v_cache_upd_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    v_cache_upd_0_V_we0_assign_proc : process(grp_cache_update_fu_595_cache_out_0_V_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            v_cache_upd_0_V_we0 <= grp_cache_update_fu_595_cache_out_0_V_we0;
        else 
            v_cache_upd_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    v_cache_upd_1_V_address0_assign_proc : process(ap_CS_fsm_state21, grp_GEMM_3D_float_1_fu_575_input_2_1_V_address0, grp_cache_update_fu_595_cache_out_1_V_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            v_cache_upd_1_V_address0 <= grp_cache_update_fu_595_cache_out_1_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            v_cache_upd_1_V_address0 <= grp_GEMM_3D_float_1_fu_575_input_2_1_V_address0;
        else 
            v_cache_upd_1_V_address0 <= "XXXX";
        end if; 
    end process;


    v_cache_upd_1_V_ce0_assign_proc : process(ap_CS_fsm_state21, grp_GEMM_3D_float_1_fu_575_input_2_1_V_ce0, grp_cache_update_fu_595_cache_out_1_V_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            v_cache_upd_1_V_ce0 <= grp_cache_update_fu_595_cache_out_1_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            v_cache_upd_1_V_ce0 <= grp_GEMM_3D_float_1_fu_575_input_2_1_V_ce0;
        else 
            v_cache_upd_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v_cache_upd_1_V_ce1_assign_proc : process(ap_CS_fsm_state21, grp_GEMM_3D_float_1_fu_575_input_2_1_V_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            v_cache_upd_1_V_ce1 <= grp_GEMM_3D_float_1_fu_575_input_2_1_V_ce1;
        else 
            v_cache_upd_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    v_cache_upd_1_V_we0_assign_proc : process(grp_cache_update_fu_595_cache_out_1_V_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            v_cache_upd_1_V_we0 <= grp_cache_update_fu_595_cache_out_1_V_we0;
        else 
            v_cache_upd_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    v_cache_upd_2_V_address0_assign_proc : process(ap_CS_fsm_state21, grp_GEMM_3D_float_1_fu_575_input_2_2_V_address0, grp_cache_update_fu_595_cache_out_2_V_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            v_cache_upd_2_V_address0 <= grp_cache_update_fu_595_cache_out_2_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            v_cache_upd_2_V_address0 <= grp_GEMM_3D_float_1_fu_575_input_2_2_V_address0;
        else 
            v_cache_upd_2_V_address0 <= "XXXX";
        end if; 
    end process;


    v_cache_upd_2_V_ce0_assign_proc : process(ap_CS_fsm_state21, grp_GEMM_3D_float_1_fu_575_input_2_2_V_ce0, grp_cache_update_fu_595_cache_out_2_V_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            v_cache_upd_2_V_ce0 <= grp_cache_update_fu_595_cache_out_2_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            v_cache_upd_2_V_ce0 <= grp_GEMM_3D_float_1_fu_575_input_2_2_V_ce0;
        else 
            v_cache_upd_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v_cache_upd_2_V_ce1_assign_proc : process(ap_CS_fsm_state21, grp_GEMM_3D_float_1_fu_575_input_2_2_V_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            v_cache_upd_2_V_ce1 <= grp_GEMM_3D_float_1_fu_575_input_2_2_V_ce1;
        else 
            v_cache_upd_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    v_cache_upd_2_V_we0_assign_proc : process(grp_cache_update_fu_595_cache_out_2_V_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            v_cache_upd_2_V_we0 <= grp_cache_update_fu_595_cache_out_2_V_we0;
        else 
            v_cache_upd_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    v_cache_upd_3_V_address0_assign_proc : process(ap_CS_fsm_state21, grp_GEMM_3D_float_1_fu_575_input_2_3_V_address0, grp_cache_update_fu_595_cache_out_3_V_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            v_cache_upd_3_V_address0 <= grp_cache_update_fu_595_cache_out_3_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            v_cache_upd_3_V_address0 <= grp_GEMM_3D_float_1_fu_575_input_2_3_V_address0;
        else 
            v_cache_upd_3_V_address0 <= "XXXX";
        end if; 
    end process;


    v_cache_upd_3_V_ce0_assign_proc : process(ap_CS_fsm_state21, grp_GEMM_3D_float_1_fu_575_input_2_3_V_ce0, grp_cache_update_fu_595_cache_out_3_V_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            v_cache_upd_3_V_ce0 <= grp_cache_update_fu_595_cache_out_3_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            v_cache_upd_3_V_ce0 <= grp_GEMM_3D_float_1_fu_575_input_2_3_V_ce0;
        else 
            v_cache_upd_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v_cache_upd_3_V_ce1_assign_proc : process(ap_CS_fsm_state21, grp_GEMM_3D_float_1_fu_575_input_2_3_V_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            v_cache_upd_3_V_ce1 <= grp_GEMM_3D_float_1_fu_575_input_2_3_V_ce1;
        else 
            v_cache_upd_3_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    v_cache_upd_3_V_we0_assign_proc : process(grp_cache_update_fu_595_cache_out_3_V_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            v_cache_upd_3_V_we0 <= grp_cache_update_fu_595_cache_out_3_V_we0;
        else 
            v_cache_upd_3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    v_proj_re_0_V_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state10, grp_linear_forward_no_mu_fu_402_output_0_V_address0, grp_reshape_2D_to_3D_fu_631_input_0_V_address0, grp_init_2d_mem_fu_664_mem_0_V_address0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            v_proj_re_0_V_address0 <= grp_init_2d_mem_fu_664_mem_0_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            v_proj_re_0_V_address0 <= grp_reshape_2D_to_3D_fu_631_input_0_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            v_proj_re_0_V_address0 <= grp_linear_forward_no_mu_fu_402_output_0_V_address0;
        else 
            v_proj_re_0_V_address0 <= "XXXX";
        end if; 
    end process;


    v_proj_re_0_V_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state10, grp_linear_forward_no_mu_fu_402_output_0_V_ce0, grp_reshape_2D_to_3D_fu_631_input_0_V_ce0, grp_init_2d_mem_fu_664_mem_0_V_ce0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            v_proj_re_0_V_ce0 <= grp_init_2d_mem_fu_664_mem_0_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            v_proj_re_0_V_ce0 <= grp_reshape_2D_to_3D_fu_631_input_0_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            v_proj_re_0_V_ce0 <= grp_linear_forward_no_mu_fu_402_output_0_V_ce0;
        else 
            v_proj_re_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v_proj_re_0_V_d0_assign_proc : process(ap_CS_fsm_state8, grp_linear_forward_no_mu_fu_402_output_0_V_d0, grp_init_2d_mem_fu_664_mem_0_V_d0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            v_proj_re_0_V_d0 <= grp_init_2d_mem_fu_664_mem_0_V_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            v_proj_re_0_V_d0 <= grp_linear_forward_no_mu_fu_402_output_0_V_d0;
        else 
            v_proj_re_0_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    v_proj_re_0_V_we0_assign_proc : process(ap_CS_fsm_state8, grp_linear_forward_no_mu_fu_402_output_0_V_we0, grp_init_2d_mem_fu_664_mem_0_V_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            v_proj_re_0_V_we0 <= grp_init_2d_mem_fu_664_mem_0_V_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            v_proj_re_0_V_we0 <= grp_linear_forward_no_mu_fu_402_output_0_V_we0;
        else 
            v_proj_re_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    v_weights_0_ce0_assign_proc : process(ap_CS_fsm_state8, grp_linear_forward_no_mu_fu_402_packed_weights_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            v_weights_0_ce0 <= grp_linear_forward_no_mu_fu_402_packed_weights_0_ce0;
        else 
            v_weights_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v_weights_1_ce0_assign_proc : process(ap_CS_fsm_state8, grp_linear_forward_no_mu_fu_402_packed_weights_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            v_weights_1_ce0 <= grp_linear_forward_no_mu_fu_402_packed_weights_1_ce0;
        else 
            v_weights_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v_weights_2_ce0_assign_proc : process(ap_CS_fsm_state8, grp_linear_forward_no_mu_fu_402_packed_weights_2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            v_weights_2_ce0 <= grp_linear_forward_no_mu_fu_402_packed_weights_2_ce0;
        else 
            v_weights_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v_weights_3_ce0_assign_proc : process(ap_CS_fsm_state8, grp_linear_forward_no_mu_fu_402_packed_weights_3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            v_weights_3_ce0 <= grp_linear_forward_no_mu_fu_402_packed_weights_3_ce0;
        else 
            v_weights_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln1148_2_fu_1511_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1148_4_reg_2458),40));
    zext_ln1148_fu_1508_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_56_reg_2453),40));
    zext_ln220_1_fu_1987_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln220_fu_1981_p2),64));
    zext_ln220_2_fu_2008_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln220_1_fu_2003_p2),64));
    zext_ln220_3_fu_2028_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln220_2_fu_2023_p2),64));
    zext_ln220_fu_1965_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln2_fu_1957_p3),64));
end behav;
