// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "cache_update.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic cache_update::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic cache_update::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> cache_update::ap_ST_fsm_state1 = "1";
const sc_lv<3> cache_update::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> cache_update::ap_ST_fsm_state4 = "100";
const bool cache_update::ap_const_boolean_1 = true;
const sc_lv<32> cache_update::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> cache_update::ap_const_lv32_1 = "1";
const bool cache_update::ap_const_boolean_0 = false;
const sc_lv<1> cache_update::ap_const_lv1_0 = "0";
const sc_lv<1> cache_update::ap_const_lv1_1 = "1";
const sc_lv<4> cache_update::ap_const_lv4_0 = "0000";
const sc_lv<3> cache_update::ap_const_lv3_0 = "000";
const sc_lv<2> cache_update::ap_const_lv2_0 = "00";
const sc_lv<4> cache_update::ap_const_lv4_C = "1100";
const sc_lv<4> cache_update::ap_const_lv4_1 = "1";
const sc_lv<3> cache_update::ap_const_lv3_1 = "1";
const sc_lv<2> cache_update::ap_const_lv2_3 = "11";
const sc_lv<2> cache_update::ap_const_lv2_1 = "1";
const sc_lv<2> cache_update::ap_const_lv2_2 = "10";
const sc_lv<32> cache_update::ap_const_lv32_2 = "10";

cache_update::cache_update(sc_module_name name) : sc_module(name), mVcdFile(0) {
    dut_mux_42_40_1_1_U86 = new dut_mux_42_40_1_1<1,1,40,40,40,40,2,40>("dut_mux_42_40_1_1_U86");
    dut_mux_42_40_1_1_U86->din0(p_read);
    dut_mux_42_40_1_1_U86->din1(p_read1);
    dut_mux_42_40_1_1_U86->din2(p_read2);
    dut_mux_42_40_1_1_U86->din3(p_read3);
    dut_mux_42_40_1_1_U86->din4(trunc_ln239_fu_387_p1);
    dut_mux_42_40_1_1_U86->dout(tmp_6_fu_409_p6);
    dut_mux_42_40_1_1_U87 = new dut_mux_42_40_1_1<1,1,40,40,40,40,2,40>("dut_mux_42_40_1_1_U87");
    dut_mux_42_40_1_1_U87->din0(p_read4);
    dut_mux_42_40_1_1_U87->din1(p_read5);
    dut_mux_42_40_1_1_U87->din2(p_read6);
    dut_mux_42_40_1_1_U87->din3(p_read7);
    dut_mux_42_40_1_1_U87->din4(trunc_ln239_fu_387_p1);
    dut_mux_42_40_1_1_U87->dout(tmp_7_fu_419_p6);
    dut_mux_42_40_1_1_U88 = new dut_mux_42_40_1_1<1,1,40,40,40,40,2,40>("dut_mux_42_40_1_1_U88");
    dut_mux_42_40_1_1_U88->din0(p_read8);
    dut_mux_42_40_1_1_U88->din1(p_read9);
    dut_mux_42_40_1_1_U88->din2(p_read10);
    dut_mux_42_40_1_1_U88->din3(p_read11);
    dut_mux_42_40_1_1_U88->din4(trunc_ln239_fu_387_p1);
    dut_mux_42_40_1_1_U88->dout(tmp_8_fu_429_p6);
    dut_mux_42_40_1_1_U89 = new dut_mux_42_40_1_1<1,1,40,40,40,40,2,40>("dut_mux_42_40_1_1_U89");
    dut_mux_42_40_1_1_U89->din0(p_read12);
    dut_mux_42_40_1_1_U89->din1(p_read13);
    dut_mux_42_40_1_1_U89->din2(p_read14);
    dut_mux_42_40_1_1_U89->din3(p_read15);
    dut_mux_42_40_1_1_U89->din4(trunc_ln239_fu_387_p1);
    dut_mux_42_40_1_1_U89->dout(tmp_9_fu_439_p6);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln203_fu_471_p2);
    sensitive << ( zext_ln239_1_reg_622 );
    sensitive << ( sub_ln203_fu_465_p2 );

    SC_METHOD(thread_add_ln236_fu_341_p2);
    sensitive << ( indvar_flatten_reg_302 );

    SC_METHOD(thread_add_ln239_fu_395_p2);
    sensitive << ( zext_ln239_1_fu_391_p1 );
    sensitive << ( zext_ln203_fu_383_p1 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln236_fu_335_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_i_0_phi_fu_317_p4);
    sensitive << ( i_0_reg_313 );
    sensitive << ( icmp_ln236_reg_601 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( select_ln239_5_reg_615 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_cache_in_0_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln239_2_fu_401_p1 );

    SC_METHOD(thread_cache_in_0_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_cache_in_1_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln239_2_fu_401_p1 );

    SC_METHOD(thread_cache_in_1_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_cache_in_2_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln239_2_fu_401_p1 );

    SC_METHOD(thread_cache_in_2_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_cache_in_3_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln239_2_fu_401_p1 );

    SC_METHOD(thread_cache_in_3_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_cache_out_0_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( sext_ln203_fu_476_p1 );

    SC_METHOD(thread_cache_out_0_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_cache_out_0_V_d0);
    sensitive << ( cache_in_0_V_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_6_reg_647 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln239_fu_484_p2 );

    SC_METHOD(thread_cache_out_0_V_we0);
    sensitive << ( icmp_ln236_reg_601 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_cache_out_1_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( sext_ln203_fu_476_p1 );

    SC_METHOD(thread_cache_out_1_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_cache_out_1_V_d0);
    sensitive << ( cache_in_1_V_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_7_reg_652 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln239_fu_484_p2 );

    SC_METHOD(thread_cache_out_1_V_we0);
    sensitive << ( icmp_ln236_reg_601 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_cache_out_2_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( sext_ln203_fu_476_p1 );

    SC_METHOD(thread_cache_out_2_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_cache_out_2_V_d0);
    sensitive << ( cache_in_2_V_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_8_reg_657 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln239_fu_484_p2 );

    SC_METHOD(thread_cache_out_2_V_we0);
    sensitive << ( icmp_ln236_reg_601 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_cache_out_3_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( sext_ln203_fu_476_p1 );

    SC_METHOD(thread_cache_out_3_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_cache_out_3_V_d0);
    sensitive << ( cache_in_3_V_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_9_reg_662 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln239_fu_484_p2 );

    SC_METHOD(thread_cache_out_3_V_we0);
    sensitive << ( icmp_ln236_reg_601 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_i_fu_347_p2);
    sensitive << ( ap_phi_mux_i_0_phi_fu_317_p4 );

    SC_METHOD(thread_icmp_ln236_fu_335_p2);
    sensitive << ( indvar_flatten_reg_302 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln237_fu_353_p2);
    sensitive << ( j_0_reg_324 );
    sensitive << ( icmp_ln236_fu_335_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln239_fu_484_p2);
    sensitive << ( icmp_ln236_reg_601 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( select_ln239_4_reg_610 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_j_fu_449_p2);
    sensitive << ( select_ln239_4_fu_359_p3 );

    SC_METHOD(thread_select_ln239_4_fu_359_p3);
    sensitive << ( j_0_reg_324 );
    sensitive << ( icmp_ln237_fu_353_p2 );

    SC_METHOD(thread_select_ln239_5_fu_367_p3);
    sensitive << ( ap_phi_mux_i_0_phi_fu_317_p4 );
    sensitive << ( icmp_ln237_fu_353_p2 );
    sensitive << ( i_fu_347_p2 );

    SC_METHOD(thread_sext_ln203_fu_476_p1);
    sensitive << ( add_ln203_fu_471_p2 );

    SC_METHOD(thread_sub_ln203_fu_465_p2);
    sensitive << ( tmp_55_fu_458_p3 );
    sensitive << ( zext_ln239_fu_455_p1 );

    SC_METHOD(thread_tmp_55_fu_458_p3);
    sensitive << ( select_ln239_5_reg_615 );

    SC_METHOD(thread_tmp_fu_375_p3);
    sensitive << ( select_ln239_5_fu_367_p3 );

    SC_METHOD(thread_trunc_ln239_fu_387_p1);
    sensitive << ( select_ln239_5_fu_367_p3 );

    SC_METHOD(thread_zext_ln203_fu_383_p1);
    sensitive << ( tmp_fu_375_p3 );

    SC_METHOD(thread_zext_ln239_1_fu_391_p1);
    sensitive << ( select_ln239_4_fu_359_p3 );

    SC_METHOD(thread_zext_ln239_2_fu_401_p1);
    sensitive << ( add_ln239_fu_395_p2 );

    SC_METHOD(thread_zext_ln239_fu_455_p1);
    sensitive << ( select_ln239_5_reg_615 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln236_fu_335_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "cache_update_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, cache_in_0_V_address0, "(port)cache_in_0_V_address0");
    sc_trace(mVcdFile, cache_in_0_V_ce0, "(port)cache_in_0_V_ce0");
    sc_trace(mVcdFile, cache_in_0_V_q0, "(port)cache_in_0_V_q0");
    sc_trace(mVcdFile, cache_in_1_V_address0, "(port)cache_in_1_V_address0");
    sc_trace(mVcdFile, cache_in_1_V_ce0, "(port)cache_in_1_V_ce0");
    sc_trace(mVcdFile, cache_in_1_V_q0, "(port)cache_in_1_V_q0");
    sc_trace(mVcdFile, cache_in_2_V_address0, "(port)cache_in_2_V_address0");
    sc_trace(mVcdFile, cache_in_2_V_ce0, "(port)cache_in_2_V_ce0");
    sc_trace(mVcdFile, cache_in_2_V_q0, "(port)cache_in_2_V_q0");
    sc_trace(mVcdFile, cache_in_3_V_address0, "(port)cache_in_3_V_address0");
    sc_trace(mVcdFile, cache_in_3_V_ce0, "(port)cache_in_3_V_ce0");
    sc_trace(mVcdFile, cache_in_3_V_q0, "(port)cache_in_3_V_q0");
    sc_trace(mVcdFile, cache_out_0_V_address0, "(port)cache_out_0_V_address0");
    sc_trace(mVcdFile, cache_out_0_V_ce0, "(port)cache_out_0_V_ce0");
    sc_trace(mVcdFile, cache_out_0_V_we0, "(port)cache_out_0_V_we0");
    sc_trace(mVcdFile, cache_out_0_V_d0, "(port)cache_out_0_V_d0");
    sc_trace(mVcdFile, cache_out_1_V_address0, "(port)cache_out_1_V_address0");
    sc_trace(mVcdFile, cache_out_1_V_ce0, "(port)cache_out_1_V_ce0");
    sc_trace(mVcdFile, cache_out_1_V_we0, "(port)cache_out_1_V_we0");
    sc_trace(mVcdFile, cache_out_1_V_d0, "(port)cache_out_1_V_d0");
    sc_trace(mVcdFile, cache_out_2_V_address0, "(port)cache_out_2_V_address0");
    sc_trace(mVcdFile, cache_out_2_V_ce0, "(port)cache_out_2_V_ce0");
    sc_trace(mVcdFile, cache_out_2_V_we0, "(port)cache_out_2_V_we0");
    sc_trace(mVcdFile, cache_out_2_V_d0, "(port)cache_out_2_V_d0");
    sc_trace(mVcdFile, cache_out_3_V_address0, "(port)cache_out_3_V_address0");
    sc_trace(mVcdFile, cache_out_3_V_ce0, "(port)cache_out_3_V_ce0");
    sc_trace(mVcdFile, cache_out_3_V_we0, "(port)cache_out_3_V_we0");
    sc_trace(mVcdFile, cache_out_3_V_d0, "(port)cache_out_3_V_d0");
    sc_trace(mVcdFile, p_read, "(port)p_read");
    sc_trace(mVcdFile, p_read1, "(port)p_read1");
    sc_trace(mVcdFile, p_read2, "(port)p_read2");
    sc_trace(mVcdFile, p_read3, "(port)p_read3");
    sc_trace(mVcdFile, p_read4, "(port)p_read4");
    sc_trace(mVcdFile, p_read5, "(port)p_read5");
    sc_trace(mVcdFile, p_read6, "(port)p_read6");
    sc_trace(mVcdFile, p_read7, "(port)p_read7");
    sc_trace(mVcdFile, p_read8, "(port)p_read8");
    sc_trace(mVcdFile, p_read9, "(port)p_read9");
    sc_trace(mVcdFile, p_read10, "(port)p_read10");
    sc_trace(mVcdFile, p_read11, "(port)p_read11");
    sc_trace(mVcdFile, p_read12, "(port)p_read12");
    sc_trace(mVcdFile, p_read13, "(port)p_read13");
    sc_trace(mVcdFile, p_read14, "(port)p_read14");
    sc_trace(mVcdFile, p_read15, "(port)p_read15");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten_reg_302, "indvar_flatten_reg_302");
    sc_trace(mVcdFile, i_0_reg_313, "i_0_reg_313");
    sc_trace(mVcdFile, j_0_reg_324, "j_0_reg_324");
    sc_trace(mVcdFile, icmp_ln236_fu_335_p2, "icmp_ln236_fu_335_p2");
    sc_trace(mVcdFile, icmp_ln236_reg_601, "icmp_ln236_reg_601");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, add_ln236_fu_341_p2, "add_ln236_fu_341_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, select_ln239_4_fu_359_p3, "select_ln239_4_fu_359_p3");
    sc_trace(mVcdFile, select_ln239_4_reg_610, "select_ln239_4_reg_610");
    sc_trace(mVcdFile, select_ln239_5_fu_367_p3, "select_ln239_5_fu_367_p3");
    sc_trace(mVcdFile, select_ln239_5_reg_615, "select_ln239_5_reg_615");
    sc_trace(mVcdFile, zext_ln239_1_fu_391_p1, "zext_ln239_1_fu_391_p1");
    sc_trace(mVcdFile, zext_ln239_1_reg_622, "zext_ln239_1_reg_622");
    sc_trace(mVcdFile, tmp_6_fu_409_p6, "tmp_6_fu_409_p6");
    sc_trace(mVcdFile, tmp_6_reg_647, "tmp_6_reg_647");
    sc_trace(mVcdFile, tmp_7_fu_419_p6, "tmp_7_fu_419_p6");
    sc_trace(mVcdFile, tmp_7_reg_652, "tmp_7_reg_652");
    sc_trace(mVcdFile, tmp_8_fu_429_p6, "tmp_8_fu_429_p6");
    sc_trace(mVcdFile, tmp_8_reg_657, "tmp_8_reg_657");
    sc_trace(mVcdFile, tmp_9_fu_439_p6, "tmp_9_fu_439_p6");
    sc_trace(mVcdFile, tmp_9_reg_662, "tmp_9_reg_662");
    sc_trace(mVcdFile, j_fu_449_p2, "j_fu_449_p2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_phi_mux_i_0_phi_fu_317_p4, "ap_phi_mux_i_0_phi_fu_317_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, zext_ln239_2_fu_401_p1, "zext_ln239_2_fu_401_p1");
    sc_trace(mVcdFile, sext_ln203_fu_476_p1, "sext_ln203_fu_476_p1");
    sc_trace(mVcdFile, icmp_ln237_fu_353_p2, "icmp_ln237_fu_353_p2");
    sc_trace(mVcdFile, i_fu_347_p2, "i_fu_347_p2");
    sc_trace(mVcdFile, tmp_fu_375_p3, "tmp_fu_375_p3");
    sc_trace(mVcdFile, zext_ln203_fu_383_p1, "zext_ln203_fu_383_p1");
    sc_trace(mVcdFile, add_ln239_fu_395_p2, "add_ln239_fu_395_p2");
    sc_trace(mVcdFile, trunc_ln239_fu_387_p1, "trunc_ln239_fu_387_p1");
    sc_trace(mVcdFile, tmp_55_fu_458_p3, "tmp_55_fu_458_p3");
    sc_trace(mVcdFile, zext_ln239_fu_455_p1, "zext_ln239_fu_455_p1");
    sc_trace(mVcdFile, sub_ln203_fu_465_p2, "sub_ln203_fu_465_p2");
    sc_trace(mVcdFile, add_ln203_fu_471_p2, "add_ln203_fu_471_p2");
    sc_trace(mVcdFile, icmp_ln239_fu_484_p2, "icmp_ln239_fu_484_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

cache_update::~cache_update() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete dut_mux_42_40_1_1_U86;
    delete dut_mux_42_40_1_1_U87;
    delete dut_mux_42_40_1_1_U88;
    delete dut_mux_42_40_1_1_U89;
}

void cache_update::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln236_reg_601.read(), ap_const_lv1_0))) {
        i_0_reg_313 = select_ln239_5_reg_615.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_313 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln236_fu_335_p2.read(), ap_const_lv1_0))) {
        indvar_flatten_reg_302 = add_ln236_fu_341_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_302 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln236_fu_335_p2.read(), ap_const_lv1_0))) {
        j_0_reg_324 = j_fu_449_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_0_reg_324 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln236_reg_601 = icmp_ln236_fu_335_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln236_fu_335_p2.read(), ap_const_lv1_0))) {
        select_ln239_4_reg_610 = select_ln239_4_fu_359_p3.read();
        tmp_6_reg_647 = tmp_6_fu_409_p6.read();
        tmp_7_reg_652 = tmp_7_fu_419_p6.read();
        tmp_8_reg_657 = tmp_8_fu_429_p6.read();
        tmp_9_reg_662 = tmp_9_fu_439_p6.read();
        zext_ln239_1_reg_622 = zext_ln239_1_fu_391_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln236_fu_335_p2.read(), ap_const_lv1_0))) {
        select_ln239_5_reg_615 = select_ln239_5_fu_367_p3.read();
    }
}

void cache_update::thread_add_ln203_fu_471_p2() {
    add_ln203_fu_471_p2 = (!zext_ln239_1_reg_622.read().is_01() || !sub_ln203_fu_465_p2.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln239_1_reg_622.read()) + sc_biguint<5>(sub_ln203_fu_465_p2.read()));
}

void cache_update::thread_add_ln236_fu_341_p2() {
    add_ln236_fu_341_p2 = (!indvar_flatten_reg_302.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(indvar_flatten_reg_302.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void cache_update::thread_add_ln239_fu_395_p2() {
    add_ln239_fu_395_p2 = (!zext_ln239_1_fu_391_p1.read().is_01() || !zext_ln203_fu_383_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln239_1_fu_391_p1.read()) + sc_biguint<5>(zext_ln203_fu_383_p1.read()));
}

void cache_update::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void cache_update::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void cache_update::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[2];
}

void cache_update::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void cache_update::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void cache_update::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void cache_update::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void cache_update::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void cache_update::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln236_fu_335_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void cache_update::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void cache_update::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void cache_update::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void cache_update::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void cache_update::thread_ap_phi_mux_i_0_phi_fu_317_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln236_reg_601.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_0_phi_fu_317_p4 = select_ln239_5_reg_615.read();
    } else {
        ap_phi_mux_i_0_phi_fu_317_p4 = i_0_reg_313.read();
    }
}

void cache_update::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void cache_update::thread_cache_in_0_V_address0() {
    cache_in_0_V_address0 =  (sc_lv<3>) (zext_ln239_2_fu_401_p1.read());
}

void cache_update::thread_cache_in_0_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        cache_in_0_V_ce0 = ap_const_logic_1;
    } else {
        cache_in_0_V_ce0 = ap_const_logic_0;
    }
}

void cache_update::thread_cache_in_1_V_address0() {
    cache_in_1_V_address0 =  (sc_lv<3>) (zext_ln239_2_fu_401_p1.read());
}

void cache_update::thread_cache_in_1_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        cache_in_1_V_ce0 = ap_const_logic_1;
    } else {
        cache_in_1_V_ce0 = ap_const_logic_0;
    }
}

void cache_update::thread_cache_in_2_V_address0() {
    cache_in_2_V_address0 =  (sc_lv<3>) (zext_ln239_2_fu_401_p1.read());
}

void cache_update::thread_cache_in_2_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        cache_in_2_V_ce0 = ap_const_logic_1;
    } else {
        cache_in_2_V_ce0 = ap_const_logic_0;
    }
}

void cache_update::thread_cache_in_3_V_address0() {
    cache_in_3_V_address0 =  (sc_lv<3>) (zext_ln239_2_fu_401_p1.read());
}

void cache_update::thread_cache_in_3_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        cache_in_3_V_ce0 = ap_const_logic_1;
    } else {
        cache_in_3_V_ce0 = ap_const_logic_0;
    }
}

void cache_update::thread_cache_out_0_V_address0() {
    cache_out_0_V_address0 =  (sc_lv<4>) (sext_ln203_fu_476_p1.read());
}

void cache_update::thread_cache_out_0_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        cache_out_0_V_ce0 = ap_const_logic_1;
    } else {
        cache_out_0_V_ce0 = ap_const_logic_0;
    }
}

void cache_update::thread_cache_out_0_V_d0() {
    cache_out_0_V_d0 = (!icmp_ln239_fu_484_p2.read()[0].is_01())? sc_lv<40>(): ((icmp_ln239_fu_484_p2.read()[0].to_bool())? tmp_6_reg_647.read(): cache_in_0_V_q0.read());
}

void cache_update::thread_cache_out_0_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln236_reg_601.read(), ap_const_lv1_0))) {
        cache_out_0_V_we0 = ap_const_logic_1;
    } else {
        cache_out_0_V_we0 = ap_const_logic_0;
    }
}

void cache_update::thread_cache_out_1_V_address0() {
    cache_out_1_V_address0 =  (sc_lv<4>) (sext_ln203_fu_476_p1.read());
}

void cache_update::thread_cache_out_1_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        cache_out_1_V_ce0 = ap_const_logic_1;
    } else {
        cache_out_1_V_ce0 = ap_const_logic_0;
    }
}

void cache_update::thread_cache_out_1_V_d0() {
    cache_out_1_V_d0 = (!icmp_ln239_fu_484_p2.read()[0].is_01())? sc_lv<40>(): ((icmp_ln239_fu_484_p2.read()[0].to_bool())? tmp_7_reg_652.read(): cache_in_1_V_q0.read());
}

void cache_update::thread_cache_out_1_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln236_reg_601.read(), ap_const_lv1_0))) {
        cache_out_1_V_we0 = ap_const_logic_1;
    } else {
        cache_out_1_V_we0 = ap_const_logic_0;
    }
}

void cache_update::thread_cache_out_2_V_address0() {
    cache_out_2_V_address0 =  (sc_lv<4>) (sext_ln203_fu_476_p1.read());
}

void cache_update::thread_cache_out_2_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        cache_out_2_V_ce0 = ap_const_logic_1;
    } else {
        cache_out_2_V_ce0 = ap_const_logic_0;
    }
}

void cache_update::thread_cache_out_2_V_d0() {
    cache_out_2_V_d0 = (!icmp_ln239_fu_484_p2.read()[0].is_01())? sc_lv<40>(): ((icmp_ln239_fu_484_p2.read()[0].to_bool())? tmp_8_reg_657.read(): cache_in_2_V_q0.read());
}

void cache_update::thread_cache_out_2_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln236_reg_601.read(), ap_const_lv1_0))) {
        cache_out_2_V_we0 = ap_const_logic_1;
    } else {
        cache_out_2_V_we0 = ap_const_logic_0;
    }
}

void cache_update::thread_cache_out_3_V_address0() {
    cache_out_3_V_address0 =  (sc_lv<4>) (sext_ln203_fu_476_p1.read());
}

void cache_update::thread_cache_out_3_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        cache_out_3_V_ce0 = ap_const_logic_1;
    } else {
        cache_out_3_V_ce0 = ap_const_logic_0;
    }
}

void cache_update::thread_cache_out_3_V_d0() {
    cache_out_3_V_d0 = (!icmp_ln239_fu_484_p2.read()[0].is_01())? sc_lv<40>(): ((icmp_ln239_fu_484_p2.read()[0].to_bool())? tmp_9_reg_662.read(): cache_in_3_V_q0.read());
}

void cache_update::thread_cache_out_3_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln236_reg_601.read(), ap_const_lv1_0))) {
        cache_out_3_V_we0 = ap_const_logic_1;
    } else {
        cache_out_3_V_we0 = ap_const_logic_0;
    }
}

void cache_update::thread_i_fu_347_p2() {
    i_fu_347_p2 = (!ap_const_lv3_1.is_01() || !ap_phi_mux_i_0_phi_fu_317_p4.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_1) + sc_biguint<3>(ap_phi_mux_i_0_phi_fu_317_p4.read()));
}

void cache_update::thread_icmp_ln236_fu_335_p2() {
    icmp_ln236_fu_335_p2 = (!indvar_flatten_reg_302.read().is_01() || !ap_const_lv4_C.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_302.read() == ap_const_lv4_C);
}

void cache_update::thread_icmp_ln237_fu_353_p2() {
    icmp_ln237_fu_353_p2 = (!j_0_reg_324.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_324.read() == ap_const_lv2_3);
}

void cache_update::thread_icmp_ln239_fu_484_p2() {
    icmp_ln239_fu_484_p2 = (!select_ln239_4_reg_610.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(select_ln239_4_reg_610.read() == ap_const_lv2_2);
}

void cache_update::thread_j_fu_449_p2() {
    j_fu_449_p2 = (!ap_const_lv2_1.is_01() || !select_ln239_4_fu_359_p3.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(select_ln239_4_fu_359_p3.read()));
}

void cache_update::thread_select_ln239_4_fu_359_p3() {
    select_ln239_4_fu_359_p3 = (!icmp_ln237_fu_353_p2.read()[0].is_01())? sc_lv<2>(): ((icmp_ln237_fu_353_p2.read()[0].to_bool())? ap_const_lv2_0: j_0_reg_324.read());
}

void cache_update::thread_select_ln239_5_fu_367_p3() {
    select_ln239_5_fu_367_p3 = (!icmp_ln237_fu_353_p2.read()[0].is_01())? sc_lv<3>(): ((icmp_ln237_fu_353_p2.read()[0].to_bool())? i_fu_347_p2.read(): ap_phi_mux_i_0_phi_fu_317_p4.read());
}

void cache_update::thread_sext_ln203_fu_476_p1() {
    sext_ln203_fu_476_p1 = esl_sext<64,5>(add_ln203_fu_471_p2.read());
}

void cache_update::thread_sub_ln203_fu_465_p2() {
    sub_ln203_fu_465_p2 = (!tmp_55_fu_458_p3.read().is_01() || !zext_ln239_fu_455_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_55_fu_458_p3.read()) - sc_biguint<5>(zext_ln239_fu_455_p1.read()));
}

void cache_update::thread_tmp_55_fu_458_p3() {
    tmp_55_fu_458_p3 = esl_concat<3,2>(select_ln239_5_reg_615.read(), ap_const_lv2_0);
}

void cache_update::thread_tmp_fu_375_p3() {
    tmp_fu_375_p3 = esl_concat<3,1>(select_ln239_5_fu_367_p3.read(), ap_const_lv1_0);
}

void cache_update::thread_trunc_ln239_fu_387_p1() {
    trunc_ln239_fu_387_p1 = select_ln239_5_fu_367_p3.read().range(2-1, 0);
}

void cache_update::thread_zext_ln203_fu_383_p1() {
    zext_ln203_fu_383_p1 = esl_zext<5,4>(tmp_fu_375_p3.read());
}

void cache_update::thread_zext_ln239_1_fu_391_p1() {
    zext_ln239_1_fu_391_p1 = esl_zext<5,2>(select_ln239_4_fu_359_p3.read());
}

void cache_update::thread_zext_ln239_2_fu_401_p1() {
    zext_ln239_2_fu_401_p1 = esl_zext<64,5>(add_ln239_fu_395_p2.read());
}

void cache_update::thread_zext_ln239_fu_455_p1() {
    zext_ln239_fu_455_p1 = esl_zext<5,3>(select_ln239_5_reg_615.read());
}

void cache_update::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln236_fu_335_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln236_fu_335_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

