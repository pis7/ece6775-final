// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "cache_update.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic cache_update::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic cache_update::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> cache_update::ap_ST_fsm_state1 = "1";
const sc_lv<5> cache_update::ap_ST_fsm_state2 = "10";
const sc_lv<5> cache_update::ap_ST_fsm_state3 = "100";
const sc_lv<5> cache_update::ap_ST_fsm_state4 = "1000";
const sc_lv<5> cache_update::ap_ST_fsm_state5 = "10000";
const sc_lv<32> cache_update::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> cache_update::ap_const_lv32_1 = "1";
const sc_lv<1> cache_update::ap_const_lv1_0 = "0";
const sc_lv<32> cache_update::ap_const_lv32_2 = "10";
const sc_lv<32> cache_update::ap_const_lv32_3 = "11";
const sc_lv<3> cache_update::ap_const_lv3_0 = "000";
const sc_lv<1> cache_update::ap_const_lv1_1 = "1";
const sc_lv<2> cache_update::ap_const_lv2_0 = "00";
const sc_lv<32> cache_update::ap_const_lv32_4 = "100";
const sc_lv<2> cache_update::ap_const_lv2_2 = "10";
const sc_lv<2> cache_update::ap_const_lv2_1 = "1";
const sc_lv<2> cache_update::ap_const_lv2_3 = "11";
const sc_lv<3> cache_update::ap_const_lv3_4 = "100";
const sc_lv<3> cache_update::ap_const_lv3_1 = "1";
const bool cache_update::ap_const_boolean_1 = true;

cache_update::cache_update(sc_module_name name) : sc_module(name), mVcdFile(0) {
    dut_mux_165_32_1_1_U73 = new dut_mux_165_32_1_1<1,1,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,5,32>("dut_mux_165_32_1_1_U73");
    dut_mux_165_32_1_1_U73->din0(p_read);
    dut_mux_165_32_1_1_U73->din1(p_read1);
    dut_mux_165_32_1_1_U73->din2(p_read2);
    dut_mux_165_32_1_1_U73->din3(p_read3);
    dut_mux_165_32_1_1_U73->din4(p_read4);
    dut_mux_165_32_1_1_U73->din5(p_read5);
    dut_mux_165_32_1_1_U73->din6(p_read6);
    dut_mux_165_32_1_1_U73->din7(p_read7);
    dut_mux_165_32_1_1_U73->din8(p_read8);
    dut_mux_165_32_1_1_U73->din9(p_read9);
    dut_mux_165_32_1_1_U73->din10(p_read10);
    dut_mux_165_32_1_1_U73->din11(p_read11);
    dut_mux_165_32_1_1_U73->din12(p_read12);
    dut_mux_165_32_1_1_U73->din13(p_read13);
    dut_mux_165_32_1_1_U73->din14(p_read14);
    dut_mux_165_32_1_1_U73->din15(p_read15);
    dut_mux_165_32_1_1_U73->din16(tmp_9_fu_423_p17);
    dut_mux_165_32_1_1_U73->dout(tmp_9_fu_423_p18);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln203_1_fu_365_p2);
    sensitive << ( sub_ln203_reg_542 );
    sensitive << ( zext_ln203_5_fu_348_p1 );

    SC_METHOD(thread_add_ln203_2_fu_394_p2);
    sensitive << ( tmp_15_cast_reg_564 );
    sensitive << ( zext_ln203_6_fu_390_p1 );

    SC_METHOD(thread_add_ln203_fu_352_p2);
    sensitive << ( zext_ln203_4_reg_537 );
    sensitive << ( zext_ln203_5_fu_348_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln231_fu_284_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln231_fu_284_p2 );

    SC_METHOD(thread_cache_in_V_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln203_7_fu_399_p1 );

    SC_METHOD(thread_cache_in_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_cache_out_0_V_address0);
    sensitive << ( cache_out_0_V_addr_reg_569 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_cache_out_0_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_cache_out_0_V_d0);
    sensitive << ( cache_in_V_q0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_9_fu_423_p18 );

    SC_METHOD(thread_cache_out_0_V_we0);
    sensitive << ( icmp_ln234_reg_560 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln233_fu_378_p2 );
    sensitive << ( trunc_ln203_2_reg_602 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( trunc_ln203_1_fu_408_p1 );

    SC_METHOD(thread_cache_out_1_V_address0);
    sensitive << ( cache_out_1_V_addr_reg_574 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_cache_out_1_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_cache_out_1_V_d0);
    sensitive << ( cache_in_V_q0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_9_fu_423_p18 );

    SC_METHOD(thread_cache_out_1_V_we0);
    sensitive << ( icmp_ln234_reg_560 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln233_fu_378_p2 );
    sensitive << ( trunc_ln203_2_reg_602 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( trunc_ln203_1_fu_408_p1 );

    SC_METHOD(thread_cache_out_2_V_address0);
    sensitive << ( cache_out_2_V_addr_reg_579 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_cache_out_2_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_cache_out_2_V_d0);
    sensitive << ( cache_in_V_q0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_9_fu_423_p18 );

    SC_METHOD(thread_cache_out_2_V_we0);
    sensitive << ( icmp_ln234_reg_560 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln233_fu_378_p2 );
    sensitive << ( trunc_ln203_2_reg_602 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( trunc_ln203_1_fu_408_p1 );

    SC_METHOD(thread_cache_out_3_V_address0);
    sensitive << ( cache_out_3_V_addr_reg_584 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_cache_out_3_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_cache_out_3_V_d0);
    sensitive << ( cache_in_V_q0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_9_fu_423_p18 );

    SC_METHOD(thread_cache_out_3_V_we0);
    sensitive << ( icmp_ln234_reg_560 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln233_fu_378_p2 );
    sensitive << ( trunc_ln203_2_reg_602 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( trunc_ln203_1_fu_408_p1 );

    SC_METHOD(thread_i_fu_290_p2);
    sensitive << ( i_0_reg_251 );

    SC_METHOD(thread_icmp_ln231_fu_284_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_251 );

    SC_METHOD(thread_icmp_ln232_fu_330_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_reg_262 );

    SC_METHOD(thread_icmp_ln233_fu_378_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( k_0_reg_273 );

    SC_METHOD(thread_icmp_ln234_fu_342_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln232_fu_330_p2 );
    sensitive << ( j_0_reg_262 );

    SC_METHOD(thread_j_fu_336_p2);
    sensitive << ( j_0_reg_262 );

    SC_METHOD(thread_k_fu_384_p2);
    sensitive << ( k_0_reg_273 );

    SC_METHOD(thread_sext_ln203_fu_370_p1);
    sensitive << ( add_ln203_1_fu_365_p2 );

    SC_METHOD(thread_sub_ln203_fu_320_p2);
    sensitive << ( tmp_3_fu_312_p3 );
    sensitive << ( zext_ln203_3_fu_296_p1 );

    SC_METHOD(thread_tmp_15_cast_fu_357_p3);
    sensitive << ( add_ln203_fu_352_p2 );

    SC_METHOD(thread_tmp_1_fu_412_p3);
    sensitive << ( trunc_ln203_reg_547 );
    sensitive << ( trunc_ln203_1_fu_408_p1 );

    SC_METHOD(thread_tmp_2_fu_300_p3);
    sensitive << ( i_0_reg_251 );

    SC_METHOD(thread_tmp_3_fu_312_p3);
    sensitive << ( i_0_reg_251 );

    SC_METHOD(thread_tmp_9_fu_423_p17);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_1_fu_412_p3 );

    SC_METHOD(thread_trunc_ln203_1_fu_408_p1);
    sensitive << ( k_0_reg_273 );

    SC_METHOD(thread_trunc_ln203_2_fu_404_p1);
    sensitive << ( k_0_reg_273 );

    SC_METHOD(thread_trunc_ln203_fu_326_p1);
    sensitive << ( i_0_reg_251 );

    SC_METHOD(thread_zext_ln203_3_fu_296_p1);
    sensitive << ( i_0_reg_251 );

    SC_METHOD(thread_zext_ln203_4_fu_308_p1);
    sensitive << ( tmp_2_fu_300_p3 );

    SC_METHOD(thread_zext_ln203_5_fu_348_p1);
    sensitive << ( j_0_reg_262 );

    SC_METHOD(thread_zext_ln203_6_fu_390_p1);
    sensitive << ( k_0_reg_273 );

    SC_METHOD(thread_zext_ln203_7_fu_399_p1);
    sensitive << ( add_ln203_2_fu_394_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln231_fu_284_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln232_fu_330_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln233_fu_378_p2 );

    ap_CS_fsm = "00001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "cache_update_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, cache_in_V_address0, "(port)cache_in_V_address0");
    sc_trace(mVcdFile, cache_in_V_ce0, "(port)cache_in_V_ce0");
    sc_trace(mVcdFile, cache_in_V_q0, "(port)cache_in_V_q0");
    sc_trace(mVcdFile, cache_out_0_V_address0, "(port)cache_out_0_V_address0");
    sc_trace(mVcdFile, cache_out_0_V_ce0, "(port)cache_out_0_V_ce0");
    sc_trace(mVcdFile, cache_out_0_V_we0, "(port)cache_out_0_V_we0");
    sc_trace(mVcdFile, cache_out_0_V_d0, "(port)cache_out_0_V_d0");
    sc_trace(mVcdFile, cache_out_1_V_address0, "(port)cache_out_1_V_address0");
    sc_trace(mVcdFile, cache_out_1_V_ce0, "(port)cache_out_1_V_ce0");
    sc_trace(mVcdFile, cache_out_1_V_we0, "(port)cache_out_1_V_we0");
    sc_trace(mVcdFile, cache_out_1_V_d0, "(port)cache_out_1_V_d0");
    sc_trace(mVcdFile, cache_out_2_V_address0, "(port)cache_out_2_V_address0");
    sc_trace(mVcdFile, cache_out_2_V_ce0, "(port)cache_out_2_V_ce0");
    sc_trace(mVcdFile, cache_out_2_V_we0, "(port)cache_out_2_V_we0");
    sc_trace(mVcdFile, cache_out_2_V_d0, "(port)cache_out_2_V_d0");
    sc_trace(mVcdFile, cache_out_3_V_address0, "(port)cache_out_3_V_address0");
    sc_trace(mVcdFile, cache_out_3_V_ce0, "(port)cache_out_3_V_ce0");
    sc_trace(mVcdFile, cache_out_3_V_we0, "(port)cache_out_3_V_we0");
    sc_trace(mVcdFile, cache_out_3_V_d0, "(port)cache_out_3_V_d0");
    sc_trace(mVcdFile, p_read, "(port)p_read");
    sc_trace(mVcdFile, p_read1, "(port)p_read1");
    sc_trace(mVcdFile, p_read2, "(port)p_read2");
    sc_trace(mVcdFile, p_read3, "(port)p_read3");
    sc_trace(mVcdFile, p_read4, "(port)p_read4");
    sc_trace(mVcdFile, p_read5, "(port)p_read5");
    sc_trace(mVcdFile, p_read6, "(port)p_read6");
    sc_trace(mVcdFile, p_read7, "(port)p_read7");
    sc_trace(mVcdFile, p_read8, "(port)p_read8");
    sc_trace(mVcdFile, p_read9, "(port)p_read9");
    sc_trace(mVcdFile, p_read10, "(port)p_read10");
    sc_trace(mVcdFile, p_read11, "(port)p_read11");
    sc_trace(mVcdFile, p_read12, "(port)p_read12");
    sc_trace(mVcdFile, p_read13, "(port)p_read13");
    sc_trace(mVcdFile, p_read14, "(port)p_read14");
    sc_trace(mVcdFile, p_read15, "(port)p_read15");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_fu_290_p2, "i_fu_290_p2");
    sc_trace(mVcdFile, i_reg_532, "i_reg_532");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln203_4_fu_308_p1, "zext_ln203_4_fu_308_p1");
    sc_trace(mVcdFile, zext_ln203_4_reg_537, "zext_ln203_4_reg_537");
    sc_trace(mVcdFile, icmp_ln231_fu_284_p2, "icmp_ln231_fu_284_p2");
    sc_trace(mVcdFile, sub_ln203_fu_320_p2, "sub_ln203_fu_320_p2");
    sc_trace(mVcdFile, sub_ln203_reg_542, "sub_ln203_reg_542");
    sc_trace(mVcdFile, trunc_ln203_fu_326_p1, "trunc_ln203_fu_326_p1");
    sc_trace(mVcdFile, trunc_ln203_reg_547, "trunc_ln203_reg_547");
    sc_trace(mVcdFile, j_fu_336_p2, "j_fu_336_p2");
    sc_trace(mVcdFile, j_reg_555, "j_reg_555");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln234_fu_342_p2, "icmp_ln234_fu_342_p2");
    sc_trace(mVcdFile, icmp_ln234_reg_560, "icmp_ln234_reg_560");
    sc_trace(mVcdFile, icmp_ln232_fu_330_p2, "icmp_ln232_fu_330_p2");
    sc_trace(mVcdFile, tmp_15_cast_fu_357_p3, "tmp_15_cast_fu_357_p3");
    sc_trace(mVcdFile, tmp_15_cast_reg_564, "tmp_15_cast_reg_564");
    sc_trace(mVcdFile, cache_out_0_V_addr_reg_569, "cache_out_0_V_addr_reg_569");
    sc_trace(mVcdFile, cache_out_1_V_addr_reg_574, "cache_out_1_V_addr_reg_574");
    sc_trace(mVcdFile, cache_out_2_V_addr_reg_579, "cache_out_2_V_addr_reg_579");
    sc_trace(mVcdFile, cache_out_3_V_addr_reg_584, "cache_out_3_V_addr_reg_584");
    sc_trace(mVcdFile, k_fu_384_p2, "k_fu_384_p2");
    sc_trace(mVcdFile, k_reg_592, "k_reg_592");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln233_fu_378_p2, "icmp_ln233_fu_378_p2");
    sc_trace(mVcdFile, trunc_ln203_2_fu_404_p1, "trunc_ln203_2_fu_404_p1");
    sc_trace(mVcdFile, trunc_ln203_2_reg_602, "trunc_ln203_2_reg_602");
    sc_trace(mVcdFile, i_0_reg_251, "i_0_reg_251");
    sc_trace(mVcdFile, j_0_reg_262, "j_0_reg_262");
    sc_trace(mVcdFile, k_0_reg_273, "k_0_reg_273");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, sext_ln203_fu_370_p1, "sext_ln203_fu_370_p1");
    sc_trace(mVcdFile, zext_ln203_7_fu_399_p1, "zext_ln203_7_fu_399_p1");
    sc_trace(mVcdFile, trunc_ln203_1_fu_408_p1, "trunc_ln203_1_fu_408_p1");
    sc_trace(mVcdFile, tmp_9_fu_423_p18, "tmp_9_fu_423_p18");
    sc_trace(mVcdFile, tmp_2_fu_300_p3, "tmp_2_fu_300_p3");
    sc_trace(mVcdFile, tmp_3_fu_312_p3, "tmp_3_fu_312_p3");
    sc_trace(mVcdFile, zext_ln203_3_fu_296_p1, "zext_ln203_3_fu_296_p1");
    sc_trace(mVcdFile, zext_ln203_5_fu_348_p1, "zext_ln203_5_fu_348_p1");
    sc_trace(mVcdFile, add_ln203_fu_352_p2, "add_ln203_fu_352_p2");
    sc_trace(mVcdFile, add_ln203_1_fu_365_p2, "add_ln203_1_fu_365_p2");
    sc_trace(mVcdFile, zext_ln203_6_fu_390_p1, "zext_ln203_6_fu_390_p1");
    sc_trace(mVcdFile, add_ln203_2_fu_394_p2, "add_ln203_2_fu_394_p2");
    sc_trace(mVcdFile, tmp_1_fu_412_p3, "tmp_1_fu_412_p3");
    sc_trace(mVcdFile, tmp_9_fu_423_p17, "tmp_9_fu_423_p17");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

cache_update::~cache_update() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete dut_mux_165_32_1_1_U73;
}

void cache_update::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln232_fu_330_p2.read(), ap_const_lv1_1))) {
        i_0_reg_251 = i_reg_532.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_251 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln233_fu_378_p2.read(), ap_const_lv1_1))) {
        j_0_reg_262 = j_reg_555.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln231_fu_284_p2.read(), ap_const_lv1_0))) {
        j_0_reg_262 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        k_0_reg_273 = k_reg_592.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln232_fu_330_p2.read()))) {
        k_0_reg_273 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln232_fu_330_p2.read()))) {
        cache_out_0_V_addr_reg_569 =  (sc_lv<4>) (sext_ln203_fu_370_p1.read());
        cache_out_1_V_addr_reg_574 =  (sc_lv<4>) (sext_ln203_fu_370_p1.read());
        cache_out_2_V_addr_reg_579 =  (sc_lv<4>) (sext_ln203_fu_370_p1.read());
        cache_out_3_V_addr_reg_584 =  (sc_lv<4>) (sext_ln203_fu_370_p1.read());
        icmp_ln234_reg_560 = icmp_ln234_fu_342_p2.read();
        tmp_15_cast_reg_564 = tmp_15_cast_fu_357_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_532 = i_fu_290_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_reg_555 = j_fu_336_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        k_reg_592 = k_fu_384_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln231_fu_284_p2.read(), ap_const_lv1_0))) {
        sub_ln203_reg_542 = sub_ln203_fu_320_p2.read();
        trunc_ln203_reg_547 = trunc_ln203_fu_326_p1.read();
        zext_ln203_4_reg_537 = zext_ln203_4_fu_308_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln233_fu_378_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln234_reg_560.read()))) {
        trunc_ln203_2_reg_602 = trunc_ln203_2_fu_404_p1.read();
    }
}

void cache_update::thread_add_ln203_1_fu_365_p2() {
    add_ln203_1_fu_365_p2 = (!zext_ln203_5_fu_348_p1.read().is_01() || !sub_ln203_reg_542.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln203_5_fu_348_p1.read()) + sc_biguint<5>(sub_ln203_reg_542.read()));
}

void cache_update::thread_add_ln203_2_fu_394_p2() {
    add_ln203_2_fu_394_p2 = (!tmp_15_cast_reg_564.read().is_01() || !zext_ln203_6_fu_390_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_15_cast_reg_564.read()) + sc_biguint<7>(zext_ln203_6_fu_390_p1.read()));
}

void cache_update::thread_add_ln203_fu_352_p2() {
    add_ln203_fu_352_p2 = (!zext_ln203_5_fu_348_p1.read().is_01() || !zext_ln203_4_reg_537.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln203_5_fu_348_p1.read()) + sc_biguint<5>(zext_ln203_4_reg_537.read()));
}

void cache_update::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void cache_update::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void cache_update::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void cache_update::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void cache_update::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void cache_update::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln231_fu_284_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void cache_update::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void cache_update::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln231_fu_284_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void cache_update::thread_cache_in_V_address0() {
    cache_in_V_address0 =  (sc_lv<5>) (zext_ln203_7_fu_399_p1.read());
}

void cache_update::thread_cache_in_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        cache_in_V_ce0 = ap_const_logic_1;
    } else {
        cache_in_V_ce0 = ap_const_logic_0;
    }
}

void cache_update::thread_cache_out_0_V_address0() {
    cache_out_0_V_address0 = cache_out_0_V_addr_reg_569.read();
}

void cache_update::thread_cache_out_0_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        cache_out_0_V_ce0 = ap_const_logic_1;
    } else {
        cache_out_0_V_ce0 = ap_const_logic_0;
    }
}

void cache_update::thread_cache_out_0_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        cache_out_0_V_d0 = cache_in_V_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        cache_out_0_V_d0 = tmp_9_fu_423_p18.read();
    } else {
        cache_out_0_V_d0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void cache_update::thread_cache_out_0_V_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln233_fu_378_p2.read()) && 
          esl_seteq<1,1,1>(icmp_ln234_reg_560.read(), ap_const_lv1_1) && 
          esl_seteq<1,2,2>(ap_const_lv2_0, trunc_ln203_1_fu_408_p1.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln234_reg_560.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,2,2>(trunc_ln203_2_reg_602.read(), ap_const_lv2_0)))) {
        cache_out_0_V_we0 = ap_const_logic_1;
    } else {
        cache_out_0_V_we0 = ap_const_logic_0;
    }
}

void cache_update::thread_cache_out_1_V_address0() {
    cache_out_1_V_address0 = cache_out_1_V_addr_reg_574.read();
}

void cache_update::thread_cache_out_1_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        cache_out_1_V_ce0 = ap_const_logic_1;
    } else {
        cache_out_1_V_ce0 = ap_const_logic_0;
    }
}

void cache_update::thread_cache_out_1_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        cache_out_1_V_d0 = cache_in_V_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        cache_out_1_V_d0 = tmp_9_fu_423_p18.read();
    } else {
        cache_out_1_V_d0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void cache_update::thread_cache_out_1_V_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln233_fu_378_p2.read()) && 
          esl_seteq<1,1,1>(icmp_ln234_reg_560.read(), ap_const_lv1_1) && 
          esl_seteq<1,2,2>(trunc_ln203_1_fu_408_p1.read(), ap_const_lv2_1)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln234_reg_560.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,2,2>(trunc_ln203_2_reg_602.read(), ap_const_lv2_1)))) {
        cache_out_1_V_we0 = ap_const_logic_1;
    } else {
        cache_out_1_V_we0 = ap_const_logic_0;
    }
}

void cache_update::thread_cache_out_2_V_address0() {
    cache_out_2_V_address0 = cache_out_2_V_addr_reg_579.read();
}

void cache_update::thread_cache_out_2_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        cache_out_2_V_ce0 = ap_const_logic_1;
    } else {
        cache_out_2_V_ce0 = ap_const_logic_0;
    }
}

void cache_update::thread_cache_out_2_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        cache_out_2_V_d0 = cache_in_V_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        cache_out_2_V_d0 = tmp_9_fu_423_p18.read();
    } else {
        cache_out_2_V_d0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void cache_update::thread_cache_out_2_V_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln233_fu_378_p2.read()) && 
          esl_seteq<1,1,1>(icmp_ln234_reg_560.read(), ap_const_lv1_1) && 
          esl_seteq<1,2,2>(trunc_ln203_1_fu_408_p1.read(), ap_const_lv2_2)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln234_reg_560.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,2,2>(trunc_ln203_2_reg_602.read(), ap_const_lv2_2)))) {
        cache_out_2_V_we0 = ap_const_logic_1;
    } else {
        cache_out_2_V_we0 = ap_const_logic_0;
    }
}

void cache_update::thread_cache_out_3_V_address0() {
    cache_out_3_V_address0 = cache_out_3_V_addr_reg_584.read();
}

void cache_update::thread_cache_out_3_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        cache_out_3_V_ce0 = ap_const_logic_1;
    } else {
        cache_out_3_V_ce0 = ap_const_logic_0;
    }
}

void cache_update::thread_cache_out_3_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        cache_out_3_V_d0 = cache_in_V_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        cache_out_3_V_d0 = tmp_9_fu_423_p18.read();
    } else {
        cache_out_3_V_d0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void cache_update::thread_cache_out_3_V_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln233_fu_378_p2.read()) && 
          esl_seteq<1,1,1>(icmp_ln234_reg_560.read(), ap_const_lv1_1) && 
          esl_seteq<1,2,2>(trunc_ln203_1_fu_408_p1.read(), ap_const_lv2_3)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln234_reg_560.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,2,2>(trunc_ln203_2_reg_602.read(), ap_const_lv2_3)))) {
        cache_out_3_V_we0 = ap_const_logic_1;
    } else {
        cache_out_3_V_we0 = ap_const_logic_0;
    }
}

void cache_update::thread_i_fu_290_p2() {
    i_fu_290_p2 = (!i_0_reg_251.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_0_reg_251.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void cache_update::thread_icmp_ln231_fu_284_p2() {
    icmp_ln231_fu_284_p2 = (!i_0_reg_251.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_251.read() == ap_const_lv3_4);
}

void cache_update::thread_icmp_ln232_fu_330_p2() {
    icmp_ln232_fu_330_p2 = (!j_0_reg_262.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_262.read() == ap_const_lv2_3);
}

void cache_update::thread_icmp_ln233_fu_378_p2() {
    icmp_ln233_fu_378_p2 = (!k_0_reg_273.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(k_0_reg_273.read() == ap_const_lv3_4);
}

void cache_update::thread_icmp_ln234_fu_342_p2() {
    icmp_ln234_fu_342_p2 = (!j_0_reg_262.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_262.read() == ap_const_lv2_2);
}

void cache_update::thread_j_fu_336_p2() {
    j_fu_336_p2 = (!j_0_reg_262.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(j_0_reg_262.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void cache_update::thread_k_fu_384_p2() {
    k_fu_384_p2 = (!k_0_reg_273.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(k_0_reg_273.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void cache_update::thread_sext_ln203_fu_370_p1() {
    sext_ln203_fu_370_p1 = esl_sext<64,5>(add_ln203_1_fu_365_p2.read());
}

void cache_update::thread_sub_ln203_fu_320_p2() {
    sub_ln203_fu_320_p2 = (!tmp_3_fu_312_p3.read().is_01() || !zext_ln203_3_fu_296_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_3_fu_312_p3.read()) - sc_biguint<5>(zext_ln203_3_fu_296_p1.read()));
}

void cache_update::thread_tmp_15_cast_fu_357_p3() {
    tmp_15_cast_fu_357_p3 = esl_concat<5,2>(add_ln203_fu_352_p2.read(), ap_const_lv2_0);
}

void cache_update::thread_tmp_1_fu_412_p3() {
    tmp_1_fu_412_p3 = esl_concat<2,2>(trunc_ln203_1_fu_408_p1.read(), trunc_ln203_reg_547.read());
}

void cache_update::thread_tmp_2_fu_300_p3() {
    tmp_2_fu_300_p3 = esl_concat<3,1>(i_0_reg_251.read(), ap_const_lv1_0);
}

void cache_update::thread_tmp_3_fu_312_p3() {
    tmp_3_fu_312_p3 = esl_concat<3,2>(i_0_reg_251.read(), ap_const_lv2_0);
}

void cache_update::thread_tmp_9_fu_423_p17() {
    tmp_9_fu_423_p17 = esl_zext<5,4>(tmp_1_fu_412_p3.read());
}

void cache_update::thread_trunc_ln203_1_fu_408_p1() {
    trunc_ln203_1_fu_408_p1 = k_0_reg_273.read().range(2-1, 0);
}

void cache_update::thread_trunc_ln203_2_fu_404_p1() {
    trunc_ln203_2_fu_404_p1 = k_0_reg_273.read().range(2-1, 0);
}

void cache_update::thread_trunc_ln203_fu_326_p1() {
    trunc_ln203_fu_326_p1 = i_0_reg_251.read().range(2-1, 0);
}

void cache_update::thread_zext_ln203_3_fu_296_p1() {
    zext_ln203_3_fu_296_p1 = esl_zext<5,3>(i_0_reg_251.read());
}

void cache_update::thread_zext_ln203_4_fu_308_p1() {
    zext_ln203_4_fu_308_p1 = esl_zext<5,4>(tmp_2_fu_300_p3.read());
}

void cache_update::thread_zext_ln203_5_fu_348_p1() {
    zext_ln203_5_fu_348_p1 = esl_zext<5,2>(j_0_reg_262.read());
}

void cache_update::thread_zext_ln203_6_fu_390_p1() {
    zext_ln203_6_fu_390_p1 = esl_zext<7,3>(k_0_reg_273.read());
}

void cache_update::thread_zext_ln203_7_fu_399_p1() {
    zext_ln203_7_fu_399_p1 = esl_zext<64,7>(add_ln203_2_fu_394_p2.read());
}

void cache_update::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln231_fu_284_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln232_fu_330_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln233_fu_378_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<5>) ("XXXXX");
            break;
    }
}

}

