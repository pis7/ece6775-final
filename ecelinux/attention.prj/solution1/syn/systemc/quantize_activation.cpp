// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "quantize_activation.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic quantize_activation::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic quantize_activation::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<52> quantize_activation::ap_ST_fsm_state1 = "1";
const sc_lv<52> quantize_activation::ap_ST_fsm_state2 = "10";
const sc_lv<52> quantize_activation::ap_ST_fsm_state3 = "100";
const sc_lv<52> quantize_activation::ap_ST_fsm_state4 = "1000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state5 = "10000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state6 = "100000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state7 = "1000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state8 = "10000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state9 = "100000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state10 = "1000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state11 = "10000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state12 = "100000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<52> quantize_activation::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<32> quantize_activation::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> quantize_activation::ap_const_lv32_1 = "1";
const sc_lv<1> quantize_activation::ap_const_lv1_0 = "0";
const sc_lv<32> quantize_activation::ap_const_lv32_2 = "10";
const sc_lv<32> quantize_activation::ap_const_lv32_3 = "11";
const sc_lv<32> quantize_activation::ap_const_lv32_2E = "101110";
const sc_lv<32> quantize_activation::ap_const_lv32_2F = "101111";
const sc_lv<32> quantize_activation::ap_const_lv32_30 = "110000";
const sc_lv<32> quantize_activation::ap_const_lv32_31 = "110001";
const sc_lv<32> quantize_activation::ap_const_lv32_32 = "110010";
const sc_lv<40> quantize_activation::ap_const_lv40_0 = "0000000000000000000000000000000000000000";
const sc_lv<11> quantize_activation::ap_const_lv11_0 = "00000000000";
const sc_lv<32> quantize_activation::ap_const_lv32_33 = "110011";
const sc_lv<11> quantize_activation::ap_const_lv11_600 = "11000000000";
const sc_lv<11> quantize_activation::ap_const_lv11_1 = "1";
const sc_lv<40> quantize_activation::ap_const_lv40_7F00000000 = "111111100000000000000000000000000000000";
const sc_lv<32> quantize_activation::ap_const_lv32_27 = "100111";
const sc_lv<32> quantize_activation::ap_const_lv32_10 = "10000";
const sc_lv<32> quantize_activation::ap_const_lv32_37 = "110111";
const sc_lv<40> quantize_activation::ap_const_lv40_8000 = "1000000000000000";
const sc_lv<40> quantize_activation::ap_const_lv40_FFFFFF8000 = "1111111111111111111111111000000000000000";
const sc_lv<16> quantize_activation::ap_const_lv16_0 = "0000000000000000";
const sc_lv<24> quantize_activation::ap_const_lv24_1 = "1";
const sc_lv<32> quantize_activation::ap_const_lv32_7 = "111";
const sc_lv<32> quantize_activation::ap_const_lv32_17 = "10111";
const sc_lv<24> quantize_activation::ap_const_lv24_FFFF80 = "111111111111111110000000";
const sc_lv<17> quantize_activation::ap_const_lv17_0 = "00000000000000000";
const sc_lv<8> quantize_activation::ap_const_lv8_80 = "10000000";
const sc_lv<8> quantize_activation::ap_const_lv8_7F = "1111111";
const sc_lv<1> quantize_activation::ap_const_lv1_1 = "1";
const bool quantize_activation::ap_const_boolean_1 = true;

quantize_activation::quantize_activation(sc_module_name name) : sc_module(name), mVcdFile(0) {
    dut_udiv_40ns_40nfYi_U12 = new dut_udiv_40ns_40nfYi<1,44,40,40,40>("dut_udiv_40ns_40nfYi_U12");
    dut_udiv_40ns_40nfYi_U12->clk(ap_clk);
    dut_udiv_40ns_40nfYi_U12->reset(ap_rst);
    dut_udiv_40ns_40nfYi_U12->start(grp_fu_151_ap_start);
    dut_udiv_40ns_40nfYi_U12->done(grp_fu_151_ap_done);
    dut_udiv_40ns_40nfYi_U12->din0(ap_var_for_const0);
    dut_udiv_40ns_40nfYi_U12->din1(p_0_0_reg_100);
    dut_udiv_40ns_40nfYi_U12->ce(ap_var_for_const1);
    dut_udiv_40ns_40nfYi_U12->dout(grp_fu_151_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln109_fu_243_p2);
    sensitive << ( p_Val2_7_reg_400 );
    sensitive << ( select_ln109_fu_235_p3 );

    SC_METHOD(thread_add_ln129_fu_140_p2);
    sensitive << ( j_0_0_reg_112 );

    SC_METHOD(thread_add_ln136_fu_201_p2);
    sensitive << ( j1_0_0_reg_123 );

    SC_METHOD(thread_add_ln700_fu_276_p2);
    sensitive << ( p_Result_s_fu_248_p4 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state47);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state48);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state49);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state50);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state51);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state52);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( icmp_ln136_fu_195_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( icmp_ln136_fu_195_p2 );

    SC_METHOD(thread_ap_return);
    sensitive << ( udiv_ln1148_reg_368 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( icmp_ln136_fu_195_p2 );

    SC_METHOD(thread_grp_fu_151_ap_start);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln129_fu_134_p2 );

    SC_METHOD(thread_icmp_ln129_fu_134_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_0_0_reg_112 );

    SC_METHOD(thread_icmp_ln136_fu_195_p2);
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( j1_0_0_reg_123 );

    SC_METHOD(thread_icmp_ln1494_26_fu_230_p2);
    sensitive << ( p_Val2_7_reg_400 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_icmp_ln1494_fu_179_p2);
    sensitive << ( p_Val2_8_reg_357 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( p_0_0_reg_100 );

    SC_METHOD(thread_icmp_ln851_fu_270_p2);
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( trunc_ln851_fu_266_p1 );

    SC_METHOD(thread_icmp_ln887_fu_308_p2);
    sensitive << ( select_ln850_reg_406 );
    sensitive << ( ap_CS_fsm_state52 );

    SC_METHOD(thread_icmp_ln895_fu_313_p2);
    sensitive << ( tmp_78_reg_412 );
    sensitive << ( ap_CS_fsm_state52 );

    SC_METHOD(thread_input_0_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( zext_ln137_fu_207_p1 );
    sensitive << ( zext_ln130_fu_146_p1 );

    SC_METHOD(thread_input_0_V_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state48 );

    SC_METHOD(thread_mul_ln1118_fu_215_p0);
    sensitive << ( zext_ln136_reg_372 );
    sensitive << ( ap_CS_fsm_state50 );

    SC_METHOD(thread_mul_ln1118_fu_215_p1);
    sensitive << ( input_0_V_load_reg_395 );
    sensitive << ( ap_CS_fsm_state50 );

    SC_METHOD(thread_mul_ln1118_fu_215_p2);
    sensitive << ( mul_ln1118_fu_215_p0 );
    sensitive << ( mul_ln1118_fu_215_p1 );

    SC_METHOD(thread_or_ln887_fu_329_p2);
    sensitive << ( icmp_ln887_fu_308_p2 );
    sensitive << ( icmp_ln895_fu_313_p2 );

    SC_METHOD(thread_output_states_0_V_address0);
    sensitive << ( zext_ln137_reg_385 );
    sensitive << ( ap_CS_fsm_state52 );

    SC_METHOD(thread_output_states_0_V_ce0);
    sensitive << ( ap_CS_fsm_state52 );

    SC_METHOD(thread_output_states_0_V_d0);
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( or_ln887_fu_329_p2 );
    sensitive << ( select_ln887_fu_321_p3 );
    sensitive << ( trunc_ln138_fu_318_p1 );

    SC_METHOD(thread_output_states_0_V_we0);
    sensitive << ( ap_CS_fsm_state52 );

    SC_METHOD(thread_p_Result_s_fu_248_p4);
    sensitive << ( add_ln109_fu_243_p2 );

    SC_METHOD(thread_p_Val2_8_fu_171_p3);
    sensitive << ( input_0_V_q0 );
    sensitive << ( tmp_76_fu_157_p3 );
    sensitive << ( sub_ln703_fu_165_p2 );

    SC_METHOD(thread_select_ln102_fu_184_p3);
    sensitive << ( p_Val2_8_reg_357 );
    sensitive << ( p_0_0_reg_100 );
    sensitive << ( icmp_ln1494_fu_179_p2 );

    SC_METHOD(thread_select_ln109_fu_235_p3);
    sensitive << ( icmp_ln1494_26_fu_230_p2 );

    SC_METHOD(thread_select_ln850_fu_290_p3);
    sensitive << ( p_Result_s_fu_248_p4 );
    sensitive << ( tmp_77_fu_258_p3 );
    sensitive << ( select_ln851_fu_282_p3 );

    SC_METHOD(thread_select_ln851_fu_282_p3);
    sensitive << ( p_Result_s_fu_248_p4 );
    sensitive << ( icmp_ln851_fu_270_p2 );
    sensitive << ( add_ln700_fu_276_p2 );

    SC_METHOD(thread_select_ln887_fu_321_p3);
    sensitive << ( icmp_ln887_fu_308_p2 );

    SC_METHOD(thread_sub_ln703_fu_165_p2);
    sensitive << ( input_0_V_q0 );

    SC_METHOD(thread_tmp_76_fu_157_p3);
    sensitive << ( input_0_V_q0 );

    SC_METHOD(thread_tmp_77_fu_258_p3);
    sensitive << ( add_ln109_fu_243_p2 );

    SC_METHOD(thread_trunc_ln138_fu_318_p1);
    sensitive << ( select_ln850_reg_406 );

    SC_METHOD(thread_trunc_ln851_fu_266_p1);
    sensitive << ( add_ln109_fu_243_p2 );

    SC_METHOD(thread_zext_ln130_fu_146_p1);
    sensitive << ( j_0_0_reg_112 );

    SC_METHOD(thread_zext_ln136_fu_191_p1);
    sensitive << ( grp_fu_151_p2 );

    SC_METHOD(thread_zext_ln137_fu_207_p1);
    sensitive << ( j1_0_0_reg_123 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln129_fu_134_p2 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( icmp_ln136_fu_195_p2 );

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000000000000000000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "quantize_activation_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_0_V_address0, "(port)input_0_V_address0");
    sc_trace(mVcdFile, input_0_V_ce0, "(port)input_0_V_ce0");
    sc_trace(mVcdFile, input_0_V_q0, "(port)input_0_V_q0");
    sc_trace(mVcdFile, output_states_0_V_address0, "(port)output_states_0_V_address0");
    sc_trace(mVcdFile, output_states_0_V_ce0, "(port)output_states_0_V_ce0");
    sc_trace(mVcdFile, output_states_0_V_we0, "(port)output_states_0_V_we0");
    sc_trace(mVcdFile, output_states_0_V_d0, "(port)output_states_0_V_d0");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, add_ln129_fu_140_p2, "add_ln129_fu_140_p2");
    sc_trace(mVcdFile, add_ln129_reg_347, "add_ln129_reg_347");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln129_fu_134_p2, "icmp_ln129_fu_134_p2");
    sc_trace(mVcdFile, p_Val2_8_fu_171_p3, "p_Val2_8_fu_171_p3");
    sc_trace(mVcdFile, p_Val2_8_reg_357, "p_Val2_8_reg_357");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, select_ln102_fu_184_p3, "select_ln102_fu_184_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, grp_fu_151_p2, "grp_fu_151_p2");
    sc_trace(mVcdFile, udiv_ln1148_reg_368, "udiv_ln1148_reg_368");
    sc_trace(mVcdFile, ap_CS_fsm_state47, "ap_CS_fsm_state47");
    sc_trace(mVcdFile, zext_ln136_fu_191_p1, "zext_ln136_fu_191_p1");
    sc_trace(mVcdFile, zext_ln136_reg_372, "zext_ln136_reg_372");
    sc_trace(mVcdFile, add_ln136_fu_201_p2, "add_ln136_fu_201_p2");
    sc_trace(mVcdFile, add_ln136_reg_380, "add_ln136_reg_380");
    sc_trace(mVcdFile, ap_CS_fsm_state48, "ap_CS_fsm_state48");
    sc_trace(mVcdFile, zext_ln137_fu_207_p1, "zext_ln137_fu_207_p1");
    sc_trace(mVcdFile, zext_ln137_reg_385, "zext_ln137_reg_385");
    sc_trace(mVcdFile, icmp_ln136_fu_195_p2, "icmp_ln136_fu_195_p2");
    sc_trace(mVcdFile, input_0_V_load_reg_395, "input_0_V_load_reg_395");
    sc_trace(mVcdFile, ap_CS_fsm_state49, "ap_CS_fsm_state49");
    sc_trace(mVcdFile, p_Val2_7_reg_400, "p_Val2_7_reg_400");
    sc_trace(mVcdFile, ap_CS_fsm_state50, "ap_CS_fsm_state50");
    sc_trace(mVcdFile, select_ln850_fu_290_p3, "select_ln850_fu_290_p3");
    sc_trace(mVcdFile, select_ln850_reg_406, "select_ln850_reg_406");
    sc_trace(mVcdFile, ap_CS_fsm_state51, "ap_CS_fsm_state51");
    sc_trace(mVcdFile, tmp_78_reg_412, "tmp_78_reg_412");
    sc_trace(mVcdFile, p_0_0_reg_100, "p_0_0_reg_100");
    sc_trace(mVcdFile, j_0_0_reg_112, "j_0_0_reg_112");
    sc_trace(mVcdFile, j1_0_0_reg_123, "j1_0_0_reg_123");
    sc_trace(mVcdFile, ap_CS_fsm_state52, "ap_CS_fsm_state52");
    sc_trace(mVcdFile, zext_ln130_fu_146_p1, "zext_ln130_fu_146_p1");
    sc_trace(mVcdFile, tmp_76_fu_157_p3, "tmp_76_fu_157_p3");
    sc_trace(mVcdFile, sub_ln703_fu_165_p2, "sub_ln703_fu_165_p2");
    sc_trace(mVcdFile, icmp_ln1494_fu_179_p2, "icmp_ln1494_fu_179_p2");
    sc_trace(mVcdFile, mul_ln1118_fu_215_p0, "mul_ln1118_fu_215_p0");
    sc_trace(mVcdFile, mul_ln1118_fu_215_p1, "mul_ln1118_fu_215_p1");
    sc_trace(mVcdFile, mul_ln1118_fu_215_p2, "mul_ln1118_fu_215_p2");
    sc_trace(mVcdFile, icmp_ln1494_26_fu_230_p2, "icmp_ln1494_26_fu_230_p2");
    sc_trace(mVcdFile, select_ln109_fu_235_p3, "select_ln109_fu_235_p3");
    sc_trace(mVcdFile, add_ln109_fu_243_p2, "add_ln109_fu_243_p2");
    sc_trace(mVcdFile, trunc_ln851_fu_266_p1, "trunc_ln851_fu_266_p1");
    sc_trace(mVcdFile, p_Result_s_fu_248_p4, "p_Result_s_fu_248_p4");
    sc_trace(mVcdFile, icmp_ln851_fu_270_p2, "icmp_ln851_fu_270_p2");
    sc_trace(mVcdFile, add_ln700_fu_276_p2, "add_ln700_fu_276_p2");
    sc_trace(mVcdFile, tmp_77_fu_258_p3, "tmp_77_fu_258_p3");
    sc_trace(mVcdFile, select_ln851_fu_282_p3, "select_ln851_fu_282_p3");
    sc_trace(mVcdFile, icmp_ln887_fu_308_p2, "icmp_ln887_fu_308_p2");
    sc_trace(mVcdFile, icmp_ln895_fu_313_p2, "icmp_ln895_fu_313_p2");
    sc_trace(mVcdFile, or_ln887_fu_329_p2, "or_ln887_fu_329_p2");
    sc_trace(mVcdFile, select_ln887_fu_321_p3, "select_ln887_fu_321_p3");
    sc_trace(mVcdFile, trunc_ln138_fu_318_p1, "trunc_ln138_fu_318_p1");
    sc_trace(mVcdFile, grp_fu_151_ap_start, "grp_fu_151_ap_start");
    sc_trace(mVcdFile, grp_fu_151_ap_done, "grp_fu_151_ap_done");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

quantize_activation::~quantize_activation() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete dut_udiv_40ns_40nfYi_U12;
}

void quantize_activation::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_logic_1;
}

void quantize_activation::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv40_7F00000000;
}

void quantize_activation::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read())) {
        j1_0_0_reg_123 = add_ln136_reg_380.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        j1_0_0_reg_123 = ap_const_lv11_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_0_0_reg_112 = add_ln129_reg_347.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_0_0_reg_112 = ap_const_lv11_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        p_0_0_reg_100 = select_ln102_fu_184_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        p_0_0_reg_100 = ap_const_lv40_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        add_ln129_reg_347 = add_ln129_fu_140_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        add_ln136_reg_380 = add_ln136_fu_201_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        input_0_V_load_reg_395 = input_0_V_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read())) {
        p_Val2_7_reg_400 = mul_ln1118_fu_215_p2.read().range(55, 16);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        p_Val2_8_reg_357 = p_Val2_8_fu_171_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        select_ln850_reg_406 = select_ln850_fu_290_p3.read();
        tmp_78_reg_412 = select_ln850_fu_290_p3.read().range(23, 7);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        udiv_ln1148_reg_368 = grp_fu_151_p2.read();
        zext_ln136_reg_372 = zext_ln136_fu_191_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln136_fu_195_p2.read()))) {
        zext_ln137_reg_385 = zext_ln137_fu_207_p1.read();
    }
}

void quantize_activation::thread_add_ln109_fu_243_p2() {
    add_ln109_fu_243_p2 = (!p_Val2_7_reg_400.read().is_01() || !select_ln109_fu_235_p3.read().is_01())? sc_lv<40>(): (sc_biguint<40>(p_Val2_7_reg_400.read()) + sc_biguint<40>(select_ln109_fu_235_p3.read()));
}

void quantize_activation::thread_add_ln129_fu_140_p2() {
    add_ln129_fu_140_p2 = (!j_0_0_reg_112.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(j_0_0_reg_112.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void quantize_activation::thread_add_ln136_fu_201_p2() {
    add_ln136_fu_201_p2 = (!j1_0_0_reg_123.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(j1_0_0_reg_123.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void quantize_activation::thread_add_ln700_fu_276_p2() {
    add_ln700_fu_276_p2 = (!ap_const_lv24_1.is_01() || !p_Result_s_fu_248_p4.read().is_01())? sc_lv<24>(): (sc_biguint<24>(ap_const_lv24_1) + sc_biguint<24>(p_Result_s_fu_248_p4.read()));
}

void quantize_activation::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void quantize_activation::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void quantize_activation::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void quantize_activation::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void quantize_activation::thread_ap_CS_fsm_state47() {
    ap_CS_fsm_state47 = ap_CS_fsm.read()[46];
}

void quantize_activation::thread_ap_CS_fsm_state48() {
    ap_CS_fsm_state48 = ap_CS_fsm.read()[47];
}

void quantize_activation::thread_ap_CS_fsm_state49() {
    ap_CS_fsm_state49 = ap_CS_fsm.read()[48];
}

void quantize_activation::thread_ap_CS_fsm_state50() {
    ap_CS_fsm_state50 = ap_CS_fsm.read()[49];
}

void quantize_activation::thread_ap_CS_fsm_state51() {
    ap_CS_fsm_state51 = ap_CS_fsm.read()[50];
}

void quantize_activation::thread_ap_CS_fsm_state52() {
    ap_CS_fsm_state52 = ap_CS_fsm.read()[51];
}

void quantize_activation::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) && 
          esl_seteq<1,1,1>(icmp_ln136_fu_195_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void quantize_activation::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void quantize_activation::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) && 
         esl_seteq<1,1,1>(icmp_ln136_fu_195_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void quantize_activation::thread_ap_return() {
    ap_return = udiv_ln1148_reg_368.read();
}

void quantize_activation::thread_grp_fu_151_ap_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln129_fu_134_p2.read(), ap_const_lv1_1))) {
        grp_fu_151_ap_start = ap_const_logic_1;
    } else {
        grp_fu_151_ap_start = ap_const_logic_0;
    }
}

void quantize_activation::thread_icmp_ln129_fu_134_p2() {
    icmp_ln129_fu_134_p2 = (!j_0_0_reg_112.read().is_01() || !ap_const_lv11_600.is_01())? sc_lv<1>(): sc_lv<1>(j_0_0_reg_112.read() == ap_const_lv11_600);
}

void quantize_activation::thread_icmp_ln136_fu_195_p2() {
    icmp_ln136_fu_195_p2 = (!j1_0_0_reg_123.read().is_01() || !ap_const_lv11_600.is_01())? sc_lv<1>(): sc_lv<1>(j1_0_0_reg_123.read() == ap_const_lv11_600);
}

void quantize_activation::thread_icmp_ln1494_26_fu_230_p2() {
    icmp_ln1494_26_fu_230_p2 = (!p_Val2_7_reg_400.read().is_01() || !ap_const_lv40_0.is_01())? sc_lv<1>(): (sc_bigint<40>(p_Val2_7_reg_400.read()) > sc_bigint<40>(ap_const_lv40_0));
}

void quantize_activation::thread_icmp_ln1494_fu_179_p2() {
    icmp_ln1494_fu_179_p2 = (!p_0_0_reg_100.read().is_01() || !p_Val2_8_reg_357.read().is_01())? sc_lv<1>(): (sc_bigint<40>(p_0_0_reg_100.read()) > sc_bigint<40>(p_Val2_8_reg_357.read()));
}

void quantize_activation::thread_icmp_ln851_fu_270_p2() {
    icmp_ln851_fu_270_p2 = (!trunc_ln851_fu_266_p1.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln851_fu_266_p1.read() == ap_const_lv16_0);
}

void quantize_activation::thread_icmp_ln887_fu_308_p2() {
    icmp_ln887_fu_308_p2 = (!select_ln850_reg_406.read().is_01() || !ap_const_lv24_FFFF80.is_01())? sc_lv<1>(): (sc_bigint<24>(select_ln850_reg_406.read()) < sc_bigint<24>(ap_const_lv24_FFFF80));
}

void quantize_activation::thread_icmp_ln895_fu_313_p2() {
    icmp_ln895_fu_313_p2 = (!tmp_78_reg_412.read().is_01() || !ap_const_lv17_0.is_01())? sc_lv<1>(): (sc_bigint<17>(tmp_78_reg_412.read()) > sc_bigint<17>(ap_const_lv17_0));
}

void quantize_activation::thread_input_0_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        input_0_V_address0 =  (sc_lv<11>) (zext_ln137_fu_207_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        input_0_V_address0 =  (sc_lv<11>) (zext_ln130_fu_146_p1.read());
    } else {
        input_0_V_address0 = "XXXXXXXXXXX";
    }
}

void quantize_activation::thread_input_0_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()))) {
        input_0_V_ce0 = ap_const_logic_1;
    } else {
        input_0_V_ce0 = ap_const_logic_0;
    }
}

void quantize_activation::thread_mul_ln1118_fu_215_p0() {
    mul_ln1118_fu_215_p0 =  (sc_lv<40>) (zext_ln136_reg_372.read());
}

void quantize_activation::thread_mul_ln1118_fu_215_p1() {
    mul_ln1118_fu_215_p1 = input_0_V_load_reg_395.read();
}

void quantize_activation::thread_mul_ln1118_fu_215_p2() {
    mul_ln1118_fu_215_p2 = (!mul_ln1118_fu_215_p0.read().is_01() || !mul_ln1118_fu_215_p1.read().is_01())? sc_lv<56>(): sc_biguint<40>(mul_ln1118_fu_215_p0.read()) * sc_bigint<40>(mul_ln1118_fu_215_p1.read());
}

void quantize_activation::thread_or_ln887_fu_329_p2() {
    or_ln887_fu_329_p2 = (icmp_ln887_fu_308_p2.read() | icmp_ln895_fu_313_p2.read());
}

void quantize_activation::thread_output_states_0_V_address0() {
    output_states_0_V_address0 =  (sc_lv<11>) (zext_ln137_reg_385.read());
}

void quantize_activation::thread_output_states_0_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read())) {
        output_states_0_V_ce0 = ap_const_logic_1;
    } else {
        output_states_0_V_ce0 = ap_const_logic_0;
    }
}

void quantize_activation::thread_output_states_0_V_d0() {
    output_states_0_V_d0 = (!or_ln887_fu_329_p2.read()[0].is_01())? sc_lv<8>(): ((or_ln887_fu_329_p2.read()[0].to_bool())? select_ln887_fu_321_p3.read(): trunc_ln138_fu_318_p1.read());
}

void quantize_activation::thread_output_states_0_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read())) {
        output_states_0_V_we0 = ap_const_logic_1;
    } else {
        output_states_0_V_we0 = ap_const_logic_0;
    }
}

void quantize_activation::thread_p_Result_s_fu_248_p4() {
    p_Result_s_fu_248_p4 = add_ln109_fu_243_p2.read().range(39, 16);
}

void quantize_activation::thread_p_Val2_8_fu_171_p3() {
    p_Val2_8_fu_171_p3 = (!tmp_76_fu_157_p3.read()[0].is_01())? sc_lv<40>(): ((tmp_76_fu_157_p3.read()[0].to_bool())? sub_ln703_fu_165_p2.read(): input_0_V_q0.read());
}

void quantize_activation::thread_select_ln102_fu_184_p3() {
    select_ln102_fu_184_p3 = (!icmp_ln1494_fu_179_p2.read()[0].is_01())? sc_lv<40>(): ((icmp_ln1494_fu_179_p2.read()[0].to_bool())? p_0_0_reg_100.read(): p_Val2_8_reg_357.read());
}

void quantize_activation::thread_select_ln109_fu_235_p3() {
    select_ln109_fu_235_p3 = (!icmp_ln1494_26_fu_230_p2.read()[0].is_01())? sc_lv<40>(): ((icmp_ln1494_26_fu_230_p2.read()[0].to_bool())? ap_const_lv40_8000: ap_const_lv40_FFFFFF8000);
}

void quantize_activation::thread_select_ln850_fu_290_p3() {
    select_ln850_fu_290_p3 = (!tmp_77_fu_258_p3.read()[0].is_01())? sc_lv<24>(): ((tmp_77_fu_258_p3.read()[0].to_bool())? select_ln851_fu_282_p3.read(): p_Result_s_fu_248_p4.read());
}

void quantize_activation::thread_select_ln851_fu_282_p3() {
    select_ln851_fu_282_p3 = (!icmp_ln851_fu_270_p2.read()[0].is_01())? sc_lv<24>(): ((icmp_ln851_fu_270_p2.read()[0].to_bool())? p_Result_s_fu_248_p4.read(): add_ln700_fu_276_p2.read());
}

void quantize_activation::thread_select_ln887_fu_321_p3() {
    select_ln887_fu_321_p3 = (!icmp_ln887_fu_308_p2.read()[0].is_01())? sc_lv<8>(): ((icmp_ln887_fu_308_p2.read()[0].to_bool())? ap_const_lv8_80: ap_const_lv8_7F);
}

void quantize_activation::thread_sub_ln703_fu_165_p2() {
    sub_ln703_fu_165_p2 = (!ap_const_lv40_0.is_01() || !input_0_V_q0.read().is_01())? sc_lv<40>(): (sc_biguint<40>(ap_const_lv40_0) - sc_biguint<40>(input_0_V_q0.read()));
}

void quantize_activation::thread_tmp_76_fu_157_p3() {
    tmp_76_fu_157_p3 = input_0_V_q0.read().range(39, 39);
}

void quantize_activation::thread_tmp_77_fu_258_p3() {
    tmp_77_fu_258_p3 = add_ln109_fu_243_p2.read().range(39, 39);
}

void quantize_activation::thread_trunc_ln138_fu_318_p1() {
    trunc_ln138_fu_318_p1 = select_ln850_reg_406.read().range(8-1, 0);
}

void quantize_activation::thread_trunc_ln851_fu_266_p1() {
    trunc_ln851_fu_266_p1 = add_ln109_fu_243_p2.read().range(16-1, 0);
}

void quantize_activation::thread_zext_ln130_fu_146_p1() {
    zext_ln130_fu_146_p1 = esl_zext<64,11>(j_0_0_reg_112.read());
}

void quantize_activation::thread_zext_ln136_fu_191_p1() {
    zext_ln136_fu_191_p1 = esl_zext<56,40>(grp_fu_151_p2.read());
}

void quantize_activation::thread_zext_ln137_fu_207_p1() {
    zext_ln137_fu_207_p1 = esl_zext<64,11>(j1_0_0_reg_123.read());
}

void quantize_activation::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln129_fu_134_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_fsm_state41;
            break;
        case 1099511627776 : 
            ap_NS_fsm = ap_ST_fsm_state42;
            break;
        case 2199023255552 : 
            ap_NS_fsm = ap_ST_fsm_state43;
            break;
        case 4398046511104 : 
            ap_NS_fsm = ap_ST_fsm_state44;
            break;
        case 8796093022208 : 
            ap_NS_fsm = ap_ST_fsm_state45;
            break;
        case 17592186044416 : 
            ap_NS_fsm = ap_ST_fsm_state46;
            break;
        case 35184372088832 : 
            ap_NS_fsm = ap_ST_fsm_state47;
            break;
        case 70368744177664 : 
            ap_NS_fsm = ap_ST_fsm_state48;
            break;
        case 140737488355328 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) && esl_seteq<1,1,1>(icmp_ln136_fu_195_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state49;
            }
            break;
        case 281474976710656 : 
            ap_NS_fsm = ap_ST_fsm_state50;
            break;
        case 562949953421312 : 
            ap_NS_fsm = ap_ST_fsm_state51;
            break;
        case 1125899906842624 : 
            ap_NS_fsm = ap_ST_fsm_state52;
            break;
        case 2251799813685248 : 
            ap_NS_fsm = ap_ST_fsm_state48;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<52>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

