// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _quantize_activation_HH_
#define _quantize_activation_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dut_udiv_40ns_40nfYi.h"

namespace ap_rtl {

struct quantize_activation : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<11> > input_0_V_address0;
    sc_out< sc_logic > input_0_V_ce0;
    sc_in< sc_lv<40> > input_0_V_q0;
    sc_out< sc_lv<11> > output_states_0_V_address0;
    sc_out< sc_logic > output_states_0_V_ce0;
    sc_out< sc_logic > output_states_0_V_we0;
    sc_out< sc_lv<8> > output_states_0_V_d0;
    sc_out< sc_lv<40> > ap_return;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_lv<40> > ap_var_for_const0;


    // Module declarations
    quantize_activation(sc_module_name name);
    SC_HAS_PROCESS(quantize_activation);

    ~quantize_activation();

    sc_trace_file* mVcdFile;

    dut_udiv_40ns_40nfYi<1,44,40,40,40>* dut_udiv_40ns_40nfYi_U12;
    sc_signal< sc_lv<52> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<11> > add_ln129_fu_140_p2;
    sc_signal< sc_lv<11> > add_ln129_reg_347;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln129_fu_134_p2;
    sc_signal< sc_lv<40> > p_Val2_8_fu_171_p3;
    sc_signal< sc_lv<40> > p_Val2_8_reg_357;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<40> > select_ln102_fu_184_p3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<40> > grp_fu_151_p2;
    sc_signal< sc_lv<40> > udiv_ln1148_reg_368;
    sc_signal< sc_logic > ap_CS_fsm_state47;
    sc_signal< sc_lv<56> > zext_ln136_fu_191_p1;
    sc_signal< sc_lv<56> > zext_ln136_reg_372;
    sc_signal< sc_lv<11> > add_ln136_fu_201_p2;
    sc_signal< sc_lv<11> > add_ln136_reg_380;
    sc_signal< sc_logic > ap_CS_fsm_state48;
    sc_signal< sc_lv<64> > zext_ln137_fu_207_p1;
    sc_signal< sc_lv<64> > zext_ln137_reg_385;
    sc_signal< sc_lv<1> > icmp_ln136_fu_195_p2;
    sc_signal< sc_lv<40> > input_0_V_load_reg_395;
    sc_signal< sc_logic > ap_CS_fsm_state49;
    sc_signal< sc_lv<40> > p_Val2_7_reg_400;
    sc_signal< sc_logic > ap_CS_fsm_state50;
    sc_signal< sc_lv<24> > select_ln850_fu_290_p3;
    sc_signal< sc_lv<24> > select_ln850_reg_406;
    sc_signal< sc_logic > ap_CS_fsm_state51;
    sc_signal< sc_lv<17> > tmp_78_reg_412;
    sc_signal< sc_lv<40> > p_0_0_reg_100;
    sc_signal< sc_lv<11> > j_0_0_reg_112;
    sc_signal< sc_lv<11> > j1_0_0_reg_123;
    sc_signal< sc_logic > ap_CS_fsm_state52;
    sc_signal< sc_lv<64> > zext_ln130_fu_146_p1;
    sc_signal< sc_lv<1> > tmp_76_fu_157_p3;
    sc_signal< sc_lv<40> > sub_ln703_fu_165_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_fu_179_p2;
    sc_signal< sc_lv<40> > mul_ln1118_fu_215_p0;
    sc_signal< sc_lv<40> > mul_ln1118_fu_215_p1;
    sc_signal< sc_lv<56> > mul_ln1118_fu_215_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_26_fu_230_p2;
    sc_signal< sc_lv<40> > select_ln109_fu_235_p3;
    sc_signal< sc_lv<40> > add_ln109_fu_243_p2;
    sc_signal< sc_lv<16> > trunc_ln851_fu_266_p1;
    sc_signal< sc_lv<24> > p_Result_s_fu_248_p4;
    sc_signal< sc_lv<1> > icmp_ln851_fu_270_p2;
    sc_signal< sc_lv<24> > add_ln700_fu_276_p2;
    sc_signal< sc_lv<1> > tmp_77_fu_258_p3;
    sc_signal< sc_lv<24> > select_ln851_fu_282_p3;
    sc_signal< sc_lv<1> > icmp_ln887_fu_308_p2;
    sc_signal< sc_lv<1> > icmp_ln895_fu_313_p2;
    sc_signal< sc_lv<1> > or_ln887_fu_329_p2;
    sc_signal< sc_lv<8> > select_ln887_fu_321_p3;
    sc_signal< sc_lv<8> > trunc_ln138_fu_318_p1;
    sc_signal< sc_logic > grp_fu_151_ap_start;
    sc_signal< sc_logic > grp_fu_151_ap_done;
    sc_signal< sc_lv<52> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<52> ap_ST_fsm_state1;
    static const sc_lv<52> ap_ST_fsm_state2;
    static const sc_lv<52> ap_ST_fsm_state3;
    static const sc_lv<52> ap_ST_fsm_state4;
    static const sc_lv<52> ap_ST_fsm_state5;
    static const sc_lv<52> ap_ST_fsm_state6;
    static const sc_lv<52> ap_ST_fsm_state7;
    static const sc_lv<52> ap_ST_fsm_state8;
    static const sc_lv<52> ap_ST_fsm_state9;
    static const sc_lv<52> ap_ST_fsm_state10;
    static const sc_lv<52> ap_ST_fsm_state11;
    static const sc_lv<52> ap_ST_fsm_state12;
    static const sc_lv<52> ap_ST_fsm_state13;
    static const sc_lv<52> ap_ST_fsm_state14;
    static const sc_lv<52> ap_ST_fsm_state15;
    static const sc_lv<52> ap_ST_fsm_state16;
    static const sc_lv<52> ap_ST_fsm_state17;
    static const sc_lv<52> ap_ST_fsm_state18;
    static const sc_lv<52> ap_ST_fsm_state19;
    static const sc_lv<52> ap_ST_fsm_state20;
    static const sc_lv<52> ap_ST_fsm_state21;
    static const sc_lv<52> ap_ST_fsm_state22;
    static const sc_lv<52> ap_ST_fsm_state23;
    static const sc_lv<52> ap_ST_fsm_state24;
    static const sc_lv<52> ap_ST_fsm_state25;
    static const sc_lv<52> ap_ST_fsm_state26;
    static const sc_lv<52> ap_ST_fsm_state27;
    static const sc_lv<52> ap_ST_fsm_state28;
    static const sc_lv<52> ap_ST_fsm_state29;
    static const sc_lv<52> ap_ST_fsm_state30;
    static const sc_lv<52> ap_ST_fsm_state31;
    static const sc_lv<52> ap_ST_fsm_state32;
    static const sc_lv<52> ap_ST_fsm_state33;
    static const sc_lv<52> ap_ST_fsm_state34;
    static const sc_lv<52> ap_ST_fsm_state35;
    static const sc_lv<52> ap_ST_fsm_state36;
    static const sc_lv<52> ap_ST_fsm_state37;
    static const sc_lv<52> ap_ST_fsm_state38;
    static const sc_lv<52> ap_ST_fsm_state39;
    static const sc_lv<52> ap_ST_fsm_state40;
    static const sc_lv<52> ap_ST_fsm_state41;
    static const sc_lv<52> ap_ST_fsm_state42;
    static const sc_lv<52> ap_ST_fsm_state43;
    static const sc_lv<52> ap_ST_fsm_state44;
    static const sc_lv<52> ap_ST_fsm_state45;
    static const sc_lv<52> ap_ST_fsm_state46;
    static const sc_lv<52> ap_ST_fsm_state47;
    static const sc_lv<52> ap_ST_fsm_state48;
    static const sc_lv<52> ap_ST_fsm_state49;
    static const sc_lv<52> ap_ST_fsm_state50;
    static const sc_lv<52> ap_ST_fsm_state51;
    static const sc_lv<52> ap_ST_fsm_state52;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_2E;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<32> ap_const_lv32_30;
    static const sc_lv<32> ap_const_lv32_31;
    static const sc_lv<32> ap_const_lv32_32;
    static const sc_lv<40> ap_const_lv40_0;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<32> ap_const_lv32_33;
    static const sc_lv<11> ap_const_lv11_600;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<40> ap_const_lv40_7F00000000;
    static const sc_lv<32> ap_const_lv32_27;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_37;
    static const sc_lv<40> ap_const_lv40_8000;
    static const sc_lv<40> ap_const_lv40_FFFFFF8000;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<24> ap_const_lv24_1;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<24> ap_const_lv24_FFFF80;
    static const sc_lv<17> ap_const_lv17_0;
    static const sc_lv<8> ap_const_lv8_80;
    static const sc_lv<8> ap_const_lv8_7F;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln109_fu_243_p2();
    void thread_add_ln129_fu_140_p2();
    void thread_add_ln136_fu_201_p2();
    void thread_add_ln700_fu_276_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state47();
    void thread_ap_CS_fsm_state48();
    void thread_ap_CS_fsm_state49();
    void thread_ap_CS_fsm_state50();
    void thread_ap_CS_fsm_state51();
    void thread_ap_CS_fsm_state52();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_grp_fu_151_ap_start();
    void thread_icmp_ln129_fu_134_p2();
    void thread_icmp_ln136_fu_195_p2();
    void thread_icmp_ln1494_26_fu_230_p2();
    void thread_icmp_ln1494_fu_179_p2();
    void thread_icmp_ln851_fu_270_p2();
    void thread_icmp_ln887_fu_308_p2();
    void thread_icmp_ln895_fu_313_p2();
    void thread_input_0_V_address0();
    void thread_input_0_V_ce0();
    void thread_mul_ln1118_fu_215_p0();
    void thread_mul_ln1118_fu_215_p1();
    void thread_mul_ln1118_fu_215_p2();
    void thread_or_ln887_fu_329_p2();
    void thread_output_states_0_V_address0();
    void thread_output_states_0_V_ce0();
    void thread_output_states_0_V_d0();
    void thread_output_states_0_V_we0();
    void thread_p_Result_s_fu_248_p4();
    void thread_p_Val2_8_fu_171_p3();
    void thread_select_ln102_fu_184_p3();
    void thread_select_ln109_fu_235_p3();
    void thread_select_ln850_fu_290_p3();
    void thread_select_ln851_fu_282_p3();
    void thread_select_ln887_fu_321_p3();
    void thread_sub_ln703_fu_165_p2();
    void thread_tmp_76_fu_157_p3();
    void thread_tmp_77_fu_258_p3();
    void thread_trunc_ln138_fu_318_p1();
    void thread_trunc_ln851_fu_266_p1();
    void thread_zext_ln130_fu_146_p1();
    void thread_zext_ln136_fu_191_p1();
    void thread_zext_ln137_fu_207_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
