// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _GEMM_3D_float_HH_
#define _GEMM_3D_float_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dut_mux_32_40_1_1.h"
#include "dut_mux_42_40_1_1.h"

namespace ap_rtl {

struct GEMM_3D_float : public sc_module {
    // Port declarations 52
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<40> > p_read;
    sc_in< sc_lv<40> > p_read1;
    sc_in< sc_lv<40> > p_read2;
    sc_in< sc_lv<40> > p_read3;
    sc_in< sc_lv<40> > p_read4;
    sc_in< sc_lv<40> > p_read5;
    sc_in< sc_lv<40> > p_read6;
    sc_in< sc_lv<40> > p_read7;
    sc_in< sc_lv<40> > p_read8;
    sc_in< sc_lv<40> > p_read9;
    sc_in< sc_lv<40> > p_read10;
    sc_in< sc_lv<40> > p_read11;
    sc_in< sc_lv<40> > p_read12;
    sc_in< sc_lv<40> > p_read13;
    sc_in< sc_lv<40> > p_read14;
    sc_in< sc_lv<40> > p_read15;
    sc_out< sc_lv<4> > input_2_0_V_address0;
    sc_out< sc_logic > input_2_0_V_ce0;
    sc_in< sc_lv<40> > input_2_0_V_q0;
    sc_out< sc_lv<4> > input_2_0_V_address1;
    sc_out< sc_logic > input_2_0_V_ce1;
    sc_in< sc_lv<40> > input_2_0_V_q1;
    sc_out< sc_lv<4> > input_2_1_V_address0;
    sc_out< sc_logic > input_2_1_V_ce0;
    sc_in< sc_lv<40> > input_2_1_V_q0;
    sc_out< sc_lv<4> > input_2_1_V_address1;
    sc_out< sc_logic > input_2_1_V_ce1;
    sc_in< sc_lv<40> > input_2_1_V_q1;
    sc_out< sc_lv<4> > input_2_2_V_address0;
    sc_out< sc_logic > input_2_2_V_ce0;
    sc_in< sc_lv<40> > input_2_2_V_q0;
    sc_out< sc_lv<4> > input_2_2_V_address1;
    sc_out< sc_logic > input_2_2_V_ce1;
    sc_in< sc_lv<40> > input_2_2_V_q1;
    sc_out< sc_lv<40> > ap_return_0;
    sc_out< sc_lv<40> > ap_return_1;
    sc_out< sc_lv<40> > ap_return_2;
    sc_out< sc_lv<40> > ap_return_3;
    sc_out< sc_lv<40> > ap_return_4;
    sc_out< sc_lv<40> > ap_return_5;
    sc_out< sc_lv<40> > ap_return_6;
    sc_out< sc_lv<40> > ap_return_7;
    sc_out< sc_lv<40> > ap_return_8;
    sc_out< sc_lv<40> > ap_return_9;
    sc_out< sc_lv<40> > ap_return_10;
    sc_out< sc_lv<40> > ap_return_11;


    // Module declarations
    GEMM_3D_float(sc_module_name name);
    SC_HAS_PROCESS(GEMM_3D_float);

    ~GEMM_3D_float();

    sc_trace_file* mVcdFile;

    dut_mux_32_40_1_1<1,1,40,40,40,2,40>* dut_mux_32_40_1_1_U121;
    dut_mux_32_40_1_1<1,1,40,40,40,2,40>* dut_mux_32_40_1_1_U122;
    dut_mux_42_40_1_1<1,1,40,40,40,40,2,40>* dut_mux_42_40_1_1_U123;
    dut_mux_42_40_1_1<1,1,40,40,40,40,2,40>* dut_mux_42_40_1_1_U124;
    dut_mux_42_40_1_1<1,1,40,40,40,40,2,40>* dut_mux_42_40_1_1_U125;
    dut_mux_42_40_1_1<1,1,40,40,40,40,2,40>* dut_mux_42_40_1_1_U126;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > indvar_flatten_reg_379;
    sc_signal< sc_lv<3> > i_0_reg_390;
    sc_signal< sc_lv<2> > k_0_0_reg_401;
    sc_signal< sc_lv<40> > grp_fu_412_p5;
    sc_signal< sc_lv<40> > reg_434;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<1> > icmp_ln271_reg_1044;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<40> > grp_fu_423_p5;
    sc_signal< sc_lv<40> > reg_438;
    sc_signal< sc_lv<1> > icmp_ln271_fu_442_p2;
    sc_signal< sc_lv<1> > icmp_ln271_reg_1044_pp0_iter1_reg;
    sc_signal< sc_lv<4> > add_ln271_fu_448_p2;
    sc_signal< sc_lv<4> > add_ln271_reg_1048;
    sc_signal< sc_lv<2> > select_ln274_fu_466_p3;
    sc_signal< sc_lv<2> > select_ln274_reg_1053;
    sc_signal< sc_lv<2> > select_ln274_reg_1053_pp0_iter1_reg;
    sc_signal< sc_lv<3> > select_ln274_2_fu_474_p3;
    sc_signal< sc_lv<3> > select_ln274_2_reg_1060;
    sc_signal< sc_lv<5> > tmp_fu_482_p3;
    sc_signal< sc_lv<5> > tmp_reg_1065;
    sc_signal< sc_lv<2> > trunc_ln274_fu_514_p1;
    sc_signal< sc_lv<2> > trunc_ln274_reg_1101;
    sc_signal< sc_lv<2> > trunc_ln274_reg_1101_pp0_iter1_reg;
    sc_signal< sc_lv<40> > tmp_28_fu_518_p6;
    sc_signal< sc_lv<40> > tmp_28_reg_1105;
    sc_signal< sc_lv<40> > tmp_30_fu_528_p6;
    sc_signal< sc_lv<40> > tmp_30_reg_1110;
    sc_signal< sc_lv<40> > tmp_32_fu_538_p6;
    sc_signal< sc_lv<40> > tmp_32_reg_1115;
    sc_signal< sc_lv<40> > tmp_32_reg_1115_pp0_iter1_reg;
    sc_signal< sc_lv<40> > tmp_34_fu_548_p6;
    sc_signal< sc_lv<40> > tmp_34_reg_1120;
    sc_signal< sc_lv<40> > tmp_34_reg_1120_pp0_iter1_reg;
    sc_signal< sc_lv<2> > add_ln273_fu_590_p2;
    sc_signal< sc_lv<2> > add_ln273_reg_1155;
    sc_signal< sc_lv<56> > mul_ln1192_fu_615_p2;
    sc_signal< sc_lv<56> > mul_ln1192_reg_1160;
    sc_signal< sc_lv<40> > tmp_62_reg_1165;
    sc_signal< sc_lv<56> > mul_ln1192_1_fu_650_p2;
    sc_signal< sc_lv<56> > mul_ln1192_1_reg_1170;
    sc_signal< sc_lv<40> > tmp_63_reg_1175;
    sc_signal< sc_lv<56> > mul_ln1192_2_fu_673_p2;
    sc_signal< sc_lv<56> > mul_ln1192_2_reg_1180;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<4> > ap_phi_mux_indvar_flatten_phi_fu_383_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<3> > ap_phi_mux_i_0_phi_fu_394_p4;
    sc_signal< sc_lv<2> > ap_phi_mux_k_0_0_phi_fu_405_p4;
    sc_signal< sc_lv<64> > zext_ln1117_fu_490_p1;
    sc_signal< sc_lv<64> > tmp_59_fu_503_p3;
    sc_signal< sc_lv<64> > tmp_60_fu_563_p3;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<64> > tmp_61_fu_579_p3;
    sc_signal< sc_lv<40> > output_V724_1_fu_112;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<40> > output_V723_1_fu_116;
    sc_signal< sc_lv<40> > output_V_1_fu_120;
    sc_signal< sc_lv<40> > output_V722_1_fu_124;
    sc_signal< sc_lv<40> > output_V7_1_fu_128;
    sc_signal< sc_lv<40> > output_V16_1_fu_132;
    sc_signal< sc_lv<40> > output_V621_1_fu_136;
    sc_signal< sc_lv<40> > output_V620_1_fu_140;
    sc_signal< sc_lv<40> > output_V17_1_fu_144;
    sc_signal< sc_lv<40> > output_V619_1_fu_148;
    sc_signal< sc_lv<40> > output_V6_1_fu_152;
    sc_signal< sc_lv<40> > output_V18_1_fu_156;
    sc_signal< sc_lv<1> > icmp_ln273_fu_460_p2;
    sc_signal< sc_lv<3> > i_fu_454_p2;
    sc_signal< sc_lv<5> > or_ln1117_fu_497_p2;
    sc_signal< sc_lv<5> > or_ln1117_1_fu_558_p2;
    sc_signal< sc_lv<5> > or_ln1117_2_fu_574_p2;
    sc_signal< sc_lv<40> > mul_ln1118_fu_602_p0;
    sc_signal< sc_lv<40> > mul_ln1118_fu_602_p1;
    sc_signal< sc_lv<40> > mul_ln1192_fu_615_p0;
    sc_signal< sc_lv<40> > mul_ln1192_fu_615_p1;
    sc_signal< sc_lv<56> > mul_ln1118_fu_602_p2;
    sc_signal< sc_lv<56> > shl_ln_fu_631_p3;
    sc_signal< sc_lv<40> > mul_ln1192_1_fu_650_p0;
    sc_signal< sc_lv<40> > mul_ln1192_1_fu_650_p1;
    sc_signal< sc_lv<56> > add_ln1192_fu_638_p2;
    sc_signal< sc_lv<40> > mul_ln1192_2_fu_673_p0;
    sc_signal< sc_lv<40> > mul_ln1192_2_fu_673_p1;
    sc_signal< sc_lv<56> > shl_ln728_6_fu_679_p3;
    sc_signal< sc_lv<56> > add_ln1192_4_fu_686_p2;
    sc_signal< sc_lv<40> > tmp_64_fu_691_p4;
    sc_signal< sc_lv<56> > shl_ln728_7_fu_701_p3;
    sc_signal< sc_lv<56> > add_ln1192_5_fu_709_p2;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_pp0_stage1;
    static const sc_lv<4> ap_ST_fsm_state7;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<59> ap_const_lv59_0;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<5> ap_const_lv5_3;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_37;
    static const sc_lv<16> ap_const_lv16_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln1192_4_fu_686_p2();
    void thread_add_ln1192_5_fu_709_p2();
    void thread_add_ln1192_fu_638_p2();
    void thread_add_ln271_fu_448_p2();
    void thread_add_ln273_fu_590_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage1_iter1();
    void thread_ap_block_state6_pp0_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_i_0_phi_fu_394_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_383_p4();
    void thread_ap_phi_mux_k_0_0_phi_fu_405_p4();
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_10();
    void thread_ap_return_11();
    void thread_ap_return_2();
    void thread_ap_return_3();
    void thread_ap_return_4();
    void thread_ap_return_5();
    void thread_ap_return_6();
    void thread_ap_return_7();
    void thread_ap_return_8();
    void thread_ap_return_9();
    void thread_i_fu_454_p2();
    void thread_icmp_ln271_fu_442_p2();
    void thread_icmp_ln273_fu_460_p2();
    void thread_input_2_0_V_address0();
    void thread_input_2_0_V_address1();
    void thread_input_2_0_V_ce0();
    void thread_input_2_0_V_ce1();
    void thread_input_2_1_V_address0();
    void thread_input_2_1_V_address1();
    void thread_input_2_1_V_ce0();
    void thread_input_2_1_V_ce1();
    void thread_input_2_2_V_address0();
    void thread_input_2_2_V_address1();
    void thread_input_2_2_V_ce0();
    void thread_input_2_2_V_ce1();
    void thread_mul_ln1118_fu_602_p0();
    void thread_mul_ln1118_fu_602_p1();
    void thread_mul_ln1118_fu_602_p2();
    void thread_mul_ln1192_1_fu_650_p0();
    void thread_mul_ln1192_1_fu_650_p1();
    void thread_mul_ln1192_1_fu_650_p2();
    void thread_mul_ln1192_2_fu_673_p0();
    void thread_mul_ln1192_2_fu_673_p1();
    void thread_mul_ln1192_2_fu_673_p2();
    void thread_mul_ln1192_fu_615_p0();
    void thread_mul_ln1192_fu_615_p1();
    void thread_mul_ln1192_fu_615_p2();
    void thread_or_ln1117_1_fu_558_p2();
    void thread_or_ln1117_2_fu_574_p2();
    void thread_or_ln1117_fu_497_p2();
    void thread_select_ln274_2_fu_474_p3();
    void thread_select_ln274_fu_466_p3();
    void thread_shl_ln728_6_fu_679_p3();
    void thread_shl_ln728_7_fu_701_p3();
    void thread_shl_ln_fu_631_p3();
    void thread_tmp_59_fu_503_p3();
    void thread_tmp_60_fu_563_p3();
    void thread_tmp_61_fu_579_p3();
    void thread_tmp_64_fu_691_p4();
    void thread_tmp_fu_482_p3();
    void thread_trunc_ln274_fu_514_p1();
    void thread_zext_ln1117_fu_490_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
