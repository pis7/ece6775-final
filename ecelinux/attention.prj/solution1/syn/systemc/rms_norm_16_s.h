// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _rms_norm_16_s_HH_
#define _rms_norm_16_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "sqrt_fixed_42_26_s.h"
#include "dut_udiv_33s_29nsbkb.h"
#include "dut_mul_72s_40s_7cud.h"

namespace ap_rtl {

struct rms_norm_16_s : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > input_0_V_address0;
    sc_out< sc_logic > input_0_V_ce0;
    sc_in< sc_lv<40> > input_0_V_q0;
    sc_out< sc_lv<4> > input_0_V_address1;
    sc_out< sc_logic > input_0_V_ce1;
    sc_out< sc_logic > input_0_V_we1;
    sc_out< sc_lv<40> > input_0_V_d1;
    sc_out< sc_lv<4> > weight_V_address0;
    sc_out< sc_logic > weight_V_ce0;
    sc_in< sc_lv<40> > weight_V_q0;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_lv<33> > ap_var_for_const0;


    // Module declarations
    rms_norm_16_s(sc_module_name name);
    SC_HAS_PROCESS(rms_norm_16_s);

    ~rms_norm_16_s();

    sc_trace_file* mVcdFile;

    sqrt_fixed_42_26_s* grp_sqrt_fixed_42_26_s_fu_139;
    dut_udiv_33s_29nsbkb<1,37,33,29,33>* dut_udiv_33s_29nsbkb_U2;
    dut_mul_72s_40s_7cud<1,5,72,40,72>* dut_mul_72s_40s_7cud_U3;
    sc_signal< sc_lv<61> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<40> > p_Val2_s_reg_105;
    sc_signal< sc_lv<5> > i_0_reg_117;
    sc_signal< sc_lv<5> > i1_0_reg_128;
    sc_signal< sc_lv<40> > reg_144;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln88_reg_312;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter2;
    sc_signal< bool > ap_block_state63_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state64_pp1_stage0_iter1;
    sc_signal< bool > ap_block_state65_pp1_stage0_iter2;
    sc_signal< bool > ap_block_state66_pp1_stage0_iter3;
    sc_signal< bool > ap_block_state67_pp1_stage0_iter4;
    sc_signal< bool > ap_block_state68_pp1_stage0_iter5;
    sc_signal< bool > ap_block_state69_pp1_stage0_iter6;
    sc_signal< bool > ap_block_state70_pp1_stage0_iter7;
    sc_signal< bool > ap_block_state71_pp1_stage0_iter8;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln93_reg_356;
    sc_signal< sc_lv<1> > icmp_ln93_reg_356_pp1_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln88_fu_148_p2;
    sc_signal< sc_lv<1> > icmp_ln88_reg_312_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln88_reg_312_pp0_iter2_reg;
    sc_signal< sc_lv<5> > i_fu_154_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<56> > mul_ln1192_fu_169_p2;
    sc_signal< sc_lv<56> > mul_ln1192_reg_326;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<37> > select_ln1148_fu_246_p3;
    sc_signal< sc_lv<37> > select_ln1148_reg_336;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<29> > grp_sqrt_fixed_42_26_s_fu_139_ap_return;
    sc_signal< sc_lv<29> > agg_result_V_i_reg_341;
    sc_signal< sc_logic > ap_CS_fsm_state25;
    sc_signal< sc_logic > ap_CS_fsm_state26;
    sc_signal< sc_lv<72> > zext_ln1118_fu_263_p1;
    sc_signal< sc_lv<72> > zext_ln1118_reg_351;
    sc_signal< sc_logic > ap_CS_fsm_state62;
    sc_signal< sc_lv<1> > icmp_ln93_fu_267_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< sc_lv<1> > icmp_ln93_reg_356_pp1_iter2_reg;
    sc_signal< sc_lv<1> > icmp_ln93_reg_356_pp1_iter3_reg;
    sc_signal< sc_lv<1> > icmp_ln93_reg_356_pp1_iter4_reg;
    sc_signal< sc_lv<1> > icmp_ln93_reg_356_pp1_iter5_reg;
    sc_signal< sc_lv<1> > icmp_ln93_reg_356_pp1_iter6_reg;
    sc_signal< sc_lv<1> > icmp_ln93_reg_356_pp1_iter7_reg;
    sc_signal< sc_lv<5> > i_1_fu_273_p2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_lv<4> > input_0_V_addr_1_reg_370;
    sc_signal< sc_lv<4> > input_0_V_addr_1_reg_370_pp1_iter1_reg;
    sc_signal< sc_lv<4> > input_0_V_addr_1_reg_370_pp1_iter2_reg;
    sc_signal< sc_lv<4> > input_0_V_addr_1_reg_370_pp1_iter3_reg;
    sc_signal< sc_lv<4> > input_0_V_addr_1_reg_370_pp1_iter4_reg;
    sc_signal< sc_lv<4> > input_0_V_addr_1_reg_370_pp1_iter5_reg;
    sc_signal< sc_lv<4> > input_0_V_addr_1_reg_370_pp1_iter6_reg;
    sc_signal< sc_lv<4> > input_0_V_addr_1_reg_370_pp1_iter7_reg;
    sc_signal< sc_lv<40> > weight_V_load_reg_376;
    sc_signal< sc_lv<72> > mul_ln1118_fu_288_p2;
    sc_signal< sc_lv<72> > mul_ln1118_reg_381;
    sc_signal< sc_lv<40> > trunc_ln5_reg_391;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state63;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter7;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter8;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<64> > zext_ln89_fu_160_p1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > zext_ln94_fu_279_p1;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<40> > mul_ln1192_fu_169_p0;
    sc_signal< sc_lv<56> > sext_ln1118_1_fu_165_p1;
    sc_signal< sc_lv<40> > mul_ln1192_fu_169_p1;
    sc_signal< sc_lv<56> > lhs_V_fu_175_p3;
    sc_signal< sc_lv<56> > ret_V_fu_183_p2;
    sc_signal< sc_lv<40> > sub_ln1148_fu_206_p2;
    sc_signal< sc_lv<36> > tmp_53_fu_212_p4;
    sc_signal< sc_lv<37> > zext_ln1148_fu_222_p1;
    sc_signal< sc_lv<36> > tmp_54_fu_232_p4;
    sc_signal< sc_lv<1> > tmp_71_fu_198_p3;
    sc_signal< sc_lv<37> > sub_ln1148_1_fu_226_p2;
    sc_signal< sc_lv<37> > zext_ln1148_1_fu_242_p1;
    sc_signal< sc_lv<29> > grp_fu_257_p1;
    sc_signal< sc_lv<33> > grp_fu_257_p2;
    sc_signal< sc_lv<40> > mul_ln1118_fu_288_p0;
    sc_signal< sc_lv<33> > mul_ln1118_fu_288_p1;
    sc_signal< sc_lv<72> > grp_fu_297_p2;
    sc_signal< sc_logic > grp_fu_257_ap_start;
    sc_signal< sc_logic > grp_fu_257_ap_done;
    sc_signal< sc_logic > ap_CS_fsm_state72;
    sc_signal< sc_lv<61> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    sc_signal< sc_lv<33> > grp_fu_257_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<61> ap_ST_fsm_state1;
    static const sc_lv<61> ap_ST_fsm_pp0_stage0;
    static const sc_lv<61> ap_ST_fsm_state6;
    static const sc_lv<61> ap_ST_fsm_state7;
    static const sc_lv<61> ap_ST_fsm_state8;
    static const sc_lv<61> ap_ST_fsm_state9;
    static const sc_lv<61> ap_ST_fsm_state10;
    static const sc_lv<61> ap_ST_fsm_state11;
    static const sc_lv<61> ap_ST_fsm_state12;
    static const sc_lv<61> ap_ST_fsm_state13;
    static const sc_lv<61> ap_ST_fsm_state14;
    static const sc_lv<61> ap_ST_fsm_state15;
    static const sc_lv<61> ap_ST_fsm_state16;
    static const sc_lv<61> ap_ST_fsm_state17;
    static const sc_lv<61> ap_ST_fsm_state18;
    static const sc_lv<61> ap_ST_fsm_state19;
    static const sc_lv<61> ap_ST_fsm_state20;
    static const sc_lv<61> ap_ST_fsm_state21;
    static const sc_lv<61> ap_ST_fsm_state22;
    static const sc_lv<61> ap_ST_fsm_state23;
    static const sc_lv<61> ap_ST_fsm_state24;
    static const sc_lv<61> ap_ST_fsm_state25;
    static const sc_lv<61> ap_ST_fsm_state26;
    static const sc_lv<61> ap_ST_fsm_state27;
    static const sc_lv<61> ap_ST_fsm_state28;
    static const sc_lv<61> ap_ST_fsm_state29;
    static const sc_lv<61> ap_ST_fsm_state30;
    static const sc_lv<61> ap_ST_fsm_state31;
    static const sc_lv<61> ap_ST_fsm_state32;
    static const sc_lv<61> ap_ST_fsm_state33;
    static const sc_lv<61> ap_ST_fsm_state34;
    static const sc_lv<61> ap_ST_fsm_state35;
    static const sc_lv<61> ap_ST_fsm_state36;
    static const sc_lv<61> ap_ST_fsm_state37;
    static const sc_lv<61> ap_ST_fsm_state38;
    static const sc_lv<61> ap_ST_fsm_state39;
    static const sc_lv<61> ap_ST_fsm_state40;
    static const sc_lv<61> ap_ST_fsm_state41;
    static const sc_lv<61> ap_ST_fsm_state42;
    static const sc_lv<61> ap_ST_fsm_state43;
    static const sc_lv<61> ap_ST_fsm_state44;
    static const sc_lv<61> ap_ST_fsm_state45;
    static const sc_lv<61> ap_ST_fsm_state46;
    static const sc_lv<61> ap_ST_fsm_state47;
    static const sc_lv<61> ap_ST_fsm_state48;
    static const sc_lv<61> ap_ST_fsm_state49;
    static const sc_lv<61> ap_ST_fsm_state50;
    static const sc_lv<61> ap_ST_fsm_state51;
    static const sc_lv<61> ap_ST_fsm_state52;
    static const sc_lv<61> ap_ST_fsm_state53;
    static const sc_lv<61> ap_ST_fsm_state54;
    static const sc_lv<61> ap_ST_fsm_state55;
    static const sc_lv<61> ap_ST_fsm_state56;
    static const sc_lv<61> ap_ST_fsm_state57;
    static const sc_lv<61> ap_ST_fsm_state58;
    static const sc_lv<61> ap_ST_fsm_state59;
    static const sc_lv<61> ap_ST_fsm_state60;
    static const sc_lv<61> ap_ST_fsm_state61;
    static const sc_lv<61> ap_ST_fsm_state62;
    static const sc_lv<61> ap_ST_fsm_pp1_stage0;
    static const sc_lv<61> ap_ST_fsm_state72;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_3A;
    static const sc_lv<32> ap_const_lv32_3B;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<40> ap_const_lv40_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_37;
    static const sc_lv<32> ap_const_lv32_27;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<37> ap_const_lv37_0;
    static const sc_lv<33> ap_const_lv33_100000000;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_47;
    static const sc_lv<32> ap_const_lv32_3C;
    // Thread declarations
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state25();
    void thread_ap_CS_fsm_state26();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state62();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state72();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state63_pp1_stage0_iter0();
    void thread_ap_block_state64_pp1_stage0_iter1();
    void thread_ap_block_state65_pp1_stage0_iter2();
    void thread_ap_block_state66_pp1_stage0_iter3();
    void thread_ap_block_state67_pp1_stage0_iter4();
    void thread_ap_block_state68_pp1_stage0_iter5();
    void thread_ap_block_state69_pp1_stage0_iter6();
    void thread_ap_block_state70_pp1_stage0_iter7();
    void thread_ap_block_state71_pp1_stage0_iter8();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_condition_pp1_exit_iter0_state63();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_ready();
    void thread_grp_fu_257_ap_start();
    void thread_grp_fu_257_p1();
    void thread_grp_fu_257_p10();
    void thread_i_1_fu_273_p2();
    void thread_i_fu_154_p2();
    void thread_icmp_ln88_fu_148_p2();
    void thread_icmp_ln93_fu_267_p2();
    void thread_input_0_V_address0();
    void thread_input_0_V_address1();
    void thread_input_0_V_ce0();
    void thread_input_0_V_ce1();
    void thread_input_0_V_d1();
    void thread_input_0_V_we1();
    void thread_lhs_V_fu_175_p3();
    void thread_mul_ln1118_fu_288_p0();
    void thread_mul_ln1118_fu_288_p1();
    void thread_mul_ln1118_fu_288_p2();
    void thread_mul_ln1192_fu_169_p0();
    void thread_mul_ln1192_fu_169_p1();
    void thread_mul_ln1192_fu_169_p2();
    void thread_ret_V_fu_183_p2();
    void thread_select_ln1148_fu_246_p3();
    void thread_sext_ln1118_1_fu_165_p1();
    void thread_sub_ln1148_1_fu_226_p2();
    void thread_sub_ln1148_fu_206_p2();
    void thread_tmp_53_fu_212_p4();
    void thread_tmp_54_fu_232_p4();
    void thread_tmp_71_fu_198_p3();
    void thread_weight_V_address0();
    void thread_weight_V_ce0();
    void thread_zext_ln1118_fu_263_p1();
    void thread_zext_ln1148_1_fu_242_p1();
    void thread_zext_ln1148_fu_222_p1();
    void thread_zext_ln89_fu_160_p1();
    void thread_zext_ln94_fu_279_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
