// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "reshape_2D_to_3D.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic reshape_2D_to_3D::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic reshape_2D_to_3D::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> reshape_2D_to_3D::ap_ST_fsm_state1 = "1";
const sc_lv<3> reshape_2D_to_3D::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> reshape_2D_to_3D::ap_ST_fsm_state4 = "100";
const bool reshape_2D_to_3D::ap_const_boolean_1 = true;
const sc_lv<32> reshape_2D_to_3D::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> reshape_2D_to_3D::ap_const_lv32_1 = "1";
const bool reshape_2D_to_3D::ap_const_boolean_0 = false;
const sc_lv<1> reshape_2D_to_3D::ap_const_lv1_0 = "0";
const sc_lv<1> reshape_2D_to_3D::ap_const_lv1_1 = "1";
const sc_lv<5> reshape_2D_to_3D::ap_const_lv5_0 = "00000";
const sc_lv<3> reshape_2D_to_3D::ap_const_lv3_0 = "000";
const sc_lv<2> reshape_2D_to_3D::ap_const_lv2_3 = "11";
const sc_lv<32> reshape_2D_to_3D::ap_const_lv32_2 = "10";
const sc_lv<2> reshape_2D_to_3D::ap_const_lv2_2 = "10";
const sc_lv<2> reshape_2D_to_3D::ap_const_lv2_0 = "00";
const sc_lv<2> reshape_2D_to_3D::ap_const_lv2_1 = "1";
const sc_lv<5> reshape_2D_to_3D::ap_const_lv5_10 = "10000";
const sc_lv<5> reshape_2D_to_3D::ap_const_lv5_1 = "1";
const sc_lv<3> reshape_2D_to_3D::ap_const_lv3_1 = "1";
const sc_lv<3> reshape_2D_to_3D::ap_const_lv3_4 = "100";

reshape_2D_to_3D::reshape_2D_to_3D(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln178_1_fu_168_p2);
    sensitive << ( indvar_flatten_reg_129 );

    SC_METHOD(thread_add_ln178_fu_174_p2);
    sensitive << ( ap_phi_mux_i_0_0_phi_fu_144_p4 );

    SC_METHOD(thread_add_ln179_fu_233_p2);
    sensitive << ( select_ln178_fu_186_p3 );

    SC_METHOD(thread_add_ln180_fu_218_p2);
    sensitive << ( zext_ln179_fu_214_p1 );
    sensitive << ( shl_ln180_mid2_fu_206_p3 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln178_fu_162_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_i_0_0_phi_fu_144_p4);
    sensitive << ( i_0_0_reg_140 );
    sensitive << ( icmp_ln178_reg_559 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( select_ln178_1_reg_568 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( output_V_1_fu_60 );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( output_V16_1_fu_72 );

    SC_METHOD(thread_ap_return_10);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( output_V210_1_fu_80 );

    SC_METHOD(thread_ap_return_11);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( output_V211_1_fu_76 );

    SC_METHOD(thread_ap_return_12);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( output_V31247_1_fu_68 );

    SC_METHOD(thread_ap_return_13);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( output_V313_1_fu_64 );

    SC_METHOD(thread_ap_return_14);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( output_V314_1_fu_56 );

    SC_METHOD(thread_ap_return_15);
    sensitive << ( output_V315_1_fu_52 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_return_2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( output_V2_1_fu_84 );

    SC_METHOD(thread_ap_return_3);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( output_V3_1_fu_96 );

    SC_METHOD(thread_ap_return_4);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( output_V14_1_fu_108 );

    SC_METHOD(thread_ap_return_5);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( output_V1520_1_fu_112 );

    SC_METHOD(thread_ap_return_6);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( output_V1625_1_fu_104 );

    SC_METHOD(thread_ap_return_7);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( output_V17_1_fu_100 );

    SC_METHOD(thread_ap_return_8);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( output_V28_1_fu_92 );

    SC_METHOD(thread_ap_return_9);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( output_V2936_1_fu_88 );

    SC_METHOD(thread_icmp_ln178_fu_162_p2);
    sensitive << ( indvar_flatten_reg_129 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln179_fu_180_p2);
    sensitive << ( k_0_0_reg_151 );
    sensitive << ( icmp_ln178_fu_162_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_input_0_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln180_fu_224_p1 );

    SC_METHOD(thread_input_0_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_select_ln178_1_fu_194_p3);
    sensitive << ( ap_phi_mux_i_0_0_phi_fu_144_p4 );
    sensitive << ( icmp_ln179_fu_180_p2 );
    sensitive << ( add_ln178_fu_174_p2 );

    SC_METHOD(thread_select_ln178_fu_186_p3);
    sensitive << ( k_0_0_reg_151 );
    sensitive << ( icmp_ln179_fu_180_p2 );

    SC_METHOD(thread_shl_ln180_mid2_fu_206_p3);
    sensitive << ( trunc_ln178_fu_202_p1 );

    SC_METHOD(thread_trunc_ln178_fu_202_p1);
    sensitive << ( select_ln178_1_fu_194_p3 );

    SC_METHOD(thread_trunc_ln203_fu_229_p1);
    sensitive << ( select_ln178_fu_186_p3 );

    SC_METHOD(thread_zext_ln179_fu_214_p1);
    sensitive << ( select_ln178_fu_186_p3 );

    SC_METHOD(thread_zext_ln180_fu_224_p1);
    sensitive << ( add_ln180_fu_218_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln178_fu_162_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "reshape_2D_to_3D_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_0_V_address0, "(port)input_0_V_address0");
    sc_trace(mVcdFile, input_0_V_ce0, "(port)input_0_V_ce0");
    sc_trace(mVcdFile, input_0_V_q0, "(port)input_0_V_q0");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
    sc_trace(mVcdFile, ap_return_2, "(port)ap_return_2");
    sc_trace(mVcdFile, ap_return_3, "(port)ap_return_3");
    sc_trace(mVcdFile, ap_return_4, "(port)ap_return_4");
    sc_trace(mVcdFile, ap_return_5, "(port)ap_return_5");
    sc_trace(mVcdFile, ap_return_6, "(port)ap_return_6");
    sc_trace(mVcdFile, ap_return_7, "(port)ap_return_7");
    sc_trace(mVcdFile, ap_return_8, "(port)ap_return_8");
    sc_trace(mVcdFile, ap_return_9, "(port)ap_return_9");
    sc_trace(mVcdFile, ap_return_10, "(port)ap_return_10");
    sc_trace(mVcdFile, ap_return_11, "(port)ap_return_11");
    sc_trace(mVcdFile, ap_return_12, "(port)ap_return_12");
    sc_trace(mVcdFile, ap_return_13, "(port)ap_return_13");
    sc_trace(mVcdFile, ap_return_14, "(port)ap_return_14");
    sc_trace(mVcdFile, ap_return_15, "(port)ap_return_15");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten_reg_129, "indvar_flatten_reg_129");
    sc_trace(mVcdFile, i_0_0_reg_140, "i_0_0_reg_140");
    sc_trace(mVcdFile, k_0_0_reg_151, "k_0_0_reg_151");
    sc_trace(mVcdFile, icmp_ln178_fu_162_p2, "icmp_ln178_fu_162_p2");
    sc_trace(mVcdFile, icmp_ln178_reg_559, "icmp_ln178_reg_559");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, add_ln178_1_fu_168_p2, "add_ln178_1_fu_168_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, select_ln178_1_fu_194_p3, "select_ln178_1_fu_194_p3");
    sc_trace(mVcdFile, select_ln178_1_reg_568, "select_ln178_1_reg_568");
    sc_trace(mVcdFile, trunc_ln178_fu_202_p1, "trunc_ln178_fu_202_p1");
    sc_trace(mVcdFile, trunc_ln178_reg_573, "trunc_ln178_reg_573");
    sc_trace(mVcdFile, trunc_ln203_fu_229_p1, "trunc_ln203_fu_229_p1");
    sc_trace(mVcdFile, trunc_ln203_reg_582, "trunc_ln203_reg_582");
    sc_trace(mVcdFile, add_ln179_fu_233_p2, "add_ln179_fu_233_p2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_phi_mux_i_0_0_phi_fu_144_p4, "ap_phi_mux_i_0_0_phi_fu_144_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, zext_ln180_fu_224_p1, "zext_ln180_fu_224_p1");
    sc_trace(mVcdFile, output_V315_1_fu_52, "output_V315_1_fu_52");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, output_V314_1_fu_56, "output_V314_1_fu_56");
    sc_trace(mVcdFile, output_V_1_fu_60, "output_V_1_fu_60");
    sc_trace(mVcdFile, output_V313_1_fu_64, "output_V313_1_fu_64");
    sc_trace(mVcdFile, output_V31247_1_fu_68, "output_V31247_1_fu_68");
    sc_trace(mVcdFile, output_V16_1_fu_72, "output_V16_1_fu_72");
    sc_trace(mVcdFile, output_V211_1_fu_76, "output_V211_1_fu_76");
    sc_trace(mVcdFile, output_V210_1_fu_80, "output_V210_1_fu_80");
    sc_trace(mVcdFile, output_V2_1_fu_84, "output_V2_1_fu_84");
    sc_trace(mVcdFile, output_V2936_1_fu_88, "output_V2936_1_fu_88");
    sc_trace(mVcdFile, output_V28_1_fu_92, "output_V28_1_fu_92");
    sc_trace(mVcdFile, output_V3_1_fu_96, "output_V3_1_fu_96");
    sc_trace(mVcdFile, output_V17_1_fu_100, "output_V17_1_fu_100");
    sc_trace(mVcdFile, output_V1625_1_fu_104, "output_V1625_1_fu_104");
    sc_trace(mVcdFile, output_V14_1_fu_108, "output_V14_1_fu_108");
    sc_trace(mVcdFile, output_V1520_1_fu_112, "output_V1520_1_fu_112");
    sc_trace(mVcdFile, icmp_ln179_fu_180_p2, "icmp_ln179_fu_180_p2");
    sc_trace(mVcdFile, add_ln178_fu_174_p2, "add_ln178_fu_174_p2");
    sc_trace(mVcdFile, select_ln178_fu_186_p3, "select_ln178_fu_186_p3");
    sc_trace(mVcdFile, zext_ln179_fu_214_p1, "zext_ln179_fu_214_p1");
    sc_trace(mVcdFile, shl_ln180_mid2_fu_206_p3, "shl_ln180_mid2_fu_206_p3");
    sc_trace(mVcdFile, add_ln180_fu_218_p2, "add_ln180_fu_218_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

reshape_2D_to_3D::~reshape_2D_to_3D() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void reshape_2D_to_3D::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln178_reg_559.read(), ap_const_lv1_0))) {
        i_0_0_reg_140 = select_ln178_1_reg_568.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_0_reg_140 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln178_fu_162_p2.read(), ap_const_lv1_0))) {
        indvar_flatten_reg_129 = add_ln178_1_fu_168_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_129 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln178_fu_162_p2.read(), ap_const_lv1_0))) {
        k_0_0_reg_151 = add_ln179_fu_233_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        k_0_0_reg_151 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln178_reg_559 = icmp_ln178_fu_162_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,2,2>(trunc_ln178_reg_573.read(), ap_const_lv2_0) && esl_seteq<1,2,2>(trunc_ln203_reg_582.read(), ap_const_lv2_1))) {
        output_V14_1_fu_108 = input_0_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,2,2>(trunc_ln178_reg_573.read(), ap_const_lv2_1) && esl_seteq<1,2,2>(trunc_ln203_reg_582.read(), ap_const_lv2_1))) {
        output_V1520_1_fu_112 = input_0_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,2,2>(trunc_ln178_reg_573.read(), ap_const_lv2_2) && esl_seteq<1,2,2>(trunc_ln203_reg_582.read(), ap_const_lv2_1))) {
        output_V1625_1_fu_104 = input_0_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,2,2>(trunc_ln203_reg_582.read(), ap_const_lv2_0) && esl_seteq<1,2,2>(trunc_ln178_reg_573.read(), ap_const_lv2_1))) {
        output_V16_1_fu_72 = input_0_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,2,2>(trunc_ln178_reg_573.read(), ap_const_lv2_3) && esl_seteq<1,2,2>(trunc_ln203_reg_582.read(), ap_const_lv2_1))) {
        output_V17_1_fu_100 = input_0_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,2,2>(trunc_ln178_reg_573.read(), ap_const_lv2_2) && esl_seteq<1,2,2>(trunc_ln203_reg_582.read(), ap_const_lv2_2))) {
        output_V210_1_fu_80 = input_0_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,2,2>(trunc_ln178_reg_573.read(), ap_const_lv2_3) && esl_seteq<1,2,2>(trunc_ln203_reg_582.read(), ap_const_lv2_2))) {
        output_V211_1_fu_76 = input_0_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,2,2>(trunc_ln178_reg_573.read(), ap_const_lv2_0) && esl_seteq<1,2,2>(trunc_ln203_reg_582.read(), ap_const_lv2_2))) {
        output_V28_1_fu_92 = input_0_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,2,2>(trunc_ln178_reg_573.read(), ap_const_lv2_1) && esl_seteq<1,2,2>(trunc_ln203_reg_582.read(), ap_const_lv2_2))) {
        output_V2936_1_fu_88 = input_0_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,2,2>(trunc_ln178_reg_573.read(), ap_const_lv2_2) && esl_seteq<1,2,2>(trunc_ln203_reg_582.read(), ap_const_lv2_0))) {
        output_V2_1_fu_84 = input_0_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,2,2>(trunc_ln203_reg_582.read(), ap_const_lv2_3) && esl_seteq<1,2,2>(trunc_ln178_reg_573.read(), ap_const_lv2_0))) {
        output_V31247_1_fu_68 = input_0_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,2,2>(trunc_ln203_reg_582.read(), ap_const_lv2_3) && esl_seteq<1,2,2>(trunc_ln178_reg_573.read(), ap_const_lv2_1))) {
        output_V313_1_fu_64 = input_0_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,2,2>(trunc_ln203_reg_582.read(), ap_const_lv2_3) && esl_seteq<1,2,2>(trunc_ln178_reg_573.read(), ap_const_lv2_2))) {
        output_V314_1_fu_56 = input_0_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,2,2>(trunc_ln203_reg_582.read(), ap_const_lv2_3) && esl_seteq<1,2,2>(trunc_ln178_reg_573.read(), ap_const_lv2_3))) {
        output_V315_1_fu_52 = input_0_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,2,2>(trunc_ln178_reg_573.read(), ap_const_lv2_3) && esl_seteq<1,2,2>(trunc_ln203_reg_582.read(), ap_const_lv2_0))) {
        output_V3_1_fu_96 = input_0_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,2,2>(trunc_ln203_reg_582.read(), ap_const_lv2_0) && esl_seteq<1,2,2>(trunc_ln178_reg_573.read(), ap_const_lv2_0))) {
        output_V_1_fu_60 = input_0_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln178_fu_162_p2.read(), ap_const_lv1_0))) {
        select_ln178_1_reg_568 = select_ln178_1_fu_194_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln178_fu_162_p2.read(), ap_const_lv1_0))) {
        trunc_ln178_reg_573 = trunc_ln178_fu_202_p1.read();
        trunc_ln203_reg_582 = trunc_ln203_fu_229_p1.read();
    }
}

void reshape_2D_to_3D::thread_add_ln178_1_fu_168_p2() {
    add_ln178_1_fu_168_p2 = (!indvar_flatten_reg_129.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(indvar_flatten_reg_129.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void reshape_2D_to_3D::thread_add_ln178_fu_174_p2() {
    add_ln178_fu_174_p2 = (!ap_const_lv3_1.is_01() || !ap_phi_mux_i_0_0_phi_fu_144_p4.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_1) + sc_biguint<3>(ap_phi_mux_i_0_0_phi_fu_144_p4.read()));
}

void reshape_2D_to_3D::thread_add_ln179_fu_233_p2() {
    add_ln179_fu_233_p2 = (!select_ln178_fu_186_p3.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(select_ln178_fu_186_p3.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void reshape_2D_to_3D::thread_add_ln180_fu_218_p2() {
    add_ln180_fu_218_p2 = (!zext_ln179_fu_214_p1.read().is_01() || !shl_ln180_mid2_fu_206_p3.read().is_01())? sc_lv<4>(): (sc_biguint<4>(zext_ln179_fu_214_p1.read()) + sc_biguint<4>(shl_ln180_mid2_fu_206_p3.read()));
}

void reshape_2D_to_3D::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void reshape_2D_to_3D::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void reshape_2D_to_3D::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[2];
}

void reshape_2D_to_3D::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void reshape_2D_to_3D::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void reshape_2D_to_3D::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void reshape_2D_to_3D::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void reshape_2D_to_3D::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void reshape_2D_to_3D::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln178_fu_162_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void reshape_2D_to_3D::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void reshape_2D_to_3D::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void reshape_2D_to_3D::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void reshape_2D_to_3D::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void reshape_2D_to_3D::thread_ap_phi_mux_i_0_0_phi_fu_144_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln178_reg_559.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_0_0_phi_fu_144_p4 = select_ln178_1_reg_568.read();
    } else {
        ap_phi_mux_i_0_0_phi_fu_144_p4 = i_0_0_reg_140.read();
    }
}

void reshape_2D_to_3D::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void reshape_2D_to_3D::thread_ap_return_0() {
    ap_return_0 = output_V_1_fu_60.read();
}

void reshape_2D_to_3D::thread_ap_return_1() {
    ap_return_1 = output_V16_1_fu_72.read();
}

void reshape_2D_to_3D::thread_ap_return_10() {
    ap_return_10 = output_V210_1_fu_80.read();
}

void reshape_2D_to_3D::thread_ap_return_11() {
    ap_return_11 = output_V211_1_fu_76.read();
}

void reshape_2D_to_3D::thread_ap_return_12() {
    ap_return_12 = output_V31247_1_fu_68.read();
}

void reshape_2D_to_3D::thread_ap_return_13() {
    ap_return_13 = output_V313_1_fu_64.read();
}

void reshape_2D_to_3D::thread_ap_return_14() {
    ap_return_14 = output_V314_1_fu_56.read();
}

void reshape_2D_to_3D::thread_ap_return_15() {
    ap_return_15 = output_V315_1_fu_52.read();
}

void reshape_2D_to_3D::thread_ap_return_2() {
    ap_return_2 = output_V2_1_fu_84.read();
}

void reshape_2D_to_3D::thread_ap_return_3() {
    ap_return_3 = output_V3_1_fu_96.read();
}

void reshape_2D_to_3D::thread_ap_return_4() {
    ap_return_4 = output_V14_1_fu_108.read();
}

void reshape_2D_to_3D::thread_ap_return_5() {
    ap_return_5 = output_V1520_1_fu_112.read();
}

void reshape_2D_to_3D::thread_ap_return_6() {
    ap_return_6 = output_V1625_1_fu_104.read();
}

void reshape_2D_to_3D::thread_ap_return_7() {
    ap_return_7 = output_V17_1_fu_100.read();
}

void reshape_2D_to_3D::thread_ap_return_8() {
    ap_return_8 = output_V28_1_fu_92.read();
}

void reshape_2D_to_3D::thread_ap_return_9() {
    ap_return_9 = output_V2936_1_fu_88.read();
}

void reshape_2D_to_3D::thread_icmp_ln178_fu_162_p2() {
    icmp_ln178_fu_162_p2 = (!indvar_flatten_reg_129.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_129.read() == ap_const_lv5_10);
}

void reshape_2D_to_3D::thread_icmp_ln179_fu_180_p2() {
    icmp_ln179_fu_180_p2 = (!k_0_0_reg_151.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(k_0_0_reg_151.read() == ap_const_lv3_4);
}

void reshape_2D_to_3D::thread_input_0_V_address0() {
    input_0_V_address0 =  (sc_lv<4>) (zext_ln180_fu_224_p1.read());
}

void reshape_2D_to_3D::thread_input_0_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        input_0_V_ce0 = ap_const_logic_1;
    } else {
        input_0_V_ce0 = ap_const_logic_0;
    }
}

void reshape_2D_to_3D::thread_select_ln178_1_fu_194_p3() {
    select_ln178_1_fu_194_p3 = (!icmp_ln179_fu_180_p2.read()[0].is_01())? sc_lv<3>(): ((icmp_ln179_fu_180_p2.read()[0].to_bool())? add_ln178_fu_174_p2.read(): ap_phi_mux_i_0_0_phi_fu_144_p4.read());
}

void reshape_2D_to_3D::thread_select_ln178_fu_186_p3() {
    select_ln178_fu_186_p3 = (!icmp_ln179_fu_180_p2.read()[0].is_01())? sc_lv<3>(): ((icmp_ln179_fu_180_p2.read()[0].to_bool())? ap_const_lv3_0: k_0_0_reg_151.read());
}

void reshape_2D_to_3D::thread_shl_ln180_mid2_fu_206_p3() {
    shl_ln180_mid2_fu_206_p3 = esl_concat<2,2>(trunc_ln178_fu_202_p1.read(), ap_const_lv2_0);
}

void reshape_2D_to_3D::thread_trunc_ln178_fu_202_p1() {
    trunc_ln178_fu_202_p1 = select_ln178_1_fu_194_p3.read().range(2-1, 0);
}

void reshape_2D_to_3D::thread_trunc_ln203_fu_229_p1() {
    trunc_ln203_fu_229_p1 = select_ln178_fu_186_p3.read().range(2-1, 0);
}

void reshape_2D_to_3D::thread_zext_ln179_fu_214_p1() {
    zext_ln179_fu_214_p1 = esl_zext<4,3>(select_ln178_fu_186_p3.read());
}

void reshape_2D_to_3D::thread_zext_ln180_fu_224_p1() {
    zext_ln180_fu_224_p1 = esl_zext<64,4>(add_ln180_fu_218_p2.read());
}

void reshape_2D_to_3D::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln178_fu_162_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln178_fu_162_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

