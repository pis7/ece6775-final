// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "transpose_last_two_d.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic transpose_last_two_d::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic transpose_last_two_d::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> transpose_last_two_d::ap_ST_fsm_state1 = "1";
const sc_lv<4> transpose_last_two_d::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<4> transpose_last_two_d::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<4> transpose_last_two_d::ap_ST_fsm_state5 = "1000";
const bool transpose_last_two_d::ap_const_boolean_1 = true;
const sc_lv<32> transpose_last_two_d::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> transpose_last_two_d::ap_const_lv32_1 = "1";
const bool transpose_last_two_d::ap_const_boolean_0 = false;
const sc_lv<1> transpose_last_two_d::ap_const_lv1_0 = "0";
const sc_lv<32> transpose_last_two_d::ap_const_lv32_2 = "10";
const sc_lv<1> transpose_last_two_d::ap_const_lv1_1 = "1";
const sc_lv<4> transpose_last_two_d::ap_const_lv4_0 = "0000";
const sc_lv<3> transpose_last_two_d::ap_const_lv3_0 = "000";
const sc_lv<2> transpose_last_two_d::ap_const_lv2_0 = "00";
const sc_lv<2> transpose_last_two_d::ap_const_lv2_1 = "1";
const sc_lv<4> transpose_last_two_d::ap_const_lv4_C = "1100";
const sc_lv<4> transpose_last_two_d::ap_const_lv4_1 = "1";
const sc_lv<3> transpose_last_two_d::ap_const_lv3_1 = "1";
const sc_lv<2> transpose_last_two_d::ap_const_lv2_3 = "11";
const sc_lv<5> transpose_last_two_d::ap_const_lv5_1 = "1";
const sc_lv<59> transpose_last_two_d::ap_const_lv59_0 = "00000000000000000000000000000000000000000000000000000000000";
const sc_lv<5> transpose_last_two_d::ap_const_lv5_2 = "10";
const sc_lv<5> transpose_last_two_d::ap_const_lv5_3 = "11";
const sc_lv<32> transpose_last_two_d::ap_const_lv32_3 = "11";

transpose_last_two_d::transpose_last_two_d(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln203_fu_344_p2);
    sensitive << ( zext_ln203_2_fu_340_p1 );
    sensitive << ( sub_ln203_fu_334_p2 );

    SC_METHOD(thread_add_ln246_fu_288_p2);
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_253_p4 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln246_fu_282_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_i_0_phi_fu_264_p4);
    sensitive << ( i_0_reg_260 );
    sensitive << ( icmp_ln246_reg_417 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( select_ln249_1_reg_431 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_indvar_flatten_phi_fu_253_p4);
    sensitive << ( indvar_flatten_reg_249 );
    sensitive << ( icmp_ln246_reg_417 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( add_ln246_reg_421 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_j_0_phi_fu_275_p4);
    sensitive << ( j_0_reg_271 );
    sensitive << ( icmp_ln246_reg_417 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( j_reg_478 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_i_fu_294_p2);
    sensitive << ( ap_phi_mux_i_0_phi_fu_264_p4 );

    SC_METHOD(thread_icmp_ln246_fu_282_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_253_p4 );

    SC_METHOD(thread_icmp_ln247_fu_300_p2);
    sensitive << ( icmp_ln246_fu_282_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_j_0_phi_fu_275_p4 );

    SC_METHOD(thread_input_0_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( sext_ln203_fu_350_p1 );

    SC_METHOD(thread_input_0_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_input_1_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( sext_ln203_fu_350_p1 );

    SC_METHOD(thread_input_1_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_input_2_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( sext_ln203_fu_350_p1 );

    SC_METHOD(thread_input_2_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_input_3_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( sext_ln203_fu_350_p1 );

    SC_METHOD(thread_input_3_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_j_fu_380_p2);
    sensitive << ( select_ln249_reg_426 );

    SC_METHOD(thread_or_ln203_1_fu_385_p2);
    sensitive << ( tmp_reg_436 );

    SC_METHOD(thread_or_ln203_2_fu_401_p2);
    sensitive << ( tmp_reg_436 );

    SC_METHOD(thread_or_ln203_fu_364_p2);
    sensitive << ( tmp_reg_436 );

    SC_METHOD(thread_output_0_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln203_fu_358_p1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_4_fu_390_p3 );

    SC_METHOD(thread_output_0_V_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_3_fu_369_p3 );
    sensitive << ( tmp_5_fu_406_p3 );

    SC_METHOD(thread_output_0_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_output_0_V_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_output_0_V_d0);
    sensitive << ( input_0_V_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( input_2_V_load_reg_464 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_output_0_V_d1);
    sensitive << ( input_1_V_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( input_3_V_load_reg_471 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_output_0_V_we0);
    sensitive << ( icmp_ln246_reg_417 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( select_ln249_reg_426 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_output_0_V_we1);
    sensitive << ( icmp_ln246_reg_417 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( select_ln249_reg_426 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_output_1_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln203_fu_358_p1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_4_fu_390_p3 );

    SC_METHOD(thread_output_1_V_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_3_fu_369_p3 );
    sensitive << ( tmp_5_fu_406_p3 );

    SC_METHOD(thread_output_1_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_output_1_V_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_output_1_V_d0);
    sensitive << ( input_0_V_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( input_2_V_load_reg_464 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_output_1_V_d1);
    sensitive << ( input_1_V_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( input_3_V_load_reg_471 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_output_1_V_we0);
    sensitive << ( icmp_ln246_reg_417 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( select_ln249_reg_426 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_output_1_V_we1);
    sensitive << ( icmp_ln246_reg_417 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( select_ln249_reg_426 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_output_2_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln203_fu_358_p1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_4_fu_390_p3 );

    SC_METHOD(thread_output_2_V_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_3_fu_369_p3 );
    sensitive << ( tmp_5_fu_406_p3 );

    SC_METHOD(thread_output_2_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_output_2_V_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_output_2_V_d0);
    sensitive << ( input_0_V_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( input_2_V_load_reg_464 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_output_2_V_d1);
    sensitive << ( input_1_V_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( input_3_V_load_reg_471 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_output_2_V_we0);
    sensitive << ( icmp_ln246_reg_417 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( select_ln249_reg_426 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_output_2_V_we1);
    sensitive << ( icmp_ln246_reg_417 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( select_ln249_reg_426 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_select_ln249_1_fu_314_p3);
    sensitive << ( ap_phi_mux_i_0_phi_fu_264_p4 );
    sensitive << ( icmp_ln247_fu_300_p2 );
    sensitive << ( i_fu_294_p2 );

    SC_METHOD(thread_select_ln249_fu_306_p3);
    sensitive << ( ap_phi_mux_j_0_phi_fu_275_p4 );
    sensitive << ( icmp_ln247_fu_300_p2 );

    SC_METHOD(thread_sext_ln203_fu_350_p1);
    sensitive << ( add_ln203_fu_344_p2 );

    SC_METHOD(thread_sub_ln203_fu_334_p2);
    sensitive << ( tmp_fu_326_p3 );
    sensitive << ( zext_ln203_1_fu_322_p1 );

    SC_METHOD(thread_tmp_3_fu_369_p3);
    sensitive << ( or_ln203_fu_364_p2 );

    SC_METHOD(thread_tmp_4_fu_390_p3);
    sensitive << ( or_ln203_1_fu_385_p2 );

    SC_METHOD(thread_tmp_5_fu_406_p3);
    sensitive << ( or_ln203_2_fu_401_p2 );

    SC_METHOD(thread_tmp_fu_326_p3);
    sensitive << ( select_ln249_1_fu_314_p3 );

    SC_METHOD(thread_zext_ln203_1_fu_322_p1);
    sensitive << ( select_ln249_1_fu_314_p3 );

    SC_METHOD(thread_zext_ln203_2_fu_340_p1);
    sensitive << ( select_ln249_fu_306_p3 );

    SC_METHOD(thread_zext_ln203_fu_358_p1);
    sensitive << ( tmp_reg_436 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln246_fu_282_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );

    ap_CS_fsm = "0001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "transpose_last_two_d_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_0_V_address0, "(port)input_0_V_address0");
    sc_trace(mVcdFile, input_0_V_ce0, "(port)input_0_V_ce0");
    sc_trace(mVcdFile, input_0_V_q0, "(port)input_0_V_q0");
    sc_trace(mVcdFile, input_1_V_address0, "(port)input_1_V_address0");
    sc_trace(mVcdFile, input_1_V_ce0, "(port)input_1_V_ce0");
    sc_trace(mVcdFile, input_1_V_q0, "(port)input_1_V_q0");
    sc_trace(mVcdFile, input_2_V_address0, "(port)input_2_V_address0");
    sc_trace(mVcdFile, input_2_V_ce0, "(port)input_2_V_ce0");
    sc_trace(mVcdFile, input_2_V_q0, "(port)input_2_V_q0");
    sc_trace(mVcdFile, input_3_V_address0, "(port)input_3_V_address0");
    sc_trace(mVcdFile, input_3_V_ce0, "(port)input_3_V_ce0");
    sc_trace(mVcdFile, input_3_V_q0, "(port)input_3_V_q0");
    sc_trace(mVcdFile, output_0_V_address0, "(port)output_0_V_address0");
    sc_trace(mVcdFile, output_0_V_ce0, "(port)output_0_V_ce0");
    sc_trace(mVcdFile, output_0_V_we0, "(port)output_0_V_we0");
    sc_trace(mVcdFile, output_0_V_d0, "(port)output_0_V_d0");
    sc_trace(mVcdFile, output_0_V_address1, "(port)output_0_V_address1");
    sc_trace(mVcdFile, output_0_V_ce1, "(port)output_0_V_ce1");
    sc_trace(mVcdFile, output_0_V_we1, "(port)output_0_V_we1");
    sc_trace(mVcdFile, output_0_V_d1, "(port)output_0_V_d1");
    sc_trace(mVcdFile, output_1_V_address0, "(port)output_1_V_address0");
    sc_trace(mVcdFile, output_1_V_ce0, "(port)output_1_V_ce0");
    sc_trace(mVcdFile, output_1_V_we0, "(port)output_1_V_we0");
    sc_trace(mVcdFile, output_1_V_d0, "(port)output_1_V_d0");
    sc_trace(mVcdFile, output_1_V_address1, "(port)output_1_V_address1");
    sc_trace(mVcdFile, output_1_V_ce1, "(port)output_1_V_ce1");
    sc_trace(mVcdFile, output_1_V_we1, "(port)output_1_V_we1");
    sc_trace(mVcdFile, output_1_V_d1, "(port)output_1_V_d1");
    sc_trace(mVcdFile, output_2_V_address0, "(port)output_2_V_address0");
    sc_trace(mVcdFile, output_2_V_ce0, "(port)output_2_V_ce0");
    sc_trace(mVcdFile, output_2_V_we0, "(port)output_2_V_we0");
    sc_trace(mVcdFile, output_2_V_d0, "(port)output_2_V_d0");
    sc_trace(mVcdFile, output_2_V_address1, "(port)output_2_V_address1");
    sc_trace(mVcdFile, output_2_V_ce1, "(port)output_2_V_ce1");
    sc_trace(mVcdFile, output_2_V_we1, "(port)output_2_V_we1");
    sc_trace(mVcdFile, output_2_V_d1, "(port)output_2_V_d1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten_reg_249, "indvar_flatten_reg_249");
    sc_trace(mVcdFile, i_0_reg_260, "i_0_reg_260");
    sc_trace(mVcdFile, j_0_reg_271, "j_0_reg_271");
    sc_trace(mVcdFile, icmp_ln246_fu_282_p2, "icmp_ln246_fu_282_p2");
    sc_trace(mVcdFile, icmp_ln246_reg_417, "icmp_ln246_reg_417");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, add_ln246_fu_288_p2, "add_ln246_fu_288_p2");
    sc_trace(mVcdFile, add_ln246_reg_421, "add_ln246_reg_421");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, select_ln249_fu_306_p3, "select_ln249_fu_306_p3");
    sc_trace(mVcdFile, select_ln249_reg_426, "select_ln249_reg_426");
    sc_trace(mVcdFile, select_ln249_1_fu_314_p3, "select_ln249_1_fu_314_p3");
    sc_trace(mVcdFile, select_ln249_1_reg_431, "select_ln249_1_reg_431");
    sc_trace(mVcdFile, tmp_fu_326_p3, "tmp_fu_326_p3");
    sc_trace(mVcdFile, tmp_reg_436, "tmp_reg_436");
    sc_trace(mVcdFile, input_2_V_load_reg_464, "input_2_V_load_reg_464");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, input_3_V_load_reg_471, "input_3_V_load_reg_471");
    sc_trace(mVcdFile, j_fu_380_p2, "j_fu_380_p2");
    sc_trace(mVcdFile, j_reg_478, "j_reg_478");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_phi_mux_indvar_flatten_phi_fu_253_p4, "ap_phi_mux_indvar_flatten_phi_fu_253_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_i_0_phi_fu_264_p4, "ap_phi_mux_i_0_phi_fu_264_p4");
    sc_trace(mVcdFile, ap_phi_mux_j_0_phi_fu_275_p4, "ap_phi_mux_j_0_phi_fu_275_p4");
    sc_trace(mVcdFile, sext_ln203_fu_350_p1, "sext_ln203_fu_350_p1");
    sc_trace(mVcdFile, zext_ln203_fu_358_p1, "zext_ln203_fu_358_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, tmp_3_fu_369_p3, "tmp_3_fu_369_p3");
    sc_trace(mVcdFile, tmp_4_fu_390_p3, "tmp_4_fu_390_p3");
    sc_trace(mVcdFile, tmp_5_fu_406_p3, "tmp_5_fu_406_p3");
    sc_trace(mVcdFile, icmp_ln247_fu_300_p2, "icmp_ln247_fu_300_p2");
    sc_trace(mVcdFile, i_fu_294_p2, "i_fu_294_p2");
    sc_trace(mVcdFile, zext_ln203_1_fu_322_p1, "zext_ln203_1_fu_322_p1");
    sc_trace(mVcdFile, zext_ln203_2_fu_340_p1, "zext_ln203_2_fu_340_p1");
    sc_trace(mVcdFile, sub_ln203_fu_334_p2, "sub_ln203_fu_334_p2");
    sc_trace(mVcdFile, add_ln203_fu_344_p2, "add_ln203_fu_344_p2");
    sc_trace(mVcdFile, or_ln203_fu_364_p2, "or_ln203_fu_364_p2");
    sc_trace(mVcdFile, or_ln203_1_fu_385_p2, "or_ln203_1_fu_385_p2");
    sc_trace(mVcdFile, or_ln203_2_fu_401_p2, "or_ln203_2_fu_401_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

transpose_last_two_d::~transpose_last_two_d() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void transpose_last_two_d::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln246_reg_417.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i_0_reg_260 = select_ln249_1_reg_431.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_260 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln246_reg_417.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        indvar_flatten_reg_249 = add_ln246_reg_421.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_249 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln246_reg_417.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        j_0_reg_271 = j_reg_478.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_0_reg_271 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        add_ln246_reg_421 = add_ln246_fu_288_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln246_reg_417 = icmp_ln246_fu_282_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln246_reg_417.read(), ap_const_lv1_0))) {
        input_2_V_load_reg_464 = input_2_V_q0.read();
        input_3_V_load_reg_471 = input_3_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln246_reg_417.read(), ap_const_lv1_0))) {
        j_reg_478 = j_fu_380_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln246_fu_282_p2.read(), ap_const_lv1_0))) {
        select_ln249_1_reg_431 = select_ln249_1_fu_314_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln246_fu_282_p2.read(), ap_const_lv1_0))) {
        select_ln249_reg_426 = select_ln249_fu_306_p3.read();
        tmp_reg_436 = tmp_fu_326_p3.read();
    }
}

void transpose_last_two_d::thread_add_ln203_fu_344_p2() {
    add_ln203_fu_344_p2 = (!zext_ln203_2_fu_340_p1.read().is_01() || !sub_ln203_fu_334_p2.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln203_2_fu_340_p1.read()) + sc_biguint<5>(sub_ln203_fu_334_p2.read()));
}

void transpose_last_two_d::thread_add_ln246_fu_288_p2() {
    add_ln246_fu_288_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_253_p4.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(ap_phi_mux_indvar_flatten_phi_fu_253_p4.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void transpose_last_two_d::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void transpose_last_two_d::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void transpose_last_two_d::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void transpose_last_two_d::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[3];
}

void transpose_last_two_d::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void transpose_last_two_d::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void transpose_last_two_d::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void transpose_last_two_d::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void transpose_last_two_d::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void transpose_last_two_d::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void transpose_last_two_d::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void transpose_last_two_d::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void transpose_last_two_d::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void transpose_last_two_d::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln246_fu_282_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void transpose_last_two_d::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void transpose_last_two_d::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void transpose_last_two_d::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void transpose_last_two_d::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void transpose_last_two_d::thread_ap_phi_mux_i_0_phi_fu_264_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln246_reg_417.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_0_phi_fu_264_p4 = select_ln249_1_reg_431.read();
    } else {
        ap_phi_mux_i_0_phi_fu_264_p4 = i_0_reg_260.read();
    }
}

void transpose_last_two_d::thread_ap_phi_mux_indvar_flatten_phi_fu_253_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln246_reg_417.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_indvar_flatten_phi_fu_253_p4 = add_ln246_reg_421.read();
    } else {
        ap_phi_mux_indvar_flatten_phi_fu_253_p4 = indvar_flatten_reg_249.read();
    }
}

void transpose_last_two_d::thread_ap_phi_mux_j_0_phi_fu_275_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln246_reg_417.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_j_0_phi_fu_275_p4 = j_reg_478.read();
    } else {
        ap_phi_mux_j_0_phi_fu_275_p4 = j_0_reg_271.read();
    }
}

void transpose_last_two_d::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void transpose_last_two_d::thread_i_fu_294_p2() {
    i_fu_294_p2 = (!ap_phi_mux_i_0_phi_fu_264_p4.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(ap_phi_mux_i_0_phi_fu_264_p4.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void transpose_last_two_d::thread_icmp_ln246_fu_282_p2() {
    icmp_ln246_fu_282_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_253_p4.read().is_01() || !ap_const_lv4_C.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_indvar_flatten_phi_fu_253_p4.read() == ap_const_lv4_C);
}

void transpose_last_two_d::thread_icmp_ln247_fu_300_p2() {
    icmp_ln247_fu_300_p2 = (!ap_phi_mux_j_0_phi_fu_275_p4.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_j_0_phi_fu_275_p4.read() == ap_const_lv2_3);
}

void transpose_last_two_d::thread_input_0_V_address0() {
    input_0_V_address0 =  (sc_lv<4>) (sext_ln203_fu_350_p1.read());
}

void transpose_last_two_d::thread_input_0_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        input_0_V_ce0 = ap_const_logic_1;
    } else {
        input_0_V_ce0 = ap_const_logic_0;
    }
}

void transpose_last_two_d::thread_input_1_V_address0() {
    input_1_V_address0 =  (sc_lv<4>) (sext_ln203_fu_350_p1.read());
}

void transpose_last_two_d::thread_input_1_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        input_1_V_ce0 = ap_const_logic_1;
    } else {
        input_1_V_ce0 = ap_const_logic_0;
    }
}

void transpose_last_two_d::thread_input_2_V_address0() {
    input_2_V_address0 =  (sc_lv<4>) (sext_ln203_fu_350_p1.read());
}

void transpose_last_two_d::thread_input_2_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        input_2_V_ce0 = ap_const_logic_1;
    } else {
        input_2_V_ce0 = ap_const_logic_0;
    }
}

void transpose_last_two_d::thread_input_3_V_address0() {
    input_3_V_address0 =  (sc_lv<4>) (sext_ln203_fu_350_p1.read());
}

void transpose_last_two_d::thread_input_3_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        input_3_V_ce0 = ap_const_logic_1;
    } else {
        input_3_V_ce0 = ap_const_logic_0;
    }
}

void transpose_last_two_d::thread_j_fu_380_p2() {
    j_fu_380_p2 = (!select_ln249_reg_426.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(select_ln249_reg_426.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void transpose_last_two_d::thread_or_ln203_1_fu_385_p2() {
    or_ln203_1_fu_385_p2 = (tmp_reg_436.read() | ap_const_lv5_2);
}

void transpose_last_two_d::thread_or_ln203_2_fu_401_p2() {
    or_ln203_2_fu_401_p2 = (tmp_reg_436.read() | ap_const_lv5_3);
}

void transpose_last_two_d::thread_or_ln203_fu_364_p2() {
    or_ln203_fu_364_p2 = (tmp_reg_436.read() | ap_const_lv5_1);
}

void transpose_last_two_d::thread_output_0_V_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        output_0_V_address0 =  (sc_lv<4>) (tmp_4_fu_390_p3.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        output_0_V_address0 =  (sc_lv<4>) (zext_ln203_fu_358_p1.read());
    } else {
        output_0_V_address0 = "XXXX";
    }
}

void transpose_last_two_d::thread_output_0_V_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        output_0_V_address1 =  (sc_lv<4>) (tmp_5_fu_406_p3.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        output_0_V_address1 =  (sc_lv<4>) (tmp_3_fu_369_p3.read());
    } else {
        output_0_V_address1 = "XXXX";
    }
}

void transpose_last_two_d::thread_output_0_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        output_0_V_ce0 = ap_const_logic_1;
    } else {
        output_0_V_ce0 = ap_const_logic_0;
    }
}

void transpose_last_two_d::thread_output_0_V_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        output_0_V_ce1 = ap_const_logic_1;
    } else {
        output_0_V_ce1 = ap_const_logic_0;
    }
}

void transpose_last_two_d::thread_output_0_V_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        output_0_V_d0 = input_2_V_load_reg_464.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        output_0_V_d0 = input_0_V_q0.read();
    } else {
        output_0_V_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void transpose_last_two_d::thread_output_0_V_d1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        output_0_V_d1 = input_3_V_load_reg_471.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        output_0_V_d1 = input_1_V_q0.read();
    } else {
        output_0_V_d1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void transpose_last_two_d::thread_output_0_V_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln246_reg_417.read(), ap_const_lv1_0) && 
          esl_seteq<1,2,2>(select_ln249_reg_426.read(), ap_const_lv2_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,2,2>(select_ln249_reg_426.read(), ap_const_lv2_0)))) {
        output_0_V_we0 = ap_const_logic_1;
    } else {
        output_0_V_we0 = ap_const_logic_0;
    }
}

void transpose_last_two_d::thread_output_0_V_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln246_reg_417.read(), ap_const_lv1_0) && 
          esl_seteq<1,2,2>(select_ln249_reg_426.read(), ap_const_lv2_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,2,2>(select_ln249_reg_426.read(), ap_const_lv2_0)))) {
        output_0_V_we1 = ap_const_logic_1;
    } else {
        output_0_V_we1 = ap_const_logic_0;
    }
}

void transpose_last_two_d::thread_output_1_V_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        output_1_V_address0 =  (sc_lv<4>) (tmp_4_fu_390_p3.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        output_1_V_address0 =  (sc_lv<4>) (zext_ln203_fu_358_p1.read());
    } else {
        output_1_V_address0 = "XXXX";
    }
}

void transpose_last_two_d::thread_output_1_V_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        output_1_V_address1 =  (sc_lv<4>) (tmp_5_fu_406_p3.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        output_1_V_address1 =  (sc_lv<4>) (tmp_3_fu_369_p3.read());
    } else {
        output_1_V_address1 = "XXXX";
    }
}

void transpose_last_two_d::thread_output_1_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        output_1_V_ce0 = ap_const_logic_1;
    } else {
        output_1_V_ce0 = ap_const_logic_0;
    }
}

void transpose_last_two_d::thread_output_1_V_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        output_1_V_ce1 = ap_const_logic_1;
    } else {
        output_1_V_ce1 = ap_const_logic_0;
    }
}

void transpose_last_two_d::thread_output_1_V_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        output_1_V_d0 = input_2_V_load_reg_464.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        output_1_V_d0 = input_0_V_q0.read();
    } else {
        output_1_V_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void transpose_last_two_d::thread_output_1_V_d1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        output_1_V_d1 = input_3_V_load_reg_471.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        output_1_V_d1 = input_1_V_q0.read();
    } else {
        output_1_V_d1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void transpose_last_two_d::thread_output_1_V_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln246_reg_417.read(), ap_const_lv1_0) && 
          esl_seteq<1,2,2>(select_ln249_reg_426.read(), ap_const_lv2_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,2,2>(select_ln249_reg_426.read(), ap_const_lv2_1)))) {
        output_1_V_we0 = ap_const_logic_1;
    } else {
        output_1_V_we0 = ap_const_logic_0;
    }
}

void transpose_last_two_d::thread_output_1_V_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln246_reg_417.read(), ap_const_lv1_0) && 
          esl_seteq<1,2,2>(select_ln249_reg_426.read(), ap_const_lv2_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,2,2>(select_ln249_reg_426.read(), ap_const_lv2_1)))) {
        output_1_V_we1 = ap_const_logic_1;
    } else {
        output_1_V_we1 = ap_const_logic_0;
    }
}

void transpose_last_two_d::thread_output_2_V_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        output_2_V_address0 =  (sc_lv<4>) (tmp_4_fu_390_p3.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        output_2_V_address0 =  (sc_lv<4>) (zext_ln203_fu_358_p1.read());
    } else {
        output_2_V_address0 = "XXXX";
    }
}

void transpose_last_two_d::thread_output_2_V_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        output_2_V_address1 =  (sc_lv<4>) (tmp_5_fu_406_p3.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        output_2_V_address1 =  (sc_lv<4>) (tmp_3_fu_369_p3.read());
    } else {
        output_2_V_address1 = "XXXX";
    }
}

void transpose_last_two_d::thread_output_2_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        output_2_V_ce0 = ap_const_logic_1;
    } else {
        output_2_V_ce0 = ap_const_logic_0;
    }
}

void transpose_last_two_d::thread_output_2_V_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        output_2_V_ce1 = ap_const_logic_1;
    } else {
        output_2_V_ce1 = ap_const_logic_0;
    }
}

void transpose_last_two_d::thread_output_2_V_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        output_2_V_d0 = input_2_V_load_reg_464.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        output_2_V_d0 = input_0_V_q0.read();
    } else {
        output_2_V_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void transpose_last_two_d::thread_output_2_V_d1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        output_2_V_d1 = input_3_V_load_reg_471.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        output_2_V_d1 = input_1_V_q0.read();
    } else {
        output_2_V_d1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void transpose_last_two_d::thread_output_2_V_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln246_reg_417.read(), ap_const_lv1_0) && 
          !esl_seteq<1,2,2>(select_ln249_reg_426.read(), ap_const_lv2_0) && 
          !esl_seteq<1,2,2>(select_ln249_reg_426.read(), ap_const_lv2_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          !esl_seteq<1,2,2>(select_ln249_reg_426.read(), ap_const_lv2_0) && 
          !esl_seteq<1,2,2>(select_ln249_reg_426.read(), ap_const_lv2_1)))) {
        output_2_V_we0 = ap_const_logic_1;
    } else {
        output_2_V_we0 = ap_const_logic_0;
    }
}

void transpose_last_two_d::thread_output_2_V_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln246_reg_417.read(), ap_const_lv1_0) && 
          !esl_seteq<1,2,2>(select_ln249_reg_426.read(), ap_const_lv2_0) && 
          !esl_seteq<1,2,2>(select_ln249_reg_426.read(), ap_const_lv2_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          !esl_seteq<1,2,2>(select_ln249_reg_426.read(), ap_const_lv2_0) && 
          !esl_seteq<1,2,2>(select_ln249_reg_426.read(), ap_const_lv2_1)))) {
        output_2_V_we1 = ap_const_logic_1;
    } else {
        output_2_V_we1 = ap_const_logic_0;
    }
}

void transpose_last_two_d::thread_select_ln249_1_fu_314_p3() {
    select_ln249_1_fu_314_p3 = (!icmp_ln247_fu_300_p2.read()[0].is_01())? sc_lv<3>(): ((icmp_ln247_fu_300_p2.read()[0].to_bool())? i_fu_294_p2.read(): ap_phi_mux_i_0_phi_fu_264_p4.read());
}

void transpose_last_two_d::thread_select_ln249_fu_306_p3() {
    select_ln249_fu_306_p3 = (!icmp_ln247_fu_300_p2.read()[0].is_01())? sc_lv<2>(): ((icmp_ln247_fu_300_p2.read()[0].to_bool())? ap_const_lv2_0: ap_phi_mux_j_0_phi_fu_275_p4.read());
}

void transpose_last_two_d::thread_sext_ln203_fu_350_p1() {
    sext_ln203_fu_350_p1 = esl_sext<64,5>(add_ln203_fu_344_p2.read());
}

void transpose_last_two_d::thread_sub_ln203_fu_334_p2() {
    sub_ln203_fu_334_p2 = (!tmp_fu_326_p3.read().is_01() || !zext_ln203_1_fu_322_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_fu_326_p3.read()) - sc_biguint<5>(zext_ln203_1_fu_322_p1.read()));
}

void transpose_last_two_d::thread_tmp_3_fu_369_p3() {
    tmp_3_fu_369_p3 = esl_concat<59,5>(ap_const_lv59_0, or_ln203_fu_364_p2.read());
}

void transpose_last_two_d::thread_tmp_4_fu_390_p3() {
    tmp_4_fu_390_p3 = esl_concat<59,5>(ap_const_lv59_0, or_ln203_1_fu_385_p2.read());
}

void transpose_last_two_d::thread_tmp_5_fu_406_p3() {
    tmp_5_fu_406_p3 = esl_concat<59,5>(ap_const_lv59_0, or_ln203_2_fu_401_p2.read());
}

void transpose_last_two_d::thread_tmp_fu_326_p3() {
    tmp_fu_326_p3 = esl_concat<3,2>(select_ln249_1_fu_314_p3.read(), ap_const_lv2_0);
}

void transpose_last_two_d::thread_zext_ln203_1_fu_322_p1() {
    zext_ln203_1_fu_322_p1 = esl_zext<5,3>(select_ln249_1_fu_314_p3.read());
}

void transpose_last_two_d::thread_zext_ln203_2_fu_340_p1() {
    zext_ln203_2_fu_340_p1 = esl_zext<5,2>(select_ln249_fu_306_p3.read());
}

void transpose_last_two_d::thread_zext_ln203_fu_358_p1() {
    zext_ln203_fu_358_p1 = esl_zext<64,5>(tmp_reg_436.read());
}

void transpose_last_two_d::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln246_fu_282_p2.read(), ap_const_lv1_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln246_fu_282_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

