// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="attention,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.386250,HLS_SYN_LAT=1371083,HLS_SYN_TPT=none,HLS_SYN_MEM=198,HLS_SYN_DSP=88,HLS_SYN_FF=39452,HLS_SYN_LUT=52126,HLS_VERSION=2019_2}" *)

module attention (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v264_address0,
        v264_ce0,
        v264_q0,
        v265_0_address0,
        v265_0_ce0,
        v265_0_q0,
        v265_1_address0,
        v265_1_ce0,
        v265_1_q0,
        v266,
        v267_0_address0,
        v267_0_ce0,
        v267_0_q0,
        v267_1_address0,
        v267_1_ce0,
        v267_1_q0,
        v268,
        v269_0_address0,
        v269_0_ce0,
        v269_0_q0,
        v269_1_address0,
        v269_1_ce0,
        v269_1_q0,
        v270,
        v271_0_address0,
        v271_0_ce0,
        v271_0_q0,
        v271_1_address0,
        v271_1_ce0,
        v271_1_q0,
        v272,
        v273_address0,
        v273_ce0,
        v273_q0,
        v274_address0,
        v274_ce0,
        v274_q0,
        v275_address0,
        v275_ce0,
        v275_q0,
        v276_address0,
        v276_ce0,
        v276_q0,
        v277_address0,
        v277_ce0,
        v277_q0,
        v278_address0,
        v278_ce0,
        v278_q0,
        v279,
        v280_address0,
        v280_ce0,
        v280_we0,
        v280_d0
);

parameter    ap_ST_fsm_state1 = 77'd1;
parameter    ap_ST_fsm_state2 = 77'd2;
parameter    ap_ST_fsm_state3 = 77'd4;
parameter    ap_ST_fsm_state4 = 77'd8;
parameter    ap_ST_fsm_state5 = 77'd16;
parameter    ap_ST_fsm_state6 = 77'd32;
parameter    ap_ST_fsm_state7 = 77'd64;
parameter    ap_ST_fsm_state8 = 77'd128;
parameter    ap_ST_fsm_state9 = 77'd256;
parameter    ap_ST_fsm_state10 = 77'd512;
parameter    ap_ST_fsm_state11 = 77'd1024;
parameter    ap_ST_fsm_state12 = 77'd2048;
parameter    ap_ST_fsm_state13 = 77'd4096;
parameter    ap_ST_fsm_state14 = 77'd8192;
parameter    ap_ST_fsm_state15 = 77'd16384;
parameter    ap_ST_fsm_state16 = 77'd32768;
parameter    ap_ST_fsm_state17 = 77'd65536;
parameter    ap_ST_fsm_state18 = 77'd131072;
parameter    ap_ST_fsm_state19 = 77'd262144;
parameter    ap_ST_fsm_state20 = 77'd524288;
parameter    ap_ST_fsm_state21 = 77'd1048576;
parameter    ap_ST_fsm_state22 = 77'd2097152;
parameter    ap_ST_fsm_state23 = 77'd4194304;
parameter    ap_ST_fsm_state24 = 77'd8388608;
parameter    ap_ST_fsm_state25 = 77'd16777216;
parameter    ap_ST_fsm_state26 = 77'd33554432;
parameter    ap_ST_fsm_state27 = 77'd67108864;
parameter    ap_ST_fsm_state28 = 77'd134217728;
parameter    ap_ST_fsm_state29 = 77'd268435456;
parameter    ap_ST_fsm_state30 = 77'd536870912;
parameter    ap_ST_fsm_state31 = 77'd1073741824;
parameter    ap_ST_fsm_state32 = 77'd2147483648;
parameter    ap_ST_fsm_state33 = 77'd4294967296;
parameter    ap_ST_fsm_state34 = 77'd8589934592;
parameter    ap_ST_fsm_state35 = 77'd17179869184;
parameter    ap_ST_fsm_state36 = 77'd34359738368;
parameter    ap_ST_fsm_state37 = 77'd68719476736;
parameter    ap_ST_fsm_state38 = 77'd137438953472;
parameter    ap_ST_fsm_state39 = 77'd274877906944;
parameter    ap_ST_fsm_state40 = 77'd549755813888;
parameter    ap_ST_fsm_state41 = 77'd1099511627776;
parameter    ap_ST_fsm_state42 = 77'd2199023255552;
parameter    ap_ST_fsm_state43 = 77'd4398046511104;
parameter    ap_ST_fsm_state44 = 77'd8796093022208;
parameter    ap_ST_fsm_state45 = 77'd17592186044416;
parameter    ap_ST_fsm_state46 = 77'd35184372088832;
parameter    ap_ST_fsm_state47 = 77'd70368744177664;
parameter    ap_ST_fsm_state48 = 77'd140737488355328;
parameter    ap_ST_fsm_state49 = 77'd281474976710656;
parameter    ap_ST_fsm_state50 = 77'd562949953421312;
parameter    ap_ST_fsm_state51 = 77'd1125899906842624;
parameter    ap_ST_fsm_state52 = 77'd2251799813685248;
parameter    ap_ST_fsm_state53 = 77'd4503599627370496;
parameter    ap_ST_fsm_state54 = 77'd9007199254740992;
parameter    ap_ST_fsm_state55 = 77'd18014398509481984;
parameter    ap_ST_fsm_state56 = 77'd36028797018963968;
parameter    ap_ST_fsm_state57 = 77'd72057594037927936;
parameter    ap_ST_fsm_state58 = 77'd144115188075855872;
parameter    ap_ST_fsm_state59 = 77'd288230376151711744;
parameter    ap_ST_fsm_state60 = 77'd576460752303423488;
parameter    ap_ST_fsm_state61 = 77'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 77'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 77'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 77'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 77'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 77'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 77'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 77'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 77'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 77'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 77'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 77'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 77'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 77'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 77'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 77'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 77'd75557863725914323419136;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] v264_address0;
output   v264_ce0;
input  [31:0] v264_q0;
output  [18:0] v265_0_address0;
output   v265_0_ce0;
input  [7:0] v265_0_q0;
output  [18:0] v265_1_address0;
output   v265_1_ce0;
input  [7:0] v265_1_q0;
input  [31:0] v266;
output  [18:0] v267_0_address0;
output   v267_0_ce0;
input  [7:0] v267_0_q0;
output  [18:0] v267_1_address0;
output   v267_1_ce0;
input  [7:0] v267_1_q0;
input  [31:0] v268;
output  [18:0] v269_0_address0;
output   v269_0_ce0;
input  [7:0] v269_0_q0;
output  [18:0] v269_1_address0;
output   v269_1_ce0;
input  [7:0] v269_1_q0;
input  [31:0] v270;
output  [18:0] v271_0_address0;
output   v271_0_ce0;
input  [7:0] v271_0_q0;
output  [18:0] v271_1_address0;
output   v271_1_ce0;
input  [7:0] v271_1_q0;
input  [31:0] v272;
output  [9:0] v273_address0;
output   v273_ce0;
input  [31:0] v273_q0;
output  [9:0] v274_address0;
output   v274_ce0;
input  [31:0] v274_q0;
output  [10:0] v275_address0;
output   v275_ce0;
input  [31:0] v275_q0;
output  [10:0] v276_address0;
output   v276_ce0;
input  [31:0] v276_q0;
output  [12:0] v277_address0;
output   v277_ce0;
input  [31:0] v277_q0;
output  [12:0] v278_address0;
output   v278_ce0;
input  [31:0] v278_q0;
input  [31:0] v279;
output  [10:0] v280_address0;
output   v280_ce0;
output   v280_we0;
output  [31:0] v280_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg v264_ce0;
reg v265_0_ce0;
reg v265_1_ce0;
reg v267_0_ce0;
reg v267_1_ce0;
reg v271_0_ce0;
reg v271_1_ce0;
reg v275_ce0;
reg v276_ce0;
reg v277_ce0;
reg v278_ce0;
reg[10:0] v280_address0;
reg v280_ce0;
reg v280_we0;
reg[31:0] v280_d0;

(* fsm_encoding = "none" *) reg   [76:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    quantized_hidden_sta_8_ce0;
reg    quantized_hidden_sta_8_we0;
reg   [7:0] quantized_hidden_sta_7_address0;
reg    quantized_hidden_sta_7_ce0;
wire   [7:0] quantized_hidden_sta_7_q0;
reg   [7:0] quantized_hidden_sta_6_address0;
reg    quantized_hidden_sta_6_ce0;
wire   [7:0] quantized_hidden_sta_6_q0;
reg   [7:0] quantized_hidden_sta_5_address0;
reg    quantized_hidden_sta_5_ce0;
wire   [7:0] quantized_hidden_sta_5_q0;
reg   [7:0] quantized_hidden_sta_4_address0;
reg    quantized_hidden_sta_4_ce0;
wire   [7:0] quantized_hidden_sta_4_q0;
reg   [7:0] quantized_hidden_sta_3_address0;
reg    quantized_hidden_sta_3_ce0;
wire   [7:0] quantized_hidden_sta_3_q0;
reg   [7:0] quantized_hidden_sta_2_address0;
reg    quantized_hidden_sta_2_ce0;
wire   [7:0] quantized_hidden_sta_2_q0;
reg   [7:0] quantized_hidden_sta_1_address0;
reg    quantized_hidden_sta_1_ce0;
wire   [7:0] quantized_hidden_sta_1_q0;
reg   [7:0] quantized_hidden_sta_address0;
reg    quantized_hidden_sta_ce0;
wire   [7:0] quantized_hidden_sta_q0;
reg   [10:0] q_proj_0_address0;
reg    q_proj_0_ce0;
reg    q_proj_0_we0;
wire   [31:0] q_proj_0_q0;
reg    q_proj_0_ce1;
wire   [31:0] q_proj_0_q1;
reg   [10:0] k_proj_0_address0;
reg    k_proj_0_ce0;
reg    k_proj_0_we0;
wire   [31:0] k_proj_0_q0;
reg    k_proj_0_ce1;
wire   [31:0] k_proj_0_q1;
reg   [10:0] v_proj_0_address0;
reg    v_proj_0_ce0;
reg    v_proj_0_we0;
wire   [31:0] v_proj_0_q0;
reg   [13:0] k_proj_transposed_address0;
reg    k_proj_transposed_ce0;
reg    k_proj_transposed_we0;
wire   [31:0] k_proj_transposed_q0;
reg    quantized_final_outp_8_ce0;
reg    quantized_final_outp_8_we0;
reg    quantized_final_outp_7_ce0;
wire   [7:0] quantized_final_outp_7_q0;
reg    quantized_final_outp_6_ce0;
wire   [7:0] quantized_final_outp_6_q0;
reg    quantized_final_outp_5_ce0;
wire   [7:0] quantized_final_outp_5_q0;
reg    quantized_final_outp_4_ce0;
wire   [7:0] quantized_final_outp_4_q0;
reg    quantized_final_outp_3_ce0;
wire   [7:0] quantized_final_outp_3_q0;
reg    quantized_final_outp_2_ce0;
wire   [7:0] quantized_final_outp_2_q0;
reg    quantized_final_outp_1_ce0;
wire   [7:0] quantized_final_outp_1_q0;
reg    quantized_final_outp_ce0;
wire   [7:0] quantized_final_outp_q0;
wire   [31:0] grp_quantize_activation_fu_955_ap_return;
reg   [31:0] reg_1040;
wire    ap_CS_fsm_state5;
wire    grp_quantize_activation_fu_955_ap_ready;
wire    grp_quantize_activation_fu_955_ap_done;
wire    ap_CS_fsm_state75;
wire   [31:0] attn_weights_0_q0;
reg   [31:0] reg_1046;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state55;
wire   [10:0] add_ln480_fu_1058_p2;
wire    ap_CS_fsm_state2;
wire   [10:0] add_ln502_fu_1075_p2;
wire    ap_CS_fsm_state6;
wire   [10:0] add_ln508_fu_1092_p2;
wire    ap_CS_fsm_state7;
wire   [10:0] add_ln514_fu_1109_p2;
wire    ap_CS_fsm_state8;
wire   [53:0] man_V_2_fu_1172_p3;
reg   [53:0] man_V_2_reg_3111;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln571_fu_1180_p2;
reg   [0:0] icmp_ln571_reg_3116;
wire   [0:0] icmp_ln581_fu_1192_p2;
reg   [0:0] icmp_ln581_reg_3122;
wire  signed [11:0] sh_amt_fu_1210_p3;
reg  signed [11:0] sh_amt_reg_3128;
wire   [0:0] icmp_ln582_fu_1218_p2;
reg   [0:0] icmp_ln582_reg_3134;
wire   [31:0] trunc_ln583_fu_1224_p1;
reg   [31:0] trunc_ln583_reg_3140;
reg   [6:0] tmp_43_reg_3146;
wire   [31:0] v302_V_fu_1389_p3;
reg   [31:0] v302_V_reg_3151;
wire    ap_CS_fsm_state10;
wire   [53:0] man_V_5_fu_1449_p3;
reg   [53:0] man_V_5_reg_3156;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln571_1_fu_1457_p2;
reg   [0:0] icmp_ln571_1_reg_3161;
wire   [0:0] icmp_ln581_1_fu_1469_p2;
reg   [0:0] icmp_ln581_1_reg_3167;
wire  signed [11:0] sh_amt_1_fu_1487_p3;
reg  signed [11:0] sh_amt_1_reg_3173;
wire   [0:0] icmp_ln582_1_fu_1495_p2;
reg   [0:0] icmp_ln582_1_reg_3179;
wire   [31:0] trunc_ln583_1_fu_1501_p1;
reg   [31:0] trunc_ln583_1_reg_3185;
reg   [6:0] tmp_56_reg_3191;
wire   [53:0] man_V_8_fu_1567_p3;
reg   [53:0] man_V_8_reg_3196;
wire   [0:0] icmp_ln571_2_fu_1575_p2;
reg   [0:0] icmp_ln571_2_reg_3201;
wire   [0:0] icmp_ln581_2_fu_1587_p2;
reg   [0:0] icmp_ln581_2_reg_3207;
wire  signed [11:0] sh_amt_2_fu_1605_p3;
reg  signed [11:0] sh_amt_2_reg_3213;
wire   [0:0] icmp_ln582_2_fu_1613_p2;
reg   [0:0] icmp_ln582_2_reg_3219;
wire   [31:0] trunc_ln583_2_fu_1619_p1;
reg   [31:0] trunc_ln583_2_reg_3225;
reg   [6:0] tmp_69_reg_3231;
wire   [31:0] v304_V_fu_1784_p3;
reg   [31:0] v304_V_reg_3236;
wire    ap_CS_fsm_state12;
wire    grp_linear_forward_no_mu_fu_844_ap_ready;
wire    grp_linear_forward_no_mu_fu_844_ap_done;
wire   [31:0] v306_V_fu_1943_p3;
reg   [31:0] v306_V_reg_3241;
wire   [53:0] man_V_11_fu_2003_p3;
reg   [53:0] man_V_11_reg_3246;
wire    ap_CS_fsm_state15;
wire   [0:0] icmp_ln571_3_fu_2011_p2;
reg   [0:0] icmp_ln571_3_reg_3251;
wire   [0:0] icmp_ln581_3_fu_2023_p2;
reg   [0:0] icmp_ln581_3_reg_3257;
wire  signed [11:0] sh_amt_3_fu_2041_p3;
reg  signed [11:0] sh_amt_3_reg_3263;
wire   [0:0] icmp_ln582_3_fu_2049_p2;
reg   [0:0] icmp_ln582_3_reg_3269;
wire   [31:0] trunc_ln583_3_fu_2055_p1;
reg   [31:0] trunc_ln583_3_reg_3275;
reg   [6:0] tmp_72_reg_3281;
wire   [31:0] v308_V_fu_2220_p3;
reg   [31:0] v308_V_reg_3286;
wire    ap_CS_fsm_state16;
wire    grp_reshape_2D_to_3D_fu_1009_ap_ready;
wire    grp_reshape_2D_to_3D_fu_1009_ap_done;
wire    grp_reshape_2D_to_3D_fu_1017_ap_ready;
wire    grp_reshape_2D_to_3D_fu_1017_ap_done;
reg    ap_block_state16_on_subcall_done;
wire   [4:0] v334_fu_2234_p2;
reg   [4:0] v334_reg_3294;
wire    ap_CS_fsm_state17;
wire   [11:0] sub_ln585_fu_2260_p2;
reg   [11:0] sub_ln585_reg_3299;
wire   [0:0] icmp_ln582_4_fu_2228_p2;
wire   [6:0] add_ln584_fu_2272_p2;
wire    ap_CS_fsm_state18;
wire   [4:0] v338_fu_2298_p2;
reg   [4:0] v338_reg_3315;
wire    ap_CS_fsm_state19;
wire   [11:0] sub_ln593_fu_2324_p2;
reg   [11:0] sub_ln593_reg_3320;
wire   [0:0] icmp_ln590_fu_2292_p2;
wire   [6:0] add_ln592_fu_2336_p2;
wire    ap_CS_fsm_state20;
wire   [4:0] v342_fu_2362_p2;
reg   [4:0] v342_reg_3336;
wire    ap_CS_fsm_state22;
wire  signed [9:0] sext_ln602_fu_2398_p1;
reg  signed [9:0] sext_ln602_reg_3341;
wire   [0:0] icmp_ln599_fu_2356_p2;
wire   [2:0] v343_fu_2408_p2;
reg   [2:0] v343_reg_3349;
wire    ap_CS_fsm_state23;
wire   [14:0] sub_ln602_1_fu_2443_p2;
reg   [14:0] sub_ln602_1_reg_3354;
wire   [0:0] icmp_ln600_fu_2402_p2;
wire   [6:0] v344_fu_2455_p2;
wire    ap_CS_fsm_state24;
wire   [4:0] v346_fu_2481_p2;
reg   [4:0] v346_reg_3370;
wire    ap_CS_fsm_state25;
wire  signed [9:0] sext_ln610_fu_2517_p1;
reg  signed [9:0] sext_ln610_reg_3375;
wire   [0:0] icmp_ln607_fu_2475_p2;
wire   [2:0] v347_fu_2527_p2;
reg   [2:0] v347_reg_3383;
wire    ap_CS_fsm_state26;
wire   [14:0] sub_ln610_1_fu_2562_p2;
reg   [14:0] sub_ln610_1_reg_3388;
wire   [0:0] icmp_ln608_fu_2521_p2;
wire   [6:0] v348_fu_2574_p2;
wire    ap_CS_fsm_state27;
wire   [4:0] v354_fu_2600_p2;
reg   [4:0] v354_reg_3404;
wire    ap_CS_fsm_state31;
wire   [7:0] sub_ln629_fu_2626_p2;
reg   [7:0] sub_ln629_reg_3409;
wire   [0:0] icmp_ln626_fu_2594_p2;
wire   [2:0] add_ln628_fu_2638_p2;
wire    ap_CS_fsm_state32;
wire   [4:0] i11_fu_2664_p2;
reg   [4:0] i11_reg_3425;
wire    ap_CS_fsm_state34;
wire   [7:0] sub_ln639_fu_2690_p2;
reg   [7:0] sub_ln639_reg_3430;
wire   [0:0] icmp_ln636_fu_2658_p2;
wire   [2:0] add_ln638_fu_2702_p2;
reg   [2:0] add_ln638_reg_3438;
wire    ap_CS_fsm_state35;
reg   [6:0] attn_weights_0_addr_2_reg_3443;
wire   [0:0] icmp_ln638_fu_2696_p2;
wire   [31:0] grp_fu_1029_p2;
reg   [31:0] v_reg_3448;
wire    ap_CS_fsm_state52;
wire   [4:0] h6_fu_2728_p2;
reg   [4:0] h6_reg_3456;
wire    ap_CS_fsm_state54;
reg   [6:0] attn_weights_0_addr_1_reg_3461;
wire   [0:0] icmp_ln653_fu_2722_p2;
wire   [31:0] grp_fu_1024_p2;
reg   [31:0] v2_reg_3466;
wire    ap_CS_fsm_state60;
wire   [4:0] v374_fu_2771_p2;
reg   [4:0] v374_reg_3474;
wire    ap_CS_fsm_state62;
wire   [7:0] sub_ln667_fu_2797_p2;
reg   [7:0] sub_ln667_reg_3479;
wire   [0:0] icmp_ln664_fu_2765_p2;
wire   [2:0] add_ln666_fu_2809_p2;
wire    ap_CS_fsm_state63;
wire   [4:0] v378_fu_2835_p2;
reg   [4:0] v378_reg_3495;
wire    ap_CS_fsm_state65;
wire   [11:0] sub_ln676_fu_2861_p2;
reg   [11:0] sub_ln676_reg_3500;
wire   [0:0] icmp_ln673_fu_2829_p2;
wire   [6:0] add_ln675_fu_2873_p2;
wire    ap_CS_fsm_state66;
wire   [10:0] add_ln683_fu_2899_p2;
wire    ap_CS_fsm_state68;
wire   [4:0] add_ln688_fu_2916_p2;
reg   [4:0] add_ln688_reg_3524;
wire    ap_CS_fsm_state69;
wire   [11:0] sub_ln690_fu_2942_p2;
reg   [11:0] sub_ln690_reg_3529;
wire   [0:0] icmp_ln688_fu_2910_p2;
wire   [11:0] sub_ln691_fu_2976_p2;
reg   [11:0] sub_ln691_reg_3534;
wire   [6:0] add_ln689_fu_2992_p2;
reg   [6:0] add_ln689_reg_3542;
wire    ap_CS_fsm_state70;
wire   [0:0] icmp_ln689_fu_2986_p2;
wire   [11:0] add_ln691_fu_3008_p2;
reg   [11:0] add_ln691_reg_3552;
wire   [10:0] add_ln697_fu_3027_p2;
wire    ap_CS_fsm_state72;
wire   [10:0] add_ln736_fu_3044_p2;
wire    ap_CS_fsm_state76;
reg   [10:0] rms_hidden_states_0_address0;
reg    rms_hidden_states_0_ce0;
reg    rms_hidden_states_0_we0;
reg   [31:0] rms_hidden_states_0_d0;
wire   [31:0] rms_hidden_states_0_q0;
reg   [10:0] q_proj_re_address0;
reg    q_proj_re_ce0;
reg    q_proj_re_we0;
reg   [31:0] q_proj_re_d0;
wire   [31:0] q_proj_re_q0;
reg   [10:0] k_proj_re_address0;
reg    k_proj_re_ce0;
reg    k_proj_re_we0;
reg   [31:0] k_proj_re_d0;
wire   [31:0] k_proj_re_q0;
reg   [10:0] v_proj_re_address0;
reg    v_proj_re_ce0;
reg    v_proj_re_we0;
reg   [31:0] v_proj_re_d0;
wire   [31:0] v_proj_re_q0;
reg   [10:0] q_embed_0_address0;
reg    q_embed_0_ce0;
reg    q_embed_0_we0;
reg   [31:0] q_embed_0_d0;
wire   [31:0] q_embed_0_q0;
reg   [10:0] k_embed_0_address0;
reg    k_embed_0_ce0;
reg    k_embed_0_we0;
reg   [31:0] k_embed_0_d0;
wire   [31:0] k_embed_0_q0;
reg   [13:0] updated_k_cache_address0;
reg    updated_k_cache_ce0;
reg    updated_k_cache_we0;
reg   [31:0] updated_k_cache_d0;
wire   [31:0] updated_k_cache_q0;
reg   [13:0] updated_v_cache_address0;
reg    updated_v_cache_ce0;
reg    updated_v_cache_we0;
reg   [31:0] updated_v_cache_d0;
wire   [31:0] updated_v_cache_q0;
reg   [6:0] attn_weights_0_address0;
reg    attn_weights_0_ce0;
reg    attn_weights_0_we0;
reg   [31:0] attn_weights_0_d0;
reg   [6:0] softmax_attn_weights_address0;
reg    softmax_attn_weights_ce0;
reg    softmax_attn_weights_we0;
reg   [31:0] softmax_attn_weights_d0;
wire   [31:0] softmax_attn_weights_q0;
reg   [10:0] attn_output_0_address0;
reg    attn_output_0_ce0;
reg    attn_output_0_we0;
reg   [31:0] attn_output_0_d0;
wire   [31:0] attn_output_0_q0;
reg   [10:0] attn_output_2D_address0;
reg    attn_output_2D_ce0;
reg    attn_output_2D_we0;
reg   [31:0] attn_output_2D_d0;
wire   [31:0] attn_output_2D_q0;
reg   [10:0] rms_attn_output_0_address0;
reg    rms_attn_output_0_ce0;
reg    rms_attn_output_0_we0;
reg   [31:0] rms_attn_output_0_d0;
wire   [31:0] rms_attn_output_0_q0;
wire    grp_linear_forward_no_mu_fu_844_ap_start;
wire    grp_linear_forward_no_mu_fu_844_ap_idle;
wire   [7:0] grp_linear_forward_no_mu_fu_844_v79_0_0_0_address0;
wire    grp_linear_forward_no_mu_fu_844_v79_0_0_0_ce0;
reg   [7:0] grp_linear_forward_no_mu_fu_844_v79_0_0_0_q0;
wire   [7:0] grp_linear_forward_no_mu_fu_844_v79_0_0_1_address0;
wire    grp_linear_forward_no_mu_fu_844_v79_0_0_1_ce0;
reg   [7:0] grp_linear_forward_no_mu_fu_844_v79_0_0_1_q0;
wire   [7:0] grp_linear_forward_no_mu_fu_844_v79_0_0_2_address0;
wire    grp_linear_forward_no_mu_fu_844_v79_0_0_2_ce0;
reg   [7:0] grp_linear_forward_no_mu_fu_844_v79_0_0_2_q0;
wire   [7:0] grp_linear_forward_no_mu_fu_844_v79_0_0_3_address0;
wire    grp_linear_forward_no_mu_fu_844_v79_0_0_3_ce0;
reg   [7:0] grp_linear_forward_no_mu_fu_844_v79_0_0_3_q0;
wire   [7:0] grp_linear_forward_no_mu_fu_844_v79_1_0_0_address0;
wire    grp_linear_forward_no_mu_fu_844_v79_1_0_0_ce0;
reg   [7:0] grp_linear_forward_no_mu_fu_844_v79_1_0_0_q0;
wire   [7:0] grp_linear_forward_no_mu_fu_844_v79_1_0_1_address0;
wire    grp_linear_forward_no_mu_fu_844_v79_1_0_1_ce0;
reg   [7:0] grp_linear_forward_no_mu_fu_844_v79_1_0_1_q0;
wire   [7:0] grp_linear_forward_no_mu_fu_844_v79_1_0_2_address0;
wire    grp_linear_forward_no_mu_fu_844_v79_1_0_2_ce0;
reg   [7:0] grp_linear_forward_no_mu_fu_844_v79_1_0_2_q0;
wire   [7:0] grp_linear_forward_no_mu_fu_844_v79_1_0_3_address0;
wire    grp_linear_forward_no_mu_fu_844_v79_1_0_3_ce0;
reg   [7:0] grp_linear_forward_no_mu_fu_844_v79_1_0_3_q0;
wire   [18:0] grp_linear_forward_no_mu_fu_844_v81_0_address0;
wire    grp_linear_forward_no_mu_fu_844_v81_0_ce0;
reg   [7:0] grp_linear_forward_no_mu_fu_844_v81_0_q0;
wire   [18:0] grp_linear_forward_no_mu_fu_844_v81_1_address0;
wire    grp_linear_forward_no_mu_fu_844_v81_1_ce0;
reg   [7:0] grp_linear_forward_no_mu_fu_844_v81_1_q0;
reg   [31:0] grp_linear_forward_no_mu_fu_844_v82_V;
wire   [10:0] grp_linear_forward_no_mu_fu_844_v83_address0;
wire    grp_linear_forward_no_mu_fu_844_v83_ce0;
wire    grp_linear_forward_no_mu_fu_844_v83_we0;
wire   [31:0] grp_linear_forward_no_mu_fu_844_v83_d0;
wire    grp_linear_forward_no_mu_fu_873_ap_start;
wire    grp_linear_forward_no_mu_fu_873_ap_done;
wire    grp_linear_forward_no_mu_fu_873_ap_idle;
wire    grp_linear_forward_no_mu_fu_873_ap_ready;
wire   [7:0] grp_linear_forward_no_mu_fu_873_v79_0_0_0_address0;
wire    grp_linear_forward_no_mu_fu_873_v79_0_0_0_ce0;
wire   [7:0] grp_linear_forward_no_mu_fu_873_v79_0_0_1_address0;
wire    grp_linear_forward_no_mu_fu_873_v79_0_0_1_ce0;
wire   [7:0] grp_linear_forward_no_mu_fu_873_v79_0_0_2_address0;
wire    grp_linear_forward_no_mu_fu_873_v79_0_0_2_ce0;
wire   [7:0] grp_linear_forward_no_mu_fu_873_v79_0_0_3_address0;
wire    grp_linear_forward_no_mu_fu_873_v79_0_0_3_ce0;
wire   [7:0] grp_linear_forward_no_mu_fu_873_v79_1_0_0_address0;
wire    grp_linear_forward_no_mu_fu_873_v79_1_0_0_ce0;
wire   [7:0] grp_linear_forward_no_mu_fu_873_v79_1_0_1_address0;
wire    grp_linear_forward_no_mu_fu_873_v79_1_0_1_ce0;
wire   [7:0] grp_linear_forward_no_mu_fu_873_v79_1_0_2_address0;
wire    grp_linear_forward_no_mu_fu_873_v79_1_0_2_ce0;
wire   [7:0] grp_linear_forward_no_mu_fu_873_v79_1_0_3_address0;
wire    grp_linear_forward_no_mu_fu_873_v79_1_0_3_ce0;
wire   [18:0] grp_linear_forward_no_mu_fu_873_v81_0_address0;
wire    grp_linear_forward_no_mu_fu_873_v81_0_ce0;
wire   [18:0] grp_linear_forward_no_mu_fu_873_v81_1_address0;
wire    grp_linear_forward_no_mu_fu_873_v81_1_ce0;
wire   [10:0] grp_linear_forward_no_mu_fu_873_v83_address0;
wire    grp_linear_forward_no_mu_fu_873_v83_ce0;
wire    grp_linear_forward_no_mu_fu_873_v83_we0;
wire   [31:0] grp_linear_forward_no_mu_fu_873_v83_d0;
wire    grp_softmax_fu_911_ap_start;
wire    grp_softmax_fu_911_ap_done;
wire    grp_softmax_fu_911_ap_idle;
wire    grp_softmax_fu_911_ap_ready;
wire   [6:0] grp_softmax_fu_911_v225_0_address0;
wire    grp_softmax_fu_911_v225_0_ce0;
wire   [6:0] grp_softmax_fu_911_v226_0_address0;
wire    grp_softmax_fu_911_v226_0_ce0;
wire    grp_softmax_fu_911_v226_0_we0;
wire   [31:0] grp_softmax_fu_911_v226_0_d0;
wire    grp_rms_norm_fu_931_ap_start;
wire    grp_rms_norm_fu_931_ap_done;
wire    grp_rms_norm_fu_931_ap_idle;
wire    grp_rms_norm_fu_931_ap_ready;
wire   [10:0] grp_rms_norm_fu_931_v0_address0;
wire    grp_rms_norm_fu_931_v0_ce0;
reg   [31:0] grp_rms_norm_fu_931_v0_q0;
wire   [10:0] grp_rms_norm_fu_931_v1_address0;
wire    grp_rms_norm_fu_931_v1_ce0;
reg   [31:0] grp_rms_norm_fu_931_v1_q0;
wire   [10:0] grp_rms_norm_fu_931_v3_0_address0;
wire    grp_rms_norm_fu_931_v3_0_ce0;
wire    grp_rms_norm_fu_931_v3_0_we0;
wire   [31:0] grp_rms_norm_fu_931_v3_0_d0;
wire    grp_quantize_activation_fu_955_ap_start;
wire    grp_quantize_activation_fu_955_ap_idle;
wire   [10:0] grp_quantize_activation_fu_955_v22_0_address0;
wire    grp_quantize_activation_fu_955_v22_0_ce0;
reg   [31:0] grp_quantize_activation_fu_955_v22_0_q0;
wire   [10:0] grp_quantize_activation_fu_955_v24_0_address0;
wire    grp_quantize_activation_fu_955_v24_0_ce0;
wire    grp_quantize_activation_fu_955_v24_0_we0;
wire   [7:0] grp_quantize_activation_fu_955_v24_0_d0;
wire    grp_apply_rotary_pos_emb_fu_963_ap_start;
wire    grp_apply_rotary_pos_emb_fu_963_ap_done;
wire    grp_apply_rotary_pos_emb_fu_963_ap_idle;
wire    grp_apply_rotary_pos_emb_fu_963_ap_ready;
wire   [9:0] grp_apply_rotary_pos_emb_fu_963_v163_address0;
wire    grp_apply_rotary_pos_emb_fu_963_v163_ce0;
wire   [9:0] grp_apply_rotary_pos_emb_fu_963_v164_address0;
wire    grp_apply_rotary_pos_emb_fu_963_v164_ce0;
wire   [10:0] grp_apply_rotary_pos_emb_fu_963_v165_0_address0;
wire    grp_apply_rotary_pos_emb_fu_963_v165_0_ce0;
wire    grp_apply_rotary_pos_emb_fu_963_v165_0_we0;
wire   [31:0] grp_apply_rotary_pos_emb_fu_963_v165_0_d0;
wire   [10:0] grp_apply_rotary_pos_emb_fu_963_v166_0_address0;
wire    grp_apply_rotary_pos_emb_fu_963_v166_0_ce0;
wire    grp_apply_rotary_pos_emb_fu_963_v166_0_we0;
wire   [31:0] grp_apply_rotary_pos_emb_fu_963_v166_0_d0;
wire   [10:0] grp_apply_rotary_pos_emb_fu_963_q_proj_0_address0;
wire    grp_apply_rotary_pos_emb_fu_963_q_proj_0_ce0;
wire   [10:0] grp_apply_rotary_pos_emb_fu_963_q_proj_0_address1;
wire    grp_apply_rotary_pos_emb_fu_963_q_proj_0_ce1;
wire   [10:0] grp_apply_rotary_pos_emb_fu_963_k_proj_0_address0;
wire    grp_apply_rotary_pos_emb_fu_963_k_proj_0_ce0;
wire   [10:0] grp_apply_rotary_pos_emb_fu_963_k_proj_0_address1;
wire    grp_apply_rotary_pos_emb_fu_963_k_proj_0_ce1;
wire    grp_GEMM_3D_float_fu_977_ap_start;
wire    grp_GEMM_3D_float_fu_977_ap_done;
wire    grp_GEMM_3D_float_fu_977_ap_idle;
wire    grp_GEMM_3D_float_fu_977_ap_ready;
wire   [10:0] grp_GEMM_3D_float_fu_977_v210_0_address0;
wire    grp_GEMM_3D_float_fu_977_v210_0_ce0;
wire   [6:0] grp_GEMM_3D_float_fu_977_v212_0_address0;
wire    grp_GEMM_3D_float_fu_977_v212_0_ce0;
wire    grp_GEMM_3D_float_fu_977_v212_0_we0;
wire   [31:0] grp_GEMM_3D_float_fu_977_v212_0_d0;
wire   [13:0] grp_GEMM_3D_float_fu_977_k_proj_transposed_address0;
wire    grp_GEMM_3D_float_fu_977_k_proj_transposed_ce0;
wire    grp_GEMM_3D_float2_fu_985_ap_start;
wire    grp_GEMM_3D_float2_fu_985_ap_done;
wire    grp_GEMM_3D_float2_fu_985_ap_idle;
wire    grp_GEMM_3D_float2_fu_985_ap_ready;
wire   [6:0] grp_GEMM_3D_float2_fu_985_v252_0_address0;
wire    grp_GEMM_3D_float2_fu_985_v252_0_ce0;
wire   [13:0] grp_GEMM_3D_float2_fu_985_v253_address0;
wire    grp_GEMM_3D_float2_fu_985_v253_ce0;
wire   [10:0] grp_GEMM_3D_float2_fu_985_v254_0_address0;
wire    grp_GEMM_3D_float2_fu_985_v254_0_ce0;
wire    grp_GEMM_3D_float2_fu_985_v254_0_we0;
wire   [31:0] grp_GEMM_3D_float2_fu_985_v254_0_d0;
wire    grp_cache_update_fu_992_ap_start;
wire    grp_cache_update_fu_992_ap_done;
wire    grp_cache_update_fu_992_ap_idle;
wire    grp_cache_update_fu_992_ap_ready;
wire   [12:0] grp_cache_update_fu_992_v193_address0;
wire    grp_cache_update_fu_992_v193_ce0;
reg   [31:0] grp_cache_update_fu_992_v193_q0;
wire   [10:0] grp_cache_update_fu_992_v194_0_address0;
wire    grp_cache_update_fu_992_v194_0_ce0;
reg   [31:0] grp_cache_update_fu_992_v194_0_q0;
wire   [13:0] grp_cache_update_fu_992_v195_address0;
wire    grp_cache_update_fu_992_v195_ce0;
wire    grp_cache_update_fu_992_v195_we0;
wire   [31:0] grp_cache_update_fu_992_v195_d0;
wire    grp_transpose_last_two_d_fu_1002_ap_start;
wire    grp_transpose_last_two_d_fu_1002_ap_done;
wire    grp_transpose_last_two_d_fu_1002_ap_idle;
wire    grp_transpose_last_two_d_fu_1002_ap_ready;
wire   [13:0] grp_transpose_last_two_d_fu_1002_v204_address0;
wire    grp_transpose_last_two_d_fu_1002_v204_ce0;
wire   [13:0] grp_transpose_last_two_d_fu_1002_v205_address0;
wire    grp_transpose_last_two_d_fu_1002_v205_ce0;
wire    grp_transpose_last_two_d_fu_1002_v205_we0;
wire   [31:0] grp_transpose_last_two_d_fu_1002_v205_d0;
wire    grp_reshape_2D_to_3D_fu_1009_ap_start;
wire    grp_reshape_2D_to_3D_fu_1009_ap_idle;
wire   [10:0] grp_reshape_2D_to_3D_fu_1009_v147_address0;
wire    grp_reshape_2D_to_3D_fu_1009_v147_ce0;
reg   [31:0] grp_reshape_2D_to_3D_fu_1009_v147_q0;
wire   [10:0] grp_reshape_2D_to_3D_fu_1009_v148_0_address0;
wire    grp_reshape_2D_to_3D_fu_1009_v148_0_ce0;
wire    grp_reshape_2D_to_3D_fu_1009_v148_0_we0;
wire   [31:0] grp_reshape_2D_to_3D_fu_1009_v148_0_d0;
wire    grp_reshape_2D_to_3D_fu_1017_ap_start;
wire    grp_reshape_2D_to_3D_fu_1017_ap_idle;
wire   [10:0] grp_reshape_2D_to_3D_fu_1017_v147_address0;
wire    grp_reshape_2D_to_3D_fu_1017_v147_ce0;
wire   [10:0] grp_reshape_2D_to_3D_fu_1017_v148_0_address0;
wire    grp_reshape_2D_to_3D_fu_1017_v148_0_ce0;
wire    grp_reshape_2D_to_3D_fu_1017_v148_0_we0;
wire   [31:0] grp_reshape_2D_to_3D_fu_1017_v148_0_d0;
reg   [10:0] v284_0_0_reg_536;
wire   [0:0] icmp_ln480_fu_1052_p2;
reg   [10:0] v295_0_0_reg_547;
wire   [0:0] icmp_ln502_fu_1069_p2;
reg   [10:0] v298_0_0_reg_558;
wire   [0:0] icmp_ln508_fu_1086_p2;
reg   [10:0] v301_0_0_reg_569;
wire   [0:0] icmp_ln514_fu_1103_p2;
reg   [4:0] v334_0_reg_580;
wire   [0:0] icmp_ln584_fu_2266_p2;
reg   [6:0] v336_0_0_reg_591;
reg   [4:0] v338_0_reg_602;
wire   [0:0] icmp_ln592_fu_2330_p2;
reg   [6:0] v340_0_0_reg_613;
reg   [4:0] v342_0_reg_624;
wire    ap_CS_fsm_state21;
reg   [2:0] v343_0_reg_635;
wire   [0:0] icmp_ln601_fu_2449_p2;
reg   [6:0] v344_0_reg_646;
reg   [4:0] v346_0_reg_657;
reg   [2:0] v347_0_reg_668;
wire   [0:0] icmp_ln609_fu_2568_p2;
reg   [6:0] v348_0_reg_679;
reg   [4:0] v354_0_reg_690;
wire    ap_CS_fsm_state30;
reg    ap_block_state30_on_subcall_done;
wire   [0:0] icmp_ln628_fu_2632_p2;
reg   [2:0] v356_0_0_reg_701;
reg   [4:0] i11_0_reg_712;
wire    ap_CS_fsm_state33;
reg   [2:0] k10_0_0_reg_723;
wire    ap_CS_fsm_state53;
reg   [4:0] h6_0_reg_734;
wire    ap_CS_fsm_state61;
reg   [4:0] v374_0_reg_745;
wire   [0:0] icmp_ln666_fu_2803_p2;
reg   [2:0] v376_0_0_reg_756;
reg   [4:0] v378_0_reg_767;
wire    ap_CS_fsm_state64;
wire   [0:0] icmp_ln675_fu_2867_p2;
reg   [6:0] v380_0_0_reg_778;
reg   [10:0] v383_0_0_reg_789;
wire   [0:0] icmp_ln683_fu_2893_p2;
wire    ap_CS_fsm_state67;
reg   [4:0] h7_0_0_reg_800;
reg   [6:0] d4_0_0_reg_811;
wire    ap_CS_fsm_state71;
reg   [10:0] v390_0_0_reg_822;
wire   [0:0] icmp_ln697_fu_3021_p2;
reg   [10:0] v408_0_0_reg_833;
wire   [0:0] icmp_ln736_fu_3038_p2;
reg    grp_linear_forward_no_mu_fu_844_ap_start_reg;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state77;
reg    grp_linear_forward_no_mu_fu_873_ap_start_reg;
reg    grp_softmax_fu_911_ap_start_reg;
reg    grp_rms_norm_fu_931_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state73;
reg    grp_quantize_activation_fu_955_ap_start_reg;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state74;
reg    grp_apply_rotary_pos_emb_fu_963_ap_start_reg;
reg    grp_GEMM_3D_float_fu_977_ap_start_reg;
reg    grp_GEMM_3D_float2_fu_985_ap_start_reg;
reg    grp_cache_update_fu_992_ap_start_reg;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state28;
reg    grp_transpose_last_two_d_fu_1002_ap_start_reg;
reg    grp_reshape_2D_to_3D_fu_1009_ap_start_reg;
reg    grp_reshape_2D_to_3D_fu_1017_ap_start_reg;
wire   [63:0] zext_ln481_fu_1064_p1;
wire   [63:0] zext_ln503_fu_1081_p1;
wire   [63:0] zext_ln509_fu_1098_p1;
wire   [63:0] zext_ln515_fu_1115_p1;
wire  signed [63:0] sext_ln585_fu_2287_p1;
wire  signed [63:0] sext_ln593_fu_2351_p1;
wire   [63:0] zext_ln602_4_fu_2470_p1;
wire   [63:0] zext_ln610_4_fu_2589_p1;
wire  signed [63:0] sext_ln629_fu_2653_p1;
wire  signed [63:0] sext_ln639_fu_2717_p1;
wire  signed [63:0] sext_ln657_fu_2760_p1;
wire  signed [63:0] sext_ln667_fu_2824_p1;
wire  signed [63:0] sext_ln676_fu_2888_p1;
wire   [63:0] zext_ln684_fu_2905_p1;
wire  signed [63:0] sext_ln690_fu_3003_p1;
wire   [63:0] zext_ln691_fu_3016_p1;
wire   [63:0] zext_ln698_fu_3033_p1;
wire   [63:0] zext_ln737_fu_3050_p1;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state37;
reg   [31:0] grp_fu_1034_p0;
wire   [63:0] grp_fu_1034_p1;
wire   [63:0] ireg_V_fu_1120_p1;
wire   [10:0] exp_tmp_V_fu_1136_p4;
wire   [51:0] trunc_ln565_fu_1150_p1;
wire   [52:0] tmp_fu_1154_p3;
wire   [53:0] p_Result_59_fu_1162_p1;
wire   [0:0] p_Result_s_fu_1128_p3;
wire   [53:0] man_V_1_fu_1166_p2;
wire   [62:0] trunc_ln556_fu_1124_p1;
wire   [11:0] zext_ln461_fu_1146_p1;
wire   [11:0] F2_fu_1186_p2;
wire   [11:0] add_ln581_fu_1198_p2;
wire   [11:0] sub_ln581_fu_1204_p2;
wire  signed [31:0] sext_ln581_fu_1238_p1;
wire   [53:0] zext_ln586_fu_1251_p1;
wire   [53:0] ashr_ln586_fu_1255_p2;
wire   [31:0] bitcast_ln696_fu_1264_p1;
wire   [0:0] tmp_52_fu_1267_p3;
wire   [0:0] xor_ln571_fu_1288_p2;
wire   [0:0] or_ln582_fu_1298_p2;
wire   [0:0] xor_ln582_fu_1302_p2;
wire   [0:0] icmp_ln585_fu_1241_p2;
wire   [0:0] and_ln581_fu_1308_p2;
wire   [0:0] xor_ln585_fu_1313_p2;
wire   [0:0] or_ln581_fu_1331_p2;
wire   [0:0] icmp_ln603_fu_1246_p2;
wire   [0:0] xor_ln581_fu_1336_p2;
wire   [0:0] and_ln603_fu_1342_p2;
wire   [31:0] shl_ln604_fu_1283_p2;
wire   [31:0] trunc_ln586_fu_1260_p1;
wire   [0:0] and_ln585_2_fu_1325_p2;
wire   [0:0] and_ln585_fu_1319_p2;
wire   [31:0] select_ln588_fu_1275_p3;
wire   [0:0] and_ln582_fu_1293_p2;
wire   [0:0] or_ln603_fu_1356_p2;
wire   [31:0] select_ln603_fu_1348_p3;
wire   [31:0] select_ln603_4_fu_1362_p3;
wire   [0:0] or_ln603_3_fu_1369_p2;
wire   [0:0] or_ln603_4_fu_1383_p2;
wire   [31:0] select_ln603_5_fu_1375_p3;
wire   [63:0] ireg_V_1_fu_1397_p1;
wire   [10:0] exp_tmp_V_1_fu_1413_p4;
wire   [51:0] trunc_ln565_1_fu_1427_p1;
wire   [52:0] tmp_s_fu_1431_p3;
wire   [53:0] p_Result_61_fu_1439_p1;
wire   [0:0] p_Result_60_fu_1405_p3;
wire   [53:0] man_V_4_fu_1443_p2;
wire   [62:0] trunc_ln556_1_fu_1401_p1;
wire   [11:0] zext_ln461_1_fu_1423_p1;
wire   [11:0] F2_1_fu_1463_p2;
wire   [11:0] add_ln581_1_fu_1475_p2;
wire   [11:0] sub_ln581_1_fu_1481_p2;
wire   [63:0] grp_fu_1037_p1;
wire   [63:0] ireg_V_2_fu_1515_p1;
wire   [10:0] exp_tmp_V_2_fu_1531_p4;
wire   [51:0] trunc_ln565_2_fu_1545_p1;
wire   [52:0] tmp_8_fu_1549_p3;
wire   [53:0] p_Result_63_fu_1557_p1;
wire   [0:0] p_Result_62_fu_1523_p3;
wire   [53:0] man_V_7_fu_1561_p2;
wire   [62:0] trunc_ln556_2_fu_1519_p1;
wire   [11:0] zext_ln461_2_fu_1541_p1;
wire   [11:0] F2_2_fu_1581_p2;
wire   [11:0] add_ln581_2_fu_1593_p2;
wire   [11:0] sub_ln581_2_fu_1599_p2;
wire  signed [31:0] sext_ln581_1_fu_1633_p1;
wire   [53:0] zext_ln586_1_fu_1646_p1;
wire   [53:0] ashr_ln586_1_fu_1650_p2;
wire   [31:0] bitcast_ln696_3_fu_1659_p1;
wire   [0:0] tmp_57_fu_1662_p3;
wire   [0:0] xor_ln571_1_fu_1683_p2;
wire   [0:0] or_ln582_1_fu_1693_p2;
wire   [0:0] xor_ln582_1_fu_1697_p2;
wire   [0:0] icmp_ln585_1_fu_1636_p2;
wire   [0:0] and_ln581_1_fu_1703_p2;
wire   [0:0] xor_ln585_1_fu_1708_p2;
wire   [0:0] or_ln581_1_fu_1726_p2;
wire   [0:0] icmp_ln603_1_fu_1641_p2;
wire   [0:0] xor_ln581_1_fu_1731_p2;
wire   [0:0] and_ln603_1_fu_1737_p2;
wire   [31:0] shl_ln604_1_fu_1678_p2;
wire   [31:0] trunc_ln586_1_fu_1655_p1;
wire   [0:0] and_ln585_4_fu_1720_p2;
wire   [0:0] and_ln585_3_fu_1714_p2;
wire   [31:0] select_ln588_1_fu_1670_p3;
wire   [0:0] and_ln582_1_fu_1688_p2;
wire   [0:0] or_ln603_5_fu_1751_p2;
wire   [31:0] select_ln603_7_fu_1743_p3;
wire   [31:0] select_ln603_8_fu_1757_p3;
wire   [0:0] or_ln603_6_fu_1764_p2;
wire   [0:0] or_ln603_7_fu_1778_p2;
wire   [31:0] select_ln603_9_fu_1770_p3;
wire  signed [31:0] sext_ln581_2_fu_1792_p1;
wire   [53:0] zext_ln586_2_fu_1805_p1;
wire   [53:0] ashr_ln586_2_fu_1809_p2;
wire   [31:0] bitcast_ln696_5_fu_1818_p1;
wire   [0:0] tmp_70_fu_1821_p3;
wire   [0:0] xor_ln571_2_fu_1842_p2;
wire   [0:0] or_ln582_2_fu_1852_p2;
wire   [0:0] xor_ln582_2_fu_1856_p2;
wire   [0:0] icmp_ln585_2_fu_1795_p2;
wire   [0:0] and_ln581_2_fu_1862_p2;
wire   [0:0] xor_ln585_2_fu_1867_p2;
wire   [0:0] or_ln581_2_fu_1885_p2;
wire   [0:0] icmp_ln603_2_fu_1800_p2;
wire   [0:0] xor_ln581_2_fu_1890_p2;
wire   [0:0] and_ln603_2_fu_1896_p2;
wire   [31:0] shl_ln604_2_fu_1837_p2;
wire   [31:0] trunc_ln586_2_fu_1814_p1;
wire   [0:0] and_ln585_6_fu_1879_p2;
wire   [0:0] and_ln585_5_fu_1873_p2;
wire   [31:0] select_ln588_2_fu_1829_p3;
wire   [0:0] and_ln582_2_fu_1847_p2;
wire   [0:0] or_ln603_8_fu_1910_p2;
wire   [31:0] select_ln603_11_fu_1902_p3;
wire   [31:0] select_ln603_12_fu_1916_p3;
wire   [0:0] or_ln603_9_fu_1923_p2;
wire   [0:0] or_ln603_10_fu_1937_p2;
wire   [31:0] select_ln603_13_fu_1929_p3;
wire   [63:0] ireg_V_3_fu_1951_p1;
wire   [10:0] exp_tmp_V_3_fu_1967_p4;
wire   [51:0] trunc_ln565_3_fu_1981_p1;
wire   [52:0] tmp_9_fu_1985_p3;
wire   [53:0] p_Result_65_fu_1993_p1;
wire   [0:0] p_Result_64_fu_1959_p3;
wire   [53:0] man_V_10_fu_1997_p2;
wire   [62:0] trunc_ln556_3_fu_1955_p1;
wire   [11:0] zext_ln461_3_fu_1977_p1;
wire   [11:0] F2_3_fu_2017_p2;
wire   [11:0] add_ln581_3_fu_2029_p2;
wire   [11:0] sub_ln581_3_fu_2035_p2;
wire  signed [31:0] sext_ln581_3_fu_2069_p1;
wire   [53:0] zext_ln586_3_fu_2082_p1;
wire   [53:0] ashr_ln586_3_fu_2086_p2;
wire   [31:0] bitcast_ln696_7_fu_2095_p1;
wire   [0:0] tmp_73_fu_2098_p3;
wire   [0:0] xor_ln571_3_fu_2119_p2;
wire   [0:0] or_ln582_3_fu_2129_p2;
wire   [0:0] xor_ln582_3_fu_2133_p2;
wire   [0:0] icmp_ln585_3_fu_2072_p2;
wire   [0:0] and_ln581_3_fu_2139_p2;
wire   [0:0] xor_ln585_3_fu_2144_p2;
wire   [0:0] or_ln581_3_fu_2162_p2;
wire   [0:0] icmp_ln603_3_fu_2077_p2;
wire   [0:0] xor_ln581_3_fu_2167_p2;
wire   [0:0] and_ln603_3_fu_2173_p2;
wire   [31:0] shl_ln604_3_fu_2114_p2;
wire   [31:0] trunc_ln586_3_fu_2091_p1;
wire   [0:0] and_ln585_8_fu_2156_p2;
wire   [0:0] and_ln585_7_fu_2150_p2;
wire   [31:0] select_ln588_3_fu_2106_p3;
wire   [0:0] and_ln582_3_fu_2124_p2;
wire   [0:0] or_ln603_11_fu_2187_p2;
wire   [31:0] select_ln603_15_fu_2179_p3;
wire   [31:0] select_ln603_16_fu_2193_p3;
wire   [0:0] or_ln603_12_fu_2200_p2;
wire   [0:0] or_ln603_13_fu_2214_p2;
wire   [31:0] select_ln603_17_fu_2206_p3;
wire   [9:0] tmp_29_fu_2248_p3;
wire   [11:0] tmp_28_fu_2240_p3;
wire   [11:0] zext_ln585_fu_2256_p1;
wire   [11:0] zext_ln585_1_fu_2278_p1;
wire   [11:0] add_ln585_fu_2282_p2;
wire   [9:0] tmp_31_fu_2312_p3;
wire   [11:0] tmp_30_fu_2304_p3;
wire   [11:0] zext_ln593_fu_2320_p1;
wire   [11:0] zext_ln593_1_fu_2342_p1;
wire   [11:0] add_ln593_fu_2346_p2;
wire   [7:0] tmp_32_fu_2368_p3;
wire   [5:0] tmp_33_fu_2380_p3;
wire   [8:0] zext_ln602_fu_2376_p1;
wire   [8:0] zext_ln602_1_fu_2388_p1;
wire   [8:0] sub_ln602_fu_2392_p2;
wire   [9:0] zext_ln602_2_fu_2414_p1;
wire   [9:0] add_ln602_fu_2418_p2;
wire   [7:0] trunc_ln602_fu_2423_p1;
wire   [14:0] p_shl8_cast_fu_2427_p3;
wire   [14:0] p_shl9_cast_fu_2435_p3;
wire   [14:0] zext_ln602_3_fu_2461_p1;
wire   [14:0] add_ln602_1_fu_2465_p2;
wire   [7:0] tmp_34_fu_2487_p3;
wire   [5:0] tmp_35_fu_2499_p3;
wire   [8:0] zext_ln610_fu_2495_p1;
wire   [8:0] zext_ln610_1_fu_2507_p1;
wire   [8:0] sub_ln610_fu_2511_p2;
wire   [9:0] zext_ln610_2_fu_2533_p1;
wire   [9:0] add_ln610_fu_2537_p2;
wire   [7:0] trunc_ln610_fu_2542_p1;
wire   [14:0] p_shl_cast_fu_2546_p3;
wire   [14:0] p_shl2_cast_fu_2554_p3;
wire   [14:0] zext_ln610_3_fu_2580_p1;
wire   [14:0] add_ln610_1_fu_2584_p2;
wire   [5:0] tmp_37_fu_2614_p3;
wire   [7:0] tmp_36_fu_2606_p3;
wire   [7:0] zext_ln629_fu_2622_p1;
wire   [7:0] zext_ln629_1_fu_2644_p1;
wire   [7:0] add_ln629_fu_2648_p2;
wire   [5:0] tmp_39_fu_2678_p3;
wire   [7:0] tmp_38_fu_2670_p3;
wire   [7:0] zext_ln639_fu_2686_p1;
wire   [7:0] zext_ln639_1_fu_2708_p1;
wire   [7:0] add_ln639_fu_2712_p2;
wire   [5:0] tmp_41_fu_2742_p3;
wire   [7:0] tmp_40_fu_2734_p3;
wire   [7:0] zext_ln657_fu_2750_p1;
wire   [7:0] sub_ln657_fu_2754_p2;
wire   [5:0] tmp_44_fu_2785_p3;
wire   [7:0] tmp_42_fu_2777_p3;
wire   [7:0] zext_ln667_fu_2793_p1;
wire   [7:0] zext_ln667_1_fu_2815_p1;
wire   [7:0] add_ln667_fu_2819_p2;
wire   [9:0] tmp_46_fu_2849_p3;
wire   [11:0] tmp_45_fu_2841_p3;
wire   [11:0] zext_ln676_fu_2857_p1;
wire   [11:0] zext_ln676_1_fu_2879_p1;
wire   [11:0] add_ln676_fu_2883_p2;
wire   [9:0] tmp_48_fu_2930_p3;
wire   [11:0] tmp_47_fu_2922_p3;
wire   [11:0] zext_ln690_fu_2938_p1;
wire   [3:0] trunc_ln691_fu_2948_p1;
wire   [10:0] shl_ln_fu_2952_p3;
wire   [8:0] shl_ln691_1_fu_2964_p3;
wire   [11:0] zext_ln691_1_fu_2960_p1;
wire   [11:0] zext_ln691_2_fu_2972_p1;
wire   [11:0] zext_ln689_fu_2982_p1;
wire   [11:0] add_ln690_fu_2998_p2;
wire  signed [31:0] sext_ln691_fu_3013_p1;
reg    grp_fu_1034_ce;
reg    ap_block_state14_on_subcall_done;
reg   [76:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 77'd1;
#0 grp_linear_forward_no_mu_fu_844_ap_start_reg = 1'b0;
#0 grp_linear_forward_no_mu_fu_873_ap_start_reg = 1'b0;
#0 grp_softmax_fu_911_ap_start_reg = 1'b0;
#0 grp_rms_norm_fu_931_ap_start_reg = 1'b0;
#0 grp_quantize_activation_fu_955_ap_start_reg = 1'b0;
#0 grp_apply_rotary_pos_emb_fu_963_ap_start_reg = 1'b0;
#0 grp_GEMM_3D_float_fu_977_ap_start_reg = 1'b0;
#0 grp_GEMM_3D_float2_fu_985_ap_start_reg = 1'b0;
#0 grp_cache_update_fu_992_ap_start_reg = 1'b0;
#0 grp_transpose_last_two_d_fu_1002_ap_start_reg = 1'b0;
#0 grp_reshape_2D_to_3D_fu_1009_ap_start_reg = 1'b0;
#0 grp_reshape_2D_to_3D_fu_1017_ap_start_reg = 1'b0;
end

attention_quantizzec #(
    .DataWidth( 8 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
quantized_hidden_sta_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_quantize_activation_fu_955_v24_0_address0),
    .ce0(quantized_hidden_sta_8_ce0),
    .we0(quantized_hidden_sta_8_we0),
    .d0(grp_quantize_activation_fu_955_v24_0_d0)
);

attention_quantizAem #(
    .DataWidth( 8 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
quantized_hidden_sta_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(quantized_hidden_sta_7_address0),
    .ce0(quantized_hidden_sta_7_ce0),
    .q0(quantized_hidden_sta_7_q0)
);

attention_quantizAem #(
    .DataWidth( 8 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
quantized_hidden_sta_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(quantized_hidden_sta_6_address0),
    .ce0(quantized_hidden_sta_6_ce0),
    .q0(quantized_hidden_sta_6_q0)
);

attention_quantizAem #(
    .DataWidth( 8 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
quantized_hidden_sta_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(quantized_hidden_sta_5_address0),
    .ce0(quantized_hidden_sta_5_ce0),
    .q0(quantized_hidden_sta_5_q0)
);

attention_quantizAem #(
    .DataWidth( 8 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
quantized_hidden_sta_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(quantized_hidden_sta_4_address0),
    .ce0(quantized_hidden_sta_4_ce0),
    .q0(quantized_hidden_sta_4_q0)
);

attention_quantizAem #(
    .DataWidth( 8 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
quantized_hidden_sta_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(quantized_hidden_sta_3_address0),
    .ce0(quantized_hidden_sta_3_ce0),
    .q0(quantized_hidden_sta_3_q0)
);

attention_quantizAem #(
    .DataWidth( 8 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
quantized_hidden_sta_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(quantized_hidden_sta_2_address0),
    .ce0(quantized_hidden_sta_2_ce0),
    .q0(quantized_hidden_sta_2_q0)
);

attention_quantizAem #(
    .DataWidth( 8 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
quantized_hidden_sta_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(quantized_hidden_sta_1_address0),
    .ce0(quantized_hidden_sta_1_ce0),
    .q0(quantized_hidden_sta_1_q0)
);

attention_quantizAem #(
    .DataWidth( 8 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
quantized_hidden_sta_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(quantized_hidden_sta_address0),
    .ce0(quantized_hidden_sta_ce0),
    .q0(quantized_hidden_sta_q0)
);

attention_q_proj_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
q_proj_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(q_proj_0_address0),
    .ce0(q_proj_0_ce0),
    .we0(q_proj_0_we0),
    .d0(grp_reshape_2D_to_3D_fu_1009_v148_0_d0),
    .q0(q_proj_0_q0),
    .address1(grp_apply_rotary_pos_emb_fu_963_q_proj_0_address1),
    .ce1(q_proj_0_ce1),
    .q1(q_proj_0_q1)
);

attention_q_proj_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
k_proj_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_proj_0_address0),
    .ce0(k_proj_0_ce0),
    .we0(k_proj_0_we0),
    .d0(grp_reshape_2D_to_3D_fu_1009_v148_0_d0),
    .q0(k_proj_0_q0),
    .address1(grp_apply_rotary_pos_emb_fu_963_k_proj_0_address1),
    .ce1(k_proj_0_ce1),
    .q1(k_proj_0_q1)
);

attention_v_proj_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
v_proj_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(v_proj_0_address0),
    .ce0(v_proj_0_ce0),
    .we0(v_proj_0_we0),
    .d0(grp_reshape_2D_to_3D_fu_1017_v148_0_d0),
    .q0(v_proj_0_q0)
);

attention_k_proj_IfE #(
    .DataWidth( 32 ),
    .AddressRange( 9216 ),
    .AddressWidth( 14 ))
k_proj_transposed_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_proj_transposed_address0),
    .ce0(k_proj_transposed_ce0),
    .we0(k_proj_transposed_we0),
    .d0(grp_transpose_last_two_d_fu_1002_v205_d0),
    .q0(k_proj_transposed_q0)
);

attention_quantizzec #(
    .DataWidth( 8 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
quantized_final_outp_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_quantize_activation_fu_955_v24_0_address0),
    .ce0(quantized_final_outp_8_ce0),
    .we0(quantized_final_outp_8_we0),
    .d0(grp_quantize_activation_fu_955_v24_0_d0)
);

attention_quantizAem #(
    .DataWidth( 8 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
quantized_final_outp_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_linear_forward_no_mu_fu_844_v79_0_0_0_address0),
    .ce0(quantized_final_outp_7_ce0),
    .q0(quantized_final_outp_7_q0)
);

attention_quantizAem #(
    .DataWidth( 8 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
quantized_final_outp_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_linear_forward_no_mu_fu_844_v79_0_0_1_address0),
    .ce0(quantized_final_outp_6_ce0),
    .q0(quantized_final_outp_6_q0)
);

attention_quantizAem #(
    .DataWidth( 8 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
quantized_final_outp_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_linear_forward_no_mu_fu_844_v79_0_0_2_address0),
    .ce0(quantized_final_outp_5_ce0),
    .q0(quantized_final_outp_5_q0)
);

attention_quantizAem #(
    .DataWidth( 8 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
quantized_final_outp_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_linear_forward_no_mu_fu_844_v79_0_0_3_address0),
    .ce0(quantized_final_outp_4_ce0),
    .q0(quantized_final_outp_4_q0)
);

attention_quantizAem #(
    .DataWidth( 8 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
quantized_final_outp_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_linear_forward_no_mu_fu_844_v79_1_0_0_address0),
    .ce0(quantized_final_outp_3_ce0),
    .q0(quantized_final_outp_3_q0)
);

attention_quantizAem #(
    .DataWidth( 8 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
quantized_final_outp_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_linear_forward_no_mu_fu_844_v79_1_0_1_address0),
    .ce0(quantized_final_outp_2_ce0),
    .q0(quantized_final_outp_2_q0)
);

attention_quantizAem #(
    .DataWidth( 8 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
quantized_final_outp_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_linear_forward_no_mu_fu_844_v79_1_0_2_address0),
    .ce0(quantized_final_outp_1_ce0),
    .q0(quantized_final_outp_1_q0)
);

attention_quantizAem #(
    .DataWidth( 8 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
quantized_final_outp_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_linear_forward_no_mu_fu_844_v79_1_0_3_address0),
    .ce0(quantized_final_outp_ce0),
    .q0(quantized_final_outp_q0)
);

attention_rms_hidShg #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
rms_hidden_states_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rms_hidden_states_0_address0),
    .ce0(rms_hidden_states_0_ce0),
    .we0(rms_hidden_states_0_we0),
    .d0(rms_hidden_states_0_d0),
    .q0(rms_hidden_states_0_q0)
);

attention_rms_hidShg #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
q_proj_re_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(q_proj_re_address0),
    .ce0(q_proj_re_ce0),
    .we0(q_proj_re_we0),
    .d0(q_proj_re_d0),
    .q0(q_proj_re_q0)
);

attention_rms_hidShg #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
k_proj_re_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_proj_re_address0),
    .ce0(k_proj_re_ce0),
    .we0(k_proj_re_we0),
    .d0(k_proj_re_d0),
    .q0(k_proj_re_q0)
);

attention_rms_hidShg #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
v_proj_re_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(v_proj_re_address0),
    .ce0(v_proj_re_ce0),
    .we0(v_proj_re_we0),
    .d0(v_proj_re_d0),
    .q0(v_proj_re_q0)
);

attention_rms_hidShg #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
q_embed_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(q_embed_0_address0),
    .ce0(q_embed_0_ce0),
    .we0(q_embed_0_we0),
    .d0(q_embed_0_d0),
    .q0(q_embed_0_q0)
);

attention_rms_hidShg #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
k_embed_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_embed_0_address0),
    .ce0(k_embed_0_ce0),
    .we0(k_embed_0_we0),
    .d0(k_embed_0_d0),
    .q0(k_embed_0_q0)
);

attention_updatedThq #(
    .DataWidth( 32 ),
    .AddressRange( 9216 ),
    .AddressWidth( 14 ))
updated_k_cache_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(updated_k_cache_address0),
    .ce0(updated_k_cache_ce0),
    .we0(updated_k_cache_we0),
    .d0(updated_k_cache_d0),
    .q0(updated_k_cache_q0)
);

attention_updatedThq #(
    .DataWidth( 32 ),
    .AddressRange( 9216 ),
    .AddressWidth( 14 ))
updated_v_cache_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(updated_v_cache_address0),
    .ce0(updated_v_cache_ce0),
    .we0(updated_v_cache_we0),
    .d0(updated_v_cache_d0),
    .q0(updated_v_cache_q0)
);

attention_attn_weVhK #(
    .DataWidth( 32 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
attn_weights_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(attn_weights_0_address0),
    .ce0(attn_weights_0_ce0),
    .we0(attn_weights_0_we0),
    .d0(attn_weights_0_d0),
    .q0(attn_weights_0_q0)
);

attention_attn_weVhK #(
    .DataWidth( 32 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
softmax_attn_weights_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(softmax_attn_weights_address0),
    .ce0(softmax_attn_weights_ce0),
    .we0(softmax_attn_weights_we0),
    .d0(softmax_attn_weights_d0),
    .q0(softmax_attn_weights_q0)
);

attention_rms_hidShg #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
attn_output_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(attn_output_0_address0),
    .ce0(attn_output_0_ce0),
    .we0(attn_output_0_we0),
    .d0(attn_output_0_d0),
    .q0(attn_output_0_q0)
);

attention_rms_hidShg #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
attn_output_2D_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(attn_output_2D_address0),
    .ce0(attn_output_2D_ce0),
    .we0(attn_output_2D_we0),
    .d0(attn_output_2D_d0),
    .q0(attn_output_2D_q0)
);

attention_rms_hidShg #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
rms_attn_output_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rms_attn_output_0_address0),
    .ce0(rms_attn_output_0_ce0),
    .we0(rms_attn_output_0_we0),
    .d0(rms_attn_output_0_d0),
    .q0(rms_attn_output_0_q0)
);

linear_forward_no_mu grp_linear_forward_no_mu_fu_844(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_linear_forward_no_mu_fu_844_ap_start),
    .ap_done(grp_linear_forward_no_mu_fu_844_ap_done),
    .ap_idle(grp_linear_forward_no_mu_fu_844_ap_idle),
    .ap_ready(grp_linear_forward_no_mu_fu_844_ap_ready),
    .v79_0_0_0_address0(grp_linear_forward_no_mu_fu_844_v79_0_0_0_address0),
    .v79_0_0_0_ce0(grp_linear_forward_no_mu_fu_844_v79_0_0_0_ce0),
    .v79_0_0_0_q0(grp_linear_forward_no_mu_fu_844_v79_0_0_0_q0),
    .v79_0_0_1_address0(grp_linear_forward_no_mu_fu_844_v79_0_0_1_address0),
    .v79_0_0_1_ce0(grp_linear_forward_no_mu_fu_844_v79_0_0_1_ce0),
    .v79_0_0_1_q0(grp_linear_forward_no_mu_fu_844_v79_0_0_1_q0),
    .v79_0_0_2_address0(grp_linear_forward_no_mu_fu_844_v79_0_0_2_address0),
    .v79_0_0_2_ce0(grp_linear_forward_no_mu_fu_844_v79_0_0_2_ce0),
    .v79_0_0_2_q0(grp_linear_forward_no_mu_fu_844_v79_0_0_2_q0),
    .v79_0_0_3_address0(grp_linear_forward_no_mu_fu_844_v79_0_0_3_address0),
    .v79_0_0_3_ce0(grp_linear_forward_no_mu_fu_844_v79_0_0_3_ce0),
    .v79_0_0_3_q0(grp_linear_forward_no_mu_fu_844_v79_0_0_3_q0),
    .v79_1_0_0_address0(grp_linear_forward_no_mu_fu_844_v79_1_0_0_address0),
    .v79_1_0_0_ce0(grp_linear_forward_no_mu_fu_844_v79_1_0_0_ce0),
    .v79_1_0_0_q0(grp_linear_forward_no_mu_fu_844_v79_1_0_0_q0),
    .v79_1_0_1_address0(grp_linear_forward_no_mu_fu_844_v79_1_0_1_address0),
    .v79_1_0_1_ce0(grp_linear_forward_no_mu_fu_844_v79_1_0_1_ce0),
    .v79_1_0_1_q0(grp_linear_forward_no_mu_fu_844_v79_1_0_1_q0),
    .v79_1_0_2_address0(grp_linear_forward_no_mu_fu_844_v79_1_0_2_address0),
    .v79_1_0_2_ce0(grp_linear_forward_no_mu_fu_844_v79_1_0_2_ce0),
    .v79_1_0_2_q0(grp_linear_forward_no_mu_fu_844_v79_1_0_2_q0),
    .v79_1_0_3_address0(grp_linear_forward_no_mu_fu_844_v79_1_0_3_address0),
    .v79_1_0_3_ce0(grp_linear_forward_no_mu_fu_844_v79_1_0_3_ce0),
    .v79_1_0_3_q0(grp_linear_forward_no_mu_fu_844_v79_1_0_3_q0),
    .v80_0_V_read(reg_1040),
    .v81_0_address0(grp_linear_forward_no_mu_fu_844_v81_0_address0),
    .v81_0_ce0(grp_linear_forward_no_mu_fu_844_v81_0_ce0),
    .v81_0_q0(grp_linear_forward_no_mu_fu_844_v81_0_q0),
    .v81_1_address0(grp_linear_forward_no_mu_fu_844_v81_1_address0),
    .v81_1_ce0(grp_linear_forward_no_mu_fu_844_v81_1_ce0),
    .v81_1_q0(grp_linear_forward_no_mu_fu_844_v81_1_q0),
    .v82_V(grp_linear_forward_no_mu_fu_844_v82_V),
    .v83_address0(grp_linear_forward_no_mu_fu_844_v83_address0),
    .v83_ce0(grp_linear_forward_no_mu_fu_844_v83_ce0),
    .v83_we0(grp_linear_forward_no_mu_fu_844_v83_we0),
    .v83_d0(grp_linear_forward_no_mu_fu_844_v83_d0)
);

linear_forward_no_mu grp_linear_forward_no_mu_fu_873(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_linear_forward_no_mu_fu_873_ap_start),
    .ap_done(grp_linear_forward_no_mu_fu_873_ap_done),
    .ap_idle(grp_linear_forward_no_mu_fu_873_ap_idle),
    .ap_ready(grp_linear_forward_no_mu_fu_873_ap_ready),
    .v79_0_0_0_address0(grp_linear_forward_no_mu_fu_873_v79_0_0_0_address0),
    .v79_0_0_0_ce0(grp_linear_forward_no_mu_fu_873_v79_0_0_0_ce0),
    .v79_0_0_0_q0(quantized_hidden_sta_7_q0),
    .v79_0_0_1_address0(grp_linear_forward_no_mu_fu_873_v79_0_0_1_address0),
    .v79_0_0_1_ce0(grp_linear_forward_no_mu_fu_873_v79_0_0_1_ce0),
    .v79_0_0_1_q0(quantized_hidden_sta_6_q0),
    .v79_0_0_2_address0(grp_linear_forward_no_mu_fu_873_v79_0_0_2_address0),
    .v79_0_0_2_ce0(grp_linear_forward_no_mu_fu_873_v79_0_0_2_ce0),
    .v79_0_0_2_q0(quantized_hidden_sta_5_q0),
    .v79_0_0_3_address0(grp_linear_forward_no_mu_fu_873_v79_0_0_3_address0),
    .v79_0_0_3_ce0(grp_linear_forward_no_mu_fu_873_v79_0_0_3_ce0),
    .v79_0_0_3_q0(quantized_hidden_sta_4_q0),
    .v79_1_0_0_address0(grp_linear_forward_no_mu_fu_873_v79_1_0_0_address0),
    .v79_1_0_0_ce0(grp_linear_forward_no_mu_fu_873_v79_1_0_0_ce0),
    .v79_1_0_0_q0(quantized_hidden_sta_3_q0),
    .v79_1_0_1_address0(grp_linear_forward_no_mu_fu_873_v79_1_0_1_address0),
    .v79_1_0_1_ce0(grp_linear_forward_no_mu_fu_873_v79_1_0_1_ce0),
    .v79_1_0_1_q0(quantized_hidden_sta_2_q0),
    .v79_1_0_2_address0(grp_linear_forward_no_mu_fu_873_v79_1_0_2_address0),
    .v79_1_0_2_ce0(grp_linear_forward_no_mu_fu_873_v79_1_0_2_ce0),
    .v79_1_0_2_q0(quantized_hidden_sta_1_q0),
    .v79_1_0_3_address0(grp_linear_forward_no_mu_fu_873_v79_1_0_3_address0),
    .v79_1_0_3_ce0(grp_linear_forward_no_mu_fu_873_v79_1_0_3_ce0),
    .v79_1_0_3_q0(quantized_hidden_sta_q0),
    .v80_0_V_read(reg_1040),
    .v81_0_address0(grp_linear_forward_no_mu_fu_873_v81_0_address0),
    .v81_0_ce0(grp_linear_forward_no_mu_fu_873_v81_0_ce0),
    .v81_0_q0(v269_0_q0),
    .v81_1_address0(grp_linear_forward_no_mu_fu_873_v81_1_address0),
    .v81_1_ce0(grp_linear_forward_no_mu_fu_873_v81_1_ce0),
    .v81_1_q0(v269_1_q0),
    .v82_V(v306_V_reg_3241),
    .v83_address0(grp_linear_forward_no_mu_fu_873_v83_address0),
    .v83_ce0(grp_linear_forward_no_mu_fu_873_v83_ce0),
    .v83_we0(grp_linear_forward_no_mu_fu_873_v83_we0),
    .v83_d0(grp_linear_forward_no_mu_fu_873_v83_d0)
);

softmax grp_softmax_fu_911(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_softmax_fu_911_ap_start),
    .ap_done(grp_softmax_fu_911_ap_done),
    .ap_idle(grp_softmax_fu_911_ap_idle),
    .ap_ready(grp_softmax_fu_911_ap_ready),
    .v225_0_address0(grp_softmax_fu_911_v225_0_address0),
    .v225_0_ce0(grp_softmax_fu_911_v225_0_ce0),
    .v225_0_q0(attn_weights_0_q0),
    .v226_0_address0(grp_softmax_fu_911_v226_0_address0),
    .v226_0_ce0(grp_softmax_fu_911_v226_0_ce0),
    .v226_0_we0(grp_softmax_fu_911_v226_0_we0),
    .v226_0_d0(grp_softmax_fu_911_v226_0_d0),
    .v226_0_q0(softmax_attn_weights_q0)
);

rms_norm grp_rms_norm_fu_931(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_rms_norm_fu_931_ap_start),
    .ap_done(grp_rms_norm_fu_931_ap_done),
    .ap_idle(grp_rms_norm_fu_931_ap_idle),
    .ap_ready(grp_rms_norm_fu_931_ap_ready),
    .v0_address0(grp_rms_norm_fu_931_v0_address0),
    .v0_ce0(grp_rms_norm_fu_931_v0_ce0),
    .v0_q0(grp_rms_norm_fu_931_v0_q0),
    .v1_address0(grp_rms_norm_fu_931_v1_address0),
    .v1_ce0(grp_rms_norm_fu_931_v1_ce0),
    .v1_q0(grp_rms_norm_fu_931_v1_q0),
    .v3_0_address0(grp_rms_norm_fu_931_v3_0_address0),
    .v3_0_ce0(grp_rms_norm_fu_931_v3_0_ce0),
    .v3_0_we0(grp_rms_norm_fu_931_v3_0_we0),
    .v3_0_d0(grp_rms_norm_fu_931_v3_0_d0)
);

quantize_activation grp_quantize_activation_fu_955(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_quantize_activation_fu_955_ap_start),
    .ap_done(grp_quantize_activation_fu_955_ap_done),
    .ap_idle(grp_quantize_activation_fu_955_ap_idle),
    .ap_ready(grp_quantize_activation_fu_955_ap_ready),
    .v22_0_address0(grp_quantize_activation_fu_955_v22_0_address0),
    .v22_0_ce0(grp_quantize_activation_fu_955_v22_0_ce0),
    .v22_0_q0(grp_quantize_activation_fu_955_v22_0_q0),
    .v24_0_address0(grp_quantize_activation_fu_955_v24_0_address0),
    .v24_0_ce0(grp_quantize_activation_fu_955_v24_0_ce0),
    .v24_0_we0(grp_quantize_activation_fu_955_v24_0_we0),
    .v24_0_d0(grp_quantize_activation_fu_955_v24_0_d0),
    .ap_return(grp_quantize_activation_fu_955_ap_return)
);

apply_rotary_pos_emb grp_apply_rotary_pos_emb_fu_963(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_apply_rotary_pos_emb_fu_963_ap_start),
    .ap_done(grp_apply_rotary_pos_emb_fu_963_ap_done),
    .ap_idle(grp_apply_rotary_pos_emb_fu_963_ap_idle),
    .ap_ready(grp_apply_rotary_pos_emb_fu_963_ap_ready),
    .v163_address0(grp_apply_rotary_pos_emb_fu_963_v163_address0),
    .v163_ce0(grp_apply_rotary_pos_emb_fu_963_v163_ce0),
    .v163_q0(v273_q0),
    .v164_address0(grp_apply_rotary_pos_emb_fu_963_v164_address0),
    .v164_ce0(grp_apply_rotary_pos_emb_fu_963_v164_ce0),
    .v164_q0(v274_q0),
    .v165_0_address0(grp_apply_rotary_pos_emb_fu_963_v165_0_address0),
    .v165_0_ce0(grp_apply_rotary_pos_emb_fu_963_v165_0_ce0),
    .v165_0_we0(grp_apply_rotary_pos_emb_fu_963_v165_0_we0),
    .v165_0_d0(grp_apply_rotary_pos_emb_fu_963_v165_0_d0),
    .v166_0_address0(grp_apply_rotary_pos_emb_fu_963_v166_0_address0),
    .v166_0_ce0(grp_apply_rotary_pos_emb_fu_963_v166_0_ce0),
    .v166_0_we0(grp_apply_rotary_pos_emb_fu_963_v166_0_we0),
    .v166_0_d0(grp_apply_rotary_pos_emb_fu_963_v166_0_d0),
    .q_proj_0_address0(grp_apply_rotary_pos_emb_fu_963_q_proj_0_address0),
    .q_proj_0_ce0(grp_apply_rotary_pos_emb_fu_963_q_proj_0_ce0),
    .q_proj_0_q0(q_proj_0_q0),
    .q_proj_0_address1(grp_apply_rotary_pos_emb_fu_963_q_proj_0_address1),
    .q_proj_0_ce1(grp_apply_rotary_pos_emb_fu_963_q_proj_0_ce1),
    .q_proj_0_q1(q_proj_0_q1),
    .k_proj_0_address0(grp_apply_rotary_pos_emb_fu_963_k_proj_0_address0),
    .k_proj_0_ce0(grp_apply_rotary_pos_emb_fu_963_k_proj_0_ce0),
    .k_proj_0_q0(k_proj_0_q0),
    .k_proj_0_address1(grp_apply_rotary_pos_emb_fu_963_k_proj_0_address1),
    .k_proj_0_ce1(grp_apply_rotary_pos_emb_fu_963_k_proj_0_ce1),
    .k_proj_0_q1(k_proj_0_q1)
);

GEMM_3D_float grp_GEMM_3D_float_fu_977(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GEMM_3D_float_fu_977_ap_start),
    .ap_done(grp_GEMM_3D_float_fu_977_ap_done),
    .ap_idle(grp_GEMM_3D_float_fu_977_ap_idle),
    .ap_ready(grp_GEMM_3D_float_fu_977_ap_ready),
    .v210_0_address0(grp_GEMM_3D_float_fu_977_v210_0_address0),
    .v210_0_ce0(grp_GEMM_3D_float_fu_977_v210_0_ce0),
    .v210_0_q0(q_embed_0_q0),
    .v212_0_address0(grp_GEMM_3D_float_fu_977_v212_0_address0),
    .v212_0_ce0(grp_GEMM_3D_float_fu_977_v212_0_ce0),
    .v212_0_we0(grp_GEMM_3D_float_fu_977_v212_0_we0),
    .v212_0_d0(grp_GEMM_3D_float_fu_977_v212_0_d0),
    .v212_0_q0(attn_weights_0_q0),
    .k_proj_transposed_address0(grp_GEMM_3D_float_fu_977_k_proj_transposed_address0),
    .k_proj_transposed_ce0(grp_GEMM_3D_float_fu_977_k_proj_transposed_ce0),
    .k_proj_transposed_q0(k_proj_transposed_q0)
);

GEMM_3D_float2 grp_GEMM_3D_float2_fu_985(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GEMM_3D_float2_fu_985_ap_start),
    .ap_done(grp_GEMM_3D_float2_fu_985_ap_done),
    .ap_idle(grp_GEMM_3D_float2_fu_985_ap_idle),
    .ap_ready(grp_GEMM_3D_float2_fu_985_ap_ready),
    .v252_0_address0(grp_GEMM_3D_float2_fu_985_v252_0_address0),
    .v252_0_ce0(grp_GEMM_3D_float2_fu_985_v252_0_ce0),
    .v252_0_q0(softmax_attn_weights_q0),
    .v253_address0(grp_GEMM_3D_float2_fu_985_v253_address0),
    .v253_ce0(grp_GEMM_3D_float2_fu_985_v253_ce0),
    .v253_q0(updated_v_cache_q0),
    .v254_0_address0(grp_GEMM_3D_float2_fu_985_v254_0_address0),
    .v254_0_ce0(grp_GEMM_3D_float2_fu_985_v254_0_ce0),
    .v254_0_we0(grp_GEMM_3D_float2_fu_985_v254_0_we0),
    .v254_0_d0(grp_GEMM_3D_float2_fu_985_v254_0_d0),
    .v254_0_q0(attn_output_0_q0)
);

cache_update grp_cache_update_fu_992(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_cache_update_fu_992_ap_start),
    .ap_done(grp_cache_update_fu_992_ap_done),
    .ap_idle(grp_cache_update_fu_992_ap_idle),
    .ap_ready(grp_cache_update_fu_992_ap_ready),
    .v193_address0(grp_cache_update_fu_992_v193_address0),
    .v193_ce0(grp_cache_update_fu_992_v193_ce0),
    .v193_q0(grp_cache_update_fu_992_v193_q0),
    .v194_0_address0(grp_cache_update_fu_992_v194_0_address0),
    .v194_0_ce0(grp_cache_update_fu_992_v194_0_ce0),
    .v194_0_q0(grp_cache_update_fu_992_v194_0_q0),
    .v195_address0(grp_cache_update_fu_992_v195_address0),
    .v195_ce0(grp_cache_update_fu_992_v195_ce0),
    .v195_we0(grp_cache_update_fu_992_v195_we0),
    .v195_d0(grp_cache_update_fu_992_v195_d0)
);

transpose_last_two_d grp_transpose_last_two_d_fu_1002(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_transpose_last_two_d_fu_1002_ap_start),
    .ap_done(grp_transpose_last_two_d_fu_1002_ap_done),
    .ap_idle(grp_transpose_last_two_d_fu_1002_ap_idle),
    .ap_ready(grp_transpose_last_two_d_fu_1002_ap_ready),
    .v204_address0(grp_transpose_last_two_d_fu_1002_v204_address0),
    .v204_ce0(grp_transpose_last_two_d_fu_1002_v204_ce0),
    .v204_q0(updated_k_cache_q0),
    .v205_address0(grp_transpose_last_two_d_fu_1002_v205_address0),
    .v205_ce0(grp_transpose_last_two_d_fu_1002_v205_ce0),
    .v205_we0(grp_transpose_last_two_d_fu_1002_v205_we0),
    .v205_d0(grp_transpose_last_two_d_fu_1002_v205_d0)
);

reshape_2D_to_3D grp_reshape_2D_to_3D_fu_1009(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_reshape_2D_to_3D_fu_1009_ap_start),
    .ap_done(grp_reshape_2D_to_3D_fu_1009_ap_done),
    .ap_idle(grp_reshape_2D_to_3D_fu_1009_ap_idle),
    .ap_ready(grp_reshape_2D_to_3D_fu_1009_ap_ready),
    .v147_address0(grp_reshape_2D_to_3D_fu_1009_v147_address0),
    .v147_ce0(grp_reshape_2D_to_3D_fu_1009_v147_ce0),
    .v147_q0(grp_reshape_2D_to_3D_fu_1009_v147_q0),
    .v148_0_address0(grp_reshape_2D_to_3D_fu_1009_v148_0_address0),
    .v148_0_ce0(grp_reshape_2D_to_3D_fu_1009_v148_0_ce0),
    .v148_0_we0(grp_reshape_2D_to_3D_fu_1009_v148_0_we0),
    .v148_0_d0(grp_reshape_2D_to_3D_fu_1009_v148_0_d0)
);

reshape_2D_to_3D grp_reshape_2D_to_3D_fu_1017(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_reshape_2D_to_3D_fu_1017_ap_start),
    .ap_done(grp_reshape_2D_to_3D_fu_1017_ap_done),
    .ap_idle(grp_reshape_2D_to_3D_fu_1017_ap_idle),
    .ap_ready(grp_reshape_2D_to_3D_fu_1017_ap_ready),
    .v147_address0(grp_reshape_2D_to_3D_fu_1017_v147_address0),
    .v147_ce0(grp_reshape_2D_to_3D_fu_1017_v147_ce0),
    .v147_q0(v_proj_re_q0),
    .v148_0_address0(grp_reshape_2D_to_3D_fu_1017_v148_0_address0),
    .v148_0_ce0(grp_reshape_2D_to_3D_fu_1017_v148_0_ce0),
    .v148_0_we0(grp_reshape_2D_to_3D_fu_1017_v148_0_we0),
    .v148_0_d0(grp_reshape_2D_to_3D_fu_1017_v148_0_d0)
);

attention_fadd_32pcA #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
attention_fadd_32pcA_U97(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_1046),
    .din1(32'd0),
    .ce(1'b1),
    .dout(grp_fu_1024_p2)
);

attention_fdiv_32rcU #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
attention_fdiv_32rcU_U98(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_1046),
    .din1(32'd1092404337),
    .ce(1'b1),
    .dout(grp_fu_1029_p2)
);

attention_fpext_3sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
attention_fpext_3sc4_U99(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1034_p0),
    .ce(grp_fu_1034_ce),
    .dout(grp_fu_1034_p1)
);

attention_fpext_3sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
attention_fpext_3sc4_U100(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v270),
    .ce(1'b1),
    .dout(grp_fu_1037_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_GEMM_3D_float2_fu_985_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln673_fu_2829_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state65))) begin
            grp_GEMM_3D_float2_fu_985_ap_start_reg <= 1'b1;
        end else if ((grp_GEMM_3D_float2_fu_985_ap_ready == 1'b1)) begin
            grp_GEMM_3D_float2_fu_985_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_GEMM_3D_float_fu_977_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln626_fu_2594_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
            grp_GEMM_3D_float_fu_977_ap_start_reg <= 1'b1;
        end else if ((grp_GEMM_3D_float_fu_977_ap_ready == 1'b1)) begin
            grp_GEMM_3D_float_fu_977_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_apply_rotary_pos_emb_fu_963_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln590_fu_2292_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
            grp_apply_rotary_pos_emb_fu_963_ap_start_reg <= 1'b1;
        end else if ((grp_apply_rotary_pos_emb_fu_963_ap_ready == 1'b1)) begin
            grp_apply_rotary_pos_emb_fu_963_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_cache_update_fu_992_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state29) | ((icmp_ln607_fu_2475_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25)))) begin
            grp_cache_update_fu_992_ap_start_reg <= 1'b1;
        end else if ((grp_cache_update_fu_992_ap_ready == 1'b1)) begin
            grp_cache_update_fu_992_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_linear_forward_no_mu_fu_844_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13) | ((1'b1 == ap_CS_fsm_state76) & (icmp_ln736_fu_3038_p2 == 1'd1)))) begin
            grp_linear_forward_no_mu_fu_844_ap_start_reg <= 1'b1;
        end else if ((grp_linear_forward_no_mu_fu_844_ap_ready == 1'b1)) begin
            grp_linear_forward_no_mu_fu_844_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_linear_forward_no_mu_fu_873_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_linear_forward_no_mu_fu_873_ap_start_reg <= 1'b1;
        end else if ((grp_linear_forward_no_mu_fu_873_ap_ready == 1'b1)) begin
            grp_linear_forward_no_mu_fu_873_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_quantize_activation_fu_955_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state4))) begin
            grp_quantize_activation_fu_955_ap_start_reg <= 1'b1;
        end else if ((grp_quantize_activation_fu_955_ap_ready == 1'b1)) begin
            grp_quantize_activation_fu_955_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_reshape_2D_to_3D_fu_1009_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13))) begin
            grp_reshape_2D_to_3D_fu_1009_ap_start_reg <= 1'b1;
        end else if ((grp_reshape_2D_to_3D_fu_1009_ap_ready == 1'b1)) begin
            grp_reshape_2D_to_3D_fu_1009_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_reshape_2D_to_3D_fu_1017_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state15)) begin
            grp_reshape_2D_to_3D_fu_1017_ap_start_reg <= 1'b1;
        end else if ((grp_reshape_2D_to_3D_fu_1017_ap_ready == 1'b1)) begin
            grp_reshape_2D_to_3D_fu_1017_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_rms_norm_fu_931_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state72) & (icmp_ln697_fu_3021_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln480_fu_1052_p2 == 1'd1)))) begin
            grp_rms_norm_fu_931_ap_start_reg <= 1'b1;
        end else if ((grp_rms_norm_fu_931_ap_ready == 1'b1)) begin
            grp_rms_norm_fu_931_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_softmax_fu_911_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln664_fu_2765_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state62))) begin
            grp_softmax_fu_911_ap_start_reg <= 1'b1;
        end else if ((grp_softmax_fu_911_ap_ready == 1'b1)) begin
            grp_softmax_fu_911_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_transpose_last_two_d_fu_1002_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state29)) begin
            grp_transpose_last_two_d_fu_1002_ap_start_reg <= 1'b1;
        end else if ((grp_transpose_last_two_d_fu_1002_ap_ready == 1'b1)) begin
            grp_transpose_last_two_d_fu_1002_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        d4_0_0_reg_811 <= add_ln689_reg_3542;
    end else if (((icmp_ln688_fu_2910_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state69))) begin
        d4_0_0_reg_811 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln636_fu_2658_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state34))) begin
        h6_0_reg_734 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        h6_0_reg_734 <= h6_reg_3456;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln689_fu_2986_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state70))) begin
        h7_0_0_reg_800 <= add_ln688_reg_3524;
    end else if (((1'b1 == ap_CS_fsm_state68) & (icmp_ln683_fu_2893_p2 == 1'd1))) begin
        h7_0_0_reg_800 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln638_fu_2696_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state35))) begin
        i11_0_reg_712 <= i11_reg_3425;
    end else if (((1'b1 == ap_CS_fsm_state33) & (grp_GEMM_3D_float_fu_977_ap_done == 1'b1))) begin
        i11_0_reg_712 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        k10_0_0_reg_723 <= add_ln638_reg_3438;
    end else if (((icmp_ln636_fu_2658_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state34))) begin
        k10_0_0_reg_723 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        v284_0_0_reg_536 <= 11'd0;
    end else if (((icmp_ln480_fu_1052_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        v284_0_0_reg_536 <= add_ln480_fu_1058_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_quantize_activation_fu_955_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        v295_0_0_reg_547 <= 11'd0;
    end else if (((icmp_ln502_fu_1069_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        v295_0_0_reg_547 <= add_ln502_fu_1075_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln502_fu_1069_p2 == 1'd1))) begin
        v298_0_0_reg_558 <= 11'd0;
    end else if (((icmp_ln508_fu_1086_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        v298_0_0_reg_558 <= add_ln508_fu_1092_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln508_fu_1086_p2 == 1'd1))) begin
        v301_0_0_reg_569 <= 11'd0;
    end else if (((icmp_ln514_fu_1103_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        v301_0_0_reg_569 <= add_ln514_fu_1109_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln584_fu_2266_p2 == 1'd1))) begin
        v334_0_reg_580 <= v334_reg_3294;
    end else if (((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16))) begin
        v334_0_reg_580 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln582_4_fu_2228_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        v336_0_0_reg_591 <= 7'd0;
    end else if (((icmp_ln584_fu_2266_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        v336_0_0_reg_591 <= add_ln584_fu_2272_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln582_4_fu_2228_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        v338_0_reg_602 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln592_fu_2330_p2 == 1'd1))) begin
        v338_0_reg_602 <= v338_reg_3315;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln590_fu_2292_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        v340_0_0_reg_613 <= 7'd0;
    end else if (((icmp_ln592_fu_2330_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        v340_0_0_reg_613 <= add_ln592_fu_2336_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln600_fu_2402_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        v342_0_reg_624 <= v342_reg_3336;
    end else if (((1'b1 == ap_CS_fsm_state21) & (grp_apply_rotary_pos_emb_fu_963_ap_done == 1'b1))) begin
        v342_0_reg_624 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & (icmp_ln601_fu_2449_p2 == 1'd1))) begin
        v343_0_reg_635 <= v343_reg_3349;
    end else if (((icmp_ln599_fu_2356_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        v343_0_reg_635 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln600_fu_2402_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        v344_0_reg_646 <= 7'd0;
    end else if (((icmp_ln601_fu_2449_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        v344_0_reg_646 <= v344_fu_2455_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln599_fu_2356_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
        v346_0_reg_657 <= 5'd0;
    end else if (((icmp_ln608_fu_2521_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        v346_0_reg_657 <= v346_reg_3370;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & (icmp_ln609_fu_2568_p2 == 1'd1))) begin
        v347_0_reg_668 <= v347_reg_3383;
    end else if (((icmp_ln607_fu_2475_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        v347_0_reg_668 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln608_fu_2521_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        v348_0_reg_679 <= 7'd0;
    end else if (((icmp_ln609_fu_2568_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        v348_0_reg_679 <= v348_fu_2574_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state32) & (icmp_ln628_fu_2632_p2 == 1'd1))) begin
        v354_0_reg_690 <= v354_reg_3404;
    end else if (((1'b1 == ap_CS_fsm_state30) & (1'b0 == ap_block_state30_on_subcall_done))) begin
        v354_0_reg_690 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln626_fu_2594_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        v356_0_0_reg_701 <= 3'd0;
    end else if (((icmp_ln628_fu_2632_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
        v356_0_0_reg_701 <= add_ln628_fu_2638_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln653_fu_2722_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state54))) begin
        v374_0_reg_745 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state63) & (icmp_ln666_fu_2803_p2 == 1'd1))) begin
        v374_0_reg_745 <= v374_reg_3474;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln664_fu_2765_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state62))) begin
        v376_0_0_reg_756 <= 3'd0;
    end else if (((icmp_ln666_fu_2803_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state63))) begin
        v376_0_0_reg_756 <= add_ln666_fu_2809_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state66) & (icmp_ln675_fu_2867_p2 == 1'd1))) begin
        v378_0_reg_767 <= v378_reg_3495;
    end else if (((1'b1 == ap_CS_fsm_state64) & (grp_softmax_fu_911_ap_done == 1'b1))) begin
        v378_0_reg_767 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln673_fu_2829_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state65))) begin
        v380_0_0_reg_778 <= 7'd0;
    end else if (((icmp_ln675_fu_2867_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state66))) begin
        v380_0_0_reg_778 <= add_ln675_fu_2873_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state67) & (grp_GEMM_3D_float2_fu_985_ap_done == 1'b1))) begin
        v383_0_0_reg_789 <= 11'd0;
    end else if (((icmp_ln683_fu_2893_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state68))) begin
        v383_0_0_reg_789 <= add_ln683_fu_2899_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln688_fu_2910_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state69))) begin
        v390_0_0_reg_822 <= 11'd0;
    end else if (((icmp_ln697_fu_3021_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state72))) begin
        v390_0_0_reg_822 <= add_ln697_fu_3027_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_quantize_activation_fu_955_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state75))) begin
        v408_0_0_reg_833 <= 11'd0;
    end else if (((icmp_ln736_fu_3038_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state76))) begin
        v408_0_0_reg_833 <= add_ln736_fu_3044_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        add_ln638_reg_3438 <= add_ln638_fu_2702_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        add_ln688_reg_3524 <= add_ln688_fu_2916_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        add_ln689_reg_3542 <= add_ln689_fu_2992_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln689_fu_2986_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state70))) begin
        add_ln691_reg_3552 <= add_ln691_fu_3008_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln653_fu_2722_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
        attn_weights_0_addr_1_reg_3461[6 : 1] <= sext_ln657_fu_2760_p1[6 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln638_fu_2696_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state35))) begin
        attn_weights_0_addr_2_reg_3443 <= sext_ln639_fu_2717_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        h6_reg_3456 <= h6_fu_2728_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        i11_reg_3425 <= i11_fu_2664_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        icmp_ln571_1_reg_3161 <= icmp_ln571_1_fu_1457_p2;
        icmp_ln571_2_reg_3201 <= icmp_ln571_2_fu_1575_p2;
        icmp_ln581_1_reg_3167 <= icmp_ln581_1_fu_1469_p2;
        icmp_ln581_2_reg_3207 <= icmp_ln581_2_fu_1587_p2;
        icmp_ln582_1_reg_3179 <= icmp_ln582_1_fu_1495_p2;
        icmp_ln582_2_reg_3219 <= icmp_ln582_2_fu_1613_p2;
        man_V_5_reg_3156 <= man_V_5_fu_1449_p3;
        man_V_8_reg_3196 <= man_V_8_fu_1567_p3;
        sh_amt_1_reg_3173 <= sh_amt_1_fu_1487_p3;
        sh_amt_2_reg_3213 <= sh_amt_2_fu_1605_p3;
        tmp_56_reg_3191 <= {{sh_amt_1_fu_1487_p3[11:5]}};
        tmp_69_reg_3231 <= {{sh_amt_2_fu_1605_p3[11:5]}};
        trunc_ln583_1_reg_3185 <= trunc_ln583_1_fu_1501_p1;
        trunc_ln583_2_reg_3225 <= trunc_ln583_2_fu_1619_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        icmp_ln571_3_reg_3251 <= icmp_ln571_3_fu_2011_p2;
        icmp_ln581_3_reg_3257 <= icmp_ln581_3_fu_2023_p2;
        icmp_ln582_3_reg_3269 <= icmp_ln582_3_fu_2049_p2;
        man_V_11_reg_3246 <= man_V_11_fu_2003_p3;
        sh_amt_3_reg_3263 <= sh_amt_3_fu_2041_p3;
        tmp_72_reg_3281 <= {{sh_amt_3_fu_2041_p3[11:5]}};
        trunc_ln583_3_reg_3275 <= trunc_ln583_3_fu_2055_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        icmp_ln571_reg_3116 <= icmp_ln571_fu_1180_p2;
        icmp_ln581_reg_3122 <= icmp_ln581_fu_1192_p2;
        icmp_ln582_reg_3134 <= icmp_ln582_fu_1218_p2;
        man_V_2_reg_3111 <= man_V_2_fu_1172_p3;
        sh_amt_reg_3128 <= sh_amt_fu_1210_p3;
        tmp_43_reg_3146 <= {{sh_amt_fu_1210_p3[11:5]}};
        trunc_ln583_reg_3140 <= trunc_ln583_fu_1224_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((grp_quantize_activation_fu_955_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state75)) | ((grp_quantize_activation_fu_955_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)))) begin
        reg_1040 <= grp_quantize_activation_fu_955_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state36))) begin
        reg_1046 <= attn_weights_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln599_fu_2356_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        sext_ln602_reg_3341[9 : 1] <= sext_ln602_fu_2398_p1[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln607_fu_2475_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        sext_ln610_reg_3375[9 : 1] <= sext_ln610_fu_2517_p1[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln582_4_fu_2228_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        sub_ln585_reg_3299[11 : 5] <= sub_ln585_fu_2260_p2[11 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln590_fu_2292_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        sub_ln593_reg_3320[11 : 5] <= sub_ln593_fu_2324_p2[11 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln600_fu_2402_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        sub_ln602_1_reg_3354[14 : 5] <= sub_ln602_1_fu_2443_p2[14 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln608_fu_2521_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        sub_ln610_1_reg_3388[14 : 5] <= sub_ln610_1_fu_2562_p2[14 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln626_fu_2594_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        sub_ln629_reg_3409[7 : 1] <= sub_ln629_fu_2626_p2[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln636_fu_2658_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state34))) begin
        sub_ln639_reg_3430[7 : 1] <= sub_ln639_fu_2690_p2[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln664_fu_2765_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state62))) begin
        sub_ln667_reg_3479[7 : 1] <= sub_ln667_fu_2797_p2[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln673_fu_2829_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state65))) begin
        sub_ln676_reg_3500[11 : 5] <= sub_ln676_fu_2861_p2[11 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln688_fu_2910_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state69))) begin
        sub_ln690_reg_3529[11 : 5] <= sub_ln690_fu_2942_p2[11 : 5];
        sub_ln691_reg_3534[11 : 5] <= sub_ln691_fu_2976_p2[11 : 5];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        v2_reg_3466 <= grp_fu_1024_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        v302_V_reg_3151 <= v302_V_fu_1389_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_linear_forward_no_mu_fu_844_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        v304_V_reg_3236 <= v304_V_fu_1784_p3;
        v306_V_reg_3241 <= v306_V_fu_1943_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16))) begin
        v308_V_reg_3286 <= v308_V_fu_2220_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        v334_reg_3294 <= v334_fu_2234_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        v338_reg_3315 <= v338_fu_2298_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        v342_reg_3336 <= v342_fu_2362_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        v343_reg_3349 <= v343_fu_2408_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        v346_reg_3370 <= v346_fu_2481_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        v347_reg_3383 <= v347_fu_2527_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        v354_reg_3404 <= v354_fu_2600_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        v374_reg_3474 <= v374_fu_2771_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        v378_reg_3495 <= v378_fu_2835_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        v_reg_3448 <= grp_fu_1029_p2;
    end
end

always @ (*) begin
    if (((grp_linear_forward_no_mu_fu_844_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state77))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_linear_forward_no_mu_fu_844_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state77))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        attn_output_0_address0 = sext_ln690_fu_3003_p1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        attn_output_0_address0 = sext_ln676_fu_2888_p1;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        attn_output_0_address0 = grp_GEMM_3D_float2_fu_985_v254_0_address0;
    end else begin
        attn_output_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state66))) begin
        attn_output_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        attn_output_0_ce0 = grp_GEMM_3D_float2_fu_985_v254_0_ce0;
    end else begin
        attn_output_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        attn_output_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        attn_output_0_d0 = grp_GEMM_3D_float2_fu_985_v254_0_d0;
    end else begin
        attn_output_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln675_fu_2867_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state66))) begin
        attn_output_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        attn_output_0_we0 = grp_GEMM_3D_float2_fu_985_v254_0_we0;
    end else begin
        attn_output_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        attn_output_2D_address0 = zext_ln691_fu_3016_p1;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        attn_output_2D_address0 = zext_ln684_fu_2905_p1;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        attn_output_2D_address0 = grp_rms_norm_fu_931_v0_address0;
    end else begin
        attn_output_2D_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state71))) begin
        attn_output_2D_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        attn_output_2D_ce0 = grp_rms_norm_fu_931_v0_ce0;
    end else begin
        attn_output_2D_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        attn_output_2D_d0 = attn_output_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        attn_output_2D_d0 = 32'd0;
    end else begin
        attn_output_2D_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state71) | ((icmp_ln683_fu_2893_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state68)))) begin
        attn_output_2D_we0 = 1'b1;
    end else begin
        attn_output_2D_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        attn_weights_0_address0 = attn_weights_0_addr_1_reg_3461;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        attn_weights_0_address0 = sext_ln657_fu_2760_p1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        attn_weights_0_address0 = attn_weights_0_addr_2_reg_3443;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        attn_weights_0_address0 = sext_ln639_fu_2717_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        attn_weights_0_address0 = sext_ln629_fu_2653_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        attn_weights_0_address0 = grp_GEMM_3D_float_fu_977_v212_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        attn_weights_0_address0 = grp_softmax_fu_911_v225_0_address0;
    end else begin
        attn_weights_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state53))) begin
        attn_weights_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        attn_weights_0_ce0 = grp_GEMM_3D_float_fu_977_v212_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        attn_weights_0_ce0 = grp_softmax_fu_911_v225_0_ce0;
    end else begin
        attn_weights_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        attn_weights_0_d0 = v2_reg_3466;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        attn_weights_0_d0 = v_reg_3448;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        attn_weights_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        attn_weights_0_d0 = grp_GEMM_3D_float_fu_977_v212_0_d0;
    end else begin
        attn_weights_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state53) | ((icmp_ln628_fu_2632_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32)))) begin
        attn_weights_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        attn_weights_0_we0 = grp_GEMM_3D_float_fu_977_v212_0_we0;
    end else begin
        attn_weights_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_cache_update_fu_992_v193_q0 = v278_q0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_cache_update_fu_992_v193_q0 = v277_q0;
    end else begin
        grp_cache_update_fu_992_v193_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_cache_update_fu_992_v194_0_q0 = v_proj_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_cache_update_fu_992_v194_0_q0 = k_embed_0_q0;
    end else begin
        grp_cache_update_fu_992_v194_0_q0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | ((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14)))) begin
        grp_fu_1034_ce = 1'b1;
    end else begin
        grp_fu_1034_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_1034_p0 = v272;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_1034_p0 = v268;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_1034_p0 = v266;
    end else begin
        grp_fu_1034_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_linear_forward_no_mu_fu_844_v79_0_0_0_q0 = quantized_final_outp_7_q0;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_linear_forward_no_mu_fu_844_v79_0_0_0_q0 = quantized_hidden_sta_7_q0;
    end else begin
        grp_linear_forward_no_mu_fu_844_v79_0_0_0_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_linear_forward_no_mu_fu_844_v79_0_0_1_q0 = quantized_final_outp_6_q0;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_linear_forward_no_mu_fu_844_v79_0_0_1_q0 = quantized_hidden_sta_6_q0;
    end else begin
        grp_linear_forward_no_mu_fu_844_v79_0_0_1_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_linear_forward_no_mu_fu_844_v79_0_0_2_q0 = quantized_final_outp_5_q0;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_linear_forward_no_mu_fu_844_v79_0_0_2_q0 = quantized_hidden_sta_5_q0;
    end else begin
        grp_linear_forward_no_mu_fu_844_v79_0_0_2_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_linear_forward_no_mu_fu_844_v79_0_0_3_q0 = quantized_final_outp_4_q0;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_linear_forward_no_mu_fu_844_v79_0_0_3_q0 = quantized_hidden_sta_4_q0;
    end else begin
        grp_linear_forward_no_mu_fu_844_v79_0_0_3_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_linear_forward_no_mu_fu_844_v79_1_0_0_q0 = quantized_final_outp_3_q0;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_linear_forward_no_mu_fu_844_v79_1_0_0_q0 = quantized_hidden_sta_3_q0;
    end else begin
        grp_linear_forward_no_mu_fu_844_v79_1_0_0_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_linear_forward_no_mu_fu_844_v79_1_0_1_q0 = quantized_final_outp_2_q0;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_linear_forward_no_mu_fu_844_v79_1_0_1_q0 = quantized_hidden_sta_2_q0;
    end else begin
        grp_linear_forward_no_mu_fu_844_v79_1_0_1_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_linear_forward_no_mu_fu_844_v79_1_0_2_q0 = quantized_final_outp_1_q0;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_linear_forward_no_mu_fu_844_v79_1_0_2_q0 = quantized_hidden_sta_1_q0;
    end else begin
        grp_linear_forward_no_mu_fu_844_v79_1_0_2_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_linear_forward_no_mu_fu_844_v79_1_0_3_q0 = quantized_final_outp_q0;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_linear_forward_no_mu_fu_844_v79_1_0_3_q0 = quantized_hidden_sta_q0;
    end else begin
        grp_linear_forward_no_mu_fu_844_v79_1_0_3_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_linear_forward_no_mu_fu_844_v81_0_q0 = v271_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_linear_forward_no_mu_fu_844_v81_0_q0 = v267_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_linear_forward_no_mu_fu_844_v81_0_q0 = v265_0_q0;
    end else begin
        grp_linear_forward_no_mu_fu_844_v81_0_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_linear_forward_no_mu_fu_844_v81_1_q0 = v271_1_q0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_linear_forward_no_mu_fu_844_v81_1_q0 = v267_1_q0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_linear_forward_no_mu_fu_844_v81_1_q0 = v265_1_q0;
    end else begin
        grp_linear_forward_no_mu_fu_844_v81_1_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_linear_forward_no_mu_fu_844_v82_V = v308_V_reg_3286;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_linear_forward_no_mu_fu_844_v82_V = v304_V_reg_3236;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_linear_forward_no_mu_fu_844_v82_V = v302_V_reg_3151;
    end else begin
        grp_linear_forward_no_mu_fu_844_v82_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        grp_quantize_activation_fu_955_v22_0_q0 = rms_attn_output_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_quantize_activation_fu_955_v22_0_q0 = rms_hidden_states_0_q0;
    end else begin
        grp_quantize_activation_fu_955_v22_0_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_reshape_2D_to_3D_fu_1009_v147_q0 = k_proj_re_q0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_reshape_2D_to_3D_fu_1009_v147_q0 = q_proj_re_q0;
    end else begin
        grp_reshape_2D_to_3D_fu_1009_v147_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        grp_rms_norm_fu_931_v0_q0 = attn_output_2D_q0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_rms_norm_fu_931_v0_q0 = v264_q0;
    end else begin
        grp_rms_norm_fu_931_v0_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        grp_rms_norm_fu_931_v1_q0 = v276_q0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_rms_norm_fu_931_v1_q0 = v275_q0;
    end else begin
        grp_rms_norm_fu_931_v1_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        k_embed_0_address0 = sext_ln593_fu_2351_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        k_embed_0_address0 = grp_cache_update_fu_992_v194_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        k_embed_0_address0 = grp_apply_rotary_pos_emb_fu_963_v166_0_address0;
    end else begin
        k_embed_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        k_embed_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        k_embed_0_ce0 = grp_cache_update_fu_992_v194_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        k_embed_0_ce0 = grp_apply_rotary_pos_emb_fu_963_v166_0_ce0;
    end else begin
        k_embed_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        k_embed_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        k_embed_0_d0 = grp_apply_rotary_pos_emb_fu_963_v166_0_d0;
    end else begin
        k_embed_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln592_fu_2330_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        k_embed_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        k_embed_0_we0 = grp_apply_rotary_pos_emb_fu_963_v166_0_we0;
    end else begin
        k_embed_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        k_proj_0_address0 = grp_reshape_2D_to_3D_fu_1009_v148_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        k_proj_0_address0 = grp_apply_rotary_pos_emb_fu_963_k_proj_0_address0;
    end else begin
        k_proj_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        k_proj_0_ce0 = grp_reshape_2D_to_3D_fu_1009_v148_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        k_proj_0_ce0 = grp_apply_rotary_pos_emb_fu_963_k_proj_0_ce0;
    end else begin
        k_proj_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        k_proj_0_ce1 = grp_apply_rotary_pos_emb_fu_963_k_proj_0_ce1;
    end else begin
        k_proj_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        k_proj_0_we0 = grp_reshape_2D_to_3D_fu_1009_v148_0_we0;
    end else begin
        k_proj_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        k_proj_re_address0 = zext_ln509_fu_1098_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        k_proj_re_address0 = grp_reshape_2D_to_3D_fu_1009_v147_address0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        k_proj_re_address0 = grp_linear_forward_no_mu_fu_844_v83_address0;
    end else begin
        k_proj_re_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        k_proj_re_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        k_proj_re_ce0 = grp_reshape_2D_to_3D_fu_1009_v147_ce0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        k_proj_re_ce0 = grp_linear_forward_no_mu_fu_844_v83_ce0;
    end else begin
        k_proj_re_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        k_proj_re_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        k_proj_re_d0 = grp_linear_forward_no_mu_fu_844_v83_d0;
    end else begin
        k_proj_re_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln508_fu_1086_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        k_proj_re_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        k_proj_re_we0 = grp_linear_forward_no_mu_fu_844_v83_we0;
    end else begin
        k_proj_re_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        k_proj_transposed_address0 = grp_transpose_last_two_d_fu_1002_v205_address0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        k_proj_transposed_address0 = grp_GEMM_3D_float_fu_977_k_proj_transposed_address0;
    end else begin
        k_proj_transposed_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        k_proj_transposed_ce0 = grp_transpose_last_two_d_fu_1002_v205_ce0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        k_proj_transposed_ce0 = grp_GEMM_3D_float_fu_977_k_proj_transposed_ce0;
    end else begin
        k_proj_transposed_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        k_proj_transposed_we0 = grp_transpose_last_two_d_fu_1002_v205_we0;
    end else begin
        k_proj_transposed_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        q_embed_0_address0 = sext_ln585_fu_2287_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        q_embed_0_address0 = grp_GEMM_3D_float_fu_977_v210_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        q_embed_0_address0 = grp_apply_rotary_pos_emb_fu_963_v165_0_address0;
    end else begin
        q_embed_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        q_embed_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        q_embed_0_ce0 = grp_GEMM_3D_float_fu_977_v210_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        q_embed_0_ce0 = grp_apply_rotary_pos_emb_fu_963_v165_0_ce0;
    end else begin
        q_embed_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        q_embed_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        q_embed_0_d0 = grp_apply_rotary_pos_emb_fu_963_v165_0_d0;
    end else begin
        q_embed_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln584_fu_2266_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        q_embed_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        q_embed_0_we0 = grp_apply_rotary_pos_emb_fu_963_v165_0_we0;
    end else begin
        q_embed_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        q_proj_0_address0 = grp_reshape_2D_to_3D_fu_1009_v148_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        q_proj_0_address0 = grp_apply_rotary_pos_emb_fu_963_q_proj_0_address0;
    end else begin
        q_proj_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        q_proj_0_ce0 = grp_reshape_2D_to_3D_fu_1009_v148_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        q_proj_0_ce0 = grp_apply_rotary_pos_emb_fu_963_q_proj_0_ce0;
    end else begin
        q_proj_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        q_proj_0_ce1 = grp_apply_rotary_pos_emb_fu_963_q_proj_0_ce1;
    end else begin
        q_proj_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        q_proj_0_we0 = grp_reshape_2D_to_3D_fu_1009_v148_0_we0;
    end else begin
        q_proj_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        q_proj_re_address0 = zext_ln503_fu_1081_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        q_proj_re_address0 = grp_reshape_2D_to_3D_fu_1009_v147_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        q_proj_re_address0 = grp_linear_forward_no_mu_fu_844_v83_address0;
    end else begin
        q_proj_re_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        q_proj_re_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        q_proj_re_ce0 = grp_reshape_2D_to_3D_fu_1009_v147_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        q_proj_re_ce0 = grp_linear_forward_no_mu_fu_844_v83_ce0;
    end else begin
        q_proj_re_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        q_proj_re_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        q_proj_re_d0 = grp_linear_forward_no_mu_fu_844_v83_d0;
    end else begin
        q_proj_re_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln502_fu_1069_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        q_proj_re_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        q_proj_re_we0 = grp_linear_forward_no_mu_fu_844_v83_we0;
    end else begin
        q_proj_re_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        quantized_final_outp_1_ce0 = grp_linear_forward_no_mu_fu_844_v79_1_0_2_ce0;
    end else begin
        quantized_final_outp_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        quantized_final_outp_2_ce0 = grp_linear_forward_no_mu_fu_844_v79_1_0_1_ce0;
    end else begin
        quantized_final_outp_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        quantized_final_outp_3_ce0 = grp_linear_forward_no_mu_fu_844_v79_1_0_0_ce0;
    end else begin
        quantized_final_outp_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        quantized_final_outp_4_ce0 = grp_linear_forward_no_mu_fu_844_v79_0_0_3_ce0;
    end else begin
        quantized_final_outp_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        quantized_final_outp_5_ce0 = grp_linear_forward_no_mu_fu_844_v79_0_0_2_ce0;
    end else begin
        quantized_final_outp_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        quantized_final_outp_6_ce0 = grp_linear_forward_no_mu_fu_844_v79_0_0_1_ce0;
    end else begin
        quantized_final_outp_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        quantized_final_outp_7_ce0 = grp_linear_forward_no_mu_fu_844_v79_0_0_0_ce0;
    end else begin
        quantized_final_outp_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        quantized_final_outp_8_ce0 = grp_quantize_activation_fu_955_v24_0_ce0;
    end else begin
        quantized_final_outp_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        quantized_final_outp_8_we0 = grp_quantize_activation_fu_955_v24_0_we0;
    end else begin
        quantized_final_outp_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        quantized_final_outp_ce0 = grp_linear_forward_no_mu_fu_844_v79_1_0_3_ce0;
    end else begin
        quantized_final_outp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        quantized_hidden_sta_1_address0 = grp_linear_forward_no_mu_fu_873_v79_1_0_2_address0;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        quantized_hidden_sta_1_address0 = grp_linear_forward_no_mu_fu_844_v79_1_0_2_address0;
    end else begin
        quantized_hidden_sta_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        quantized_hidden_sta_1_ce0 = grp_linear_forward_no_mu_fu_873_v79_1_0_2_ce0;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        quantized_hidden_sta_1_ce0 = grp_linear_forward_no_mu_fu_844_v79_1_0_2_ce0;
    end else begin
        quantized_hidden_sta_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        quantized_hidden_sta_2_address0 = grp_linear_forward_no_mu_fu_873_v79_1_0_1_address0;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        quantized_hidden_sta_2_address0 = grp_linear_forward_no_mu_fu_844_v79_1_0_1_address0;
    end else begin
        quantized_hidden_sta_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        quantized_hidden_sta_2_ce0 = grp_linear_forward_no_mu_fu_873_v79_1_0_1_ce0;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        quantized_hidden_sta_2_ce0 = grp_linear_forward_no_mu_fu_844_v79_1_0_1_ce0;
    end else begin
        quantized_hidden_sta_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        quantized_hidden_sta_3_address0 = grp_linear_forward_no_mu_fu_873_v79_1_0_0_address0;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        quantized_hidden_sta_3_address0 = grp_linear_forward_no_mu_fu_844_v79_1_0_0_address0;
    end else begin
        quantized_hidden_sta_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        quantized_hidden_sta_3_ce0 = grp_linear_forward_no_mu_fu_873_v79_1_0_0_ce0;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        quantized_hidden_sta_3_ce0 = grp_linear_forward_no_mu_fu_844_v79_1_0_0_ce0;
    end else begin
        quantized_hidden_sta_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        quantized_hidden_sta_4_address0 = grp_linear_forward_no_mu_fu_873_v79_0_0_3_address0;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        quantized_hidden_sta_4_address0 = grp_linear_forward_no_mu_fu_844_v79_0_0_3_address0;
    end else begin
        quantized_hidden_sta_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        quantized_hidden_sta_4_ce0 = grp_linear_forward_no_mu_fu_873_v79_0_0_3_ce0;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        quantized_hidden_sta_4_ce0 = grp_linear_forward_no_mu_fu_844_v79_0_0_3_ce0;
    end else begin
        quantized_hidden_sta_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        quantized_hidden_sta_5_address0 = grp_linear_forward_no_mu_fu_873_v79_0_0_2_address0;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        quantized_hidden_sta_5_address0 = grp_linear_forward_no_mu_fu_844_v79_0_0_2_address0;
    end else begin
        quantized_hidden_sta_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        quantized_hidden_sta_5_ce0 = grp_linear_forward_no_mu_fu_873_v79_0_0_2_ce0;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        quantized_hidden_sta_5_ce0 = grp_linear_forward_no_mu_fu_844_v79_0_0_2_ce0;
    end else begin
        quantized_hidden_sta_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        quantized_hidden_sta_6_address0 = grp_linear_forward_no_mu_fu_873_v79_0_0_1_address0;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        quantized_hidden_sta_6_address0 = grp_linear_forward_no_mu_fu_844_v79_0_0_1_address0;
    end else begin
        quantized_hidden_sta_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        quantized_hidden_sta_6_ce0 = grp_linear_forward_no_mu_fu_873_v79_0_0_1_ce0;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        quantized_hidden_sta_6_ce0 = grp_linear_forward_no_mu_fu_844_v79_0_0_1_ce0;
    end else begin
        quantized_hidden_sta_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        quantized_hidden_sta_7_address0 = grp_linear_forward_no_mu_fu_873_v79_0_0_0_address0;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        quantized_hidden_sta_7_address0 = grp_linear_forward_no_mu_fu_844_v79_0_0_0_address0;
    end else begin
        quantized_hidden_sta_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        quantized_hidden_sta_7_ce0 = grp_linear_forward_no_mu_fu_873_v79_0_0_0_ce0;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        quantized_hidden_sta_7_ce0 = grp_linear_forward_no_mu_fu_844_v79_0_0_0_ce0;
    end else begin
        quantized_hidden_sta_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        quantized_hidden_sta_8_ce0 = grp_quantize_activation_fu_955_v24_0_ce0;
    end else begin
        quantized_hidden_sta_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        quantized_hidden_sta_8_we0 = grp_quantize_activation_fu_955_v24_0_we0;
    end else begin
        quantized_hidden_sta_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        quantized_hidden_sta_address0 = grp_linear_forward_no_mu_fu_873_v79_1_0_3_address0;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        quantized_hidden_sta_address0 = grp_linear_forward_no_mu_fu_844_v79_1_0_3_address0;
    end else begin
        quantized_hidden_sta_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        quantized_hidden_sta_ce0 = grp_linear_forward_no_mu_fu_873_v79_1_0_3_ce0;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        quantized_hidden_sta_ce0 = grp_linear_forward_no_mu_fu_844_v79_1_0_3_ce0;
    end else begin
        quantized_hidden_sta_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln697_fu_3021_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state72))) begin
        rms_attn_output_0_address0 = zext_ln698_fu_3033_p1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        rms_attn_output_0_address0 = grp_quantize_activation_fu_955_v22_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        rms_attn_output_0_address0 = grp_rms_norm_fu_931_v3_0_address0;
    end else begin
        rms_attn_output_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln697_fu_3021_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state72))) begin
        rms_attn_output_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        rms_attn_output_0_ce0 = grp_quantize_activation_fu_955_v22_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        rms_attn_output_0_ce0 = grp_rms_norm_fu_931_v3_0_ce0;
    end else begin
        rms_attn_output_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln697_fu_3021_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state72))) begin
        rms_attn_output_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        rms_attn_output_0_d0 = grp_rms_norm_fu_931_v3_0_d0;
    end else begin
        rms_attn_output_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln697_fu_3021_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state72))) begin
        rms_attn_output_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        rms_attn_output_0_we0 = grp_rms_norm_fu_931_v3_0_we0;
    end else begin
        rms_attn_output_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln480_fu_1052_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        rms_hidden_states_0_address0 = zext_ln481_fu_1064_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        rms_hidden_states_0_address0 = grp_quantize_activation_fu_955_v22_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        rms_hidden_states_0_address0 = grp_rms_norm_fu_931_v3_0_address0;
    end else begin
        rms_hidden_states_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln480_fu_1052_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        rms_hidden_states_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        rms_hidden_states_0_ce0 = grp_quantize_activation_fu_955_v22_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        rms_hidden_states_0_ce0 = grp_rms_norm_fu_931_v3_0_ce0;
    end else begin
        rms_hidden_states_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln480_fu_1052_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        rms_hidden_states_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        rms_hidden_states_0_d0 = grp_rms_norm_fu_931_v3_0_d0;
    end else begin
        rms_hidden_states_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln480_fu_1052_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        rms_hidden_states_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        rms_hidden_states_0_we0 = grp_rms_norm_fu_931_v3_0_we0;
    end else begin
        rms_hidden_states_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        softmax_attn_weights_address0 = sext_ln667_fu_2824_p1;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        softmax_attn_weights_address0 = grp_GEMM_3D_float2_fu_985_v252_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        softmax_attn_weights_address0 = grp_softmax_fu_911_v226_0_address0;
    end else begin
        softmax_attn_weights_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        softmax_attn_weights_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        softmax_attn_weights_ce0 = grp_GEMM_3D_float2_fu_985_v252_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        softmax_attn_weights_ce0 = grp_softmax_fu_911_v226_0_ce0;
    end else begin
        softmax_attn_weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        softmax_attn_weights_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        softmax_attn_weights_d0 = grp_softmax_fu_911_v226_0_d0;
    end else begin
        softmax_attn_weights_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln666_fu_2803_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state63))) begin
        softmax_attn_weights_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        softmax_attn_weights_we0 = grp_softmax_fu_911_v226_0_we0;
    end else begin
        softmax_attn_weights_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        updated_k_cache_address0 = zext_ln602_4_fu_2470_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        updated_k_cache_address0 = grp_transpose_last_two_d_fu_1002_v204_address0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        updated_k_cache_address0 = grp_cache_update_fu_992_v195_address0;
    end else begin
        updated_k_cache_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        updated_k_cache_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        updated_k_cache_ce0 = grp_transpose_last_two_d_fu_1002_v204_ce0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        updated_k_cache_ce0 = grp_cache_update_fu_992_v195_ce0;
    end else begin
        updated_k_cache_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        updated_k_cache_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        updated_k_cache_d0 = grp_cache_update_fu_992_v195_d0;
    end else begin
        updated_k_cache_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln601_fu_2449_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        updated_k_cache_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        updated_k_cache_we0 = grp_cache_update_fu_992_v195_we0;
    end else begin
        updated_k_cache_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        updated_v_cache_address0 = zext_ln610_4_fu_2589_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        updated_v_cache_address0 = grp_cache_update_fu_992_v195_address0;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        updated_v_cache_address0 = grp_GEMM_3D_float2_fu_985_v253_address0;
    end else begin
        updated_v_cache_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        updated_v_cache_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        updated_v_cache_ce0 = grp_cache_update_fu_992_v195_ce0;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        updated_v_cache_ce0 = grp_GEMM_3D_float2_fu_985_v253_ce0;
    end else begin
        updated_v_cache_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        updated_v_cache_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        updated_v_cache_d0 = grp_cache_update_fu_992_v195_d0;
    end else begin
        updated_v_cache_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln609_fu_2568_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        updated_v_cache_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        updated_v_cache_we0 = grp_cache_update_fu_992_v195_we0;
    end else begin
        updated_v_cache_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        v264_ce0 = grp_rms_norm_fu_931_v0_ce0;
    end else begin
        v264_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        v265_0_ce0 = grp_linear_forward_no_mu_fu_844_v81_0_ce0;
    end else begin
        v265_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        v265_1_ce0 = grp_linear_forward_no_mu_fu_844_v81_1_ce0;
    end else begin
        v265_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        v267_0_ce0 = grp_linear_forward_no_mu_fu_844_v81_0_ce0;
    end else begin
        v267_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        v267_1_ce0 = grp_linear_forward_no_mu_fu_844_v81_1_ce0;
    end else begin
        v267_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        v271_0_ce0 = grp_linear_forward_no_mu_fu_844_v81_0_ce0;
    end else begin
        v271_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        v271_1_ce0 = grp_linear_forward_no_mu_fu_844_v81_1_ce0;
    end else begin
        v271_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        v275_ce0 = grp_rms_norm_fu_931_v1_ce0;
    end else begin
        v275_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        v276_ce0 = grp_rms_norm_fu_931_v1_ce0;
    end else begin
        v276_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        v277_ce0 = grp_cache_update_fu_992_v193_ce0;
    end else begin
        v277_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        v278_ce0 = grp_cache_update_fu_992_v193_ce0;
    end else begin
        v278_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln736_fu_3038_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state76))) begin
        v280_address0 = zext_ln737_fu_3050_p1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        v280_address0 = grp_linear_forward_no_mu_fu_844_v83_address0;
    end else begin
        v280_address0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln736_fu_3038_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state76))) begin
        v280_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        v280_ce0 = grp_linear_forward_no_mu_fu_844_v83_ce0;
    end else begin
        v280_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln736_fu_3038_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state76))) begin
        v280_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        v280_d0 = grp_linear_forward_no_mu_fu_844_v83_d0;
    end else begin
        v280_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln736_fu_3038_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state76))) begin
        v280_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        v280_we0 = grp_linear_forward_no_mu_fu_844_v83_we0;
    end else begin
        v280_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        v_proj_0_address0 = grp_reshape_2D_to_3D_fu_1017_v148_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        v_proj_0_address0 = grp_cache_update_fu_992_v194_0_address0;
    end else begin
        v_proj_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        v_proj_0_ce0 = grp_reshape_2D_to_3D_fu_1017_v148_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        v_proj_0_ce0 = grp_cache_update_fu_992_v194_0_ce0;
    end else begin
        v_proj_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        v_proj_0_we0 = grp_reshape_2D_to_3D_fu_1017_v148_0_we0;
    end else begin
        v_proj_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        v_proj_re_address0 = zext_ln515_fu_1115_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        v_proj_re_address0 = grp_reshape_2D_to_3D_fu_1017_v147_address0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        v_proj_re_address0 = grp_linear_forward_no_mu_fu_873_v83_address0;
    end else begin
        v_proj_re_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        v_proj_re_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        v_proj_re_ce0 = grp_reshape_2D_to_3D_fu_1017_v147_ce0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        v_proj_re_ce0 = grp_linear_forward_no_mu_fu_873_v83_ce0;
    end else begin
        v_proj_re_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        v_proj_re_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        v_proj_re_d0 = grp_linear_forward_no_mu_fu_873_v83_d0;
    end else begin
        v_proj_re_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln514_fu_1103_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        v_proj_re_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        v_proj_re_we0 = grp_linear_forward_no_mu_fu_873_v83_we0;
    end else begin
        v_proj_re_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln480_fu_1052_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_rms_norm_fu_931_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((grp_quantize_activation_fu_955_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln502_fu_1069_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln508_fu_1086_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((icmp_ln514_fu_1103_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((grp_linear_forward_no_mu_fu_844_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((icmp_ln582_4_fu_2228_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln584_fu_2266_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((icmp_ln590_fu_2292_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln592_fu_2330_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (grp_apply_rotary_pos_emb_fu_963_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((icmp_ln599_fu_2356_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((icmp_ln600_fu_2402_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (icmp_ln601_fu_2449_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((icmp_ln607_fu_2475_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((icmp_ln608_fu_2521_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_CS_fsm_state27) & (icmp_ln609_fu_2568_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((1'b1 == ap_CS_fsm_state28) & (grp_cache_update_fu_992_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            if (((1'b1 == ap_CS_fsm_state30) & (1'b0 == ap_block_state30_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state31 : begin
            if (((icmp_ln626_fu_2594_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state32 : begin
            if (((1'b1 == ap_CS_fsm_state32) & (icmp_ln628_fu_2632_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            if (((1'b1 == ap_CS_fsm_state33) & (grp_GEMM_3D_float_fu_977_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((icmp_ln636_fu_2658_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state35 : begin
            if (((icmp_ln638_fu_2696_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state35))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state54 : begin
            if (((icmp_ln653_fu_2722_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state54))) begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state62 : begin
            if (((icmp_ln664_fu_2765_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state62))) begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end
        end
        ap_ST_fsm_state63 : begin
            if (((1'b1 == ap_CS_fsm_state63) & (icmp_ln666_fu_2803_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end
        end
        ap_ST_fsm_state64 : begin
            if (((1'b1 == ap_CS_fsm_state64) & (grp_softmax_fu_911_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end
        end
        ap_ST_fsm_state65 : begin
            if (((icmp_ln673_fu_2829_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state65))) begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end
        end
        ap_ST_fsm_state66 : begin
            if (((1'b1 == ap_CS_fsm_state66) & (icmp_ln675_fu_2867_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end
        end
        ap_ST_fsm_state67 : begin
            if (((1'b1 == ap_CS_fsm_state67) & (grp_GEMM_3D_float2_fu_985_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end
        end
        ap_ST_fsm_state68 : begin
            if (((1'b1 == ap_CS_fsm_state68) & (icmp_ln683_fu_2893_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end
        end
        ap_ST_fsm_state69 : begin
            if (((icmp_ln688_fu_2910_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state69))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end
        end
        ap_ST_fsm_state70 : begin
            if (((icmp_ln689_fu_2986_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state70))) begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state72 : begin
            if (((icmp_ln697_fu_3021_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state72))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end
        end
        ap_ST_fsm_state73 : begin
            if (((1'b1 == ap_CS_fsm_state73) & (grp_rms_norm_fu_931_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            if (((grp_quantize_activation_fu_955_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state75))) begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end
        end
        ap_ST_fsm_state76 : begin
            if (((icmp_ln736_fu_3038_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state76))) begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end
        end
        ap_ST_fsm_state77 : begin
            if (((grp_linear_forward_no_mu_fu_844_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state77))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_1_fu_1463_p2 = (12'd1075 - zext_ln461_1_fu_1423_p1);

assign F2_2_fu_1581_p2 = (12'd1075 - zext_ln461_2_fu_1541_p1);

assign F2_3_fu_2017_p2 = (12'd1075 - zext_ln461_3_fu_1977_p1);

assign F2_fu_1186_p2 = (12'd1075 - zext_ln461_fu_1146_p1);

assign add_ln480_fu_1058_p2 = (v284_0_0_reg_536 + 11'd1);

assign add_ln502_fu_1075_p2 = (v295_0_0_reg_547 + 11'd1);

assign add_ln508_fu_1092_p2 = (v298_0_0_reg_558 + 11'd1);

assign add_ln514_fu_1109_p2 = (v301_0_0_reg_569 + 11'd1);

assign add_ln581_1_fu_1475_p2 = ($signed(12'd4076) + $signed(F2_1_fu_1463_p2));

assign add_ln581_2_fu_1593_p2 = ($signed(12'd4076) + $signed(F2_2_fu_1581_p2));

assign add_ln581_3_fu_2029_p2 = ($signed(12'd4076) + $signed(F2_3_fu_2017_p2));

assign add_ln581_fu_1198_p2 = ($signed(12'd4076) + $signed(F2_fu_1186_p2));

assign add_ln584_fu_2272_p2 = (v336_0_0_reg_591 + 7'd1);

assign add_ln585_fu_2282_p2 = (sub_ln585_reg_3299 + zext_ln585_1_fu_2278_p1);

assign add_ln592_fu_2336_p2 = (v340_0_0_reg_613 + 7'd1);

assign add_ln593_fu_2346_p2 = (sub_ln593_reg_3320 + zext_ln593_1_fu_2342_p1);

assign add_ln602_1_fu_2465_p2 = (sub_ln602_1_reg_3354 + zext_ln602_3_fu_2461_p1);

assign add_ln602_fu_2418_p2 = ($signed(zext_ln602_2_fu_2414_p1) + $signed(sext_ln602_reg_3341));

assign add_ln610_1_fu_2584_p2 = (sub_ln610_1_reg_3388 + zext_ln610_3_fu_2580_p1);

assign add_ln610_fu_2537_p2 = ($signed(zext_ln610_2_fu_2533_p1) + $signed(sext_ln610_reg_3375));

assign add_ln628_fu_2638_p2 = (v356_0_0_reg_701 + 3'd1);

assign add_ln629_fu_2648_p2 = (sub_ln629_reg_3409 + zext_ln629_1_fu_2644_p1);

assign add_ln638_fu_2702_p2 = (k10_0_0_reg_723 + 3'd1);

assign add_ln639_fu_2712_p2 = (sub_ln639_reg_3430 + zext_ln639_1_fu_2708_p1);

assign add_ln666_fu_2809_p2 = (v376_0_0_reg_756 + 3'd1);

assign add_ln667_fu_2819_p2 = (sub_ln667_reg_3479 + zext_ln667_1_fu_2815_p1);

assign add_ln675_fu_2873_p2 = (v380_0_0_reg_778 + 7'd1);

assign add_ln676_fu_2883_p2 = (sub_ln676_reg_3500 + zext_ln676_1_fu_2879_p1);

assign add_ln683_fu_2899_p2 = (v383_0_0_reg_789 + 11'd1);

assign add_ln688_fu_2916_p2 = (h7_0_0_reg_800 + 5'd1);

assign add_ln689_fu_2992_p2 = (d4_0_0_reg_811 + 7'd1);

assign add_ln690_fu_2998_p2 = (sub_ln690_reg_3529 + zext_ln689_fu_2982_p1);

assign add_ln691_fu_3008_p2 = (zext_ln689_fu_2982_p1 + sub_ln691_reg_3534);

assign add_ln697_fu_3027_p2 = (v390_0_0_reg_822 + 11'd1);

assign add_ln736_fu_3044_p2 = (v408_0_0_reg_833 + 11'd1);

assign and_ln581_1_fu_1703_p2 = (xor_ln582_1_fu_1697_p2 & icmp_ln581_1_reg_3167);

assign and_ln581_2_fu_1862_p2 = (xor_ln582_2_fu_1856_p2 & icmp_ln581_2_reg_3207);

assign and_ln581_3_fu_2139_p2 = (xor_ln582_3_fu_2133_p2 & icmp_ln581_3_reg_3257);

assign and_ln581_fu_1308_p2 = (xor_ln582_fu_1302_p2 & icmp_ln581_reg_3122);

assign and_ln582_1_fu_1688_p2 = (xor_ln571_1_fu_1683_p2 & icmp_ln582_1_reg_3179);

assign and_ln582_2_fu_1847_p2 = (xor_ln571_2_fu_1842_p2 & icmp_ln582_2_reg_3219);

assign and_ln582_3_fu_2124_p2 = (xor_ln571_3_fu_2119_p2 & icmp_ln582_3_reg_3269);

assign and_ln582_fu_1293_p2 = (xor_ln571_fu_1288_p2 & icmp_ln582_reg_3134);

assign and_ln585_2_fu_1325_p2 = (icmp_ln585_fu_1241_p2 & and_ln581_fu_1308_p2);

assign and_ln585_3_fu_1714_p2 = (xor_ln585_1_fu_1708_p2 & and_ln581_1_fu_1703_p2);

assign and_ln585_4_fu_1720_p2 = (icmp_ln585_1_fu_1636_p2 & and_ln581_1_fu_1703_p2);

assign and_ln585_5_fu_1873_p2 = (xor_ln585_2_fu_1867_p2 & and_ln581_2_fu_1862_p2);

assign and_ln585_6_fu_1879_p2 = (icmp_ln585_2_fu_1795_p2 & and_ln581_2_fu_1862_p2);

assign and_ln585_7_fu_2150_p2 = (xor_ln585_3_fu_2144_p2 & and_ln581_3_fu_2139_p2);

assign and_ln585_8_fu_2156_p2 = (icmp_ln585_3_fu_2072_p2 & and_ln581_3_fu_2139_p2);

assign and_ln585_fu_1319_p2 = (xor_ln585_fu_1313_p2 & and_ln581_fu_1308_p2);

assign and_ln603_1_fu_1737_p2 = (xor_ln581_1_fu_1731_p2 & icmp_ln603_1_fu_1641_p2);

assign and_ln603_2_fu_1896_p2 = (xor_ln581_2_fu_1890_p2 & icmp_ln603_2_fu_1800_p2);

assign and_ln603_3_fu_2173_p2 = (xor_ln581_3_fu_2167_p2 & icmp_ln603_3_fu_2077_p2);

assign and_ln603_fu_1342_p2 = (xor_ln581_fu_1336_p2 & icmp_ln603_fu_1246_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state14_on_subcall_done = ((grp_linear_forward_no_mu_fu_873_ap_done == 1'b0) | (grp_reshape_2D_to_3D_fu_1009_ap_done == 1'b0) | (grp_linear_forward_no_mu_fu_844_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state16_on_subcall_done = ((grp_reshape_2D_to_3D_fu_1017_ap_done == 1'b0) | (grp_reshape_2D_to_3D_fu_1009_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state30_on_subcall_done = ((grp_transpose_last_two_d_fu_1002_ap_done == 1'b0) | (grp_cache_update_fu_992_ap_done == 1'b0));
end

assign ashr_ln586_1_fu_1650_p2 = $signed(man_V_5_reg_3156) >>> zext_ln586_1_fu_1646_p1;

assign ashr_ln586_2_fu_1809_p2 = $signed(man_V_8_reg_3196) >>> zext_ln586_2_fu_1805_p1;

assign ashr_ln586_3_fu_2086_p2 = $signed(man_V_11_reg_3246) >>> zext_ln586_3_fu_2082_p1;

assign ashr_ln586_fu_1255_p2 = $signed(man_V_2_reg_3111) >>> zext_ln586_fu_1251_p1;

assign bitcast_ln696_3_fu_1659_p1 = v268;

assign bitcast_ln696_5_fu_1818_p1 = v270;

assign bitcast_ln696_7_fu_2095_p1 = v272;

assign bitcast_ln696_fu_1264_p1 = v266;

assign exp_tmp_V_1_fu_1413_p4 = {{ireg_V_1_fu_1397_p1[62:52]}};

assign exp_tmp_V_2_fu_1531_p4 = {{ireg_V_2_fu_1515_p1[62:52]}};

assign exp_tmp_V_3_fu_1967_p4 = {{ireg_V_3_fu_1951_p1[62:52]}};

assign exp_tmp_V_fu_1136_p4 = {{ireg_V_fu_1120_p1[62:52]}};

assign grp_GEMM_3D_float2_fu_985_ap_start = grp_GEMM_3D_float2_fu_985_ap_start_reg;

assign grp_GEMM_3D_float_fu_977_ap_start = grp_GEMM_3D_float_fu_977_ap_start_reg;

assign grp_apply_rotary_pos_emb_fu_963_ap_start = grp_apply_rotary_pos_emb_fu_963_ap_start_reg;

assign grp_cache_update_fu_992_ap_start = grp_cache_update_fu_992_ap_start_reg;

assign grp_linear_forward_no_mu_fu_844_ap_start = grp_linear_forward_no_mu_fu_844_ap_start_reg;

assign grp_linear_forward_no_mu_fu_873_ap_start = grp_linear_forward_no_mu_fu_873_ap_start_reg;

assign grp_quantize_activation_fu_955_ap_start = grp_quantize_activation_fu_955_ap_start_reg;

assign grp_reshape_2D_to_3D_fu_1009_ap_start = grp_reshape_2D_to_3D_fu_1009_ap_start_reg;

assign grp_reshape_2D_to_3D_fu_1017_ap_start = grp_reshape_2D_to_3D_fu_1017_ap_start_reg;

assign grp_rms_norm_fu_931_ap_start = grp_rms_norm_fu_931_ap_start_reg;

assign grp_softmax_fu_911_ap_start = grp_softmax_fu_911_ap_start_reg;

assign grp_transpose_last_two_d_fu_1002_ap_start = grp_transpose_last_two_d_fu_1002_ap_start_reg;

assign h6_fu_2728_p2 = (h6_0_reg_734 + 5'd1);

assign i11_fu_2664_p2 = (i11_0_reg_712 + 5'd1);

assign icmp_ln480_fu_1052_p2 = ((v284_0_0_reg_536 == 11'd1536) ? 1'b1 : 1'b0);

assign icmp_ln502_fu_1069_p2 = ((v295_0_0_reg_547 == 11'd1536) ? 1'b1 : 1'b0);

assign icmp_ln508_fu_1086_p2 = ((v298_0_0_reg_558 == 11'd1536) ? 1'b1 : 1'b0);

assign icmp_ln514_fu_1103_p2 = ((v301_0_0_reg_569 == 11'd1536) ? 1'b1 : 1'b0);

assign icmp_ln571_1_fu_1457_p2 = ((trunc_ln556_1_fu_1401_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_2_fu_1575_p2 = ((trunc_ln556_2_fu_1519_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_3_fu_2011_p2 = ((trunc_ln556_3_fu_1955_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_1180_p2 = ((trunc_ln556_fu_1124_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_1_fu_1469_p2 = (($signed(F2_1_fu_1463_p2) > $signed(12'd20)) ? 1'b1 : 1'b0);

assign icmp_ln581_2_fu_1587_p2 = (($signed(F2_2_fu_1581_p2) > $signed(12'd20)) ? 1'b1 : 1'b0);

assign icmp_ln581_3_fu_2023_p2 = (($signed(F2_3_fu_2017_p2) > $signed(12'd20)) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_1192_p2 = (($signed(F2_fu_1186_p2) > $signed(12'd20)) ? 1'b1 : 1'b0);

assign icmp_ln582_1_fu_1495_p2 = ((F2_1_fu_1463_p2 == 12'd20) ? 1'b1 : 1'b0);

assign icmp_ln582_2_fu_1613_p2 = ((F2_2_fu_1581_p2 == 12'd20) ? 1'b1 : 1'b0);

assign icmp_ln582_3_fu_2049_p2 = ((F2_3_fu_2017_p2 == 12'd20) ? 1'b1 : 1'b0);

assign icmp_ln582_4_fu_2228_p2 = ((v334_0_reg_580 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_1218_p2 = ((F2_fu_1186_p2 == 12'd20) ? 1'b1 : 1'b0);

assign icmp_ln584_fu_2266_p2 = ((v336_0_0_reg_591 == 7'd96) ? 1'b1 : 1'b0);

assign icmp_ln585_1_fu_1636_p2 = ((sh_amt_1_reg_3173 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln585_2_fu_1795_p2 = ((sh_amt_2_reg_3213 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln585_3_fu_2072_p2 = ((sh_amt_3_reg_3263 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_1241_p2 = ((sh_amt_reg_3128 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln590_fu_2292_p2 = ((v338_0_reg_602 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln592_fu_2330_p2 = ((v340_0_0_reg_613 == 7'd96) ? 1'b1 : 1'b0);

assign icmp_ln599_fu_2356_p2 = ((v342_0_reg_624 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln600_fu_2402_p2 = ((v343_0_reg_635 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln601_fu_2449_p2 = ((v344_0_reg_646 == 7'd96) ? 1'b1 : 1'b0);

assign icmp_ln603_1_fu_1641_p2 = ((tmp_56_reg_3191 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln603_2_fu_1800_p2 = ((tmp_69_reg_3231 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln603_3_fu_2077_p2 = ((tmp_72_reg_3281 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_1246_p2 = ((tmp_43_reg_3146 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln607_fu_2475_p2 = ((v346_0_reg_657 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln608_fu_2521_p2 = ((v347_0_reg_668 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln609_fu_2568_p2 = ((v348_0_reg_679 == 7'd96) ? 1'b1 : 1'b0);

assign icmp_ln626_fu_2594_p2 = ((v354_0_reg_690 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln628_fu_2632_p2 = ((v356_0_0_reg_701 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln636_fu_2658_p2 = ((i11_0_reg_712 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln638_fu_2696_p2 = ((k10_0_0_reg_723 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln653_fu_2722_p2 = ((h6_0_reg_734 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln664_fu_2765_p2 = ((v374_0_reg_745 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln666_fu_2803_p2 = ((v376_0_0_reg_756 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln673_fu_2829_p2 = ((v378_0_reg_767 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln675_fu_2867_p2 = ((v380_0_0_reg_778 == 7'd96) ? 1'b1 : 1'b0);

assign icmp_ln683_fu_2893_p2 = ((v383_0_0_reg_789 == 11'd1536) ? 1'b1 : 1'b0);

assign icmp_ln688_fu_2910_p2 = ((h7_0_0_reg_800 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln689_fu_2986_p2 = ((d4_0_0_reg_811 == 7'd96) ? 1'b1 : 1'b0);

assign icmp_ln697_fu_3021_p2 = ((v390_0_0_reg_822 == 11'd1536) ? 1'b1 : 1'b0);

assign icmp_ln736_fu_3038_p2 = ((v408_0_0_reg_833 == 11'd1536) ? 1'b1 : 1'b0);

assign ireg_V_1_fu_1397_p1 = grp_fu_1034_p1;

assign ireg_V_2_fu_1515_p1 = grp_fu_1037_p1;

assign ireg_V_3_fu_1951_p1 = grp_fu_1034_p1;

assign ireg_V_fu_1120_p1 = grp_fu_1034_p1;

assign man_V_10_fu_1997_p2 = (54'd0 - p_Result_65_fu_1993_p1);

assign man_V_11_fu_2003_p3 = ((p_Result_64_fu_1959_p3[0:0] === 1'b1) ? man_V_10_fu_1997_p2 : p_Result_65_fu_1993_p1);

assign man_V_1_fu_1166_p2 = (54'd0 - p_Result_59_fu_1162_p1);

assign man_V_2_fu_1172_p3 = ((p_Result_s_fu_1128_p3[0:0] === 1'b1) ? man_V_1_fu_1166_p2 : p_Result_59_fu_1162_p1);

assign man_V_4_fu_1443_p2 = (54'd0 - p_Result_61_fu_1439_p1);

assign man_V_5_fu_1449_p3 = ((p_Result_60_fu_1405_p3[0:0] === 1'b1) ? man_V_4_fu_1443_p2 : p_Result_61_fu_1439_p1);

assign man_V_7_fu_1561_p2 = (54'd0 - p_Result_63_fu_1557_p1);

assign man_V_8_fu_1567_p3 = ((p_Result_62_fu_1523_p3[0:0] === 1'b1) ? man_V_7_fu_1561_p2 : p_Result_63_fu_1557_p1);

assign or_ln581_1_fu_1726_p2 = (or_ln582_1_fu_1693_p2 | icmp_ln581_1_reg_3167);

assign or_ln581_2_fu_1885_p2 = (or_ln582_2_fu_1852_p2 | icmp_ln581_2_reg_3207);

assign or_ln581_3_fu_2162_p2 = (or_ln582_3_fu_2129_p2 | icmp_ln581_3_reg_3257);

assign or_ln581_fu_1331_p2 = (or_ln582_fu_1298_p2 | icmp_ln581_reg_3122);

assign or_ln582_1_fu_1693_p2 = (icmp_ln582_1_reg_3179 | icmp_ln571_1_reg_3161);

assign or_ln582_2_fu_1852_p2 = (icmp_ln582_2_reg_3219 | icmp_ln571_2_reg_3201);

assign or_ln582_3_fu_2129_p2 = (icmp_ln582_3_reg_3269 | icmp_ln571_3_reg_3251);

assign or_ln582_fu_1298_p2 = (icmp_ln582_reg_3134 | icmp_ln571_reg_3116);

assign or_ln603_10_fu_1937_p2 = (or_ln603_9_fu_1923_p2 | or_ln603_8_fu_1910_p2);

assign or_ln603_11_fu_2187_p2 = (and_ln603_3_fu_2173_p2 | and_ln585_8_fu_2156_p2);

assign or_ln603_12_fu_2200_p2 = (and_ln585_7_fu_2150_p2 | and_ln582_3_fu_2124_p2);

assign or_ln603_13_fu_2214_p2 = (or_ln603_12_fu_2200_p2 | or_ln603_11_fu_2187_p2);

assign or_ln603_3_fu_1369_p2 = (and_ln585_fu_1319_p2 | and_ln582_fu_1293_p2);

assign or_ln603_4_fu_1383_p2 = (or_ln603_fu_1356_p2 | or_ln603_3_fu_1369_p2);

assign or_ln603_5_fu_1751_p2 = (and_ln603_1_fu_1737_p2 | and_ln585_4_fu_1720_p2);

assign or_ln603_6_fu_1764_p2 = (and_ln585_3_fu_1714_p2 | and_ln582_1_fu_1688_p2);

assign or_ln603_7_fu_1778_p2 = (or_ln603_6_fu_1764_p2 | or_ln603_5_fu_1751_p2);

assign or_ln603_8_fu_1910_p2 = (and_ln603_2_fu_1896_p2 | and_ln585_6_fu_1879_p2);

assign or_ln603_9_fu_1923_p2 = (and_ln585_5_fu_1873_p2 | and_ln582_2_fu_1847_p2);

assign or_ln603_fu_1356_p2 = (and_ln603_fu_1342_p2 | and_ln585_2_fu_1325_p2);

assign p_Result_59_fu_1162_p1 = tmp_fu_1154_p3;

assign p_Result_60_fu_1405_p3 = ireg_V_1_fu_1397_p1[32'd63];

assign p_Result_61_fu_1439_p1 = tmp_s_fu_1431_p3;

assign p_Result_62_fu_1523_p3 = ireg_V_2_fu_1515_p1[32'd63];

assign p_Result_63_fu_1557_p1 = tmp_8_fu_1549_p3;

assign p_Result_64_fu_1959_p3 = ireg_V_3_fu_1951_p1[32'd63];

assign p_Result_65_fu_1993_p1 = tmp_9_fu_1985_p3;

assign p_Result_s_fu_1128_p3 = ireg_V_fu_1120_p1[32'd63];

assign p_shl2_cast_fu_2554_p3 = {{add_ln610_fu_2537_p2}, {5'd0}};

assign p_shl8_cast_fu_2427_p3 = {{trunc_ln602_fu_2423_p1}, {7'd0}};

assign p_shl9_cast_fu_2435_p3 = {{add_ln602_fu_2418_p2}, {5'd0}};

assign p_shl_cast_fu_2546_p3 = {{trunc_ln610_fu_2542_p1}, {7'd0}};

assign select_ln588_1_fu_1670_p3 = ((tmp_57_fu_1662_p3[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln588_2_fu_1829_p3 = ((tmp_70_fu_1821_p3[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln588_3_fu_2106_p3 = ((tmp_73_fu_2098_p3[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln588_fu_1275_p3 = ((tmp_52_fu_1267_p3[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln603_11_fu_1902_p3 = ((and_ln603_2_fu_1896_p2[0:0] === 1'b1) ? shl_ln604_2_fu_1837_p2 : trunc_ln586_2_fu_1814_p1);

assign select_ln603_12_fu_1916_p3 = ((and_ln585_5_fu_1873_p2[0:0] === 1'b1) ? select_ln588_2_fu_1829_p3 : trunc_ln583_2_reg_3225);

assign select_ln603_13_fu_1929_p3 = ((or_ln603_8_fu_1910_p2[0:0] === 1'b1) ? select_ln603_11_fu_1902_p3 : select_ln603_12_fu_1916_p3);

assign select_ln603_15_fu_2179_p3 = ((and_ln603_3_fu_2173_p2[0:0] === 1'b1) ? shl_ln604_3_fu_2114_p2 : trunc_ln586_3_fu_2091_p1);

assign select_ln603_16_fu_2193_p3 = ((and_ln585_7_fu_2150_p2[0:0] === 1'b1) ? select_ln588_3_fu_2106_p3 : trunc_ln583_3_reg_3275);

assign select_ln603_17_fu_2206_p3 = ((or_ln603_11_fu_2187_p2[0:0] === 1'b1) ? select_ln603_15_fu_2179_p3 : select_ln603_16_fu_2193_p3);

assign select_ln603_4_fu_1362_p3 = ((and_ln585_fu_1319_p2[0:0] === 1'b1) ? select_ln588_fu_1275_p3 : trunc_ln583_reg_3140);

assign select_ln603_5_fu_1375_p3 = ((or_ln603_fu_1356_p2[0:0] === 1'b1) ? select_ln603_fu_1348_p3 : select_ln603_4_fu_1362_p3);

assign select_ln603_7_fu_1743_p3 = ((and_ln603_1_fu_1737_p2[0:0] === 1'b1) ? shl_ln604_1_fu_1678_p2 : trunc_ln586_1_fu_1655_p1);

assign select_ln603_8_fu_1757_p3 = ((and_ln585_3_fu_1714_p2[0:0] === 1'b1) ? select_ln588_1_fu_1670_p3 : trunc_ln583_1_reg_3185);

assign select_ln603_9_fu_1770_p3 = ((or_ln603_5_fu_1751_p2[0:0] === 1'b1) ? select_ln603_7_fu_1743_p3 : select_ln603_8_fu_1757_p3);

assign select_ln603_fu_1348_p3 = ((and_ln603_fu_1342_p2[0:0] === 1'b1) ? shl_ln604_fu_1283_p2 : trunc_ln586_fu_1260_p1);

assign sext_ln581_1_fu_1633_p1 = sh_amt_1_reg_3173;

assign sext_ln581_2_fu_1792_p1 = sh_amt_2_reg_3213;

assign sext_ln581_3_fu_2069_p1 = sh_amt_3_reg_3263;

assign sext_ln581_fu_1238_p1 = sh_amt_reg_3128;

assign sext_ln585_fu_2287_p1 = $signed(add_ln585_fu_2282_p2);

assign sext_ln593_fu_2351_p1 = $signed(add_ln593_fu_2346_p2);

assign sext_ln602_fu_2398_p1 = $signed(sub_ln602_fu_2392_p2);

assign sext_ln610_fu_2517_p1 = $signed(sub_ln610_fu_2511_p2);

assign sext_ln629_fu_2653_p1 = $signed(add_ln629_fu_2648_p2);

assign sext_ln639_fu_2717_p1 = $signed(add_ln639_fu_2712_p2);

assign sext_ln657_fu_2760_p1 = $signed(sub_ln657_fu_2754_p2);

assign sext_ln667_fu_2824_p1 = $signed(add_ln667_fu_2819_p2);

assign sext_ln676_fu_2888_p1 = $signed(add_ln676_fu_2883_p2);

assign sext_ln690_fu_3003_p1 = $signed(add_ln690_fu_2998_p2);

assign sext_ln691_fu_3013_p1 = $signed(add_ln691_reg_3552);

assign sh_amt_1_fu_1487_p3 = ((icmp_ln581_1_fu_1469_p2[0:0] === 1'b1) ? add_ln581_1_fu_1475_p2 : sub_ln581_1_fu_1481_p2);

assign sh_amt_2_fu_1605_p3 = ((icmp_ln581_2_fu_1587_p2[0:0] === 1'b1) ? add_ln581_2_fu_1593_p2 : sub_ln581_2_fu_1599_p2);

assign sh_amt_3_fu_2041_p3 = ((icmp_ln581_3_fu_2023_p2[0:0] === 1'b1) ? add_ln581_3_fu_2029_p2 : sub_ln581_3_fu_2035_p2);

assign sh_amt_fu_1210_p3 = ((icmp_ln581_fu_1192_p2[0:0] === 1'b1) ? add_ln581_fu_1198_p2 : sub_ln581_fu_1204_p2);

assign shl_ln604_1_fu_1678_p2 = trunc_ln583_1_reg_3185 << sext_ln581_1_fu_1633_p1;

assign shl_ln604_2_fu_1837_p2 = trunc_ln583_2_reg_3225 << sext_ln581_2_fu_1792_p1;

assign shl_ln604_3_fu_2114_p2 = trunc_ln583_3_reg_3275 << sext_ln581_3_fu_2069_p1;

assign shl_ln604_fu_1283_p2 = trunc_ln583_reg_3140 << sext_ln581_fu_1238_p1;

assign shl_ln691_1_fu_2964_p3 = {{trunc_ln691_fu_2948_p1}, {5'd0}};

assign shl_ln_fu_2952_p3 = {{trunc_ln691_fu_2948_p1}, {7'd0}};

assign sub_ln581_1_fu_1481_p2 = (12'd20 - F2_1_fu_1463_p2);

assign sub_ln581_2_fu_1599_p2 = (12'd20 - F2_2_fu_1581_p2);

assign sub_ln581_3_fu_2035_p2 = (12'd20 - F2_3_fu_2017_p2);

assign sub_ln581_fu_1204_p2 = (12'd20 - F2_fu_1186_p2);

assign sub_ln585_fu_2260_p2 = (tmp_28_fu_2240_p3 - zext_ln585_fu_2256_p1);

assign sub_ln593_fu_2324_p2 = (tmp_30_fu_2304_p3 - zext_ln593_fu_2320_p1);

assign sub_ln602_1_fu_2443_p2 = (p_shl8_cast_fu_2427_p3 - p_shl9_cast_fu_2435_p3);

assign sub_ln602_fu_2392_p2 = (zext_ln602_fu_2376_p1 - zext_ln602_1_fu_2388_p1);

assign sub_ln610_1_fu_2562_p2 = (p_shl_cast_fu_2546_p3 - p_shl2_cast_fu_2554_p3);

assign sub_ln610_fu_2511_p2 = (zext_ln610_fu_2495_p1 - zext_ln610_1_fu_2507_p1);

assign sub_ln629_fu_2626_p2 = (tmp_36_fu_2606_p3 - zext_ln629_fu_2622_p1);

assign sub_ln639_fu_2690_p2 = (tmp_38_fu_2670_p3 - zext_ln639_fu_2686_p1);

assign sub_ln657_fu_2754_p2 = (tmp_40_fu_2734_p3 - zext_ln657_fu_2750_p1);

assign sub_ln667_fu_2797_p2 = (tmp_42_fu_2777_p3 - zext_ln667_fu_2793_p1);

assign sub_ln676_fu_2861_p2 = (tmp_45_fu_2841_p3 - zext_ln676_fu_2857_p1);

assign sub_ln690_fu_2942_p2 = (tmp_47_fu_2922_p3 - zext_ln690_fu_2938_p1);

assign sub_ln691_fu_2976_p2 = (zext_ln691_1_fu_2960_p1 - zext_ln691_2_fu_2972_p1);

assign tmp_28_fu_2240_p3 = {{v334_0_reg_580}, {7'd0}};

assign tmp_29_fu_2248_p3 = {{v334_0_reg_580}, {5'd0}};

assign tmp_30_fu_2304_p3 = {{v338_0_reg_602}, {7'd0}};

assign tmp_31_fu_2312_p3 = {{v338_0_reg_602}, {5'd0}};

assign tmp_32_fu_2368_p3 = {{v342_0_reg_624}, {3'd0}};

assign tmp_33_fu_2380_p3 = {{v342_0_reg_624}, {1'd0}};

assign tmp_34_fu_2487_p3 = {{v346_0_reg_657}, {3'd0}};

assign tmp_35_fu_2499_p3 = {{v346_0_reg_657}, {1'd0}};

assign tmp_36_fu_2606_p3 = {{v354_0_reg_690}, {3'd0}};

assign tmp_37_fu_2614_p3 = {{v354_0_reg_690}, {1'd0}};

assign tmp_38_fu_2670_p3 = {{i11_0_reg_712}, {3'd0}};

assign tmp_39_fu_2678_p3 = {{i11_0_reg_712}, {1'd0}};

assign tmp_40_fu_2734_p3 = {{h6_0_reg_734}, {3'd0}};

assign tmp_41_fu_2742_p3 = {{h6_0_reg_734}, {1'd0}};

assign tmp_42_fu_2777_p3 = {{v374_0_reg_745}, {3'd0}};

assign tmp_44_fu_2785_p3 = {{v374_0_reg_745}, {1'd0}};

assign tmp_45_fu_2841_p3 = {{v378_0_reg_767}, {7'd0}};

assign tmp_46_fu_2849_p3 = {{v378_0_reg_767}, {5'd0}};

assign tmp_47_fu_2922_p3 = {{h7_0_0_reg_800}, {7'd0}};

assign tmp_48_fu_2930_p3 = {{h7_0_0_reg_800}, {5'd0}};

assign tmp_52_fu_1267_p3 = bitcast_ln696_fu_1264_p1[32'd31];

assign tmp_57_fu_1662_p3 = bitcast_ln696_3_fu_1659_p1[32'd31];

assign tmp_70_fu_1821_p3 = bitcast_ln696_5_fu_1818_p1[32'd31];

assign tmp_73_fu_2098_p3 = bitcast_ln696_7_fu_2095_p1[32'd31];

assign tmp_8_fu_1549_p3 = {{1'd1}, {trunc_ln565_2_fu_1545_p1}};

assign tmp_9_fu_1985_p3 = {{1'd1}, {trunc_ln565_3_fu_1981_p1}};

assign tmp_fu_1154_p3 = {{1'd1}, {trunc_ln565_fu_1150_p1}};

assign tmp_s_fu_1431_p3 = {{1'd1}, {trunc_ln565_1_fu_1427_p1}};

assign trunc_ln556_1_fu_1401_p1 = ireg_V_1_fu_1397_p1[62:0];

assign trunc_ln556_2_fu_1519_p1 = ireg_V_2_fu_1515_p1[62:0];

assign trunc_ln556_3_fu_1955_p1 = ireg_V_3_fu_1951_p1[62:0];

assign trunc_ln556_fu_1124_p1 = ireg_V_fu_1120_p1[62:0];

assign trunc_ln565_1_fu_1427_p1 = ireg_V_1_fu_1397_p1[51:0];

assign trunc_ln565_2_fu_1545_p1 = ireg_V_2_fu_1515_p1[51:0];

assign trunc_ln565_3_fu_1981_p1 = ireg_V_3_fu_1951_p1[51:0];

assign trunc_ln565_fu_1150_p1 = ireg_V_fu_1120_p1[51:0];

assign trunc_ln583_1_fu_1501_p1 = man_V_5_fu_1449_p3[31:0];

assign trunc_ln583_2_fu_1619_p1 = man_V_8_fu_1567_p3[31:0];

assign trunc_ln583_3_fu_2055_p1 = man_V_11_fu_2003_p3[31:0];

assign trunc_ln583_fu_1224_p1 = man_V_2_fu_1172_p3[31:0];

assign trunc_ln586_1_fu_1655_p1 = ashr_ln586_1_fu_1650_p2[31:0];

assign trunc_ln586_2_fu_1814_p1 = ashr_ln586_2_fu_1809_p2[31:0];

assign trunc_ln586_3_fu_2091_p1 = ashr_ln586_3_fu_2086_p2[31:0];

assign trunc_ln586_fu_1260_p1 = ashr_ln586_fu_1255_p2[31:0];

assign trunc_ln602_fu_2423_p1 = add_ln602_fu_2418_p2[7:0];

assign trunc_ln610_fu_2542_p1 = add_ln610_fu_2537_p2[7:0];

assign trunc_ln691_fu_2948_p1 = h7_0_0_reg_800[3:0];

assign v264_address0 = grp_rms_norm_fu_931_v0_address0;

assign v265_0_address0 = grp_linear_forward_no_mu_fu_844_v81_0_address0;

assign v265_1_address0 = grp_linear_forward_no_mu_fu_844_v81_1_address0;

assign v267_0_address0 = grp_linear_forward_no_mu_fu_844_v81_0_address0;

assign v267_1_address0 = grp_linear_forward_no_mu_fu_844_v81_1_address0;

assign v269_0_address0 = grp_linear_forward_no_mu_fu_873_v81_0_address0;

assign v269_0_ce0 = grp_linear_forward_no_mu_fu_873_v81_0_ce0;

assign v269_1_address0 = grp_linear_forward_no_mu_fu_873_v81_1_address0;

assign v269_1_ce0 = grp_linear_forward_no_mu_fu_873_v81_1_ce0;

assign v271_0_address0 = grp_linear_forward_no_mu_fu_844_v81_0_address0;

assign v271_1_address0 = grp_linear_forward_no_mu_fu_844_v81_1_address0;

assign v273_address0 = grp_apply_rotary_pos_emb_fu_963_v163_address0;

assign v273_ce0 = grp_apply_rotary_pos_emb_fu_963_v163_ce0;

assign v274_address0 = grp_apply_rotary_pos_emb_fu_963_v164_address0;

assign v274_ce0 = grp_apply_rotary_pos_emb_fu_963_v164_ce0;

assign v275_address0 = grp_rms_norm_fu_931_v1_address0;

assign v276_address0 = grp_rms_norm_fu_931_v1_address0;

assign v277_address0 = grp_cache_update_fu_992_v193_address0;

assign v278_address0 = grp_cache_update_fu_992_v193_address0;

assign v302_V_fu_1389_p3 = ((or_ln603_4_fu_1383_p2[0:0] === 1'b1) ? select_ln603_5_fu_1375_p3 : 32'd0);

assign v304_V_fu_1784_p3 = ((or_ln603_7_fu_1778_p2[0:0] === 1'b1) ? select_ln603_9_fu_1770_p3 : 32'd0);

assign v306_V_fu_1943_p3 = ((or_ln603_10_fu_1937_p2[0:0] === 1'b1) ? select_ln603_13_fu_1929_p3 : 32'd0);

assign v308_V_fu_2220_p3 = ((or_ln603_13_fu_2214_p2[0:0] === 1'b1) ? select_ln603_17_fu_2206_p3 : 32'd0);

assign v334_fu_2234_p2 = (v334_0_reg_580 + 5'd1);

assign v338_fu_2298_p2 = (v338_0_reg_602 + 5'd1);

assign v342_fu_2362_p2 = (v342_0_reg_624 + 5'd1);

assign v343_fu_2408_p2 = (v343_0_reg_635 + 3'd1);

assign v344_fu_2455_p2 = (v344_0_reg_646 + 7'd1);

assign v346_fu_2481_p2 = (v346_0_reg_657 + 5'd1);

assign v347_fu_2527_p2 = (v347_0_reg_668 + 3'd1);

assign v348_fu_2574_p2 = (v348_0_reg_679 + 7'd1);

assign v354_fu_2600_p2 = (v354_0_reg_690 + 5'd1);

assign v374_fu_2771_p2 = (v374_0_reg_745 + 5'd1);

assign v378_fu_2835_p2 = (v378_0_reg_767 + 5'd1);

assign xor_ln571_1_fu_1683_p2 = (icmp_ln571_1_reg_3161 ^ 1'd1);

assign xor_ln571_2_fu_1842_p2 = (icmp_ln571_2_reg_3201 ^ 1'd1);

assign xor_ln571_3_fu_2119_p2 = (icmp_ln571_3_reg_3251 ^ 1'd1);

assign xor_ln571_fu_1288_p2 = (icmp_ln571_reg_3116 ^ 1'd1);

assign xor_ln581_1_fu_1731_p2 = (or_ln581_1_fu_1726_p2 ^ 1'd1);

assign xor_ln581_2_fu_1890_p2 = (or_ln581_2_fu_1885_p2 ^ 1'd1);

assign xor_ln581_3_fu_2167_p2 = (or_ln581_3_fu_2162_p2 ^ 1'd1);

assign xor_ln581_fu_1336_p2 = (or_ln581_fu_1331_p2 ^ 1'd1);

assign xor_ln582_1_fu_1697_p2 = (or_ln582_1_fu_1693_p2 ^ 1'd1);

assign xor_ln582_2_fu_1856_p2 = (or_ln582_2_fu_1852_p2 ^ 1'd1);

assign xor_ln582_3_fu_2133_p2 = (or_ln582_3_fu_2129_p2 ^ 1'd1);

assign xor_ln582_fu_1302_p2 = (or_ln582_fu_1298_p2 ^ 1'd1);

assign xor_ln585_1_fu_1708_p2 = (icmp_ln585_1_fu_1636_p2 ^ 1'd1);

assign xor_ln585_2_fu_1867_p2 = (icmp_ln585_2_fu_1795_p2 ^ 1'd1);

assign xor_ln585_3_fu_2144_p2 = (icmp_ln585_3_fu_2072_p2 ^ 1'd1);

assign xor_ln585_fu_1313_p2 = (icmp_ln585_fu_1241_p2 ^ 1'd1);

assign zext_ln461_1_fu_1423_p1 = exp_tmp_V_1_fu_1413_p4;

assign zext_ln461_2_fu_1541_p1 = exp_tmp_V_2_fu_1531_p4;

assign zext_ln461_3_fu_1977_p1 = exp_tmp_V_3_fu_1967_p4;

assign zext_ln461_fu_1146_p1 = exp_tmp_V_fu_1136_p4;

assign zext_ln481_fu_1064_p1 = v284_0_0_reg_536;

assign zext_ln503_fu_1081_p1 = v295_0_0_reg_547;

assign zext_ln509_fu_1098_p1 = v298_0_0_reg_558;

assign zext_ln515_fu_1115_p1 = v301_0_0_reg_569;

assign zext_ln585_1_fu_2278_p1 = v336_0_0_reg_591;

assign zext_ln585_fu_2256_p1 = tmp_29_fu_2248_p3;

assign zext_ln586_1_fu_1646_p1 = $unsigned(sext_ln581_1_fu_1633_p1);

assign zext_ln586_2_fu_1805_p1 = $unsigned(sext_ln581_2_fu_1792_p1);

assign zext_ln586_3_fu_2082_p1 = $unsigned(sext_ln581_3_fu_2069_p1);

assign zext_ln586_fu_1251_p1 = $unsigned(sext_ln581_fu_1238_p1);

assign zext_ln593_1_fu_2342_p1 = v340_0_0_reg_613;

assign zext_ln593_fu_2320_p1 = tmp_31_fu_2312_p3;

assign zext_ln602_1_fu_2388_p1 = tmp_33_fu_2380_p3;

assign zext_ln602_2_fu_2414_p1 = v343_0_reg_635;

assign zext_ln602_3_fu_2461_p1 = v344_0_reg_646;

assign zext_ln602_4_fu_2470_p1 = add_ln602_1_fu_2465_p2;

assign zext_ln602_fu_2376_p1 = tmp_32_fu_2368_p3;

assign zext_ln610_1_fu_2507_p1 = tmp_35_fu_2499_p3;

assign zext_ln610_2_fu_2533_p1 = v347_0_reg_668;

assign zext_ln610_3_fu_2580_p1 = v348_0_reg_679;

assign zext_ln610_4_fu_2589_p1 = add_ln610_1_fu_2584_p2;

assign zext_ln610_fu_2495_p1 = tmp_34_fu_2487_p3;

assign zext_ln629_1_fu_2644_p1 = v356_0_0_reg_701;

assign zext_ln629_fu_2622_p1 = tmp_37_fu_2614_p3;

assign zext_ln639_1_fu_2708_p1 = k10_0_0_reg_723;

assign zext_ln639_fu_2686_p1 = tmp_39_fu_2678_p3;

assign zext_ln657_fu_2750_p1 = tmp_41_fu_2742_p3;

assign zext_ln667_1_fu_2815_p1 = v376_0_0_reg_756;

assign zext_ln667_fu_2793_p1 = tmp_44_fu_2785_p3;

assign zext_ln676_1_fu_2879_p1 = v380_0_0_reg_778;

assign zext_ln676_fu_2857_p1 = tmp_46_fu_2849_p3;

assign zext_ln684_fu_2905_p1 = v383_0_0_reg_789;

assign zext_ln689_fu_2982_p1 = d4_0_0_reg_811;

assign zext_ln690_fu_2938_p1 = tmp_48_fu_2930_p3;

assign zext_ln691_1_fu_2960_p1 = shl_ln_fu_2952_p3;

assign zext_ln691_2_fu_2972_p1 = shl_ln691_1_fu_2964_p3;

assign zext_ln691_fu_3016_p1 = $unsigned(sext_ln691_fu_3013_p1);

assign zext_ln698_fu_3033_p1 = v390_0_0_reg_822;

assign zext_ln737_fu_3050_p1 = v408_0_0_reg_833;

always @ (posedge ap_clk) begin
    sub_ln585_reg_3299[4:0] <= 5'b00000;
    sub_ln593_reg_3320[4:0] <= 5'b00000;
    sext_ln602_reg_3341[0] <= 1'b0;
    sub_ln602_1_reg_3354[4:0] <= 5'b00000;
    sext_ln610_reg_3375[0] <= 1'b0;
    sub_ln610_1_reg_3388[4:0] <= 5'b00000;
    sub_ln629_reg_3409[0] <= 1'b0;
    sub_ln639_reg_3430[0] <= 1'b0;
    attn_weights_0_addr_1_reg_3461[0] <= 1'b0;
    sub_ln667_reg_3479[0] <= 1'b0;
    sub_ln676_reg_3500[4:0] <= 5'b00000;
    sub_ln690_reg_3529[4:0] <= 5'b00000;
    sub_ln691_reg_3534[4:0] <= 5'b00000;
end

endmodule //attention
