-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity attention is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    v264_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    v264_ce0 : OUT STD_LOGIC;
    v264_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v265_0_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
    v265_0_ce0 : OUT STD_LOGIC;
    v265_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    v265_1_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
    v265_1_ce0 : OUT STD_LOGIC;
    v265_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    v266 : IN STD_LOGIC_VECTOR (31 downto 0);
    v267_0_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
    v267_0_ce0 : OUT STD_LOGIC;
    v267_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    v267_1_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
    v267_1_ce0 : OUT STD_LOGIC;
    v267_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    v268 : IN STD_LOGIC_VECTOR (31 downto 0);
    v269_0_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
    v269_0_ce0 : OUT STD_LOGIC;
    v269_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    v269_1_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
    v269_1_ce0 : OUT STD_LOGIC;
    v269_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    v270 : IN STD_LOGIC_VECTOR (31 downto 0);
    v271_0_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
    v271_0_ce0 : OUT STD_LOGIC;
    v271_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    v271_1_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
    v271_1_ce0 : OUT STD_LOGIC;
    v271_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    v272 : IN STD_LOGIC_VECTOR (31 downto 0);
    v273_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v273_ce0 : OUT STD_LOGIC;
    v273_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v274_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v274_ce0 : OUT STD_LOGIC;
    v274_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v275_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    v275_ce0 : OUT STD_LOGIC;
    v275_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v276_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    v276_ce0 : OUT STD_LOGIC;
    v276_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v277_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    v277_ce0 : OUT STD_LOGIC;
    v277_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v278_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    v278_ce0 : OUT STD_LOGIC;
    v278_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v279 : IN STD_LOGIC_VECTOR (31 downto 0);
    v280_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    v280_ce0 : OUT STD_LOGIC;
    v280_we0 : OUT STD_LOGIC;
    v280_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of attention is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "attention,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.386250,HLS_SYN_LAT=1371083,HLS_SYN_TPT=none,HLS_SYN_MEM=198,HLS_SYN_DSP=88,HLS_SYN_FF=39452,HLS_SYN_LUT=52126,HLS_VERSION=2019_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (76 downto 0) := "00000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (76 downto 0) := "00000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (76 downto 0) := "00000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (76 downto 0) := "00000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (76 downto 0) := "00000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (76 downto 0) := "00000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (76 downto 0) := "00000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (76 downto 0) := "00001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (76 downto 0) := "00010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (76 downto 0) := "00100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (76 downto 0) := "01000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (76 downto 0) := "10000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_411CC471 : STD_LOGIC_VECTOR (31 downto 0) := "01000001000111001100010001110001";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv11_600 : STD_LOGIC_VECTOR (10 downto 0) := "11000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_14 : STD_LOGIC_VECTOR (11 downto 0) := "000000010100";
    constant ap_const_lv12_FEC : STD_LOGIC_VECTOR (11 downto 0) := "111111101100";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv7_60 : STD_LOGIC_VECTOR (6 downto 0) := "1100000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (76 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal quantized_hidden_sta_8_ce0 : STD_LOGIC;
    signal quantized_hidden_sta_8_we0 : STD_LOGIC;
    signal quantized_hidden_sta_7_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_7_ce0 : STD_LOGIC;
    signal quantized_hidden_sta_7_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_6_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_6_ce0 : STD_LOGIC;
    signal quantized_hidden_sta_6_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_5_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_5_ce0 : STD_LOGIC;
    signal quantized_hidden_sta_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_4_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_4_ce0 : STD_LOGIC;
    signal quantized_hidden_sta_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_3_ce0 : STD_LOGIC;
    signal quantized_hidden_sta_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_2_ce0 : STD_LOGIC;
    signal quantized_hidden_sta_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_1_ce0 : STD_LOGIC;
    signal quantized_hidden_sta_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_ce0 : STD_LOGIC;
    signal quantized_hidden_sta_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_proj_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal q_proj_0_ce0 : STD_LOGIC;
    signal q_proj_0_we0 : STD_LOGIC;
    signal q_proj_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal q_proj_0_ce1 : STD_LOGIC;
    signal q_proj_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_proj_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_proj_0_ce0 : STD_LOGIC;
    signal k_proj_0_we0 : STD_LOGIC;
    signal k_proj_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_proj_0_ce1 : STD_LOGIC;
    signal k_proj_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_proj_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal v_proj_0_ce0 : STD_LOGIC;
    signal v_proj_0_we0 : STD_LOGIC;
    signal v_proj_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_proj_transposed_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal k_proj_transposed_ce0 : STD_LOGIC;
    signal k_proj_transposed_we0 : STD_LOGIC;
    signal k_proj_transposed_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal quantized_final_outp_8_ce0 : STD_LOGIC;
    signal quantized_final_outp_8_we0 : STD_LOGIC;
    signal quantized_final_outp_7_ce0 : STD_LOGIC;
    signal quantized_final_outp_7_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_final_outp_6_ce0 : STD_LOGIC;
    signal quantized_final_outp_6_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_final_outp_5_ce0 : STD_LOGIC;
    signal quantized_final_outp_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_final_outp_4_ce0 : STD_LOGIC;
    signal quantized_final_outp_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_final_outp_3_ce0 : STD_LOGIC;
    signal quantized_final_outp_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_final_outp_2_ce0 : STD_LOGIC;
    signal quantized_final_outp_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_final_outp_1_ce0 : STD_LOGIC;
    signal quantized_final_outp_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_final_outp_ce0 : STD_LOGIC;
    signal quantized_final_outp_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_quantize_activation_fu_955_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1040 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_quantize_activation_fu_955_ap_ready : STD_LOGIC;
    signal grp_quantize_activation_fu_955_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state75 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal attn_weights_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1046 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal add_ln480_fu_1058_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln502_fu_1075_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal add_ln508_fu_1092_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal add_ln514_fu_1109_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal man_V_2_fu_1172_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_2_reg_3111 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal icmp_ln571_fu_1180_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_reg_3116 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_fu_1192_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_reg_3122 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_fu_1210_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_reg_3128 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln582_fu_1218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_reg_3134 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln583_fu_1224_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln583_reg_3140 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_43_reg_3146 : STD_LOGIC_VECTOR (6 downto 0);
    signal v302_V_fu_1389_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal v302_V_reg_3151 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal man_V_5_fu_1449_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_5_reg_3156 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal icmp_ln571_1_fu_1457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_1_reg_3161 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_1_fu_1469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_1_reg_3167 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_1_fu_1487_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_1_reg_3173 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln582_1_fu_1495_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_1_reg_3179 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln583_1_fu_1501_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln583_1_reg_3185 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_56_reg_3191 : STD_LOGIC_VECTOR (6 downto 0);
    signal man_V_8_fu_1567_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_8_reg_3196 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln571_2_fu_1575_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_2_reg_3201 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_2_fu_1587_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_2_reg_3207 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_2_fu_1605_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_2_reg_3213 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln582_2_fu_1613_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_2_reg_3219 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln583_2_fu_1619_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln583_2_reg_3225 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_69_reg_3231 : STD_LOGIC_VECTOR (6 downto 0);
    signal v304_V_fu_1784_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal v304_V_reg_3236 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal grp_linear_forward_no_mu_fu_844_ap_ready : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_844_ap_done : STD_LOGIC;
    signal v306_V_fu_1943_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal v306_V_reg_3241 : STD_LOGIC_VECTOR (31 downto 0);
    signal man_V_11_fu_2003_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_11_reg_3246 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal icmp_ln571_3_fu_2011_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_3_reg_3251 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_3_fu_2023_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_3_reg_3257 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_3_fu_2041_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_3_reg_3263 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln582_3_fu_2049_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_3_reg_3269 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln583_3_fu_2055_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln583_3_reg_3275 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_72_reg_3281 : STD_LOGIC_VECTOR (6 downto 0);
    signal v308_V_fu_2220_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal v308_V_reg_3286 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal grp_reshape_2D_to_3D_fu_1009_ap_ready : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_1009_ap_done : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_1017_ap_ready : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_1017_ap_done : STD_LOGIC;
    signal ap_block_state16_on_subcall_done : BOOLEAN;
    signal v334_fu_2234_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal v334_reg_3294 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal sub_ln585_fu_2260_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln585_reg_3299 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln582_4_fu_2228_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln584_fu_2272_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal v338_fu_2298_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal v338_reg_3315 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal sub_ln593_fu_2324_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln593_reg_3320 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln590_fu_2292_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln592_fu_2336_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal v342_fu_2362_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal v342_reg_3336 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal sext_ln602_fu_2398_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln602_reg_3341 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln599_fu_2356_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v343_fu_2408_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal v343_reg_3349 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal sub_ln602_1_fu_2443_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln602_1_reg_3354 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln600_fu_2402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v344_fu_2455_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal v346_fu_2481_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal v346_reg_3370 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal sext_ln610_fu_2517_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln610_reg_3375 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln607_fu_2475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v347_fu_2527_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal v347_reg_3383 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal sub_ln610_1_fu_2562_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln610_1_reg_3388 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln608_fu_2521_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v348_fu_2574_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal v354_fu_2600_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal v354_reg_3404 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal sub_ln629_fu_2626_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln629_reg_3409 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln626_fu_2594_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln628_fu_2638_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal i11_fu_2664_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i11_reg_3425 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal sub_ln639_fu_2690_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln639_reg_3430 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln636_fu_2658_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln638_fu_2702_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln638_reg_3438 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal attn_weights_0_addr_2_reg_3443 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln638_fu_2696_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1029_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_reg_3448 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal h6_fu_2728_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal h6_reg_3456 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal attn_weights_0_addr_1_reg_3461 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln653_fu_2722_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1024_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal v2_reg_3466 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal v374_fu_2771_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal v374_reg_3474 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal sub_ln667_fu_2797_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln667_reg_3479 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln664_fu_2765_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln666_fu_2809_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal v378_fu_2835_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal v378_reg_3495 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal sub_ln676_fu_2861_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln676_reg_3500 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln673_fu_2829_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln675_fu_2873_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal add_ln683_fu_2899_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal add_ln688_fu_2916_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln688_reg_3524 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal sub_ln690_fu_2942_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln690_reg_3529 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln688_fu_2910_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln691_fu_2976_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln691_reg_3534 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln689_fu_2992_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln689_reg_3542 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal icmp_ln689_fu_2986_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln691_fu_3008_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln691_reg_3552 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln697_fu_3027_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal add_ln736_fu_3044_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal rms_hidden_states_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal rms_hidden_states_0_ce0 : STD_LOGIC;
    signal rms_hidden_states_0_we0 : STD_LOGIC;
    signal rms_hidden_states_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rms_hidden_states_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal q_proj_re_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal q_proj_re_ce0 : STD_LOGIC;
    signal q_proj_re_we0 : STD_LOGIC;
    signal q_proj_re_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal q_proj_re_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_proj_re_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_proj_re_ce0 : STD_LOGIC;
    signal k_proj_re_we0 : STD_LOGIC;
    signal k_proj_re_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_proj_re_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_proj_re_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal v_proj_re_ce0 : STD_LOGIC;
    signal v_proj_re_we0 : STD_LOGIC;
    signal v_proj_re_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_proj_re_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal q_embed_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal q_embed_0_ce0 : STD_LOGIC;
    signal q_embed_0_we0 : STD_LOGIC;
    signal q_embed_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal q_embed_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_embed_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_embed_0_ce0 : STD_LOGIC;
    signal k_embed_0_we0 : STD_LOGIC;
    signal k_embed_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_embed_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal updated_k_cache_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal updated_k_cache_ce0 : STD_LOGIC;
    signal updated_k_cache_we0 : STD_LOGIC;
    signal updated_k_cache_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal updated_k_cache_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal updated_v_cache_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal updated_v_cache_ce0 : STD_LOGIC;
    signal updated_v_cache_we0 : STD_LOGIC;
    signal updated_v_cache_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal updated_v_cache_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal attn_weights_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal attn_weights_0_ce0 : STD_LOGIC;
    signal attn_weights_0_we0 : STD_LOGIC;
    signal attn_weights_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal softmax_attn_weights_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal softmax_attn_weights_ce0 : STD_LOGIC;
    signal softmax_attn_weights_we0 : STD_LOGIC;
    signal softmax_attn_weights_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal softmax_attn_weights_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal attn_output_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal attn_output_0_ce0 : STD_LOGIC;
    signal attn_output_0_we0 : STD_LOGIC;
    signal attn_output_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal attn_output_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal attn_output_2D_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal attn_output_2D_ce0 : STD_LOGIC;
    signal attn_output_2D_we0 : STD_LOGIC;
    signal attn_output_2D_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal attn_output_2D_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rms_attn_output_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal rms_attn_output_0_ce0 : STD_LOGIC;
    signal rms_attn_output_0_we0 : STD_LOGIC;
    signal rms_attn_output_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rms_attn_output_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_linear_forward_no_mu_fu_844_ap_start : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_844_ap_idle : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_844_v79_0_0_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v79_0_0_0_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_844_v79_0_0_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v79_0_0_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v79_0_0_1_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_844_v79_0_0_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v79_0_0_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v79_0_0_2_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_844_v79_0_0_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v79_0_0_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v79_0_0_3_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_844_v79_0_0_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v79_1_0_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v79_1_0_0_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_844_v79_1_0_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v79_1_0_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v79_1_0_1_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_844_v79_1_0_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v79_1_0_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v79_1_0_2_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_844_v79_1_0_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v79_1_0_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v79_1_0_3_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_844_v79_1_0_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v81_0_address0 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v81_0_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_844_v81_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v81_1_address0 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v81_1_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_844_v81_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v82_V : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v83_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v83_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_844_v83_we0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_844_v83_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_linear_forward_no_mu_fu_873_ap_start : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_873_ap_done : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_873_ap_idle : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_873_ap_ready : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_873_v79_0_0_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_873_v79_0_0_0_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_873_v79_0_0_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_873_v79_0_0_1_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_873_v79_0_0_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_873_v79_0_0_2_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_873_v79_0_0_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_873_v79_0_0_3_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_873_v79_1_0_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_873_v79_1_0_0_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_873_v79_1_0_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_873_v79_1_0_1_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_873_v79_1_0_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_873_v79_1_0_2_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_873_v79_1_0_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_873_v79_1_0_3_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_873_v81_0_address0 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_linear_forward_no_mu_fu_873_v81_0_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_873_v81_1_address0 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_linear_forward_no_mu_fu_873_v81_1_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_873_v83_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_linear_forward_no_mu_fu_873_v83_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_873_v83_we0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_873_v83_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_softmax_fu_911_ap_start : STD_LOGIC;
    signal grp_softmax_fu_911_ap_done : STD_LOGIC;
    signal grp_softmax_fu_911_ap_idle : STD_LOGIC;
    signal grp_softmax_fu_911_ap_ready : STD_LOGIC;
    signal grp_softmax_fu_911_v225_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_softmax_fu_911_v225_0_ce0 : STD_LOGIC;
    signal grp_softmax_fu_911_v226_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_softmax_fu_911_v226_0_ce0 : STD_LOGIC;
    signal grp_softmax_fu_911_v226_0_we0 : STD_LOGIC;
    signal grp_softmax_fu_911_v226_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rms_norm_fu_931_ap_start : STD_LOGIC;
    signal grp_rms_norm_fu_931_ap_done : STD_LOGIC;
    signal grp_rms_norm_fu_931_ap_idle : STD_LOGIC;
    signal grp_rms_norm_fu_931_ap_ready : STD_LOGIC;
    signal grp_rms_norm_fu_931_v0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_rms_norm_fu_931_v0_ce0 : STD_LOGIC;
    signal grp_rms_norm_fu_931_v0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rms_norm_fu_931_v1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_rms_norm_fu_931_v1_ce0 : STD_LOGIC;
    signal grp_rms_norm_fu_931_v1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rms_norm_fu_931_v3_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_rms_norm_fu_931_v3_0_ce0 : STD_LOGIC;
    signal grp_rms_norm_fu_931_v3_0_we0 : STD_LOGIC;
    signal grp_rms_norm_fu_931_v3_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_quantize_activation_fu_955_ap_start : STD_LOGIC;
    signal grp_quantize_activation_fu_955_ap_idle : STD_LOGIC;
    signal grp_quantize_activation_fu_955_v22_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_quantize_activation_fu_955_v22_0_ce0 : STD_LOGIC;
    signal grp_quantize_activation_fu_955_v22_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_quantize_activation_fu_955_v24_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_quantize_activation_fu_955_v24_0_ce0 : STD_LOGIC;
    signal grp_quantize_activation_fu_955_v24_0_we0 : STD_LOGIC;
    signal grp_quantize_activation_fu_955_v24_0_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_apply_rotary_pos_emb_fu_963_ap_start : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_963_ap_done : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_963_ap_idle : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_963_ap_ready : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_963_v163_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_apply_rotary_pos_emb_fu_963_v163_ce0 : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_963_v164_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_apply_rotary_pos_emb_fu_963_v164_ce0 : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_963_v165_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_apply_rotary_pos_emb_fu_963_v165_0_ce0 : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_963_v165_0_we0 : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_963_v165_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_apply_rotary_pos_emb_fu_963_v166_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_apply_rotary_pos_emb_fu_963_v166_0_ce0 : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_963_v166_0_we0 : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_963_v166_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_apply_rotary_pos_emb_fu_963_q_proj_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_apply_rotary_pos_emb_fu_963_q_proj_0_ce0 : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_963_q_proj_0_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_apply_rotary_pos_emb_fu_963_q_proj_0_ce1 : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_963_k_proj_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_apply_rotary_pos_emb_fu_963_k_proj_0_ce0 : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_963_k_proj_0_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_apply_rotary_pos_emb_fu_963_k_proj_0_ce1 : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_977_ap_start : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_977_ap_done : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_977_ap_idle : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_977_ap_ready : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_977_v210_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_GEMM_3D_float_fu_977_v210_0_ce0 : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_977_v212_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_GEMM_3D_float_fu_977_v212_0_ce0 : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_977_v212_0_we0 : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_977_v212_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_GEMM_3D_float_fu_977_k_proj_transposed_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_GEMM_3D_float_fu_977_k_proj_transposed_ce0 : STD_LOGIC;
    signal grp_GEMM_3D_float2_fu_985_ap_start : STD_LOGIC;
    signal grp_GEMM_3D_float2_fu_985_ap_done : STD_LOGIC;
    signal grp_GEMM_3D_float2_fu_985_ap_idle : STD_LOGIC;
    signal grp_GEMM_3D_float2_fu_985_ap_ready : STD_LOGIC;
    signal grp_GEMM_3D_float2_fu_985_v252_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_GEMM_3D_float2_fu_985_v252_0_ce0 : STD_LOGIC;
    signal grp_GEMM_3D_float2_fu_985_v253_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_GEMM_3D_float2_fu_985_v253_ce0 : STD_LOGIC;
    signal grp_GEMM_3D_float2_fu_985_v254_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_GEMM_3D_float2_fu_985_v254_0_ce0 : STD_LOGIC;
    signal grp_GEMM_3D_float2_fu_985_v254_0_we0 : STD_LOGIC;
    signal grp_GEMM_3D_float2_fu_985_v254_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cache_update_fu_992_ap_start : STD_LOGIC;
    signal grp_cache_update_fu_992_ap_done : STD_LOGIC;
    signal grp_cache_update_fu_992_ap_idle : STD_LOGIC;
    signal grp_cache_update_fu_992_ap_ready : STD_LOGIC;
    signal grp_cache_update_fu_992_v193_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_cache_update_fu_992_v193_ce0 : STD_LOGIC;
    signal grp_cache_update_fu_992_v193_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cache_update_fu_992_v194_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_cache_update_fu_992_v194_0_ce0 : STD_LOGIC;
    signal grp_cache_update_fu_992_v194_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cache_update_fu_992_v195_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cache_update_fu_992_v195_ce0 : STD_LOGIC;
    signal grp_cache_update_fu_992_v195_we0 : STD_LOGIC;
    signal grp_cache_update_fu_992_v195_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_transpose_last_two_d_fu_1002_ap_start : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_1002_ap_done : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_1002_ap_idle : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_1002_ap_ready : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_1002_v204_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_transpose_last_two_d_fu_1002_v204_ce0 : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_1002_v205_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_transpose_last_two_d_fu_1002_v205_ce0 : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_1002_v205_we0 : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_1002_v205_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_reshape_2D_to_3D_fu_1009_ap_start : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_1009_ap_idle : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_1009_v147_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_reshape_2D_to_3D_fu_1009_v147_ce0 : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_1009_v147_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_reshape_2D_to_3D_fu_1009_v148_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_reshape_2D_to_3D_fu_1009_v148_0_ce0 : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_1009_v148_0_we0 : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_1009_v148_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_reshape_2D_to_3D_fu_1017_ap_start : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_1017_ap_idle : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_1017_v147_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_reshape_2D_to_3D_fu_1017_v147_ce0 : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_1017_v148_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_reshape_2D_to_3D_fu_1017_v148_0_ce0 : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_1017_v148_0_we0 : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_1017_v148_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal v284_0_0_reg_536 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln480_fu_1052_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v295_0_0_reg_547 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln502_fu_1069_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v298_0_0_reg_558 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln508_fu_1086_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v301_0_0_reg_569 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln514_fu_1103_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v334_0_reg_580 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln584_fu_2266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v336_0_0_reg_591 : STD_LOGIC_VECTOR (6 downto 0);
    signal v338_0_reg_602 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln592_fu_2330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v340_0_0_reg_613 : STD_LOGIC_VECTOR (6 downto 0);
    signal v342_0_reg_624 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal v343_0_reg_635 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln601_fu_2449_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v344_0_reg_646 : STD_LOGIC_VECTOR (6 downto 0);
    signal v346_0_reg_657 : STD_LOGIC_VECTOR (4 downto 0);
    signal v347_0_reg_668 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln609_fu_2568_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v348_0_reg_679 : STD_LOGIC_VECTOR (6 downto 0);
    signal v354_0_reg_690 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_block_state30_on_subcall_done : BOOLEAN;
    signal icmp_ln628_fu_2632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v356_0_0_reg_701 : STD_LOGIC_VECTOR (2 downto 0);
    signal i11_0_reg_712 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal k10_0_0_reg_723 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal h6_0_reg_734 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal v374_0_reg_745 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln666_fu_2803_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v376_0_0_reg_756 : STD_LOGIC_VECTOR (2 downto 0);
    signal v378_0_reg_767 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal icmp_ln675_fu_2867_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v380_0_0_reg_778 : STD_LOGIC_VECTOR (6 downto 0);
    signal v383_0_0_reg_789 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln683_fu_2893_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal h7_0_0_reg_800 : STD_LOGIC_VECTOR (4 downto 0);
    signal d4_0_0_reg_811 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal v390_0_0_reg_822 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln697_fu_3021_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v408_0_0_reg_833 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln736_fu_3038_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_linear_forward_no_mu_fu_844_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state77 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state77 : signal is "none";
    signal grp_linear_forward_no_mu_fu_873_ap_start_reg : STD_LOGIC := '0';
    signal grp_softmax_fu_911_ap_start_reg : STD_LOGIC := '0';
    signal grp_rms_norm_fu_931_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state73 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal grp_quantize_activation_fu_955_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state74 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal grp_apply_rotary_pos_emb_fu_963_ap_start_reg : STD_LOGIC := '0';
    signal grp_GEMM_3D_float_fu_977_ap_start_reg : STD_LOGIC := '0';
    signal grp_GEMM_3D_float2_fu_985_ap_start_reg : STD_LOGIC := '0';
    signal grp_cache_update_fu_992_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal grp_transpose_last_two_d_fu_1002_ap_start_reg : STD_LOGIC := '0';
    signal grp_reshape_2D_to_3D_fu_1009_ap_start_reg : STD_LOGIC := '0';
    signal grp_reshape_2D_to_3D_fu_1017_ap_start_reg : STD_LOGIC := '0';
    signal zext_ln481_fu_1064_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln503_fu_1081_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln509_fu_1098_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln515_fu_1115_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln585_fu_2287_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln593_fu_2351_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln602_4_fu_2470_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln610_4_fu_2589_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln629_fu_2653_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln639_fu_2717_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln657_fu_2760_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln667_fu_2824_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln676_fu_2888_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln684_fu_2905_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln690_fu_3003_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln691_fu_3016_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln698_fu_3033_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln737_fu_3050_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal grp_fu_1034_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1034_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_V_fu_1120_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_fu_1136_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln565_fu_1150_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_fu_1154_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_59_fu_1162_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_s_fu_1128_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_1_fu_1166_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln556_fu_1124_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln461_fu_1146_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_fu_1186_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln581_fu_1198_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_fu_1204_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln581_fu_1238_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln586_fu_1251_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_fu_1255_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal bitcast_ln696_fu_1264_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_52_fu_1267_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_fu_1288_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln582_fu_1298_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_fu_1302_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_fu_1241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_fu_1308_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln585_fu_1313_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_fu_1331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_fu_1246_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_fu_1336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_fu_1342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln604_fu_1283_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln586_fu_1260_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln585_2_fu_1325_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_fu_1319_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln588_fu_1275_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln582_fu_1293_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_fu_1356_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_fu_1348_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln603_4_fu_1362_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln603_3_fu_1369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_4_fu_1383_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_5_fu_1375_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ireg_V_1_fu_1397_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_1_fu_1413_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln565_1_fu_1427_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_s_fu_1431_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_61_fu_1439_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_60_fu_1405_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_4_fu_1443_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln556_1_fu_1401_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln461_1_fu_1423_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_1_fu_1463_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln581_1_fu_1475_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_1_fu_1481_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1037_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_V_2_fu_1515_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_2_fu_1531_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln565_2_fu_1545_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_8_fu_1549_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_63_fu_1557_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_62_fu_1523_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_7_fu_1561_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln556_2_fu_1519_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln461_2_fu_1541_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_2_fu_1581_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln581_2_fu_1593_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_2_fu_1599_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln581_1_fu_1633_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln586_1_fu_1646_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_1_fu_1650_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal bitcast_ln696_3_fu_1659_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_57_fu_1662_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_1_fu_1683_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln582_1_fu_1693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_1_fu_1697_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_1_fu_1636_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_1_fu_1703_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln585_1_fu_1708_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_1_fu_1726_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_1_fu_1641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_1_fu_1731_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_1_fu_1737_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln604_1_fu_1678_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln586_1_fu_1655_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln585_4_fu_1720_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_3_fu_1714_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln588_1_fu_1670_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln582_1_fu_1688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_5_fu_1751_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_7_fu_1743_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln603_8_fu_1757_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln603_6_fu_1764_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_7_fu_1778_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_9_fu_1770_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln581_2_fu_1792_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln586_2_fu_1805_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_2_fu_1809_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal bitcast_ln696_5_fu_1818_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_70_fu_1821_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_2_fu_1842_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln582_2_fu_1852_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_2_fu_1856_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_2_fu_1795_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_2_fu_1862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln585_2_fu_1867_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_2_fu_1885_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_2_fu_1800_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_2_fu_1890_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_2_fu_1896_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln604_2_fu_1837_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln586_2_fu_1814_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln585_6_fu_1879_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_5_fu_1873_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln588_2_fu_1829_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln582_2_fu_1847_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_8_fu_1910_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_11_fu_1902_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln603_12_fu_1916_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln603_9_fu_1923_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_10_fu_1937_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_13_fu_1929_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ireg_V_3_fu_1951_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_3_fu_1967_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln565_3_fu_1981_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_9_fu_1985_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_65_fu_1993_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_64_fu_1959_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_10_fu_1997_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln556_3_fu_1955_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln461_3_fu_1977_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_3_fu_2017_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln581_3_fu_2029_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_3_fu_2035_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln581_3_fu_2069_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln586_3_fu_2082_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_3_fu_2086_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal bitcast_ln696_7_fu_2095_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_73_fu_2098_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_3_fu_2119_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln582_3_fu_2129_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_3_fu_2133_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_3_fu_2072_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_3_fu_2139_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln585_3_fu_2144_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_3_fu_2162_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_3_fu_2077_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_3_fu_2167_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_3_fu_2173_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln604_3_fu_2114_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln586_3_fu_2091_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln585_8_fu_2156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_7_fu_2150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln588_3_fu_2106_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln582_3_fu_2124_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_11_fu_2187_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_15_fu_2179_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln603_16_fu_2193_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln603_12_fu_2200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_13_fu_2214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_17_fu_2206_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_fu_2248_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_28_fu_2240_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln585_fu_2256_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln585_1_fu_2278_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln585_fu_2282_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_31_fu_2312_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_30_fu_2304_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln593_fu_2320_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln593_1_fu_2342_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln593_fu_2346_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_32_fu_2368_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_33_fu_2380_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln602_fu_2376_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln602_1_fu_2388_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln602_fu_2392_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln602_2_fu_2414_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln602_fu_2418_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln602_fu_2423_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl8_cast_fu_2427_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl9_cast_fu_2435_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln602_3_fu_2461_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln602_1_fu_2465_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_34_fu_2487_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_35_fu_2499_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln610_fu_2495_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln610_1_fu_2507_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln610_fu_2511_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln610_2_fu_2533_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln610_fu_2537_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln610_fu_2542_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl_cast_fu_2546_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl2_cast_fu_2554_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln610_3_fu_2580_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln610_1_fu_2584_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_37_fu_2614_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_36_fu_2606_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln629_fu_2622_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln629_1_fu_2644_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln629_fu_2648_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_39_fu_2678_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_38_fu_2670_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln639_fu_2686_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln639_1_fu_2708_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln639_fu_2712_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_41_fu_2742_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_40_fu_2734_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln657_fu_2750_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln657_fu_2754_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_44_fu_2785_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_42_fu_2777_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln667_fu_2793_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln667_1_fu_2815_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln667_fu_2819_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_46_fu_2849_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_45_fu_2841_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln676_fu_2857_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln676_1_fu_2879_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln676_fu_2883_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_48_fu_2930_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_47_fu_2922_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln690_fu_2938_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln691_fu_2948_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln_fu_2952_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln691_1_fu_2964_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln691_1_fu_2960_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln691_2_fu_2972_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln689_fu_2982_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln690_fu_2998_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln691_fu_3013_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1034_ce : STD_LOGIC;
    signal ap_block_state14_on_subcall_done : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (76 downto 0);

    component linear_forward_no_mu IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v79_0_0_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        v79_0_0_0_ce0 : OUT STD_LOGIC;
        v79_0_0_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        v79_0_0_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        v79_0_0_1_ce0 : OUT STD_LOGIC;
        v79_0_0_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        v79_0_0_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        v79_0_0_2_ce0 : OUT STD_LOGIC;
        v79_0_0_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        v79_0_0_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        v79_0_0_3_ce0 : OUT STD_LOGIC;
        v79_0_0_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        v79_1_0_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        v79_1_0_0_ce0 : OUT STD_LOGIC;
        v79_1_0_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        v79_1_0_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        v79_1_0_1_ce0 : OUT STD_LOGIC;
        v79_1_0_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        v79_1_0_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        v79_1_0_2_ce0 : OUT STD_LOGIC;
        v79_1_0_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        v79_1_0_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        v79_1_0_3_ce0 : OUT STD_LOGIC;
        v79_1_0_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        v80_0_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        v81_0_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
        v81_0_ce0 : OUT STD_LOGIC;
        v81_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        v81_1_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
        v81_1_ce0 : OUT STD_LOGIC;
        v81_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        v82_V : IN STD_LOGIC_VECTOR (31 downto 0);
        v83_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v83_ce0 : OUT STD_LOGIC;
        v83_we0 : OUT STD_LOGIC;
        v83_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component softmax IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v225_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        v225_0_ce0 : OUT STD_LOGIC;
        v225_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v226_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        v226_0_ce0 : OUT STD_LOGIC;
        v226_0_we0 : OUT STD_LOGIC;
        v226_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        v226_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component rms_norm IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v0_ce0 : OUT STD_LOGIC;
        v0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v1_ce0 : OUT STD_LOGIC;
        v1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v3_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v3_0_ce0 : OUT STD_LOGIC;
        v3_0_we0 : OUT STD_LOGIC;
        v3_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component quantize_activation IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v22_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v22_0_ce0 : OUT STD_LOGIC;
        v22_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v24_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v24_0_ce0 : OUT STD_LOGIC;
        v24_0_we0 : OUT STD_LOGIC;
        v24_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component apply_rotary_pos_emb IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v163_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v163_ce0 : OUT STD_LOGIC;
        v163_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v164_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v164_ce0 : OUT STD_LOGIC;
        v164_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v165_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v165_0_ce0 : OUT STD_LOGIC;
        v165_0_we0 : OUT STD_LOGIC;
        v165_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        v166_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v166_0_ce0 : OUT STD_LOGIC;
        v166_0_we0 : OUT STD_LOGIC;
        v166_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        q_proj_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        q_proj_0_ce0 : OUT STD_LOGIC;
        q_proj_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q_proj_0_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        q_proj_0_ce1 : OUT STD_LOGIC;
        q_proj_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        k_proj_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k_proj_0_ce0 : OUT STD_LOGIC;
        k_proj_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        k_proj_0_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k_proj_0_ce1 : OUT STD_LOGIC;
        k_proj_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component GEMM_3D_float IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v210_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v210_0_ce0 : OUT STD_LOGIC;
        v210_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v212_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        v212_0_ce0 : OUT STD_LOGIC;
        v212_0_we0 : OUT STD_LOGIC;
        v212_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        v212_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        k_proj_transposed_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        k_proj_transposed_ce0 : OUT STD_LOGIC;
        k_proj_transposed_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component GEMM_3D_float2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v252_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        v252_0_ce0 : OUT STD_LOGIC;
        v252_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v253_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        v253_ce0 : OUT STD_LOGIC;
        v253_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v254_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v254_0_ce0 : OUT STD_LOGIC;
        v254_0_we0 : OUT STD_LOGIC;
        v254_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        v254_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cache_update IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v193_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        v193_ce0 : OUT STD_LOGIC;
        v193_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v194_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v194_0_ce0 : OUT STD_LOGIC;
        v194_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v195_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        v195_ce0 : OUT STD_LOGIC;
        v195_we0 : OUT STD_LOGIC;
        v195_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component transpose_last_two_d IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v204_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        v204_ce0 : OUT STD_LOGIC;
        v204_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v205_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        v205_ce0 : OUT STD_LOGIC;
        v205_we0 : OUT STD_LOGIC;
        v205_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component reshape_2D_to_3D IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v147_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v147_ce0 : OUT STD_LOGIC;
        v147_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v148_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v148_0_ce0 : OUT STD_LOGIC;
        v148_0_we0 : OUT STD_LOGIC;
        v148_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component attention_fadd_32pcA IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component attention_fdiv_32rcU IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component attention_fpext_3sc4 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component attention_quantizzec IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component attention_quantizAem IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component attention_q_proj_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component attention_v_proj_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component attention_k_proj_IfE IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component attention_rms_hidShg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component attention_updatedThq IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component attention_attn_weVhK IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    quantized_hidden_sta_8_U : component attention_quantizzec
    generic map (
        DataWidth => 8,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_quantize_activation_fu_955_v24_0_address0,
        ce0 => quantized_hidden_sta_8_ce0,
        we0 => quantized_hidden_sta_8_we0,
        d0 => grp_quantize_activation_fu_955_v24_0_d0);

    quantized_hidden_sta_7_U : component attention_quantizAem
    generic map (
        DataWidth => 8,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => quantized_hidden_sta_7_address0,
        ce0 => quantized_hidden_sta_7_ce0,
        q0 => quantized_hidden_sta_7_q0);

    quantized_hidden_sta_6_U : component attention_quantizAem
    generic map (
        DataWidth => 8,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => quantized_hidden_sta_6_address0,
        ce0 => quantized_hidden_sta_6_ce0,
        q0 => quantized_hidden_sta_6_q0);

    quantized_hidden_sta_5_U : component attention_quantizAem
    generic map (
        DataWidth => 8,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => quantized_hidden_sta_5_address0,
        ce0 => quantized_hidden_sta_5_ce0,
        q0 => quantized_hidden_sta_5_q0);

    quantized_hidden_sta_4_U : component attention_quantizAem
    generic map (
        DataWidth => 8,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => quantized_hidden_sta_4_address0,
        ce0 => quantized_hidden_sta_4_ce0,
        q0 => quantized_hidden_sta_4_q0);

    quantized_hidden_sta_3_U : component attention_quantizAem
    generic map (
        DataWidth => 8,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => quantized_hidden_sta_3_address0,
        ce0 => quantized_hidden_sta_3_ce0,
        q0 => quantized_hidden_sta_3_q0);

    quantized_hidden_sta_2_U : component attention_quantizAem
    generic map (
        DataWidth => 8,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => quantized_hidden_sta_2_address0,
        ce0 => quantized_hidden_sta_2_ce0,
        q0 => quantized_hidden_sta_2_q0);

    quantized_hidden_sta_1_U : component attention_quantizAem
    generic map (
        DataWidth => 8,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => quantized_hidden_sta_1_address0,
        ce0 => quantized_hidden_sta_1_ce0,
        q0 => quantized_hidden_sta_1_q0);

    quantized_hidden_sta_U : component attention_quantizAem
    generic map (
        DataWidth => 8,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => quantized_hidden_sta_address0,
        ce0 => quantized_hidden_sta_ce0,
        q0 => quantized_hidden_sta_q0);

    q_proj_0_U : component attention_q_proj_0
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => q_proj_0_address0,
        ce0 => q_proj_0_ce0,
        we0 => q_proj_0_we0,
        d0 => grp_reshape_2D_to_3D_fu_1009_v148_0_d0,
        q0 => q_proj_0_q0,
        address1 => grp_apply_rotary_pos_emb_fu_963_q_proj_0_address1,
        ce1 => q_proj_0_ce1,
        q1 => q_proj_0_q1);

    k_proj_0_U : component attention_q_proj_0
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_proj_0_address0,
        ce0 => k_proj_0_ce0,
        we0 => k_proj_0_we0,
        d0 => grp_reshape_2D_to_3D_fu_1009_v148_0_d0,
        q0 => k_proj_0_q0,
        address1 => grp_apply_rotary_pos_emb_fu_963_k_proj_0_address1,
        ce1 => k_proj_0_ce1,
        q1 => k_proj_0_q1);

    v_proj_0_U : component attention_v_proj_0
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => v_proj_0_address0,
        ce0 => v_proj_0_ce0,
        we0 => v_proj_0_we0,
        d0 => grp_reshape_2D_to_3D_fu_1017_v148_0_d0,
        q0 => v_proj_0_q0);

    k_proj_transposed_U : component attention_k_proj_IfE
    generic map (
        DataWidth => 32,
        AddressRange => 9216,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_proj_transposed_address0,
        ce0 => k_proj_transposed_ce0,
        we0 => k_proj_transposed_we0,
        d0 => grp_transpose_last_two_d_fu_1002_v205_d0,
        q0 => k_proj_transposed_q0);

    quantized_final_outp_8_U : component attention_quantizzec
    generic map (
        DataWidth => 8,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_quantize_activation_fu_955_v24_0_address0,
        ce0 => quantized_final_outp_8_ce0,
        we0 => quantized_final_outp_8_we0,
        d0 => grp_quantize_activation_fu_955_v24_0_d0);

    quantized_final_outp_7_U : component attention_quantizAem
    generic map (
        DataWidth => 8,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_linear_forward_no_mu_fu_844_v79_0_0_0_address0,
        ce0 => quantized_final_outp_7_ce0,
        q0 => quantized_final_outp_7_q0);

    quantized_final_outp_6_U : component attention_quantizAem
    generic map (
        DataWidth => 8,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_linear_forward_no_mu_fu_844_v79_0_0_1_address0,
        ce0 => quantized_final_outp_6_ce0,
        q0 => quantized_final_outp_6_q0);

    quantized_final_outp_5_U : component attention_quantizAem
    generic map (
        DataWidth => 8,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_linear_forward_no_mu_fu_844_v79_0_0_2_address0,
        ce0 => quantized_final_outp_5_ce0,
        q0 => quantized_final_outp_5_q0);

    quantized_final_outp_4_U : component attention_quantizAem
    generic map (
        DataWidth => 8,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_linear_forward_no_mu_fu_844_v79_0_0_3_address0,
        ce0 => quantized_final_outp_4_ce0,
        q0 => quantized_final_outp_4_q0);

    quantized_final_outp_3_U : component attention_quantizAem
    generic map (
        DataWidth => 8,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_linear_forward_no_mu_fu_844_v79_1_0_0_address0,
        ce0 => quantized_final_outp_3_ce0,
        q0 => quantized_final_outp_3_q0);

    quantized_final_outp_2_U : component attention_quantizAem
    generic map (
        DataWidth => 8,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_linear_forward_no_mu_fu_844_v79_1_0_1_address0,
        ce0 => quantized_final_outp_2_ce0,
        q0 => quantized_final_outp_2_q0);

    quantized_final_outp_1_U : component attention_quantizAem
    generic map (
        DataWidth => 8,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_linear_forward_no_mu_fu_844_v79_1_0_2_address0,
        ce0 => quantized_final_outp_1_ce0,
        q0 => quantized_final_outp_1_q0);

    quantized_final_outp_U : component attention_quantizAem
    generic map (
        DataWidth => 8,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_linear_forward_no_mu_fu_844_v79_1_0_3_address0,
        ce0 => quantized_final_outp_ce0,
        q0 => quantized_final_outp_q0);

    rms_hidden_states_0_U : component attention_rms_hidShg
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rms_hidden_states_0_address0,
        ce0 => rms_hidden_states_0_ce0,
        we0 => rms_hidden_states_0_we0,
        d0 => rms_hidden_states_0_d0,
        q0 => rms_hidden_states_0_q0);

    q_proj_re_U : component attention_rms_hidShg
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => q_proj_re_address0,
        ce0 => q_proj_re_ce0,
        we0 => q_proj_re_we0,
        d0 => q_proj_re_d0,
        q0 => q_proj_re_q0);

    k_proj_re_U : component attention_rms_hidShg
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_proj_re_address0,
        ce0 => k_proj_re_ce0,
        we0 => k_proj_re_we0,
        d0 => k_proj_re_d0,
        q0 => k_proj_re_q0);

    v_proj_re_U : component attention_rms_hidShg
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => v_proj_re_address0,
        ce0 => v_proj_re_ce0,
        we0 => v_proj_re_we0,
        d0 => v_proj_re_d0,
        q0 => v_proj_re_q0);

    q_embed_0_U : component attention_rms_hidShg
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => q_embed_0_address0,
        ce0 => q_embed_0_ce0,
        we0 => q_embed_0_we0,
        d0 => q_embed_0_d0,
        q0 => q_embed_0_q0);

    k_embed_0_U : component attention_rms_hidShg
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_embed_0_address0,
        ce0 => k_embed_0_ce0,
        we0 => k_embed_0_we0,
        d0 => k_embed_0_d0,
        q0 => k_embed_0_q0);

    updated_k_cache_U : component attention_updatedThq
    generic map (
        DataWidth => 32,
        AddressRange => 9216,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => updated_k_cache_address0,
        ce0 => updated_k_cache_ce0,
        we0 => updated_k_cache_we0,
        d0 => updated_k_cache_d0,
        q0 => updated_k_cache_q0);

    updated_v_cache_U : component attention_updatedThq
    generic map (
        DataWidth => 32,
        AddressRange => 9216,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => updated_v_cache_address0,
        ce0 => updated_v_cache_ce0,
        we0 => updated_v_cache_we0,
        d0 => updated_v_cache_d0,
        q0 => updated_v_cache_q0);

    attn_weights_0_U : component attention_attn_weVhK
    generic map (
        DataWidth => 32,
        AddressRange => 96,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => attn_weights_0_address0,
        ce0 => attn_weights_0_ce0,
        we0 => attn_weights_0_we0,
        d0 => attn_weights_0_d0,
        q0 => attn_weights_0_q0);

    softmax_attn_weights_U : component attention_attn_weVhK
    generic map (
        DataWidth => 32,
        AddressRange => 96,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => softmax_attn_weights_address0,
        ce0 => softmax_attn_weights_ce0,
        we0 => softmax_attn_weights_we0,
        d0 => softmax_attn_weights_d0,
        q0 => softmax_attn_weights_q0);

    attn_output_0_U : component attention_rms_hidShg
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => attn_output_0_address0,
        ce0 => attn_output_0_ce0,
        we0 => attn_output_0_we0,
        d0 => attn_output_0_d0,
        q0 => attn_output_0_q0);

    attn_output_2D_U : component attention_rms_hidShg
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => attn_output_2D_address0,
        ce0 => attn_output_2D_ce0,
        we0 => attn_output_2D_we0,
        d0 => attn_output_2D_d0,
        q0 => attn_output_2D_q0);

    rms_attn_output_0_U : component attention_rms_hidShg
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rms_attn_output_0_address0,
        ce0 => rms_attn_output_0_ce0,
        we0 => rms_attn_output_0_we0,
        d0 => rms_attn_output_0_d0,
        q0 => rms_attn_output_0_q0);

    grp_linear_forward_no_mu_fu_844 : component linear_forward_no_mu
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_linear_forward_no_mu_fu_844_ap_start,
        ap_done => grp_linear_forward_no_mu_fu_844_ap_done,
        ap_idle => grp_linear_forward_no_mu_fu_844_ap_idle,
        ap_ready => grp_linear_forward_no_mu_fu_844_ap_ready,
        v79_0_0_0_address0 => grp_linear_forward_no_mu_fu_844_v79_0_0_0_address0,
        v79_0_0_0_ce0 => grp_linear_forward_no_mu_fu_844_v79_0_0_0_ce0,
        v79_0_0_0_q0 => grp_linear_forward_no_mu_fu_844_v79_0_0_0_q0,
        v79_0_0_1_address0 => grp_linear_forward_no_mu_fu_844_v79_0_0_1_address0,
        v79_0_0_1_ce0 => grp_linear_forward_no_mu_fu_844_v79_0_0_1_ce0,
        v79_0_0_1_q0 => grp_linear_forward_no_mu_fu_844_v79_0_0_1_q0,
        v79_0_0_2_address0 => grp_linear_forward_no_mu_fu_844_v79_0_0_2_address0,
        v79_0_0_2_ce0 => grp_linear_forward_no_mu_fu_844_v79_0_0_2_ce0,
        v79_0_0_2_q0 => grp_linear_forward_no_mu_fu_844_v79_0_0_2_q0,
        v79_0_0_3_address0 => grp_linear_forward_no_mu_fu_844_v79_0_0_3_address0,
        v79_0_0_3_ce0 => grp_linear_forward_no_mu_fu_844_v79_0_0_3_ce0,
        v79_0_0_3_q0 => grp_linear_forward_no_mu_fu_844_v79_0_0_3_q0,
        v79_1_0_0_address0 => grp_linear_forward_no_mu_fu_844_v79_1_0_0_address0,
        v79_1_0_0_ce0 => grp_linear_forward_no_mu_fu_844_v79_1_0_0_ce0,
        v79_1_0_0_q0 => grp_linear_forward_no_mu_fu_844_v79_1_0_0_q0,
        v79_1_0_1_address0 => grp_linear_forward_no_mu_fu_844_v79_1_0_1_address0,
        v79_1_0_1_ce0 => grp_linear_forward_no_mu_fu_844_v79_1_0_1_ce0,
        v79_1_0_1_q0 => grp_linear_forward_no_mu_fu_844_v79_1_0_1_q0,
        v79_1_0_2_address0 => grp_linear_forward_no_mu_fu_844_v79_1_0_2_address0,
        v79_1_0_2_ce0 => grp_linear_forward_no_mu_fu_844_v79_1_0_2_ce0,
        v79_1_0_2_q0 => grp_linear_forward_no_mu_fu_844_v79_1_0_2_q0,
        v79_1_0_3_address0 => grp_linear_forward_no_mu_fu_844_v79_1_0_3_address0,
        v79_1_0_3_ce0 => grp_linear_forward_no_mu_fu_844_v79_1_0_3_ce0,
        v79_1_0_3_q0 => grp_linear_forward_no_mu_fu_844_v79_1_0_3_q0,
        v80_0_V_read => reg_1040,
        v81_0_address0 => grp_linear_forward_no_mu_fu_844_v81_0_address0,
        v81_0_ce0 => grp_linear_forward_no_mu_fu_844_v81_0_ce0,
        v81_0_q0 => grp_linear_forward_no_mu_fu_844_v81_0_q0,
        v81_1_address0 => grp_linear_forward_no_mu_fu_844_v81_1_address0,
        v81_1_ce0 => grp_linear_forward_no_mu_fu_844_v81_1_ce0,
        v81_1_q0 => grp_linear_forward_no_mu_fu_844_v81_1_q0,
        v82_V => grp_linear_forward_no_mu_fu_844_v82_V,
        v83_address0 => grp_linear_forward_no_mu_fu_844_v83_address0,
        v83_ce0 => grp_linear_forward_no_mu_fu_844_v83_ce0,
        v83_we0 => grp_linear_forward_no_mu_fu_844_v83_we0,
        v83_d0 => grp_linear_forward_no_mu_fu_844_v83_d0);

    grp_linear_forward_no_mu_fu_873 : component linear_forward_no_mu
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_linear_forward_no_mu_fu_873_ap_start,
        ap_done => grp_linear_forward_no_mu_fu_873_ap_done,
        ap_idle => grp_linear_forward_no_mu_fu_873_ap_idle,
        ap_ready => grp_linear_forward_no_mu_fu_873_ap_ready,
        v79_0_0_0_address0 => grp_linear_forward_no_mu_fu_873_v79_0_0_0_address0,
        v79_0_0_0_ce0 => grp_linear_forward_no_mu_fu_873_v79_0_0_0_ce0,
        v79_0_0_0_q0 => quantized_hidden_sta_7_q0,
        v79_0_0_1_address0 => grp_linear_forward_no_mu_fu_873_v79_0_0_1_address0,
        v79_0_0_1_ce0 => grp_linear_forward_no_mu_fu_873_v79_0_0_1_ce0,
        v79_0_0_1_q0 => quantized_hidden_sta_6_q0,
        v79_0_0_2_address0 => grp_linear_forward_no_mu_fu_873_v79_0_0_2_address0,
        v79_0_0_2_ce0 => grp_linear_forward_no_mu_fu_873_v79_0_0_2_ce0,
        v79_0_0_2_q0 => quantized_hidden_sta_5_q0,
        v79_0_0_3_address0 => grp_linear_forward_no_mu_fu_873_v79_0_0_3_address0,
        v79_0_0_3_ce0 => grp_linear_forward_no_mu_fu_873_v79_0_0_3_ce0,
        v79_0_0_3_q0 => quantized_hidden_sta_4_q0,
        v79_1_0_0_address0 => grp_linear_forward_no_mu_fu_873_v79_1_0_0_address0,
        v79_1_0_0_ce0 => grp_linear_forward_no_mu_fu_873_v79_1_0_0_ce0,
        v79_1_0_0_q0 => quantized_hidden_sta_3_q0,
        v79_1_0_1_address0 => grp_linear_forward_no_mu_fu_873_v79_1_0_1_address0,
        v79_1_0_1_ce0 => grp_linear_forward_no_mu_fu_873_v79_1_0_1_ce0,
        v79_1_0_1_q0 => quantized_hidden_sta_2_q0,
        v79_1_0_2_address0 => grp_linear_forward_no_mu_fu_873_v79_1_0_2_address0,
        v79_1_0_2_ce0 => grp_linear_forward_no_mu_fu_873_v79_1_0_2_ce0,
        v79_1_0_2_q0 => quantized_hidden_sta_1_q0,
        v79_1_0_3_address0 => grp_linear_forward_no_mu_fu_873_v79_1_0_3_address0,
        v79_1_0_3_ce0 => grp_linear_forward_no_mu_fu_873_v79_1_0_3_ce0,
        v79_1_0_3_q0 => quantized_hidden_sta_q0,
        v80_0_V_read => reg_1040,
        v81_0_address0 => grp_linear_forward_no_mu_fu_873_v81_0_address0,
        v81_0_ce0 => grp_linear_forward_no_mu_fu_873_v81_0_ce0,
        v81_0_q0 => v269_0_q0,
        v81_1_address0 => grp_linear_forward_no_mu_fu_873_v81_1_address0,
        v81_1_ce0 => grp_linear_forward_no_mu_fu_873_v81_1_ce0,
        v81_1_q0 => v269_1_q0,
        v82_V => v306_V_reg_3241,
        v83_address0 => grp_linear_forward_no_mu_fu_873_v83_address0,
        v83_ce0 => grp_linear_forward_no_mu_fu_873_v83_ce0,
        v83_we0 => grp_linear_forward_no_mu_fu_873_v83_we0,
        v83_d0 => grp_linear_forward_no_mu_fu_873_v83_d0);

    grp_softmax_fu_911 : component softmax
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_softmax_fu_911_ap_start,
        ap_done => grp_softmax_fu_911_ap_done,
        ap_idle => grp_softmax_fu_911_ap_idle,
        ap_ready => grp_softmax_fu_911_ap_ready,
        v225_0_address0 => grp_softmax_fu_911_v225_0_address0,
        v225_0_ce0 => grp_softmax_fu_911_v225_0_ce0,
        v225_0_q0 => attn_weights_0_q0,
        v226_0_address0 => grp_softmax_fu_911_v226_0_address0,
        v226_0_ce0 => grp_softmax_fu_911_v226_0_ce0,
        v226_0_we0 => grp_softmax_fu_911_v226_0_we0,
        v226_0_d0 => grp_softmax_fu_911_v226_0_d0,
        v226_0_q0 => softmax_attn_weights_q0);

    grp_rms_norm_fu_931 : component rms_norm
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_rms_norm_fu_931_ap_start,
        ap_done => grp_rms_norm_fu_931_ap_done,
        ap_idle => grp_rms_norm_fu_931_ap_idle,
        ap_ready => grp_rms_norm_fu_931_ap_ready,
        v0_address0 => grp_rms_norm_fu_931_v0_address0,
        v0_ce0 => grp_rms_norm_fu_931_v0_ce0,
        v0_q0 => grp_rms_norm_fu_931_v0_q0,
        v1_address0 => grp_rms_norm_fu_931_v1_address0,
        v1_ce0 => grp_rms_norm_fu_931_v1_ce0,
        v1_q0 => grp_rms_norm_fu_931_v1_q0,
        v3_0_address0 => grp_rms_norm_fu_931_v3_0_address0,
        v3_0_ce0 => grp_rms_norm_fu_931_v3_0_ce0,
        v3_0_we0 => grp_rms_norm_fu_931_v3_0_we0,
        v3_0_d0 => grp_rms_norm_fu_931_v3_0_d0);

    grp_quantize_activation_fu_955 : component quantize_activation
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_quantize_activation_fu_955_ap_start,
        ap_done => grp_quantize_activation_fu_955_ap_done,
        ap_idle => grp_quantize_activation_fu_955_ap_idle,
        ap_ready => grp_quantize_activation_fu_955_ap_ready,
        v22_0_address0 => grp_quantize_activation_fu_955_v22_0_address0,
        v22_0_ce0 => grp_quantize_activation_fu_955_v22_0_ce0,
        v22_0_q0 => grp_quantize_activation_fu_955_v22_0_q0,
        v24_0_address0 => grp_quantize_activation_fu_955_v24_0_address0,
        v24_0_ce0 => grp_quantize_activation_fu_955_v24_0_ce0,
        v24_0_we0 => grp_quantize_activation_fu_955_v24_0_we0,
        v24_0_d0 => grp_quantize_activation_fu_955_v24_0_d0,
        ap_return => grp_quantize_activation_fu_955_ap_return);

    grp_apply_rotary_pos_emb_fu_963 : component apply_rotary_pos_emb
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_apply_rotary_pos_emb_fu_963_ap_start,
        ap_done => grp_apply_rotary_pos_emb_fu_963_ap_done,
        ap_idle => grp_apply_rotary_pos_emb_fu_963_ap_idle,
        ap_ready => grp_apply_rotary_pos_emb_fu_963_ap_ready,
        v163_address0 => grp_apply_rotary_pos_emb_fu_963_v163_address0,
        v163_ce0 => grp_apply_rotary_pos_emb_fu_963_v163_ce0,
        v163_q0 => v273_q0,
        v164_address0 => grp_apply_rotary_pos_emb_fu_963_v164_address0,
        v164_ce0 => grp_apply_rotary_pos_emb_fu_963_v164_ce0,
        v164_q0 => v274_q0,
        v165_0_address0 => grp_apply_rotary_pos_emb_fu_963_v165_0_address0,
        v165_0_ce0 => grp_apply_rotary_pos_emb_fu_963_v165_0_ce0,
        v165_0_we0 => grp_apply_rotary_pos_emb_fu_963_v165_0_we0,
        v165_0_d0 => grp_apply_rotary_pos_emb_fu_963_v165_0_d0,
        v166_0_address0 => grp_apply_rotary_pos_emb_fu_963_v166_0_address0,
        v166_0_ce0 => grp_apply_rotary_pos_emb_fu_963_v166_0_ce0,
        v166_0_we0 => grp_apply_rotary_pos_emb_fu_963_v166_0_we0,
        v166_0_d0 => grp_apply_rotary_pos_emb_fu_963_v166_0_d0,
        q_proj_0_address0 => grp_apply_rotary_pos_emb_fu_963_q_proj_0_address0,
        q_proj_0_ce0 => grp_apply_rotary_pos_emb_fu_963_q_proj_0_ce0,
        q_proj_0_q0 => q_proj_0_q0,
        q_proj_0_address1 => grp_apply_rotary_pos_emb_fu_963_q_proj_0_address1,
        q_proj_0_ce1 => grp_apply_rotary_pos_emb_fu_963_q_proj_0_ce1,
        q_proj_0_q1 => q_proj_0_q1,
        k_proj_0_address0 => grp_apply_rotary_pos_emb_fu_963_k_proj_0_address0,
        k_proj_0_ce0 => grp_apply_rotary_pos_emb_fu_963_k_proj_0_ce0,
        k_proj_0_q0 => k_proj_0_q0,
        k_proj_0_address1 => grp_apply_rotary_pos_emb_fu_963_k_proj_0_address1,
        k_proj_0_ce1 => grp_apply_rotary_pos_emb_fu_963_k_proj_0_ce1,
        k_proj_0_q1 => k_proj_0_q1);

    grp_GEMM_3D_float_fu_977 : component GEMM_3D_float
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_GEMM_3D_float_fu_977_ap_start,
        ap_done => grp_GEMM_3D_float_fu_977_ap_done,
        ap_idle => grp_GEMM_3D_float_fu_977_ap_idle,
        ap_ready => grp_GEMM_3D_float_fu_977_ap_ready,
        v210_0_address0 => grp_GEMM_3D_float_fu_977_v210_0_address0,
        v210_0_ce0 => grp_GEMM_3D_float_fu_977_v210_0_ce0,
        v210_0_q0 => q_embed_0_q0,
        v212_0_address0 => grp_GEMM_3D_float_fu_977_v212_0_address0,
        v212_0_ce0 => grp_GEMM_3D_float_fu_977_v212_0_ce0,
        v212_0_we0 => grp_GEMM_3D_float_fu_977_v212_0_we0,
        v212_0_d0 => grp_GEMM_3D_float_fu_977_v212_0_d0,
        v212_0_q0 => attn_weights_0_q0,
        k_proj_transposed_address0 => grp_GEMM_3D_float_fu_977_k_proj_transposed_address0,
        k_proj_transposed_ce0 => grp_GEMM_3D_float_fu_977_k_proj_transposed_ce0,
        k_proj_transposed_q0 => k_proj_transposed_q0);

    grp_GEMM_3D_float2_fu_985 : component GEMM_3D_float2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_GEMM_3D_float2_fu_985_ap_start,
        ap_done => grp_GEMM_3D_float2_fu_985_ap_done,
        ap_idle => grp_GEMM_3D_float2_fu_985_ap_idle,
        ap_ready => grp_GEMM_3D_float2_fu_985_ap_ready,
        v252_0_address0 => grp_GEMM_3D_float2_fu_985_v252_0_address0,
        v252_0_ce0 => grp_GEMM_3D_float2_fu_985_v252_0_ce0,
        v252_0_q0 => softmax_attn_weights_q0,
        v253_address0 => grp_GEMM_3D_float2_fu_985_v253_address0,
        v253_ce0 => grp_GEMM_3D_float2_fu_985_v253_ce0,
        v253_q0 => updated_v_cache_q0,
        v254_0_address0 => grp_GEMM_3D_float2_fu_985_v254_0_address0,
        v254_0_ce0 => grp_GEMM_3D_float2_fu_985_v254_0_ce0,
        v254_0_we0 => grp_GEMM_3D_float2_fu_985_v254_0_we0,
        v254_0_d0 => grp_GEMM_3D_float2_fu_985_v254_0_d0,
        v254_0_q0 => attn_output_0_q0);

    grp_cache_update_fu_992 : component cache_update
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cache_update_fu_992_ap_start,
        ap_done => grp_cache_update_fu_992_ap_done,
        ap_idle => grp_cache_update_fu_992_ap_idle,
        ap_ready => grp_cache_update_fu_992_ap_ready,
        v193_address0 => grp_cache_update_fu_992_v193_address0,
        v193_ce0 => grp_cache_update_fu_992_v193_ce0,
        v193_q0 => grp_cache_update_fu_992_v193_q0,
        v194_0_address0 => grp_cache_update_fu_992_v194_0_address0,
        v194_0_ce0 => grp_cache_update_fu_992_v194_0_ce0,
        v194_0_q0 => grp_cache_update_fu_992_v194_0_q0,
        v195_address0 => grp_cache_update_fu_992_v195_address0,
        v195_ce0 => grp_cache_update_fu_992_v195_ce0,
        v195_we0 => grp_cache_update_fu_992_v195_we0,
        v195_d0 => grp_cache_update_fu_992_v195_d0);

    grp_transpose_last_two_d_fu_1002 : component transpose_last_two_d
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_transpose_last_two_d_fu_1002_ap_start,
        ap_done => grp_transpose_last_two_d_fu_1002_ap_done,
        ap_idle => grp_transpose_last_two_d_fu_1002_ap_idle,
        ap_ready => grp_transpose_last_two_d_fu_1002_ap_ready,
        v204_address0 => grp_transpose_last_two_d_fu_1002_v204_address0,
        v204_ce0 => grp_transpose_last_two_d_fu_1002_v204_ce0,
        v204_q0 => updated_k_cache_q0,
        v205_address0 => grp_transpose_last_two_d_fu_1002_v205_address0,
        v205_ce0 => grp_transpose_last_two_d_fu_1002_v205_ce0,
        v205_we0 => grp_transpose_last_two_d_fu_1002_v205_we0,
        v205_d0 => grp_transpose_last_two_d_fu_1002_v205_d0);

    grp_reshape_2D_to_3D_fu_1009 : component reshape_2D_to_3D
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_reshape_2D_to_3D_fu_1009_ap_start,
        ap_done => grp_reshape_2D_to_3D_fu_1009_ap_done,
        ap_idle => grp_reshape_2D_to_3D_fu_1009_ap_idle,
        ap_ready => grp_reshape_2D_to_3D_fu_1009_ap_ready,
        v147_address0 => grp_reshape_2D_to_3D_fu_1009_v147_address0,
        v147_ce0 => grp_reshape_2D_to_3D_fu_1009_v147_ce0,
        v147_q0 => grp_reshape_2D_to_3D_fu_1009_v147_q0,
        v148_0_address0 => grp_reshape_2D_to_3D_fu_1009_v148_0_address0,
        v148_0_ce0 => grp_reshape_2D_to_3D_fu_1009_v148_0_ce0,
        v148_0_we0 => grp_reshape_2D_to_3D_fu_1009_v148_0_we0,
        v148_0_d0 => grp_reshape_2D_to_3D_fu_1009_v148_0_d0);

    grp_reshape_2D_to_3D_fu_1017 : component reshape_2D_to_3D
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_reshape_2D_to_3D_fu_1017_ap_start,
        ap_done => grp_reshape_2D_to_3D_fu_1017_ap_done,
        ap_idle => grp_reshape_2D_to_3D_fu_1017_ap_idle,
        ap_ready => grp_reshape_2D_to_3D_fu_1017_ap_ready,
        v147_address0 => grp_reshape_2D_to_3D_fu_1017_v147_address0,
        v147_ce0 => grp_reshape_2D_to_3D_fu_1017_v147_ce0,
        v147_q0 => v_proj_re_q0,
        v148_0_address0 => grp_reshape_2D_to_3D_fu_1017_v148_0_address0,
        v148_0_ce0 => grp_reshape_2D_to_3D_fu_1017_v148_0_ce0,
        v148_0_we0 => grp_reshape_2D_to_3D_fu_1017_v148_0_we0,
        v148_0_d0 => grp_reshape_2D_to_3D_fu_1017_v148_0_d0);

    attention_fadd_32pcA_U97 : component attention_fadd_32pcA
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_1046,
        din1 => ap_const_lv32_0,
        ce => ap_const_logic_1,
        dout => grp_fu_1024_p2);

    attention_fdiv_32rcU_U98 : component attention_fdiv_32rcU
    generic map (
        ID => 1,
        NUM_STAGE => 16,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_1046,
        din1 => ap_const_lv32_411CC471,
        ce => ap_const_logic_1,
        dout => grp_fu_1029_p2);

    attention_fpext_3sc4_U99 : component attention_fpext_3sc4
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1034_p0,
        ce => grp_fu_1034_ce,
        dout => grp_fu_1034_p1);

    attention_fpext_3sc4_U100 : component attention_fpext_3sc4
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => v270,
        ce => ap_const_logic_1,
        dout => grp_fu_1037_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_GEMM_3D_float2_fu_985_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_GEMM_3D_float2_fu_985_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln673_fu_2829_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state65))) then 
                    grp_GEMM_3D_float2_fu_985_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_GEMM_3D_float2_fu_985_ap_ready = ap_const_logic_1)) then 
                    grp_GEMM_3D_float2_fu_985_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_GEMM_3D_float_fu_977_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_GEMM_3D_float_fu_977_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln626_fu_2594_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
                    grp_GEMM_3D_float_fu_977_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_GEMM_3D_float_fu_977_ap_ready = ap_const_logic_1)) then 
                    grp_GEMM_3D_float_fu_977_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_apply_rotary_pos_emb_fu_963_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_apply_rotary_pos_emb_fu_963_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln590_fu_2292_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                    grp_apply_rotary_pos_emb_fu_963_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_apply_rotary_pos_emb_fu_963_ap_ready = ap_const_logic_1)) then 
                    grp_apply_rotary_pos_emb_fu_963_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cache_update_fu_992_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_cache_update_fu_992_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state29) or ((icmp_ln607_fu_2475_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)))) then 
                    grp_cache_update_fu_992_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cache_update_fu_992_ap_ready = ap_const_logic_1)) then 
                    grp_cache_update_fu_992_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_linear_forward_no_mu_fu_844_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_linear_forward_no_mu_fu_844_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state13) or ((ap_const_logic_1 = ap_CS_fsm_state76) and (icmp_ln736_fu_3038_p2 = ap_const_lv1_1)))) then 
                    grp_linear_forward_no_mu_fu_844_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_linear_forward_no_mu_fu_844_ap_ready = ap_const_logic_1)) then 
                    grp_linear_forward_no_mu_fu_844_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_linear_forward_no_mu_fu_873_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_linear_forward_no_mu_fu_873_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    grp_linear_forward_no_mu_fu_873_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_linear_forward_no_mu_fu_873_ap_ready = ap_const_logic_1)) then 
                    grp_linear_forward_no_mu_fu_873_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_quantize_activation_fu_955_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_quantize_activation_fu_955_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    grp_quantize_activation_fu_955_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_quantize_activation_fu_955_ap_ready = ap_const_logic_1)) then 
                    grp_quantize_activation_fu_955_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_reshape_2D_to_3D_fu_1009_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_reshape_2D_to_3D_fu_1009_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                    grp_reshape_2D_to_3D_fu_1009_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_reshape_2D_to_3D_fu_1009_ap_ready = ap_const_logic_1)) then 
                    grp_reshape_2D_to_3D_fu_1009_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_reshape_2D_to_3D_fu_1017_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_reshape_2D_to_3D_fu_1017_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                    grp_reshape_2D_to_3D_fu_1017_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_reshape_2D_to_3D_fu_1017_ap_ready = ap_const_logic_1)) then 
                    grp_reshape_2D_to_3D_fu_1017_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_rms_norm_fu_931_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_rms_norm_fu_931_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_state72) and (icmp_ln697_fu_3021_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln480_fu_1052_p2 = ap_const_lv1_1)))) then 
                    grp_rms_norm_fu_931_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_rms_norm_fu_931_ap_ready = ap_const_logic_1)) then 
                    grp_rms_norm_fu_931_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_softmax_fu_911_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_softmax_fu_911_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln664_fu_2765_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state62))) then 
                    grp_softmax_fu_911_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_softmax_fu_911_ap_ready = ap_const_logic_1)) then 
                    grp_softmax_fu_911_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_transpose_last_two_d_fu_1002_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_transpose_last_two_d_fu_1002_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
                    grp_transpose_last_two_d_fu_1002_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_transpose_last_two_d_fu_1002_ap_ready = ap_const_logic_1)) then 
                    grp_transpose_last_two_d_fu_1002_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    d4_0_0_reg_811_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
                d4_0_0_reg_811 <= add_ln689_reg_3542;
            elsif (((icmp_ln688_fu_2910_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state69))) then 
                d4_0_0_reg_811 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    h6_0_reg_734_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln636_fu_2658_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
                h6_0_reg_734 <= ap_const_lv5_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
                h6_0_reg_734 <= h6_reg_3456;
            end if; 
        end if;
    end process;

    h7_0_0_reg_800_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln689_fu_2986_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state70))) then 
                h7_0_0_reg_800 <= add_ln688_reg_3524;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state68) and (icmp_ln683_fu_2893_p2 = ap_const_lv1_1))) then 
                h7_0_0_reg_800 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    i11_0_reg_712_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln638_fu_2696_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                i11_0_reg_712 <= i11_reg_3425;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state33) and (grp_GEMM_3D_float_fu_977_ap_done = ap_const_logic_1))) then 
                i11_0_reg_712 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    k10_0_0_reg_723_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
                k10_0_0_reg_723 <= add_ln638_reg_3438;
            elsif (((icmp_ln636_fu_2658_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
                k10_0_0_reg_723 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    v284_0_0_reg_536_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                v284_0_0_reg_536 <= ap_const_lv11_0;
            elsif (((icmp_ln480_fu_1052_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                v284_0_0_reg_536 <= add_ln480_fu_1058_p2;
            end if; 
        end if;
    end process;

    v295_0_0_reg_547_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_quantize_activation_fu_955_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                v295_0_0_reg_547 <= ap_const_lv11_0;
            elsif (((icmp_ln502_fu_1069_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                v295_0_0_reg_547 <= add_ln502_fu_1075_p2;
            end if; 
        end if;
    end process;

    v298_0_0_reg_558_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln502_fu_1069_p2 = ap_const_lv1_1))) then 
                v298_0_0_reg_558 <= ap_const_lv11_0;
            elsif (((icmp_ln508_fu_1086_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                v298_0_0_reg_558 <= add_ln508_fu_1092_p2;
            end if; 
        end if;
    end process;

    v301_0_0_reg_569_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln508_fu_1086_p2 = ap_const_lv1_1))) then 
                v301_0_0_reg_569 <= ap_const_lv11_0;
            elsif (((icmp_ln514_fu_1103_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                v301_0_0_reg_569 <= add_ln514_fu_1109_p2;
            end if; 
        end if;
    end process;

    v334_0_reg_580_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) and (icmp_ln584_fu_2266_p2 = ap_const_lv1_1))) then 
                v334_0_reg_580 <= v334_reg_3294;
            elsif (((ap_const_boolean_0 = ap_block_state16_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                v334_0_reg_580 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    v336_0_0_reg_591_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln582_4_fu_2228_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                v336_0_0_reg_591 <= ap_const_lv7_0;
            elsif (((icmp_ln584_fu_2266_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                v336_0_0_reg_591 <= add_ln584_fu_2272_p2;
            end if; 
        end if;
    end process;

    v338_0_reg_602_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln582_4_fu_2228_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                v338_0_reg_602 <= ap_const_lv5_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state20) and (icmp_ln592_fu_2330_p2 = ap_const_lv1_1))) then 
                v338_0_reg_602 <= v338_reg_3315;
            end if; 
        end if;
    end process;

    v340_0_0_reg_613_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln590_fu_2292_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                v340_0_0_reg_613 <= ap_const_lv7_0;
            elsif (((icmp_ln592_fu_2330_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                v340_0_0_reg_613 <= add_ln592_fu_2336_p2;
            end if; 
        end if;
    end process;

    v342_0_reg_624_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln600_fu_2402_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                v342_0_reg_624 <= v342_reg_3336;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state21) and (grp_apply_rotary_pos_emb_fu_963_ap_done = ap_const_logic_1))) then 
                v342_0_reg_624 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    v343_0_reg_635_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln601_fu_2449_p2 = ap_const_lv1_1))) then 
                v343_0_reg_635 <= v343_reg_3349;
            elsif (((icmp_ln599_fu_2356_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                v343_0_reg_635 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    v344_0_reg_646_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln600_fu_2402_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                v344_0_reg_646 <= ap_const_lv7_0;
            elsif (((icmp_ln601_fu_2449_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                v344_0_reg_646 <= v344_fu_2455_p2;
            end if; 
        end if;
    end process;

    v346_0_reg_657_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln599_fu_2356_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                v346_0_reg_657 <= ap_const_lv5_0;
            elsif (((icmp_ln608_fu_2521_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                v346_0_reg_657 <= v346_reg_3370;
            end if; 
        end if;
    end process;

    v347_0_reg_668_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state27) and (icmp_ln609_fu_2568_p2 = ap_const_lv1_1))) then 
                v347_0_reg_668 <= v347_reg_3383;
            elsif (((icmp_ln607_fu_2475_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
                v347_0_reg_668 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    v348_0_reg_679_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln608_fu_2521_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                v348_0_reg_679 <= ap_const_lv7_0;
            elsif (((icmp_ln609_fu_2568_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                v348_0_reg_679 <= v348_fu_2574_p2;
            end if; 
        end if;
    end process;

    v354_0_reg_690_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state32) and (icmp_ln628_fu_2632_p2 = ap_const_lv1_1))) then 
                v354_0_reg_690 <= v354_reg_3404;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state30) and (ap_const_boolean_0 = ap_block_state30_on_subcall_done))) then 
                v354_0_reg_690 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    v356_0_0_reg_701_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln626_fu_2594_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
                v356_0_0_reg_701 <= ap_const_lv3_0;
            elsif (((icmp_ln628_fu_2632_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
                v356_0_0_reg_701 <= add_ln628_fu_2638_p2;
            end if; 
        end if;
    end process;

    v374_0_reg_745_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln653_fu_2722_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then 
                v374_0_reg_745 <= ap_const_lv5_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (icmp_ln666_fu_2803_p2 = ap_const_lv1_1))) then 
                v374_0_reg_745 <= v374_reg_3474;
            end if; 
        end if;
    end process;

    v376_0_0_reg_756_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln664_fu_2765_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state62))) then 
                v376_0_0_reg_756 <= ap_const_lv3_0;
            elsif (((icmp_ln666_fu_2803_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state63))) then 
                v376_0_0_reg_756 <= add_ln666_fu_2809_p2;
            end if; 
        end if;
    end process;

    v378_0_reg_767_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state66) and (icmp_ln675_fu_2867_p2 = ap_const_lv1_1))) then 
                v378_0_reg_767 <= v378_reg_3495;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state64) and (grp_softmax_fu_911_ap_done = ap_const_logic_1))) then 
                v378_0_reg_767 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    v380_0_0_reg_778_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln673_fu_2829_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state65))) then 
                v380_0_0_reg_778 <= ap_const_lv7_0;
            elsif (((icmp_ln675_fu_2867_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state66))) then 
                v380_0_0_reg_778 <= add_ln675_fu_2873_p2;
            end if; 
        end if;
    end process;

    v383_0_0_reg_789_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state67) and (grp_GEMM_3D_float2_fu_985_ap_done = ap_const_logic_1))) then 
                v383_0_0_reg_789 <= ap_const_lv11_0;
            elsif (((icmp_ln683_fu_2893_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state68))) then 
                v383_0_0_reg_789 <= add_ln683_fu_2899_p2;
            end if; 
        end if;
    end process;

    v390_0_0_reg_822_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln688_fu_2910_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state69))) then 
                v390_0_0_reg_822 <= ap_const_lv11_0;
            elsif (((icmp_ln697_fu_3021_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
                v390_0_0_reg_822 <= add_ln697_fu_3027_p2;
            end if; 
        end if;
    end process;

    v408_0_0_reg_833_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_quantize_activation_fu_955_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state75))) then 
                v408_0_0_reg_833 <= ap_const_lv11_0;
            elsif (((icmp_ln736_fu_3038_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state76))) then 
                v408_0_0_reg_833 <= add_ln736_fu_3044_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then
                add_ln638_reg_3438 <= add_ln638_fu_2702_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state69)) then
                add_ln688_reg_3524 <= add_ln688_fu_2916_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state70)) then
                add_ln689_reg_3542 <= add_ln689_fu_2992_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln689_fu_2986_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state70))) then
                add_ln691_reg_3552 <= add_ln691_fu_3008_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln653_fu_2722_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state54))) then
                    attn_weights_0_addr_1_reg_3461(6 downto 1) <= sext_ln657_fu_2760_p1(7 - 1 downto 0)(6 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln638_fu_2696_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                attn_weights_0_addr_2_reg_3443 <= sext_ln639_fu_2717_p1(7 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state54)) then
                h6_reg_3456 <= h6_fu_2728_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                i11_reg_3425 <= i11_fu_2664_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                icmp_ln571_1_reg_3161 <= icmp_ln571_1_fu_1457_p2;
                icmp_ln571_2_reg_3201 <= icmp_ln571_2_fu_1575_p2;
                icmp_ln581_1_reg_3167 <= icmp_ln581_1_fu_1469_p2;
                icmp_ln581_2_reg_3207 <= icmp_ln581_2_fu_1587_p2;
                icmp_ln582_1_reg_3179 <= icmp_ln582_1_fu_1495_p2;
                icmp_ln582_2_reg_3219 <= icmp_ln582_2_fu_1613_p2;
                man_V_5_reg_3156 <= man_V_5_fu_1449_p3;
                man_V_8_reg_3196 <= man_V_8_fu_1567_p3;
                sh_amt_1_reg_3173 <= sh_amt_1_fu_1487_p3;
                sh_amt_2_reg_3213 <= sh_amt_2_fu_1605_p3;
                tmp_56_reg_3191 <= sh_amt_1_fu_1487_p3(11 downto 5);
                tmp_69_reg_3231 <= sh_amt_2_fu_1605_p3(11 downto 5);
                trunc_ln583_1_reg_3185 <= trunc_ln583_1_fu_1501_p1;
                trunc_ln583_2_reg_3225 <= trunc_ln583_2_fu_1619_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                icmp_ln571_3_reg_3251 <= icmp_ln571_3_fu_2011_p2;
                icmp_ln581_3_reg_3257 <= icmp_ln581_3_fu_2023_p2;
                icmp_ln582_3_reg_3269 <= icmp_ln582_3_fu_2049_p2;
                man_V_11_reg_3246 <= man_V_11_fu_2003_p3;
                sh_amt_3_reg_3263 <= sh_amt_3_fu_2041_p3;
                tmp_72_reg_3281 <= sh_amt_3_fu_2041_p3(11 downto 5);
                trunc_ln583_3_reg_3275 <= trunc_ln583_3_fu_2055_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                icmp_ln571_reg_3116 <= icmp_ln571_fu_1180_p2;
                icmp_ln581_reg_3122 <= icmp_ln581_fu_1192_p2;
                icmp_ln582_reg_3134 <= icmp_ln582_fu_1218_p2;
                man_V_2_reg_3111 <= man_V_2_fu_1172_p3;
                sh_amt_reg_3128 <= sh_amt_fu_1210_p3;
                tmp_43_reg_3146 <= sh_amt_fu_1210_p3(11 downto 5);
                trunc_ln583_reg_3140 <= trunc_ln583_fu_1224_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((grp_quantize_activation_fu_955_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state75)) or ((grp_quantize_activation_fu_955_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then
                reg_1040 <= grp_quantize_activation_fu_955_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state36))) then
                reg_1046 <= attn_weights_0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln599_fu_2356_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    sext_ln602_reg_3341(9 downto 1) <= sext_ln602_fu_2398_p1(9 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln607_fu_2475_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    sext_ln610_reg_3375(9 downto 1) <= sext_ln610_fu_2517_p1(9 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln582_4_fu_2228_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    sub_ln585_reg_3299(11 downto 5) <= sub_ln585_fu_2260_p2(11 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln590_fu_2292_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    sub_ln593_reg_3320(11 downto 5) <= sub_ln593_fu_2324_p2(11 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln600_fu_2402_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    sub_ln602_1_reg_3354(14 downto 5) <= sub_ln602_1_fu_2443_p2(14 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln608_fu_2521_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    sub_ln610_1_reg_3388(14 downto 5) <= sub_ln610_1_fu_2562_p2(14 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln626_fu_2594_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                    sub_ln629_reg_3409(7 downto 1) <= sub_ln629_fu_2626_p2(7 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln636_fu_2658_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34))) then
                    sub_ln639_reg_3430(7 downto 1) <= sub_ln639_fu_2690_p2(7 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln664_fu_2765_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state62))) then
                    sub_ln667_reg_3479(7 downto 1) <= sub_ln667_fu_2797_p2(7 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln673_fu_2829_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state65))) then
                    sub_ln676_reg_3500(11 downto 5) <= sub_ln676_fu_2861_p2(11 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln688_fu_2910_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state69))) then
                    sub_ln690_reg_3529(11 downto 5) <= sub_ln690_fu_2942_p2(11 downto 5);
                    sub_ln691_reg_3534(11 downto 5) <= sub_ln691_fu_2976_p2(11 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state60)) then
                v2_reg_3466 <= grp_fu_1024_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                v302_V_reg_3151 <= v302_V_fu_1389_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_linear_forward_no_mu_fu_844_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                v304_V_reg_3236 <= v304_V_fu_1784_p3;
                v306_V_reg_3241 <= v306_V_fu_1943_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state16_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                v308_V_reg_3286 <= v308_V_fu_2220_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                v334_reg_3294 <= v334_fu_2234_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                v338_reg_3315 <= v338_fu_2298_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                v342_reg_3336 <= v342_fu_2362_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                v343_reg_3349 <= v343_fu_2408_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                v346_reg_3370 <= v346_fu_2481_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                v347_reg_3383 <= v347_fu_2527_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then
                v354_reg_3404 <= v354_fu_2600_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state62)) then
                v374_reg_3474 <= v374_fu_2771_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state65)) then
                v378_reg_3495 <= v378_fu_2835_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state52)) then
                v_reg_3448 <= grp_fu_1029_p2;
            end if;
        end if;
    end process;
    sub_ln585_reg_3299(4 downto 0) <= "00000";
    sub_ln593_reg_3320(4 downto 0) <= "00000";
    sext_ln602_reg_3341(0) <= '0';
    sub_ln602_1_reg_3354(4 downto 0) <= "00000";
    sext_ln610_reg_3375(0) <= '0';
    sub_ln610_1_reg_3388(4 downto 0) <= "00000";
    sub_ln629_reg_3409(0) <= '0';
    sub_ln639_reg_3430(0) <= '0';
    attn_weights_0_addr_1_reg_3461(0) <= '0';
    sub_ln667_reg_3479(0) <= '0';
    sub_ln676_reg_3500(4 downto 0) <= "00000";
    sub_ln690_reg_3529(4 downto 0) <= "00000";
    sub_ln691_reg_3534(4 downto 0) <= "00000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state5, grp_quantize_activation_fu_955_ap_done, ap_CS_fsm_state75, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state12, grp_linear_forward_no_mu_fu_844_ap_done, ap_CS_fsm_state16, ap_block_state16_on_subcall_done, ap_CS_fsm_state17, icmp_ln582_4_fu_2228_p2, ap_CS_fsm_state18, ap_CS_fsm_state19, icmp_ln590_fu_2292_p2, ap_CS_fsm_state20, ap_CS_fsm_state22, icmp_ln599_fu_2356_p2, ap_CS_fsm_state23, icmp_ln600_fu_2402_p2, ap_CS_fsm_state24, ap_CS_fsm_state25, icmp_ln607_fu_2475_p2, ap_CS_fsm_state26, icmp_ln608_fu_2521_p2, ap_CS_fsm_state27, ap_CS_fsm_state31, icmp_ln626_fu_2594_p2, ap_CS_fsm_state32, ap_CS_fsm_state34, icmp_ln636_fu_2658_p2, ap_CS_fsm_state35, icmp_ln638_fu_2696_p2, ap_CS_fsm_state54, icmp_ln653_fu_2722_p2, ap_CS_fsm_state62, icmp_ln664_fu_2765_p2, ap_CS_fsm_state63, ap_CS_fsm_state65, icmp_ln673_fu_2829_p2, ap_CS_fsm_state66, ap_CS_fsm_state68, ap_CS_fsm_state69, icmp_ln688_fu_2910_p2, ap_CS_fsm_state70, icmp_ln689_fu_2986_p2, ap_CS_fsm_state72, ap_CS_fsm_state76, grp_softmax_fu_911_ap_done, grp_rms_norm_fu_931_ap_done, grp_apply_rotary_pos_emb_fu_963_ap_done, grp_GEMM_3D_float_fu_977_ap_done, grp_GEMM_3D_float2_fu_985_ap_done, grp_cache_update_fu_992_ap_done, icmp_ln480_fu_1052_p2, icmp_ln502_fu_1069_p2, icmp_ln508_fu_1086_p2, icmp_ln514_fu_1103_p2, icmp_ln584_fu_2266_p2, icmp_ln592_fu_2330_p2, ap_CS_fsm_state21, icmp_ln601_fu_2449_p2, icmp_ln609_fu_2568_p2, ap_CS_fsm_state30, ap_block_state30_on_subcall_done, icmp_ln628_fu_2632_p2, ap_CS_fsm_state33, icmp_ln666_fu_2803_p2, ap_CS_fsm_state64, icmp_ln675_fu_2867_p2, icmp_ln683_fu_2893_p2, ap_CS_fsm_state67, icmp_ln697_fu_3021_p2, icmp_ln736_fu_3038_p2, ap_CS_fsm_state14, ap_CS_fsm_state77, ap_CS_fsm_state3, ap_CS_fsm_state73, ap_CS_fsm_state28, ap_block_state14_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln480_fu_1052_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_rms_norm_fu_931_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((grp_quantize_activation_fu_955_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln502_fu_1069_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln508_fu_1086_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((icmp_ln514_fu_1103_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((grp_linear_forward_no_mu_fu_844_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((ap_const_boolean_0 = ap_block_state14_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (((ap_const_boolean_0 = ap_block_state16_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                if (((icmp_ln582_4_fu_2228_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state18 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state18) and (icmp_ln584_fu_2266_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state19 => 
                if (((icmp_ln590_fu_2292_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state20 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state20) and (icmp_ln592_fu_2330_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state21) and (grp_apply_rotary_pos_emb_fu_963_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state22 => 
                if (((icmp_ln599_fu_2356_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state23 => 
                if (((icmp_ln600_fu_2402_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state24 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln601_fu_2449_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state25 => 
                if (((icmp_ln607_fu_2475_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state26 => 
                if (((icmp_ln608_fu_2521_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state27 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state27) and (icmp_ln609_fu_2568_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state28 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state28) and (grp_cache_update_fu_992_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state30) and (ap_const_boolean_0 = ap_block_state30_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state31 => 
                if (((icmp_ln626_fu_2594_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state33;
                end if;
            when ap_ST_fsm_state32 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state32) and (icmp_ln628_fu_2632_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_state33 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state33) and (grp_GEMM_3D_float_fu_977_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_state33;
                end if;
            when ap_ST_fsm_state34 => 
                if (((icmp_ln636_fu_2658_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state34))) then
                    ap_NS_fsm <= ap_ST_fsm_state54;
                else
                    ap_NS_fsm <= ap_ST_fsm_state35;
                end if;
            when ap_ST_fsm_state35 => 
                if (((icmp_ln638_fu_2696_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_state36;
                end if;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state54 => 
                if (((icmp_ln653_fu_2722_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then
                    ap_NS_fsm <= ap_ST_fsm_state62;
                else
                    ap_NS_fsm <= ap_ST_fsm_state55;
                end if;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state62 => 
                if (((icmp_ln664_fu_2765_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state62))) then
                    ap_NS_fsm <= ap_ST_fsm_state63;
                else
                    ap_NS_fsm <= ap_ST_fsm_state64;
                end if;
            when ap_ST_fsm_state63 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state63) and (icmp_ln666_fu_2803_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state62;
                else
                    ap_NS_fsm <= ap_ST_fsm_state63;
                end if;
            when ap_ST_fsm_state64 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state64) and (grp_softmax_fu_911_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state65;
                else
                    ap_NS_fsm <= ap_ST_fsm_state64;
                end if;
            when ap_ST_fsm_state65 => 
                if (((icmp_ln673_fu_2829_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state65))) then
                    ap_NS_fsm <= ap_ST_fsm_state66;
                else
                    ap_NS_fsm <= ap_ST_fsm_state67;
                end if;
            when ap_ST_fsm_state66 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state66) and (icmp_ln675_fu_2867_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state65;
                else
                    ap_NS_fsm <= ap_ST_fsm_state66;
                end if;
            when ap_ST_fsm_state67 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state67) and (grp_GEMM_3D_float2_fu_985_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state68;
                else
                    ap_NS_fsm <= ap_ST_fsm_state67;
                end if;
            when ap_ST_fsm_state68 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state68) and (icmp_ln683_fu_2893_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state69;
                else
                    ap_NS_fsm <= ap_ST_fsm_state68;
                end if;
            when ap_ST_fsm_state69 => 
                if (((icmp_ln688_fu_2910_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state69))) then
                    ap_NS_fsm <= ap_ST_fsm_state72;
                else
                    ap_NS_fsm <= ap_ST_fsm_state70;
                end if;
            when ap_ST_fsm_state70 => 
                if (((icmp_ln689_fu_2986_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state70))) then
                    ap_NS_fsm <= ap_ST_fsm_state69;
                else
                    ap_NS_fsm <= ap_ST_fsm_state71;
                end if;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state72 => 
                if (((icmp_ln697_fu_3021_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state72))) then
                    ap_NS_fsm <= ap_ST_fsm_state72;
                else
                    ap_NS_fsm <= ap_ST_fsm_state73;
                end if;
            when ap_ST_fsm_state73 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state73) and (grp_rms_norm_fu_931_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state74;
                else
                    ap_NS_fsm <= ap_ST_fsm_state73;
                end if;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                if (((grp_quantize_activation_fu_955_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state75))) then
                    ap_NS_fsm <= ap_ST_fsm_state76;
                else
                    ap_NS_fsm <= ap_ST_fsm_state75;
                end if;
            when ap_ST_fsm_state76 => 
                if (((icmp_ln736_fu_3038_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state76))) then
                    ap_NS_fsm <= ap_ST_fsm_state76;
                else
                    ap_NS_fsm <= ap_ST_fsm_state77;
                end if;
            when ap_ST_fsm_state77 => 
                if (((grp_linear_forward_no_mu_fu_844_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state77))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state77;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    F2_1_fu_1463_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln461_1_fu_1423_p1));
    F2_2_fu_1581_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln461_2_fu_1541_p1));
    F2_3_fu_2017_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln461_3_fu_1977_p1));
    F2_fu_1186_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln461_fu_1146_p1));
    add_ln480_fu_1058_p2 <= std_logic_vector(unsigned(v284_0_0_reg_536) + unsigned(ap_const_lv11_1));
    add_ln502_fu_1075_p2 <= std_logic_vector(unsigned(v295_0_0_reg_547) + unsigned(ap_const_lv11_1));
    add_ln508_fu_1092_p2 <= std_logic_vector(unsigned(v298_0_0_reg_558) + unsigned(ap_const_lv11_1));
    add_ln514_fu_1109_p2 <= std_logic_vector(unsigned(v301_0_0_reg_569) + unsigned(ap_const_lv11_1));
    add_ln581_1_fu_1475_p2 <= std_logic_vector(signed(ap_const_lv12_FEC) + signed(F2_1_fu_1463_p2));
    add_ln581_2_fu_1593_p2 <= std_logic_vector(signed(ap_const_lv12_FEC) + signed(F2_2_fu_1581_p2));
    add_ln581_3_fu_2029_p2 <= std_logic_vector(signed(ap_const_lv12_FEC) + signed(F2_3_fu_2017_p2));
    add_ln581_fu_1198_p2 <= std_logic_vector(signed(ap_const_lv12_FEC) + signed(F2_fu_1186_p2));
    add_ln584_fu_2272_p2 <= std_logic_vector(unsigned(v336_0_0_reg_591) + unsigned(ap_const_lv7_1));
    add_ln585_fu_2282_p2 <= std_logic_vector(unsigned(sub_ln585_reg_3299) + unsigned(zext_ln585_1_fu_2278_p1));
    add_ln592_fu_2336_p2 <= std_logic_vector(unsigned(v340_0_0_reg_613) + unsigned(ap_const_lv7_1));
    add_ln593_fu_2346_p2 <= std_logic_vector(unsigned(sub_ln593_reg_3320) + unsigned(zext_ln593_1_fu_2342_p1));
    add_ln602_1_fu_2465_p2 <= std_logic_vector(unsigned(sub_ln602_1_reg_3354) + unsigned(zext_ln602_3_fu_2461_p1));
    add_ln602_fu_2418_p2 <= std_logic_vector(unsigned(zext_ln602_2_fu_2414_p1) + unsigned(sext_ln602_reg_3341));
    add_ln610_1_fu_2584_p2 <= std_logic_vector(unsigned(sub_ln610_1_reg_3388) + unsigned(zext_ln610_3_fu_2580_p1));
    add_ln610_fu_2537_p2 <= std_logic_vector(unsigned(zext_ln610_2_fu_2533_p1) + unsigned(sext_ln610_reg_3375));
    add_ln628_fu_2638_p2 <= std_logic_vector(unsigned(v356_0_0_reg_701) + unsigned(ap_const_lv3_1));
    add_ln629_fu_2648_p2 <= std_logic_vector(unsigned(sub_ln629_reg_3409) + unsigned(zext_ln629_1_fu_2644_p1));
    add_ln638_fu_2702_p2 <= std_logic_vector(unsigned(k10_0_0_reg_723) + unsigned(ap_const_lv3_1));
    add_ln639_fu_2712_p2 <= std_logic_vector(unsigned(sub_ln639_reg_3430) + unsigned(zext_ln639_1_fu_2708_p1));
    add_ln666_fu_2809_p2 <= std_logic_vector(unsigned(v376_0_0_reg_756) + unsigned(ap_const_lv3_1));
    add_ln667_fu_2819_p2 <= std_logic_vector(unsigned(sub_ln667_reg_3479) + unsigned(zext_ln667_1_fu_2815_p1));
    add_ln675_fu_2873_p2 <= std_logic_vector(unsigned(v380_0_0_reg_778) + unsigned(ap_const_lv7_1));
    add_ln676_fu_2883_p2 <= std_logic_vector(unsigned(sub_ln676_reg_3500) + unsigned(zext_ln676_1_fu_2879_p1));
    add_ln683_fu_2899_p2 <= std_logic_vector(unsigned(v383_0_0_reg_789) + unsigned(ap_const_lv11_1));
    add_ln688_fu_2916_p2 <= std_logic_vector(unsigned(h7_0_0_reg_800) + unsigned(ap_const_lv5_1));
    add_ln689_fu_2992_p2 <= std_logic_vector(unsigned(d4_0_0_reg_811) + unsigned(ap_const_lv7_1));
    add_ln690_fu_2998_p2 <= std_logic_vector(unsigned(sub_ln690_reg_3529) + unsigned(zext_ln689_fu_2982_p1));
    add_ln691_fu_3008_p2 <= std_logic_vector(unsigned(zext_ln689_fu_2982_p1) + unsigned(sub_ln691_reg_3534));
    add_ln697_fu_3027_p2 <= std_logic_vector(unsigned(v390_0_0_reg_822) + unsigned(ap_const_lv11_1));
    add_ln736_fu_3044_p2 <= std_logic_vector(unsigned(v408_0_0_reg_833) + unsigned(ap_const_lv11_1));
    and_ln581_1_fu_1703_p2 <= (xor_ln582_1_fu_1697_p2 and icmp_ln581_1_reg_3167);
    and_ln581_2_fu_1862_p2 <= (xor_ln582_2_fu_1856_p2 and icmp_ln581_2_reg_3207);
    and_ln581_3_fu_2139_p2 <= (xor_ln582_3_fu_2133_p2 and icmp_ln581_3_reg_3257);
    and_ln581_fu_1308_p2 <= (xor_ln582_fu_1302_p2 and icmp_ln581_reg_3122);
    and_ln582_1_fu_1688_p2 <= (xor_ln571_1_fu_1683_p2 and icmp_ln582_1_reg_3179);
    and_ln582_2_fu_1847_p2 <= (xor_ln571_2_fu_1842_p2 and icmp_ln582_2_reg_3219);
    and_ln582_3_fu_2124_p2 <= (xor_ln571_3_fu_2119_p2 and icmp_ln582_3_reg_3269);
    and_ln582_fu_1293_p2 <= (xor_ln571_fu_1288_p2 and icmp_ln582_reg_3134);
    and_ln585_2_fu_1325_p2 <= (icmp_ln585_fu_1241_p2 and and_ln581_fu_1308_p2);
    and_ln585_3_fu_1714_p2 <= (xor_ln585_1_fu_1708_p2 and and_ln581_1_fu_1703_p2);
    and_ln585_4_fu_1720_p2 <= (icmp_ln585_1_fu_1636_p2 and and_ln581_1_fu_1703_p2);
    and_ln585_5_fu_1873_p2 <= (xor_ln585_2_fu_1867_p2 and and_ln581_2_fu_1862_p2);
    and_ln585_6_fu_1879_p2 <= (icmp_ln585_2_fu_1795_p2 and and_ln581_2_fu_1862_p2);
    and_ln585_7_fu_2150_p2 <= (xor_ln585_3_fu_2144_p2 and and_ln581_3_fu_2139_p2);
    and_ln585_8_fu_2156_p2 <= (icmp_ln585_3_fu_2072_p2 and and_ln581_3_fu_2139_p2);
    and_ln585_fu_1319_p2 <= (xor_ln585_fu_1313_p2 and and_ln581_fu_1308_p2);
    and_ln603_1_fu_1737_p2 <= (xor_ln581_1_fu_1731_p2 and icmp_ln603_1_fu_1641_p2);
    and_ln603_2_fu_1896_p2 <= (xor_ln581_2_fu_1890_p2 and icmp_ln603_2_fu_1800_p2);
    and_ln603_3_fu_2173_p2 <= (xor_ln581_3_fu_2167_p2 and icmp_ln603_3_fu_2077_p2);
    and_ln603_fu_1342_p2 <= (xor_ln581_fu_1336_p2 and icmp_ln603_fu_1246_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62);
    ap_CS_fsm_state64 <= ap_CS_fsm(63);
    ap_CS_fsm_state65 <= ap_CS_fsm(64);
    ap_CS_fsm_state66 <= ap_CS_fsm(65);
    ap_CS_fsm_state67 <= ap_CS_fsm(66);
    ap_CS_fsm_state68 <= ap_CS_fsm(67);
    ap_CS_fsm_state69 <= ap_CS_fsm(68);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state70 <= ap_CS_fsm(69);
    ap_CS_fsm_state71 <= ap_CS_fsm(70);
    ap_CS_fsm_state72 <= ap_CS_fsm(71);
    ap_CS_fsm_state73 <= ap_CS_fsm(72);
    ap_CS_fsm_state74 <= ap_CS_fsm(73);
    ap_CS_fsm_state75 <= ap_CS_fsm(74);
    ap_CS_fsm_state76 <= ap_CS_fsm(75);
    ap_CS_fsm_state77 <= ap_CS_fsm(76);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state14_on_subcall_done_assign_proc : process(grp_linear_forward_no_mu_fu_844_ap_done, grp_reshape_2D_to_3D_fu_1009_ap_done, grp_linear_forward_no_mu_fu_873_ap_done)
    begin
                ap_block_state14_on_subcall_done <= ((grp_linear_forward_no_mu_fu_873_ap_done = ap_const_logic_0) or (grp_reshape_2D_to_3D_fu_1009_ap_done = ap_const_logic_0) or (grp_linear_forward_no_mu_fu_844_ap_done = ap_const_logic_0));
    end process;


    ap_block_state16_on_subcall_done_assign_proc : process(grp_reshape_2D_to_3D_fu_1009_ap_done, grp_reshape_2D_to_3D_fu_1017_ap_done)
    begin
                ap_block_state16_on_subcall_done <= ((grp_reshape_2D_to_3D_fu_1017_ap_done = ap_const_logic_0) or (grp_reshape_2D_to_3D_fu_1009_ap_done = ap_const_logic_0));
    end process;


    ap_block_state30_on_subcall_done_assign_proc : process(grp_cache_update_fu_992_ap_done, grp_transpose_last_two_d_fu_1002_ap_done)
    begin
                ap_block_state30_on_subcall_done <= ((grp_transpose_last_two_d_fu_1002_ap_done = ap_const_logic_0) or (grp_cache_update_fu_992_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(grp_linear_forward_no_mu_fu_844_ap_done, ap_CS_fsm_state77)
    begin
        if (((grp_linear_forward_no_mu_fu_844_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state77))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_linear_forward_no_mu_fu_844_ap_done, ap_CS_fsm_state77)
    begin
        if (((grp_linear_forward_no_mu_fu_844_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state77))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ashr_ln586_1_fu_1650_p2 <= std_logic_vector(shift_right(signed(man_V_5_reg_3156),to_integer(unsigned('0' & zext_ln586_1_fu_1646_p1(31-1 downto 0)))));
    ashr_ln586_2_fu_1809_p2 <= std_logic_vector(shift_right(signed(man_V_8_reg_3196),to_integer(unsigned('0' & zext_ln586_2_fu_1805_p1(31-1 downto 0)))));
    ashr_ln586_3_fu_2086_p2 <= std_logic_vector(shift_right(signed(man_V_11_reg_3246),to_integer(unsigned('0' & zext_ln586_3_fu_2082_p1(31-1 downto 0)))));
    ashr_ln586_fu_1255_p2 <= std_logic_vector(shift_right(signed(man_V_2_reg_3111),to_integer(unsigned('0' & zext_ln586_fu_1251_p1(31-1 downto 0)))));

    attn_output_0_address0_assign_proc : process(ap_CS_fsm_state66, ap_CS_fsm_state70, grp_GEMM_3D_float2_fu_985_v254_0_address0, ap_CS_fsm_state67, sext_ln676_fu_2888_p1, sext_ln690_fu_3003_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            attn_output_0_address0 <= sext_ln690_fu_3003_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            attn_output_0_address0 <= sext_ln676_fu_2888_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            attn_output_0_address0 <= grp_GEMM_3D_float2_fu_985_v254_0_address0;
        else 
            attn_output_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    attn_output_0_ce0_assign_proc : process(ap_CS_fsm_state66, ap_CS_fsm_state70, grp_GEMM_3D_float2_fu_985_v254_0_ce0, ap_CS_fsm_state67)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            attn_output_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            attn_output_0_ce0 <= grp_GEMM_3D_float2_fu_985_v254_0_ce0;
        else 
            attn_output_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    attn_output_0_d0_assign_proc : process(ap_CS_fsm_state66, grp_GEMM_3D_float2_fu_985_v254_0_d0, ap_CS_fsm_state67)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            attn_output_0_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            attn_output_0_d0 <= grp_GEMM_3D_float2_fu_985_v254_0_d0;
        else 
            attn_output_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    attn_output_0_we0_assign_proc : process(ap_CS_fsm_state66, grp_GEMM_3D_float2_fu_985_v254_0_we0, icmp_ln675_fu_2867_p2, ap_CS_fsm_state67)
    begin
        if (((icmp_ln675_fu_2867_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state66))) then 
            attn_output_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            attn_output_0_we0 <= grp_GEMM_3D_float2_fu_985_v254_0_we0;
        else 
            attn_output_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    attn_output_2D_address0_assign_proc : process(ap_CS_fsm_state68, grp_rms_norm_fu_931_v0_address0, ap_CS_fsm_state71, ap_CS_fsm_state73, zext_ln684_fu_2905_p1, zext_ln691_fu_3016_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            attn_output_2D_address0 <= zext_ln691_fu_3016_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            attn_output_2D_address0 <= zext_ln684_fu_2905_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            attn_output_2D_address0 <= grp_rms_norm_fu_931_v0_address0;
        else 
            attn_output_2D_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    attn_output_2D_ce0_assign_proc : process(ap_CS_fsm_state68, grp_rms_norm_fu_931_v0_ce0, ap_CS_fsm_state71, ap_CS_fsm_state73)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state71))) then 
            attn_output_2D_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            attn_output_2D_ce0 <= grp_rms_norm_fu_931_v0_ce0;
        else 
            attn_output_2D_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    attn_output_2D_d0_assign_proc : process(ap_CS_fsm_state68, attn_output_0_q0, ap_CS_fsm_state71)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            attn_output_2D_d0 <= attn_output_0_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            attn_output_2D_d0 <= ap_const_lv32_0;
        else 
            attn_output_2D_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    attn_output_2D_we0_assign_proc : process(ap_CS_fsm_state68, icmp_ln683_fu_2893_p2, ap_CS_fsm_state71)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state71) or ((icmp_ln683_fu_2893_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state68)))) then 
            attn_output_2D_we0 <= ap_const_logic_1;
        else 
            attn_output_2D_we0 <= ap_const_logic_0;
        end if; 
    end process;


    attn_weights_0_address0_assign_proc : process(ap_CS_fsm_state32, ap_CS_fsm_state35, attn_weights_0_addr_2_reg_3443, ap_CS_fsm_state54, attn_weights_0_addr_1_reg_3461, grp_softmax_fu_911_v225_0_address0, grp_GEMM_3D_float_fu_977_v212_0_address0, ap_CS_fsm_state33, ap_CS_fsm_state53, ap_CS_fsm_state61, ap_CS_fsm_state64, sext_ln629_fu_2653_p1, sext_ln639_fu_2717_p1, sext_ln657_fu_2760_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            attn_weights_0_address0 <= attn_weights_0_addr_1_reg_3461;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            attn_weights_0_address0 <= sext_ln657_fu_2760_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            attn_weights_0_address0 <= attn_weights_0_addr_2_reg_3443;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            attn_weights_0_address0 <= sext_ln639_fu_2717_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            attn_weights_0_address0 <= sext_ln629_fu_2653_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            attn_weights_0_address0 <= grp_GEMM_3D_float_fu_977_v212_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            attn_weights_0_address0 <= grp_softmax_fu_911_v225_0_address0;
        else 
            attn_weights_0_address0 <= "XXXXXXX";
        end if; 
    end process;


    attn_weights_0_ce0_assign_proc : process(ap_CS_fsm_state32, ap_CS_fsm_state35, ap_CS_fsm_state54, grp_softmax_fu_911_v225_0_ce0, grp_GEMM_3D_float_fu_977_v212_0_ce0, ap_CS_fsm_state33, ap_CS_fsm_state53, ap_CS_fsm_state61, ap_CS_fsm_state64)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state53))) then 
            attn_weights_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            attn_weights_0_ce0 <= grp_GEMM_3D_float_fu_977_v212_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            attn_weights_0_ce0 <= grp_softmax_fu_911_v225_0_ce0;
        else 
            attn_weights_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    attn_weights_0_d0_assign_proc : process(ap_CS_fsm_state32, v_reg_3448, v2_reg_3466, grp_GEMM_3D_float_fu_977_v212_0_d0, ap_CS_fsm_state33, ap_CS_fsm_state53, ap_CS_fsm_state61)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            attn_weights_0_d0 <= v2_reg_3466;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            attn_weights_0_d0 <= v_reg_3448;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            attn_weights_0_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            attn_weights_0_d0 <= grp_GEMM_3D_float_fu_977_v212_0_d0;
        else 
            attn_weights_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    attn_weights_0_we0_assign_proc : process(ap_CS_fsm_state32, grp_GEMM_3D_float_fu_977_v212_0_we0, icmp_ln628_fu_2632_p2, ap_CS_fsm_state33, ap_CS_fsm_state53, ap_CS_fsm_state61)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state53) or ((icmp_ln628_fu_2632_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32)))) then 
            attn_weights_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            attn_weights_0_we0 <= grp_GEMM_3D_float_fu_977_v212_0_we0;
        else 
            attn_weights_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln696_3_fu_1659_p1 <= v268;
    bitcast_ln696_5_fu_1818_p1 <= v270;
    bitcast_ln696_7_fu_2095_p1 <= v272;
    bitcast_ln696_fu_1264_p1 <= v266;
    exp_tmp_V_1_fu_1413_p4 <= ireg_V_1_fu_1397_p1(62 downto 52);
    exp_tmp_V_2_fu_1531_p4 <= ireg_V_2_fu_1515_p1(62 downto 52);
    exp_tmp_V_3_fu_1967_p4 <= ireg_V_3_fu_1951_p1(62 downto 52);
    exp_tmp_V_fu_1136_p4 <= ireg_V_fu_1120_p1(62 downto 52);
    grp_GEMM_3D_float2_fu_985_ap_start <= grp_GEMM_3D_float2_fu_985_ap_start_reg;
    grp_GEMM_3D_float_fu_977_ap_start <= grp_GEMM_3D_float_fu_977_ap_start_reg;
    grp_apply_rotary_pos_emb_fu_963_ap_start <= grp_apply_rotary_pos_emb_fu_963_ap_start_reg;
    grp_cache_update_fu_992_ap_start <= grp_cache_update_fu_992_ap_start_reg;

    grp_cache_update_fu_992_v193_q0_assign_proc : process(v277_q0, v278_q0, ap_CS_fsm_state30, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            grp_cache_update_fu_992_v193_q0 <= v278_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            grp_cache_update_fu_992_v193_q0 <= v277_q0;
        else 
            grp_cache_update_fu_992_v193_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_cache_update_fu_992_v194_0_q0_assign_proc : process(v_proj_0_q0, k_embed_0_q0, ap_CS_fsm_state30, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            grp_cache_update_fu_992_v194_0_q0 <= v_proj_0_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            grp_cache_update_fu_992_v194_0_q0 <= k_embed_0_q0;
        else 
            grp_cache_update_fu_992_v194_0_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1034_ce_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state15, ap_CS_fsm_state14, ap_block_state14_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_const_boolean_0 = ap_block_state14_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            grp_fu_1034_ce <= ap_const_logic_1;
        else 
            grp_fu_1034_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1034_p0_assign_proc : process(v266, v268, v272, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_1034_p0 <= v272;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_1034_p0 <= v268;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_1034_p0 <= v266;
        else 
            grp_fu_1034_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_linear_forward_no_mu_fu_844_ap_start <= grp_linear_forward_no_mu_fu_844_ap_start_reg;

    grp_linear_forward_no_mu_fu_844_v79_0_0_0_q0_assign_proc : process(quantized_hidden_sta_7_q0, quantized_final_outp_7_q0, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            grp_linear_forward_no_mu_fu_844_v79_0_0_0_q0 <= quantized_final_outp_7_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            grp_linear_forward_no_mu_fu_844_v79_0_0_0_q0 <= quantized_hidden_sta_7_q0;
        else 
            grp_linear_forward_no_mu_fu_844_v79_0_0_0_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_844_v79_0_0_1_q0_assign_proc : process(quantized_hidden_sta_6_q0, quantized_final_outp_6_q0, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            grp_linear_forward_no_mu_fu_844_v79_0_0_1_q0 <= quantized_final_outp_6_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            grp_linear_forward_no_mu_fu_844_v79_0_0_1_q0 <= quantized_hidden_sta_6_q0;
        else 
            grp_linear_forward_no_mu_fu_844_v79_0_0_1_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_844_v79_0_0_2_q0_assign_proc : process(quantized_hidden_sta_5_q0, quantized_final_outp_5_q0, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            grp_linear_forward_no_mu_fu_844_v79_0_0_2_q0 <= quantized_final_outp_5_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            grp_linear_forward_no_mu_fu_844_v79_0_0_2_q0 <= quantized_hidden_sta_5_q0;
        else 
            grp_linear_forward_no_mu_fu_844_v79_0_0_2_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_844_v79_0_0_3_q0_assign_proc : process(quantized_hidden_sta_4_q0, quantized_final_outp_4_q0, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            grp_linear_forward_no_mu_fu_844_v79_0_0_3_q0 <= quantized_final_outp_4_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            grp_linear_forward_no_mu_fu_844_v79_0_0_3_q0 <= quantized_hidden_sta_4_q0;
        else 
            grp_linear_forward_no_mu_fu_844_v79_0_0_3_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_844_v79_1_0_0_q0_assign_proc : process(quantized_hidden_sta_3_q0, quantized_final_outp_3_q0, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            grp_linear_forward_no_mu_fu_844_v79_1_0_0_q0 <= quantized_final_outp_3_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            grp_linear_forward_no_mu_fu_844_v79_1_0_0_q0 <= quantized_hidden_sta_3_q0;
        else 
            grp_linear_forward_no_mu_fu_844_v79_1_0_0_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_844_v79_1_0_1_q0_assign_proc : process(quantized_hidden_sta_2_q0, quantized_final_outp_2_q0, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            grp_linear_forward_no_mu_fu_844_v79_1_0_1_q0 <= quantized_final_outp_2_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            grp_linear_forward_no_mu_fu_844_v79_1_0_1_q0 <= quantized_hidden_sta_2_q0;
        else 
            grp_linear_forward_no_mu_fu_844_v79_1_0_1_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_844_v79_1_0_2_q0_assign_proc : process(quantized_hidden_sta_1_q0, quantized_final_outp_1_q0, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            grp_linear_forward_no_mu_fu_844_v79_1_0_2_q0 <= quantized_final_outp_1_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            grp_linear_forward_no_mu_fu_844_v79_1_0_2_q0 <= quantized_hidden_sta_1_q0;
        else 
            grp_linear_forward_no_mu_fu_844_v79_1_0_2_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_844_v79_1_0_3_q0_assign_proc : process(quantized_hidden_sta_q0, quantized_final_outp_q0, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            grp_linear_forward_no_mu_fu_844_v79_1_0_3_q0 <= quantized_final_outp_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            grp_linear_forward_no_mu_fu_844_v79_1_0_3_q0 <= quantized_hidden_sta_q0;
        else 
            grp_linear_forward_no_mu_fu_844_v79_1_0_3_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_844_v81_0_q0_assign_proc : process(v265_0_q0, v267_0_q0, v271_0_q0, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            grp_linear_forward_no_mu_fu_844_v81_0_q0 <= v271_0_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_linear_forward_no_mu_fu_844_v81_0_q0 <= v267_0_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_linear_forward_no_mu_fu_844_v81_0_q0 <= v265_0_q0;
        else 
            grp_linear_forward_no_mu_fu_844_v81_0_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_844_v81_1_q0_assign_proc : process(v265_1_q0, v267_1_q0, v271_1_q0, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            grp_linear_forward_no_mu_fu_844_v81_1_q0 <= v271_1_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_linear_forward_no_mu_fu_844_v81_1_q0 <= v267_1_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_linear_forward_no_mu_fu_844_v81_1_q0 <= v265_1_q0;
        else 
            grp_linear_forward_no_mu_fu_844_v81_1_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_844_v82_V_assign_proc : process(v302_V_reg_3151, v304_V_reg_3236, ap_CS_fsm_state12, v308_V_reg_3286, ap_CS_fsm_state14, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            grp_linear_forward_no_mu_fu_844_v82_V <= v308_V_reg_3286;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_linear_forward_no_mu_fu_844_v82_V <= v304_V_reg_3236;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_linear_forward_no_mu_fu_844_v82_V <= v302_V_reg_3151;
        else 
            grp_linear_forward_no_mu_fu_844_v82_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_linear_forward_no_mu_fu_873_ap_start <= grp_linear_forward_no_mu_fu_873_ap_start_reg;
    grp_quantize_activation_fu_955_ap_start <= grp_quantize_activation_fu_955_ap_start_reg;

    grp_quantize_activation_fu_955_v22_0_q0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state75, rms_hidden_states_0_q0, rms_attn_output_0_q0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            grp_quantize_activation_fu_955_v22_0_q0 <= rms_attn_output_0_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_quantize_activation_fu_955_v22_0_q0 <= rms_hidden_states_0_q0;
        else 
            grp_quantize_activation_fu_955_v22_0_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_reshape_2D_to_3D_fu_1009_ap_start <= grp_reshape_2D_to_3D_fu_1009_ap_start_reg;

    grp_reshape_2D_to_3D_fu_1009_v147_q0_assign_proc : process(ap_CS_fsm_state16, q_proj_re_q0, k_proj_re_q0, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_reshape_2D_to_3D_fu_1009_v147_q0 <= k_proj_re_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_reshape_2D_to_3D_fu_1009_v147_q0 <= q_proj_re_q0;
        else 
            grp_reshape_2D_to_3D_fu_1009_v147_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_reshape_2D_to_3D_fu_1017_ap_start <= grp_reshape_2D_to_3D_fu_1017_ap_start_reg;
    grp_rms_norm_fu_931_ap_start <= grp_rms_norm_fu_931_ap_start_reg;

    grp_rms_norm_fu_931_v0_q0_assign_proc : process(v264_q0, attn_output_2D_q0, ap_CS_fsm_state3, ap_CS_fsm_state73)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            grp_rms_norm_fu_931_v0_q0 <= attn_output_2D_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_rms_norm_fu_931_v0_q0 <= v264_q0;
        else 
            grp_rms_norm_fu_931_v0_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_rms_norm_fu_931_v1_q0_assign_proc : process(v275_q0, v276_q0, ap_CS_fsm_state3, ap_CS_fsm_state73)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            grp_rms_norm_fu_931_v1_q0 <= v276_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_rms_norm_fu_931_v1_q0 <= v275_q0;
        else 
            grp_rms_norm_fu_931_v1_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_softmax_fu_911_ap_start <= grp_softmax_fu_911_ap_start_reg;
    grp_transpose_last_two_d_fu_1002_ap_start <= grp_transpose_last_two_d_fu_1002_ap_start_reg;
    h6_fu_2728_p2 <= std_logic_vector(unsigned(h6_0_reg_734) + unsigned(ap_const_lv5_1));
    i11_fu_2664_p2 <= std_logic_vector(unsigned(i11_0_reg_712) + unsigned(ap_const_lv5_1));
    icmp_ln480_fu_1052_p2 <= "1" when (v284_0_0_reg_536 = ap_const_lv11_600) else "0";
    icmp_ln502_fu_1069_p2 <= "1" when (v295_0_0_reg_547 = ap_const_lv11_600) else "0";
    icmp_ln508_fu_1086_p2 <= "1" when (v298_0_0_reg_558 = ap_const_lv11_600) else "0";
    icmp_ln514_fu_1103_p2 <= "1" when (v301_0_0_reg_569 = ap_const_lv11_600) else "0";
    icmp_ln571_1_fu_1457_p2 <= "1" when (trunc_ln556_1_fu_1401_p1 = ap_const_lv63_0) else "0";
    icmp_ln571_2_fu_1575_p2 <= "1" when (trunc_ln556_2_fu_1519_p1 = ap_const_lv63_0) else "0";
    icmp_ln571_3_fu_2011_p2 <= "1" when (trunc_ln556_3_fu_1955_p1 = ap_const_lv63_0) else "0";
    icmp_ln571_fu_1180_p2 <= "1" when (trunc_ln556_fu_1124_p1 = ap_const_lv63_0) else "0";
    icmp_ln581_1_fu_1469_p2 <= "1" when (signed(F2_1_fu_1463_p2) > signed(ap_const_lv12_14)) else "0";
    icmp_ln581_2_fu_1587_p2 <= "1" when (signed(F2_2_fu_1581_p2) > signed(ap_const_lv12_14)) else "0";
    icmp_ln581_3_fu_2023_p2 <= "1" when (signed(F2_3_fu_2017_p2) > signed(ap_const_lv12_14)) else "0";
    icmp_ln581_fu_1192_p2 <= "1" when (signed(F2_fu_1186_p2) > signed(ap_const_lv12_14)) else "0";
    icmp_ln582_1_fu_1495_p2 <= "1" when (F2_1_fu_1463_p2 = ap_const_lv12_14) else "0";
    icmp_ln582_2_fu_1613_p2 <= "1" when (F2_2_fu_1581_p2 = ap_const_lv12_14) else "0";
    icmp_ln582_3_fu_2049_p2 <= "1" when (F2_3_fu_2017_p2 = ap_const_lv12_14) else "0";
    icmp_ln582_4_fu_2228_p2 <= "1" when (v334_0_reg_580 = ap_const_lv5_10) else "0";
    icmp_ln582_fu_1218_p2 <= "1" when (F2_fu_1186_p2 = ap_const_lv12_14) else "0";
    icmp_ln584_fu_2266_p2 <= "1" when (v336_0_0_reg_591 = ap_const_lv7_60) else "0";
    icmp_ln585_1_fu_1636_p2 <= "1" when (unsigned(sh_amt_1_reg_3173) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln585_2_fu_1795_p2 <= "1" when (unsigned(sh_amt_2_reg_3213) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln585_3_fu_2072_p2 <= "1" when (unsigned(sh_amt_3_reg_3263) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln585_fu_1241_p2 <= "1" when (unsigned(sh_amt_reg_3128) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln590_fu_2292_p2 <= "1" when (v338_0_reg_602 = ap_const_lv5_10) else "0";
    icmp_ln592_fu_2330_p2 <= "1" when (v340_0_0_reg_613 = ap_const_lv7_60) else "0";
    icmp_ln599_fu_2356_p2 <= "1" when (v342_0_reg_624 = ap_const_lv5_10) else "0";
    icmp_ln600_fu_2402_p2 <= "1" when (v343_0_reg_635 = ap_const_lv3_6) else "0";
    icmp_ln601_fu_2449_p2 <= "1" when (v344_0_reg_646 = ap_const_lv7_60) else "0";
    icmp_ln603_1_fu_1641_p2 <= "1" when (tmp_56_reg_3191 = ap_const_lv7_0) else "0";
    icmp_ln603_2_fu_1800_p2 <= "1" when (tmp_69_reg_3231 = ap_const_lv7_0) else "0";
    icmp_ln603_3_fu_2077_p2 <= "1" when (tmp_72_reg_3281 = ap_const_lv7_0) else "0";
    icmp_ln603_fu_1246_p2 <= "1" when (tmp_43_reg_3146 = ap_const_lv7_0) else "0";
    icmp_ln607_fu_2475_p2 <= "1" when (v346_0_reg_657 = ap_const_lv5_10) else "0";
    icmp_ln608_fu_2521_p2 <= "1" when (v347_0_reg_668 = ap_const_lv3_6) else "0";
    icmp_ln609_fu_2568_p2 <= "1" when (v348_0_reg_679 = ap_const_lv7_60) else "0";
    icmp_ln626_fu_2594_p2 <= "1" when (v354_0_reg_690 = ap_const_lv5_10) else "0";
    icmp_ln628_fu_2632_p2 <= "1" when (v356_0_0_reg_701 = ap_const_lv3_6) else "0";
    icmp_ln636_fu_2658_p2 <= "1" when (i11_0_reg_712 = ap_const_lv5_10) else "0";
    icmp_ln638_fu_2696_p2 <= "1" when (k10_0_0_reg_723 = ap_const_lv3_6) else "0";
    icmp_ln653_fu_2722_p2 <= "1" when (h6_0_reg_734 = ap_const_lv5_10) else "0";
    icmp_ln664_fu_2765_p2 <= "1" when (v374_0_reg_745 = ap_const_lv5_10) else "0";
    icmp_ln666_fu_2803_p2 <= "1" when (v376_0_0_reg_756 = ap_const_lv3_6) else "0";
    icmp_ln673_fu_2829_p2 <= "1" when (v378_0_reg_767 = ap_const_lv5_10) else "0";
    icmp_ln675_fu_2867_p2 <= "1" when (v380_0_0_reg_778 = ap_const_lv7_60) else "0";
    icmp_ln683_fu_2893_p2 <= "1" when (v383_0_0_reg_789 = ap_const_lv11_600) else "0";
    icmp_ln688_fu_2910_p2 <= "1" when (h7_0_0_reg_800 = ap_const_lv5_10) else "0";
    icmp_ln689_fu_2986_p2 <= "1" when (d4_0_0_reg_811 = ap_const_lv7_60) else "0";
    icmp_ln697_fu_3021_p2 <= "1" when (v390_0_0_reg_822 = ap_const_lv11_600) else "0";
    icmp_ln736_fu_3038_p2 <= "1" when (v408_0_0_reg_833 = ap_const_lv11_600) else "0";
    ireg_V_1_fu_1397_p1 <= grp_fu_1034_p1;
    ireg_V_2_fu_1515_p1 <= grp_fu_1037_p1;
    ireg_V_3_fu_1951_p1 <= grp_fu_1034_p1;
    ireg_V_fu_1120_p1 <= grp_fu_1034_p1;

    k_embed_0_address0_assign_proc : process(ap_CS_fsm_state20, grp_apply_rotary_pos_emb_fu_963_v166_0_address0, grp_cache_update_fu_992_v194_0_address0, ap_CS_fsm_state21, ap_CS_fsm_state28, sext_ln593_fu_2351_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            k_embed_0_address0 <= sext_ln593_fu_2351_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            k_embed_0_address0 <= grp_cache_update_fu_992_v194_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            k_embed_0_address0 <= grp_apply_rotary_pos_emb_fu_963_v166_0_address0;
        else 
            k_embed_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    k_embed_0_ce0_assign_proc : process(ap_CS_fsm_state20, grp_apply_rotary_pos_emb_fu_963_v166_0_ce0, grp_cache_update_fu_992_v194_0_ce0, ap_CS_fsm_state21, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            k_embed_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            k_embed_0_ce0 <= grp_cache_update_fu_992_v194_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            k_embed_0_ce0 <= grp_apply_rotary_pos_emb_fu_963_v166_0_ce0;
        else 
            k_embed_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_embed_0_d0_assign_proc : process(ap_CS_fsm_state20, grp_apply_rotary_pos_emb_fu_963_v166_0_d0, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            k_embed_0_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            k_embed_0_d0 <= grp_apply_rotary_pos_emb_fu_963_v166_0_d0;
        else 
            k_embed_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    k_embed_0_we0_assign_proc : process(ap_CS_fsm_state20, grp_apply_rotary_pos_emb_fu_963_v166_0_we0, icmp_ln592_fu_2330_p2, ap_CS_fsm_state21)
    begin
        if (((icmp_ln592_fu_2330_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            k_embed_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            k_embed_0_we0 <= grp_apply_rotary_pos_emb_fu_963_v166_0_we0;
        else 
            k_embed_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_0_address0_assign_proc : process(ap_CS_fsm_state16, grp_apply_rotary_pos_emb_fu_963_k_proj_0_address0, grp_reshape_2D_to_3D_fu_1009_v148_0_address0, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            k_proj_0_address0 <= grp_reshape_2D_to_3D_fu_1009_v148_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            k_proj_0_address0 <= grp_apply_rotary_pos_emb_fu_963_k_proj_0_address0;
        else 
            k_proj_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    k_proj_0_ce0_assign_proc : process(ap_CS_fsm_state16, grp_apply_rotary_pos_emb_fu_963_k_proj_0_ce0, grp_reshape_2D_to_3D_fu_1009_v148_0_ce0, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            k_proj_0_ce0 <= grp_reshape_2D_to_3D_fu_1009_v148_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            k_proj_0_ce0 <= grp_apply_rotary_pos_emb_fu_963_k_proj_0_ce0;
        else 
            k_proj_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_0_ce1_assign_proc : process(grp_apply_rotary_pos_emb_fu_963_k_proj_0_ce1, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            k_proj_0_ce1 <= grp_apply_rotary_pos_emb_fu_963_k_proj_0_ce1;
        else 
            k_proj_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_0_we0_assign_proc : process(ap_CS_fsm_state16, grp_reshape_2D_to_3D_fu_1009_v148_0_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            k_proj_0_we0 <= grp_reshape_2D_to_3D_fu_1009_v148_0_we0;
        else 
            k_proj_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_re_address0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state16, grp_linear_forward_no_mu_fu_844_v83_address0, grp_reshape_2D_to_3D_fu_1009_v147_address0, ap_CS_fsm_state14, zext_ln509_fu_1098_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            k_proj_re_address0 <= zext_ln509_fu_1098_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            k_proj_re_address0 <= grp_reshape_2D_to_3D_fu_1009_v147_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            k_proj_re_address0 <= grp_linear_forward_no_mu_fu_844_v83_address0;
        else 
            k_proj_re_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    k_proj_re_ce0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state16, grp_linear_forward_no_mu_fu_844_v83_ce0, grp_reshape_2D_to_3D_fu_1009_v147_ce0, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            k_proj_re_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            k_proj_re_ce0 <= grp_reshape_2D_to_3D_fu_1009_v147_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            k_proj_re_ce0 <= grp_linear_forward_no_mu_fu_844_v83_ce0;
        else 
            k_proj_re_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_re_d0_assign_proc : process(ap_CS_fsm_state7, grp_linear_forward_no_mu_fu_844_v83_d0, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            k_proj_re_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            k_proj_re_d0 <= grp_linear_forward_no_mu_fu_844_v83_d0;
        else 
            k_proj_re_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    k_proj_re_we0_assign_proc : process(ap_CS_fsm_state7, grp_linear_forward_no_mu_fu_844_v83_we0, icmp_ln508_fu_1086_p2, ap_CS_fsm_state14)
    begin
        if (((icmp_ln508_fu_1086_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            k_proj_re_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            k_proj_re_we0 <= grp_linear_forward_no_mu_fu_844_v83_we0;
        else 
            k_proj_re_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_transposed_address0_assign_proc : process(grp_GEMM_3D_float_fu_977_k_proj_transposed_address0, grp_transpose_last_two_d_fu_1002_v205_address0, ap_CS_fsm_state30, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            k_proj_transposed_address0 <= grp_transpose_last_two_d_fu_1002_v205_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            k_proj_transposed_address0 <= grp_GEMM_3D_float_fu_977_k_proj_transposed_address0;
        else 
            k_proj_transposed_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    k_proj_transposed_ce0_assign_proc : process(grp_GEMM_3D_float_fu_977_k_proj_transposed_ce0, grp_transpose_last_two_d_fu_1002_v205_ce0, ap_CS_fsm_state30, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            k_proj_transposed_ce0 <= grp_transpose_last_two_d_fu_1002_v205_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            k_proj_transposed_ce0 <= grp_GEMM_3D_float_fu_977_k_proj_transposed_ce0;
        else 
            k_proj_transposed_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_transposed_we0_assign_proc : process(grp_transpose_last_two_d_fu_1002_v205_we0, ap_CS_fsm_state30)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            k_proj_transposed_we0 <= grp_transpose_last_two_d_fu_1002_v205_we0;
        else 
            k_proj_transposed_we0 <= ap_const_logic_0;
        end if; 
    end process;

    man_V_10_fu_1997_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_65_fu_1993_p1));
    man_V_11_fu_2003_p3 <= 
        man_V_10_fu_1997_p2 when (p_Result_64_fu_1959_p3(0) = '1') else 
        p_Result_65_fu_1993_p1;
    man_V_1_fu_1166_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_59_fu_1162_p1));
    man_V_2_fu_1172_p3 <= 
        man_V_1_fu_1166_p2 when (p_Result_s_fu_1128_p3(0) = '1') else 
        p_Result_59_fu_1162_p1;
    man_V_4_fu_1443_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_61_fu_1439_p1));
    man_V_5_fu_1449_p3 <= 
        man_V_4_fu_1443_p2 when (p_Result_60_fu_1405_p3(0) = '1') else 
        p_Result_61_fu_1439_p1;
    man_V_7_fu_1561_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_63_fu_1557_p1));
    man_V_8_fu_1567_p3 <= 
        man_V_7_fu_1561_p2 when (p_Result_62_fu_1523_p3(0) = '1') else 
        p_Result_63_fu_1557_p1;
    or_ln581_1_fu_1726_p2 <= (or_ln582_1_fu_1693_p2 or icmp_ln581_1_reg_3167);
    or_ln581_2_fu_1885_p2 <= (or_ln582_2_fu_1852_p2 or icmp_ln581_2_reg_3207);
    or_ln581_3_fu_2162_p2 <= (or_ln582_3_fu_2129_p2 or icmp_ln581_3_reg_3257);
    or_ln581_fu_1331_p2 <= (or_ln582_fu_1298_p2 or icmp_ln581_reg_3122);
    or_ln582_1_fu_1693_p2 <= (icmp_ln582_1_reg_3179 or icmp_ln571_1_reg_3161);
    or_ln582_2_fu_1852_p2 <= (icmp_ln582_2_reg_3219 or icmp_ln571_2_reg_3201);
    or_ln582_3_fu_2129_p2 <= (icmp_ln582_3_reg_3269 or icmp_ln571_3_reg_3251);
    or_ln582_fu_1298_p2 <= (icmp_ln582_reg_3134 or icmp_ln571_reg_3116);
    or_ln603_10_fu_1937_p2 <= (or_ln603_9_fu_1923_p2 or or_ln603_8_fu_1910_p2);
    or_ln603_11_fu_2187_p2 <= (and_ln603_3_fu_2173_p2 or and_ln585_8_fu_2156_p2);
    or_ln603_12_fu_2200_p2 <= (and_ln585_7_fu_2150_p2 or and_ln582_3_fu_2124_p2);
    or_ln603_13_fu_2214_p2 <= (or_ln603_12_fu_2200_p2 or or_ln603_11_fu_2187_p2);
    or_ln603_3_fu_1369_p2 <= (and_ln585_fu_1319_p2 or and_ln582_fu_1293_p2);
    or_ln603_4_fu_1383_p2 <= (or_ln603_fu_1356_p2 or or_ln603_3_fu_1369_p2);
    or_ln603_5_fu_1751_p2 <= (and_ln603_1_fu_1737_p2 or and_ln585_4_fu_1720_p2);
    or_ln603_6_fu_1764_p2 <= (and_ln585_3_fu_1714_p2 or and_ln582_1_fu_1688_p2);
    or_ln603_7_fu_1778_p2 <= (or_ln603_6_fu_1764_p2 or or_ln603_5_fu_1751_p2);
    or_ln603_8_fu_1910_p2 <= (and_ln603_2_fu_1896_p2 or and_ln585_6_fu_1879_p2);
    or_ln603_9_fu_1923_p2 <= (and_ln585_5_fu_1873_p2 or and_ln582_2_fu_1847_p2);
    or_ln603_fu_1356_p2 <= (and_ln603_fu_1342_p2 or and_ln585_2_fu_1325_p2);
    p_Result_59_fu_1162_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_1154_p3),54));
    p_Result_60_fu_1405_p3 <= ireg_V_1_fu_1397_p1(63 downto 63);
    p_Result_61_fu_1439_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_1431_p3),54));
    p_Result_62_fu_1523_p3 <= ireg_V_2_fu_1515_p1(63 downto 63);
    p_Result_63_fu_1557_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_1549_p3),54));
    p_Result_64_fu_1959_p3 <= ireg_V_3_fu_1951_p1(63 downto 63);
    p_Result_65_fu_1993_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_1985_p3),54));
    p_Result_s_fu_1128_p3 <= ireg_V_fu_1120_p1(63 downto 63);
    p_shl2_cast_fu_2554_p3 <= (add_ln610_fu_2537_p2 & ap_const_lv5_0);
    p_shl8_cast_fu_2427_p3 <= (trunc_ln602_fu_2423_p1 & ap_const_lv7_0);
    p_shl9_cast_fu_2435_p3 <= (add_ln602_fu_2418_p2 & ap_const_lv5_0);
    p_shl_cast_fu_2546_p3 <= (trunc_ln610_fu_2542_p1 & ap_const_lv7_0);

    q_embed_0_address0_assign_proc : process(ap_CS_fsm_state18, grp_apply_rotary_pos_emb_fu_963_v165_0_address0, grp_GEMM_3D_float_fu_977_v210_0_address0, ap_CS_fsm_state21, ap_CS_fsm_state33, sext_ln585_fu_2287_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            q_embed_0_address0 <= sext_ln585_fu_2287_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            q_embed_0_address0 <= grp_GEMM_3D_float_fu_977_v210_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            q_embed_0_address0 <= grp_apply_rotary_pos_emb_fu_963_v165_0_address0;
        else 
            q_embed_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    q_embed_0_ce0_assign_proc : process(ap_CS_fsm_state18, grp_apply_rotary_pos_emb_fu_963_v165_0_ce0, grp_GEMM_3D_float_fu_977_v210_0_ce0, ap_CS_fsm_state21, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            q_embed_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            q_embed_0_ce0 <= grp_GEMM_3D_float_fu_977_v210_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            q_embed_0_ce0 <= grp_apply_rotary_pos_emb_fu_963_v165_0_ce0;
        else 
            q_embed_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    q_embed_0_d0_assign_proc : process(ap_CS_fsm_state18, grp_apply_rotary_pos_emb_fu_963_v165_0_d0, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            q_embed_0_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            q_embed_0_d0 <= grp_apply_rotary_pos_emb_fu_963_v165_0_d0;
        else 
            q_embed_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    q_embed_0_we0_assign_proc : process(ap_CS_fsm_state18, grp_apply_rotary_pos_emb_fu_963_v165_0_we0, icmp_ln584_fu_2266_p2, ap_CS_fsm_state21)
    begin
        if (((icmp_ln584_fu_2266_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            q_embed_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            q_embed_0_we0 <= grp_apply_rotary_pos_emb_fu_963_v165_0_we0;
        else 
            q_embed_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    q_proj_0_address0_assign_proc : process(grp_apply_rotary_pos_emb_fu_963_q_proj_0_address0, grp_reshape_2D_to_3D_fu_1009_v148_0_address0, ap_CS_fsm_state21, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            q_proj_0_address0 <= grp_reshape_2D_to_3D_fu_1009_v148_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            q_proj_0_address0 <= grp_apply_rotary_pos_emb_fu_963_q_proj_0_address0;
        else 
            q_proj_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    q_proj_0_ce0_assign_proc : process(grp_apply_rotary_pos_emb_fu_963_q_proj_0_ce0, grp_reshape_2D_to_3D_fu_1009_v148_0_ce0, ap_CS_fsm_state21, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            q_proj_0_ce0 <= grp_reshape_2D_to_3D_fu_1009_v148_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            q_proj_0_ce0 <= grp_apply_rotary_pos_emb_fu_963_q_proj_0_ce0;
        else 
            q_proj_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    q_proj_0_ce1_assign_proc : process(grp_apply_rotary_pos_emb_fu_963_q_proj_0_ce1, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            q_proj_0_ce1 <= grp_apply_rotary_pos_emb_fu_963_q_proj_0_ce1;
        else 
            q_proj_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    q_proj_0_we0_assign_proc : process(grp_reshape_2D_to_3D_fu_1009_v148_0_we0, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            q_proj_0_we0 <= grp_reshape_2D_to_3D_fu_1009_v148_0_we0;
        else 
            q_proj_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    q_proj_re_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state12, grp_linear_forward_no_mu_fu_844_v83_address0, grp_reshape_2D_to_3D_fu_1009_v147_address0, ap_CS_fsm_state14, zext_ln503_fu_1081_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            q_proj_re_address0 <= zext_ln503_fu_1081_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            q_proj_re_address0 <= grp_reshape_2D_to_3D_fu_1009_v147_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            q_proj_re_address0 <= grp_linear_forward_no_mu_fu_844_v83_address0;
        else 
            q_proj_re_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    q_proj_re_ce0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state12, grp_linear_forward_no_mu_fu_844_v83_ce0, grp_reshape_2D_to_3D_fu_1009_v147_ce0, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            q_proj_re_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            q_proj_re_ce0 <= grp_reshape_2D_to_3D_fu_1009_v147_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            q_proj_re_ce0 <= grp_linear_forward_no_mu_fu_844_v83_ce0;
        else 
            q_proj_re_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    q_proj_re_d0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state12, grp_linear_forward_no_mu_fu_844_v83_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            q_proj_re_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            q_proj_re_d0 <= grp_linear_forward_no_mu_fu_844_v83_d0;
        else 
            q_proj_re_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    q_proj_re_we0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state12, grp_linear_forward_no_mu_fu_844_v83_we0, icmp_ln502_fu_1069_p2)
    begin
        if (((icmp_ln502_fu_1069_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            q_proj_re_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            q_proj_re_we0 <= grp_linear_forward_no_mu_fu_844_v83_we0;
        else 
            q_proj_re_we0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_final_outp_1_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_844_v79_1_0_2_ce0, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            quantized_final_outp_1_ce0 <= grp_linear_forward_no_mu_fu_844_v79_1_0_2_ce0;
        else 
            quantized_final_outp_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_final_outp_2_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_844_v79_1_0_1_ce0, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            quantized_final_outp_2_ce0 <= grp_linear_forward_no_mu_fu_844_v79_1_0_1_ce0;
        else 
            quantized_final_outp_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_final_outp_3_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_844_v79_1_0_0_ce0, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            quantized_final_outp_3_ce0 <= grp_linear_forward_no_mu_fu_844_v79_1_0_0_ce0;
        else 
            quantized_final_outp_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_final_outp_4_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_844_v79_0_0_3_ce0, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            quantized_final_outp_4_ce0 <= grp_linear_forward_no_mu_fu_844_v79_0_0_3_ce0;
        else 
            quantized_final_outp_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_final_outp_5_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_844_v79_0_0_2_ce0, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            quantized_final_outp_5_ce0 <= grp_linear_forward_no_mu_fu_844_v79_0_0_2_ce0;
        else 
            quantized_final_outp_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_final_outp_6_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_844_v79_0_0_1_ce0, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            quantized_final_outp_6_ce0 <= grp_linear_forward_no_mu_fu_844_v79_0_0_1_ce0;
        else 
            quantized_final_outp_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_final_outp_7_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_844_v79_0_0_0_ce0, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            quantized_final_outp_7_ce0 <= grp_linear_forward_no_mu_fu_844_v79_0_0_0_ce0;
        else 
            quantized_final_outp_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_final_outp_8_ce0_assign_proc : process(ap_CS_fsm_state75, grp_quantize_activation_fu_955_v24_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            quantized_final_outp_8_ce0 <= grp_quantize_activation_fu_955_v24_0_ce0;
        else 
            quantized_final_outp_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_final_outp_8_we0_assign_proc : process(ap_CS_fsm_state75, grp_quantize_activation_fu_955_v24_0_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            quantized_final_outp_8_we0 <= grp_quantize_activation_fu_955_v24_0_we0;
        else 
            quantized_final_outp_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_final_outp_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_844_v79_1_0_3_ce0, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            quantized_final_outp_ce0 <= grp_linear_forward_no_mu_fu_844_v79_1_0_3_ce0;
        else 
            quantized_final_outp_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_hidden_sta_1_address0_assign_proc : process(ap_CS_fsm_state12, grp_linear_forward_no_mu_fu_844_v79_1_0_2_address0, grp_linear_forward_no_mu_fu_873_v79_1_0_2_address0, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            quantized_hidden_sta_1_address0 <= grp_linear_forward_no_mu_fu_873_v79_1_0_2_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            quantized_hidden_sta_1_address0 <= grp_linear_forward_no_mu_fu_844_v79_1_0_2_address0;
        else 
            quantized_hidden_sta_1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    quantized_hidden_sta_1_ce0_assign_proc : process(ap_CS_fsm_state12, grp_linear_forward_no_mu_fu_844_v79_1_0_2_ce0, grp_linear_forward_no_mu_fu_873_v79_1_0_2_ce0, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            quantized_hidden_sta_1_ce0 <= grp_linear_forward_no_mu_fu_873_v79_1_0_2_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            quantized_hidden_sta_1_ce0 <= grp_linear_forward_no_mu_fu_844_v79_1_0_2_ce0;
        else 
            quantized_hidden_sta_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_hidden_sta_2_address0_assign_proc : process(ap_CS_fsm_state12, grp_linear_forward_no_mu_fu_844_v79_1_0_1_address0, grp_linear_forward_no_mu_fu_873_v79_1_0_1_address0, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            quantized_hidden_sta_2_address0 <= grp_linear_forward_no_mu_fu_873_v79_1_0_1_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            quantized_hidden_sta_2_address0 <= grp_linear_forward_no_mu_fu_844_v79_1_0_1_address0;
        else 
            quantized_hidden_sta_2_address0 <= "XXXXXXXX";
        end if; 
    end process;


    quantized_hidden_sta_2_ce0_assign_proc : process(ap_CS_fsm_state12, grp_linear_forward_no_mu_fu_844_v79_1_0_1_ce0, grp_linear_forward_no_mu_fu_873_v79_1_0_1_ce0, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            quantized_hidden_sta_2_ce0 <= grp_linear_forward_no_mu_fu_873_v79_1_0_1_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            quantized_hidden_sta_2_ce0 <= grp_linear_forward_no_mu_fu_844_v79_1_0_1_ce0;
        else 
            quantized_hidden_sta_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_hidden_sta_3_address0_assign_proc : process(ap_CS_fsm_state12, grp_linear_forward_no_mu_fu_844_v79_1_0_0_address0, grp_linear_forward_no_mu_fu_873_v79_1_0_0_address0, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            quantized_hidden_sta_3_address0 <= grp_linear_forward_no_mu_fu_873_v79_1_0_0_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            quantized_hidden_sta_3_address0 <= grp_linear_forward_no_mu_fu_844_v79_1_0_0_address0;
        else 
            quantized_hidden_sta_3_address0 <= "XXXXXXXX";
        end if; 
    end process;


    quantized_hidden_sta_3_ce0_assign_proc : process(ap_CS_fsm_state12, grp_linear_forward_no_mu_fu_844_v79_1_0_0_ce0, grp_linear_forward_no_mu_fu_873_v79_1_0_0_ce0, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            quantized_hidden_sta_3_ce0 <= grp_linear_forward_no_mu_fu_873_v79_1_0_0_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            quantized_hidden_sta_3_ce0 <= grp_linear_forward_no_mu_fu_844_v79_1_0_0_ce0;
        else 
            quantized_hidden_sta_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_hidden_sta_4_address0_assign_proc : process(ap_CS_fsm_state12, grp_linear_forward_no_mu_fu_844_v79_0_0_3_address0, grp_linear_forward_no_mu_fu_873_v79_0_0_3_address0, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            quantized_hidden_sta_4_address0 <= grp_linear_forward_no_mu_fu_873_v79_0_0_3_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            quantized_hidden_sta_4_address0 <= grp_linear_forward_no_mu_fu_844_v79_0_0_3_address0;
        else 
            quantized_hidden_sta_4_address0 <= "XXXXXXXX";
        end if; 
    end process;


    quantized_hidden_sta_4_ce0_assign_proc : process(ap_CS_fsm_state12, grp_linear_forward_no_mu_fu_844_v79_0_0_3_ce0, grp_linear_forward_no_mu_fu_873_v79_0_0_3_ce0, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            quantized_hidden_sta_4_ce0 <= grp_linear_forward_no_mu_fu_873_v79_0_0_3_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            quantized_hidden_sta_4_ce0 <= grp_linear_forward_no_mu_fu_844_v79_0_0_3_ce0;
        else 
            quantized_hidden_sta_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_hidden_sta_5_address0_assign_proc : process(ap_CS_fsm_state12, grp_linear_forward_no_mu_fu_844_v79_0_0_2_address0, grp_linear_forward_no_mu_fu_873_v79_0_0_2_address0, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            quantized_hidden_sta_5_address0 <= grp_linear_forward_no_mu_fu_873_v79_0_0_2_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            quantized_hidden_sta_5_address0 <= grp_linear_forward_no_mu_fu_844_v79_0_0_2_address0;
        else 
            quantized_hidden_sta_5_address0 <= "XXXXXXXX";
        end if; 
    end process;


    quantized_hidden_sta_5_ce0_assign_proc : process(ap_CS_fsm_state12, grp_linear_forward_no_mu_fu_844_v79_0_0_2_ce0, grp_linear_forward_no_mu_fu_873_v79_0_0_2_ce0, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            quantized_hidden_sta_5_ce0 <= grp_linear_forward_no_mu_fu_873_v79_0_0_2_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            quantized_hidden_sta_5_ce0 <= grp_linear_forward_no_mu_fu_844_v79_0_0_2_ce0;
        else 
            quantized_hidden_sta_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_hidden_sta_6_address0_assign_proc : process(ap_CS_fsm_state12, grp_linear_forward_no_mu_fu_844_v79_0_0_1_address0, grp_linear_forward_no_mu_fu_873_v79_0_0_1_address0, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            quantized_hidden_sta_6_address0 <= grp_linear_forward_no_mu_fu_873_v79_0_0_1_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            quantized_hidden_sta_6_address0 <= grp_linear_forward_no_mu_fu_844_v79_0_0_1_address0;
        else 
            quantized_hidden_sta_6_address0 <= "XXXXXXXX";
        end if; 
    end process;


    quantized_hidden_sta_6_ce0_assign_proc : process(ap_CS_fsm_state12, grp_linear_forward_no_mu_fu_844_v79_0_0_1_ce0, grp_linear_forward_no_mu_fu_873_v79_0_0_1_ce0, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            quantized_hidden_sta_6_ce0 <= grp_linear_forward_no_mu_fu_873_v79_0_0_1_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            quantized_hidden_sta_6_ce0 <= grp_linear_forward_no_mu_fu_844_v79_0_0_1_ce0;
        else 
            quantized_hidden_sta_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_hidden_sta_7_address0_assign_proc : process(ap_CS_fsm_state12, grp_linear_forward_no_mu_fu_844_v79_0_0_0_address0, grp_linear_forward_no_mu_fu_873_v79_0_0_0_address0, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            quantized_hidden_sta_7_address0 <= grp_linear_forward_no_mu_fu_873_v79_0_0_0_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            quantized_hidden_sta_7_address0 <= grp_linear_forward_no_mu_fu_844_v79_0_0_0_address0;
        else 
            quantized_hidden_sta_7_address0 <= "XXXXXXXX";
        end if; 
    end process;


    quantized_hidden_sta_7_ce0_assign_proc : process(ap_CS_fsm_state12, grp_linear_forward_no_mu_fu_844_v79_0_0_0_ce0, grp_linear_forward_no_mu_fu_873_v79_0_0_0_ce0, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            quantized_hidden_sta_7_ce0 <= grp_linear_forward_no_mu_fu_873_v79_0_0_0_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            quantized_hidden_sta_7_ce0 <= grp_linear_forward_no_mu_fu_844_v79_0_0_0_ce0;
        else 
            quantized_hidden_sta_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_hidden_sta_8_ce0_assign_proc : process(ap_CS_fsm_state5, grp_quantize_activation_fu_955_v24_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            quantized_hidden_sta_8_ce0 <= grp_quantize_activation_fu_955_v24_0_ce0;
        else 
            quantized_hidden_sta_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_hidden_sta_8_we0_assign_proc : process(ap_CS_fsm_state5, grp_quantize_activation_fu_955_v24_0_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            quantized_hidden_sta_8_we0 <= grp_quantize_activation_fu_955_v24_0_we0;
        else 
            quantized_hidden_sta_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_hidden_sta_address0_assign_proc : process(ap_CS_fsm_state12, grp_linear_forward_no_mu_fu_844_v79_1_0_3_address0, grp_linear_forward_no_mu_fu_873_v79_1_0_3_address0, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            quantized_hidden_sta_address0 <= grp_linear_forward_no_mu_fu_873_v79_1_0_3_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            quantized_hidden_sta_address0 <= grp_linear_forward_no_mu_fu_844_v79_1_0_3_address0;
        else 
            quantized_hidden_sta_address0 <= "XXXXXXXX";
        end if; 
    end process;


    quantized_hidden_sta_ce0_assign_proc : process(ap_CS_fsm_state12, grp_linear_forward_no_mu_fu_844_v79_1_0_3_ce0, grp_linear_forward_no_mu_fu_873_v79_1_0_3_ce0, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            quantized_hidden_sta_ce0 <= grp_linear_forward_no_mu_fu_873_v79_1_0_3_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            quantized_hidden_sta_ce0 <= grp_linear_forward_no_mu_fu_844_v79_1_0_3_ce0;
        else 
            quantized_hidden_sta_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rms_attn_output_0_address0_assign_proc : process(ap_CS_fsm_state75, ap_CS_fsm_state72, grp_rms_norm_fu_931_v3_0_address0, grp_quantize_activation_fu_955_v22_0_address0, icmp_ln697_fu_3021_p2, ap_CS_fsm_state73, zext_ln698_fu_3033_p1)
    begin
        if (((icmp_ln697_fu_3021_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            rms_attn_output_0_address0 <= zext_ln698_fu_3033_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            rms_attn_output_0_address0 <= grp_quantize_activation_fu_955_v22_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            rms_attn_output_0_address0 <= grp_rms_norm_fu_931_v3_0_address0;
        else 
            rms_attn_output_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    rms_attn_output_0_ce0_assign_proc : process(ap_CS_fsm_state75, ap_CS_fsm_state72, grp_rms_norm_fu_931_v3_0_ce0, grp_quantize_activation_fu_955_v22_0_ce0, icmp_ln697_fu_3021_p2, ap_CS_fsm_state73)
    begin
        if (((icmp_ln697_fu_3021_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            rms_attn_output_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            rms_attn_output_0_ce0 <= grp_quantize_activation_fu_955_v22_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            rms_attn_output_0_ce0 <= grp_rms_norm_fu_931_v3_0_ce0;
        else 
            rms_attn_output_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rms_attn_output_0_d0_assign_proc : process(ap_CS_fsm_state72, grp_rms_norm_fu_931_v3_0_d0, icmp_ln697_fu_3021_p2, ap_CS_fsm_state73)
    begin
        if (((icmp_ln697_fu_3021_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            rms_attn_output_0_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            rms_attn_output_0_d0 <= grp_rms_norm_fu_931_v3_0_d0;
        else 
            rms_attn_output_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    rms_attn_output_0_we0_assign_proc : process(ap_CS_fsm_state72, grp_rms_norm_fu_931_v3_0_we0, icmp_ln697_fu_3021_p2, ap_CS_fsm_state73)
    begin
        if (((icmp_ln697_fu_3021_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            rms_attn_output_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            rms_attn_output_0_we0 <= grp_rms_norm_fu_931_v3_0_we0;
        else 
            rms_attn_output_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rms_hidden_states_0_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state2, grp_rms_norm_fu_931_v3_0_address0, grp_quantize_activation_fu_955_v22_0_address0, icmp_ln480_fu_1052_p2, ap_CS_fsm_state3, zext_ln481_fu_1064_p1)
    begin
        if (((icmp_ln480_fu_1052_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rms_hidden_states_0_address0 <= zext_ln481_fu_1064_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            rms_hidden_states_0_address0 <= grp_quantize_activation_fu_955_v22_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rms_hidden_states_0_address0 <= grp_rms_norm_fu_931_v3_0_address0;
        else 
            rms_hidden_states_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    rms_hidden_states_0_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state2, grp_rms_norm_fu_931_v3_0_ce0, grp_quantize_activation_fu_955_v22_0_ce0, icmp_ln480_fu_1052_p2, ap_CS_fsm_state3)
    begin
        if (((icmp_ln480_fu_1052_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rms_hidden_states_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            rms_hidden_states_0_ce0 <= grp_quantize_activation_fu_955_v22_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rms_hidden_states_0_ce0 <= grp_rms_norm_fu_931_v3_0_ce0;
        else 
            rms_hidden_states_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rms_hidden_states_0_d0_assign_proc : process(ap_CS_fsm_state2, grp_rms_norm_fu_931_v3_0_d0, icmp_ln480_fu_1052_p2, ap_CS_fsm_state3)
    begin
        if (((icmp_ln480_fu_1052_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rms_hidden_states_0_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rms_hidden_states_0_d0 <= grp_rms_norm_fu_931_v3_0_d0;
        else 
            rms_hidden_states_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    rms_hidden_states_0_we0_assign_proc : process(ap_CS_fsm_state2, grp_rms_norm_fu_931_v3_0_we0, icmp_ln480_fu_1052_p2, ap_CS_fsm_state3)
    begin
        if (((icmp_ln480_fu_1052_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rms_hidden_states_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rms_hidden_states_0_we0 <= grp_rms_norm_fu_931_v3_0_we0;
        else 
            rms_hidden_states_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln588_1_fu_1670_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_57_fu_1662_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln588_2_fu_1829_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_70_fu_1821_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln588_3_fu_2106_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_73_fu_2098_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln588_fu_1275_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_52_fu_1267_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln603_11_fu_1902_p3 <= 
        shl_ln604_2_fu_1837_p2 when (and_ln603_2_fu_1896_p2(0) = '1') else 
        trunc_ln586_2_fu_1814_p1;
    select_ln603_12_fu_1916_p3 <= 
        select_ln588_2_fu_1829_p3 when (and_ln585_5_fu_1873_p2(0) = '1') else 
        trunc_ln583_2_reg_3225;
    select_ln603_13_fu_1929_p3 <= 
        select_ln603_11_fu_1902_p3 when (or_ln603_8_fu_1910_p2(0) = '1') else 
        select_ln603_12_fu_1916_p3;
    select_ln603_15_fu_2179_p3 <= 
        shl_ln604_3_fu_2114_p2 when (and_ln603_3_fu_2173_p2(0) = '1') else 
        trunc_ln586_3_fu_2091_p1;
    select_ln603_16_fu_2193_p3 <= 
        select_ln588_3_fu_2106_p3 when (and_ln585_7_fu_2150_p2(0) = '1') else 
        trunc_ln583_3_reg_3275;
    select_ln603_17_fu_2206_p3 <= 
        select_ln603_15_fu_2179_p3 when (or_ln603_11_fu_2187_p2(0) = '1') else 
        select_ln603_16_fu_2193_p3;
    select_ln603_4_fu_1362_p3 <= 
        select_ln588_fu_1275_p3 when (and_ln585_fu_1319_p2(0) = '1') else 
        trunc_ln583_reg_3140;
    select_ln603_5_fu_1375_p3 <= 
        select_ln603_fu_1348_p3 when (or_ln603_fu_1356_p2(0) = '1') else 
        select_ln603_4_fu_1362_p3;
    select_ln603_7_fu_1743_p3 <= 
        shl_ln604_1_fu_1678_p2 when (and_ln603_1_fu_1737_p2(0) = '1') else 
        trunc_ln586_1_fu_1655_p1;
    select_ln603_8_fu_1757_p3 <= 
        select_ln588_1_fu_1670_p3 when (and_ln585_3_fu_1714_p2(0) = '1') else 
        trunc_ln583_1_reg_3185;
    select_ln603_9_fu_1770_p3 <= 
        select_ln603_7_fu_1743_p3 when (or_ln603_5_fu_1751_p2(0) = '1') else 
        select_ln603_8_fu_1757_p3;
    select_ln603_fu_1348_p3 <= 
        shl_ln604_fu_1283_p2 when (and_ln603_fu_1342_p2(0) = '1') else 
        trunc_ln586_fu_1260_p1;
        sext_ln581_1_fu_1633_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_1_reg_3173),32));

        sext_ln581_2_fu_1792_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_2_reg_3213),32));

        sext_ln581_3_fu_2069_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_3_reg_3263),32));

        sext_ln581_fu_1238_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_reg_3128),32));

        sext_ln585_fu_2287_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln585_fu_2282_p2),64));

        sext_ln593_fu_2351_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln593_fu_2346_p2),64));

        sext_ln602_fu_2398_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln602_fu_2392_p2),10));

        sext_ln610_fu_2517_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln610_fu_2511_p2),10));

        sext_ln629_fu_2653_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln629_fu_2648_p2),64));

        sext_ln639_fu_2717_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln639_fu_2712_p2),64));

        sext_ln657_fu_2760_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln657_fu_2754_p2),64));

        sext_ln667_fu_2824_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln667_fu_2819_p2),64));

        sext_ln676_fu_2888_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln676_fu_2883_p2),64));

        sext_ln690_fu_3003_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln690_fu_2998_p2),64));

        sext_ln691_fu_3013_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln691_reg_3552),32));

    sh_amt_1_fu_1487_p3 <= 
        add_ln581_1_fu_1475_p2 when (icmp_ln581_1_fu_1469_p2(0) = '1') else 
        sub_ln581_1_fu_1481_p2;
    sh_amt_2_fu_1605_p3 <= 
        add_ln581_2_fu_1593_p2 when (icmp_ln581_2_fu_1587_p2(0) = '1') else 
        sub_ln581_2_fu_1599_p2;
    sh_amt_3_fu_2041_p3 <= 
        add_ln581_3_fu_2029_p2 when (icmp_ln581_3_fu_2023_p2(0) = '1') else 
        sub_ln581_3_fu_2035_p2;
    sh_amt_fu_1210_p3 <= 
        add_ln581_fu_1198_p2 when (icmp_ln581_fu_1192_p2(0) = '1') else 
        sub_ln581_fu_1204_p2;
    shl_ln604_1_fu_1678_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_1_reg_3185),to_integer(unsigned('0' & sext_ln581_1_fu_1633_p1(31-1 downto 0)))));
    shl_ln604_2_fu_1837_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_2_reg_3225),to_integer(unsigned('0' & sext_ln581_2_fu_1792_p1(31-1 downto 0)))));
    shl_ln604_3_fu_2114_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_3_reg_3275),to_integer(unsigned('0' & sext_ln581_3_fu_2069_p1(31-1 downto 0)))));
    shl_ln604_fu_1283_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_reg_3140),to_integer(unsigned('0' & sext_ln581_fu_1238_p1(31-1 downto 0)))));
    shl_ln691_1_fu_2964_p3 <= (trunc_ln691_fu_2948_p1 & ap_const_lv5_0);
    shl_ln_fu_2952_p3 <= (trunc_ln691_fu_2948_p1 & ap_const_lv7_0);

    softmax_attn_weights_address0_assign_proc : process(ap_CS_fsm_state63, grp_softmax_fu_911_v226_0_address0, grp_GEMM_3D_float2_fu_985_v252_0_address0, ap_CS_fsm_state64, ap_CS_fsm_state67, sext_ln667_fu_2824_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            softmax_attn_weights_address0 <= sext_ln667_fu_2824_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            softmax_attn_weights_address0 <= grp_GEMM_3D_float2_fu_985_v252_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            softmax_attn_weights_address0 <= grp_softmax_fu_911_v226_0_address0;
        else 
            softmax_attn_weights_address0 <= "XXXXXXX";
        end if; 
    end process;


    softmax_attn_weights_ce0_assign_proc : process(ap_CS_fsm_state63, grp_softmax_fu_911_v226_0_ce0, grp_GEMM_3D_float2_fu_985_v252_0_ce0, ap_CS_fsm_state64, ap_CS_fsm_state67)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            softmax_attn_weights_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            softmax_attn_weights_ce0 <= grp_GEMM_3D_float2_fu_985_v252_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            softmax_attn_weights_ce0 <= grp_softmax_fu_911_v226_0_ce0;
        else 
            softmax_attn_weights_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    softmax_attn_weights_d0_assign_proc : process(ap_CS_fsm_state63, grp_softmax_fu_911_v226_0_d0, ap_CS_fsm_state64)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            softmax_attn_weights_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            softmax_attn_weights_d0 <= grp_softmax_fu_911_v226_0_d0;
        else 
            softmax_attn_weights_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    softmax_attn_weights_we0_assign_proc : process(ap_CS_fsm_state63, grp_softmax_fu_911_v226_0_we0, icmp_ln666_fu_2803_p2, ap_CS_fsm_state64)
    begin
        if (((icmp_ln666_fu_2803_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state63))) then 
            softmax_attn_weights_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            softmax_attn_weights_we0 <= grp_softmax_fu_911_v226_0_we0;
        else 
            softmax_attn_weights_we0 <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln581_1_fu_1481_p2 <= std_logic_vector(unsigned(ap_const_lv12_14) - unsigned(F2_1_fu_1463_p2));
    sub_ln581_2_fu_1599_p2 <= std_logic_vector(unsigned(ap_const_lv12_14) - unsigned(F2_2_fu_1581_p2));
    sub_ln581_3_fu_2035_p2 <= std_logic_vector(unsigned(ap_const_lv12_14) - unsigned(F2_3_fu_2017_p2));
    sub_ln581_fu_1204_p2 <= std_logic_vector(unsigned(ap_const_lv12_14) - unsigned(F2_fu_1186_p2));
    sub_ln585_fu_2260_p2 <= std_logic_vector(unsigned(tmp_28_fu_2240_p3) - unsigned(zext_ln585_fu_2256_p1));
    sub_ln593_fu_2324_p2 <= std_logic_vector(unsigned(tmp_30_fu_2304_p3) - unsigned(zext_ln593_fu_2320_p1));
    sub_ln602_1_fu_2443_p2 <= std_logic_vector(unsigned(p_shl8_cast_fu_2427_p3) - unsigned(p_shl9_cast_fu_2435_p3));
    sub_ln602_fu_2392_p2 <= std_logic_vector(unsigned(zext_ln602_fu_2376_p1) - unsigned(zext_ln602_1_fu_2388_p1));
    sub_ln610_1_fu_2562_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_2546_p3) - unsigned(p_shl2_cast_fu_2554_p3));
    sub_ln610_fu_2511_p2 <= std_logic_vector(unsigned(zext_ln610_fu_2495_p1) - unsigned(zext_ln610_1_fu_2507_p1));
    sub_ln629_fu_2626_p2 <= std_logic_vector(unsigned(tmp_36_fu_2606_p3) - unsigned(zext_ln629_fu_2622_p1));
    sub_ln639_fu_2690_p2 <= std_logic_vector(unsigned(tmp_38_fu_2670_p3) - unsigned(zext_ln639_fu_2686_p1));
    sub_ln657_fu_2754_p2 <= std_logic_vector(unsigned(tmp_40_fu_2734_p3) - unsigned(zext_ln657_fu_2750_p1));
    sub_ln667_fu_2797_p2 <= std_logic_vector(unsigned(tmp_42_fu_2777_p3) - unsigned(zext_ln667_fu_2793_p1));
    sub_ln676_fu_2861_p2 <= std_logic_vector(unsigned(tmp_45_fu_2841_p3) - unsigned(zext_ln676_fu_2857_p1));
    sub_ln690_fu_2942_p2 <= std_logic_vector(unsigned(tmp_47_fu_2922_p3) - unsigned(zext_ln690_fu_2938_p1));
    sub_ln691_fu_2976_p2 <= std_logic_vector(unsigned(zext_ln691_1_fu_2960_p1) - unsigned(zext_ln691_2_fu_2972_p1));
    tmp_28_fu_2240_p3 <= (v334_0_reg_580 & ap_const_lv7_0);
    tmp_29_fu_2248_p3 <= (v334_0_reg_580 & ap_const_lv5_0);
    tmp_30_fu_2304_p3 <= (v338_0_reg_602 & ap_const_lv7_0);
    tmp_31_fu_2312_p3 <= (v338_0_reg_602 & ap_const_lv5_0);
    tmp_32_fu_2368_p3 <= (v342_0_reg_624 & ap_const_lv3_0);
    tmp_33_fu_2380_p3 <= (v342_0_reg_624 & ap_const_lv1_0);
    tmp_34_fu_2487_p3 <= (v346_0_reg_657 & ap_const_lv3_0);
    tmp_35_fu_2499_p3 <= (v346_0_reg_657 & ap_const_lv1_0);
    tmp_36_fu_2606_p3 <= (v354_0_reg_690 & ap_const_lv3_0);
    tmp_37_fu_2614_p3 <= (v354_0_reg_690 & ap_const_lv1_0);
    tmp_38_fu_2670_p3 <= (i11_0_reg_712 & ap_const_lv3_0);
    tmp_39_fu_2678_p3 <= (i11_0_reg_712 & ap_const_lv1_0);
    tmp_40_fu_2734_p3 <= (h6_0_reg_734 & ap_const_lv3_0);
    tmp_41_fu_2742_p3 <= (h6_0_reg_734 & ap_const_lv1_0);
    tmp_42_fu_2777_p3 <= (v374_0_reg_745 & ap_const_lv3_0);
    tmp_44_fu_2785_p3 <= (v374_0_reg_745 & ap_const_lv1_0);
    tmp_45_fu_2841_p3 <= (v378_0_reg_767 & ap_const_lv7_0);
    tmp_46_fu_2849_p3 <= (v378_0_reg_767 & ap_const_lv5_0);
    tmp_47_fu_2922_p3 <= (h7_0_0_reg_800 & ap_const_lv7_0);
    tmp_48_fu_2930_p3 <= (h7_0_0_reg_800 & ap_const_lv5_0);
    tmp_52_fu_1267_p3 <= bitcast_ln696_fu_1264_p1(31 downto 31);
    tmp_57_fu_1662_p3 <= bitcast_ln696_3_fu_1659_p1(31 downto 31);
    tmp_70_fu_1821_p3 <= bitcast_ln696_5_fu_1818_p1(31 downto 31);
    tmp_73_fu_2098_p3 <= bitcast_ln696_7_fu_2095_p1(31 downto 31);
    tmp_8_fu_1549_p3 <= (ap_const_lv1_1 & trunc_ln565_2_fu_1545_p1);
    tmp_9_fu_1985_p3 <= (ap_const_lv1_1 & trunc_ln565_3_fu_1981_p1);
    tmp_fu_1154_p3 <= (ap_const_lv1_1 & trunc_ln565_fu_1150_p1);
    tmp_s_fu_1431_p3 <= (ap_const_lv1_1 & trunc_ln565_1_fu_1427_p1);
    trunc_ln556_1_fu_1401_p1 <= ireg_V_1_fu_1397_p1(63 - 1 downto 0);
    trunc_ln556_2_fu_1519_p1 <= ireg_V_2_fu_1515_p1(63 - 1 downto 0);
    trunc_ln556_3_fu_1955_p1 <= ireg_V_3_fu_1951_p1(63 - 1 downto 0);
    trunc_ln556_fu_1124_p1 <= ireg_V_fu_1120_p1(63 - 1 downto 0);
    trunc_ln565_1_fu_1427_p1 <= ireg_V_1_fu_1397_p1(52 - 1 downto 0);
    trunc_ln565_2_fu_1545_p1 <= ireg_V_2_fu_1515_p1(52 - 1 downto 0);
    trunc_ln565_3_fu_1981_p1 <= ireg_V_3_fu_1951_p1(52 - 1 downto 0);
    trunc_ln565_fu_1150_p1 <= ireg_V_fu_1120_p1(52 - 1 downto 0);
    trunc_ln583_1_fu_1501_p1 <= man_V_5_fu_1449_p3(32 - 1 downto 0);
    trunc_ln583_2_fu_1619_p1 <= man_V_8_fu_1567_p3(32 - 1 downto 0);
    trunc_ln583_3_fu_2055_p1 <= man_V_11_fu_2003_p3(32 - 1 downto 0);
    trunc_ln583_fu_1224_p1 <= man_V_2_fu_1172_p3(32 - 1 downto 0);
    trunc_ln586_1_fu_1655_p1 <= ashr_ln586_1_fu_1650_p2(32 - 1 downto 0);
    trunc_ln586_2_fu_1814_p1 <= ashr_ln586_2_fu_1809_p2(32 - 1 downto 0);
    trunc_ln586_3_fu_2091_p1 <= ashr_ln586_3_fu_2086_p2(32 - 1 downto 0);
    trunc_ln586_fu_1260_p1 <= ashr_ln586_fu_1255_p2(32 - 1 downto 0);
    trunc_ln602_fu_2423_p1 <= add_ln602_fu_2418_p2(8 - 1 downto 0);
    trunc_ln610_fu_2542_p1 <= add_ln610_fu_2537_p2(8 - 1 downto 0);
    trunc_ln691_fu_2948_p1 <= h7_0_0_reg_800(4 - 1 downto 0);

    updated_k_cache_address0_assign_proc : process(ap_CS_fsm_state24, grp_cache_update_fu_992_v195_address0, grp_transpose_last_two_d_fu_1002_v204_address0, ap_CS_fsm_state30, ap_CS_fsm_state28, zext_ln602_4_fu_2470_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            updated_k_cache_address0 <= zext_ln602_4_fu_2470_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            updated_k_cache_address0 <= grp_transpose_last_two_d_fu_1002_v204_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            updated_k_cache_address0 <= grp_cache_update_fu_992_v195_address0;
        else 
            updated_k_cache_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    updated_k_cache_ce0_assign_proc : process(ap_CS_fsm_state24, grp_cache_update_fu_992_v195_ce0, grp_transpose_last_two_d_fu_1002_v204_ce0, ap_CS_fsm_state30, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            updated_k_cache_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            updated_k_cache_ce0 <= grp_transpose_last_two_d_fu_1002_v204_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            updated_k_cache_ce0 <= grp_cache_update_fu_992_v195_ce0;
        else 
            updated_k_cache_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    updated_k_cache_d0_assign_proc : process(ap_CS_fsm_state24, grp_cache_update_fu_992_v195_d0, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            updated_k_cache_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            updated_k_cache_d0 <= grp_cache_update_fu_992_v195_d0;
        else 
            updated_k_cache_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    updated_k_cache_we0_assign_proc : process(ap_CS_fsm_state24, grp_cache_update_fu_992_v195_we0, icmp_ln601_fu_2449_p2, ap_CS_fsm_state28)
    begin
        if (((icmp_ln601_fu_2449_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            updated_k_cache_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            updated_k_cache_we0 <= grp_cache_update_fu_992_v195_we0;
        else 
            updated_k_cache_we0 <= ap_const_logic_0;
        end if; 
    end process;


    updated_v_cache_address0_assign_proc : process(ap_CS_fsm_state27, grp_GEMM_3D_float2_fu_985_v253_address0, grp_cache_update_fu_992_v195_address0, ap_CS_fsm_state30, ap_CS_fsm_state67, zext_ln610_4_fu_2589_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            updated_v_cache_address0 <= zext_ln610_4_fu_2589_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            updated_v_cache_address0 <= grp_cache_update_fu_992_v195_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            updated_v_cache_address0 <= grp_GEMM_3D_float2_fu_985_v253_address0;
        else 
            updated_v_cache_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    updated_v_cache_ce0_assign_proc : process(ap_CS_fsm_state27, grp_GEMM_3D_float2_fu_985_v253_ce0, grp_cache_update_fu_992_v195_ce0, ap_CS_fsm_state30, ap_CS_fsm_state67)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            updated_v_cache_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            updated_v_cache_ce0 <= grp_cache_update_fu_992_v195_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            updated_v_cache_ce0 <= grp_GEMM_3D_float2_fu_985_v253_ce0;
        else 
            updated_v_cache_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    updated_v_cache_d0_assign_proc : process(ap_CS_fsm_state27, grp_cache_update_fu_992_v195_d0, ap_CS_fsm_state30)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            updated_v_cache_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            updated_v_cache_d0 <= grp_cache_update_fu_992_v195_d0;
        else 
            updated_v_cache_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    updated_v_cache_we0_assign_proc : process(ap_CS_fsm_state27, grp_cache_update_fu_992_v195_we0, icmp_ln609_fu_2568_p2, ap_CS_fsm_state30)
    begin
        if (((icmp_ln609_fu_2568_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            updated_v_cache_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            updated_v_cache_we0 <= grp_cache_update_fu_992_v195_we0;
        else 
            updated_v_cache_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v264_address0 <= grp_rms_norm_fu_931_v0_address0;

    v264_ce0_assign_proc : process(grp_rms_norm_fu_931_v0_ce0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            v264_ce0 <= grp_rms_norm_fu_931_v0_ce0;
        else 
            v264_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v265_0_address0 <= grp_linear_forward_no_mu_fu_844_v81_0_address0;

    v265_0_ce0_assign_proc : process(ap_CS_fsm_state12, grp_linear_forward_no_mu_fu_844_v81_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            v265_0_ce0 <= grp_linear_forward_no_mu_fu_844_v81_0_ce0;
        else 
            v265_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v265_1_address0 <= grp_linear_forward_no_mu_fu_844_v81_1_address0;

    v265_1_ce0_assign_proc : process(ap_CS_fsm_state12, grp_linear_forward_no_mu_fu_844_v81_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            v265_1_ce0 <= grp_linear_forward_no_mu_fu_844_v81_1_ce0;
        else 
            v265_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v267_0_address0 <= grp_linear_forward_no_mu_fu_844_v81_0_address0;

    v267_0_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_844_v81_0_ce0, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            v267_0_ce0 <= grp_linear_forward_no_mu_fu_844_v81_0_ce0;
        else 
            v267_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v267_1_address0 <= grp_linear_forward_no_mu_fu_844_v81_1_address0;

    v267_1_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_844_v81_1_ce0, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            v267_1_ce0 <= grp_linear_forward_no_mu_fu_844_v81_1_ce0;
        else 
            v267_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v269_0_address0 <= grp_linear_forward_no_mu_fu_873_v81_0_address0;
    v269_0_ce0 <= grp_linear_forward_no_mu_fu_873_v81_0_ce0;
    v269_1_address0 <= grp_linear_forward_no_mu_fu_873_v81_1_address0;
    v269_1_ce0 <= grp_linear_forward_no_mu_fu_873_v81_1_ce0;
    v271_0_address0 <= grp_linear_forward_no_mu_fu_844_v81_0_address0;

    v271_0_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_844_v81_0_ce0, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            v271_0_ce0 <= grp_linear_forward_no_mu_fu_844_v81_0_ce0;
        else 
            v271_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v271_1_address0 <= grp_linear_forward_no_mu_fu_844_v81_1_address0;

    v271_1_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_844_v81_1_ce0, ap_CS_fsm_state77)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            v271_1_ce0 <= grp_linear_forward_no_mu_fu_844_v81_1_ce0;
        else 
            v271_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v273_address0 <= grp_apply_rotary_pos_emb_fu_963_v163_address0;
    v273_ce0 <= grp_apply_rotary_pos_emb_fu_963_v163_ce0;
    v274_address0 <= grp_apply_rotary_pos_emb_fu_963_v164_address0;
    v274_ce0 <= grp_apply_rotary_pos_emb_fu_963_v164_ce0;
    v275_address0 <= grp_rms_norm_fu_931_v1_address0;

    v275_ce0_assign_proc : process(grp_rms_norm_fu_931_v1_ce0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            v275_ce0 <= grp_rms_norm_fu_931_v1_ce0;
        else 
            v275_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v276_address0 <= grp_rms_norm_fu_931_v1_address0;

    v276_ce0_assign_proc : process(grp_rms_norm_fu_931_v1_ce0, ap_CS_fsm_state73)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            v276_ce0 <= grp_rms_norm_fu_931_v1_ce0;
        else 
            v276_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v277_address0 <= grp_cache_update_fu_992_v193_address0;

    v277_ce0_assign_proc : process(grp_cache_update_fu_992_v193_ce0, ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            v277_ce0 <= grp_cache_update_fu_992_v193_ce0;
        else 
            v277_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v278_address0 <= grp_cache_update_fu_992_v193_address0;

    v278_ce0_assign_proc : process(grp_cache_update_fu_992_v193_ce0, ap_CS_fsm_state30)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            v278_ce0 <= grp_cache_update_fu_992_v193_ce0;
        else 
            v278_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v280_address0_assign_proc : process(ap_CS_fsm_state76, grp_linear_forward_no_mu_fu_844_v83_address0, icmp_ln736_fu_3038_p2, ap_CS_fsm_state77, zext_ln737_fu_3050_p1)
    begin
        if (((icmp_ln736_fu_3038_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            v280_address0 <= zext_ln737_fu_3050_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            v280_address0 <= grp_linear_forward_no_mu_fu_844_v83_address0;
        else 
            v280_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    v280_ce0_assign_proc : process(ap_CS_fsm_state76, grp_linear_forward_no_mu_fu_844_v83_ce0, icmp_ln736_fu_3038_p2, ap_CS_fsm_state77)
    begin
        if (((icmp_ln736_fu_3038_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            v280_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            v280_ce0 <= grp_linear_forward_no_mu_fu_844_v83_ce0;
        else 
            v280_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v280_d0_assign_proc : process(ap_CS_fsm_state76, grp_linear_forward_no_mu_fu_844_v83_d0, icmp_ln736_fu_3038_p2, ap_CS_fsm_state77)
    begin
        if (((icmp_ln736_fu_3038_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            v280_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            v280_d0 <= grp_linear_forward_no_mu_fu_844_v83_d0;
        else 
            v280_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    v280_we0_assign_proc : process(ap_CS_fsm_state76, grp_linear_forward_no_mu_fu_844_v83_we0, icmp_ln736_fu_3038_p2, ap_CS_fsm_state77)
    begin
        if (((icmp_ln736_fu_3038_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            v280_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            v280_we0 <= grp_linear_forward_no_mu_fu_844_v83_we0;
        else 
            v280_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v302_V_fu_1389_p3 <= 
        select_ln603_5_fu_1375_p3 when (or_ln603_4_fu_1383_p2(0) = '1') else 
        ap_const_lv32_0;
    v304_V_fu_1784_p3 <= 
        select_ln603_9_fu_1770_p3 when (or_ln603_7_fu_1778_p2(0) = '1') else 
        ap_const_lv32_0;
    v306_V_fu_1943_p3 <= 
        select_ln603_13_fu_1929_p3 when (or_ln603_10_fu_1937_p2(0) = '1') else 
        ap_const_lv32_0;
    v308_V_fu_2220_p3 <= 
        select_ln603_17_fu_2206_p3 when (or_ln603_13_fu_2214_p2(0) = '1') else 
        ap_const_lv32_0;
    v334_fu_2234_p2 <= std_logic_vector(unsigned(v334_0_reg_580) + unsigned(ap_const_lv5_1));
    v338_fu_2298_p2 <= std_logic_vector(unsigned(v338_0_reg_602) + unsigned(ap_const_lv5_1));
    v342_fu_2362_p2 <= std_logic_vector(unsigned(v342_0_reg_624) + unsigned(ap_const_lv5_1));
    v343_fu_2408_p2 <= std_logic_vector(unsigned(v343_0_reg_635) + unsigned(ap_const_lv3_1));
    v344_fu_2455_p2 <= std_logic_vector(unsigned(v344_0_reg_646) + unsigned(ap_const_lv7_1));
    v346_fu_2481_p2 <= std_logic_vector(unsigned(v346_0_reg_657) + unsigned(ap_const_lv5_1));
    v347_fu_2527_p2 <= std_logic_vector(unsigned(v347_0_reg_668) + unsigned(ap_const_lv3_1));
    v348_fu_2574_p2 <= std_logic_vector(unsigned(v348_0_reg_679) + unsigned(ap_const_lv7_1));
    v354_fu_2600_p2 <= std_logic_vector(unsigned(v354_0_reg_690) + unsigned(ap_const_lv5_1));
    v374_fu_2771_p2 <= std_logic_vector(unsigned(v374_0_reg_745) + unsigned(ap_const_lv5_1));
    v378_fu_2835_p2 <= std_logic_vector(unsigned(v378_0_reg_767) + unsigned(ap_const_lv5_1));

    v_proj_0_address0_assign_proc : process(ap_CS_fsm_state16, grp_cache_update_fu_992_v194_0_address0, grp_reshape_2D_to_3D_fu_1017_v148_0_address0, ap_CS_fsm_state30)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            v_proj_0_address0 <= grp_reshape_2D_to_3D_fu_1017_v148_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            v_proj_0_address0 <= grp_cache_update_fu_992_v194_0_address0;
        else 
            v_proj_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    v_proj_0_ce0_assign_proc : process(ap_CS_fsm_state16, grp_cache_update_fu_992_v194_0_ce0, grp_reshape_2D_to_3D_fu_1017_v148_0_ce0, ap_CS_fsm_state30)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            v_proj_0_ce0 <= grp_reshape_2D_to_3D_fu_1017_v148_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            v_proj_0_ce0 <= grp_cache_update_fu_992_v194_0_ce0;
        else 
            v_proj_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v_proj_0_we0_assign_proc : process(ap_CS_fsm_state16, grp_reshape_2D_to_3D_fu_1017_v148_0_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            v_proj_0_we0 <= grp_reshape_2D_to_3D_fu_1017_v148_0_we0;
        else 
            v_proj_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    v_proj_re_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state16, grp_linear_forward_no_mu_fu_873_v83_address0, grp_reshape_2D_to_3D_fu_1017_v147_address0, ap_CS_fsm_state14, zext_ln515_fu_1115_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            v_proj_re_address0 <= zext_ln515_fu_1115_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            v_proj_re_address0 <= grp_reshape_2D_to_3D_fu_1017_v147_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            v_proj_re_address0 <= grp_linear_forward_no_mu_fu_873_v83_address0;
        else 
            v_proj_re_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    v_proj_re_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state16, grp_linear_forward_no_mu_fu_873_v83_ce0, grp_reshape_2D_to_3D_fu_1017_v147_ce0, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            v_proj_re_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            v_proj_re_ce0 <= grp_reshape_2D_to_3D_fu_1017_v147_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            v_proj_re_ce0 <= grp_linear_forward_no_mu_fu_873_v83_ce0;
        else 
            v_proj_re_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v_proj_re_d0_assign_proc : process(ap_CS_fsm_state8, grp_linear_forward_no_mu_fu_873_v83_d0, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            v_proj_re_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            v_proj_re_d0 <= grp_linear_forward_no_mu_fu_873_v83_d0;
        else 
            v_proj_re_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    v_proj_re_we0_assign_proc : process(ap_CS_fsm_state8, grp_linear_forward_no_mu_fu_873_v83_we0, icmp_ln514_fu_1103_p2, ap_CS_fsm_state14)
    begin
        if (((icmp_ln514_fu_1103_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            v_proj_re_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            v_proj_re_we0 <= grp_linear_forward_no_mu_fu_873_v83_we0;
        else 
            v_proj_re_we0 <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln571_1_fu_1683_p2 <= (icmp_ln571_1_reg_3161 xor ap_const_lv1_1);
    xor_ln571_2_fu_1842_p2 <= (icmp_ln571_2_reg_3201 xor ap_const_lv1_1);
    xor_ln571_3_fu_2119_p2 <= (icmp_ln571_3_reg_3251 xor ap_const_lv1_1);
    xor_ln571_fu_1288_p2 <= (icmp_ln571_reg_3116 xor ap_const_lv1_1);
    xor_ln581_1_fu_1731_p2 <= (or_ln581_1_fu_1726_p2 xor ap_const_lv1_1);
    xor_ln581_2_fu_1890_p2 <= (or_ln581_2_fu_1885_p2 xor ap_const_lv1_1);
    xor_ln581_3_fu_2167_p2 <= (or_ln581_3_fu_2162_p2 xor ap_const_lv1_1);
    xor_ln581_fu_1336_p2 <= (or_ln581_fu_1331_p2 xor ap_const_lv1_1);
    xor_ln582_1_fu_1697_p2 <= (or_ln582_1_fu_1693_p2 xor ap_const_lv1_1);
    xor_ln582_2_fu_1856_p2 <= (or_ln582_2_fu_1852_p2 xor ap_const_lv1_1);
    xor_ln582_3_fu_2133_p2 <= (or_ln582_3_fu_2129_p2 xor ap_const_lv1_1);
    xor_ln582_fu_1302_p2 <= (or_ln582_fu_1298_p2 xor ap_const_lv1_1);
    xor_ln585_1_fu_1708_p2 <= (icmp_ln585_1_fu_1636_p2 xor ap_const_lv1_1);
    xor_ln585_2_fu_1867_p2 <= (icmp_ln585_2_fu_1795_p2 xor ap_const_lv1_1);
    xor_ln585_3_fu_2144_p2 <= (icmp_ln585_3_fu_2072_p2 xor ap_const_lv1_1);
    xor_ln585_fu_1313_p2 <= (icmp_ln585_fu_1241_p2 xor ap_const_lv1_1);
    zext_ln461_1_fu_1423_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_1_fu_1413_p4),12));
    zext_ln461_2_fu_1541_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_2_fu_1531_p4),12));
    zext_ln461_3_fu_1977_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_3_fu_1967_p4),12));
    zext_ln461_fu_1146_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_fu_1136_p4),12));
    zext_ln481_fu_1064_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v284_0_0_reg_536),64));
    zext_ln503_fu_1081_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v295_0_0_reg_547),64));
    zext_ln509_fu_1098_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v298_0_0_reg_558),64));
    zext_ln515_fu_1115_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v301_0_0_reg_569),64));
    zext_ln585_1_fu_2278_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v336_0_0_reg_591),12));
    zext_ln585_fu_2256_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_29_fu_2248_p3),12));
    zext_ln586_1_fu_1646_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln581_1_fu_1633_p1),54));
    zext_ln586_2_fu_1805_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln581_2_fu_1792_p1),54));
    zext_ln586_3_fu_2082_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln581_3_fu_2069_p1),54));
    zext_ln586_fu_1251_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln581_fu_1238_p1),54));
    zext_ln593_1_fu_2342_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v340_0_0_reg_613),12));
    zext_ln593_fu_2320_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_31_fu_2312_p3),12));
    zext_ln602_1_fu_2388_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_33_fu_2380_p3),9));
    zext_ln602_2_fu_2414_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v343_0_reg_635),10));
    zext_ln602_3_fu_2461_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v344_0_reg_646),15));
    zext_ln602_4_fu_2470_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln602_1_fu_2465_p2),64));
    zext_ln602_fu_2376_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_32_fu_2368_p3),9));
    zext_ln610_1_fu_2507_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_35_fu_2499_p3),9));
    zext_ln610_2_fu_2533_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v347_0_reg_668),10));
    zext_ln610_3_fu_2580_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v348_0_reg_679),15));
    zext_ln610_4_fu_2589_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln610_1_fu_2584_p2),64));
    zext_ln610_fu_2495_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_fu_2487_p3),9));
    zext_ln629_1_fu_2644_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v356_0_0_reg_701),8));
    zext_ln629_fu_2622_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_37_fu_2614_p3),8));
    zext_ln639_1_fu_2708_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k10_0_0_reg_723),8));
    zext_ln639_fu_2686_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_39_fu_2678_p3),8));
    zext_ln657_fu_2750_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_41_fu_2742_p3),8));
    zext_ln667_1_fu_2815_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v376_0_0_reg_756),8));
    zext_ln667_fu_2793_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_44_fu_2785_p3),8));
    zext_ln676_1_fu_2879_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v380_0_0_reg_778),12));
    zext_ln676_fu_2857_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_46_fu_2849_p3),12));
    zext_ln684_fu_2905_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v383_0_0_reg_789),64));
    zext_ln689_fu_2982_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(d4_0_0_reg_811),12));
    zext_ln690_fu_2938_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_48_fu_2930_p3),12));
    zext_ln691_1_fu_2960_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_2952_p3),12));
    zext_ln691_2_fu_2972_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln691_1_fu_2964_p3),12));
    zext_ln691_fu_3016_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln691_fu_3013_p1),64));
    zext_ln698_fu_3033_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v390_0_0_reg_822),64));
    zext_ln737_fu_3050_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v408_0_0_reg_833),64));
end behav;
