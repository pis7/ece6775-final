// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module quantize_activation (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v22_0_address0,
        v22_0_ce0,
        v22_0_q0,
        v24_0_address0,
        v24_0_ce0,
        v24_0_we0,
        v24_0_d0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 39'd1;
parameter    ap_ST_fsm_state2 = 39'd2;
parameter    ap_ST_fsm_state3 = 39'd4;
parameter    ap_ST_fsm_state4 = 39'd8;
parameter    ap_ST_fsm_state5 = 39'd16;
parameter    ap_ST_fsm_state6 = 39'd32;
parameter    ap_ST_fsm_state7 = 39'd64;
parameter    ap_ST_fsm_state8 = 39'd128;
parameter    ap_ST_fsm_state9 = 39'd256;
parameter    ap_ST_fsm_state10 = 39'd512;
parameter    ap_ST_fsm_state11 = 39'd1024;
parameter    ap_ST_fsm_state12 = 39'd2048;
parameter    ap_ST_fsm_state13 = 39'd4096;
parameter    ap_ST_fsm_state14 = 39'd8192;
parameter    ap_ST_fsm_state15 = 39'd16384;
parameter    ap_ST_fsm_state16 = 39'd32768;
parameter    ap_ST_fsm_state17 = 39'd65536;
parameter    ap_ST_fsm_state18 = 39'd131072;
parameter    ap_ST_fsm_state19 = 39'd262144;
parameter    ap_ST_fsm_state20 = 39'd524288;
parameter    ap_ST_fsm_state21 = 39'd1048576;
parameter    ap_ST_fsm_state22 = 39'd2097152;
parameter    ap_ST_fsm_state23 = 39'd4194304;
parameter    ap_ST_fsm_state24 = 39'd8388608;
parameter    ap_ST_fsm_state25 = 39'd16777216;
parameter    ap_ST_fsm_state26 = 39'd33554432;
parameter    ap_ST_fsm_state27 = 39'd67108864;
parameter    ap_ST_fsm_state28 = 39'd134217728;
parameter    ap_ST_fsm_state29 = 39'd268435456;
parameter    ap_ST_fsm_state30 = 39'd536870912;
parameter    ap_ST_fsm_state31 = 39'd1073741824;
parameter    ap_ST_fsm_state32 = 39'd2147483648;
parameter    ap_ST_fsm_state33 = 39'd4294967296;
parameter    ap_ST_fsm_state34 = 39'd8589934592;
parameter    ap_ST_fsm_state35 = 39'd17179869184;
parameter    ap_ST_fsm_state36 = 39'd34359738368;
parameter    ap_ST_fsm_state37 = 39'd68719476736;
parameter    ap_ST_fsm_state38 = 39'd137438953472;
parameter    ap_ST_fsm_state39 = 39'd274877906944;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] v22_0_address0;
output   v22_0_ce0;
input  [31:0] v22_0_q0;
output  [10:0] v24_0_address0;
output   v24_0_ce0;
output   v24_0_we0;
output  [7:0] v24_0_d0;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[10:0] v22_0_address0;
reg v22_0_ce0;
reg v24_0_ce0;
reg v24_0_we0;

(* fsm_encoding = "none" *) reg   [38:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_178;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state25;
wire   [10:0] add_ln70_fu_190_p2;
reg   [10:0] add_ln70_reg_654;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln70_fu_184_p2;
wire   [31:0] select_ln74_fu_253_p3;
reg   [31:0] select_ln74_reg_664;
wire    ap_CS_fsm_state4;
wire   [31:0] select_ln80_fu_344_p3;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln215_fu_369_p2;
reg   [0:0] icmp_ln215_reg_676;
wire    ap_CS_fsm_state7;
wire   [0:0] icmp_ln215_1_fu_375_p2;
reg   [0:0] icmp_ln215_1_reg_681;
wire   [0:0] grp_fu_169_p2;
reg   [0:0] tmp_6_reg_686;
wire    ap_CS_fsm_state8;
wire   [31:0] grp_fu_164_p2;
reg   [31:0] v_reg_696;
wire    ap_CS_fsm_state23;
wire   [10:0] add_ln97_fu_405_p2;
reg   [10:0] add_ln97_reg_704;
wire    ap_CS_fsm_state24;
wire   [63:0] zext_ln98_fu_411_p1;
reg   [63:0] zext_ln98_reg_709;
wire   [0:0] icmp_ln97_fu_399_p2;
wire   [31:0] grp_fu_160_p2;
reg   [31:0] v1_reg_719;
wire    ap_CS_fsm_state29;
wire   [0:0] icmp_ln101_fu_433_p2;
reg   [0:0] icmp_ln101_reg_726;
wire    ap_CS_fsm_state31;
wire   [0:0] icmp_ln101_1_fu_439_p2;
reg   [0:0] icmp_ln101_1_reg_731;
reg   [0:0] tmp_3_reg_736;
wire    ap_CS_fsm_state32;
wire   [31:0] grp_fu_156_p2;
reg   [31:0] x_assign_reg_746;
wire    ap_CS_fsm_state36;
reg   [0:0] p_Result_s_reg_751;
wire    ap_CS_fsm_state37;
wire   [31:0] p_Val2_5_fu_584_p3;
reg   [31:0] p_Val2_5_reg_756;
wire   [7:0] select_ln115_1_fu_643_p3;
reg   [7:0] select_ln115_1_reg_762;
wire    ap_CS_fsm_state38;
wire   [31:0] ap_phi_mux_v45_0_phi_fu_126_p4;
reg   [31:0] v45_0_reg_122;
reg   [10:0] j_0_0_reg_134;
reg   [10:0] j1_0_0_reg_145;
wire    ap_CS_fsm_state39;
wire   [63:0] zext_ln71_fu_196_p1;
wire   [31:0] grp_fu_156_p1;
wire    ap_CS_fsm_state26;
wire   [31:0] grp_fu_164_p1;
reg   [31:0] grp_fu_169_p0;
reg   [31:0] grp_fu_169_p1;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state30;
wire   [31:0] bitcast_ln72_fu_201_p1;
wire   [7:0] tmp_7_fu_205_p4;
wire   [22:0] trunc_ln72_fu_215_p1;
wire   [0:0] icmp_ln72_1_fu_225_p2;
wire   [0:0] icmp_ln72_fu_219_p2;
wire   [0:0] or_ln72_fu_231_p2;
wire   [31:0] xor_ln73_fu_243_p2;
wire   [0:0] and_ln72_fu_237_p2;
wire   [31:0] bitcast_ln73_fu_249_p1;
wire   [31:0] bitcast_ln79_fu_261_p1;
wire   [31:0] bitcast_ln79_1_fu_279_p1;
wire   [7:0] tmp_9_fu_265_p4;
wire   [22:0] trunc_ln79_fu_275_p1;
wire   [0:0] icmp_ln79_1_fu_302_p2;
wire   [0:0] icmp_ln79_fu_296_p2;
wire   [7:0] tmp_s_fu_282_p4;
wire   [22:0] trunc_ln79_1_fu_292_p1;
wire   [0:0] icmp_ln79_3_fu_320_p2;
wire   [0:0] icmp_ln79_2_fu_314_p2;
wire   [0:0] or_ln79_fu_308_p2;
wire   [0:0] or_ln79_1_fu_326_p2;
wire   [0:0] and_ln79_fu_332_p2;
wire   [0:0] and_ln79_1_fu_338_p2;
wire   [31:0] bitcast_ln215_fu_351_p1;
wire   [7:0] tmp_5_fu_355_p4;
wire   [22:0] trunc_ln215_fu_365_p1;
wire   [0:0] or_ln215_fu_381_p2;
wire   [0:0] and_ln215_fu_385_p2;
wire   [31:0] bitcast_ln101_fu_416_p1;
wire   [7:0] tmp_2_fu_419_p4;
wire   [22:0] trunc_ln101_fu_429_p1;
wire   [0:0] or_ln101_fu_445_p2;
wire   [0:0] and_ln101_fu_449_p2;
wire   [31:0] p_Val2_s_fu_463_p1;
wire   [22:0] tmp_V_1_fu_484_p1;
wire   [24:0] mantissa_V_fu_488_p4;
wire   [7:0] tmp_V_fu_474_p4;
wire   [8:0] zext_ln339_fu_502_p1;
wire   [8:0] add_ln339_fu_506_p2;
wire   [7:0] sub_ln1311_fu_520_p2;
wire   [0:0] isNeg_fu_512_p3;
wire  signed [8:0] sext_ln1311_fu_526_p1;
wire  signed [8:0] ush_fu_530_p3;
wire  signed [31:0] sext_ln1311_1_fu_538_p1;
wire  signed [24:0] sext_ln1311_2_fu_542_p1;
wire   [78:0] zext_ln682_fu_498_p1;
wire   [78:0] zext_ln1287_fu_546_p1;
wire   [24:0] r_V_fu_550_p2;
wire   [0:0] tmp_11_fu_562_p3;
wire   [78:0] r_V_1_fu_556_p2;
wire   [31:0] zext_ln662_fu_570_p1;
wire   [31:0] tmp_10_fu_574_p4;
wire   [31:0] result_V_1_fu_592_p2;
wire   [31:0] p_Val2_6_fu_597_p3;
wire   [24:0] tmp_12_fu_609_p4;
wire   [0:0] icmp_ln110_fu_603_p2;
wire   [0:0] icmp_ln112_fu_619_p2;
wire   [0:0] or_ln115_fu_637_p2;
wire   [7:0] select_ln115_fu_629_p3;
wire   [7:0] trunc_ln115_fu_625_p1;
reg   [4:0] grp_fu_169_opcode;
reg   [38:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 39'd1;
end

attention_fadd_32pcA #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
attention_fadd_32pcA_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v1_reg_719),
    .din1(grp_fu_156_p1),
    .ce(1'b1),
    .dout(grp_fu_156_p2)
);

attention_fmul_32qcK #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
attention_fmul_32qcK_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_178),
    .din1(v_reg_696),
    .ce(1'b1),
    .dout(grp_fu_160_p2)
);

attention_fdiv_32rcU #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
attention_fdiv_32rcU_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd1123942400),
    .din1(grp_fu_164_p1),
    .ce(1'b1),
    .dout(grp_fu_164_p2)
);

attention_fcmp_32sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
attention_fcmp_32sc4_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_169_p0),
    .din1(grp_fu_169_p1),
    .ce(1'b1),
    .opcode(grp_fu_169_opcode),
    .dout(grp_fu_169_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        j1_0_0_reg_145 <= add_ln97_reg_704;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        j1_0_0_reg_145 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        j_0_0_reg_134 <= add_ln70_reg_654;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        j_0_0_reg_134 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        v45_0_reg_122 <= select_ln80_fu_344_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        v45_0_reg_122 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln70_reg_654 <= add_ln70_fu_190_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        add_ln97_reg_704 <= add_ln97_fu_405_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        icmp_ln101_1_reg_731 <= icmp_ln101_1_fu_439_p2;
        icmp_ln101_reg_726 <= icmp_ln101_fu_433_p2;
        tmp_3_reg_736 <= grp_fu_169_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        icmp_ln215_1_reg_681 <= icmp_ln215_1_fu_375_p2;
        icmp_ln215_reg_676 <= icmp_ln215_fu_369_p2;
        tmp_6_reg_686 <= grp_fu_169_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        p_Result_s_reg_751 <= p_Val2_s_fu_463_p1[32'd31];
        p_Val2_5_reg_756 <= p_Val2_5_fu_584_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state3))) begin
        reg_178 <= v22_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        select_ln115_1_reg_762 <= select_ln115_1_fu_643_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        select_ln74_reg_664 <= select_ln74_fu_253_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        v1_reg_719 <= grp_fu_160_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        v_reg_696 <= grp_fu_164_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        x_assign_reg_746 <= grp_fu_156_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln97_fu_399_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        zext_ln98_reg_709[10 : 0] <= zext_ln98_fu_411_p1[10 : 0];
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state24) & (icmp_ln97_fu_399_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) & (icmp_ln97_fu_399_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_fu_169_opcode = 5'd2;
    end else if (((1'b1 == ap_CS_fsm_state5) | ((icmp_ln70_fu_184_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        grp_fu_169_opcode = 5'd4;
    end else begin
        grp_fu_169_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_169_p0 = v1_reg_719;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_169_p0 = v45_0_reg_122;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_169_p0 = v22_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_169_p0 = ap_phi_mux_v45_0_phi_fu_126_p4;
    end else begin
        grp_fu_169_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_169_p1 = select_ln74_reg_664;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_fu_169_p1 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_169_p1 = 32'd925353388;
    end else begin
        grp_fu_169_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        v22_0_address0 = zext_ln98_fu_411_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        v22_0_address0 = zext_ln71_fu_196_p1;
    end else begin
        v22_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state24))) begin
        v22_0_ce0 = 1'b1;
    end else begin
        v22_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        v24_0_ce0 = 1'b1;
    end else begin
        v24_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        v24_0_we0 = 1'b1;
    end else begin
        v24_0_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln70_fu_184_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (icmp_ln97_fu_399_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln339_fu_506_p2 = ($signed(9'd385) + $signed(zext_ln339_fu_502_p1));

assign add_ln70_fu_190_p2 = (j_0_0_reg_134 + 11'd1);

assign add_ln97_fu_405_p2 = (j1_0_0_reg_145 + 11'd1);

assign and_ln101_fu_449_p2 = (tmp_3_reg_736 & or_ln101_fu_445_p2);

assign and_ln215_fu_385_p2 = (tmp_6_reg_686 & or_ln215_fu_381_p2);

assign and_ln72_fu_237_p2 = (or_ln72_fu_231_p2 & grp_fu_169_p2);

assign and_ln79_1_fu_338_p2 = (grp_fu_169_p2 & and_ln79_fu_332_p2);

assign and_ln79_fu_332_p2 = (or_ln79_fu_308_p2 & or_ln79_1_fu_326_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_phi_mux_v45_0_phi_fu_126_p4 = v45_0_reg_122;

assign ap_return = v_reg_696;

assign bitcast_ln101_fu_416_p1 = v1_reg_719;

assign bitcast_ln215_fu_351_p1 = v45_0_reg_122;

assign bitcast_ln72_fu_201_p1 = reg_178;

assign bitcast_ln73_fu_249_p1 = xor_ln73_fu_243_p2;

assign bitcast_ln79_1_fu_279_p1 = select_ln74_reg_664;

assign bitcast_ln79_fu_261_p1 = v45_0_reg_122;

assign grp_fu_156_p1 = ((and_ln101_fu_449_p2[0:0] === 1'b1) ? 32'd1056964608 : 32'd3204448256);

assign grp_fu_164_p1 = ((and_ln215_fu_385_p2[0:0] === 1'b1) ? 32'd925353388 : v45_0_reg_122);

assign icmp_ln101_1_fu_439_p2 = ((trunc_ln101_fu_429_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln101_fu_433_p2 = ((tmp_2_fu_419_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln110_fu_603_p2 = (($signed(p_Val2_6_fu_597_p3) < $signed(32'd4294967168)) ? 1'b1 : 1'b0);

assign icmp_ln112_fu_619_p2 = (($signed(tmp_12_fu_609_p4) > $signed(25'd0)) ? 1'b1 : 1'b0);

assign icmp_ln215_1_fu_375_p2 = ((trunc_ln215_fu_365_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln215_fu_369_p2 = ((tmp_5_fu_355_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln70_fu_184_p2 = ((j_0_0_reg_134 == 11'd1536) ? 1'b1 : 1'b0);

assign icmp_ln72_1_fu_225_p2 = ((trunc_ln72_fu_215_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln72_fu_219_p2 = ((tmp_7_fu_205_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln79_1_fu_302_p2 = ((trunc_ln79_fu_275_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln79_2_fu_314_p2 = ((tmp_s_fu_282_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln79_3_fu_320_p2 = ((trunc_ln79_1_fu_292_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_296_p2 = ((tmp_9_fu_265_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln97_fu_399_p2 = ((j1_0_0_reg_145 == 11'd1536) ? 1'b1 : 1'b0);

assign isNeg_fu_512_p3 = add_ln339_fu_506_p2[32'd8];

assign mantissa_V_fu_488_p4 = {{{{1'd1}, {tmp_V_1_fu_484_p1}}}, {1'd0}};

assign or_ln101_fu_445_p2 = (icmp_ln101_reg_726 | icmp_ln101_1_reg_731);

assign or_ln115_fu_637_p2 = (icmp_ln112_fu_619_p2 | icmp_ln110_fu_603_p2);

assign or_ln215_fu_381_p2 = (icmp_ln215_reg_676 | icmp_ln215_1_reg_681);

assign or_ln72_fu_231_p2 = (icmp_ln72_fu_219_p2 | icmp_ln72_1_fu_225_p2);

assign or_ln79_1_fu_326_p2 = (icmp_ln79_3_fu_320_p2 | icmp_ln79_2_fu_314_p2);

assign or_ln79_fu_308_p2 = (icmp_ln79_fu_296_p2 | icmp_ln79_1_fu_302_p2);

assign p_Val2_5_fu_584_p3 = ((isNeg_fu_512_p3[0:0] === 1'b1) ? zext_ln662_fu_570_p1 : tmp_10_fu_574_p4);

assign p_Val2_6_fu_597_p3 = ((p_Result_s_reg_751[0:0] === 1'b1) ? result_V_1_fu_592_p2 : p_Val2_5_reg_756);

assign p_Val2_s_fu_463_p1 = x_assign_reg_746;

assign r_V_1_fu_556_p2 = zext_ln682_fu_498_p1 << zext_ln1287_fu_546_p1;

assign r_V_fu_550_p2 = mantissa_V_fu_488_p4 >> sext_ln1311_2_fu_542_p1;

assign result_V_1_fu_592_p2 = (32'd0 - p_Val2_5_reg_756);

assign select_ln115_1_fu_643_p3 = ((or_ln115_fu_637_p2[0:0] === 1'b1) ? select_ln115_fu_629_p3 : trunc_ln115_fu_625_p1);

assign select_ln115_fu_629_p3 = ((icmp_ln110_fu_603_p2[0:0] === 1'b1) ? 8'd128 : 8'd127);

assign select_ln74_fu_253_p3 = ((and_ln72_fu_237_p2[0:0] === 1'b1) ? reg_178 : bitcast_ln73_fu_249_p1);

assign select_ln80_fu_344_p3 = ((and_ln79_1_fu_338_p2[0:0] === 1'b1) ? select_ln74_reg_664 : v45_0_reg_122);

assign sext_ln1311_1_fu_538_p1 = ush_fu_530_p3;

assign sext_ln1311_2_fu_542_p1 = ush_fu_530_p3;

assign sext_ln1311_fu_526_p1 = $signed(sub_ln1311_fu_520_p2);

assign sub_ln1311_fu_520_p2 = (8'd127 - tmp_V_fu_474_p4);

assign tmp_10_fu_574_p4 = {{r_V_1_fu_556_p2[55:24]}};

assign tmp_11_fu_562_p3 = r_V_fu_550_p2[32'd24];

assign tmp_12_fu_609_p4 = {{p_Val2_6_fu_597_p3[31:7]}};

assign tmp_2_fu_419_p4 = {{bitcast_ln101_fu_416_p1[30:23]}};

assign tmp_5_fu_355_p4 = {{bitcast_ln215_fu_351_p1[30:23]}};

assign tmp_7_fu_205_p4 = {{bitcast_ln72_fu_201_p1[30:23]}};

assign tmp_9_fu_265_p4 = {{bitcast_ln79_fu_261_p1[30:23]}};

assign tmp_V_1_fu_484_p1 = p_Val2_s_fu_463_p1[22:0];

assign tmp_V_fu_474_p4 = {{p_Val2_s_fu_463_p1[30:23]}};

assign tmp_s_fu_282_p4 = {{bitcast_ln79_1_fu_279_p1[30:23]}};

assign trunc_ln101_fu_429_p1 = bitcast_ln101_fu_416_p1[22:0];

assign trunc_ln115_fu_625_p1 = p_Val2_6_fu_597_p3[7:0];

assign trunc_ln215_fu_365_p1 = bitcast_ln215_fu_351_p1[22:0];

assign trunc_ln72_fu_215_p1 = bitcast_ln72_fu_201_p1[22:0];

assign trunc_ln79_1_fu_292_p1 = bitcast_ln79_1_fu_279_p1[22:0];

assign trunc_ln79_fu_275_p1 = bitcast_ln79_fu_261_p1[22:0];

assign ush_fu_530_p3 = ((isNeg_fu_512_p3[0:0] === 1'b1) ? sext_ln1311_fu_526_p1 : add_ln339_fu_506_p2);

assign v24_0_address0 = zext_ln98_reg_709;

assign v24_0_d0 = select_ln115_1_reg_762;

assign xor_ln73_fu_243_p2 = (bitcast_ln72_fu_201_p1 ^ 32'd2147483648);

assign zext_ln1287_fu_546_p1 = $unsigned(sext_ln1311_1_fu_538_p1);

assign zext_ln339_fu_502_p1 = tmp_V_fu_474_p4;

assign zext_ln662_fu_570_p1 = tmp_11_fu_562_p3;

assign zext_ln682_fu_498_p1 = mantissa_V_fu_488_p4;

assign zext_ln71_fu_196_p1 = j_0_0_reg_134;

assign zext_ln98_fu_411_p1 = j1_0_0_reg_145;

always @ (posedge ap_clk) begin
    zext_ln98_reg_709[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
end

endmodule //quantize_activation
