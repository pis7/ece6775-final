-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity attention is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    v258_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    v258_ce0 : OUT STD_LOGIC;
    v258_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v259_address0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    v259_ce0 : OUT STD_LOGIC;
    v259_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    v260 : IN STD_LOGIC_VECTOR (31 downto 0);
    v261_address0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    v261_ce0 : OUT STD_LOGIC;
    v261_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    v262 : IN STD_LOGIC_VECTOR (31 downto 0);
    v263_address0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    v263_ce0 : OUT STD_LOGIC;
    v263_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    v264 : IN STD_LOGIC_VECTOR (31 downto 0);
    v265_address0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    v265_ce0 : OUT STD_LOGIC;
    v265_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    v266 : IN STD_LOGIC_VECTOR (31 downto 0);
    v267_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v267_ce0 : OUT STD_LOGIC;
    v267_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v268_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v268_ce0 : OUT STD_LOGIC;
    v268_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v269_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    v269_ce0 : OUT STD_LOGIC;
    v269_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v270_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    v270_ce0 : OUT STD_LOGIC;
    v270_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v271_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    v271_ce0 : OUT STD_LOGIC;
    v271_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v272_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    v272_ce0 : OUT STD_LOGIC;
    v272_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v273 : IN STD_LOGIC_VECTOR (31 downto 0);
    v274_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    v274_ce0 : OUT STD_LOGIC;
    v274_we0 : OUT STD_LOGIC;
    v274_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    v274_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of attention is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "attention,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.386250,HLS_SYN_LAT=111494276,HLS_SYN_TPT=none,HLS_SYN_MEM=182,HLS_SYN_DSP=79,HLS_SYN_FF=18979,HLS_SYN_LUT=29792,HLS_VERSION=2019_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (75 downto 0) := "0000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (75 downto 0) := "0000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (75 downto 0) := "0000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (75 downto 0) := "0000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (75 downto 0) := "0000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (75 downto 0) := "0000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (75 downto 0) := "0000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (75 downto 0) := "0001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (75 downto 0) := "0010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (75 downto 0) := "0100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (75 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_411CC471 : STD_LOGIC_VECTOR (31 downto 0) := "01000001000111001100010001110001";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv11_600 : STD_LOGIC_VECTOR (10 downto 0) := "11000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv7_60 : STD_LOGIC_VECTOR (6 downto 0) := "1100000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (75 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal quantized_hidden_sta_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal quantized_hidden_sta_ce0 : STD_LOGIC;
    signal quantized_hidden_sta_we0 : STD_LOGIC;
    signal quantized_hidden_sta_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_proj_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal q_proj_0_ce0 : STD_LOGIC;
    signal q_proj_0_we0 : STD_LOGIC;
    signal q_proj_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal q_proj_0_ce1 : STD_LOGIC;
    signal q_proj_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_proj_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_proj_0_ce0 : STD_LOGIC;
    signal k_proj_0_we0 : STD_LOGIC;
    signal k_proj_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_proj_0_ce1 : STD_LOGIC;
    signal k_proj_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_proj_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal v_proj_0_ce0 : STD_LOGIC;
    signal v_proj_0_we0 : STD_LOGIC;
    signal v_proj_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_proj_transposed_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal k_proj_transposed_ce0 : STD_LOGIC;
    signal k_proj_transposed_we0 : STD_LOGIC;
    signal k_proj_transposed_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal quantized_final_outp_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal quantized_final_outp_ce0 : STD_LOGIC;
    signal quantized_final_outp_we0 : STD_LOGIC;
    signal quantized_final_outp_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_quantize_activation_fu_822_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_897 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_quantize_activation_fu_822_ap_ready : STD_LOGIC;
    signal grp_quantize_activation_fu_822_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state74 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal attn_weights_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_902 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal add_ln465_fu_914_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln484_fu_931_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal add_ln490_fu_948_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal add_ln496_fu_965_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal v307_fu_982_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal v307_reg_1858 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal sub_ln534_fu_1008_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln534_reg_1863 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln531_fu_976_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln533_fu_1020_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal v311_fu_1046_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal v311_reg_1879 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal sub_ln542_fu_1072_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln542_reg_1884 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln539_fu_1040_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln541_fu_1084_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal v315_fu_1110_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal v315_reg_1900 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal sext_ln551_fu_1146_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln551_reg_1905 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln548_fu_1104_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v316_fu_1156_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal v316_reg_1913 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal sub_ln551_1_fu_1191_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln551_1_reg_1918 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln549_fu_1150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v317_fu_1203_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal v319_fu_1229_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal v319_reg_1934 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal sext_ln559_fu_1265_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln559_reg_1939 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln556_fu_1223_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v320_fu_1275_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal v320_reg_1947 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal sub_ln559_1_fu_1310_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln559_1_reg_1952 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln557_fu_1269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v321_fu_1322_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal v327_fu_1348_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal v327_reg_1968 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal sub_ln578_fu_1374_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln578_reg_1973 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln575_fu_1342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln577_fu_1386_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal i10_fu_1412_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i10_reg_1989 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal sub_ln588_fu_1438_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln588_reg_1994 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln585_fu_1406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln587_fu_1450_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln587_reg_2002 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal attn_weights_0_addr_2_reg_2007 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln587_fu_1444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_892_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_reg_2012 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal h6_fu_1476_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal h6_reg_2020 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal attn_weights_0_addr_1_reg_2025 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln602_fu_1470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_887_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal v7_reg_2030 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal v347_fu_1519_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal v347_reg_2038 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal sub_ln616_fu_1545_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln616_reg_2043 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln613_fu_1513_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln615_fu_1557_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal v351_fu_1583_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal v351_reg_2059 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal sub_ln625_fu_1609_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln625_reg_2064 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln622_fu_1577_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln624_fu_1621_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal add_ln632_fu_1647_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal add_ln637_fu_1664_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln637_reg_2088 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal sub_ln639_fu_1690_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln639_reg_2093 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln637_fu_1658_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln640_fu_1724_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln640_reg_2098 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln638_fu_1740_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln638_reg_2106 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal icmp_ln638_fu_1734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln640_fu_1756_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln640_reg_2116 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln646_fu_1775_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal add_ln664_fu_1792_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state75 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal rms_hidden_states_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal rms_hidden_states_0_ce0 : STD_LOGIC;
    signal rms_hidden_states_0_we0 : STD_LOGIC;
    signal rms_hidden_states_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rms_hidden_states_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal q_proj_re_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal q_proj_re_ce0 : STD_LOGIC;
    signal q_proj_re_we0 : STD_LOGIC;
    signal q_proj_re_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal q_proj_re_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_proj_re_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_proj_re_ce0 : STD_LOGIC;
    signal k_proj_re_we0 : STD_LOGIC;
    signal k_proj_re_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_proj_re_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_proj_re_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal v_proj_re_ce0 : STD_LOGIC;
    signal v_proj_re_we0 : STD_LOGIC;
    signal v_proj_re_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_proj_re_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal q_embed_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal q_embed_0_ce0 : STD_LOGIC;
    signal q_embed_0_we0 : STD_LOGIC;
    signal q_embed_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal q_embed_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_embed_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_embed_0_ce0 : STD_LOGIC;
    signal k_embed_0_we0 : STD_LOGIC;
    signal k_embed_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_embed_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal updated_k_cache_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal updated_k_cache_ce0 : STD_LOGIC;
    signal updated_k_cache_we0 : STD_LOGIC;
    signal updated_k_cache_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal updated_k_cache_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal updated_v_cache_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal updated_v_cache_ce0 : STD_LOGIC;
    signal updated_v_cache_we0 : STD_LOGIC;
    signal updated_v_cache_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal updated_v_cache_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal attn_weights_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal attn_weights_0_ce0 : STD_LOGIC;
    signal attn_weights_0_we0 : STD_LOGIC;
    signal attn_weights_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal softmax_attn_weights_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal softmax_attn_weights_ce0 : STD_LOGIC;
    signal softmax_attn_weights_we0 : STD_LOGIC;
    signal softmax_attn_weights_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal softmax_attn_weights_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal attn_output_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal attn_output_0_ce0 : STD_LOGIC;
    signal attn_output_0_we0 : STD_LOGIC;
    signal attn_output_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal attn_output_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal attn_output_2D_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal attn_output_2D_ce0 : STD_LOGIC;
    signal attn_output_2D_we0 : STD_LOGIC;
    signal attn_output_2D_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal attn_output_2D_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rms_attn_output_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal rms_attn_output_0_ce0 : STD_LOGIC;
    signal rms_attn_output_0_we0 : STD_LOGIC;
    signal rms_attn_output_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rms_attn_output_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_softmax_fu_764_ap_start : STD_LOGIC;
    signal grp_softmax_fu_764_ap_done : STD_LOGIC;
    signal grp_softmax_fu_764_ap_idle : STD_LOGIC;
    signal grp_softmax_fu_764_ap_ready : STD_LOGIC;
    signal grp_softmax_fu_764_v219_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_softmax_fu_764_v219_0_ce0 : STD_LOGIC;
    signal grp_softmax_fu_764_v220_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_softmax_fu_764_v220_0_ce0 : STD_LOGIC;
    signal grp_softmax_fu_764_v220_0_we0 : STD_LOGIC;
    signal grp_softmax_fu_764_v220_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rms_norm_fu_784_ap_start : STD_LOGIC;
    signal grp_rms_norm_fu_784_ap_done : STD_LOGIC;
    signal grp_rms_norm_fu_784_ap_idle : STD_LOGIC;
    signal grp_rms_norm_fu_784_ap_ready : STD_LOGIC;
    signal grp_rms_norm_fu_784_v0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_rms_norm_fu_784_v0_ce0 : STD_LOGIC;
    signal grp_rms_norm_fu_784_v0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rms_norm_fu_784_v1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_rms_norm_fu_784_v1_ce0 : STD_LOGIC;
    signal grp_rms_norm_fu_784_v1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rms_norm_fu_784_v3_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_rms_norm_fu_784_v3_0_ce0 : STD_LOGIC;
    signal grp_rms_norm_fu_784_v3_0_we0 : STD_LOGIC;
    signal grp_rms_norm_fu_784_v3_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_apply_rotary_pos_emb_fu_808_ap_start : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_808_ap_done : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_808_ap_idle : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_808_ap_ready : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_808_v157_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_apply_rotary_pos_emb_fu_808_v157_ce0 : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_808_v158_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_apply_rotary_pos_emb_fu_808_v158_ce0 : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_808_v159_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_apply_rotary_pos_emb_fu_808_v159_0_ce0 : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_808_v159_0_we0 : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_808_v159_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_apply_rotary_pos_emb_fu_808_v160_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_apply_rotary_pos_emb_fu_808_v160_0_ce0 : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_808_v160_0_we0 : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_808_v160_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_apply_rotary_pos_emb_fu_808_q_proj_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_apply_rotary_pos_emb_fu_808_q_proj_0_ce0 : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_808_q_proj_0_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_apply_rotary_pos_emb_fu_808_q_proj_0_ce1 : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_808_k_proj_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_apply_rotary_pos_emb_fu_808_k_proj_0_ce0 : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_808_k_proj_0_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_apply_rotary_pos_emb_fu_808_k_proj_0_ce1 : STD_LOGIC;
    signal grp_quantize_activation_fu_822_ap_start : STD_LOGIC;
    signal grp_quantize_activation_fu_822_ap_idle : STD_LOGIC;
    signal grp_quantize_activation_fu_822_v22_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_quantize_activation_fu_822_v22_0_ce0 : STD_LOGIC;
    signal grp_quantize_activation_fu_822_v22_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_quantize_activation_fu_822_v24_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_quantize_activation_fu_822_v24_0_ce0 : STD_LOGIC;
    signal grp_quantize_activation_fu_822_v24_0_we0 : STD_LOGIC;
    signal grp_quantize_activation_fu_822_v24_0_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_830_ap_start : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_830_ap_done : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_830_ap_idle : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_830_ap_ready : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_830_v77_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_linear_forward_no_mu_fu_830_v77_0_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_830_v77_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_830_v79_address0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_linear_forward_no_mu_fu_830_v79_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_830_v79_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_830_v80 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_linear_forward_no_mu_fu_830_v81_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_linear_forward_no_mu_fu_830_v81_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_830_v81_we0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_830_v81_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_linear_forward_no_mu_fu_830_v81_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_GEMM_3D_float_fu_846_ap_start : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_846_ap_done : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_846_ap_idle : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_846_ap_ready : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_846_v204_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_GEMM_3D_float_fu_846_v204_0_ce0 : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_846_v206_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_GEMM_3D_float_fu_846_v206_0_ce0 : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_846_v206_0_we0 : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_846_v206_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_GEMM_3D_float_fu_846_k_proj_transposed_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_GEMM_3D_float_fu_846_k_proj_transposed_ce0 : STD_LOGIC;
    signal grp_GEMM_3D_float2_fu_854_ap_start : STD_LOGIC;
    signal grp_GEMM_3D_float2_fu_854_ap_done : STD_LOGIC;
    signal grp_GEMM_3D_float2_fu_854_ap_idle : STD_LOGIC;
    signal grp_GEMM_3D_float2_fu_854_ap_ready : STD_LOGIC;
    signal grp_GEMM_3D_float2_fu_854_v246_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_GEMM_3D_float2_fu_854_v246_0_ce0 : STD_LOGIC;
    signal grp_GEMM_3D_float2_fu_854_v247_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_GEMM_3D_float2_fu_854_v247_ce0 : STD_LOGIC;
    signal grp_GEMM_3D_float2_fu_854_v248_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_GEMM_3D_float2_fu_854_v248_0_ce0 : STD_LOGIC;
    signal grp_GEMM_3D_float2_fu_854_v248_0_we0 : STD_LOGIC;
    signal grp_GEMM_3D_float2_fu_854_v248_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cache_update_fu_861_ap_start : STD_LOGIC;
    signal grp_cache_update_fu_861_ap_done : STD_LOGIC;
    signal grp_cache_update_fu_861_ap_idle : STD_LOGIC;
    signal grp_cache_update_fu_861_ap_ready : STD_LOGIC;
    signal grp_cache_update_fu_861_v187_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_cache_update_fu_861_v187_ce0 : STD_LOGIC;
    signal grp_cache_update_fu_861_v187_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cache_update_fu_861_v188_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_cache_update_fu_861_v188_0_ce0 : STD_LOGIC;
    signal grp_cache_update_fu_861_v188_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cache_update_fu_861_v189_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cache_update_fu_861_v189_ce0 : STD_LOGIC;
    signal grp_cache_update_fu_861_v189_we0 : STD_LOGIC;
    signal grp_cache_update_fu_861_v189_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_transpose_last_two_d_fu_871_ap_start : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_871_ap_done : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_871_ap_idle : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_871_ap_ready : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_871_v198_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_transpose_last_two_d_fu_871_v198_ce0 : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_871_v199_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_transpose_last_two_d_fu_871_v199_ce0 : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_871_v199_we0 : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_871_v199_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_reshape_2D_to_3D_fu_878_ap_start : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_878_ap_done : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_878_ap_idle : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_878_ap_ready : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_878_v141_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_reshape_2D_to_3D_fu_878_v141_ce0 : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_878_v141_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_reshape_2D_to_3D_fu_878_v142_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_reshape_2D_to_3D_fu_878_v142_0_ce0 : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_878_v142_0_we0 : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_878_v142_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal v278_0_0_reg_456 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln465_fu_908_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v287_0_0_reg_467 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln484_fu_925_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v290_0_0_reg_478 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln490_fu_942_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v293_0_0_reg_489 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln496_fu_959_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v307_0_reg_500 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal icmp_ln533_fu_1014_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v309_0_0_reg_511 : STD_LOGIC_VECTOR (6 downto 0);
    signal v311_0_reg_522 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln541_fu_1078_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v313_0_0_reg_533 : STD_LOGIC_VECTOR (6 downto 0);
    signal v315_0_reg_544 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal v316_0_reg_555 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln550_fu_1197_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v317_0_reg_566 : STD_LOGIC_VECTOR (6 downto 0);
    signal v319_0_reg_577 : STD_LOGIC_VECTOR (4 downto 0);
    signal v320_0_reg_588 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln558_fu_1316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v321_0_reg_599 : STD_LOGIC_VECTOR (6 downto 0);
    signal v327_0_reg_610 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_block_state29_on_subcall_done : BOOLEAN;
    signal icmp_ln577_fu_1380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v329_0_0_reg_621 : STD_LOGIC_VECTOR (2 downto 0);
    signal i10_0_reg_632 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal k9_0_0_reg_643 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal h6_0_reg_654 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal v347_0_reg_665 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln615_fu_1551_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v349_0_0_reg_676 : STD_LOGIC_VECTOR (2 downto 0);
    signal v351_0_reg_687 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal icmp_ln624_fu_1615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v353_0_0_reg_698 : STD_LOGIC_VECTOR (6 downto 0);
    signal v356_0_0_reg_709 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln632_fu_1641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal h7_0_0_reg_720 : STD_LOGIC_VECTOR (4 downto 0);
    signal d4_0_0_reg_731 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal v363_0_0_reg_742 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln646_fu_1769_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v371_0_0_reg_753 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln664_fu_1786_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_softmax_fu_764_ap_start_reg : STD_LOGIC := '0';
    signal grp_rms_norm_fu_784_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal grp_apply_rotary_pos_emb_fu_808_ap_start_reg : STD_LOGIC := '0';
    signal grp_quantize_activation_fu_822_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state73 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal grp_linear_forward_no_mu_fu_830_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal grp_GEMM_3D_float_fu_846_ap_start_reg : STD_LOGIC := '0';
    signal grp_GEMM_3D_float2_fu_854_ap_start_reg : STD_LOGIC := '0';
    signal grp_cache_update_fu_861_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal grp_transpose_last_two_d_fu_871_ap_start_reg : STD_LOGIC := '0';
    signal grp_reshape_2D_to_3D_fu_878_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal zext_ln466_fu_920_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln485_fu_937_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln491_fu_954_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln497_fu_971_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln534_fu_1035_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln542_fu_1099_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln551_4_fu_1218_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln559_4_fu_1337_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln578_fu_1401_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln588_fu_1465_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln606_fu_1508_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln616_fu_1572_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln625_fu_1636_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln633_fu_1653_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln639_fu_1751_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln640_fu_1764_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln647_fu_1781_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln665_fu_1798_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal tmp_25_fu_996_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_24_fu_988_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln534_fu_1004_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln534_1_fu_1026_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln534_fu_1030_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_27_fu_1060_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_26_fu_1052_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln542_fu_1068_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln542_1_fu_1090_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln542_fu_1094_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_28_fu_1116_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_29_fu_1128_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln551_fu_1124_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln551_1_fu_1136_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln551_fu_1140_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln551_2_fu_1162_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln551_fu_1166_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln551_fu_1171_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl6_cast_fu_1175_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl7_cast_fu_1183_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln551_3_fu_1209_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln551_1_fu_1213_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_30_fu_1235_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_31_fu_1247_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln559_fu_1243_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln559_1_fu_1255_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln559_fu_1259_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln559_2_fu_1281_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln559_fu_1285_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln559_fu_1290_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl_cast_fu_1294_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl2_cast_fu_1302_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln559_3_fu_1328_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln559_1_fu_1332_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_33_fu_1362_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_32_fu_1354_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln578_fu_1370_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln578_1_fu_1392_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln578_fu_1396_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_35_fu_1426_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_34_fu_1418_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln588_fu_1434_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln588_1_fu_1456_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln588_fu_1460_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_37_fu_1490_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_36_fu_1482_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln606_fu_1498_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln606_fu_1502_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_39_fu_1533_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_38_fu_1525_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln616_fu_1541_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln616_1_fu_1563_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln616_fu_1567_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_41_fu_1597_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_40_fu_1589_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln625_fu_1605_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln625_1_fu_1627_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln625_fu_1631_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_43_fu_1678_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_42_fu_1670_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln639_fu_1686_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln640_fu_1696_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln_fu_1700_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln640_1_fu_1712_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln640_1_fu_1708_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln640_2_fu_1720_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln638_fu_1730_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln639_fu_1746_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln640_fu_1761_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (75 downto 0);
    signal ap_block_state11_on_subcall_done : BOOLEAN;
    signal ap_block_state13_on_subcall_done : BOOLEAN;

    component softmax IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v219_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        v219_0_ce0 : OUT STD_LOGIC;
        v219_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v220_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        v220_0_ce0 : OUT STD_LOGIC;
        v220_0_we0 : OUT STD_LOGIC;
        v220_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        v220_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component rms_norm IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v0_ce0 : OUT STD_LOGIC;
        v0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v1_ce0 : OUT STD_LOGIC;
        v1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v3_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v3_0_ce0 : OUT STD_LOGIC;
        v3_0_we0 : OUT STD_LOGIC;
        v3_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component apply_rotary_pos_emb IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v157_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v157_ce0 : OUT STD_LOGIC;
        v157_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v158_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v158_ce0 : OUT STD_LOGIC;
        v158_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v159_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v159_0_ce0 : OUT STD_LOGIC;
        v159_0_we0 : OUT STD_LOGIC;
        v159_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        v160_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v160_0_ce0 : OUT STD_LOGIC;
        v160_0_we0 : OUT STD_LOGIC;
        v160_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        q_proj_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        q_proj_0_ce0 : OUT STD_LOGIC;
        q_proj_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q_proj_0_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        q_proj_0_ce1 : OUT STD_LOGIC;
        q_proj_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        k_proj_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k_proj_0_ce0 : OUT STD_LOGIC;
        k_proj_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        k_proj_0_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k_proj_0_ce1 : OUT STD_LOGIC;
        k_proj_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component quantize_activation IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v22_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v22_0_ce0 : OUT STD_LOGIC;
        v22_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v24_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v24_0_ce0 : OUT STD_LOGIC;
        v24_0_we0 : OUT STD_LOGIC;
        v24_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component linear_forward_no_mu IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v77_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v77_0_ce0 : OUT STD_LOGIC;
        v77_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        v79_address0 : OUT STD_LOGIC_VECTOR (19 downto 0);
        v79_ce0 : OUT STD_LOGIC;
        v79_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        v80 : IN STD_LOGIC_VECTOR (31 downto 0);
        v81_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v81_ce0 : OUT STD_LOGIC;
        v81_we0 : OUT STD_LOGIC;
        v81_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        v81_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component GEMM_3D_float IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v204_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v204_0_ce0 : OUT STD_LOGIC;
        v204_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v206_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        v206_0_ce0 : OUT STD_LOGIC;
        v206_0_we0 : OUT STD_LOGIC;
        v206_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        v206_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        k_proj_transposed_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        k_proj_transposed_ce0 : OUT STD_LOGIC;
        k_proj_transposed_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component GEMM_3D_float2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v246_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        v246_0_ce0 : OUT STD_LOGIC;
        v246_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v247_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        v247_ce0 : OUT STD_LOGIC;
        v247_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v248_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v248_0_ce0 : OUT STD_LOGIC;
        v248_0_we0 : OUT STD_LOGIC;
        v248_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        v248_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cache_update IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v187_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        v187_ce0 : OUT STD_LOGIC;
        v187_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v188_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v188_0_ce0 : OUT STD_LOGIC;
        v188_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v189_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        v189_ce0 : OUT STD_LOGIC;
        v189_we0 : OUT STD_LOGIC;
        v189_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component transpose_last_two_d IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v198_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        v198_ce0 : OUT STD_LOGIC;
        v198_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v199_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        v199_ce0 : OUT STD_LOGIC;
        v199_we0 : OUT STD_LOGIC;
        v199_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component reshape_2D_to_3D IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v141_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v141_ce0 : OUT STD_LOGIC;
        v141_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v142_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v142_0_ce0 : OUT STD_LOGIC;
        v142_0_we0 : OUT STD_LOGIC;
        v142_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component attention_fadd_32pcA IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component attention_fdiv_32rcU IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component attention_quantizxdS IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component attention_q_proj_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component attention_v_proj_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component attention_k_proj_yd2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component attention_rms_hidAem IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component attention_updatedBew IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component attention_attn_weDeQ IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    quantized_hidden_sta_U : component attention_quantizxdS
    generic map (
        DataWidth => 8,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => quantized_hidden_sta_address0,
        ce0 => quantized_hidden_sta_ce0,
        we0 => quantized_hidden_sta_we0,
        d0 => grp_quantize_activation_fu_822_v24_0_d0,
        q0 => quantized_hidden_sta_q0);

    q_proj_0_U : component attention_q_proj_0
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => q_proj_0_address0,
        ce0 => q_proj_0_ce0,
        we0 => q_proj_0_we0,
        d0 => grp_reshape_2D_to_3D_fu_878_v142_0_d0,
        q0 => q_proj_0_q0,
        address1 => grp_apply_rotary_pos_emb_fu_808_q_proj_0_address1,
        ce1 => q_proj_0_ce1,
        q1 => q_proj_0_q1);

    k_proj_0_U : component attention_q_proj_0
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_proj_0_address0,
        ce0 => k_proj_0_ce0,
        we0 => k_proj_0_we0,
        d0 => grp_reshape_2D_to_3D_fu_878_v142_0_d0,
        q0 => k_proj_0_q0,
        address1 => grp_apply_rotary_pos_emb_fu_808_k_proj_0_address1,
        ce1 => k_proj_0_ce1,
        q1 => k_proj_0_q1);

    v_proj_0_U : component attention_v_proj_0
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => v_proj_0_address0,
        ce0 => v_proj_0_ce0,
        we0 => v_proj_0_we0,
        d0 => grp_reshape_2D_to_3D_fu_878_v142_0_d0,
        q0 => v_proj_0_q0);

    k_proj_transposed_U : component attention_k_proj_yd2
    generic map (
        DataWidth => 32,
        AddressRange => 9216,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_proj_transposed_address0,
        ce0 => k_proj_transposed_ce0,
        we0 => k_proj_transposed_we0,
        d0 => grp_transpose_last_two_d_fu_871_v199_d0,
        q0 => k_proj_transposed_q0);

    quantized_final_outp_U : component attention_quantizxdS
    generic map (
        DataWidth => 8,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => quantized_final_outp_address0,
        ce0 => quantized_final_outp_ce0,
        we0 => quantized_final_outp_we0,
        d0 => grp_quantize_activation_fu_822_v24_0_d0,
        q0 => quantized_final_outp_q0);

    rms_hidden_states_0_U : component attention_rms_hidAem
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rms_hidden_states_0_address0,
        ce0 => rms_hidden_states_0_ce0,
        we0 => rms_hidden_states_0_we0,
        d0 => rms_hidden_states_0_d0,
        q0 => rms_hidden_states_0_q0);

    q_proj_re_U : component attention_rms_hidAem
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => q_proj_re_address0,
        ce0 => q_proj_re_ce0,
        we0 => q_proj_re_we0,
        d0 => q_proj_re_d0,
        q0 => q_proj_re_q0);

    k_proj_re_U : component attention_rms_hidAem
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_proj_re_address0,
        ce0 => k_proj_re_ce0,
        we0 => k_proj_re_we0,
        d0 => k_proj_re_d0,
        q0 => k_proj_re_q0);

    v_proj_re_U : component attention_rms_hidAem
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => v_proj_re_address0,
        ce0 => v_proj_re_ce0,
        we0 => v_proj_re_we0,
        d0 => v_proj_re_d0,
        q0 => v_proj_re_q0);

    q_embed_0_U : component attention_rms_hidAem
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => q_embed_0_address0,
        ce0 => q_embed_0_ce0,
        we0 => q_embed_0_we0,
        d0 => q_embed_0_d0,
        q0 => q_embed_0_q0);

    k_embed_0_U : component attention_rms_hidAem
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_embed_0_address0,
        ce0 => k_embed_0_ce0,
        we0 => k_embed_0_we0,
        d0 => k_embed_0_d0,
        q0 => k_embed_0_q0);

    updated_k_cache_U : component attention_updatedBew
    generic map (
        DataWidth => 32,
        AddressRange => 9216,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => updated_k_cache_address0,
        ce0 => updated_k_cache_ce0,
        we0 => updated_k_cache_we0,
        d0 => updated_k_cache_d0,
        q0 => updated_k_cache_q0);

    updated_v_cache_U : component attention_updatedBew
    generic map (
        DataWidth => 32,
        AddressRange => 9216,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => updated_v_cache_address0,
        ce0 => updated_v_cache_ce0,
        we0 => updated_v_cache_we0,
        d0 => updated_v_cache_d0,
        q0 => updated_v_cache_q0);

    attn_weights_0_U : component attention_attn_weDeQ
    generic map (
        DataWidth => 32,
        AddressRange => 96,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => attn_weights_0_address0,
        ce0 => attn_weights_0_ce0,
        we0 => attn_weights_0_we0,
        d0 => attn_weights_0_d0,
        q0 => attn_weights_0_q0);

    softmax_attn_weights_U : component attention_attn_weDeQ
    generic map (
        DataWidth => 32,
        AddressRange => 96,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => softmax_attn_weights_address0,
        ce0 => softmax_attn_weights_ce0,
        we0 => softmax_attn_weights_we0,
        d0 => softmax_attn_weights_d0,
        q0 => softmax_attn_weights_q0);

    attn_output_0_U : component attention_rms_hidAem
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => attn_output_0_address0,
        ce0 => attn_output_0_ce0,
        we0 => attn_output_0_we0,
        d0 => attn_output_0_d0,
        q0 => attn_output_0_q0);

    attn_output_2D_U : component attention_rms_hidAem
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => attn_output_2D_address0,
        ce0 => attn_output_2D_ce0,
        we0 => attn_output_2D_we0,
        d0 => attn_output_2D_d0,
        q0 => attn_output_2D_q0);

    rms_attn_output_0_U : component attention_rms_hidAem
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rms_attn_output_0_address0,
        ce0 => rms_attn_output_0_ce0,
        we0 => rms_attn_output_0_we0,
        d0 => rms_attn_output_0_d0,
        q0 => rms_attn_output_0_q0);

    grp_softmax_fu_764 : component softmax
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_softmax_fu_764_ap_start,
        ap_done => grp_softmax_fu_764_ap_done,
        ap_idle => grp_softmax_fu_764_ap_idle,
        ap_ready => grp_softmax_fu_764_ap_ready,
        v219_0_address0 => grp_softmax_fu_764_v219_0_address0,
        v219_0_ce0 => grp_softmax_fu_764_v219_0_ce0,
        v219_0_q0 => attn_weights_0_q0,
        v220_0_address0 => grp_softmax_fu_764_v220_0_address0,
        v220_0_ce0 => grp_softmax_fu_764_v220_0_ce0,
        v220_0_we0 => grp_softmax_fu_764_v220_0_we0,
        v220_0_d0 => grp_softmax_fu_764_v220_0_d0,
        v220_0_q0 => softmax_attn_weights_q0);

    grp_rms_norm_fu_784 : component rms_norm
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_rms_norm_fu_784_ap_start,
        ap_done => grp_rms_norm_fu_784_ap_done,
        ap_idle => grp_rms_norm_fu_784_ap_idle,
        ap_ready => grp_rms_norm_fu_784_ap_ready,
        v0_address0 => grp_rms_norm_fu_784_v0_address0,
        v0_ce0 => grp_rms_norm_fu_784_v0_ce0,
        v0_q0 => grp_rms_norm_fu_784_v0_q0,
        v1_address0 => grp_rms_norm_fu_784_v1_address0,
        v1_ce0 => grp_rms_norm_fu_784_v1_ce0,
        v1_q0 => grp_rms_norm_fu_784_v1_q0,
        v3_0_address0 => grp_rms_norm_fu_784_v3_0_address0,
        v3_0_ce0 => grp_rms_norm_fu_784_v3_0_ce0,
        v3_0_we0 => grp_rms_norm_fu_784_v3_0_we0,
        v3_0_d0 => grp_rms_norm_fu_784_v3_0_d0);

    grp_apply_rotary_pos_emb_fu_808 : component apply_rotary_pos_emb
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_apply_rotary_pos_emb_fu_808_ap_start,
        ap_done => grp_apply_rotary_pos_emb_fu_808_ap_done,
        ap_idle => grp_apply_rotary_pos_emb_fu_808_ap_idle,
        ap_ready => grp_apply_rotary_pos_emb_fu_808_ap_ready,
        v157_address0 => grp_apply_rotary_pos_emb_fu_808_v157_address0,
        v157_ce0 => grp_apply_rotary_pos_emb_fu_808_v157_ce0,
        v157_q0 => v267_q0,
        v158_address0 => grp_apply_rotary_pos_emb_fu_808_v158_address0,
        v158_ce0 => grp_apply_rotary_pos_emb_fu_808_v158_ce0,
        v158_q0 => v268_q0,
        v159_0_address0 => grp_apply_rotary_pos_emb_fu_808_v159_0_address0,
        v159_0_ce0 => grp_apply_rotary_pos_emb_fu_808_v159_0_ce0,
        v159_0_we0 => grp_apply_rotary_pos_emb_fu_808_v159_0_we0,
        v159_0_d0 => grp_apply_rotary_pos_emb_fu_808_v159_0_d0,
        v160_0_address0 => grp_apply_rotary_pos_emb_fu_808_v160_0_address0,
        v160_0_ce0 => grp_apply_rotary_pos_emb_fu_808_v160_0_ce0,
        v160_0_we0 => grp_apply_rotary_pos_emb_fu_808_v160_0_we0,
        v160_0_d0 => grp_apply_rotary_pos_emb_fu_808_v160_0_d0,
        q_proj_0_address0 => grp_apply_rotary_pos_emb_fu_808_q_proj_0_address0,
        q_proj_0_ce0 => grp_apply_rotary_pos_emb_fu_808_q_proj_0_ce0,
        q_proj_0_q0 => q_proj_0_q0,
        q_proj_0_address1 => grp_apply_rotary_pos_emb_fu_808_q_proj_0_address1,
        q_proj_0_ce1 => grp_apply_rotary_pos_emb_fu_808_q_proj_0_ce1,
        q_proj_0_q1 => q_proj_0_q1,
        k_proj_0_address0 => grp_apply_rotary_pos_emb_fu_808_k_proj_0_address0,
        k_proj_0_ce0 => grp_apply_rotary_pos_emb_fu_808_k_proj_0_ce0,
        k_proj_0_q0 => k_proj_0_q0,
        k_proj_0_address1 => grp_apply_rotary_pos_emb_fu_808_k_proj_0_address1,
        k_proj_0_ce1 => grp_apply_rotary_pos_emb_fu_808_k_proj_0_ce1,
        k_proj_0_q1 => k_proj_0_q1);

    grp_quantize_activation_fu_822 : component quantize_activation
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_quantize_activation_fu_822_ap_start,
        ap_done => grp_quantize_activation_fu_822_ap_done,
        ap_idle => grp_quantize_activation_fu_822_ap_idle,
        ap_ready => grp_quantize_activation_fu_822_ap_ready,
        v22_0_address0 => grp_quantize_activation_fu_822_v22_0_address0,
        v22_0_ce0 => grp_quantize_activation_fu_822_v22_0_ce0,
        v22_0_q0 => grp_quantize_activation_fu_822_v22_0_q0,
        v24_0_address0 => grp_quantize_activation_fu_822_v24_0_address0,
        v24_0_ce0 => grp_quantize_activation_fu_822_v24_0_ce0,
        v24_0_we0 => grp_quantize_activation_fu_822_v24_0_we0,
        v24_0_d0 => grp_quantize_activation_fu_822_v24_0_d0,
        ap_return => grp_quantize_activation_fu_822_ap_return);

    grp_linear_forward_no_mu_fu_830 : component linear_forward_no_mu
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_linear_forward_no_mu_fu_830_ap_start,
        ap_done => grp_linear_forward_no_mu_fu_830_ap_done,
        ap_idle => grp_linear_forward_no_mu_fu_830_ap_idle,
        ap_ready => grp_linear_forward_no_mu_fu_830_ap_ready,
        v77_0_address0 => grp_linear_forward_no_mu_fu_830_v77_0_address0,
        v77_0_ce0 => grp_linear_forward_no_mu_fu_830_v77_0_ce0,
        v77_0_q0 => grp_linear_forward_no_mu_fu_830_v77_0_q0,
        p_read => reg_897,
        v79_address0 => grp_linear_forward_no_mu_fu_830_v79_address0,
        v79_ce0 => grp_linear_forward_no_mu_fu_830_v79_ce0,
        v79_q0 => grp_linear_forward_no_mu_fu_830_v79_q0,
        v80 => grp_linear_forward_no_mu_fu_830_v80,
        v81_address0 => grp_linear_forward_no_mu_fu_830_v81_address0,
        v81_ce0 => grp_linear_forward_no_mu_fu_830_v81_ce0,
        v81_we0 => grp_linear_forward_no_mu_fu_830_v81_we0,
        v81_d0 => grp_linear_forward_no_mu_fu_830_v81_d0,
        v81_q0 => grp_linear_forward_no_mu_fu_830_v81_q0);

    grp_GEMM_3D_float_fu_846 : component GEMM_3D_float
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_GEMM_3D_float_fu_846_ap_start,
        ap_done => grp_GEMM_3D_float_fu_846_ap_done,
        ap_idle => grp_GEMM_3D_float_fu_846_ap_idle,
        ap_ready => grp_GEMM_3D_float_fu_846_ap_ready,
        v204_0_address0 => grp_GEMM_3D_float_fu_846_v204_0_address0,
        v204_0_ce0 => grp_GEMM_3D_float_fu_846_v204_0_ce0,
        v204_0_q0 => q_embed_0_q0,
        v206_0_address0 => grp_GEMM_3D_float_fu_846_v206_0_address0,
        v206_0_ce0 => grp_GEMM_3D_float_fu_846_v206_0_ce0,
        v206_0_we0 => grp_GEMM_3D_float_fu_846_v206_0_we0,
        v206_0_d0 => grp_GEMM_3D_float_fu_846_v206_0_d0,
        v206_0_q0 => attn_weights_0_q0,
        k_proj_transposed_address0 => grp_GEMM_3D_float_fu_846_k_proj_transposed_address0,
        k_proj_transposed_ce0 => grp_GEMM_3D_float_fu_846_k_proj_transposed_ce0,
        k_proj_transposed_q0 => k_proj_transposed_q0);

    grp_GEMM_3D_float2_fu_854 : component GEMM_3D_float2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_GEMM_3D_float2_fu_854_ap_start,
        ap_done => grp_GEMM_3D_float2_fu_854_ap_done,
        ap_idle => grp_GEMM_3D_float2_fu_854_ap_idle,
        ap_ready => grp_GEMM_3D_float2_fu_854_ap_ready,
        v246_0_address0 => grp_GEMM_3D_float2_fu_854_v246_0_address0,
        v246_0_ce0 => grp_GEMM_3D_float2_fu_854_v246_0_ce0,
        v246_0_q0 => softmax_attn_weights_q0,
        v247_address0 => grp_GEMM_3D_float2_fu_854_v247_address0,
        v247_ce0 => grp_GEMM_3D_float2_fu_854_v247_ce0,
        v247_q0 => updated_v_cache_q0,
        v248_0_address0 => grp_GEMM_3D_float2_fu_854_v248_0_address0,
        v248_0_ce0 => grp_GEMM_3D_float2_fu_854_v248_0_ce0,
        v248_0_we0 => grp_GEMM_3D_float2_fu_854_v248_0_we0,
        v248_0_d0 => grp_GEMM_3D_float2_fu_854_v248_0_d0,
        v248_0_q0 => attn_output_0_q0);

    grp_cache_update_fu_861 : component cache_update
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cache_update_fu_861_ap_start,
        ap_done => grp_cache_update_fu_861_ap_done,
        ap_idle => grp_cache_update_fu_861_ap_idle,
        ap_ready => grp_cache_update_fu_861_ap_ready,
        v187_address0 => grp_cache_update_fu_861_v187_address0,
        v187_ce0 => grp_cache_update_fu_861_v187_ce0,
        v187_q0 => grp_cache_update_fu_861_v187_q0,
        v188_0_address0 => grp_cache_update_fu_861_v188_0_address0,
        v188_0_ce0 => grp_cache_update_fu_861_v188_0_ce0,
        v188_0_q0 => grp_cache_update_fu_861_v188_0_q0,
        v189_address0 => grp_cache_update_fu_861_v189_address0,
        v189_ce0 => grp_cache_update_fu_861_v189_ce0,
        v189_we0 => grp_cache_update_fu_861_v189_we0,
        v189_d0 => grp_cache_update_fu_861_v189_d0);

    grp_transpose_last_two_d_fu_871 : component transpose_last_two_d
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_transpose_last_two_d_fu_871_ap_start,
        ap_done => grp_transpose_last_two_d_fu_871_ap_done,
        ap_idle => grp_transpose_last_two_d_fu_871_ap_idle,
        ap_ready => grp_transpose_last_two_d_fu_871_ap_ready,
        v198_address0 => grp_transpose_last_two_d_fu_871_v198_address0,
        v198_ce0 => grp_transpose_last_two_d_fu_871_v198_ce0,
        v198_q0 => updated_k_cache_q0,
        v199_address0 => grp_transpose_last_two_d_fu_871_v199_address0,
        v199_ce0 => grp_transpose_last_two_d_fu_871_v199_ce0,
        v199_we0 => grp_transpose_last_two_d_fu_871_v199_we0,
        v199_d0 => grp_transpose_last_two_d_fu_871_v199_d0);

    grp_reshape_2D_to_3D_fu_878 : component reshape_2D_to_3D
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_reshape_2D_to_3D_fu_878_ap_start,
        ap_done => grp_reshape_2D_to_3D_fu_878_ap_done,
        ap_idle => grp_reshape_2D_to_3D_fu_878_ap_idle,
        ap_ready => grp_reshape_2D_to_3D_fu_878_ap_ready,
        v141_address0 => grp_reshape_2D_to_3D_fu_878_v141_address0,
        v141_ce0 => grp_reshape_2D_to_3D_fu_878_v141_ce0,
        v141_q0 => grp_reshape_2D_to_3D_fu_878_v141_q0,
        v142_0_address0 => grp_reshape_2D_to_3D_fu_878_v142_0_address0,
        v142_0_ce0 => grp_reshape_2D_to_3D_fu_878_v142_0_ce0,
        v142_0_we0 => grp_reshape_2D_to_3D_fu_878_v142_0_we0,
        v142_0_d0 => grp_reshape_2D_to_3D_fu_878_v142_0_d0);

    attention_fadd_32pcA_U88 : component attention_fadd_32pcA
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_902,
        din1 => ap_const_lv32_0,
        ce => ap_const_logic_1,
        dout => grp_fu_887_p2);

    attention_fdiv_32rcU_U89 : component attention_fdiv_32rcU
    generic map (
        ID => 1,
        NUM_STAGE => 16,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_902,
        din1 => ap_const_lv32_411CC471,
        ce => ap_const_logic_1,
        dout => grp_fu_892_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_GEMM_3D_float2_fu_854_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_GEMM_3D_float2_fu_854_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln622_fu_1577_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state64))) then 
                    grp_GEMM_3D_float2_fu_854_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_GEMM_3D_float2_fu_854_ap_ready = ap_const_logic_1)) then 
                    grp_GEMM_3D_float2_fu_854_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_GEMM_3D_float_fu_846_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_GEMM_3D_float_fu_846_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln575_fu_1342_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
                    grp_GEMM_3D_float_fu_846_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_GEMM_3D_float_fu_846_ap_ready = ap_const_logic_1)) then 
                    grp_GEMM_3D_float_fu_846_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_apply_rotary_pos_emb_fu_808_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_apply_rotary_pos_emb_fu_808_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln539_fu_1040_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                    grp_apply_rotary_pos_emb_fu_808_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_apply_rotary_pos_emb_fu_808_ap_ready = ap_const_logic_1)) then 
                    grp_apply_rotary_pos_emb_fu_808_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cache_update_fu_861_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_cache_update_fu_861_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state28) or ((icmp_ln556_fu_1223_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24)))) then 
                    grp_cache_update_fu_861_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cache_update_fu_861_ap_ready = ap_const_logic_1)) then 
                    grp_cache_update_fu_861_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_linear_forward_no_mu_fu_830_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_linear_forward_no_mu_fu_830_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10) or ((icmp_ln664_fu_1786_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state75)) or ((icmp_ln496_fu_959_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
                    grp_linear_forward_no_mu_fu_830_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_linear_forward_no_mu_fu_830_ap_ready = ap_const_logic_1)) then 
                    grp_linear_forward_no_mu_fu_830_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_quantize_activation_fu_822_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_quantize_activation_fu_822_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    grp_quantize_activation_fu_822_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_quantize_activation_fu_822_ap_ready = ap_const_logic_1)) then 
                    grp_quantize_activation_fu_822_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_reshape_2D_to_3D_fu_878_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_reshape_2D_to_3D_fu_878_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                    grp_reshape_2D_to_3D_fu_878_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_reshape_2D_to_3D_fu_878_ap_ready = ap_const_logic_1)) then 
                    grp_reshape_2D_to_3D_fu_878_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_rms_norm_fu_784_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_rms_norm_fu_784_ap_start_reg <= ap_const_logic_0;
            else
                if ((((icmp_ln646_fu_1769_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state71)) or ((icmp_ln465_fu_908_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
                    grp_rms_norm_fu_784_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_rms_norm_fu_784_ap_ready = ap_const_logic_1)) then 
                    grp_rms_norm_fu_784_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_softmax_fu_764_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_softmax_fu_764_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln613_fu_1513_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state61))) then 
                    grp_softmax_fu_764_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_softmax_fu_764_ap_ready = ap_const_logic_1)) then 
                    grp_softmax_fu_764_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_transpose_last_two_d_fu_871_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_transpose_last_two_d_fu_871_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
                    grp_transpose_last_two_d_fu_871_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_transpose_last_two_d_fu_871_ap_ready = ap_const_logic_1)) then 
                    grp_transpose_last_two_d_fu_871_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    d4_0_0_reg_731_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
                d4_0_0_reg_731 <= add_ln638_reg_2106;
            elsif (((icmp_ln637_fu_1658_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state68))) then 
                d4_0_0_reg_731 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    h6_0_reg_654_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln585_fu_1406_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33))) then 
                h6_0_reg_654 <= ap_const_lv5_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
                h6_0_reg_654 <= h6_reg_2020;
            end if; 
        end if;
    end process;

    h7_0_0_reg_720_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln638_fu_1734_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state69))) then 
                h7_0_0_reg_720 <= add_ln637_reg_2088;
            elsif (((icmp_ln632_fu_1641_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state67))) then 
                h7_0_0_reg_720 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    i10_0_reg_632_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln587_fu_1444_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
                i10_0_reg_632 <= i10_reg_1989;
            elsif (((grp_GEMM_3D_float_fu_846_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
                i10_0_reg_632 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    k9_0_0_reg_643_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
                k9_0_0_reg_643 <= add_ln587_reg_2002;
            elsif (((icmp_ln585_fu_1406_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33))) then 
                k9_0_0_reg_643 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    v278_0_0_reg_456_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                v278_0_0_reg_456 <= ap_const_lv11_0;
            elsif (((icmp_ln465_fu_908_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                v278_0_0_reg_456 <= add_ln465_fu_914_p2;
            end if; 
        end if;
    end process;

    v287_0_0_reg_467_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_quantize_activation_fu_822_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                v287_0_0_reg_467 <= ap_const_lv11_0;
            elsif (((icmp_ln484_fu_925_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                v287_0_0_reg_467 <= add_ln484_fu_931_p2;
            end if; 
        end if;
    end process;

    v290_0_0_reg_478_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln484_fu_925_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                v290_0_0_reg_478 <= ap_const_lv11_0;
            elsif (((icmp_ln490_fu_942_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                v290_0_0_reg_478 <= add_ln490_fu_948_p2;
            end if; 
        end if;
    end process;

    v293_0_0_reg_489_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln490_fu_942_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                v293_0_0_reg_489 <= ap_const_lv11_0;
            elsif (((icmp_ln496_fu_959_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                v293_0_0_reg_489 <= add_ln496_fu_965_p2;
            end if; 
        end if;
    end process;

    v307_0_reg_500_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln533_fu_1014_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                v307_0_reg_500 <= v307_reg_1858;
            elsif (((grp_reshape_2D_to_3D_fu_878_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                v307_0_reg_500 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    v309_0_0_reg_511_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln531_fu_976_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                v309_0_0_reg_511 <= ap_const_lv7_0;
            elsif (((icmp_ln533_fu_1014_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                v309_0_0_reg_511 <= add_ln533_fu_1020_p2;
            end if; 
        end if;
    end process;

    v311_0_reg_522_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln531_fu_976_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                v311_0_reg_522 <= ap_const_lv5_0;
            elsif (((icmp_ln541_fu_1078_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                v311_0_reg_522 <= v311_reg_1879;
            end if; 
        end if;
    end process;

    v313_0_0_reg_533_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln539_fu_1040_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                v313_0_0_reg_533 <= ap_const_lv7_0;
            elsif (((icmp_ln541_fu_1078_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                v313_0_0_reg_533 <= add_ln541_fu_1084_p2;
            end if; 
        end if;
    end process;

    v315_0_reg_544_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln549_fu_1150_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                v315_0_reg_544 <= v315_reg_1900;
            elsif (((grp_apply_rotary_pos_emb_fu_808_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                v315_0_reg_544 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    v316_0_reg_555_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln550_fu_1197_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                v316_0_reg_555 <= v316_reg_1913;
            elsif (((icmp_ln548_fu_1104_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                v316_0_reg_555 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    v317_0_reg_566_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln549_fu_1150_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                v317_0_reg_566 <= ap_const_lv7_0;
            elsif (((icmp_ln550_fu_1197_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                v317_0_reg_566 <= v317_fu_1203_p2;
            end if; 
        end if;
    end process;

    v319_0_reg_577_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln548_fu_1104_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                v319_0_reg_577 <= ap_const_lv5_0;
            elsif (((icmp_ln557_fu_1269_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
                v319_0_reg_577 <= v319_reg_1934;
            end if; 
        end if;
    end process;

    v320_0_reg_588_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln558_fu_1316_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                v320_0_reg_588 <= v320_reg_1947;
            elsif (((icmp_ln556_fu_1223_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                v320_0_reg_588 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    v321_0_reg_599_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln557_fu_1269_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
                v321_0_reg_599 <= ap_const_lv7_0;
            elsif (((icmp_ln558_fu_1316_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                v321_0_reg_599 <= v321_fu_1322_p2;
            end if; 
        end if;
    end process;

    v327_0_reg_610_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln577_fu_1380_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
                v327_0_reg_610 <= v327_reg_1968;
            elsif (((ap_const_boolean_0 = ap_block_state29_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                v327_0_reg_610 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    v329_0_0_reg_621_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln575_fu_1342_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
                v329_0_0_reg_621 <= ap_const_lv3_0;
            elsif (((icmp_ln577_fu_1380_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
                v329_0_0_reg_621 <= add_ln577_fu_1386_p2;
            end if; 
        end if;
    end process;

    v347_0_reg_665_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln602_fu_1470_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53))) then 
                v347_0_reg_665 <= ap_const_lv5_0;
            elsif (((icmp_ln615_fu_1551_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state62))) then 
                v347_0_reg_665 <= v347_reg_2038;
            end if; 
        end if;
    end process;

    v349_0_0_reg_676_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln613_fu_1513_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state61))) then 
                v349_0_0_reg_676 <= ap_const_lv3_0;
            elsif (((icmp_ln615_fu_1551_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state62))) then 
                v349_0_0_reg_676 <= add_ln615_fu_1557_p2;
            end if; 
        end if;
    end process;

    v351_0_reg_687_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln624_fu_1615_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state65))) then 
                v351_0_reg_687 <= v351_reg_2059;
            elsif (((grp_softmax_fu_764_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state63))) then 
                v351_0_reg_687 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    v353_0_0_reg_698_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln622_fu_1577_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state64))) then 
                v353_0_0_reg_698 <= ap_const_lv7_0;
            elsif (((icmp_ln624_fu_1615_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state65))) then 
                v353_0_0_reg_698 <= add_ln624_fu_1621_p2;
            end if; 
        end if;
    end process;

    v356_0_0_reg_709_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_GEMM_3D_float2_fu_854_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state66))) then 
                v356_0_0_reg_709 <= ap_const_lv11_0;
            elsif (((icmp_ln632_fu_1641_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state67))) then 
                v356_0_0_reg_709 <= add_ln632_fu_1647_p2;
            end if; 
        end if;
    end process;

    v363_0_0_reg_742_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln637_fu_1658_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state68))) then 
                v363_0_0_reg_742 <= ap_const_lv11_0;
            elsif (((icmp_ln646_fu_1769_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                v363_0_0_reg_742 <= add_ln646_fu_1775_p2;
            end if; 
        end if;
    end process;

    v371_0_0_reg_753_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_quantize_activation_fu_822_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state74))) then 
                v371_0_0_reg_753 <= ap_const_lv11_0;
            elsif (((icmp_ln664_fu_1786_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state75))) then 
                v371_0_0_reg_753 <= add_ln664_fu_1792_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                add_ln587_reg_2002 <= add_ln587_fu_1450_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state68)) then
                add_ln637_reg_2088 <= add_ln637_fu_1664_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state69)) then
                add_ln638_reg_2106 <= add_ln638_fu_1740_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln638_fu_1734_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state69))) then
                add_ln640_reg_2116 <= add_ln640_fu_1756_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln602_fu_1470_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state53))) then
                    attn_weights_0_addr_1_reg_2025(6 downto 1) <= sext_ln606_fu_1508_p1(7 - 1 downto 0)(6 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln587_fu_1444_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34))) then
                attn_weights_0_addr_2_reg_2007 <= sext_ln588_fu_1465_p1(7 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state53)) then
                h6_reg_2020 <= h6_fu_1476_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                i10_reg_1989 <= i10_fu_1412_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((grp_quantize_activation_fu_822_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state74)) or ((grp_quantize_activation_fu_822_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then
                reg_897 <= grp_quantize_activation_fu_822_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state35))) then
                reg_902 <= attn_weights_0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln548_fu_1104_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    sext_ln551_reg_1905(9 downto 1) <= sext_ln551_fu_1146_p1(9 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln556_fu_1223_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    sext_ln559_reg_1939(9 downto 1) <= sext_ln559_fu_1265_p1(9 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln531_fu_976_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    sub_ln534_reg_1863(11 downto 5) <= sub_ln534_fu_1008_p2(11 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln539_fu_1040_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    sub_ln542_reg_1884(11 downto 5) <= sub_ln542_fu_1072_p2(11 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln549_fu_1150_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    sub_ln551_1_reg_1918(14 downto 5) <= sub_ln551_1_fu_1191_p2(14 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln557_fu_1269_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    sub_ln559_1_reg_1952(14 downto 5) <= sub_ln559_1_fu_1310_p2(14 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln575_fu_1342_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                    sub_ln578_reg_1973(7 downto 1) <= sub_ln578_fu_1374_p2(7 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln585_fu_1406_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                    sub_ln588_reg_1994(7 downto 1) <= sub_ln588_fu_1438_p2(7 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln613_fu_1513_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state61))) then
                    sub_ln616_reg_2043(7 downto 1) <= sub_ln616_fu_1545_p2(7 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln622_fu_1577_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state64))) then
                    sub_ln625_reg_2064(11 downto 5) <= sub_ln625_fu_1609_p2(11 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln637_fu_1658_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state68))) then
                    sub_ln639_reg_2093(11 downto 5) <= sub_ln639_fu_1690_p2(11 downto 5);
                    sub_ln640_reg_2098(11 downto 5) <= sub_ln640_fu_1724_p2(11 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                v307_reg_1858 <= v307_fu_982_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                v311_reg_1879 <= v311_fu_1046_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                v315_reg_1900 <= v315_fu_1110_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                v316_reg_1913 <= v316_fu_1156_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                v319_reg_1934 <= v319_fu_1229_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                v320_reg_1947 <= v320_fu_1275_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then
                v327_reg_1968 <= v327_fu_1348_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state61)) then
                v347_reg_2038 <= v347_fu_1519_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state64)) then
                v351_reg_2059 <= v351_fu_1583_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state59)) then
                v7_reg_2030 <= grp_fu_887_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state51)) then
                v_reg_2012 <= grp_fu_892_p2;
            end if;
        end if;
    end process;
    sub_ln534_reg_1863(4 downto 0) <= "00000";
    sub_ln542_reg_1884(4 downto 0) <= "00000";
    sext_ln551_reg_1905(0) <= '0';
    sub_ln551_1_reg_1918(4 downto 0) <= "00000";
    sext_ln559_reg_1939(0) <= '0';
    sub_ln559_1_reg_1952(4 downto 0) <= "00000";
    sub_ln578_reg_1973(0) <= '0';
    sub_ln588_reg_1994(0) <= '0';
    attn_weights_0_addr_1_reg_2025(0) <= '0';
    sub_ln616_reg_2043(0) <= '0';
    sub_ln625_reg_2064(4 downto 0) <= "00000";
    sub_ln639_reg_2093(4 downto 0) <= "00000";
    sub_ln640_reg_2098(4 downto 0) <= "00000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state5, grp_quantize_activation_fu_822_ap_done, ap_CS_fsm_state74, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state16, icmp_ln531_fu_976_p2, ap_CS_fsm_state17, ap_CS_fsm_state18, icmp_ln539_fu_1040_p2, ap_CS_fsm_state19, ap_CS_fsm_state21, icmp_ln548_fu_1104_p2, ap_CS_fsm_state22, icmp_ln549_fu_1150_p2, ap_CS_fsm_state23, ap_CS_fsm_state24, icmp_ln556_fu_1223_p2, ap_CS_fsm_state25, icmp_ln557_fu_1269_p2, ap_CS_fsm_state26, ap_CS_fsm_state30, icmp_ln575_fu_1342_p2, ap_CS_fsm_state31, ap_CS_fsm_state33, icmp_ln585_fu_1406_p2, ap_CS_fsm_state34, icmp_ln587_fu_1444_p2, ap_CS_fsm_state53, icmp_ln602_fu_1470_p2, ap_CS_fsm_state61, icmp_ln613_fu_1513_p2, ap_CS_fsm_state62, ap_CS_fsm_state64, icmp_ln622_fu_1577_p2, ap_CS_fsm_state65, ap_CS_fsm_state67, ap_CS_fsm_state68, icmp_ln637_fu_1658_p2, ap_CS_fsm_state69, icmp_ln638_fu_1734_p2, ap_CS_fsm_state71, ap_CS_fsm_state75, grp_softmax_fu_764_ap_done, grp_rms_norm_fu_784_ap_done, grp_apply_rotary_pos_emb_fu_808_ap_done, grp_linear_forward_no_mu_fu_830_ap_done, grp_GEMM_3D_float_fu_846_ap_done, grp_GEMM_3D_float2_fu_854_ap_done, grp_cache_update_fu_861_ap_done, grp_reshape_2D_to_3D_fu_878_ap_done, icmp_ln465_fu_908_p2, icmp_ln484_fu_925_p2, icmp_ln490_fu_942_p2, icmp_ln496_fu_959_p2, ap_CS_fsm_state15, icmp_ln533_fu_1014_p2, icmp_ln541_fu_1078_p2, ap_CS_fsm_state20, icmp_ln550_fu_1197_p2, icmp_ln558_fu_1316_p2, ap_CS_fsm_state29, ap_block_state29_on_subcall_done, icmp_ln577_fu_1380_p2, ap_CS_fsm_state32, icmp_ln615_fu_1551_p2, ap_CS_fsm_state63, icmp_ln624_fu_1615_p2, icmp_ln632_fu_1641_p2, ap_CS_fsm_state66, icmp_ln646_fu_1769_p2, icmp_ln664_fu_1786_p2, ap_CS_fsm_state3, ap_CS_fsm_state72, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state76, ap_CS_fsm_state27, ap_block_state11_on_subcall_done, ap_block_state13_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln465_fu_908_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((grp_rms_norm_fu_784_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((grp_quantize_activation_fu_822_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((icmp_ln484_fu_925_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((icmp_ln490_fu_942_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((icmp_ln496_fu_959_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                if (((grp_linear_forward_no_mu_fu_830_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_boolean_0 = ap_block_state11_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_boolean_0 = ap_block_state13_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((grp_reshape_2D_to_3D_fu_878_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                if (((icmp_ln531_fu_976_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state17 => 
                if (((icmp_ln533_fu_1014_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                if (((icmp_ln539_fu_1040_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state19 => 
                if (((icmp_ln541_fu_1078_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                if (((grp_apply_rotary_pos_emb_fu_808_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                if (((icmp_ln548_fu_1104_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state22 => 
                if (((icmp_ln549_fu_1150_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state23 => 
                if (((icmp_ln550_fu_1197_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state24 => 
                if (((icmp_ln556_fu_1223_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state25 => 
                if (((icmp_ln557_fu_1269_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state26 => 
                if (((icmp_ln558_fu_1316_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state27 => 
                if (((grp_cache_update_fu_861_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                if (((ap_const_boolean_0 = ap_block_state29_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state30 => 
                if (((icmp_ln575_fu_1342_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_state31 => 
                if (((icmp_ln577_fu_1380_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state32 => 
                if (((grp_GEMM_3D_float_fu_846_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state32))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_state33 => 
                if (((icmp_ln585_fu_1406_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                    ap_NS_fsm <= ap_ST_fsm_state53;
                else
                    ap_NS_fsm <= ap_ST_fsm_state34;
                end if;
            when ap_ST_fsm_state34 => 
                if (((icmp_ln587_fu_1444_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state34))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state35;
                end if;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state53 => 
                if (((icmp_ln602_fu_1470_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53))) then
                    ap_NS_fsm <= ap_ST_fsm_state61;
                else
                    ap_NS_fsm <= ap_ST_fsm_state54;
                end if;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state61 => 
                if (((icmp_ln613_fu_1513_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state61))) then
                    ap_NS_fsm <= ap_ST_fsm_state62;
                else
                    ap_NS_fsm <= ap_ST_fsm_state63;
                end if;
            when ap_ST_fsm_state62 => 
                if (((icmp_ln615_fu_1551_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state62))) then
                    ap_NS_fsm <= ap_ST_fsm_state61;
                else
                    ap_NS_fsm <= ap_ST_fsm_state62;
                end if;
            when ap_ST_fsm_state63 => 
                if (((grp_softmax_fu_764_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state63))) then
                    ap_NS_fsm <= ap_ST_fsm_state64;
                else
                    ap_NS_fsm <= ap_ST_fsm_state63;
                end if;
            when ap_ST_fsm_state64 => 
                if (((icmp_ln622_fu_1577_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state64))) then
                    ap_NS_fsm <= ap_ST_fsm_state65;
                else
                    ap_NS_fsm <= ap_ST_fsm_state66;
                end if;
            when ap_ST_fsm_state65 => 
                if (((icmp_ln624_fu_1615_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state65))) then
                    ap_NS_fsm <= ap_ST_fsm_state64;
                else
                    ap_NS_fsm <= ap_ST_fsm_state65;
                end if;
            when ap_ST_fsm_state66 => 
                if (((grp_GEMM_3D_float2_fu_854_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state66))) then
                    ap_NS_fsm <= ap_ST_fsm_state67;
                else
                    ap_NS_fsm <= ap_ST_fsm_state66;
                end if;
            when ap_ST_fsm_state67 => 
                if (((icmp_ln632_fu_1641_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state67))) then
                    ap_NS_fsm <= ap_ST_fsm_state68;
                else
                    ap_NS_fsm <= ap_ST_fsm_state67;
                end if;
            when ap_ST_fsm_state68 => 
                if (((icmp_ln637_fu_1658_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state68))) then
                    ap_NS_fsm <= ap_ST_fsm_state71;
                else
                    ap_NS_fsm <= ap_ST_fsm_state69;
                end if;
            when ap_ST_fsm_state69 => 
                if (((icmp_ln638_fu_1734_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state69))) then
                    ap_NS_fsm <= ap_ST_fsm_state68;
                else
                    ap_NS_fsm <= ap_ST_fsm_state70;
                end if;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state71 => 
                if (((icmp_ln646_fu_1769_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then
                    ap_NS_fsm <= ap_ST_fsm_state71;
                else
                    ap_NS_fsm <= ap_ST_fsm_state72;
                end if;
            when ap_ST_fsm_state72 => 
                if (((grp_rms_norm_fu_784_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state72))) then
                    ap_NS_fsm <= ap_ST_fsm_state73;
                else
                    ap_NS_fsm <= ap_ST_fsm_state72;
                end if;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                if (((grp_quantize_activation_fu_822_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state74))) then
                    ap_NS_fsm <= ap_ST_fsm_state75;
                else
                    ap_NS_fsm <= ap_ST_fsm_state74;
                end if;
            when ap_ST_fsm_state75 => 
                if (((icmp_ln664_fu_1786_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state75))) then
                    ap_NS_fsm <= ap_ST_fsm_state75;
                else
                    ap_NS_fsm <= ap_ST_fsm_state76;
                end if;
            when ap_ST_fsm_state76 => 
                if (((grp_linear_forward_no_mu_fu_830_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state76))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state76;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln465_fu_914_p2 <= std_logic_vector(unsigned(v278_0_0_reg_456) + unsigned(ap_const_lv11_1));
    add_ln484_fu_931_p2 <= std_logic_vector(unsigned(v287_0_0_reg_467) + unsigned(ap_const_lv11_1));
    add_ln490_fu_948_p2 <= std_logic_vector(unsigned(v290_0_0_reg_478) + unsigned(ap_const_lv11_1));
    add_ln496_fu_965_p2 <= std_logic_vector(unsigned(v293_0_0_reg_489) + unsigned(ap_const_lv11_1));
    add_ln533_fu_1020_p2 <= std_logic_vector(unsigned(v309_0_0_reg_511) + unsigned(ap_const_lv7_1));
    add_ln534_fu_1030_p2 <= std_logic_vector(unsigned(sub_ln534_reg_1863) + unsigned(zext_ln534_1_fu_1026_p1));
    add_ln541_fu_1084_p2 <= std_logic_vector(unsigned(v313_0_0_reg_533) + unsigned(ap_const_lv7_1));
    add_ln542_fu_1094_p2 <= std_logic_vector(unsigned(sub_ln542_reg_1884) + unsigned(zext_ln542_1_fu_1090_p1));
    add_ln551_1_fu_1213_p2 <= std_logic_vector(unsigned(sub_ln551_1_reg_1918) + unsigned(zext_ln551_3_fu_1209_p1));
    add_ln551_fu_1166_p2 <= std_logic_vector(unsigned(zext_ln551_2_fu_1162_p1) + unsigned(sext_ln551_reg_1905));
    add_ln559_1_fu_1332_p2 <= std_logic_vector(unsigned(sub_ln559_1_reg_1952) + unsigned(zext_ln559_3_fu_1328_p1));
    add_ln559_fu_1285_p2 <= std_logic_vector(unsigned(zext_ln559_2_fu_1281_p1) + unsigned(sext_ln559_reg_1939));
    add_ln577_fu_1386_p2 <= std_logic_vector(unsigned(v329_0_0_reg_621) + unsigned(ap_const_lv3_1));
    add_ln578_fu_1396_p2 <= std_logic_vector(unsigned(sub_ln578_reg_1973) + unsigned(zext_ln578_1_fu_1392_p1));
    add_ln587_fu_1450_p2 <= std_logic_vector(unsigned(k9_0_0_reg_643) + unsigned(ap_const_lv3_1));
    add_ln588_fu_1460_p2 <= std_logic_vector(unsigned(sub_ln588_reg_1994) + unsigned(zext_ln588_1_fu_1456_p1));
    add_ln615_fu_1557_p2 <= std_logic_vector(unsigned(v349_0_0_reg_676) + unsigned(ap_const_lv3_1));
    add_ln616_fu_1567_p2 <= std_logic_vector(unsigned(sub_ln616_reg_2043) + unsigned(zext_ln616_1_fu_1563_p1));
    add_ln624_fu_1621_p2 <= std_logic_vector(unsigned(v353_0_0_reg_698) + unsigned(ap_const_lv7_1));
    add_ln625_fu_1631_p2 <= std_logic_vector(unsigned(sub_ln625_reg_2064) + unsigned(zext_ln625_1_fu_1627_p1));
    add_ln632_fu_1647_p2 <= std_logic_vector(unsigned(v356_0_0_reg_709) + unsigned(ap_const_lv11_1));
    add_ln637_fu_1664_p2 <= std_logic_vector(unsigned(h7_0_0_reg_720) + unsigned(ap_const_lv5_1));
    add_ln638_fu_1740_p2 <= std_logic_vector(unsigned(d4_0_0_reg_731) + unsigned(ap_const_lv7_1));
    add_ln639_fu_1746_p2 <= std_logic_vector(unsigned(sub_ln639_reg_2093) + unsigned(zext_ln638_fu_1730_p1));
    add_ln640_fu_1756_p2 <= std_logic_vector(unsigned(zext_ln638_fu_1730_p1) + unsigned(sub_ln640_reg_2098));
    add_ln646_fu_1775_p2 <= std_logic_vector(unsigned(v363_0_0_reg_742) + unsigned(ap_const_lv11_1));
    add_ln664_fu_1792_p2 <= std_logic_vector(unsigned(v371_0_0_reg_753) + unsigned(ap_const_lv11_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state59 <= ap_CS_fsm(58);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62);
    ap_CS_fsm_state64 <= ap_CS_fsm(63);
    ap_CS_fsm_state65 <= ap_CS_fsm(64);
    ap_CS_fsm_state66 <= ap_CS_fsm(65);
    ap_CS_fsm_state67 <= ap_CS_fsm(66);
    ap_CS_fsm_state68 <= ap_CS_fsm(67);
    ap_CS_fsm_state69 <= ap_CS_fsm(68);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state70 <= ap_CS_fsm(69);
    ap_CS_fsm_state71 <= ap_CS_fsm(70);
    ap_CS_fsm_state72 <= ap_CS_fsm(71);
    ap_CS_fsm_state73 <= ap_CS_fsm(72);
    ap_CS_fsm_state74 <= ap_CS_fsm(73);
    ap_CS_fsm_state75 <= ap_CS_fsm(74);
    ap_CS_fsm_state76 <= ap_CS_fsm(75);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state11_on_subcall_done_assign_proc : process(grp_linear_forward_no_mu_fu_830_ap_done, grp_reshape_2D_to_3D_fu_878_ap_done)
    begin
                ap_block_state11_on_subcall_done <= ((grp_reshape_2D_to_3D_fu_878_ap_done = ap_const_logic_0) or (grp_linear_forward_no_mu_fu_830_ap_done = ap_const_logic_0));
    end process;


    ap_block_state13_on_subcall_done_assign_proc : process(grp_linear_forward_no_mu_fu_830_ap_done, grp_reshape_2D_to_3D_fu_878_ap_done)
    begin
                ap_block_state13_on_subcall_done <= ((grp_reshape_2D_to_3D_fu_878_ap_done = ap_const_logic_0) or (grp_linear_forward_no_mu_fu_830_ap_done = ap_const_logic_0));
    end process;


    ap_block_state29_on_subcall_done_assign_proc : process(grp_cache_update_fu_861_ap_done, grp_transpose_last_two_d_fu_871_ap_done)
    begin
                ap_block_state29_on_subcall_done <= ((grp_transpose_last_two_d_fu_871_ap_done = ap_const_logic_0) or (grp_cache_update_fu_861_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(grp_linear_forward_no_mu_fu_830_ap_done, ap_CS_fsm_state76)
    begin
        if (((grp_linear_forward_no_mu_fu_830_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_linear_forward_no_mu_fu_830_ap_done, ap_CS_fsm_state76)
    begin
        if (((grp_linear_forward_no_mu_fu_830_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state76))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    attn_output_0_address0_assign_proc : process(ap_CS_fsm_state65, ap_CS_fsm_state69, grp_GEMM_3D_float2_fu_854_v248_0_address0, ap_CS_fsm_state66, sext_ln625_fu_1636_p1, sext_ln639_fu_1751_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            attn_output_0_address0 <= sext_ln639_fu_1751_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            attn_output_0_address0 <= sext_ln625_fu_1636_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            attn_output_0_address0 <= grp_GEMM_3D_float2_fu_854_v248_0_address0;
        else 
            attn_output_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    attn_output_0_ce0_assign_proc : process(ap_CS_fsm_state65, ap_CS_fsm_state69, grp_GEMM_3D_float2_fu_854_v248_0_ce0, ap_CS_fsm_state66)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state65))) then 
            attn_output_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            attn_output_0_ce0 <= grp_GEMM_3D_float2_fu_854_v248_0_ce0;
        else 
            attn_output_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    attn_output_0_d0_assign_proc : process(ap_CS_fsm_state65, grp_GEMM_3D_float2_fu_854_v248_0_d0, ap_CS_fsm_state66)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            attn_output_0_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            attn_output_0_d0 <= grp_GEMM_3D_float2_fu_854_v248_0_d0;
        else 
            attn_output_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    attn_output_0_we0_assign_proc : process(ap_CS_fsm_state65, grp_GEMM_3D_float2_fu_854_v248_0_we0, icmp_ln624_fu_1615_p2, ap_CS_fsm_state66)
    begin
        if (((icmp_ln624_fu_1615_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state65))) then 
            attn_output_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            attn_output_0_we0 <= grp_GEMM_3D_float2_fu_854_v248_0_we0;
        else 
            attn_output_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    attn_output_2D_address0_assign_proc : process(ap_CS_fsm_state67, grp_rms_norm_fu_784_v0_address0, ap_CS_fsm_state70, ap_CS_fsm_state72, zext_ln633_fu_1653_p1, zext_ln640_fu_1764_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            attn_output_2D_address0 <= zext_ln640_fu_1764_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            attn_output_2D_address0 <= zext_ln633_fu_1653_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            attn_output_2D_address0 <= grp_rms_norm_fu_784_v0_address0;
        else 
            attn_output_2D_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    attn_output_2D_ce0_assign_proc : process(ap_CS_fsm_state67, grp_rms_norm_fu_784_v0_ce0, ap_CS_fsm_state70, ap_CS_fsm_state72)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state70))) then 
            attn_output_2D_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            attn_output_2D_ce0 <= grp_rms_norm_fu_784_v0_ce0;
        else 
            attn_output_2D_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    attn_output_2D_d0_assign_proc : process(ap_CS_fsm_state67, attn_output_0_q0, ap_CS_fsm_state70)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            attn_output_2D_d0 <= attn_output_0_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            attn_output_2D_d0 <= ap_const_lv32_0;
        else 
            attn_output_2D_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    attn_output_2D_we0_assign_proc : process(ap_CS_fsm_state67, icmp_ln632_fu_1641_p2, ap_CS_fsm_state70)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state70) or ((icmp_ln632_fu_1641_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state67)))) then 
            attn_output_2D_we0 <= ap_const_logic_1;
        else 
            attn_output_2D_we0 <= ap_const_logic_0;
        end if; 
    end process;


    attn_weights_0_address0_assign_proc : process(ap_CS_fsm_state31, ap_CS_fsm_state34, attn_weights_0_addr_2_reg_2007, ap_CS_fsm_state53, attn_weights_0_addr_1_reg_2025, grp_softmax_fu_764_v219_0_address0, grp_GEMM_3D_float_fu_846_v206_0_address0, ap_CS_fsm_state32, ap_CS_fsm_state52, ap_CS_fsm_state60, ap_CS_fsm_state63, sext_ln578_fu_1401_p1, sext_ln588_fu_1465_p1, sext_ln606_fu_1508_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            attn_weights_0_address0 <= attn_weights_0_addr_1_reg_2025;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            attn_weights_0_address0 <= sext_ln606_fu_1508_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            attn_weights_0_address0 <= attn_weights_0_addr_2_reg_2007;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            attn_weights_0_address0 <= sext_ln588_fu_1465_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            attn_weights_0_address0 <= sext_ln578_fu_1401_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            attn_weights_0_address0 <= grp_GEMM_3D_float_fu_846_v206_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            attn_weights_0_address0 <= grp_softmax_fu_764_v219_0_address0;
        else 
            attn_weights_0_address0 <= "XXXXXXX";
        end if; 
    end process;


    attn_weights_0_ce0_assign_proc : process(ap_CS_fsm_state31, ap_CS_fsm_state34, ap_CS_fsm_state53, grp_softmax_fu_764_v219_0_ce0, grp_GEMM_3D_float_fu_846_v206_0_ce0, ap_CS_fsm_state32, ap_CS_fsm_state52, ap_CS_fsm_state60, ap_CS_fsm_state63)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state31))) then 
            attn_weights_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            attn_weights_0_ce0 <= grp_GEMM_3D_float_fu_846_v206_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            attn_weights_0_ce0 <= grp_softmax_fu_764_v219_0_ce0;
        else 
            attn_weights_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    attn_weights_0_d0_assign_proc : process(ap_CS_fsm_state31, v_reg_2012, v7_reg_2030, grp_GEMM_3D_float_fu_846_v206_0_d0, ap_CS_fsm_state32, ap_CS_fsm_state52, ap_CS_fsm_state60)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            attn_weights_0_d0 <= v7_reg_2030;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            attn_weights_0_d0 <= v_reg_2012;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            attn_weights_0_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            attn_weights_0_d0 <= grp_GEMM_3D_float_fu_846_v206_0_d0;
        else 
            attn_weights_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    attn_weights_0_we0_assign_proc : process(ap_CS_fsm_state31, grp_GEMM_3D_float_fu_846_v206_0_we0, icmp_ln577_fu_1380_p2, ap_CS_fsm_state32, ap_CS_fsm_state52, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state52) or ((icmp_ln577_fu_1380_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31)))) then 
            attn_weights_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            attn_weights_0_we0 <= grp_GEMM_3D_float_fu_846_v206_0_we0;
        else 
            attn_weights_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_GEMM_3D_float2_fu_854_ap_start <= grp_GEMM_3D_float2_fu_854_ap_start_reg;
    grp_GEMM_3D_float_fu_846_ap_start <= grp_GEMM_3D_float_fu_846_ap_start_reg;
    grp_apply_rotary_pos_emb_fu_808_ap_start <= grp_apply_rotary_pos_emb_fu_808_ap_start_reg;
    grp_cache_update_fu_861_ap_start <= grp_cache_update_fu_861_ap_start_reg;

    grp_cache_update_fu_861_v187_q0_assign_proc : process(v271_q0, v272_q0, ap_CS_fsm_state29, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_cache_update_fu_861_v187_q0 <= v272_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_cache_update_fu_861_v187_q0 <= v271_q0;
        else 
            grp_cache_update_fu_861_v187_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_cache_update_fu_861_v188_0_q0_assign_proc : process(v_proj_0_q0, k_embed_0_q0, ap_CS_fsm_state29, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_cache_update_fu_861_v188_0_q0 <= v_proj_0_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_cache_update_fu_861_v188_0_q0 <= k_embed_0_q0;
        else 
            grp_cache_update_fu_861_v188_0_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_linear_forward_no_mu_fu_830_ap_start <= grp_linear_forward_no_mu_fu_830_ap_start_reg;

    grp_linear_forward_no_mu_fu_830_v77_0_q0_assign_proc : process(quantized_hidden_sta_q0, quantized_final_outp_q0, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state76)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            grp_linear_forward_no_mu_fu_830_v77_0_q0 <= quantized_final_outp_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_linear_forward_no_mu_fu_830_v77_0_q0 <= quantized_hidden_sta_q0;
        else 
            grp_linear_forward_no_mu_fu_830_v77_0_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_830_v79_q0_assign_proc : process(v259_q0, v261_q0, v263_q0, v265_q0, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state76)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            grp_linear_forward_no_mu_fu_830_v79_q0 <= v265_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_linear_forward_no_mu_fu_830_v79_q0 <= v263_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_linear_forward_no_mu_fu_830_v79_q0 <= v261_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_linear_forward_no_mu_fu_830_v79_q0 <= v259_q0;
        else 
            grp_linear_forward_no_mu_fu_830_v79_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_830_v80_assign_proc : process(v260, v262, v264, v266, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state76)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            grp_linear_forward_no_mu_fu_830_v80 <= v266;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_linear_forward_no_mu_fu_830_v80 <= v264;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_linear_forward_no_mu_fu_830_v80 <= v262;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_linear_forward_no_mu_fu_830_v80 <= v260;
        else 
            grp_linear_forward_no_mu_fu_830_v80 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_830_v81_q0_assign_proc : process(v274_q0, q_proj_re_q0, k_proj_re_q0, v_proj_re_q0, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state76)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            grp_linear_forward_no_mu_fu_830_v81_q0 <= v274_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_linear_forward_no_mu_fu_830_v81_q0 <= v_proj_re_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_linear_forward_no_mu_fu_830_v81_q0 <= k_proj_re_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_linear_forward_no_mu_fu_830_v81_q0 <= q_proj_re_q0;
        else 
            grp_linear_forward_no_mu_fu_830_v81_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_quantize_activation_fu_822_ap_start <= grp_quantize_activation_fu_822_ap_start_reg;

    grp_quantize_activation_fu_822_v22_0_q0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state74, rms_hidden_states_0_q0, rms_attn_output_0_q0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            grp_quantize_activation_fu_822_v22_0_q0 <= rms_attn_output_0_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_quantize_activation_fu_822_v22_0_q0 <= rms_hidden_states_0_q0;
        else 
            grp_quantize_activation_fu_822_v22_0_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_reshape_2D_to_3D_fu_878_ap_start <= grp_reshape_2D_to_3D_fu_878_ap_start_reg;

    grp_reshape_2D_to_3D_fu_878_v141_q0_assign_proc : process(q_proj_re_q0, k_proj_re_q0, v_proj_re_q0, ap_CS_fsm_state15, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_reshape_2D_to_3D_fu_878_v141_q0 <= v_proj_re_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_reshape_2D_to_3D_fu_878_v141_q0 <= k_proj_re_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_reshape_2D_to_3D_fu_878_v141_q0 <= q_proj_re_q0;
        else 
            grp_reshape_2D_to_3D_fu_878_v141_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_rms_norm_fu_784_ap_start <= grp_rms_norm_fu_784_ap_start_reg;

    grp_rms_norm_fu_784_v0_q0_assign_proc : process(v258_q0, attn_output_2D_q0, ap_CS_fsm_state3, ap_CS_fsm_state72)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            grp_rms_norm_fu_784_v0_q0 <= attn_output_2D_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_rms_norm_fu_784_v0_q0 <= v258_q0;
        else 
            grp_rms_norm_fu_784_v0_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_rms_norm_fu_784_v1_q0_assign_proc : process(v269_q0, v270_q0, ap_CS_fsm_state3, ap_CS_fsm_state72)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            grp_rms_norm_fu_784_v1_q0 <= v270_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_rms_norm_fu_784_v1_q0 <= v269_q0;
        else 
            grp_rms_norm_fu_784_v1_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_softmax_fu_764_ap_start <= grp_softmax_fu_764_ap_start_reg;
    grp_transpose_last_two_d_fu_871_ap_start <= grp_transpose_last_two_d_fu_871_ap_start_reg;
    h6_fu_1476_p2 <= std_logic_vector(unsigned(h6_0_reg_654) + unsigned(ap_const_lv5_1));
    i10_fu_1412_p2 <= std_logic_vector(unsigned(i10_0_reg_632) + unsigned(ap_const_lv5_1));
    icmp_ln465_fu_908_p2 <= "1" when (v278_0_0_reg_456 = ap_const_lv11_600) else "0";
    icmp_ln484_fu_925_p2 <= "1" when (v287_0_0_reg_467 = ap_const_lv11_600) else "0";
    icmp_ln490_fu_942_p2 <= "1" when (v290_0_0_reg_478 = ap_const_lv11_600) else "0";
    icmp_ln496_fu_959_p2 <= "1" when (v293_0_0_reg_489 = ap_const_lv11_600) else "0";
    icmp_ln531_fu_976_p2 <= "1" when (v307_0_reg_500 = ap_const_lv5_10) else "0";
    icmp_ln533_fu_1014_p2 <= "1" when (v309_0_0_reg_511 = ap_const_lv7_60) else "0";
    icmp_ln539_fu_1040_p2 <= "1" when (v311_0_reg_522 = ap_const_lv5_10) else "0";
    icmp_ln541_fu_1078_p2 <= "1" when (v313_0_0_reg_533 = ap_const_lv7_60) else "0";
    icmp_ln548_fu_1104_p2 <= "1" when (v315_0_reg_544 = ap_const_lv5_10) else "0";
    icmp_ln549_fu_1150_p2 <= "1" when (v316_0_reg_555 = ap_const_lv3_6) else "0";
    icmp_ln550_fu_1197_p2 <= "1" when (v317_0_reg_566 = ap_const_lv7_60) else "0";
    icmp_ln556_fu_1223_p2 <= "1" when (v319_0_reg_577 = ap_const_lv5_10) else "0";
    icmp_ln557_fu_1269_p2 <= "1" when (v320_0_reg_588 = ap_const_lv3_6) else "0";
    icmp_ln558_fu_1316_p2 <= "1" when (v321_0_reg_599 = ap_const_lv7_60) else "0";
    icmp_ln575_fu_1342_p2 <= "1" when (v327_0_reg_610 = ap_const_lv5_10) else "0";
    icmp_ln577_fu_1380_p2 <= "1" when (v329_0_0_reg_621 = ap_const_lv3_6) else "0";
    icmp_ln585_fu_1406_p2 <= "1" when (i10_0_reg_632 = ap_const_lv5_10) else "0";
    icmp_ln587_fu_1444_p2 <= "1" when (k9_0_0_reg_643 = ap_const_lv3_6) else "0";
    icmp_ln602_fu_1470_p2 <= "1" when (h6_0_reg_654 = ap_const_lv5_10) else "0";
    icmp_ln613_fu_1513_p2 <= "1" when (v347_0_reg_665 = ap_const_lv5_10) else "0";
    icmp_ln615_fu_1551_p2 <= "1" when (v349_0_0_reg_676 = ap_const_lv3_6) else "0";
    icmp_ln622_fu_1577_p2 <= "1" when (v351_0_reg_687 = ap_const_lv5_10) else "0";
    icmp_ln624_fu_1615_p2 <= "1" when (v353_0_0_reg_698 = ap_const_lv7_60) else "0";
    icmp_ln632_fu_1641_p2 <= "1" when (v356_0_0_reg_709 = ap_const_lv11_600) else "0";
    icmp_ln637_fu_1658_p2 <= "1" when (h7_0_0_reg_720 = ap_const_lv5_10) else "0";
    icmp_ln638_fu_1734_p2 <= "1" when (d4_0_0_reg_731 = ap_const_lv7_60) else "0";
    icmp_ln646_fu_1769_p2 <= "1" when (v363_0_0_reg_742 = ap_const_lv11_600) else "0";
    icmp_ln664_fu_1786_p2 <= "1" when (v371_0_0_reg_753 = ap_const_lv11_600) else "0";

    k_embed_0_address0_assign_proc : process(ap_CS_fsm_state19, grp_apply_rotary_pos_emb_fu_808_v160_0_address0, grp_cache_update_fu_861_v188_0_address0, ap_CS_fsm_state20, ap_CS_fsm_state27, sext_ln542_fu_1099_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            k_embed_0_address0 <= sext_ln542_fu_1099_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            k_embed_0_address0 <= grp_cache_update_fu_861_v188_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            k_embed_0_address0 <= grp_apply_rotary_pos_emb_fu_808_v160_0_address0;
        else 
            k_embed_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    k_embed_0_ce0_assign_proc : process(ap_CS_fsm_state19, grp_apply_rotary_pos_emb_fu_808_v160_0_ce0, grp_cache_update_fu_861_v188_0_ce0, ap_CS_fsm_state20, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            k_embed_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            k_embed_0_ce0 <= grp_cache_update_fu_861_v188_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            k_embed_0_ce0 <= grp_apply_rotary_pos_emb_fu_808_v160_0_ce0;
        else 
            k_embed_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_embed_0_d0_assign_proc : process(ap_CS_fsm_state19, grp_apply_rotary_pos_emb_fu_808_v160_0_d0, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            k_embed_0_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            k_embed_0_d0 <= grp_apply_rotary_pos_emb_fu_808_v160_0_d0;
        else 
            k_embed_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    k_embed_0_we0_assign_proc : process(ap_CS_fsm_state19, grp_apply_rotary_pos_emb_fu_808_v160_0_we0, icmp_ln541_fu_1078_p2, ap_CS_fsm_state20)
    begin
        if (((icmp_ln541_fu_1078_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            k_embed_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            k_embed_0_we0 <= grp_apply_rotary_pos_emb_fu_808_v160_0_we0;
        else 
            k_embed_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_0_address0_assign_proc : process(grp_apply_rotary_pos_emb_fu_808_k_proj_0_address0, grp_reshape_2D_to_3D_fu_878_v142_0_address0, ap_CS_fsm_state20, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            k_proj_0_address0 <= grp_reshape_2D_to_3D_fu_878_v142_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            k_proj_0_address0 <= grp_apply_rotary_pos_emb_fu_808_k_proj_0_address0;
        else 
            k_proj_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    k_proj_0_ce0_assign_proc : process(grp_apply_rotary_pos_emb_fu_808_k_proj_0_ce0, grp_reshape_2D_to_3D_fu_878_v142_0_ce0, ap_CS_fsm_state20, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            k_proj_0_ce0 <= grp_reshape_2D_to_3D_fu_878_v142_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            k_proj_0_ce0 <= grp_apply_rotary_pos_emb_fu_808_k_proj_0_ce0;
        else 
            k_proj_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_0_ce1_assign_proc : process(grp_apply_rotary_pos_emb_fu_808_k_proj_0_ce1, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            k_proj_0_ce1 <= grp_apply_rotary_pos_emb_fu_808_k_proj_0_ce1;
        else 
            k_proj_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_0_we0_assign_proc : process(grp_reshape_2D_to_3D_fu_878_v142_0_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            k_proj_0_we0 <= grp_reshape_2D_to_3D_fu_878_v142_0_we0;
        else 
            k_proj_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_re_address0_assign_proc : process(ap_CS_fsm_state7, grp_linear_forward_no_mu_fu_830_v81_address0, grp_reshape_2D_to_3D_fu_878_v141_address0, ap_CS_fsm_state11, ap_CS_fsm_state13, zext_ln491_fu_954_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            k_proj_re_address0 <= zext_ln491_fu_954_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            k_proj_re_address0 <= grp_reshape_2D_to_3D_fu_878_v141_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            k_proj_re_address0 <= grp_linear_forward_no_mu_fu_830_v81_address0;
        else 
            k_proj_re_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    k_proj_re_ce0_assign_proc : process(ap_CS_fsm_state7, grp_linear_forward_no_mu_fu_830_v81_ce0, grp_reshape_2D_to_3D_fu_878_v141_ce0, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            k_proj_re_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            k_proj_re_ce0 <= grp_reshape_2D_to_3D_fu_878_v141_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            k_proj_re_ce0 <= grp_linear_forward_no_mu_fu_830_v81_ce0;
        else 
            k_proj_re_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_re_d0_assign_proc : process(ap_CS_fsm_state7, grp_linear_forward_no_mu_fu_830_v81_d0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            k_proj_re_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            k_proj_re_d0 <= grp_linear_forward_no_mu_fu_830_v81_d0;
        else 
            k_proj_re_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    k_proj_re_we0_assign_proc : process(ap_CS_fsm_state7, grp_linear_forward_no_mu_fu_830_v81_we0, icmp_ln490_fu_942_p2, ap_CS_fsm_state11)
    begin
        if (((icmp_ln490_fu_942_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            k_proj_re_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            k_proj_re_we0 <= grp_linear_forward_no_mu_fu_830_v81_we0;
        else 
            k_proj_re_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_transposed_address0_assign_proc : process(grp_GEMM_3D_float_fu_846_k_proj_transposed_address0, grp_transpose_last_two_d_fu_871_v199_address0, ap_CS_fsm_state29, ap_CS_fsm_state32)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            k_proj_transposed_address0 <= grp_transpose_last_two_d_fu_871_v199_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            k_proj_transposed_address0 <= grp_GEMM_3D_float_fu_846_k_proj_transposed_address0;
        else 
            k_proj_transposed_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    k_proj_transposed_ce0_assign_proc : process(grp_GEMM_3D_float_fu_846_k_proj_transposed_ce0, grp_transpose_last_two_d_fu_871_v199_ce0, ap_CS_fsm_state29, ap_CS_fsm_state32)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            k_proj_transposed_ce0 <= grp_transpose_last_two_d_fu_871_v199_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            k_proj_transposed_ce0 <= grp_GEMM_3D_float_fu_846_k_proj_transposed_ce0;
        else 
            k_proj_transposed_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_transposed_we0_assign_proc : process(grp_transpose_last_two_d_fu_871_v199_we0, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            k_proj_transposed_we0 <= grp_transpose_last_two_d_fu_871_v199_we0;
        else 
            k_proj_transposed_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_shl2_cast_fu_1302_p3 <= (add_ln559_fu_1285_p2 & ap_const_lv5_0);
    p_shl6_cast_fu_1175_p3 <= (trunc_ln551_fu_1171_p1 & ap_const_lv7_0);
    p_shl7_cast_fu_1183_p3 <= (add_ln551_fu_1166_p2 & ap_const_lv5_0);
    p_shl_cast_fu_1294_p3 <= (trunc_ln559_fu_1290_p1 & ap_const_lv7_0);

    q_embed_0_address0_assign_proc : process(ap_CS_fsm_state17, grp_apply_rotary_pos_emb_fu_808_v159_0_address0, grp_GEMM_3D_float_fu_846_v204_0_address0, ap_CS_fsm_state20, ap_CS_fsm_state32, sext_ln534_fu_1035_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            q_embed_0_address0 <= sext_ln534_fu_1035_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            q_embed_0_address0 <= grp_GEMM_3D_float_fu_846_v204_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            q_embed_0_address0 <= grp_apply_rotary_pos_emb_fu_808_v159_0_address0;
        else 
            q_embed_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    q_embed_0_ce0_assign_proc : process(ap_CS_fsm_state17, grp_apply_rotary_pos_emb_fu_808_v159_0_ce0, grp_GEMM_3D_float_fu_846_v204_0_ce0, ap_CS_fsm_state20, ap_CS_fsm_state32)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            q_embed_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            q_embed_0_ce0 <= grp_GEMM_3D_float_fu_846_v204_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            q_embed_0_ce0 <= grp_apply_rotary_pos_emb_fu_808_v159_0_ce0;
        else 
            q_embed_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    q_embed_0_d0_assign_proc : process(ap_CS_fsm_state17, grp_apply_rotary_pos_emb_fu_808_v159_0_d0, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            q_embed_0_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            q_embed_0_d0 <= grp_apply_rotary_pos_emb_fu_808_v159_0_d0;
        else 
            q_embed_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    q_embed_0_we0_assign_proc : process(ap_CS_fsm_state17, grp_apply_rotary_pos_emb_fu_808_v159_0_we0, icmp_ln533_fu_1014_p2, ap_CS_fsm_state20)
    begin
        if (((icmp_ln533_fu_1014_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            q_embed_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            q_embed_0_we0 <= grp_apply_rotary_pos_emb_fu_808_v159_0_we0;
        else 
            q_embed_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    q_proj_0_address0_assign_proc : process(grp_apply_rotary_pos_emb_fu_808_q_proj_0_address0, grp_reshape_2D_to_3D_fu_878_v142_0_address0, ap_CS_fsm_state20, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            q_proj_0_address0 <= grp_reshape_2D_to_3D_fu_878_v142_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            q_proj_0_address0 <= grp_apply_rotary_pos_emb_fu_808_q_proj_0_address0;
        else 
            q_proj_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    q_proj_0_ce0_assign_proc : process(grp_apply_rotary_pos_emb_fu_808_q_proj_0_ce0, grp_reshape_2D_to_3D_fu_878_v142_0_ce0, ap_CS_fsm_state20, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            q_proj_0_ce0 <= grp_reshape_2D_to_3D_fu_878_v142_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            q_proj_0_ce0 <= grp_apply_rotary_pos_emb_fu_808_q_proj_0_ce0;
        else 
            q_proj_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    q_proj_0_ce1_assign_proc : process(grp_apply_rotary_pos_emb_fu_808_q_proj_0_ce1, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            q_proj_0_ce1 <= grp_apply_rotary_pos_emb_fu_808_q_proj_0_ce1;
        else 
            q_proj_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    q_proj_0_we0_assign_proc : process(grp_reshape_2D_to_3D_fu_878_v142_0_we0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            q_proj_0_we0 <= grp_reshape_2D_to_3D_fu_878_v142_0_we0;
        else 
            q_proj_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    q_proj_re_address0_assign_proc : process(ap_CS_fsm_state6, grp_linear_forward_no_mu_fu_830_v81_address0, grp_reshape_2D_to_3D_fu_878_v141_address0, ap_CS_fsm_state9, ap_CS_fsm_state11, zext_ln485_fu_937_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            q_proj_re_address0 <= zext_ln485_fu_937_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            q_proj_re_address0 <= grp_reshape_2D_to_3D_fu_878_v141_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            q_proj_re_address0 <= grp_linear_forward_no_mu_fu_830_v81_address0;
        else 
            q_proj_re_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    q_proj_re_ce0_assign_proc : process(ap_CS_fsm_state6, grp_linear_forward_no_mu_fu_830_v81_ce0, grp_reshape_2D_to_3D_fu_878_v141_ce0, ap_CS_fsm_state9, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            q_proj_re_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            q_proj_re_ce0 <= grp_reshape_2D_to_3D_fu_878_v141_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            q_proj_re_ce0 <= grp_linear_forward_no_mu_fu_830_v81_ce0;
        else 
            q_proj_re_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    q_proj_re_d0_assign_proc : process(ap_CS_fsm_state6, grp_linear_forward_no_mu_fu_830_v81_d0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            q_proj_re_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            q_proj_re_d0 <= grp_linear_forward_no_mu_fu_830_v81_d0;
        else 
            q_proj_re_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    q_proj_re_we0_assign_proc : process(ap_CS_fsm_state6, grp_linear_forward_no_mu_fu_830_v81_we0, icmp_ln484_fu_925_p2, ap_CS_fsm_state9)
    begin
        if (((icmp_ln484_fu_925_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            q_proj_re_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            q_proj_re_we0 <= grp_linear_forward_no_mu_fu_830_v81_we0;
        else 
            q_proj_re_we0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_final_outp_address0_assign_proc : process(ap_CS_fsm_state74, grp_quantize_activation_fu_822_v24_0_address0, grp_linear_forward_no_mu_fu_830_v77_0_address0, ap_CS_fsm_state76)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            quantized_final_outp_address0 <= grp_linear_forward_no_mu_fu_830_v77_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            quantized_final_outp_address0 <= grp_quantize_activation_fu_822_v24_0_address0;
        else 
            quantized_final_outp_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    quantized_final_outp_ce0_assign_proc : process(ap_CS_fsm_state74, grp_quantize_activation_fu_822_v24_0_ce0, grp_linear_forward_no_mu_fu_830_v77_0_ce0, ap_CS_fsm_state76)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            quantized_final_outp_ce0 <= grp_linear_forward_no_mu_fu_830_v77_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            quantized_final_outp_ce0 <= grp_quantize_activation_fu_822_v24_0_ce0;
        else 
            quantized_final_outp_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_final_outp_we0_assign_proc : process(ap_CS_fsm_state74, grp_quantize_activation_fu_822_v24_0_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            quantized_final_outp_we0 <= grp_quantize_activation_fu_822_v24_0_we0;
        else 
            quantized_final_outp_we0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_hidden_sta_address0_assign_proc : process(ap_CS_fsm_state5, grp_quantize_activation_fu_822_v24_0_address0, grp_linear_forward_no_mu_fu_830_v77_0_address0, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            quantized_hidden_sta_address0 <= grp_linear_forward_no_mu_fu_830_v77_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            quantized_hidden_sta_address0 <= grp_quantize_activation_fu_822_v24_0_address0;
        else 
            quantized_hidden_sta_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    quantized_hidden_sta_ce0_assign_proc : process(ap_CS_fsm_state5, grp_quantize_activation_fu_822_v24_0_ce0, grp_linear_forward_no_mu_fu_830_v77_0_ce0, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            quantized_hidden_sta_ce0 <= grp_linear_forward_no_mu_fu_830_v77_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            quantized_hidden_sta_ce0 <= grp_quantize_activation_fu_822_v24_0_ce0;
        else 
            quantized_hidden_sta_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_hidden_sta_we0_assign_proc : process(ap_CS_fsm_state5, grp_quantize_activation_fu_822_v24_0_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            quantized_hidden_sta_we0 <= grp_quantize_activation_fu_822_v24_0_we0;
        else 
            quantized_hidden_sta_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rms_attn_output_0_address0_assign_proc : process(ap_CS_fsm_state74, ap_CS_fsm_state71, grp_rms_norm_fu_784_v3_0_address0, grp_quantize_activation_fu_822_v22_0_address0, icmp_ln646_fu_1769_p2, ap_CS_fsm_state72, zext_ln647_fu_1781_p1)
    begin
        if (((icmp_ln646_fu_1769_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
            rms_attn_output_0_address0 <= zext_ln647_fu_1781_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            rms_attn_output_0_address0 <= grp_quantize_activation_fu_822_v22_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            rms_attn_output_0_address0 <= grp_rms_norm_fu_784_v3_0_address0;
        else 
            rms_attn_output_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    rms_attn_output_0_ce0_assign_proc : process(ap_CS_fsm_state74, ap_CS_fsm_state71, grp_rms_norm_fu_784_v3_0_ce0, grp_quantize_activation_fu_822_v22_0_ce0, icmp_ln646_fu_1769_p2, ap_CS_fsm_state72)
    begin
        if (((icmp_ln646_fu_1769_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
            rms_attn_output_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            rms_attn_output_0_ce0 <= grp_quantize_activation_fu_822_v22_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            rms_attn_output_0_ce0 <= grp_rms_norm_fu_784_v3_0_ce0;
        else 
            rms_attn_output_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rms_attn_output_0_d0_assign_proc : process(ap_CS_fsm_state71, grp_rms_norm_fu_784_v3_0_d0, icmp_ln646_fu_1769_p2, ap_CS_fsm_state72)
    begin
        if (((icmp_ln646_fu_1769_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
            rms_attn_output_0_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            rms_attn_output_0_d0 <= grp_rms_norm_fu_784_v3_0_d0;
        else 
            rms_attn_output_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    rms_attn_output_0_we0_assign_proc : process(ap_CS_fsm_state71, grp_rms_norm_fu_784_v3_0_we0, icmp_ln646_fu_1769_p2, ap_CS_fsm_state72)
    begin
        if (((icmp_ln646_fu_1769_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
            rms_attn_output_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            rms_attn_output_0_we0 <= grp_rms_norm_fu_784_v3_0_we0;
        else 
            rms_attn_output_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rms_hidden_states_0_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state2, grp_rms_norm_fu_784_v3_0_address0, grp_quantize_activation_fu_822_v22_0_address0, icmp_ln465_fu_908_p2, ap_CS_fsm_state3, zext_ln466_fu_920_p1)
    begin
        if (((icmp_ln465_fu_908_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rms_hidden_states_0_address0 <= zext_ln466_fu_920_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            rms_hidden_states_0_address0 <= grp_quantize_activation_fu_822_v22_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rms_hidden_states_0_address0 <= grp_rms_norm_fu_784_v3_0_address0;
        else 
            rms_hidden_states_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    rms_hidden_states_0_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state2, grp_rms_norm_fu_784_v3_0_ce0, grp_quantize_activation_fu_822_v22_0_ce0, icmp_ln465_fu_908_p2, ap_CS_fsm_state3)
    begin
        if (((icmp_ln465_fu_908_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rms_hidden_states_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            rms_hidden_states_0_ce0 <= grp_quantize_activation_fu_822_v22_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rms_hidden_states_0_ce0 <= grp_rms_norm_fu_784_v3_0_ce0;
        else 
            rms_hidden_states_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rms_hidden_states_0_d0_assign_proc : process(ap_CS_fsm_state2, grp_rms_norm_fu_784_v3_0_d0, icmp_ln465_fu_908_p2, ap_CS_fsm_state3)
    begin
        if (((icmp_ln465_fu_908_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rms_hidden_states_0_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rms_hidden_states_0_d0 <= grp_rms_norm_fu_784_v3_0_d0;
        else 
            rms_hidden_states_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    rms_hidden_states_0_we0_assign_proc : process(ap_CS_fsm_state2, grp_rms_norm_fu_784_v3_0_we0, icmp_ln465_fu_908_p2, ap_CS_fsm_state3)
    begin
        if (((icmp_ln465_fu_908_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rms_hidden_states_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rms_hidden_states_0_we0 <= grp_rms_norm_fu_784_v3_0_we0;
        else 
            rms_hidden_states_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln534_fu_1035_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln534_fu_1030_p2),64));

        sext_ln542_fu_1099_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln542_fu_1094_p2),64));

        sext_ln551_fu_1146_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln551_fu_1140_p2),10));

        sext_ln559_fu_1265_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln559_fu_1259_p2),10));

        sext_ln578_fu_1401_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln578_fu_1396_p2),64));

        sext_ln588_fu_1465_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln588_fu_1460_p2),64));

        sext_ln606_fu_1508_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln606_fu_1502_p2),64));

        sext_ln616_fu_1572_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln616_fu_1567_p2),64));

        sext_ln625_fu_1636_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln625_fu_1631_p2),64));

        sext_ln639_fu_1751_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln639_fu_1746_p2),64));

        sext_ln640_fu_1761_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln640_reg_2116),32));

    shl_ln640_1_fu_1712_p3 <= (trunc_ln640_fu_1696_p1 & ap_const_lv5_0);
    shl_ln_fu_1700_p3 <= (trunc_ln640_fu_1696_p1 & ap_const_lv7_0);

    softmax_attn_weights_address0_assign_proc : process(ap_CS_fsm_state62, grp_softmax_fu_764_v220_0_address0, grp_GEMM_3D_float2_fu_854_v246_0_address0, ap_CS_fsm_state63, ap_CS_fsm_state66, sext_ln616_fu_1572_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            softmax_attn_weights_address0 <= sext_ln616_fu_1572_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            softmax_attn_weights_address0 <= grp_GEMM_3D_float2_fu_854_v246_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            softmax_attn_weights_address0 <= grp_softmax_fu_764_v220_0_address0;
        else 
            softmax_attn_weights_address0 <= "XXXXXXX";
        end if; 
    end process;


    softmax_attn_weights_ce0_assign_proc : process(ap_CS_fsm_state62, grp_softmax_fu_764_v220_0_ce0, grp_GEMM_3D_float2_fu_854_v246_0_ce0, ap_CS_fsm_state63, ap_CS_fsm_state66)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            softmax_attn_weights_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            softmax_attn_weights_ce0 <= grp_GEMM_3D_float2_fu_854_v246_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            softmax_attn_weights_ce0 <= grp_softmax_fu_764_v220_0_ce0;
        else 
            softmax_attn_weights_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    softmax_attn_weights_d0_assign_proc : process(ap_CS_fsm_state62, grp_softmax_fu_764_v220_0_d0, ap_CS_fsm_state63)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            softmax_attn_weights_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            softmax_attn_weights_d0 <= grp_softmax_fu_764_v220_0_d0;
        else 
            softmax_attn_weights_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    softmax_attn_weights_we0_assign_proc : process(ap_CS_fsm_state62, grp_softmax_fu_764_v220_0_we0, icmp_ln615_fu_1551_p2, ap_CS_fsm_state63)
    begin
        if (((icmp_ln615_fu_1551_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state62))) then 
            softmax_attn_weights_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            softmax_attn_weights_we0 <= grp_softmax_fu_764_v220_0_we0;
        else 
            softmax_attn_weights_we0 <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln534_fu_1008_p2 <= std_logic_vector(unsigned(tmp_24_fu_988_p3) - unsigned(zext_ln534_fu_1004_p1));
    sub_ln542_fu_1072_p2 <= std_logic_vector(unsigned(tmp_26_fu_1052_p3) - unsigned(zext_ln542_fu_1068_p1));
    sub_ln551_1_fu_1191_p2 <= std_logic_vector(unsigned(p_shl6_cast_fu_1175_p3) - unsigned(p_shl7_cast_fu_1183_p3));
    sub_ln551_fu_1140_p2 <= std_logic_vector(unsigned(zext_ln551_fu_1124_p1) - unsigned(zext_ln551_1_fu_1136_p1));
    sub_ln559_1_fu_1310_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_1294_p3) - unsigned(p_shl2_cast_fu_1302_p3));
    sub_ln559_fu_1259_p2 <= std_logic_vector(unsigned(zext_ln559_fu_1243_p1) - unsigned(zext_ln559_1_fu_1255_p1));
    sub_ln578_fu_1374_p2 <= std_logic_vector(unsigned(tmp_32_fu_1354_p3) - unsigned(zext_ln578_fu_1370_p1));
    sub_ln588_fu_1438_p2 <= std_logic_vector(unsigned(tmp_34_fu_1418_p3) - unsigned(zext_ln588_fu_1434_p1));
    sub_ln606_fu_1502_p2 <= std_logic_vector(unsigned(tmp_36_fu_1482_p3) - unsigned(zext_ln606_fu_1498_p1));
    sub_ln616_fu_1545_p2 <= std_logic_vector(unsigned(tmp_38_fu_1525_p3) - unsigned(zext_ln616_fu_1541_p1));
    sub_ln625_fu_1609_p2 <= std_logic_vector(unsigned(tmp_40_fu_1589_p3) - unsigned(zext_ln625_fu_1605_p1));
    sub_ln639_fu_1690_p2 <= std_logic_vector(unsigned(tmp_42_fu_1670_p3) - unsigned(zext_ln639_fu_1686_p1));
    sub_ln640_fu_1724_p2 <= std_logic_vector(unsigned(zext_ln640_1_fu_1708_p1) - unsigned(zext_ln640_2_fu_1720_p1));
    tmp_24_fu_988_p3 <= (v307_0_reg_500 & ap_const_lv7_0);
    tmp_25_fu_996_p3 <= (v307_0_reg_500 & ap_const_lv5_0);
    tmp_26_fu_1052_p3 <= (v311_0_reg_522 & ap_const_lv7_0);
    tmp_27_fu_1060_p3 <= (v311_0_reg_522 & ap_const_lv5_0);
    tmp_28_fu_1116_p3 <= (v315_0_reg_544 & ap_const_lv3_0);
    tmp_29_fu_1128_p3 <= (v315_0_reg_544 & ap_const_lv1_0);
    tmp_30_fu_1235_p3 <= (v319_0_reg_577 & ap_const_lv3_0);
    tmp_31_fu_1247_p3 <= (v319_0_reg_577 & ap_const_lv1_0);
    tmp_32_fu_1354_p3 <= (v327_0_reg_610 & ap_const_lv3_0);
    tmp_33_fu_1362_p3 <= (v327_0_reg_610 & ap_const_lv1_0);
    tmp_34_fu_1418_p3 <= (i10_0_reg_632 & ap_const_lv3_0);
    tmp_35_fu_1426_p3 <= (i10_0_reg_632 & ap_const_lv1_0);
    tmp_36_fu_1482_p3 <= (h6_0_reg_654 & ap_const_lv3_0);
    tmp_37_fu_1490_p3 <= (h6_0_reg_654 & ap_const_lv1_0);
    tmp_38_fu_1525_p3 <= (v347_0_reg_665 & ap_const_lv3_0);
    tmp_39_fu_1533_p3 <= (v347_0_reg_665 & ap_const_lv1_0);
    tmp_40_fu_1589_p3 <= (v351_0_reg_687 & ap_const_lv7_0);
    tmp_41_fu_1597_p3 <= (v351_0_reg_687 & ap_const_lv5_0);
    tmp_42_fu_1670_p3 <= (h7_0_0_reg_720 & ap_const_lv7_0);
    tmp_43_fu_1678_p3 <= (h7_0_0_reg_720 & ap_const_lv5_0);
    trunc_ln551_fu_1171_p1 <= add_ln551_fu_1166_p2(8 - 1 downto 0);
    trunc_ln559_fu_1290_p1 <= add_ln559_fu_1285_p2(8 - 1 downto 0);
    trunc_ln640_fu_1696_p1 <= h7_0_0_reg_720(4 - 1 downto 0);

    updated_k_cache_address0_assign_proc : process(ap_CS_fsm_state23, grp_cache_update_fu_861_v189_address0, grp_transpose_last_two_d_fu_871_v198_address0, ap_CS_fsm_state29, ap_CS_fsm_state27, zext_ln551_4_fu_1218_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            updated_k_cache_address0 <= zext_ln551_4_fu_1218_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            updated_k_cache_address0 <= grp_transpose_last_two_d_fu_871_v198_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            updated_k_cache_address0 <= grp_cache_update_fu_861_v189_address0;
        else 
            updated_k_cache_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    updated_k_cache_ce0_assign_proc : process(ap_CS_fsm_state23, grp_cache_update_fu_861_v189_ce0, grp_transpose_last_two_d_fu_871_v198_ce0, ap_CS_fsm_state29, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            updated_k_cache_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            updated_k_cache_ce0 <= grp_transpose_last_two_d_fu_871_v198_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            updated_k_cache_ce0 <= grp_cache_update_fu_861_v189_ce0;
        else 
            updated_k_cache_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    updated_k_cache_d0_assign_proc : process(ap_CS_fsm_state23, grp_cache_update_fu_861_v189_d0, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            updated_k_cache_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            updated_k_cache_d0 <= grp_cache_update_fu_861_v189_d0;
        else 
            updated_k_cache_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    updated_k_cache_we0_assign_proc : process(ap_CS_fsm_state23, grp_cache_update_fu_861_v189_we0, icmp_ln550_fu_1197_p2, ap_CS_fsm_state27)
    begin
        if (((icmp_ln550_fu_1197_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            updated_k_cache_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            updated_k_cache_we0 <= grp_cache_update_fu_861_v189_we0;
        else 
            updated_k_cache_we0 <= ap_const_logic_0;
        end if; 
    end process;


    updated_v_cache_address0_assign_proc : process(ap_CS_fsm_state26, grp_GEMM_3D_float2_fu_854_v247_address0, grp_cache_update_fu_861_v189_address0, ap_CS_fsm_state29, ap_CS_fsm_state66, zext_ln559_4_fu_1337_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            updated_v_cache_address0 <= zext_ln559_4_fu_1337_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            updated_v_cache_address0 <= grp_cache_update_fu_861_v189_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            updated_v_cache_address0 <= grp_GEMM_3D_float2_fu_854_v247_address0;
        else 
            updated_v_cache_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    updated_v_cache_ce0_assign_proc : process(ap_CS_fsm_state26, grp_GEMM_3D_float2_fu_854_v247_ce0, grp_cache_update_fu_861_v189_ce0, ap_CS_fsm_state29, ap_CS_fsm_state66)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            updated_v_cache_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            updated_v_cache_ce0 <= grp_cache_update_fu_861_v189_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            updated_v_cache_ce0 <= grp_GEMM_3D_float2_fu_854_v247_ce0;
        else 
            updated_v_cache_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    updated_v_cache_d0_assign_proc : process(ap_CS_fsm_state26, grp_cache_update_fu_861_v189_d0, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            updated_v_cache_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            updated_v_cache_d0 <= grp_cache_update_fu_861_v189_d0;
        else 
            updated_v_cache_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    updated_v_cache_we0_assign_proc : process(ap_CS_fsm_state26, grp_cache_update_fu_861_v189_we0, icmp_ln558_fu_1316_p2, ap_CS_fsm_state29)
    begin
        if (((icmp_ln558_fu_1316_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            updated_v_cache_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            updated_v_cache_we0 <= grp_cache_update_fu_861_v189_we0;
        else 
            updated_v_cache_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v258_address0 <= grp_rms_norm_fu_784_v0_address0;

    v258_ce0_assign_proc : process(grp_rms_norm_fu_784_v0_ce0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            v258_ce0 <= grp_rms_norm_fu_784_v0_ce0;
        else 
            v258_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v259_address0 <= grp_linear_forward_no_mu_fu_830_v79_address0;

    v259_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_830_v79_ce0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            v259_ce0 <= grp_linear_forward_no_mu_fu_830_v79_ce0;
        else 
            v259_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v261_address0 <= grp_linear_forward_no_mu_fu_830_v79_address0;

    v261_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_830_v79_ce0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            v261_ce0 <= grp_linear_forward_no_mu_fu_830_v79_ce0;
        else 
            v261_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v263_address0 <= grp_linear_forward_no_mu_fu_830_v79_address0;

    v263_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_830_v79_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            v263_ce0 <= grp_linear_forward_no_mu_fu_830_v79_ce0;
        else 
            v263_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v265_address0 <= grp_linear_forward_no_mu_fu_830_v79_address0;

    v265_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_830_v79_ce0, ap_CS_fsm_state76)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            v265_ce0 <= grp_linear_forward_no_mu_fu_830_v79_ce0;
        else 
            v265_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v267_address0 <= grp_apply_rotary_pos_emb_fu_808_v157_address0;
    v267_ce0 <= grp_apply_rotary_pos_emb_fu_808_v157_ce0;
    v268_address0 <= grp_apply_rotary_pos_emb_fu_808_v158_address0;
    v268_ce0 <= grp_apply_rotary_pos_emb_fu_808_v158_ce0;
    v269_address0 <= grp_rms_norm_fu_784_v1_address0;

    v269_ce0_assign_proc : process(grp_rms_norm_fu_784_v1_ce0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            v269_ce0 <= grp_rms_norm_fu_784_v1_ce0;
        else 
            v269_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v270_address0 <= grp_rms_norm_fu_784_v1_address0;

    v270_ce0_assign_proc : process(grp_rms_norm_fu_784_v1_ce0, ap_CS_fsm_state72)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            v270_ce0 <= grp_rms_norm_fu_784_v1_ce0;
        else 
            v270_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v271_address0 <= grp_cache_update_fu_861_v187_address0;

    v271_ce0_assign_proc : process(grp_cache_update_fu_861_v187_ce0, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            v271_ce0 <= grp_cache_update_fu_861_v187_ce0;
        else 
            v271_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v272_address0 <= grp_cache_update_fu_861_v187_address0;

    v272_ce0_assign_proc : process(grp_cache_update_fu_861_v187_ce0, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            v272_ce0 <= grp_cache_update_fu_861_v187_ce0;
        else 
            v272_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v274_address0_assign_proc : process(ap_CS_fsm_state75, grp_linear_forward_no_mu_fu_830_v81_address0, icmp_ln664_fu_1786_p2, ap_CS_fsm_state76, zext_ln665_fu_1798_p1)
    begin
        if (((icmp_ln664_fu_1786_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state75))) then 
            v274_address0 <= zext_ln665_fu_1798_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            v274_address0 <= grp_linear_forward_no_mu_fu_830_v81_address0;
        else 
            v274_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    v274_ce0_assign_proc : process(ap_CS_fsm_state75, grp_linear_forward_no_mu_fu_830_v81_ce0, icmp_ln664_fu_1786_p2, ap_CS_fsm_state76)
    begin
        if (((icmp_ln664_fu_1786_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state75))) then 
            v274_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            v274_ce0 <= grp_linear_forward_no_mu_fu_830_v81_ce0;
        else 
            v274_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v274_d0_assign_proc : process(ap_CS_fsm_state75, grp_linear_forward_no_mu_fu_830_v81_d0, icmp_ln664_fu_1786_p2, ap_CS_fsm_state76)
    begin
        if (((icmp_ln664_fu_1786_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state75))) then 
            v274_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            v274_d0 <= grp_linear_forward_no_mu_fu_830_v81_d0;
        else 
            v274_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    v274_we0_assign_proc : process(ap_CS_fsm_state75, grp_linear_forward_no_mu_fu_830_v81_we0, icmp_ln664_fu_1786_p2, ap_CS_fsm_state76)
    begin
        if (((icmp_ln664_fu_1786_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state75))) then 
            v274_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            v274_we0 <= grp_linear_forward_no_mu_fu_830_v81_we0;
        else 
            v274_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v307_fu_982_p2 <= std_logic_vector(unsigned(v307_0_reg_500) + unsigned(ap_const_lv5_1));
    v311_fu_1046_p2 <= std_logic_vector(unsigned(v311_0_reg_522) + unsigned(ap_const_lv5_1));
    v315_fu_1110_p2 <= std_logic_vector(unsigned(v315_0_reg_544) + unsigned(ap_const_lv5_1));
    v316_fu_1156_p2 <= std_logic_vector(unsigned(v316_0_reg_555) + unsigned(ap_const_lv3_1));
    v317_fu_1203_p2 <= std_logic_vector(unsigned(v317_0_reg_566) + unsigned(ap_const_lv7_1));
    v319_fu_1229_p2 <= std_logic_vector(unsigned(v319_0_reg_577) + unsigned(ap_const_lv5_1));
    v320_fu_1275_p2 <= std_logic_vector(unsigned(v320_0_reg_588) + unsigned(ap_const_lv3_1));
    v321_fu_1322_p2 <= std_logic_vector(unsigned(v321_0_reg_599) + unsigned(ap_const_lv7_1));
    v327_fu_1348_p2 <= std_logic_vector(unsigned(v327_0_reg_610) + unsigned(ap_const_lv5_1));
    v347_fu_1519_p2 <= std_logic_vector(unsigned(v347_0_reg_665) + unsigned(ap_const_lv5_1));
    v351_fu_1583_p2 <= std_logic_vector(unsigned(v351_0_reg_687) + unsigned(ap_const_lv5_1));

    v_proj_0_address0_assign_proc : process(grp_cache_update_fu_861_v188_0_address0, grp_reshape_2D_to_3D_fu_878_v142_0_address0, ap_CS_fsm_state15, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            v_proj_0_address0 <= grp_reshape_2D_to_3D_fu_878_v142_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            v_proj_0_address0 <= grp_cache_update_fu_861_v188_0_address0;
        else 
            v_proj_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    v_proj_0_ce0_assign_proc : process(grp_cache_update_fu_861_v188_0_ce0, grp_reshape_2D_to_3D_fu_878_v142_0_ce0, ap_CS_fsm_state15, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            v_proj_0_ce0 <= grp_reshape_2D_to_3D_fu_878_v142_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            v_proj_0_ce0 <= grp_cache_update_fu_861_v188_0_ce0;
        else 
            v_proj_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v_proj_0_we0_assign_proc : process(grp_reshape_2D_to_3D_fu_878_v142_0_we0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            v_proj_0_we0 <= grp_reshape_2D_to_3D_fu_878_v142_0_we0;
        else 
            v_proj_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    v_proj_re_address0_assign_proc : process(ap_CS_fsm_state8, grp_linear_forward_no_mu_fu_830_v81_address0, grp_reshape_2D_to_3D_fu_878_v141_address0, ap_CS_fsm_state15, ap_CS_fsm_state13, zext_ln497_fu_971_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            v_proj_re_address0 <= zext_ln497_fu_971_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            v_proj_re_address0 <= grp_reshape_2D_to_3D_fu_878_v141_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            v_proj_re_address0 <= grp_linear_forward_no_mu_fu_830_v81_address0;
        else 
            v_proj_re_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    v_proj_re_ce0_assign_proc : process(ap_CS_fsm_state8, grp_linear_forward_no_mu_fu_830_v81_ce0, grp_reshape_2D_to_3D_fu_878_v141_ce0, ap_CS_fsm_state15, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            v_proj_re_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            v_proj_re_ce0 <= grp_reshape_2D_to_3D_fu_878_v141_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            v_proj_re_ce0 <= grp_linear_forward_no_mu_fu_830_v81_ce0;
        else 
            v_proj_re_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v_proj_re_d0_assign_proc : process(ap_CS_fsm_state8, grp_linear_forward_no_mu_fu_830_v81_d0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            v_proj_re_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            v_proj_re_d0 <= grp_linear_forward_no_mu_fu_830_v81_d0;
        else 
            v_proj_re_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    v_proj_re_we0_assign_proc : process(ap_CS_fsm_state8, grp_linear_forward_no_mu_fu_830_v81_we0, icmp_ln496_fu_959_p2, ap_CS_fsm_state13)
    begin
        if (((icmp_ln496_fu_959_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            v_proj_re_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            v_proj_re_we0 <= grp_linear_forward_no_mu_fu_830_v81_we0;
        else 
            v_proj_re_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln466_fu_920_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v278_0_0_reg_456),64));
    zext_ln485_fu_937_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v287_0_0_reg_467),64));
    zext_ln491_fu_954_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v290_0_0_reg_478),64));
    zext_ln497_fu_971_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v293_0_0_reg_489),64));
    zext_ln534_1_fu_1026_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v309_0_0_reg_511),12));
    zext_ln534_fu_1004_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_25_fu_996_p3),12));
    zext_ln542_1_fu_1090_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v313_0_0_reg_533),12));
    zext_ln542_fu_1068_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_27_fu_1060_p3),12));
    zext_ln551_1_fu_1136_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_29_fu_1128_p3),9));
    zext_ln551_2_fu_1162_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v316_0_reg_555),10));
    zext_ln551_3_fu_1209_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v317_0_reg_566),15));
    zext_ln551_4_fu_1218_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln551_1_fu_1213_p2),64));
    zext_ln551_fu_1124_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_fu_1116_p3),9));
    zext_ln559_1_fu_1255_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_31_fu_1247_p3),9));
    zext_ln559_2_fu_1281_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v320_0_reg_588),10));
    zext_ln559_3_fu_1328_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v321_0_reg_599),15));
    zext_ln559_4_fu_1337_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln559_1_fu_1332_p2),64));
    zext_ln559_fu_1243_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_30_fu_1235_p3),9));
    zext_ln578_1_fu_1392_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v329_0_0_reg_621),8));
    zext_ln578_fu_1370_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_33_fu_1362_p3),8));
    zext_ln588_1_fu_1456_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k9_0_0_reg_643),8));
    zext_ln588_fu_1434_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_35_fu_1426_p3),8));
    zext_ln606_fu_1498_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_37_fu_1490_p3),8));
    zext_ln616_1_fu_1563_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v349_0_0_reg_676),8));
    zext_ln616_fu_1541_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_39_fu_1533_p3),8));
    zext_ln625_1_fu_1627_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v353_0_0_reg_698),12));
    zext_ln625_fu_1605_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_41_fu_1597_p3),12));
    zext_ln633_fu_1653_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v356_0_0_reg_709),64));
    zext_ln638_fu_1730_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(d4_0_0_reg_731),12));
    zext_ln639_fu_1686_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_43_fu_1678_p3),12));
    zext_ln640_1_fu_1708_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_1700_p3),12));
    zext_ln640_2_fu_1720_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln640_1_fu_1712_p3),12));
    zext_ln640_fu_1764_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln640_fu_1761_p1),64));
    zext_ln647_fu_1781_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v363_0_0_reg_742),64));
    zext_ln665_fu_1798_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v371_0_0_reg_753),64));
end behav;
