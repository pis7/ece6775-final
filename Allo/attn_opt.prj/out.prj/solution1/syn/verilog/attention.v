// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="attention,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.386250,HLS_SYN_LAT=1371080,HLS_SYN_TPT=none,HLS_SYN_MEM=198,HLS_SYN_DSP=88,HLS_SYN_FF=39557,HLS_SYN_LUT=52672,HLS_VERSION=2019_2}" *)

module attention (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v263_address0,
        v263_ce0,
        v263_q0,
        v264_0_address0,
        v264_0_ce0,
        v264_0_q0,
        v264_1_address0,
        v264_1_ce0,
        v264_1_q0,
        v265,
        v266_0_address0,
        v266_0_ce0,
        v266_0_q0,
        v266_1_address0,
        v266_1_ce0,
        v266_1_q0,
        v267,
        v268_0_address0,
        v268_0_ce0,
        v268_0_q0,
        v268_1_address0,
        v268_1_ce0,
        v268_1_q0,
        v269,
        v270_0_address0,
        v270_0_ce0,
        v270_0_q0,
        v270_1_address0,
        v270_1_ce0,
        v270_1_q0,
        v271,
        v272_address0,
        v272_ce0,
        v272_q0,
        v273_address0,
        v273_ce0,
        v273_q0,
        v274_address0,
        v274_ce0,
        v274_q0,
        v275_address0,
        v275_ce0,
        v275_q0,
        v276_address0,
        v276_ce0,
        v276_q0,
        v277_address0,
        v277_ce0,
        v277_q0,
        v278,
        v279_address0,
        v279_ce0,
        v279_we0,
        v279_d0
);

parameter    ap_ST_fsm_state1 = 80'd1;
parameter    ap_ST_fsm_state2 = 80'd2;
parameter    ap_ST_fsm_state3 = 80'd4;
parameter    ap_ST_fsm_state4 = 80'd8;
parameter    ap_ST_fsm_state5 = 80'd16;
parameter    ap_ST_fsm_state6 = 80'd32;
parameter    ap_ST_fsm_state7 = 80'd64;
parameter    ap_ST_fsm_state8 = 80'd128;
parameter    ap_ST_fsm_state9 = 80'd256;
parameter    ap_ST_fsm_state10 = 80'd512;
parameter    ap_ST_fsm_state11 = 80'd1024;
parameter    ap_ST_fsm_state12 = 80'd2048;
parameter    ap_ST_fsm_state13 = 80'd4096;
parameter    ap_ST_fsm_state14 = 80'd8192;
parameter    ap_ST_fsm_state15 = 80'd16384;
parameter    ap_ST_fsm_state16 = 80'd32768;
parameter    ap_ST_fsm_state17 = 80'd65536;
parameter    ap_ST_fsm_state18 = 80'd131072;
parameter    ap_ST_fsm_state19 = 80'd262144;
parameter    ap_ST_fsm_state20 = 80'd524288;
parameter    ap_ST_fsm_state21 = 80'd1048576;
parameter    ap_ST_fsm_state22 = 80'd2097152;
parameter    ap_ST_fsm_state23 = 80'd4194304;
parameter    ap_ST_fsm_state24 = 80'd8388608;
parameter    ap_ST_fsm_state25 = 80'd16777216;
parameter    ap_ST_fsm_state26 = 80'd33554432;
parameter    ap_ST_fsm_state27 = 80'd67108864;
parameter    ap_ST_fsm_state28 = 80'd134217728;
parameter    ap_ST_fsm_state29 = 80'd268435456;
parameter    ap_ST_fsm_state30 = 80'd536870912;
parameter    ap_ST_fsm_state31 = 80'd1073741824;
parameter    ap_ST_fsm_state32 = 80'd2147483648;
parameter    ap_ST_fsm_state33 = 80'd4294967296;
parameter    ap_ST_fsm_state34 = 80'd8589934592;
parameter    ap_ST_fsm_state35 = 80'd17179869184;
parameter    ap_ST_fsm_state36 = 80'd34359738368;
parameter    ap_ST_fsm_state37 = 80'd68719476736;
parameter    ap_ST_fsm_state38 = 80'd137438953472;
parameter    ap_ST_fsm_state39 = 80'd274877906944;
parameter    ap_ST_fsm_state40 = 80'd549755813888;
parameter    ap_ST_fsm_state41 = 80'd1099511627776;
parameter    ap_ST_fsm_state42 = 80'd2199023255552;
parameter    ap_ST_fsm_state43 = 80'd4398046511104;
parameter    ap_ST_fsm_state44 = 80'd8796093022208;
parameter    ap_ST_fsm_state45 = 80'd17592186044416;
parameter    ap_ST_fsm_state46 = 80'd35184372088832;
parameter    ap_ST_fsm_state47 = 80'd70368744177664;
parameter    ap_ST_fsm_state48 = 80'd140737488355328;
parameter    ap_ST_fsm_state49 = 80'd281474976710656;
parameter    ap_ST_fsm_state50 = 80'd562949953421312;
parameter    ap_ST_fsm_state51 = 80'd1125899906842624;
parameter    ap_ST_fsm_state52 = 80'd2251799813685248;
parameter    ap_ST_fsm_state53 = 80'd4503599627370496;
parameter    ap_ST_fsm_state54 = 80'd9007199254740992;
parameter    ap_ST_fsm_state55 = 80'd18014398509481984;
parameter    ap_ST_fsm_state56 = 80'd36028797018963968;
parameter    ap_ST_fsm_state57 = 80'd72057594037927936;
parameter    ap_ST_fsm_state58 = 80'd144115188075855872;
parameter    ap_ST_fsm_state59 = 80'd288230376151711744;
parameter    ap_ST_fsm_state60 = 80'd576460752303423488;
parameter    ap_ST_fsm_state61 = 80'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 80'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 80'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 80'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 80'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 80'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 80'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 80'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 80'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 80'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 80'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 80'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 80'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 80'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 80'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 80'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 80'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 80'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 80'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 80'd604462909807314587353088;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] v263_address0;
output   v263_ce0;
input  [31:0] v263_q0;
output  [18:0] v264_0_address0;
output   v264_0_ce0;
input  [7:0] v264_0_q0;
output  [18:0] v264_1_address0;
output   v264_1_ce0;
input  [7:0] v264_1_q0;
input  [31:0] v265;
output  [18:0] v266_0_address0;
output   v266_0_ce0;
input  [7:0] v266_0_q0;
output  [18:0] v266_1_address0;
output   v266_1_ce0;
input  [7:0] v266_1_q0;
input  [31:0] v267;
output  [18:0] v268_0_address0;
output   v268_0_ce0;
input  [7:0] v268_0_q0;
output  [18:0] v268_1_address0;
output   v268_1_ce0;
input  [7:0] v268_1_q0;
input  [31:0] v269;
output  [18:0] v270_0_address0;
output   v270_0_ce0;
input  [7:0] v270_0_q0;
output  [18:0] v270_1_address0;
output   v270_1_ce0;
input  [7:0] v270_1_q0;
input  [31:0] v271;
output  [9:0] v272_address0;
output   v272_ce0;
input  [31:0] v272_q0;
output  [9:0] v273_address0;
output   v273_ce0;
input  [31:0] v273_q0;
output  [10:0] v274_address0;
output   v274_ce0;
input  [31:0] v274_q0;
output  [10:0] v275_address0;
output   v275_ce0;
input  [31:0] v275_q0;
output  [12:0] v276_address0;
output   v276_ce0;
input  [31:0] v276_q0;
output  [12:0] v277_address0;
output   v277_ce0;
input  [31:0] v277_q0;
input  [31:0] v278;
output  [10:0] v279_address0;
output   v279_ce0;
output   v279_we0;
output  [31:0] v279_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg v263_ce0;
reg v264_0_ce0;
reg v264_1_ce0;
reg v266_0_ce0;
reg v266_1_ce0;
reg v270_0_ce0;
reg v270_1_ce0;
reg v274_ce0;
reg v275_ce0;
reg v276_ce0;
reg v277_ce0;
reg[10:0] v279_address0;
reg v279_ce0;
reg v279_we0;
reg[31:0] v279_d0;

(* fsm_encoding = "none" *) reg   [79:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    quantized_hidden_sta_8_ce0;
reg    quantized_hidden_sta_8_we0;
reg   [7:0] quantized_hidden_sta_7_address0;
reg    quantized_hidden_sta_7_ce0;
wire   [7:0] quantized_hidden_sta_7_q0;
reg   [7:0] quantized_hidden_sta_6_address0;
reg    quantized_hidden_sta_6_ce0;
wire   [7:0] quantized_hidden_sta_6_q0;
reg   [7:0] quantized_hidden_sta_5_address0;
reg    quantized_hidden_sta_5_ce0;
wire   [7:0] quantized_hidden_sta_5_q0;
reg   [7:0] quantized_hidden_sta_4_address0;
reg    quantized_hidden_sta_4_ce0;
wire   [7:0] quantized_hidden_sta_4_q0;
reg   [7:0] quantized_hidden_sta_3_address0;
reg    quantized_hidden_sta_3_ce0;
wire   [7:0] quantized_hidden_sta_3_q0;
reg   [7:0] quantized_hidden_sta_2_address0;
reg    quantized_hidden_sta_2_ce0;
wire   [7:0] quantized_hidden_sta_2_q0;
reg   [7:0] quantized_hidden_sta_1_address0;
reg    quantized_hidden_sta_1_ce0;
wire   [7:0] quantized_hidden_sta_1_q0;
reg   [7:0] quantized_hidden_sta_address0;
reg    quantized_hidden_sta_ce0;
wire   [7:0] quantized_hidden_sta_q0;
reg   [10:0] q_proj_0_address0;
reg    q_proj_0_ce0;
reg    q_proj_0_we0;
wire   [31:0] q_proj_0_q0;
reg    q_proj_0_ce1;
wire   [31:0] q_proj_0_q1;
reg   [10:0] k_proj_0_address0;
reg    k_proj_0_ce0;
reg    k_proj_0_we0;
wire   [31:0] k_proj_0_q0;
reg    k_proj_0_ce1;
wire   [31:0] k_proj_0_q1;
reg   [10:0] v_proj_0_address0;
reg    v_proj_0_ce0;
reg    v_proj_0_we0;
wire   [31:0] v_proj_0_q0;
reg   [13:0] k_proj_transposed_address0;
reg    k_proj_transposed_ce0;
reg    k_proj_transposed_we0;
wire   [31:0] k_proj_transposed_q0;
reg    quantized_final_outp_8_ce0;
reg    quantized_final_outp_8_we0;
reg    quantized_final_outp_7_ce0;
wire   [7:0] quantized_final_outp_7_q0;
reg    quantized_final_outp_6_ce0;
wire   [7:0] quantized_final_outp_6_q0;
reg    quantized_final_outp_5_ce0;
wire   [7:0] quantized_final_outp_5_q0;
reg    quantized_final_outp_4_ce0;
wire   [7:0] quantized_final_outp_4_q0;
reg    quantized_final_outp_3_ce0;
wire   [7:0] quantized_final_outp_3_q0;
reg    quantized_final_outp_2_ce0;
wire   [7:0] quantized_final_outp_2_q0;
reg    quantized_final_outp_1_ce0;
wire   [7:0] quantized_final_outp_1_q0;
reg    quantized_final_outp_ce0;
wire   [7:0] quantized_final_outp_q0;
wire   [31:0] grp_quantize_activation_fu_969_ap_return;
reg   [31:0] reg_1041;
wire    ap_CS_fsm_state5;
wire    grp_quantize_activation_fu_969_ap_ready;
wire    grp_quantize_activation_fu_969_ap_done;
wire    ap_CS_fsm_state76;
wire   [31:0] attn_weights_0_q0;
reg   [31:0] reg_1046;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state56;
wire   [10:0] add_ln479_fu_1058_p2;
wire    ap_CS_fsm_state2;
wire   [10:0] add_ln500_fu_1075_p2;
wire    ap_CS_fsm_state6;
wire   [10:0] add_ln506_fu_1092_p2;
wire    ap_CS_fsm_state7;
wire   [10:0] add_ln512_fu_1109_p2;
wire    ap_CS_fsm_state8;
wire   [53:0] select_ln570_fu_1172_p3;
reg   [53:0] select_ln570_reg_3646;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln571_4_fu_1180_p2;
reg   [0:0] icmp_ln571_4_reg_3651;
wire   [0:0] icmp_ln581_4_fu_1192_p2;
reg   [0:0] icmp_ln581_4_reg_3657;
wire  signed [11:0] select_ln581_fu_1210_p3;
reg  signed [11:0] select_ln581_reg_3663;
wire   [0:0] icmp_ln582_4_fu_1218_p2;
reg   [0:0] icmp_ln582_4_reg_3669;
wire   [31:0] trunc_ln583_4_fu_1224_p1;
reg   [31:0] trunc_ln583_4_reg_3675;
reg   [6:0] tmp_70_reg_3681;
wire   [53:0] man_V_2_fu_1290_p3;
reg   [53:0] man_V_2_reg_3686;
wire    ap_CS_fsm_state10;
wire   [0:0] icmp_ln571_fu_1298_p2;
reg   [0:0] icmp_ln571_reg_3691;
wire   [0:0] icmp_ln581_fu_1310_p2;
reg   [0:0] icmp_ln581_reg_3697;
wire  signed [11:0] sh_amt_fu_1328_p3;
reg  signed [11:0] sh_amt_reg_3703;
wire   [0:0] icmp_ln582_fu_1336_p2;
reg   [0:0] icmp_ln582_reg_3709;
wire   [31:0] trunc_ln583_fu_1342_p1;
reg   [31:0] trunc_ln583_reg_3715;
reg   [6:0] tmp_38_reg_3721;
wire  signed [31:0] sext_ln581_4_fu_1356_p1;
reg  signed [31:0] sext_ln581_4_reg_3726;
wire   [31:0] select_ln585_1_fu_1460_p3;
reg   [31:0] select_ln585_1_reg_3731;
wire   [0:0] and_ln603_4_fu_1479_p2;
reg   [0:0] and_ln603_4_reg_3736;
wire   [31:0] v300_V_fu_1636_p3;
reg   [31:0] v300_V_reg_3741;
wire    ap_CS_fsm_state11;
wire   [31:0] scales_fixed_0_V_fu_1648_p3;
reg   [31:0] scales_fixed_0_V_reg_3746;
wire   [53:0] man_V_5_fu_1706_p3;
reg   [53:0] man_V_5_reg_3752;
wire    ap_CS_fsm_state12;
wire   [0:0] icmp_ln571_1_fu_1714_p2;
reg   [0:0] icmp_ln571_1_reg_3757;
wire   [0:0] icmp_ln581_1_fu_1726_p2;
reg   [0:0] icmp_ln581_1_reg_3763;
wire  signed [11:0] sh_amt_1_fu_1744_p3;
reg  signed [11:0] sh_amt_1_reg_3769;
wire   [0:0] icmp_ln582_1_fu_1752_p2;
reg   [0:0] icmp_ln582_1_reg_3775;
wire   [31:0] trunc_ln583_1_fu_1758_p1;
reg   [31:0] trunc_ln583_1_reg_3781;
reg   [6:0] tmp_41_reg_3787;
wire   [53:0] man_V_8_fu_1824_p3;
reg   [53:0] man_V_8_reg_3792;
wire   [0:0] icmp_ln571_2_fu_1832_p2;
reg   [0:0] icmp_ln571_2_reg_3797;
wire   [0:0] icmp_ln581_2_fu_1844_p2;
reg   [0:0] icmp_ln581_2_reg_3803;
wire  signed [11:0] sh_amt_2_fu_1862_p3;
reg  signed [11:0] sh_amt_2_reg_3809;
wire   [0:0] icmp_ln582_2_fu_1870_p2;
reg   [0:0] icmp_ln582_2_reg_3815;
wire   [31:0] trunc_ln583_2_fu_1876_p1;
reg   [31:0] trunc_ln583_2_reg_3821;
reg   [6:0] tmp_52_reg_3827;
wire   [31:0] v302_V_fu_2041_p3;
reg   [31:0] v302_V_reg_3832;
wire    ap_CS_fsm_state13;
wire    grp_linear_forward_no_mu_fu_844_ap_ready;
wire    grp_linear_forward_no_mu_fu_844_ap_done;
wire   [31:0] v304_V_fu_2200_p3;
reg   [31:0] v304_V_reg_3837;
wire   [53:0] man_V_11_fu_2260_p3;
reg   [53:0] man_V_11_reg_3842;
wire    ap_CS_fsm_state16;
wire   [0:0] icmp_ln571_3_fu_2268_p2;
reg   [0:0] icmp_ln571_3_reg_3847;
wire   [0:0] icmp_ln581_3_fu_2280_p2;
reg   [0:0] icmp_ln581_3_reg_3853;
wire  signed [11:0] sh_amt_3_fu_2298_p3;
reg  signed [11:0] sh_amt_3_reg_3859;
wire   [0:0] icmp_ln582_3_fu_2306_p2;
reg   [0:0] icmp_ln582_3_reg_3865;
wire   [31:0] trunc_ln583_3_fu_2312_p1;
reg   [31:0] trunc_ln583_3_reg_3871;
reg   [6:0] tmp_57_reg_3877;
wire   [31:0] v306_V_fu_2477_p3;
reg   [31:0] v306_V_reg_3882;
wire    ap_CS_fsm_state17;
wire    grp_reshape_2D_to_3D_fu_1009_ap_ready;
wire    grp_reshape_2D_to_3D_fu_1009_ap_done;
wire    grp_reshape_2D_to_3D_fu_1017_ap_ready;
wire    grp_reshape_2D_to_3D_fu_1017_ap_done;
reg    ap_block_state17_on_subcall_done;
wire   [4:0] v338_fu_2491_p2;
reg   [4:0] v338_reg_3890;
wire    ap_CS_fsm_state18;
wire   [11:0] sub_ln593_fu_2517_p2;
reg   [11:0] sub_ln593_reg_3895;
wire   [0:0] icmp_ln590_fu_2485_p2;
wire   [6:0] add_ln592_fu_2529_p2;
wire    ap_CS_fsm_state19;
wire   [4:0] v342_fu_2555_p2;
reg   [4:0] v342_reg_3911;
wire    ap_CS_fsm_state20;
wire   [11:0] sub_ln601_fu_2581_p2;
reg   [11:0] sub_ln601_reg_3916;
wire   [0:0] icmp_ln598_fu_2549_p2;
wire   [6:0] add_ln600_fu_2593_p2;
wire    ap_CS_fsm_state21;
wire   [4:0] v346_fu_2619_p2;
reg   [4:0] v346_reg_3932;
wire    ap_CS_fsm_state23;
wire  signed [9:0] sext_ln610_fu_2655_p1;
reg  signed [9:0] sext_ln610_reg_3937;
wire   [0:0] icmp_ln607_fu_2613_p2;
wire   [2:0] v347_fu_2665_p2;
reg   [2:0] v347_reg_3945;
wire    ap_CS_fsm_state24;
wire   [14:0] sub_ln610_1_fu_2700_p2;
reg   [14:0] sub_ln610_1_reg_3950;
wire   [0:0] icmp_ln608_fu_2659_p2;
wire   [6:0] v348_fu_2712_p2;
wire    ap_CS_fsm_state25;
wire   [4:0] v350_fu_2738_p2;
reg   [4:0] v350_reg_3966;
wire    ap_CS_fsm_state26;
wire  signed [9:0] sext_ln618_fu_2774_p1;
reg  signed [9:0] sext_ln618_reg_3971;
wire   [0:0] icmp_ln615_fu_2732_p2;
wire   [2:0] v351_fu_2784_p2;
reg   [2:0] v351_reg_3979;
wire    ap_CS_fsm_state27;
wire   [14:0] sub_ln618_1_fu_2819_p2;
reg   [14:0] sub_ln618_1_reg_3984;
wire   [0:0] icmp_ln616_fu_2778_p2;
wire   [6:0] v352_fu_2831_p2;
wire    ap_CS_fsm_state28;
wire   [4:0] v358_fu_2857_p2;
reg   [4:0] v358_reg_4000;
wire    ap_CS_fsm_state32;
wire   [7:0] sub_ln637_fu_2883_p2;
reg   [7:0] sub_ln637_reg_4005;
wire   [0:0] icmp_ln634_fu_2851_p2;
wire   [2:0] add_ln636_fu_2895_p2;
wire    ap_CS_fsm_state33;
wire   [4:0] i12_fu_2921_p2;
reg   [4:0] i12_reg_4021;
wire    ap_CS_fsm_state35;
wire   [7:0] sub_ln647_fu_2947_p2;
reg   [7:0] sub_ln647_reg_4026;
wire   [0:0] icmp_ln644_fu_2915_p2;
wire   [2:0] add_ln646_fu_2959_p2;
reg   [2:0] add_ln646_reg_4034;
wire    ap_CS_fsm_state36;
reg   [6:0] attn_weights_0_addr_2_reg_4039;
wire   [0:0] icmp_ln646_fu_2953_p2;
wire   [31:0] grp_fu_1029_p2;
reg   [31:0] v_reg_4044;
wire    ap_CS_fsm_state53;
wire   [4:0] h6_fu_2985_p2;
reg   [4:0] h6_reg_4052;
wire    ap_CS_fsm_state55;
reg   [6:0] attn_weights_0_addr_1_reg_4057;
wire   [0:0] icmp_ln661_fu_2979_p2;
wire   [31:0] grp_fu_1024_p2;
reg   [31:0] v2_reg_4062;
wire    ap_CS_fsm_state61;
wire   [4:0] v378_fu_3028_p2;
reg   [4:0] v378_reg_4070;
wire    ap_CS_fsm_state63;
wire   [7:0] sub_ln675_fu_3054_p2;
reg   [7:0] sub_ln675_reg_4075;
wire   [0:0] icmp_ln672_fu_3022_p2;
wire   [2:0] add_ln674_fu_3066_p2;
wire    ap_CS_fsm_state64;
wire   [4:0] v382_fu_3092_p2;
reg   [4:0] v382_reg_4091;
wire    ap_CS_fsm_state66;
wire   [11:0] sub_ln684_fu_3118_p2;
reg   [11:0] sub_ln684_reg_4096;
wire   [0:0] icmp_ln681_fu_3086_p2;
wire   [6:0] add_ln683_fu_3130_p2;
wire    ap_CS_fsm_state67;
wire   [10:0] add_ln691_fu_3156_p2;
wire    ap_CS_fsm_state69;
wire   [4:0] add_ln696_fu_3173_p2;
reg   [4:0] add_ln696_reg_4120;
wire    ap_CS_fsm_state70;
wire   [11:0] sub_ln698_fu_3199_p2;
reg   [11:0] sub_ln698_reg_4125;
wire   [0:0] icmp_ln696_fu_3167_p2;
wire   [11:0] sub_ln699_fu_3233_p2;
reg   [11:0] sub_ln699_reg_4130;
wire   [6:0] add_ln697_fu_3249_p2;
reg   [6:0] add_ln697_reg_4138;
wire    ap_CS_fsm_state71;
wire   [0:0] icmp_ln697_fu_3243_p2;
wire   [11:0] add_ln699_fu_3265_p2;
reg   [11:0] add_ln699_reg_4148;
wire   [10:0] add_ln705_fu_3284_p2;
wire    ap_CS_fsm_state73;
wire   [53:0] select_ln570_1_fu_3347_p3;
reg   [53:0] select_ln570_1_reg_4161;
wire    ap_CS_fsm_state77;
wire   [0:0] icmp_ln571_5_fu_3355_p2;
reg   [0:0] icmp_ln571_5_reg_4166;
wire   [0:0] icmp_ln581_5_fu_3367_p2;
reg   [0:0] icmp_ln581_5_reg_4172;
wire  signed [11:0] select_ln581_1_fu_3385_p3;
reg  signed [11:0] select_ln581_1_reg_4178;
wire   [0:0] icmp_ln582_5_fu_3393_p2;
reg   [0:0] icmp_ln582_5_reg_4184;
wire   [31:0] trunc_ln583_5_fu_3399_p1;
reg   [31:0] trunc_ln583_5_reg_4190;
reg   [6:0] tmp_73_reg_4196;
wire   [31:0] final_scales_fixed_0_fu_3565_p3;
reg   [31:0] final_scales_fixed_0_reg_4201;
wire    ap_CS_fsm_state78;
wire   [10:0] add_ln753_fu_3579_p2;
wire    ap_CS_fsm_state79;
reg   [10:0] rms_hidden_states_0_address0;
reg    rms_hidden_states_0_ce0;
reg    rms_hidden_states_0_we0;
reg   [31:0] rms_hidden_states_0_d0;
wire   [31:0] rms_hidden_states_0_q0;
reg   [10:0] q_proj_re_address0;
reg    q_proj_re_ce0;
reg    q_proj_re_we0;
reg   [31:0] q_proj_re_d0;
wire   [31:0] q_proj_re_q0;
reg   [10:0] k_proj_re_address0;
reg    k_proj_re_ce0;
reg    k_proj_re_we0;
reg   [31:0] k_proj_re_d0;
wire   [31:0] k_proj_re_q0;
reg   [10:0] v_proj_re_address0;
reg    v_proj_re_ce0;
reg    v_proj_re_we0;
reg   [31:0] v_proj_re_d0;
wire   [31:0] v_proj_re_q0;
reg   [10:0] q_embed_0_address0;
reg    q_embed_0_ce0;
reg    q_embed_0_we0;
reg   [31:0] q_embed_0_d0;
wire   [31:0] q_embed_0_q0;
reg   [10:0] k_embed_0_address0;
reg    k_embed_0_ce0;
reg    k_embed_0_we0;
reg   [31:0] k_embed_0_d0;
wire   [31:0] k_embed_0_q0;
reg   [13:0] updated_k_cache_address0;
reg    updated_k_cache_ce0;
reg    updated_k_cache_we0;
reg   [31:0] updated_k_cache_d0;
wire   [31:0] updated_k_cache_q0;
reg   [13:0] updated_v_cache_address0;
reg    updated_v_cache_ce0;
reg    updated_v_cache_we0;
reg   [31:0] updated_v_cache_d0;
wire   [31:0] updated_v_cache_q0;
reg   [6:0] attn_weights_0_address0;
reg    attn_weights_0_ce0;
reg    attn_weights_0_we0;
reg   [31:0] attn_weights_0_d0;
reg   [6:0] softmax_attn_weights_address0;
reg    softmax_attn_weights_ce0;
reg    softmax_attn_weights_we0;
reg   [31:0] softmax_attn_weights_d0;
wire   [31:0] softmax_attn_weights_q0;
reg   [10:0] attn_output_0_address0;
reg    attn_output_0_ce0;
reg    attn_output_0_we0;
reg   [31:0] attn_output_0_d0;
wire   [31:0] attn_output_0_q0;
reg   [10:0] attn_output_2D_address0;
reg    attn_output_2D_ce0;
reg    attn_output_2D_we0;
reg   [31:0] attn_output_2D_d0;
wire   [31:0] attn_output_2D_q0;
reg   [10:0] rms_attn_output_0_address0;
reg    rms_attn_output_0_ce0;
reg    rms_attn_output_0_we0;
reg   [31:0] rms_attn_output_0_d0;
wire   [31:0] rms_attn_output_0_q0;
wire    grp_linear_forward_no_mu_fu_844_ap_start;
wire    grp_linear_forward_no_mu_fu_844_ap_idle;
wire   [7:0] grp_linear_forward_no_mu_fu_844_v78_0_0_0_address0;
wire    grp_linear_forward_no_mu_fu_844_v78_0_0_0_ce0;
reg   [7:0] grp_linear_forward_no_mu_fu_844_v78_0_0_0_q0;
wire   [7:0] grp_linear_forward_no_mu_fu_844_v78_0_0_1_address0;
wire    grp_linear_forward_no_mu_fu_844_v78_0_0_1_ce0;
reg   [7:0] grp_linear_forward_no_mu_fu_844_v78_0_0_1_q0;
wire   [7:0] grp_linear_forward_no_mu_fu_844_v78_0_0_2_address0;
wire    grp_linear_forward_no_mu_fu_844_v78_0_0_2_ce0;
reg   [7:0] grp_linear_forward_no_mu_fu_844_v78_0_0_2_q0;
wire   [7:0] grp_linear_forward_no_mu_fu_844_v78_0_0_3_address0;
wire    grp_linear_forward_no_mu_fu_844_v78_0_0_3_ce0;
reg   [7:0] grp_linear_forward_no_mu_fu_844_v78_0_0_3_q0;
wire   [7:0] grp_linear_forward_no_mu_fu_844_v78_1_0_0_address0;
wire    grp_linear_forward_no_mu_fu_844_v78_1_0_0_ce0;
reg   [7:0] grp_linear_forward_no_mu_fu_844_v78_1_0_0_q0;
wire   [7:0] grp_linear_forward_no_mu_fu_844_v78_1_0_1_address0;
wire    grp_linear_forward_no_mu_fu_844_v78_1_0_1_ce0;
reg   [7:0] grp_linear_forward_no_mu_fu_844_v78_1_0_1_q0;
wire   [7:0] grp_linear_forward_no_mu_fu_844_v78_1_0_2_address0;
wire    grp_linear_forward_no_mu_fu_844_v78_1_0_2_ce0;
reg   [7:0] grp_linear_forward_no_mu_fu_844_v78_1_0_2_q0;
wire   [7:0] grp_linear_forward_no_mu_fu_844_v78_1_0_3_address0;
wire    grp_linear_forward_no_mu_fu_844_v78_1_0_3_ce0;
reg   [7:0] grp_linear_forward_no_mu_fu_844_v78_1_0_3_q0;
reg   [31:0] grp_linear_forward_no_mu_fu_844_v79_0_V_read;
wire   [18:0] grp_linear_forward_no_mu_fu_844_v80_0_address0;
wire    grp_linear_forward_no_mu_fu_844_v80_0_ce0;
reg   [7:0] grp_linear_forward_no_mu_fu_844_v80_0_q0;
wire   [18:0] grp_linear_forward_no_mu_fu_844_v80_1_address0;
wire    grp_linear_forward_no_mu_fu_844_v80_1_ce0;
reg   [7:0] grp_linear_forward_no_mu_fu_844_v80_1_q0;
reg   [31:0] grp_linear_forward_no_mu_fu_844_v81_V;
wire   [10:0] grp_linear_forward_no_mu_fu_844_v82_address0;
wire    grp_linear_forward_no_mu_fu_844_v82_ce0;
wire    grp_linear_forward_no_mu_fu_844_v82_we0;
wire   [31:0] grp_linear_forward_no_mu_fu_844_v82_d0;
wire    grp_linear_forward_no_mu_fu_873_ap_start;
wire    grp_linear_forward_no_mu_fu_873_ap_done;
wire    grp_linear_forward_no_mu_fu_873_ap_idle;
wire    grp_linear_forward_no_mu_fu_873_ap_ready;
wire   [7:0] grp_linear_forward_no_mu_fu_873_v78_0_0_0_address0;
wire    grp_linear_forward_no_mu_fu_873_v78_0_0_0_ce0;
wire   [7:0] grp_linear_forward_no_mu_fu_873_v78_0_0_1_address0;
wire    grp_linear_forward_no_mu_fu_873_v78_0_0_1_ce0;
wire   [7:0] grp_linear_forward_no_mu_fu_873_v78_0_0_2_address0;
wire    grp_linear_forward_no_mu_fu_873_v78_0_0_2_ce0;
wire   [7:0] grp_linear_forward_no_mu_fu_873_v78_0_0_3_address0;
wire    grp_linear_forward_no_mu_fu_873_v78_0_0_3_ce0;
wire   [7:0] grp_linear_forward_no_mu_fu_873_v78_1_0_0_address0;
wire    grp_linear_forward_no_mu_fu_873_v78_1_0_0_ce0;
wire   [7:0] grp_linear_forward_no_mu_fu_873_v78_1_0_1_address0;
wire    grp_linear_forward_no_mu_fu_873_v78_1_0_1_ce0;
wire   [7:0] grp_linear_forward_no_mu_fu_873_v78_1_0_2_address0;
wire    grp_linear_forward_no_mu_fu_873_v78_1_0_2_ce0;
wire   [7:0] grp_linear_forward_no_mu_fu_873_v78_1_0_3_address0;
wire    grp_linear_forward_no_mu_fu_873_v78_1_0_3_ce0;
wire   [18:0] grp_linear_forward_no_mu_fu_873_v80_0_address0;
wire    grp_linear_forward_no_mu_fu_873_v80_0_ce0;
wire   [18:0] grp_linear_forward_no_mu_fu_873_v80_1_address0;
wire    grp_linear_forward_no_mu_fu_873_v80_1_ce0;
wire   [10:0] grp_linear_forward_no_mu_fu_873_v82_address0;
wire    grp_linear_forward_no_mu_fu_873_v82_ce0;
wire    grp_linear_forward_no_mu_fu_873_v82_we0;
wire   [31:0] grp_linear_forward_no_mu_fu_873_v82_d0;
wire    grp_softmax_fu_911_ap_start;
wire    grp_softmax_fu_911_ap_done;
wire    grp_softmax_fu_911_ap_idle;
wire    grp_softmax_fu_911_ap_ready;
wire   [6:0] grp_softmax_fu_911_v224_0_address0;
wire    grp_softmax_fu_911_v224_0_ce0;
wire   [6:0] grp_softmax_fu_911_v225_0_address0;
wire    grp_softmax_fu_911_v225_0_ce0;
wire    grp_softmax_fu_911_v225_0_we0;
wire   [31:0] grp_softmax_fu_911_v225_0_d0;
wire    grp_rms_norm_fu_931_ap_start;
wire    grp_rms_norm_fu_931_ap_done;
wire    grp_rms_norm_fu_931_ap_idle;
wire    grp_rms_norm_fu_931_ap_ready;
wire   [10:0] grp_rms_norm_fu_931_v0_address0;
wire    grp_rms_norm_fu_931_v0_ce0;
reg   [31:0] grp_rms_norm_fu_931_v0_q0;
wire   [10:0] grp_rms_norm_fu_931_v1_address0;
wire    grp_rms_norm_fu_931_v1_ce0;
reg   [31:0] grp_rms_norm_fu_931_v1_q0;
wire   [10:0] grp_rms_norm_fu_931_v3_0_address0;
wire    grp_rms_norm_fu_931_v3_0_ce0;
wire    grp_rms_norm_fu_931_v3_0_we0;
wire   [31:0] grp_rms_norm_fu_931_v3_0_d0;
wire    grp_apply_rotary_pos_emb_fu_955_ap_start;
wire    grp_apply_rotary_pos_emb_fu_955_ap_done;
wire    grp_apply_rotary_pos_emb_fu_955_ap_idle;
wire    grp_apply_rotary_pos_emb_fu_955_ap_ready;
wire   [9:0] grp_apply_rotary_pos_emb_fu_955_v162_address0;
wire    grp_apply_rotary_pos_emb_fu_955_v162_ce0;
wire   [9:0] grp_apply_rotary_pos_emb_fu_955_v163_address0;
wire    grp_apply_rotary_pos_emb_fu_955_v163_ce0;
wire   [10:0] grp_apply_rotary_pos_emb_fu_955_v164_0_address0;
wire    grp_apply_rotary_pos_emb_fu_955_v164_0_ce0;
wire    grp_apply_rotary_pos_emb_fu_955_v164_0_we0;
wire   [31:0] grp_apply_rotary_pos_emb_fu_955_v164_0_d0;
wire   [10:0] grp_apply_rotary_pos_emb_fu_955_v165_0_address0;
wire    grp_apply_rotary_pos_emb_fu_955_v165_0_ce0;
wire    grp_apply_rotary_pos_emb_fu_955_v165_0_we0;
wire   [31:0] grp_apply_rotary_pos_emb_fu_955_v165_0_d0;
wire   [10:0] grp_apply_rotary_pos_emb_fu_955_q_proj_0_address0;
wire    grp_apply_rotary_pos_emb_fu_955_q_proj_0_ce0;
wire   [10:0] grp_apply_rotary_pos_emb_fu_955_q_proj_0_address1;
wire    grp_apply_rotary_pos_emb_fu_955_q_proj_0_ce1;
wire   [10:0] grp_apply_rotary_pos_emb_fu_955_k_proj_0_address0;
wire    grp_apply_rotary_pos_emb_fu_955_k_proj_0_ce0;
wire   [10:0] grp_apply_rotary_pos_emb_fu_955_k_proj_0_address1;
wire    grp_apply_rotary_pos_emb_fu_955_k_proj_0_ce1;
wire    grp_quantize_activation_fu_969_ap_start;
wire    grp_quantize_activation_fu_969_ap_idle;
wire   [10:0] grp_quantize_activation_fu_969_v22_0_address0;
wire    grp_quantize_activation_fu_969_v22_0_ce0;
reg   [31:0] grp_quantize_activation_fu_969_v22_0_q0;
wire   [10:0] grp_quantize_activation_fu_969_v24_0_address0;
wire    grp_quantize_activation_fu_969_v24_0_ce0;
wire    grp_quantize_activation_fu_969_v24_0_we0;
wire   [7:0] grp_quantize_activation_fu_969_v24_0_d0;
wire    grp_GEMM_3D_float_fu_977_ap_start;
wire    grp_GEMM_3D_float_fu_977_ap_done;
wire    grp_GEMM_3D_float_fu_977_ap_idle;
wire    grp_GEMM_3D_float_fu_977_ap_ready;
wire   [10:0] grp_GEMM_3D_float_fu_977_v209_0_address0;
wire    grp_GEMM_3D_float_fu_977_v209_0_ce0;
wire   [6:0] grp_GEMM_3D_float_fu_977_v211_0_address0;
wire    grp_GEMM_3D_float_fu_977_v211_0_ce0;
wire    grp_GEMM_3D_float_fu_977_v211_0_we0;
wire   [31:0] grp_GEMM_3D_float_fu_977_v211_0_d0;
wire   [13:0] grp_GEMM_3D_float_fu_977_k_proj_transposed_address0;
wire    grp_GEMM_3D_float_fu_977_k_proj_transposed_ce0;
wire    grp_GEMM_3D_float2_fu_985_ap_start;
wire    grp_GEMM_3D_float2_fu_985_ap_done;
wire    grp_GEMM_3D_float2_fu_985_ap_idle;
wire    grp_GEMM_3D_float2_fu_985_ap_ready;
wire   [6:0] grp_GEMM_3D_float2_fu_985_v251_0_address0;
wire    grp_GEMM_3D_float2_fu_985_v251_0_ce0;
wire   [13:0] grp_GEMM_3D_float2_fu_985_v252_address0;
wire    grp_GEMM_3D_float2_fu_985_v252_ce0;
wire   [10:0] grp_GEMM_3D_float2_fu_985_v253_0_address0;
wire    grp_GEMM_3D_float2_fu_985_v253_0_ce0;
wire    grp_GEMM_3D_float2_fu_985_v253_0_we0;
wire   [31:0] grp_GEMM_3D_float2_fu_985_v253_0_d0;
wire    grp_cache_update_fu_992_ap_start;
wire    grp_cache_update_fu_992_ap_done;
wire    grp_cache_update_fu_992_ap_idle;
wire    grp_cache_update_fu_992_ap_ready;
wire   [12:0] grp_cache_update_fu_992_v192_address0;
wire    grp_cache_update_fu_992_v192_ce0;
reg   [31:0] grp_cache_update_fu_992_v192_q0;
wire   [10:0] grp_cache_update_fu_992_v193_0_address0;
wire    grp_cache_update_fu_992_v193_0_ce0;
reg   [31:0] grp_cache_update_fu_992_v193_0_q0;
wire   [13:0] grp_cache_update_fu_992_v194_address0;
wire    grp_cache_update_fu_992_v194_ce0;
wire    grp_cache_update_fu_992_v194_we0;
wire   [31:0] grp_cache_update_fu_992_v194_d0;
wire    grp_transpose_last_two_d_fu_1002_ap_start;
wire    grp_transpose_last_two_d_fu_1002_ap_done;
wire    grp_transpose_last_two_d_fu_1002_ap_idle;
wire    grp_transpose_last_two_d_fu_1002_ap_ready;
wire   [13:0] grp_transpose_last_two_d_fu_1002_v203_address0;
wire    grp_transpose_last_two_d_fu_1002_v203_ce0;
wire   [13:0] grp_transpose_last_two_d_fu_1002_v204_address0;
wire    grp_transpose_last_two_d_fu_1002_v204_ce0;
wire    grp_transpose_last_two_d_fu_1002_v204_we0;
wire   [31:0] grp_transpose_last_two_d_fu_1002_v204_d0;
wire    grp_reshape_2D_to_3D_fu_1009_ap_start;
wire    grp_reshape_2D_to_3D_fu_1009_ap_idle;
wire   [10:0] grp_reshape_2D_to_3D_fu_1009_v146_address0;
wire    grp_reshape_2D_to_3D_fu_1009_v146_ce0;
reg   [31:0] grp_reshape_2D_to_3D_fu_1009_v146_q0;
wire   [10:0] grp_reshape_2D_to_3D_fu_1009_v147_0_address0;
wire    grp_reshape_2D_to_3D_fu_1009_v147_0_ce0;
wire    grp_reshape_2D_to_3D_fu_1009_v147_0_we0;
wire   [31:0] grp_reshape_2D_to_3D_fu_1009_v147_0_d0;
wire    grp_reshape_2D_to_3D_fu_1017_ap_start;
wire    grp_reshape_2D_to_3D_fu_1017_ap_idle;
wire   [10:0] grp_reshape_2D_to_3D_fu_1017_v146_address0;
wire    grp_reshape_2D_to_3D_fu_1017_v146_ce0;
wire   [10:0] grp_reshape_2D_to_3D_fu_1017_v147_0_address0;
wire    grp_reshape_2D_to_3D_fu_1017_v147_0_ce0;
wire    grp_reshape_2D_to_3D_fu_1017_v147_0_we0;
wire   [31:0] grp_reshape_2D_to_3D_fu_1017_v147_0_d0;
reg   [10:0] v283_0_0_reg_536;
wire   [0:0] icmp_ln479_fu_1052_p2;
reg   [10:0] v293_0_0_reg_547;
wire   [0:0] icmp_ln500_fu_1069_p2;
reg   [10:0] v296_0_0_reg_558;
wire   [0:0] icmp_ln506_fu_1086_p2;
reg   [10:0] v299_0_0_reg_569;
wire   [0:0] icmp_ln512_fu_1103_p2;
reg   [4:0] v338_0_reg_580;
wire   [0:0] icmp_ln592_fu_2523_p2;
reg   [6:0] v340_0_0_reg_591;
reg   [4:0] v342_0_reg_602;
wire   [0:0] icmp_ln600_fu_2587_p2;
reg   [6:0] v344_0_0_reg_613;
reg   [4:0] v346_0_reg_624;
wire    ap_CS_fsm_state22;
reg   [2:0] v347_0_reg_635;
wire   [0:0] icmp_ln609_fu_2706_p2;
reg   [6:0] v348_0_reg_646;
reg   [4:0] v350_0_reg_657;
reg   [2:0] v351_0_reg_668;
wire   [0:0] icmp_ln617_fu_2825_p2;
reg   [6:0] v352_0_reg_679;
reg   [4:0] v358_0_reg_690;
wire    ap_CS_fsm_state31;
reg    ap_block_state31_on_subcall_done;
wire   [0:0] icmp_ln636_fu_2889_p2;
reg   [2:0] v360_0_0_reg_701;
reg   [4:0] i12_0_reg_712;
wire    ap_CS_fsm_state34;
reg   [2:0] k10_0_0_reg_723;
wire    ap_CS_fsm_state54;
reg   [4:0] h6_0_reg_734;
wire    ap_CS_fsm_state62;
reg   [4:0] v378_0_reg_745;
wire   [0:0] icmp_ln674_fu_3060_p2;
reg   [2:0] v380_0_0_reg_756;
reg   [4:0] v382_0_reg_767;
wire    ap_CS_fsm_state65;
wire   [0:0] icmp_ln683_fu_3124_p2;
reg   [6:0] v384_0_0_reg_778;
reg   [10:0] v387_0_0_reg_789;
wire   [0:0] icmp_ln691_fu_3150_p2;
wire    ap_CS_fsm_state68;
reg   [4:0] h7_0_0_reg_800;
reg   [6:0] d4_0_0_reg_811;
wire    ap_CS_fsm_state72;
reg   [10:0] v394_0_0_reg_822;
wire   [0:0] icmp_ln705_fu_3278_p2;
reg   [10:0] v417_0_0_reg_833;
wire   [0:0] icmp_ln753_fu_3573_p2;
reg    grp_linear_forward_no_mu_fu_844_ap_start_reg;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state80;
reg    grp_linear_forward_no_mu_fu_873_ap_start_reg;
reg    grp_softmax_fu_911_ap_start_reg;
reg    grp_rms_norm_fu_931_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state74;
reg    grp_apply_rotary_pos_emb_fu_955_ap_start_reg;
reg    grp_quantize_activation_fu_969_ap_start_reg;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state75;
reg    grp_GEMM_3D_float_fu_977_ap_start_reg;
reg    grp_GEMM_3D_float2_fu_985_ap_start_reg;
reg    grp_cache_update_fu_992_ap_start_reg;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state29;
reg    grp_transpose_last_two_d_fu_1002_ap_start_reg;
reg    grp_reshape_2D_to_3D_fu_1009_ap_start_reg;
reg    grp_reshape_2D_to_3D_fu_1017_ap_start_reg;
wire   [63:0] zext_ln480_fu_1064_p1;
wire   [63:0] zext_ln501_fu_1081_p1;
wire   [63:0] zext_ln507_fu_1098_p1;
wire   [63:0] zext_ln513_fu_1115_p1;
wire  signed [63:0] sext_ln593_fu_2544_p1;
wire  signed [63:0] sext_ln601_fu_2608_p1;
wire   [63:0] zext_ln610_4_fu_2727_p1;
wire   [63:0] zext_ln618_4_fu_2846_p1;
wire  signed [63:0] sext_ln637_fu_2910_p1;
wire  signed [63:0] sext_ln647_fu_2974_p1;
wire  signed [63:0] sext_ln665_fu_3017_p1;
wire  signed [63:0] sext_ln675_fu_3081_p1;
wire  signed [63:0] sext_ln684_fu_3145_p1;
wire   [63:0] zext_ln692_fu_3162_p1;
wire  signed [63:0] sext_ln698_fu_3260_p1;
wire   [63:0] zext_ln699_fu_3273_p1;
wire   [63:0] zext_ln706_fu_3290_p1;
wire   [63:0] zext_ln754_fu_3585_p1;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state38;
reg   [31:0] grp_fu_1034_p0;
wire   [63:0] grp_fu_1034_p1;
wire   [63:0] bitcast_ln696_7_fu_1120_p1;
wire   [10:0] p_Result_9_fu_1136_p4;
wire   [51:0] trunc_ln565_4_fu_1150_p1;
wire   [52:0] tmp_1_fu_1154_p3;
wire   [53:0] zext_ln569_fu_1162_p1;
wire   [0:0] tmp_69_fu_1128_p3;
wire   [53:0] sub_ln461_fu_1166_p2;
wire   [62:0] trunc_ln557_fu_1124_p1;
wire   [11:0] zext_ln461_4_fu_1146_p1;
wire   [11:0] sub_ln575_fu_1186_p2;
wire   [11:0] add_ln581_4_fu_1198_p2;
wire   [11:0] sub_ln581_4_fu_1204_p2;
wire   [63:0] ireg_V_fu_1238_p1;
wire   [10:0] exp_tmp_V_fu_1254_p4;
wire   [51:0] trunc_ln565_fu_1268_p1;
wire   [52:0] tmp_fu_1272_p3;
wire   [53:0] p_Result_53_fu_1280_p1;
wire   [0:0] p_Result_s_fu_1246_p3;
wire   [53:0] man_V_1_fu_1284_p2;
wire   [62:0] trunc_ln556_fu_1242_p1;
wire   [11:0] zext_ln461_fu_1264_p1;
wire   [11:0] F2_fu_1304_p2;
wire   [11:0] add_ln581_fu_1316_p2;
wire   [11:0] sub_ln581_fu_1322_p2;
wire   [53:0] zext_ln586_4_fu_1369_p1;
wire   [53:0] ashr_ln586_4_fu_1373_p2;
wire   [31:0] bitcast_ln696_8_fu_1382_p1;
wire   [0:0] tmp_71_fu_1386_p3;
wire   [0:0] xor_ln571_4_fu_1402_p2;
wire   [0:0] and_ln582_4_fu_1407_p2;
wire   [0:0] or_ln582_4_fu_1419_p2;
wire   [0:0] xor_ln582_4_fu_1423_p2;
wire   [0:0] icmp_ln585_4_fu_1359_p2;
wire   [0:0] and_ln581_4_fu_1429_p2;
wire   [0:0] xor_ln585_4_fu_1434_p2;
wire   [0:0] and_ln585_8_fu_1440_p2;
wire   [31:0] select_ln588_4_fu_1394_p3;
wire   [31:0] select_ln582_fu_1412_p3;
wire   [0:0] and_ln585_9_fu_1454_p2;
wire   [31:0] trunc_ln586_4_fu_1378_p1;
wire   [31:0] select_ln585_fu_1446_p3;
wire   [0:0] or_ln581_4_fu_1468_p2;
wire   [0:0] icmp_ln603_4_fu_1364_p2;
wire   [0:0] xor_ln581_4_fu_1473_p2;
wire  signed [31:0] sext_ln581_fu_1485_p1;
wire   [53:0] zext_ln586_fu_1498_p1;
wire   [53:0] ashr_ln586_fu_1502_p2;
wire   [31:0] bitcast_ln696_fu_1511_p1;
wire   [0:0] tmp_39_fu_1514_p3;
wire   [0:0] xor_ln571_fu_1535_p2;
wire   [0:0] or_ln582_fu_1545_p2;
wire   [0:0] xor_ln582_fu_1549_p2;
wire   [0:0] icmp_ln585_fu_1488_p2;
wire   [0:0] and_ln581_fu_1555_p2;
wire   [0:0] xor_ln585_fu_1560_p2;
wire   [0:0] or_ln581_fu_1578_p2;
wire   [0:0] icmp_ln603_fu_1493_p2;
wire   [0:0] xor_ln581_fu_1583_p2;
wire   [0:0] and_ln603_fu_1589_p2;
wire   [31:0] shl_ln604_fu_1530_p2;
wire   [31:0] trunc_ln586_fu_1507_p1;
wire   [0:0] and_ln585_1_fu_1572_p2;
wire   [0:0] and_ln585_fu_1566_p2;
wire   [31:0] select_ln588_fu_1522_p3;
wire   [0:0] and_ln582_fu_1540_p2;
wire   [0:0] or_ln603_fu_1603_p2;
wire   [31:0] select_ln603_fu_1595_p3;
wire   [31:0] select_ln603_1_fu_1609_p3;
wire   [0:0] or_ln603_1_fu_1616_p2;
wire   [0:0] or_ln603_2_fu_1630_p2;
wire   [31:0] select_ln603_2_fu_1622_p3;
wire   [31:0] shl_ln604_4_fu_1644_p2;
wire   [63:0] ireg_V_1_fu_1654_p1;
wire   [10:0] exp_tmp_V_1_fu_1670_p4;
wire   [51:0] trunc_ln565_1_fu_1684_p1;
wire   [52:0] tmp_s_fu_1688_p3;
wire   [53:0] p_Result_55_fu_1696_p1;
wire   [0:0] p_Result_54_fu_1662_p3;
wire   [53:0] man_V_4_fu_1700_p2;
wire   [62:0] trunc_ln556_1_fu_1658_p1;
wire   [11:0] zext_ln461_1_fu_1680_p1;
wire   [11:0] F2_1_fu_1720_p2;
wire   [11:0] add_ln581_1_fu_1732_p2;
wire   [11:0] sub_ln581_1_fu_1738_p2;
wire   [63:0] grp_fu_1037_p1;
wire   [63:0] ireg_V_2_fu_1772_p1;
wire   [10:0] exp_tmp_V_2_fu_1788_p4;
wire   [51:0] trunc_ln565_2_fu_1802_p1;
wire   [52:0] tmp_8_fu_1806_p3;
wire   [53:0] p_Result_57_fu_1814_p1;
wire   [0:0] p_Result_56_fu_1780_p3;
wire   [53:0] man_V_7_fu_1818_p2;
wire   [62:0] trunc_ln556_2_fu_1776_p1;
wire   [11:0] zext_ln461_2_fu_1798_p1;
wire   [11:0] F2_2_fu_1838_p2;
wire   [11:0] add_ln581_2_fu_1850_p2;
wire   [11:0] sub_ln581_2_fu_1856_p2;
wire  signed [31:0] sext_ln581_1_fu_1890_p1;
wire   [53:0] zext_ln586_1_fu_1903_p1;
wire   [53:0] ashr_ln586_1_fu_1907_p2;
wire   [31:0] bitcast_ln696_2_fu_1916_p1;
wire   [0:0] tmp_42_fu_1919_p3;
wire   [0:0] xor_ln571_1_fu_1940_p2;
wire   [0:0] or_ln582_1_fu_1950_p2;
wire   [0:0] xor_ln582_1_fu_1954_p2;
wire   [0:0] icmp_ln585_1_fu_1893_p2;
wire   [0:0] and_ln581_1_fu_1960_p2;
wire   [0:0] xor_ln585_1_fu_1965_p2;
wire   [0:0] or_ln581_1_fu_1983_p2;
wire   [0:0] icmp_ln603_1_fu_1898_p2;
wire   [0:0] xor_ln581_1_fu_1988_p2;
wire   [0:0] and_ln603_1_fu_1994_p2;
wire   [31:0] shl_ln604_1_fu_1935_p2;
wire   [31:0] trunc_ln586_1_fu_1912_p1;
wire   [0:0] and_ln585_3_fu_1977_p2;
wire   [0:0] and_ln585_2_fu_1971_p2;
wire   [31:0] select_ln588_1_fu_1927_p3;
wire   [0:0] and_ln582_1_fu_1945_p2;
wire   [0:0] or_ln603_3_fu_2008_p2;
wire   [31:0] select_ln603_4_fu_2000_p3;
wire   [31:0] select_ln603_5_fu_2014_p3;
wire   [0:0] or_ln603_4_fu_2021_p2;
wire   [0:0] or_ln603_5_fu_2035_p2;
wire   [31:0] select_ln603_6_fu_2027_p3;
wire  signed [31:0] sext_ln581_2_fu_2049_p1;
wire   [53:0] zext_ln586_2_fu_2062_p1;
wire   [53:0] ashr_ln586_2_fu_2066_p2;
wire   [31:0] bitcast_ln696_4_fu_2075_p1;
wire   [0:0] tmp_53_fu_2078_p3;
wire   [0:0] xor_ln571_2_fu_2099_p2;
wire   [0:0] or_ln582_2_fu_2109_p2;
wire   [0:0] xor_ln582_2_fu_2113_p2;
wire   [0:0] icmp_ln585_2_fu_2052_p2;
wire   [0:0] and_ln581_2_fu_2119_p2;
wire   [0:0] xor_ln585_2_fu_2124_p2;
wire   [0:0] or_ln581_2_fu_2142_p2;
wire   [0:0] icmp_ln603_2_fu_2057_p2;
wire   [0:0] xor_ln581_2_fu_2147_p2;
wire   [0:0] and_ln603_2_fu_2153_p2;
wire   [31:0] shl_ln604_2_fu_2094_p2;
wire   [31:0] trunc_ln586_2_fu_2071_p1;
wire   [0:0] and_ln585_5_fu_2136_p2;
wire   [0:0] and_ln585_4_fu_2130_p2;
wire   [31:0] select_ln588_2_fu_2086_p3;
wire   [0:0] and_ln582_2_fu_2104_p2;
wire   [0:0] or_ln603_6_fu_2167_p2;
wire   [31:0] select_ln603_8_fu_2159_p3;
wire   [31:0] select_ln603_9_fu_2173_p3;
wire   [0:0] or_ln603_7_fu_2180_p2;
wire   [0:0] or_ln603_8_fu_2194_p2;
wire   [31:0] select_ln603_10_fu_2186_p3;
wire   [63:0] ireg_V_3_fu_2208_p1;
wire   [10:0] exp_tmp_V_3_fu_2224_p4;
wire   [51:0] trunc_ln565_3_fu_2238_p1;
wire   [52:0] tmp_9_fu_2242_p3;
wire   [53:0] p_Result_59_fu_2250_p1;
wire   [0:0] p_Result_58_fu_2216_p3;
wire   [53:0] man_V_10_fu_2254_p2;
wire   [62:0] trunc_ln556_3_fu_2212_p1;
wire   [11:0] zext_ln461_3_fu_2234_p1;
wire   [11:0] F2_3_fu_2274_p2;
wire   [11:0] add_ln581_3_fu_2286_p2;
wire   [11:0] sub_ln581_3_fu_2292_p2;
wire  signed [31:0] sext_ln581_3_fu_2326_p1;
wire   [53:0] zext_ln586_3_fu_2339_p1;
wire   [53:0] ashr_ln586_3_fu_2343_p2;
wire   [31:0] bitcast_ln696_6_fu_2352_p1;
wire   [0:0] tmp_68_fu_2355_p3;
wire   [0:0] xor_ln571_3_fu_2376_p2;
wire   [0:0] or_ln582_3_fu_2386_p2;
wire   [0:0] xor_ln582_3_fu_2390_p2;
wire   [0:0] icmp_ln585_3_fu_2329_p2;
wire   [0:0] and_ln581_3_fu_2396_p2;
wire   [0:0] xor_ln585_3_fu_2401_p2;
wire   [0:0] or_ln581_3_fu_2419_p2;
wire   [0:0] icmp_ln603_3_fu_2334_p2;
wire   [0:0] xor_ln581_3_fu_2424_p2;
wire   [0:0] and_ln603_3_fu_2430_p2;
wire   [31:0] shl_ln604_3_fu_2371_p2;
wire   [31:0] trunc_ln586_3_fu_2348_p1;
wire   [0:0] and_ln585_7_fu_2413_p2;
wire   [0:0] and_ln585_6_fu_2407_p2;
wire   [31:0] select_ln588_3_fu_2363_p3;
wire   [0:0] and_ln582_3_fu_2381_p2;
wire   [0:0] or_ln603_9_fu_2444_p2;
wire   [31:0] select_ln603_12_fu_2436_p3;
wire   [31:0] select_ln603_13_fu_2450_p3;
wire   [0:0] or_ln603_10_fu_2457_p2;
wire   [0:0] or_ln603_11_fu_2471_p2;
wire   [31:0] select_ln603_14_fu_2463_p3;
wire   [9:0] tmp_25_fu_2505_p3;
wire   [11:0] tmp_24_fu_2497_p3;
wire   [11:0] zext_ln593_fu_2513_p1;
wire   [11:0] zext_ln593_1_fu_2535_p1;
wire   [11:0] add_ln593_fu_2539_p2;
wire   [9:0] tmp_27_fu_2569_p3;
wire   [11:0] tmp_26_fu_2561_p3;
wire   [11:0] zext_ln601_fu_2577_p1;
wire   [11:0] zext_ln601_1_fu_2599_p1;
wire   [11:0] add_ln601_fu_2603_p2;
wire   [7:0] tmp_28_fu_2625_p3;
wire   [5:0] tmp_29_fu_2637_p3;
wire   [8:0] zext_ln610_fu_2633_p1;
wire   [8:0] zext_ln610_1_fu_2645_p1;
wire   [8:0] sub_ln610_fu_2649_p2;
wire   [9:0] zext_ln610_2_fu_2671_p1;
wire   [9:0] add_ln610_fu_2675_p2;
wire   [7:0] trunc_ln610_fu_2680_p1;
wire   [14:0] p_shl8_cast_fu_2684_p3;
wire   [14:0] p_shl9_cast_fu_2692_p3;
wire   [14:0] zext_ln610_3_fu_2718_p1;
wire   [14:0] add_ln610_1_fu_2722_p2;
wire   [7:0] tmp_30_fu_2744_p3;
wire   [5:0] tmp_31_fu_2756_p3;
wire   [8:0] zext_ln618_fu_2752_p1;
wire   [8:0] zext_ln618_1_fu_2764_p1;
wire   [8:0] sub_ln618_fu_2768_p2;
wire   [9:0] zext_ln618_2_fu_2790_p1;
wire   [9:0] add_ln618_fu_2794_p2;
wire   [7:0] trunc_ln618_fu_2799_p1;
wire   [14:0] p_shl_cast_fu_2803_p3;
wire   [14:0] p_shl2_cast_fu_2811_p3;
wire   [14:0] zext_ln618_3_fu_2837_p1;
wire   [14:0] add_ln618_1_fu_2841_p2;
wire   [5:0] tmp_33_fu_2871_p3;
wire   [7:0] tmp_32_fu_2863_p3;
wire   [7:0] zext_ln637_fu_2879_p1;
wire   [7:0] zext_ln637_1_fu_2901_p1;
wire   [7:0] add_ln637_fu_2905_p2;
wire   [5:0] tmp_35_fu_2935_p3;
wire   [7:0] tmp_34_fu_2927_p3;
wire   [7:0] zext_ln647_fu_2943_p1;
wire   [7:0] zext_ln647_1_fu_2965_p1;
wire   [7:0] add_ln647_fu_2969_p2;
wire   [5:0] tmp_37_fu_2999_p3;
wire   [7:0] tmp_36_fu_2991_p3;
wire   [7:0] zext_ln665_fu_3007_p1;
wire   [7:0] sub_ln665_fu_3011_p2;
wire   [5:0] tmp_43_fu_3042_p3;
wire   [7:0] tmp_40_fu_3034_p3;
wire   [7:0] zext_ln675_fu_3050_p1;
wire   [7:0] zext_ln675_1_fu_3072_p1;
wire   [7:0] add_ln675_fu_3076_p2;
wire   [9:0] tmp_45_fu_3106_p3;
wire   [11:0] tmp_44_fu_3098_p3;
wire   [11:0] zext_ln684_fu_3114_p1;
wire   [11:0] zext_ln684_1_fu_3136_p1;
wire   [11:0] add_ln684_fu_3140_p2;
wire   [9:0] tmp_47_fu_3187_p3;
wire   [11:0] tmp_46_fu_3179_p3;
wire   [11:0] zext_ln698_fu_3195_p1;
wire   [3:0] trunc_ln699_fu_3205_p1;
wire   [10:0] shl_ln_fu_3209_p3;
wire   [8:0] shl_ln699_1_fu_3221_p3;
wire   [11:0] zext_ln699_1_fu_3217_p1;
wire   [11:0] zext_ln699_2_fu_3229_p1;
wire   [11:0] zext_ln697_fu_3239_p1;
wire   [11:0] add_ln698_fu_3255_p2;
wire  signed [31:0] sext_ln699_fu_3270_p1;
wire   [63:0] bitcast_ln696_9_fu_3295_p1;
wire   [10:0] p_Result_s_97_fu_3311_p4;
wire   [51:0] trunc_ln565_5_fu_3325_p1;
wire   [52:0] tmp_5_fu_3329_p3;
wire   [53:0] zext_ln569_1_fu_3337_p1;
wire   [0:0] tmp_72_fu_3303_p3;
wire   [53:0] sub_ln461_1_fu_3341_p2;
wire   [62:0] trunc_ln557_1_fu_3299_p1;
wire   [11:0] zext_ln461_5_fu_3321_p1;
wire   [11:0] sub_ln575_1_fu_3361_p2;
wire   [11:0] add_ln581_5_fu_3373_p2;
wire   [11:0] sub_ln581_5_fu_3379_p2;
wire  signed [31:0] sext_ln581_5_fu_3413_p1;
wire   [53:0] zext_ln586_5_fu_3426_p1;
wire   [53:0] ashr_ln586_5_fu_3430_p2;
wire   [31:0] bitcast_ln696_10_fu_3439_p1;
wire   [0:0] tmp_74_fu_3443_p3;
wire   [0:0] xor_ln571_5_fu_3464_p2;
wire   [0:0] or_ln582_5_fu_3474_p2;
wire   [0:0] xor_ln582_5_fu_3478_p2;
wire   [0:0] icmp_ln585_5_fu_3416_p2;
wire   [0:0] and_ln581_5_fu_3484_p2;
wire   [0:0] xor_ln585_5_fu_3489_p2;
wire   [0:0] or_ln581_5_fu_3507_p2;
wire   [0:0] icmp_ln603_5_fu_3421_p2;
wire   [0:0] xor_ln581_5_fu_3512_p2;
wire   [0:0] and_ln603_5_fu_3518_p2;
wire   [31:0] shl_ln604_5_fu_3459_p2;
wire   [31:0] trunc_ln586_5_fu_3435_p1;
wire   [0:0] and_ln585_11_fu_3501_p2;
wire   [0:0] and_ln585_10_fu_3495_p2;
wire   [31:0] select_ln588_5_fu_3451_p3;
wire   [0:0] and_ln582_5_fu_3469_p2;
wire   [0:0] or_ln603_12_fu_3532_p2;
wire   [31:0] select_ln603_17_fu_3524_p3;
wire   [31:0] select_ln603_18_fu_3538_p3;
wire   [0:0] or_ln603_13_fu_3545_p2;
wire   [0:0] or_ln603_14_fu_3559_p2;
wire   [31:0] select_ln603_19_fu_3551_p3;
reg    grp_fu_1034_ce;
reg    ap_block_state15_on_subcall_done;
reg   [79:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 80'd1;
#0 grp_linear_forward_no_mu_fu_844_ap_start_reg = 1'b0;
#0 grp_linear_forward_no_mu_fu_873_ap_start_reg = 1'b0;
#0 grp_softmax_fu_911_ap_start_reg = 1'b0;
#0 grp_rms_norm_fu_931_ap_start_reg = 1'b0;
#0 grp_apply_rotary_pos_emb_fu_955_ap_start_reg = 1'b0;
#0 grp_quantize_activation_fu_969_ap_start_reg = 1'b0;
#0 grp_GEMM_3D_float_fu_977_ap_start_reg = 1'b0;
#0 grp_GEMM_3D_float2_fu_985_ap_start_reg = 1'b0;
#0 grp_cache_update_fu_992_ap_start_reg = 1'b0;
#0 grp_transpose_last_two_d_fu_1002_ap_start_reg = 1'b0;
#0 grp_reshape_2D_to_3D_fu_1009_ap_start_reg = 1'b0;
#0 grp_reshape_2D_to_3D_fu_1017_ap_start_reg = 1'b0;
end

attention_quantizyd2 #(
    .DataWidth( 8 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
quantized_hidden_sta_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_quantize_activation_fu_969_v24_0_address0),
    .ce0(quantized_hidden_sta_8_ce0),
    .we0(quantized_hidden_sta_8_we0),
    .d0(grp_quantize_activation_fu_969_v24_0_d0)
);

attention_quantizzec #(
    .DataWidth( 8 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
quantized_hidden_sta_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(quantized_hidden_sta_7_address0),
    .ce0(quantized_hidden_sta_7_ce0),
    .q0(quantized_hidden_sta_7_q0)
);

attention_quantizzec #(
    .DataWidth( 8 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
quantized_hidden_sta_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(quantized_hidden_sta_6_address0),
    .ce0(quantized_hidden_sta_6_ce0),
    .q0(quantized_hidden_sta_6_q0)
);

attention_quantizzec #(
    .DataWidth( 8 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
quantized_hidden_sta_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(quantized_hidden_sta_5_address0),
    .ce0(quantized_hidden_sta_5_ce0),
    .q0(quantized_hidden_sta_5_q0)
);

attention_quantizzec #(
    .DataWidth( 8 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
quantized_hidden_sta_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(quantized_hidden_sta_4_address0),
    .ce0(quantized_hidden_sta_4_ce0),
    .q0(quantized_hidden_sta_4_q0)
);

attention_quantizzec #(
    .DataWidth( 8 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
quantized_hidden_sta_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(quantized_hidden_sta_3_address0),
    .ce0(quantized_hidden_sta_3_ce0),
    .q0(quantized_hidden_sta_3_q0)
);

attention_quantizzec #(
    .DataWidth( 8 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
quantized_hidden_sta_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(quantized_hidden_sta_2_address0),
    .ce0(quantized_hidden_sta_2_ce0),
    .q0(quantized_hidden_sta_2_q0)
);

attention_quantizzec #(
    .DataWidth( 8 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
quantized_hidden_sta_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(quantized_hidden_sta_1_address0),
    .ce0(quantized_hidden_sta_1_ce0),
    .q0(quantized_hidden_sta_1_q0)
);

attention_quantizzec #(
    .DataWidth( 8 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
quantized_hidden_sta_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(quantized_hidden_sta_address0),
    .ce0(quantized_hidden_sta_ce0),
    .q0(quantized_hidden_sta_q0)
);

attention_q_proj_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
q_proj_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(q_proj_0_address0),
    .ce0(q_proj_0_ce0),
    .we0(q_proj_0_we0),
    .d0(grp_reshape_2D_to_3D_fu_1009_v147_0_d0),
    .q0(q_proj_0_q0),
    .address1(grp_apply_rotary_pos_emb_fu_955_q_proj_0_address1),
    .ce1(q_proj_0_ce1),
    .q1(q_proj_0_q1)
);

attention_q_proj_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
k_proj_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_proj_0_address0),
    .ce0(k_proj_0_ce0),
    .we0(k_proj_0_we0),
    .d0(grp_reshape_2D_to_3D_fu_1009_v147_0_d0),
    .q0(k_proj_0_q0),
    .address1(grp_apply_rotary_pos_emb_fu_955_k_proj_0_address1),
    .ce1(k_proj_0_ce1),
    .q1(k_proj_0_q1)
);

attention_v_proj_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
v_proj_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(v_proj_0_address0),
    .ce0(v_proj_0_ce0),
    .we0(v_proj_0_we0),
    .d0(grp_reshape_2D_to_3D_fu_1017_v147_0_d0),
    .q0(v_proj_0_q0)
);

attention_k_proj_Hfu #(
    .DataWidth( 32 ),
    .AddressRange( 9216 ),
    .AddressWidth( 14 ))
k_proj_transposed_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_proj_transposed_address0),
    .ce0(k_proj_transposed_ce0),
    .we0(k_proj_transposed_we0),
    .d0(grp_transpose_last_two_d_fu_1002_v204_d0),
    .q0(k_proj_transposed_q0)
);

attention_quantizyd2 #(
    .DataWidth( 8 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
quantized_final_outp_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_quantize_activation_fu_969_v24_0_address0),
    .ce0(quantized_final_outp_8_ce0),
    .we0(quantized_final_outp_8_we0),
    .d0(grp_quantize_activation_fu_969_v24_0_d0)
);

attention_quantizzec #(
    .DataWidth( 8 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
quantized_final_outp_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_linear_forward_no_mu_fu_844_v78_0_0_0_address0),
    .ce0(quantized_final_outp_7_ce0),
    .q0(quantized_final_outp_7_q0)
);

attention_quantizzec #(
    .DataWidth( 8 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
quantized_final_outp_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_linear_forward_no_mu_fu_844_v78_0_0_1_address0),
    .ce0(quantized_final_outp_6_ce0),
    .q0(quantized_final_outp_6_q0)
);

attention_quantizzec #(
    .DataWidth( 8 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
quantized_final_outp_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_linear_forward_no_mu_fu_844_v78_0_0_2_address0),
    .ce0(quantized_final_outp_5_ce0),
    .q0(quantized_final_outp_5_q0)
);

attention_quantizzec #(
    .DataWidth( 8 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
quantized_final_outp_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_linear_forward_no_mu_fu_844_v78_0_0_3_address0),
    .ce0(quantized_final_outp_4_ce0),
    .q0(quantized_final_outp_4_q0)
);

attention_quantizzec #(
    .DataWidth( 8 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
quantized_final_outp_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_linear_forward_no_mu_fu_844_v78_1_0_0_address0),
    .ce0(quantized_final_outp_3_ce0),
    .q0(quantized_final_outp_3_q0)
);

attention_quantizzec #(
    .DataWidth( 8 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
quantized_final_outp_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_linear_forward_no_mu_fu_844_v78_1_0_1_address0),
    .ce0(quantized_final_outp_2_ce0),
    .q0(quantized_final_outp_2_q0)
);

attention_quantizzec #(
    .DataWidth( 8 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
quantized_final_outp_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_linear_forward_no_mu_fu_844_v78_1_0_2_address0),
    .ce0(quantized_final_outp_1_ce0),
    .q0(quantized_final_outp_1_q0)
);

attention_quantizzec #(
    .DataWidth( 8 ),
    .AddressRange( 192 ),
    .AddressWidth( 8 ))
quantized_final_outp_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_linear_forward_no_mu_fu_844_v78_1_0_3_address0),
    .ce0(quantized_final_outp_ce0),
    .q0(quantized_final_outp_q0)
);

attention_rms_hidRg6 #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
rms_hidden_states_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rms_hidden_states_0_address0),
    .ce0(rms_hidden_states_0_ce0),
    .we0(rms_hidden_states_0_we0),
    .d0(rms_hidden_states_0_d0),
    .q0(rms_hidden_states_0_q0)
);

attention_rms_hidRg6 #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
q_proj_re_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(q_proj_re_address0),
    .ce0(q_proj_re_ce0),
    .we0(q_proj_re_we0),
    .d0(q_proj_re_d0),
    .q0(q_proj_re_q0)
);

attention_rms_hidRg6 #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
k_proj_re_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_proj_re_address0),
    .ce0(k_proj_re_ce0),
    .we0(k_proj_re_we0),
    .d0(k_proj_re_d0),
    .q0(k_proj_re_q0)
);

attention_rms_hidRg6 #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
v_proj_re_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(v_proj_re_address0),
    .ce0(v_proj_re_ce0),
    .we0(v_proj_re_we0),
    .d0(v_proj_re_d0),
    .q0(v_proj_re_q0)
);

attention_rms_hidRg6 #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
q_embed_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(q_embed_0_address0),
    .ce0(q_embed_0_ce0),
    .we0(q_embed_0_we0),
    .d0(q_embed_0_d0),
    .q0(q_embed_0_q0)
);

attention_rms_hidRg6 #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
k_embed_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_embed_0_address0),
    .ce0(k_embed_0_ce0),
    .we0(k_embed_0_we0),
    .d0(k_embed_0_d0),
    .q0(k_embed_0_q0)
);

attention_updatedShg #(
    .DataWidth( 32 ),
    .AddressRange( 9216 ),
    .AddressWidth( 14 ))
updated_k_cache_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(updated_k_cache_address0),
    .ce0(updated_k_cache_ce0),
    .we0(updated_k_cache_we0),
    .d0(updated_k_cache_d0),
    .q0(updated_k_cache_q0)
);

attention_updatedShg #(
    .DataWidth( 32 ),
    .AddressRange( 9216 ),
    .AddressWidth( 14 ))
updated_v_cache_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(updated_v_cache_address0),
    .ce0(updated_v_cache_ce0),
    .we0(updated_v_cache_we0),
    .d0(updated_v_cache_d0),
    .q0(updated_v_cache_q0)
);

attention_attn_weUhA #(
    .DataWidth( 32 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
attn_weights_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(attn_weights_0_address0),
    .ce0(attn_weights_0_ce0),
    .we0(attn_weights_0_we0),
    .d0(attn_weights_0_d0),
    .q0(attn_weights_0_q0)
);

attention_attn_weUhA #(
    .DataWidth( 32 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
softmax_attn_weights_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(softmax_attn_weights_address0),
    .ce0(softmax_attn_weights_ce0),
    .we0(softmax_attn_weights_we0),
    .d0(softmax_attn_weights_d0),
    .q0(softmax_attn_weights_q0)
);

attention_rms_hidRg6 #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
attn_output_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(attn_output_0_address0),
    .ce0(attn_output_0_ce0),
    .we0(attn_output_0_we0),
    .d0(attn_output_0_d0),
    .q0(attn_output_0_q0)
);

attention_rms_hidRg6 #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
attn_output_2D_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(attn_output_2D_address0),
    .ce0(attn_output_2D_ce0),
    .we0(attn_output_2D_we0),
    .d0(attn_output_2D_d0),
    .q0(attn_output_2D_q0)
);

attention_rms_hidRg6 #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
rms_attn_output_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rms_attn_output_0_address0),
    .ce0(rms_attn_output_0_ce0),
    .we0(rms_attn_output_0_we0),
    .d0(rms_attn_output_0_d0),
    .q0(rms_attn_output_0_q0)
);

linear_forward_no_mu grp_linear_forward_no_mu_fu_844(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_linear_forward_no_mu_fu_844_ap_start),
    .ap_done(grp_linear_forward_no_mu_fu_844_ap_done),
    .ap_idle(grp_linear_forward_no_mu_fu_844_ap_idle),
    .ap_ready(grp_linear_forward_no_mu_fu_844_ap_ready),
    .v78_0_0_0_address0(grp_linear_forward_no_mu_fu_844_v78_0_0_0_address0),
    .v78_0_0_0_ce0(grp_linear_forward_no_mu_fu_844_v78_0_0_0_ce0),
    .v78_0_0_0_q0(grp_linear_forward_no_mu_fu_844_v78_0_0_0_q0),
    .v78_0_0_1_address0(grp_linear_forward_no_mu_fu_844_v78_0_0_1_address0),
    .v78_0_0_1_ce0(grp_linear_forward_no_mu_fu_844_v78_0_0_1_ce0),
    .v78_0_0_1_q0(grp_linear_forward_no_mu_fu_844_v78_0_0_1_q0),
    .v78_0_0_2_address0(grp_linear_forward_no_mu_fu_844_v78_0_0_2_address0),
    .v78_0_0_2_ce0(grp_linear_forward_no_mu_fu_844_v78_0_0_2_ce0),
    .v78_0_0_2_q0(grp_linear_forward_no_mu_fu_844_v78_0_0_2_q0),
    .v78_0_0_3_address0(grp_linear_forward_no_mu_fu_844_v78_0_0_3_address0),
    .v78_0_0_3_ce0(grp_linear_forward_no_mu_fu_844_v78_0_0_3_ce0),
    .v78_0_0_3_q0(grp_linear_forward_no_mu_fu_844_v78_0_0_3_q0),
    .v78_1_0_0_address0(grp_linear_forward_no_mu_fu_844_v78_1_0_0_address0),
    .v78_1_0_0_ce0(grp_linear_forward_no_mu_fu_844_v78_1_0_0_ce0),
    .v78_1_0_0_q0(grp_linear_forward_no_mu_fu_844_v78_1_0_0_q0),
    .v78_1_0_1_address0(grp_linear_forward_no_mu_fu_844_v78_1_0_1_address0),
    .v78_1_0_1_ce0(grp_linear_forward_no_mu_fu_844_v78_1_0_1_ce0),
    .v78_1_0_1_q0(grp_linear_forward_no_mu_fu_844_v78_1_0_1_q0),
    .v78_1_0_2_address0(grp_linear_forward_no_mu_fu_844_v78_1_0_2_address0),
    .v78_1_0_2_ce0(grp_linear_forward_no_mu_fu_844_v78_1_0_2_ce0),
    .v78_1_0_2_q0(grp_linear_forward_no_mu_fu_844_v78_1_0_2_q0),
    .v78_1_0_3_address0(grp_linear_forward_no_mu_fu_844_v78_1_0_3_address0),
    .v78_1_0_3_ce0(grp_linear_forward_no_mu_fu_844_v78_1_0_3_ce0),
    .v78_1_0_3_q0(grp_linear_forward_no_mu_fu_844_v78_1_0_3_q0),
    .v79_0_V_read(grp_linear_forward_no_mu_fu_844_v79_0_V_read),
    .v80_0_address0(grp_linear_forward_no_mu_fu_844_v80_0_address0),
    .v80_0_ce0(grp_linear_forward_no_mu_fu_844_v80_0_ce0),
    .v80_0_q0(grp_linear_forward_no_mu_fu_844_v80_0_q0),
    .v80_1_address0(grp_linear_forward_no_mu_fu_844_v80_1_address0),
    .v80_1_ce0(grp_linear_forward_no_mu_fu_844_v80_1_ce0),
    .v80_1_q0(grp_linear_forward_no_mu_fu_844_v80_1_q0),
    .v81_V(grp_linear_forward_no_mu_fu_844_v81_V),
    .v82_address0(grp_linear_forward_no_mu_fu_844_v82_address0),
    .v82_ce0(grp_linear_forward_no_mu_fu_844_v82_ce0),
    .v82_we0(grp_linear_forward_no_mu_fu_844_v82_we0),
    .v82_d0(grp_linear_forward_no_mu_fu_844_v82_d0)
);

linear_forward_no_mu grp_linear_forward_no_mu_fu_873(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_linear_forward_no_mu_fu_873_ap_start),
    .ap_done(grp_linear_forward_no_mu_fu_873_ap_done),
    .ap_idle(grp_linear_forward_no_mu_fu_873_ap_idle),
    .ap_ready(grp_linear_forward_no_mu_fu_873_ap_ready),
    .v78_0_0_0_address0(grp_linear_forward_no_mu_fu_873_v78_0_0_0_address0),
    .v78_0_0_0_ce0(grp_linear_forward_no_mu_fu_873_v78_0_0_0_ce0),
    .v78_0_0_0_q0(quantized_hidden_sta_7_q0),
    .v78_0_0_1_address0(grp_linear_forward_no_mu_fu_873_v78_0_0_1_address0),
    .v78_0_0_1_ce0(grp_linear_forward_no_mu_fu_873_v78_0_0_1_ce0),
    .v78_0_0_1_q0(quantized_hidden_sta_6_q0),
    .v78_0_0_2_address0(grp_linear_forward_no_mu_fu_873_v78_0_0_2_address0),
    .v78_0_0_2_ce0(grp_linear_forward_no_mu_fu_873_v78_0_0_2_ce0),
    .v78_0_0_2_q0(quantized_hidden_sta_5_q0),
    .v78_0_0_3_address0(grp_linear_forward_no_mu_fu_873_v78_0_0_3_address0),
    .v78_0_0_3_ce0(grp_linear_forward_no_mu_fu_873_v78_0_0_3_ce0),
    .v78_0_0_3_q0(quantized_hidden_sta_4_q0),
    .v78_1_0_0_address0(grp_linear_forward_no_mu_fu_873_v78_1_0_0_address0),
    .v78_1_0_0_ce0(grp_linear_forward_no_mu_fu_873_v78_1_0_0_ce0),
    .v78_1_0_0_q0(quantized_hidden_sta_3_q0),
    .v78_1_0_1_address0(grp_linear_forward_no_mu_fu_873_v78_1_0_1_address0),
    .v78_1_0_1_ce0(grp_linear_forward_no_mu_fu_873_v78_1_0_1_ce0),
    .v78_1_0_1_q0(quantized_hidden_sta_2_q0),
    .v78_1_0_2_address0(grp_linear_forward_no_mu_fu_873_v78_1_0_2_address0),
    .v78_1_0_2_ce0(grp_linear_forward_no_mu_fu_873_v78_1_0_2_ce0),
    .v78_1_0_2_q0(quantized_hidden_sta_1_q0),
    .v78_1_0_3_address0(grp_linear_forward_no_mu_fu_873_v78_1_0_3_address0),
    .v78_1_0_3_ce0(grp_linear_forward_no_mu_fu_873_v78_1_0_3_ce0),
    .v78_1_0_3_q0(quantized_hidden_sta_q0),
    .v79_0_V_read(scales_fixed_0_V_reg_3746),
    .v80_0_address0(grp_linear_forward_no_mu_fu_873_v80_0_address0),
    .v80_0_ce0(grp_linear_forward_no_mu_fu_873_v80_0_ce0),
    .v80_0_q0(v268_0_q0),
    .v80_1_address0(grp_linear_forward_no_mu_fu_873_v80_1_address0),
    .v80_1_ce0(grp_linear_forward_no_mu_fu_873_v80_1_ce0),
    .v80_1_q0(v268_1_q0),
    .v81_V(v304_V_reg_3837),
    .v82_address0(grp_linear_forward_no_mu_fu_873_v82_address0),
    .v82_ce0(grp_linear_forward_no_mu_fu_873_v82_ce0),
    .v82_we0(grp_linear_forward_no_mu_fu_873_v82_we0),
    .v82_d0(grp_linear_forward_no_mu_fu_873_v82_d0)
);

softmax grp_softmax_fu_911(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_softmax_fu_911_ap_start),
    .ap_done(grp_softmax_fu_911_ap_done),
    .ap_idle(grp_softmax_fu_911_ap_idle),
    .ap_ready(grp_softmax_fu_911_ap_ready),
    .v224_0_address0(grp_softmax_fu_911_v224_0_address0),
    .v224_0_ce0(grp_softmax_fu_911_v224_0_ce0),
    .v224_0_q0(attn_weights_0_q0),
    .v225_0_address0(grp_softmax_fu_911_v225_0_address0),
    .v225_0_ce0(grp_softmax_fu_911_v225_0_ce0),
    .v225_0_we0(grp_softmax_fu_911_v225_0_we0),
    .v225_0_d0(grp_softmax_fu_911_v225_0_d0),
    .v225_0_q0(softmax_attn_weights_q0)
);

rms_norm grp_rms_norm_fu_931(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_rms_norm_fu_931_ap_start),
    .ap_done(grp_rms_norm_fu_931_ap_done),
    .ap_idle(grp_rms_norm_fu_931_ap_idle),
    .ap_ready(grp_rms_norm_fu_931_ap_ready),
    .v0_address0(grp_rms_norm_fu_931_v0_address0),
    .v0_ce0(grp_rms_norm_fu_931_v0_ce0),
    .v0_q0(grp_rms_norm_fu_931_v0_q0),
    .v1_address0(grp_rms_norm_fu_931_v1_address0),
    .v1_ce0(grp_rms_norm_fu_931_v1_ce0),
    .v1_q0(grp_rms_norm_fu_931_v1_q0),
    .v3_0_address0(grp_rms_norm_fu_931_v3_0_address0),
    .v3_0_ce0(grp_rms_norm_fu_931_v3_0_ce0),
    .v3_0_we0(grp_rms_norm_fu_931_v3_0_we0),
    .v3_0_d0(grp_rms_norm_fu_931_v3_0_d0)
);

apply_rotary_pos_emb grp_apply_rotary_pos_emb_fu_955(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_apply_rotary_pos_emb_fu_955_ap_start),
    .ap_done(grp_apply_rotary_pos_emb_fu_955_ap_done),
    .ap_idle(grp_apply_rotary_pos_emb_fu_955_ap_idle),
    .ap_ready(grp_apply_rotary_pos_emb_fu_955_ap_ready),
    .v162_address0(grp_apply_rotary_pos_emb_fu_955_v162_address0),
    .v162_ce0(grp_apply_rotary_pos_emb_fu_955_v162_ce0),
    .v162_q0(v272_q0),
    .v163_address0(grp_apply_rotary_pos_emb_fu_955_v163_address0),
    .v163_ce0(grp_apply_rotary_pos_emb_fu_955_v163_ce0),
    .v163_q0(v273_q0),
    .v164_0_address0(grp_apply_rotary_pos_emb_fu_955_v164_0_address0),
    .v164_0_ce0(grp_apply_rotary_pos_emb_fu_955_v164_0_ce0),
    .v164_0_we0(grp_apply_rotary_pos_emb_fu_955_v164_0_we0),
    .v164_0_d0(grp_apply_rotary_pos_emb_fu_955_v164_0_d0),
    .v165_0_address0(grp_apply_rotary_pos_emb_fu_955_v165_0_address0),
    .v165_0_ce0(grp_apply_rotary_pos_emb_fu_955_v165_0_ce0),
    .v165_0_we0(grp_apply_rotary_pos_emb_fu_955_v165_0_we0),
    .v165_0_d0(grp_apply_rotary_pos_emb_fu_955_v165_0_d0),
    .q_proj_0_address0(grp_apply_rotary_pos_emb_fu_955_q_proj_0_address0),
    .q_proj_0_ce0(grp_apply_rotary_pos_emb_fu_955_q_proj_0_ce0),
    .q_proj_0_q0(q_proj_0_q0),
    .q_proj_0_address1(grp_apply_rotary_pos_emb_fu_955_q_proj_0_address1),
    .q_proj_0_ce1(grp_apply_rotary_pos_emb_fu_955_q_proj_0_ce1),
    .q_proj_0_q1(q_proj_0_q1),
    .k_proj_0_address0(grp_apply_rotary_pos_emb_fu_955_k_proj_0_address0),
    .k_proj_0_ce0(grp_apply_rotary_pos_emb_fu_955_k_proj_0_ce0),
    .k_proj_0_q0(k_proj_0_q0),
    .k_proj_0_address1(grp_apply_rotary_pos_emb_fu_955_k_proj_0_address1),
    .k_proj_0_ce1(grp_apply_rotary_pos_emb_fu_955_k_proj_0_ce1),
    .k_proj_0_q1(k_proj_0_q1)
);

quantize_activation grp_quantize_activation_fu_969(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_quantize_activation_fu_969_ap_start),
    .ap_done(grp_quantize_activation_fu_969_ap_done),
    .ap_idle(grp_quantize_activation_fu_969_ap_idle),
    .ap_ready(grp_quantize_activation_fu_969_ap_ready),
    .v22_0_address0(grp_quantize_activation_fu_969_v22_0_address0),
    .v22_0_ce0(grp_quantize_activation_fu_969_v22_0_ce0),
    .v22_0_q0(grp_quantize_activation_fu_969_v22_0_q0),
    .v24_0_address0(grp_quantize_activation_fu_969_v24_0_address0),
    .v24_0_ce0(grp_quantize_activation_fu_969_v24_0_ce0),
    .v24_0_we0(grp_quantize_activation_fu_969_v24_0_we0),
    .v24_0_d0(grp_quantize_activation_fu_969_v24_0_d0),
    .ap_return(grp_quantize_activation_fu_969_ap_return)
);

GEMM_3D_float grp_GEMM_3D_float_fu_977(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GEMM_3D_float_fu_977_ap_start),
    .ap_done(grp_GEMM_3D_float_fu_977_ap_done),
    .ap_idle(grp_GEMM_3D_float_fu_977_ap_idle),
    .ap_ready(grp_GEMM_3D_float_fu_977_ap_ready),
    .v209_0_address0(grp_GEMM_3D_float_fu_977_v209_0_address0),
    .v209_0_ce0(grp_GEMM_3D_float_fu_977_v209_0_ce0),
    .v209_0_q0(q_embed_0_q0),
    .v211_0_address0(grp_GEMM_3D_float_fu_977_v211_0_address0),
    .v211_0_ce0(grp_GEMM_3D_float_fu_977_v211_0_ce0),
    .v211_0_we0(grp_GEMM_3D_float_fu_977_v211_0_we0),
    .v211_0_d0(grp_GEMM_3D_float_fu_977_v211_0_d0),
    .v211_0_q0(attn_weights_0_q0),
    .k_proj_transposed_address0(grp_GEMM_3D_float_fu_977_k_proj_transposed_address0),
    .k_proj_transposed_ce0(grp_GEMM_3D_float_fu_977_k_proj_transposed_ce0),
    .k_proj_transposed_q0(k_proj_transposed_q0)
);

GEMM_3D_float2 grp_GEMM_3D_float2_fu_985(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GEMM_3D_float2_fu_985_ap_start),
    .ap_done(grp_GEMM_3D_float2_fu_985_ap_done),
    .ap_idle(grp_GEMM_3D_float2_fu_985_ap_idle),
    .ap_ready(grp_GEMM_3D_float2_fu_985_ap_ready),
    .v251_0_address0(grp_GEMM_3D_float2_fu_985_v251_0_address0),
    .v251_0_ce0(grp_GEMM_3D_float2_fu_985_v251_0_ce0),
    .v251_0_q0(softmax_attn_weights_q0),
    .v252_address0(grp_GEMM_3D_float2_fu_985_v252_address0),
    .v252_ce0(grp_GEMM_3D_float2_fu_985_v252_ce0),
    .v252_q0(updated_v_cache_q0),
    .v253_0_address0(grp_GEMM_3D_float2_fu_985_v253_0_address0),
    .v253_0_ce0(grp_GEMM_3D_float2_fu_985_v253_0_ce0),
    .v253_0_we0(grp_GEMM_3D_float2_fu_985_v253_0_we0),
    .v253_0_d0(grp_GEMM_3D_float2_fu_985_v253_0_d0),
    .v253_0_q0(attn_output_0_q0)
);

cache_update grp_cache_update_fu_992(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_cache_update_fu_992_ap_start),
    .ap_done(grp_cache_update_fu_992_ap_done),
    .ap_idle(grp_cache_update_fu_992_ap_idle),
    .ap_ready(grp_cache_update_fu_992_ap_ready),
    .v192_address0(grp_cache_update_fu_992_v192_address0),
    .v192_ce0(grp_cache_update_fu_992_v192_ce0),
    .v192_q0(grp_cache_update_fu_992_v192_q0),
    .v193_0_address0(grp_cache_update_fu_992_v193_0_address0),
    .v193_0_ce0(grp_cache_update_fu_992_v193_0_ce0),
    .v193_0_q0(grp_cache_update_fu_992_v193_0_q0),
    .v194_address0(grp_cache_update_fu_992_v194_address0),
    .v194_ce0(grp_cache_update_fu_992_v194_ce0),
    .v194_we0(grp_cache_update_fu_992_v194_we0),
    .v194_d0(grp_cache_update_fu_992_v194_d0)
);

transpose_last_two_d grp_transpose_last_two_d_fu_1002(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_transpose_last_two_d_fu_1002_ap_start),
    .ap_done(grp_transpose_last_two_d_fu_1002_ap_done),
    .ap_idle(grp_transpose_last_two_d_fu_1002_ap_idle),
    .ap_ready(grp_transpose_last_two_d_fu_1002_ap_ready),
    .v203_address0(grp_transpose_last_two_d_fu_1002_v203_address0),
    .v203_ce0(grp_transpose_last_two_d_fu_1002_v203_ce0),
    .v203_q0(updated_k_cache_q0),
    .v204_address0(grp_transpose_last_two_d_fu_1002_v204_address0),
    .v204_ce0(grp_transpose_last_two_d_fu_1002_v204_ce0),
    .v204_we0(grp_transpose_last_two_d_fu_1002_v204_we0),
    .v204_d0(grp_transpose_last_two_d_fu_1002_v204_d0)
);

reshape_2D_to_3D grp_reshape_2D_to_3D_fu_1009(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_reshape_2D_to_3D_fu_1009_ap_start),
    .ap_done(grp_reshape_2D_to_3D_fu_1009_ap_done),
    .ap_idle(grp_reshape_2D_to_3D_fu_1009_ap_idle),
    .ap_ready(grp_reshape_2D_to_3D_fu_1009_ap_ready),
    .v146_address0(grp_reshape_2D_to_3D_fu_1009_v146_address0),
    .v146_ce0(grp_reshape_2D_to_3D_fu_1009_v146_ce0),
    .v146_q0(grp_reshape_2D_to_3D_fu_1009_v146_q0),
    .v147_0_address0(grp_reshape_2D_to_3D_fu_1009_v147_0_address0),
    .v147_0_ce0(grp_reshape_2D_to_3D_fu_1009_v147_0_ce0),
    .v147_0_we0(grp_reshape_2D_to_3D_fu_1009_v147_0_we0),
    .v147_0_d0(grp_reshape_2D_to_3D_fu_1009_v147_0_d0)
);

reshape_2D_to_3D grp_reshape_2D_to_3D_fu_1017(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_reshape_2D_to_3D_fu_1017_ap_start),
    .ap_done(grp_reshape_2D_to_3D_fu_1017_ap_done),
    .ap_idle(grp_reshape_2D_to_3D_fu_1017_ap_idle),
    .ap_ready(grp_reshape_2D_to_3D_fu_1017_ap_ready),
    .v146_address0(grp_reshape_2D_to_3D_fu_1017_v146_address0),
    .v146_ce0(grp_reshape_2D_to_3D_fu_1017_v146_ce0),
    .v146_q0(v_proj_re_q0),
    .v147_0_address0(grp_reshape_2D_to_3D_fu_1017_v147_0_address0),
    .v147_0_ce0(grp_reshape_2D_to_3D_fu_1017_v147_0_ce0),
    .v147_0_we0(grp_reshape_2D_to_3D_fu_1017_v147_0_we0),
    .v147_0_d0(grp_reshape_2D_to_3D_fu_1017_v147_0_d0)
);

attention_fadd_32pcA #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
attention_fadd_32pcA_U95(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_1046),
    .din1(32'd0),
    .ce(1'b1),
    .dout(grp_fu_1024_p2)
);

attention_fdiv_32rcU #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
attention_fdiv_32rcU_U96(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_1046),
    .din1(32'd1092404337),
    .ce(1'b1),
    .dout(grp_fu_1029_p2)
);

attention_fpext_3Zio #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
attention_fpext_3Zio_U97(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1034_p0),
    .ce(grp_fu_1034_ce),
    .dout(grp_fu_1034_p1)
);

attention_fpext_3Zio #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
attention_fpext_3Zio_U98(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v269),
    .ce(1'b1),
    .dout(grp_fu_1037_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_GEMM_3D_float2_fu_985_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln681_fu_3086_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state66))) begin
            grp_GEMM_3D_float2_fu_985_ap_start_reg <= 1'b1;
        end else if ((grp_GEMM_3D_float2_fu_985_ap_ready == 1'b1)) begin
            grp_GEMM_3D_float2_fu_985_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_GEMM_3D_float_fu_977_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln634_fu_2851_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
            grp_GEMM_3D_float_fu_977_ap_start_reg <= 1'b1;
        end else if ((grp_GEMM_3D_float_fu_977_ap_ready == 1'b1)) begin
            grp_GEMM_3D_float_fu_977_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_apply_rotary_pos_emb_fu_955_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln598_fu_2549_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
            grp_apply_rotary_pos_emb_fu_955_ap_start_reg <= 1'b1;
        end else if ((grp_apply_rotary_pos_emb_fu_955_ap_ready == 1'b1)) begin
            grp_apply_rotary_pos_emb_fu_955_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_cache_update_fu_992_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state30) | ((icmp_ln615_fu_2732_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26)))) begin
            grp_cache_update_fu_992_ap_start_reg <= 1'b1;
        end else if ((grp_cache_update_fu_992_ap_ready == 1'b1)) begin
            grp_cache_update_fu_992_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_linear_forward_no_mu_fu_844_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state79) & (icmp_ln753_fu_3573_p2 == 1'd1)))) begin
            grp_linear_forward_no_mu_fu_844_ap_start_reg <= 1'b1;
        end else if ((grp_linear_forward_no_mu_fu_844_ap_ready == 1'b1)) begin
            grp_linear_forward_no_mu_fu_844_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_linear_forward_no_mu_fu_873_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state14)) begin
            grp_linear_forward_no_mu_fu_873_ap_start_reg <= 1'b1;
        end else if ((grp_linear_forward_no_mu_fu_873_ap_ready == 1'b1)) begin
            grp_linear_forward_no_mu_fu_873_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_quantize_activation_fu_969_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state4))) begin
            grp_quantize_activation_fu_969_ap_start_reg <= 1'b1;
        end else if ((grp_quantize_activation_fu_969_ap_ready == 1'b1)) begin
            grp_quantize_activation_fu_969_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_reshape_2D_to_3D_fu_1009_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14))) begin
            grp_reshape_2D_to_3D_fu_1009_ap_start_reg <= 1'b1;
        end else if ((grp_reshape_2D_to_3D_fu_1009_ap_ready == 1'b1)) begin
            grp_reshape_2D_to_3D_fu_1009_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_reshape_2D_to_3D_fu_1017_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state16)) begin
            grp_reshape_2D_to_3D_fu_1017_ap_start_reg <= 1'b1;
        end else if ((grp_reshape_2D_to_3D_fu_1017_ap_ready == 1'b1)) begin
            grp_reshape_2D_to_3D_fu_1017_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_rms_norm_fu_931_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state73) & (icmp_ln705_fu_3278_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln479_fu_1052_p2 == 1'd1)))) begin
            grp_rms_norm_fu_931_ap_start_reg <= 1'b1;
        end else if ((grp_rms_norm_fu_931_ap_ready == 1'b1)) begin
            grp_rms_norm_fu_931_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_softmax_fu_911_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln672_fu_3022_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state63))) begin
            grp_softmax_fu_911_ap_start_reg <= 1'b1;
        end else if ((grp_softmax_fu_911_ap_ready == 1'b1)) begin
            grp_softmax_fu_911_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_transpose_last_two_d_fu_1002_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state30)) begin
            grp_transpose_last_two_d_fu_1002_ap_start_reg <= 1'b1;
        end else if ((grp_transpose_last_two_d_fu_1002_ap_ready == 1'b1)) begin
            grp_transpose_last_two_d_fu_1002_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        d4_0_0_reg_811 <= add_ln697_reg_4138;
    end else if (((icmp_ln696_fu_3167_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state70))) begin
        d4_0_0_reg_811 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln644_fu_2915_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state35))) begin
        h6_0_reg_734 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        h6_0_reg_734 <= h6_reg_4052;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln697_fu_3243_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state71))) begin
        h7_0_0_reg_800 <= add_ln696_reg_4120;
    end else if (((1'b1 == ap_CS_fsm_state69) & (icmp_ln691_fu_3150_p2 == 1'd1))) begin
        h7_0_0_reg_800 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln646_fu_2953_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
        i12_0_reg_712 <= i12_reg_4021;
    end else if (((1'b1 == ap_CS_fsm_state34) & (grp_GEMM_3D_float_fu_977_ap_done == 1'b1))) begin
        i12_0_reg_712 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        k10_0_0_reg_723 <= add_ln646_reg_4034;
    end else if (((icmp_ln644_fu_2915_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state35))) begin
        k10_0_0_reg_723 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        v283_0_0_reg_536 <= 11'd0;
    end else if (((icmp_ln479_fu_1052_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        v283_0_0_reg_536 <= add_ln479_fu_1058_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_quantize_activation_fu_969_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        v293_0_0_reg_547 <= 11'd0;
    end else if (((icmp_ln500_fu_1069_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        v293_0_0_reg_547 <= add_ln500_fu_1075_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln500_fu_1069_p2 == 1'd1))) begin
        v296_0_0_reg_558 <= 11'd0;
    end else if (((icmp_ln506_fu_1086_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        v296_0_0_reg_558 <= add_ln506_fu_1092_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln506_fu_1086_p2 == 1'd1))) begin
        v299_0_0_reg_569 <= 11'd0;
    end else if (((icmp_ln512_fu_1103_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        v299_0_0_reg_569 <= add_ln512_fu_1109_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln592_fu_2523_p2 == 1'd1))) begin
        v338_0_reg_580 <= v338_reg_3890;
    end else if (((1'b0 == ap_block_state17_on_subcall_done) & (1'b1 == ap_CS_fsm_state17))) begin
        v338_0_reg_580 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln590_fu_2485_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        v340_0_0_reg_591 <= 7'd0;
    end else if (((icmp_ln592_fu_2523_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        v340_0_0_reg_591 <= add_ln592_fu_2529_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln590_fu_2485_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        v342_0_reg_602 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln600_fu_2587_p2 == 1'd1))) begin
        v342_0_reg_602 <= v342_reg_3911;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln598_fu_2549_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        v344_0_0_reg_613 <= 7'd0;
    end else if (((icmp_ln600_fu_2587_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        v344_0_0_reg_613 <= add_ln600_fu_2593_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln608_fu_2659_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        v346_0_reg_624 <= v346_reg_3932;
    end else if (((1'b1 == ap_CS_fsm_state22) & (grp_apply_rotary_pos_emb_fu_955_ap_done == 1'b1))) begin
        v346_0_reg_624 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln609_fu_2706_p2 == 1'd1))) begin
        v347_0_reg_635 <= v347_reg_3945;
    end else if (((icmp_ln607_fu_2613_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        v347_0_reg_635 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln608_fu_2659_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        v348_0_reg_646 <= 7'd0;
    end else if (((icmp_ln609_fu_2706_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        v348_0_reg_646 <= v348_fu_2712_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln607_fu_2613_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        v350_0_reg_657 <= 5'd0;
    end else if (((icmp_ln616_fu_2778_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        v350_0_reg_657 <= v350_reg_3966;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) & (icmp_ln617_fu_2825_p2 == 1'd1))) begin
        v351_0_reg_668 <= v351_reg_3979;
    end else if (((icmp_ln615_fu_2732_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        v351_0_reg_668 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln616_fu_2778_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        v352_0_reg_679 <= 7'd0;
    end else if (((icmp_ln617_fu_2825_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        v352_0_reg_679 <= v352_fu_2831_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) & (icmp_ln636_fu_2889_p2 == 1'd1))) begin
        v358_0_reg_690 <= v358_reg_4000;
    end else if (((1'b1 == ap_CS_fsm_state31) & (1'b0 == ap_block_state31_on_subcall_done))) begin
        v358_0_reg_690 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln634_fu_2851_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
        v360_0_0_reg_701 <= 3'd0;
    end else if (((icmp_ln636_fu_2889_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state33))) begin
        v360_0_0_reg_701 <= add_ln636_fu_2895_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln661_fu_2979_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state55))) begin
        v378_0_reg_745 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state64) & (icmp_ln674_fu_3060_p2 == 1'd1))) begin
        v378_0_reg_745 <= v378_reg_4070;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln672_fu_3022_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state63))) begin
        v380_0_0_reg_756 <= 3'd0;
    end else if (((icmp_ln674_fu_3060_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state64))) begin
        v380_0_0_reg_756 <= add_ln674_fu_3066_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state67) & (icmp_ln683_fu_3124_p2 == 1'd1))) begin
        v382_0_reg_767 <= v382_reg_4091;
    end else if (((1'b1 == ap_CS_fsm_state65) & (grp_softmax_fu_911_ap_done == 1'b1))) begin
        v382_0_reg_767 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln681_fu_3086_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state66))) begin
        v384_0_0_reg_778 <= 7'd0;
    end else if (((icmp_ln683_fu_3124_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state67))) begin
        v384_0_0_reg_778 <= add_ln683_fu_3130_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state68) & (grp_GEMM_3D_float2_fu_985_ap_done == 1'b1))) begin
        v387_0_0_reg_789 <= 11'd0;
    end else if (((icmp_ln691_fu_3150_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state69))) begin
        v387_0_0_reg_789 <= add_ln691_fu_3156_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln696_fu_3167_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state70))) begin
        v394_0_0_reg_822 <= 11'd0;
    end else if (((icmp_ln705_fu_3278_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state73))) begin
        v394_0_0_reg_822 <= add_ln705_fu_3284_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        v417_0_0_reg_833 <= 11'd0;
    end else if (((icmp_ln753_fu_3573_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state79))) begin
        v417_0_0_reg_833 <= add_ln753_fu_3579_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        add_ln646_reg_4034 <= add_ln646_fu_2959_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        add_ln696_reg_4120 <= add_ln696_fu_3173_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        add_ln697_reg_4138 <= add_ln697_fu_3249_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln697_fu_3243_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state71))) begin
        add_ln699_reg_4148 <= add_ln699_fu_3265_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        and_ln603_4_reg_3736 <= and_ln603_4_fu_1479_p2;
        icmp_ln571_reg_3691 <= icmp_ln571_fu_1298_p2;
        icmp_ln581_reg_3697 <= icmp_ln581_fu_1310_p2;
        icmp_ln582_reg_3709 <= icmp_ln582_fu_1336_p2;
        man_V_2_reg_3686 <= man_V_2_fu_1290_p3;
        select_ln585_1_reg_3731 <= select_ln585_1_fu_1460_p3;
        sext_ln581_4_reg_3726 <= sext_ln581_4_fu_1356_p1;
        sh_amt_reg_3703 <= sh_amt_fu_1328_p3;
        tmp_38_reg_3721 <= {{sh_amt_fu_1328_p3[11:5]}};
        trunc_ln583_reg_3715 <= trunc_ln583_fu_1342_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln661_fu_2979_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state55))) begin
        attn_weights_0_addr_1_reg_4057[6 : 1] <= sext_ln665_fu_3017_p1[6 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln646_fu_2953_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36))) begin
        attn_weights_0_addr_2_reg_4039 <= sext_ln647_fu_2974_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        final_scales_fixed_0_reg_4201 <= final_scales_fixed_0_fu_3565_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        h6_reg_4052 <= h6_fu_2985_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        i12_reg_4021 <= i12_fu_2921_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        icmp_ln571_1_reg_3757 <= icmp_ln571_1_fu_1714_p2;
        icmp_ln571_2_reg_3797 <= icmp_ln571_2_fu_1832_p2;
        icmp_ln581_1_reg_3763 <= icmp_ln581_1_fu_1726_p2;
        icmp_ln581_2_reg_3803 <= icmp_ln581_2_fu_1844_p2;
        icmp_ln582_1_reg_3775 <= icmp_ln582_1_fu_1752_p2;
        icmp_ln582_2_reg_3815 <= icmp_ln582_2_fu_1870_p2;
        man_V_5_reg_3752 <= man_V_5_fu_1706_p3;
        man_V_8_reg_3792 <= man_V_8_fu_1824_p3;
        sh_amt_1_reg_3769 <= sh_amt_1_fu_1744_p3;
        sh_amt_2_reg_3809 <= sh_amt_2_fu_1862_p3;
        tmp_41_reg_3787 <= {{sh_amt_1_fu_1744_p3[11:5]}};
        tmp_52_reg_3827 <= {{sh_amt_2_fu_1862_p3[11:5]}};
        trunc_ln583_1_reg_3781 <= trunc_ln583_1_fu_1758_p1;
        trunc_ln583_2_reg_3821 <= trunc_ln583_2_fu_1876_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        icmp_ln571_3_reg_3847 <= icmp_ln571_3_fu_2268_p2;
        icmp_ln581_3_reg_3853 <= icmp_ln581_3_fu_2280_p2;
        icmp_ln582_3_reg_3865 <= icmp_ln582_3_fu_2306_p2;
        man_V_11_reg_3842 <= man_V_11_fu_2260_p3;
        sh_amt_3_reg_3859 <= sh_amt_3_fu_2298_p3;
        tmp_57_reg_3877 <= {{sh_amt_3_fu_2298_p3[11:5]}};
        trunc_ln583_3_reg_3871 <= trunc_ln583_3_fu_2312_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        icmp_ln571_4_reg_3651 <= icmp_ln571_4_fu_1180_p2;
        icmp_ln581_4_reg_3657 <= icmp_ln581_4_fu_1192_p2;
        icmp_ln582_4_reg_3669 <= icmp_ln582_4_fu_1218_p2;
        select_ln570_reg_3646 <= select_ln570_fu_1172_p3;
        select_ln581_reg_3663 <= select_ln581_fu_1210_p3;
        tmp_70_reg_3681 <= {{select_ln581_fu_1210_p3[11:5]}};
        trunc_ln583_4_reg_3675 <= trunc_ln583_4_fu_1224_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        icmp_ln571_5_reg_4166 <= icmp_ln571_5_fu_3355_p2;
        icmp_ln581_5_reg_4172 <= icmp_ln581_5_fu_3367_p2;
        icmp_ln582_5_reg_4184 <= icmp_ln582_5_fu_3393_p2;
        select_ln570_1_reg_4161 <= select_ln570_1_fu_3347_p3;
        select_ln581_1_reg_4178 <= select_ln581_1_fu_3385_p3;
        tmp_73_reg_4196 <= {{select_ln581_1_fu_3385_p3[11:5]}};
        trunc_ln583_5_reg_4190 <= trunc_ln583_5_fu_3399_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((grp_quantize_activation_fu_969_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state76)) | ((grp_quantize_activation_fu_969_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)))) begin
        reg_1041 <= grp_quantize_activation_fu_969_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state37))) begin
        reg_1046 <= attn_weights_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        scales_fixed_0_V_reg_3746 <= scales_fixed_0_V_fu_1648_p3;
        v300_V_reg_3741 <= v300_V_fu_1636_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln607_fu_2613_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        sext_ln610_reg_3937[9 : 1] <= sext_ln610_fu_2655_p1[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln615_fu_2732_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        sext_ln618_reg_3971[9 : 1] <= sext_ln618_fu_2774_p1[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln590_fu_2485_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        sub_ln593_reg_3895[11 : 5] <= sub_ln593_fu_2517_p2[11 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln598_fu_2549_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        sub_ln601_reg_3916[11 : 5] <= sub_ln601_fu_2581_p2[11 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln608_fu_2659_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        sub_ln610_1_reg_3950[14 : 5] <= sub_ln610_1_fu_2700_p2[14 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln616_fu_2778_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        sub_ln618_1_reg_3984[14 : 5] <= sub_ln618_1_fu_2819_p2[14 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln634_fu_2851_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
        sub_ln637_reg_4005[7 : 1] <= sub_ln637_fu_2883_p2[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln644_fu_2915_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state35))) begin
        sub_ln647_reg_4026[7 : 1] <= sub_ln647_fu_2947_p2[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln672_fu_3022_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state63))) begin
        sub_ln675_reg_4075[7 : 1] <= sub_ln675_fu_3054_p2[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln681_fu_3086_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state66))) begin
        sub_ln684_reg_4096[11 : 5] <= sub_ln684_fu_3118_p2[11 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln696_fu_3167_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state70))) begin
        sub_ln698_reg_4125[11 : 5] <= sub_ln698_fu_3199_p2[11 : 5];
        sub_ln699_reg_4130[11 : 5] <= sub_ln699_fu_3233_p2[11 : 5];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        v2_reg_4062 <= grp_fu_1024_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_linear_forward_no_mu_fu_844_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        v302_V_reg_3832 <= v302_V_fu_2041_p3;
        v304_V_reg_3837 <= v304_V_fu_2200_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state17_on_subcall_done) & (1'b1 == ap_CS_fsm_state17))) begin
        v306_V_reg_3882 <= v306_V_fu_2477_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        v338_reg_3890 <= v338_fu_2491_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        v342_reg_3911 <= v342_fu_2555_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        v346_reg_3932 <= v346_fu_2619_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        v347_reg_3945 <= v347_fu_2665_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        v350_reg_3966 <= v350_fu_2738_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        v351_reg_3979 <= v351_fu_2784_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        v358_reg_4000 <= v358_fu_2857_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        v378_reg_4070 <= v378_fu_3028_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        v382_reg_4091 <= v382_fu_3092_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        v_reg_4044 <= grp_fu_1029_p2;
    end
end

always @ (*) begin
    if (((grp_linear_forward_no_mu_fu_844_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state80))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_linear_forward_no_mu_fu_844_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state80))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        attn_output_0_address0 = sext_ln698_fu_3260_p1;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        attn_output_0_address0 = sext_ln684_fu_3145_p1;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        attn_output_0_address0 = grp_GEMM_3D_float2_fu_985_v253_0_address0;
    end else begin
        attn_output_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state67))) begin
        attn_output_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        attn_output_0_ce0 = grp_GEMM_3D_float2_fu_985_v253_0_ce0;
    end else begin
        attn_output_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        attn_output_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        attn_output_0_d0 = grp_GEMM_3D_float2_fu_985_v253_0_d0;
    end else begin
        attn_output_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln683_fu_3124_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state67))) begin
        attn_output_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        attn_output_0_we0 = grp_GEMM_3D_float2_fu_985_v253_0_we0;
    end else begin
        attn_output_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        attn_output_2D_address0 = zext_ln699_fu_3273_p1;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        attn_output_2D_address0 = zext_ln692_fu_3162_p1;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        attn_output_2D_address0 = grp_rms_norm_fu_931_v0_address0;
    end else begin
        attn_output_2D_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state72))) begin
        attn_output_2D_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        attn_output_2D_ce0 = grp_rms_norm_fu_931_v0_ce0;
    end else begin
        attn_output_2D_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        attn_output_2D_d0 = attn_output_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state69)) begin
        attn_output_2D_d0 = 32'd0;
    end else begin
        attn_output_2D_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state72) | ((icmp_ln691_fu_3150_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state69)))) begin
        attn_output_2D_we0 = 1'b1;
    end else begin
        attn_output_2D_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        attn_weights_0_address0 = attn_weights_0_addr_1_reg_4057;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        attn_weights_0_address0 = sext_ln665_fu_3017_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        attn_weights_0_address0 = attn_weights_0_addr_2_reg_4039;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        attn_weights_0_address0 = sext_ln647_fu_2974_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        attn_weights_0_address0 = sext_ln637_fu_2910_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        attn_weights_0_address0 = grp_GEMM_3D_float_fu_977_v211_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        attn_weights_0_address0 = grp_softmax_fu_911_v224_0_address0;
    end else begin
        attn_weights_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state54))) begin
        attn_weights_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        attn_weights_0_ce0 = grp_GEMM_3D_float_fu_977_v211_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        attn_weights_0_ce0 = grp_softmax_fu_911_v224_0_ce0;
    end else begin
        attn_weights_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        attn_weights_0_d0 = v2_reg_4062;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        attn_weights_0_d0 = v_reg_4044;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        attn_weights_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        attn_weights_0_d0 = grp_GEMM_3D_float_fu_977_v211_0_d0;
    end else begin
        attn_weights_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state54) | ((icmp_ln636_fu_2889_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state33)))) begin
        attn_weights_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        attn_weights_0_we0 = grp_GEMM_3D_float_fu_977_v211_0_we0;
    end else begin
        attn_weights_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_cache_update_fu_992_v192_q0 = v277_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_cache_update_fu_992_v192_q0 = v276_q0;
    end else begin
        grp_cache_update_fu_992_v192_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_cache_update_fu_992_v193_0_q0 = v_proj_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_cache_update_fu_992_v193_0_q0 = k_embed_0_q0;
    end else begin
        grp_cache_update_fu_992_v193_0_q0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | ((grp_quantize_activation_fu_969_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state76)) | ((1'b0 == ap_block_state15_on_subcall_done) & (1'b1 == ap_CS_fsm_state15)))) begin
        grp_fu_1034_ce = 1'b1;
    end else begin
        grp_fu_1034_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        grp_fu_1034_p0 = grp_quantize_activation_fu_969_ap_return;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_1034_p0 = v271;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_1034_p0 = v267;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_1034_p0 = v265;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_1034_p0 = reg_1041;
    end else begin
        grp_fu_1034_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        grp_linear_forward_no_mu_fu_844_v78_0_0_0_q0 = quantized_final_outp_7_q0;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state15))) begin
        grp_linear_forward_no_mu_fu_844_v78_0_0_0_q0 = quantized_hidden_sta_7_q0;
    end else begin
        grp_linear_forward_no_mu_fu_844_v78_0_0_0_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        grp_linear_forward_no_mu_fu_844_v78_0_0_1_q0 = quantized_final_outp_6_q0;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state15))) begin
        grp_linear_forward_no_mu_fu_844_v78_0_0_1_q0 = quantized_hidden_sta_6_q0;
    end else begin
        grp_linear_forward_no_mu_fu_844_v78_0_0_1_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        grp_linear_forward_no_mu_fu_844_v78_0_0_2_q0 = quantized_final_outp_5_q0;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state15))) begin
        grp_linear_forward_no_mu_fu_844_v78_0_0_2_q0 = quantized_hidden_sta_5_q0;
    end else begin
        grp_linear_forward_no_mu_fu_844_v78_0_0_2_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        grp_linear_forward_no_mu_fu_844_v78_0_0_3_q0 = quantized_final_outp_4_q0;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state15))) begin
        grp_linear_forward_no_mu_fu_844_v78_0_0_3_q0 = quantized_hidden_sta_4_q0;
    end else begin
        grp_linear_forward_no_mu_fu_844_v78_0_0_3_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        grp_linear_forward_no_mu_fu_844_v78_1_0_0_q0 = quantized_final_outp_3_q0;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state15))) begin
        grp_linear_forward_no_mu_fu_844_v78_1_0_0_q0 = quantized_hidden_sta_3_q0;
    end else begin
        grp_linear_forward_no_mu_fu_844_v78_1_0_0_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        grp_linear_forward_no_mu_fu_844_v78_1_0_1_q0 = quantized_final_outp_2_q0;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state15))) begin
        grp_linear_forward_no_mu_fu_844_v78_1_0_1_q0 = quantized_hidden_sta_2_q0;
    end else begin
        grp_linear_forward_no_mu_fu_844_v78_1_0_1_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        grp_linear_forward_no_mu_fu_844_v78_1_0_2_q0 = quantized_final_outp_1_q0;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state15))) begin
        grp_linear_forward_no_mu_fu_844_v78_1_0_2_q0 = quantized_hidden_sta_1_q0;
    end else begin
        grp_linear_forward_no_mu_fu_844_v78_1_0_2_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        grp_linear_forward_no_mu_fu_844_v78_1_0_3_q0 = quantized_final_outp_q0;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state15))) begin
        grp_linear_forward_no_mu_fu_844_v78_1_0_3_q0 = quantized_hidden_sta_q0;
    end else begin
        grp_linear_forward_no_mu_fu_844_v78_1_0_3_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        grp_linear_forward_no_mu_fu_844_v79_0_V_read = final_scales_fixed_0_reg_4201;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state15))) begin
        grp_linear_forward_no_mu_fu_844_v79_0_V_read = scales_fixed_0_V_reg_3746;
    end else begin
        grp_linear_forward_no_mu_fu_844_v79_0_V_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        grp_linear_forward_no_mu_fu_844_v80_0_q0 = v270_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_linear_forward_no_mu_fu_844_v80_0_q0 = v266_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_linear_forward_no_mu_fu_844_v80_0_q0 = v264_0_q0;
    end else begin
        grp_linear_forward_no_mu_fu_844_v80_0_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        grp_linear_forward_no_mu_fu_844_v80_1_q0 = v270_1_q0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_linear_forward_no_mu_fu_844_v80_1_q0 = v266_1_q0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_linear_forward_no_mu_fu_844_v80_1_q0 = v264_1_q0;
    end else begin
        grp_linear_forward_no_mu_fu_844_v80_1_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        grp_linear_forward_no_mu_fu_844_v81_V = v306_V_reg_3882;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_linear_forward_no_mu_fu_844_v81_V = v302_V_reg_3832;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_linear_forward_no_mu_fu_844_v81_V = v300_V_reg_3741;
    end else begin
        grp_linear_forward_no_mu_fu_844_v81_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        grp_quantize_activation_fu_969_v22_0_q0 = rms_attn_output_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_quantize_activation_fu_969_v22_0_q0 = rms_hidden_states_0_q0;
    end else begin
        grp_quantize_activation_fu_969_v22_0_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_reshape_2D_to_3D_fu_1009_v146_q0 = k_proj_re_q0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_reshape_2D_to_3D_fu_1009_v146_q0 = q_proj_re_q0;
    end else begin
        grp_reshape_2D_to_3D_fu_1009_v146_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        grp_rms_norm_fu_931_v0_q0 = attn_output_2D_q0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_rms_norm_fu_931_v0_q0 = v263_q0;
    end else begin
        grp_rms_norm_fu_931_v0_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        grp_rms_norm_fu_931_v1_q0 = v275_q0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_rms_norm_fu_931_v1_q0 = v274_q0;
    end else begin
        grp_rms_norm_fu_931_v1_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        k_embed_0_address0 = sext_ln601_fu_2608_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        k_embed_0_address0 = grp_cache_update_fu_992_v193_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        k_embed_0_address0 = grp_apply_rotary_pos_emb_fu_955_v165_0_address0;
    end else begin
        k_embed_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        k_embed_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        k_embed_0_ce0 = grp_cache_update_fu_992_v193_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        k_embed_0_ce0 = grp_apply_rotary_pos_emb_fu_955_v165_0_ce0;
    end else begin
        k_embed_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        k_embed_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        k_embed_0_d0 = grp_apply_rotary_pos_emb_fu_955_v165_0_d0;
    end else begin
        k_embed_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln600_fu_2587_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        k_embed_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        k_embed_0_we0 = grp_apply_rotary_pos_emb_fu_955_v165_0_we0;
    end else begin
        k_embed_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        k_proj_0_address0 = grp_reshape_2D_to_3D_fu_1009_v147_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        k_proj_0_address0 = grp_apply_rotary_pos_emb_fu_955_k_proj_0_address0;
    end else begin
        k_proj_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        k_proj_0_ce0 = grp_reshape_2D_to_3D_fu_1009_v147_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        k_proj_0_ce0 = grp_apply_rotary_pos_emb_fu_955_k_proj_0_ce0;
    end else begin
        k_proj_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        k_proj_0_ce1 = grp_apply_rotary_pos_emb_fu_955_k_proj_0_ce1;
    end else begin
        k_proj_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        k_proj_0_we0 = grp_reshape_2D_to_3D_fu_1009_v147_0_we0;
    end else begin
        k_proj_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        k_proj_re_address0 = zext_ln507_fu_1098_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        k_proj_re_address0 = grp_reshape_2D_to_3D_fu_1009_v146_address0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        k_proj_re_address0 = grp_linear_forward_no_mu_fu_844_v82_address0;
    end else begin
        k_proj_re_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        k_proj_re_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        k_proj_re_ce0 = grp_reshape_2D_to_3D_fu_1009_v146_ce0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        k_proj_re_ce0 = grp_linear_forward_no_mu_fu_844_v82_ce0;
    end else begin
        k_proj_re_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        k_proj_re_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        k_proj_re_d0 = grp_linear_forward_no_mu_fu_844_v82_d0;
    end else begin
        k_proj_re_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln506_fu_1086_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        k_proj_re_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        k_proj_re_we0 = grp_linear_forward_no_mu_fu_844_v82_we0;
    end else begin
        k_proj_re_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        k_proj_transposed_address0 = grp_transpose_last_two_d_fu_1002_v204_address0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        k_proj_transposed_address0 = grp_GEMM_3D_float_fu_977_k_proj_transposed_address0;
    end else begin
        k_proj_transposed_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        k_proj_transposed_ce0 = grp_transpose_last_two_d_fu_1002_v204_ce0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        k_proj_transposed_ce0 = grp_GEMM_3D_float_fu_977_k_proj_transposed_ce0;
    end else begin
        k_proj_transposed_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        k_proj_transposed_we0 = grp_transpose_last_two_d_fu_1002_v204_we0;
    end else begin
        k_proj_transposed_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        q_embed_0_address0 = sext_ln593_fu_2544_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        q_embed_0_address0 = grp_GEMM_3D_float_fu_977_v209_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        q_embed_0_address0 = grp_apply_rotary_pos_emb_fu_955_v164_0_address0;
    end else begin
        q_embed_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        q_embed_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        q_embed_0_ce0 = grp_GEMM_3D_float_fu_977_v209_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        q_embed_0_ce0 = grp_apply_rotary_pos_emb_fu_955_v164_0_ce0;
    end else begin
        q_embed_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        q_embed_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        q_embed_0_d0 = grp_apply_rotary_pos_emb_fu_955_v164_0_d0;
    end else begin
        q_embed_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln592_fu_2523_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        q_embed_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        q_embed_0_we0 = grp_apply_rotary_pos_emb_fu_955_v164_0_we0;
    end else begin
        q_embed_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        q_proj_0_address0 = grp_reshape_2D_to_3D_fu_1009_v147_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        q_proj_0_address0 = grp_apply_rotary_pos_emb_fu_955_q_proj_0_address0;
    end else begin
        q_proj_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        q_proj_0_ce0 = grp_reshape_2D_to_3D_fu_1009_v147_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        q_proj_0_ce0 = grp_apply_rotary_pos_emb_fu_955_q_proj_0_ce0;
    end else begin
        q_proj_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        q_proj_0_ce1 = grp_apply_rotary_pos_emb_fu_955_q_proj_0_ce1;
    end else begin
        q_proj_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        q_proj_0_we0 = grp_reshape_2D_to_3D_fu_1009_v147_0_we0;
    end else begin
        q_proj_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        q_proj_re_address0 = zext_ln501_fu_1081_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        q_proj_re_address0 = grp_reshape_2D_to_3D_fu_1009_v146_address0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        q_proj_re_address0 = grp_linear_forward_no_mu_fu_844_v82_address0;
    end else begin
        q_proj_re_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        q_proj_re_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        q_proj_re_ce0 = grp_reshape_2D_to_3D_fu_1009_v146_ce0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        q_proj_re_ce0 = grp_linear_forward_no_mu_fu_844_v82_ce0;
    end else begin
        q_proj_re_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        q_proj_re_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        q_proj_re_d0 = grp_linear_forward_no_mu_fu_844_v82_d0;
    end else begin
        q_proj_re_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln500_fu_1069_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        q_proj_re_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        q_proj_re_we0 = grp_linear_forward_no_mu_fu_844_v82_we0;
    end else begin
        q_proj_re_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        quantized_final_outp_1_ce0 = grp_linear_forward_no_mu_fu_844_v78_1_0_2_ce0;
    end else begin
        quantized_final_outp_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        quantized_final_outp_2_ce0 = grp_linear_forward_no_mu_fu_844_v78_1_0_1_ce0;
    end else begin
        quantized_final_outp_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        quantized_final_outp_3_ce0 = grp_linear_forward_no_mu_fu_844_v78_1_0_0_ce0;
    end else begin
        quantized_final_outp_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        quantized_final_outp_4_ce0 = grp_linear_forward_no_mu_fu_844_v78_0_0_3_ce0;
    end else begin
        quantized_final_outp_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        quantized_final_outp_5_ce0 = grp_linear_forward_no_mu_fu_844_v78_0_0_2_ce0;
    end else begin
        quantized_final_outp_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        quantized_final_outp_6_ce0 = grp_linear_forward_no_mu_fu_844_v78_0_0_1_ce0;
    end else begin
        quantized_final_outp_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        quantized_final_outp_7_ce0 = grp_linear_forward_no_mu_fu_844_v78_0_0_0_ce0;
    end else begin
        quantized_final_outp_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        quantized_final_outp_8_ce0 = grp_quantize_activation_fu_969_v24_0_ce0;
    end else begin
        quantized_final_outp_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        quantized_final_outp_8_we0 = grp_quantize_activation_fu_969_v24_0_we0;
    end else begin
        quantized_final_outp_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        quantized_final_outp_ce0 = grp_linear_forward_no_mu_fu_844_v78_1_0_3_ce0;
    end else begin
        quantized_final_outp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        quantized_hidden_sta_1_address0 = grp_linear_forward_no_mu_fu_873_v78_1_0_2_address0;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state15))) begin
        quantized_hidden_sta_1_address0 = grp_linear_forward_no_mu_fu_844_v78_1_0_2_address0;
    end else begin
        quantized_hidden_sta_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        quantized_hidden_sta_1_ce0 = grp_linear_forward_no_mu_fu_873_v78_1_0_2_ce0;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state15))) begin
        quantized_hidden_sta_1_ce0 = grp_linear_forward_no_mu_fu_844_v78_1_0_2_ce0;
    end else begin
        quantized_hidden_sta_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        quantized_hidden_sta_2_address0 = grp_linear_forward_no_mu_fu_873_v78_1_0_1_address0;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state15))) begin
        quantized_hidden_sta_2_address0 = grp_linear_forward_no_mu_fu_844_v78_1_0_1_address0;
    end else begin
        quantized_hidden_sta_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        quantized_hidden_sta_2_ce0 = grp_linear_forward_no_mu_fu_873_v78_1_0_1_ce0;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state15))) begin
        quantized_hidden_sta_2_ce0 = grp_linear_forward_no_mu_fu_844_v78_1_0_1_ce0;
    end else begin
        quantized_hidden_sta_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        quantized_hidden_sta_3_address0 = grp_linear_forward_no_mu_fu_873_v78_1_0_0_address0;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state15))) begin
        quantized_hidden_sta_3_address0 = grp_linear_forward_no_mu_fu_844_v78_1_0_0_address0;
    end else begin
        quantized_hidden_sta_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        quantized_hidden_sta_3_ce0 = grp_linear_forward_no_mu_fu_873_v78_1_0_0_ce0;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state15))) begin
        quantized_hidden_sta_3_ce0 = grp_linear_forward_no_mu_fu_844_v78_1_0_0_ce0;
    end else begin
        quantized_hidden_sta_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        quantized_hidden_sta_4_address0 = grp_linear_forward_no_mu_fu_873_v78_0_0_3_address0;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state15))) begin
        quantized_hidden_sta_4_address0 = grp_linear_forward_no_mu_fu_844_v78_0_0_3_address0;
    end else begin
        quantized_hidden_sta_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        quantized_hidden_sta_4_ce0 = grp_linear_forward_no_mu_fu_873_v78_0_0_3_ce0;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state15))) begin
        quantized_hidden_sta_4_ce0 = grp_linear_forward_no_mu_fu_844_v78_0_0_3_ce0;
    end else begin
        quantized_hidden_sta_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        quantized_hidden_sta_5_address0 = grp_linear_forward_no_mu_fu_873_v78_0_0_2_address0;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state15))) begin
        quantized_hidden_sta_5_address0 = grp_linear_forward_no_mu_fu_844_v78_0_0_2_address0;
    end else begin
        quantized_hidden_sta_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        quantized_hidden_sta_5_ce0 = grp_linear_forward_no_mu_fu_873_v78_0_0_2_ce0;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state15))) begin
        quantized_hidden_sta_5_ce0 = grp_linear_forward_no_mu_fu_844_v78_0_0_2_ce0;
    end else begin
        quantized_hidden_sta_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        quantized_hidden_sta_6_address0 = grp_linear_forward_no_mu_fu_873_v78_0_0_1_address0;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state15))) begin
        quantized_hidden_sta_6_address0 = grp_linear_forward_no_mu_fu_844_v78_0_0_1_address0;
    end else begin
        quantized_hidden_sta_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        quantized_hidden_sta_6_ce0 = grp_linear_forward_no_mu_fu_873_v78_0_0_1_ce0;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state15))) begin
        quantized_hidden_sta_6_ce0 = grp_linear_forward_no_mu_fu_844_v78_0_0_1_ce0;
    end else begin
        quantized_hidden_sta_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        quantized_hidden_sta_7_address0 = grp_linear_forward_no_mu_fu_873_v78_0_0_0_address0;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state15))) begin
        quantized_hidden_sta_7_address0 = grp_linear_forward_no_mu_fu_844_v78_0_0_0_address0;
    end else begin
        quantized_hidden_sta_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        quantized_hidden_sta_7_ce0 = grp_linear_forward_no_mu_fu_873_v78_0_0_0_ce0;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state15))) begin
        quantized_hidden_sta_7_ce0 = grp_linear_forward_no_mu_fu_844_v78_0_0_0_ce0;
    end else begin
        quantized_hidden_sta_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        quantized_hidden_sta_8_ce0 = grp_quantize_activation_fu_969_v24_0_ce0;
    end else begin
        quantized_hidden_sta_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        quantized_hidden_sta_8_we0 = grp_quantize_activation_fu_969_v24_0_we0;
    end else begin
        quantized_hidden_sta_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        quantized_hidden_sta_address0 = grp_linear_forward_no_mu_fu_873_v78_1_0_3_address0;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state15))) begin
        quantized_hidden_sta_address0 = grp_linear_forward_no_mu_fu_844_v78_1_0_3_address0;
    end else begin
        quantized_hidden_sta_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        quantized_hidden_sta_ce0 = grp_linear_forward_no_mu_fu_873_v78_1_0_3_ce0;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state15))) begin
        quantized_hidden_sta_ce0 = grp_linear_forward_no_mu_fu_844_v78_1_0_3_ce0;
    end else begin
        quantized_hidden_sta_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln705_fu_3278_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state73))) begin
        rms_attn_output_0_address0 = zext_ln706_fu_3290_p1;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        rms_attn_output_0_address0 = grp_quantize_activation_fu_969_v22_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        rms_attn_output_0_address0 = grp_rms_norm_fu_931_v3_0_address0;
    end else begin
        rms_attn_output_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln705_fu_3278_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state73))) begin
        rms_attn_output_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        rms_attn_output_0_ce0 = grp_quantize_activation_fu_969_v22_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        rms_attn_output_0_ce0 = grp_rms_norm_fu_931_v3_0_ce0;
    end else begin
        rms_attn_output_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln705_fu_3278_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state73))) begin
        rms_attn_output_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        rms_attn_output_0_d0 = grp_rms_norm_fu_931_v3_0_d0;
    end else begin
        rms_attn_output_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln705_fu_3278_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state73))) begin
        rms_attn_output_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        rms_attn_output_0_we0 = grp_rms_norm_fu_931_v3_0_we0;
    end else begin
        rms_attn_output_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln479_fu_1052_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        rms_hidden_states_0_address0 = zext_ln480_fu_1064_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        rms_hidden_states_0_address0 = grp_quantize_activation_fu_969_v22_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        rms_hidden_states_0_address0 = grp_rms_norm_fu_931_v3_0_address0;
    end else begin
        rms_hidden_states_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln479_fu_1052_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        rms_hidden_states_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        rms_hidden_states_0_ce0 = grp_quantize_activation_fu_969_v22_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        rms_hidden_states_0_ce0 = grp_rms_norm_fu_931_v3_0_ce0;
    end else begin
        rms_hidden_states_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln479_fu_1052_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        rms_hidden_states_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        rms_hidden_states_0_d0 = grp_rms_norm_fu_931_v3_0_d0;
    end else begin
        rms_hidden_states_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln479_fu_1052_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        rms_hidden_states_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        rms_hidden_states_0_we0 = grp_rms_norm_fu_931_v3_0_we0;
    end else begin
        rms_hidden_states_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        softmax_attn_weights_address0 = sext_ln675_fu_3081_p1;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        softmax_attn_weights_address0 = grp_GEMM_3D_float2_fu_985_v251_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        softmax_attn_weights_address0 = grp_softmax_fu_911_v225_0_address0;
    end else begin
        softmax_attn_weights_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        softmax_attn_weights_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        softmax_attn_weights_ce0 = grp_GEMM_3D_float2_fu_985_v251_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        softmax_attn_weights_ce0 = grp_softmax_fu_911_v225_0_ce0;
    end else begin
        softmax_attn_weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        softmax_attn_weights_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        softmax_attn_weights_d0 = grp_softmax_fu_911_v225_0_d0;
    end else begin
        softmax_attn_weights_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln674_fu_3060_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state64))) begin
        softmax_attn_weights_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        softmax_attn_weights_we0 = grp_softmax_fu_911_v225_0_we0;
    end else begin
        softmax_attn_weights_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        updated_k_cache_address0 = zext_ln610_4_fu_2727_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        updated_k_cache_address0 = grp_transpose_last_two_d_fu_1002_v203_address0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        updated_k_cache_address0 = grp_cache_update_fu_992_v194_address0;
    end else begin
        updated_k_cache_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        updated_k_cache_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        updated_k_cache_ce0 = grp_transpose_last_two_d_fu_1002_v203_ce0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        updated_k_cache_ce0 = grp_cache_update_fu_992_v194_ce0;
    end else begin
        updated_k_cache_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        updated_k_cache_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        updated_k_cache_d0 = grp_cache_update_fu_992_v194_d0;
    end else begin
        updated_k_cache_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln609_fu_2706_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        updated_k_cache_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        updated_k_cache_we0 = grp_cache_update_fu_992_v194_we0;
    end else begin
        updated_k_cache_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        updated_v_cache_address0 = zext_ln618_4_fu_2846_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        updated_v_cache_address0 = grp_cache_update_fu_992_v194_address0;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        updated_v_cache_address0 = grp_GEMM_3D_float2_fu_985_v252_address0;
    end else begin
        updated_v_cache_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        updated_v_cache_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        updated_v_cache_ce0 = grp_cache_update_fu_992_v194_ce0;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        updated_v_cache_ce0 = grp_GEMM_3D_float2_fu_985_v252_ce0;
    end else begin
        updated_v_cache_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        updated_v_cache_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        updated_v_cache_d0 = grp_cache_update_fu_992_v194_d0;
    end else begin
        updated_v_cache_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln617_fu_2825_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        updated_v_cache_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        updated_v_cache_we0 = grp_cache_update_fu_992_v194_we0;
    end else begin
        updated_v_cache_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        v263_ce0 = grp_rms_norm_fu_931_v0_ce0;
    end else begin
        v263_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        v264_0_ce0 = grp_linear_forward_no_mu_fu_844_v80_0_ce0;
    end else begin
        v264_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        v264_1_ce0 = grp_linear_forward_no_mu_fu_844_v80_1_ce0;
    end else begin
        v264_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        v266_0_ce0 = grp_linear_forward_no_mu_fu_844_v80_0_ce0;
    end else begin
        v266_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        v266_1_ce0 = grp_linear_forward_no_mu_fu_844_v80_1_ce0;
    end else begin
        v266_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        v270_0_ce0 = grp_linear_forward_no_mu_fu_844_v80_0_ce0;
    end else begin
        v270_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        v270_1_ce0 = grp_linear_forward_no_mu_fu_844_v80_1_ce0;
    end else begin
        v270_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        v274_ce0 = grp_rms_norm_fu_931_v1_ce0;
    end else begin
        v274_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        v275_ce0 = grp_rms_norm_fu_931_v1_ce0;
    end else begin
        v275_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        v276_ce0 = grp_cache_update_fu_992_v192_ce0;
    end else begin
        v276_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        v277_ce0 = grp_cache_update_fu_992_v192_ce0;
    end else begin
        v277_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln753_fu_3573_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state79))) begin
        v279_address0 = zext_ln754_fu_3585_p1;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        v279_address0 = grp_linear_forward_no_mu_fu_844_v82_address0;
    end else begin
        v279_address0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln753_fu_3573_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state79))) begin
        v279_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        v279_ce0 = grp_linear_forward_no_mu_fu_844_v82_ce0;
    end else begin
        v279_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln753_fu_3573_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state79))) begin
        v279_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        v279_d0 = grp_linear_forward_no_mu_fu_844_v82_d0;
    end else begin
        v279_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln753_fu_3573_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state79))) begin
        v279_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        v279_we0 = grp_linear_forward_no_mu_fu_844_v82_we0;
    end else begin
        v279_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        v_proj_0_address0 = grp_reshape_2D_to_3D_fu_1017_v147_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        v_proj_0_address0 = grp_cache_update_fu_992_v193_0_address0;
    end else begin
        v_proj_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        v_proj_0_ce0 = grp_reshape_2D_to_3D_fu_1017_v147_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        v_proj_0_ce0 = grp_cache_update_fu_992_v193_0_ce0;
    end else begin
        v_proj_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        v_proj_0_we0 = grp_reshape_2D_to_3D_fu_1017_v147_0_we0;
    end else begin
        v_proj_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        v_proj_re_address0 = zext_ln513_fu_1115_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        v_proj_re_address0 = grp_reshape_2D_to_3D_fu_1017_v146_address0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        v_proj_re_address0 = grp_linear_forward_no_mu_fu_873_v82_address0;
    end else begin
        v_proj_re_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        v_proj_re_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        v_proj_re_ce0 = grp_reshape_2D_to_3D_fu_1017_v146_ce0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        v_proj_re_ce0 = grp_linear_forward_no_mu_fu_873_v82_ce0;
    end else begin
        v_proj_re_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        v_proj_re_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        v_proj_re_d0 = grp_linear_forward_no_mu_fu_873_v82_d0;
    end else begin
        v_proj_re_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln512_fu_1103_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        v_proj_re_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        v_proj_re_we0 = grp_linear_forward_no_mu_fu_873_v82_we0;
    end else begin
        v_proj_re_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln479_fu_1052_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_rms_norm_fu_931_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((grp_quantize_activation_fu_969_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln500_fu_1069_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln506_fu_1086_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((icmp_ln512_fu_1103_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((grp_linear_forward_no_mu_fu_844_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b0 == ap_block_state15_on_subcall_done) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((1'b0 == ap_block_state17_on_subcall_done) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((icmp_ln590_fu_2485_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln592_fu_2523_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((icmp_ln598_fu_2549_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln600_fu_2587_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (grp_apply_rotary_pos_emb_fu_955_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((icmp_ln607_fu_2613_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((icmp_ln608_fu_2659_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln609_fu_2706_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((icmp_ln615_fu_2732_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((icmp_ln616_fu_2778_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((1'b1 == ap_CS_fsm_state28) & (icmp_ln617_fu_2825_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((1'b1 == ap_CS_fsm_state29) & (grp_cache_update_fu_992_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            if (((1'b1 == ap_CS_fsm_state31) & (1'b0 == ap_block_state31_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state32 : begin
            if (((icmp_ln634_fu_2851_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state33 : begin
            if (((1'b1 == ap_CS_fsm_state33) & (icmp_ln636_fu_2889_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((1'b1 == ap_CS_fsm_state34) & (grp_GEMM_3D_float_fu_977_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state35 : begin
            if (((icmp_ln644_fu_2915_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state35))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state36 : begin
            if (((icmp_ln646_fu_2953_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state55 : begin
            if (((icmp_ln661_fu_2979_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state55))) begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state63 : begin
            if (((icmp_ln672_fu_3022_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state63))) begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end
        end
        ap_ST_fsm_state64 : begin
            if (((1'b1 == ap_CS_fsm_state64) & (icmp_ln674_fu_3060_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end
        end
        ap_ST_fsm_state65 : begin
            if (((1'b1 == ap_CS_fsm_state65) & (grp_softmax_fu_911_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end
        end
        ap_ST_fsm_state66 : begin
            if (((icmp_ln681_fu_3086_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state66))) begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end
        end
        ap_ST_fsm_state67 : begin
            if (((1'b1 == ap_CS_fsm_state67) & (icmp_ln683_fu_3124_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end
        end
        ap_ST_fsm_state68 : begin
            if (((1'b1 == ap_CS_fsm_state68) & (grp_GEMM_3D_float2_fu_985_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end
        end
        ap_ST_fsm_state69 : begin
            if (((1'b1 == ap_CS_fsm_state69) & (icmp_ln691_fu_3150_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end
        end
        ap_ST_fsm_state70 : begin
            if (((icmp_ln696_fu_3167_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state70))) begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end
        end
        ap_ST_fsm_state71 : begin
            if (((icmp_ln697_fu_3243_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state71))) begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state73 : begin
            if (((icmp_ln705_fu_3278_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state73))) begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end
        end
        ap_ST_fsm_state74 : begin
            if (((1'b1 == ap_CS_fsm_state74) & (grp_rms_norm_fu_931_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            if (((grp_quantize_activation_fu_969_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state76))) begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            if (((icmp_ln753_fu_3573_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state79))) begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end
        end
        ap_ST_fsm_state80 : begin
            if (((grp_linear_forward_no_mu_fu_844_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state80))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_1_fu_1720_p2 = (12'd1075 - zext_ln461_1_fu_1680_p1);

assign F2_2_fu_1838_p2 = (12'd1075 - zext_ln461_2_fu_1798_p1);

assign F2_3_fu_2274_p2 = (12'd1075 - zext_ln461_3_fu_2234_p1);

assign F2_fu_1304_p2 = (12'd1075 - zext_ln461_fu_1264_p1);

assign add_ln479_fu_1058_p2 = (v283_0_0_reg_536 + 11'd1);

assign add_ln500_fu_1075_p2 = (v293_0_0_reg_547 + 11'd1);

assign add_ln506_fu_1092_p2 = (v296_0_0_reg_558 + 11'd1);

assign add_ln512_fu_1109_p2 = (v299_0_0_reg_569 + 11'd1);

assign add_ln581_1_fu_1732_p2 = ($signed(12'd4076) + $signed(F2_1_fu_1720_p2));

assign add_ln581_2_fu_1850_p2 = ($signed(12'd4076) + $signed(F2_2_fu_1838_p2));

assign add_ln581_3_fu_2286_p2 = ($signed(12'd4076) + $signed(F2_3_fu_2274_p2));

assign add_ln581_4_fu_1198_p2 = ($signed(12'd4076) + $signed(sub_ln575_fu_1186_p2));

assign add_ln581_5_fu_3373_p2 = ($signed(12'd4076) + $signed(sub_ln575_1_fu_3361_p2));

assign add_ln581_fu_1316_p2 = ($signed(12'd4076) + $signed(F2_fu_1304_p2));

assign add_ln592_fu_2529_p2 = (v340_0_0_reg_591 + 7'd1);

assign add_ln593_fu_2539_p2 = (sub_ln593_reg_3895 + zext_ln593_1_fu_2535_p1);

assign add_ln600_fu_2593_p2 = (v344_0_0_reg_613 + 7'd1);

assign add_ln601_fu_2603_p2 = (sub_ln601_reg_3916 + zext_ln601_1_fu_2599_p1);

assign add_ln610_1_fu_2722_p2 = (sub_ln610_1_reg_3950 + zext_ln610_3_fu_2718_p1);

assign add_ln610_fu_2675_p2 = ($signed(zext_ln610_2_fu_2671_p1) + $signed(sext_ln610_reg_3937));

assign add_ln618_1_fu_2841_p2 = (sub_ln618_1_reg_3984 + zext_ln618_3_fu_2837_p1);

assign add_ln618_fu_2794_p2 = ($signed(zext_ln618_2_fu_2790_p1) + $signed(sext_ln618_reg_3971));

assign add_ln636_fu_2895_p2 = (v360_0_0_reg_701 + 3'd1);

assign add_ln637_fu_2905_p2 = (sub_ln637_reg_4005 + zext_ln637_1_fu_2901_p1);

assign add_ln646_fu_2959_p2 = (k10_0_0_reg_723 + 3'd1);

assign add_ln647_fu_2969_p2 = (sub_ln647_reg_4026 + zext_ln647_1_fu_2965_p1);

assign add_ln674_fu_3066_p2 = (v380_0_0_reg_756 + 3'd1);

assign add_ln675_fu_3076_p2 = (sub_ln675_reg_4075 + zext_ln675_1_fu_3072_p1);

assign add_ln683_fu_3130_p2 = (v384_0_0_reg_778 + 7'd1);

assign add_ln684_fu_3140_p2 = (sub_ln684_reg_4096 + zext_ln684_1_fu_3136_p1);

assign add_ln691_fu_3156_p2 = (v387_0_0_reg_789 + 11'd1);

assign add_ln696_fu_3173_p2 = (h7_0_0_reg_800 + 5'd1);

assign add_ln697_fu_3249_p2 = (d4_0_0_reg_811 + 7'd1);

assign add_ln698_fu_3255_p2 = (sub_ln698_reg_4125 + zext_ln697_fu_3239_p1);

assign add_ln699_fu_3265_p2 = (zext_ln697_fu_3239_p1 + sub_ln699_reg_4130);

assign add_ln705_fu_3284_p2 = (v394_0_0_reg_822 + 11'd1);

assign add_ln753_fu_3579_p2 = (v417_0_0_reg_833 + 11'd1);

assign and_ln581_1_fu_1960_p2 = (xor_ln582_1_fu_1954_p2 & icmp_ln581_1_reg_3763);

assign and_ln581_2_fu_2119_p2 = (xor_ln582_2_fu_2113_p2 & icmp_ln581_2_reg_3803);

assign and_ln581_3_fu_2396_p2 = (xor_ln582_3_fu_2390_p2 & icmp_ln581_3_reg_3853);

assign and_ln581_4_fu_1429_p2 = (xor_ln582_4_fu_1423_p2 & icmp_ln581_4_reg_3657);

assign and_ln581_5_fu_3484_p2 = (xor_ln582_5_fu_3478_p2 & icmp_ln581_5_reg_4172);

assign and_ln581_fu_1555_p2 = (xor_ln582_fu_1549_p2 & icmp_ln581_reg_3697);

assign and_ln582_1_fu_1945_p2 = (xor_ln571_1_fu_1940_p2 & icmp_ln582_1_reg_3775);

assign and_ln582_2_fu_2104_p2 = (xor_ln571_2_fu_2099_p2 & icmp_ln582_2_reg_3815);

assign and_ln582_3_fu_2381_p2 = (xor_ln571_3_fu_2376_p2 & icmp_ln582_3_reg_3865);

assign and_ln582_4_fu_1407_p2 = (xor_ln571_4_fu_1402_p2 & icmp_ln582_4_reg_3669);

assign and_ln582_5_fu_3469_p2 = (xor_ln571_5_fu_3464_p2 & icmp_ln582_5_reg_4184);

assign and_ln582_fu_1540_p2 = (xor_ln571_fu_1535_p2 & icmp_ln582_reg_3709);

assign and_ln585_10_fu_3495_p2 = (xor_ln585_5_fu_3489_p2 & and_ln581_5_fu_3484_p2);

assign and_ln585_11_fu_3501_p2 = (icmp_ln585_5_fu_3416_p2 & and_ln581_5_fu_3484_p2);

assign and_ln585_1_fu_1572_p2 = (icmp_ln585_fu_1488_p2 & and_ln581_fu_1555_p2);

assign and_ln585_2_fu_1971_p2 = (xor_ln585_1_fu_1965_p2 & and_ln581_1_fu_1960_p2);

assign and_ln585_3_fu_1977_p2 = (icmp_ln585_1_fu_1893_p2 & and_ln581_1_fu_1960_p2);

assign and_ln585_4_fu_2130_p2 = (xor_ln585_2_fu_2124_p2 & and_ln581_2_fu_2119_p2);

assign and_ln585_5_fu_2136_p2 = (icmp_ln585_2_fu_2052_p2 & and_ln581_2_fu_2119_p2);

assign and_ln585_6_fu_2407_p2 = (xor_ln585_3_fu_2401_p2 & and_ln581_3_fu_2396_p2);

assign and_ln585_7_fu_2413_p2 = (icmp_ln585_3_fu_2329_p2 & and_ln581_3_fu_2396_p2);

assign and_ln585_8_fu_1440_p2 = (xor_ln585_4_fu_1434_p2 & and_ln581_4_fu_1429_p2);

assign and_ln585_9_fu_1454_p2 = (icmp_ln585_4_fu_1359_p2 & and_ln581_4_fu_1429_p2);

assign and_ln585_fu_1566_p2 = (xor_ln585_fu_1560_p2 & and_ln581_fu_1555_p2);

assign and_ln603_1_fu_1994_p2 = (xor_ln581_1_fu_1988_p2 & icmp_ln603_1_fu_1898_p2);

assign and_ln603_2_fu_2153_p2 = (xor_ln581_2_fu_2147_p2 & icmp_ln603_2_fu_2057_p2);

assign and_ln603_3_fu_2430_p2 = (xor_ln581_3_fu_2424_p2 & icmp_ln603_3_fu_2334_p2);

assign and_ln603_4_fu_1479_p2 = (xor_ln581_4_fu_1473_p2 & icmp_ln603_4_fu_1364_p2);

assign and_ln603_5_fu_3518_p2 = (xor_ln581_5_fu_3512_p2 & icmp_ln603_5_fu_3421_p2);

assign and_ln603_fu_1589_p2 = (xor_ln581_fu_1583_p2 & icmp_ln603_fu_1493_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state15_on_subcall_done = ((grp_reshape_2D_to_3D_fu_1009_ap_done == 1'b0) | (grp_linear_forward_no_mu_fu_844_ap_done == 1'b0) | (grp_linear_forward_no_mu_fu_873_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state17_on_subcall_done = ((grp_reshape_2D_to_3D_fu_1017_ap_done == 1'b0) | (grp_reshape_2D_to_3D_fu_1009_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state31_on_subcall_done = ((grp_transpose_last_two_d_fu_1002_ap_done == 1'b0) | (grp_cache_update_fu_992_ap_done == 1'b0));
end

assign ashr_ln586_1_fu_1907_p2 = $signed(man_V_5_reg_3752) >>> zext_ln586_1_fu_1903_p1;

assign ashr_ln586_2_fu_2066_p2 = $signed(man_V_8_reg_3792) >>> zext_ln586_2_fu_2062_p1;

assign ashr_ln586_3_fu_2343_p2 = $signed(man_V_11_reg_3842) >>> zext_ln586_3_fu_2339_p1;

assign ashr_ln586_4_fu_1373_p2 = $signed(select_ln570_reg_3646) >>> zext_ln586_4_fu_1369_p1;

assign ashr_ln586_5_fu_3430_p2 = $signed(select_ln570_1_reg_4161) >>> zext_ln586_5_fu_3426_p1;

assign ashr_ln586_fu_1502_p2 = $signed(man_V_2_reg_3686) >>> zext_ln586_fu_1498_p1;

assign bitcast_ln696_10_fu_3439_p1 = reg_1041;

assign bitcast_ln696_2_fu_1916_p1 = v267;

assign bitcast_ln696_4_fu_2075_p1 = v269;

assign bitcast_ln696_6_fu_2352_p1 = v271;

assign bitcast_ln696_7_fu_1120_p1 = grp_fu_1034_p1;

assign bitcast_ln696_8_fu_1382_p1 = reg_1041;

assign bitcast_ln696_9_fu_3295_p1 = grp_fu_1034_p1;

assign bitcast_ln696_fu_1511_p1 = v265;

assign exp_tmp_V_1_fu_1670_p4 = {{ireg_V_1_fu_1654_p1[62:52]}};

assign exp_tmp_V_2_fu_1788_p4 = {{ireg_V_2_fu_1772_p1[62:52]}};

assign exp_tmp_V_3_fu_2224_p4 = {{ireg_V_3_fu_2208_p1[62:52]}};

assign exp_tmp_V_fu_1254_p4 = {{ireg_V_fu_1238_p1[62:52]}};

assign final_scales_fixed_0_fu_3565_p3 = ((or_ln603_14_fu_3559_p2[0:0] === 1'b1) ? select_ln603_19_fu_3551_p3 : 32'd0);

assign grp_GEMM_3D_float2_fu_985_ap_start = grp_GEMM_3D_float2_fu_985_ap_start_reg;

assign grp_GEMM_3D_float_fu_977_ap_start = grp_GEMM_3D_float_fu_977_ap_start_reg;

assign grp_apply_rotary_pos_emb_fu_955_ap_start = grp_apply_rotary_pos_emb_fu_955_ap_start_reg;

assign grp_cache_update_fu_992_ap_start = grp_cache_update_fu_992_ap_start_reg;

assign grp_linear_forward_no_mu_fu_844_ap_start = grp_linear_forward_no_mu_fu_844_ap_start_reg;

assign grp_linear_forward_no_mu_fu_873_ap_start = grp_linear_forward_no_mu_fu_873_ap_start_reg;

assign grp_quantize_activation_fu_969_ap_start = grp_quantize_activation_fu_969_ap_start_reg;

assign grp_reshape_2D_to_3D_fu_1009_ap_start = grp_reshape_2D_to_3D_fu_1009_ap_start_reg;

assign grp_reshape_2D_to_3D_fu_1017_ap_start = grp_reshape_2D_to_3D_fu_1017_ap_start_reg;

assign grp_rms_norm_fu_931_ap_start = grp_rms_norm_fu_931_ap_start_reg;

assign grp_softmax_fu_911_ap_start = grp_softmax_fu_911_ap_start_reg;

assign grp_transpose_last_two_d_fu_1002_ap_start = grp_transpose_last_two_d_fu_1002_ap_start_reg;

assign h6_fu_2985_p2 = (h6_0_reg_734 + 5'd1);

assign i12_fu_2921_p2 = (i12_0_reg_712 + 5'd1);

assign icmp_ln479_fu_1052_p2 = ((v283_0_0_reg_536 == 11'd1536) ? 1'b1 : 1'b0);

assign icmp_ln500_fu_1069_p2 = ((v293_0_0_reg_547 == 11'd1536) ? 1'b1 : 1'b0);

assign icmp_ln506_fu_1086_p2 = ((v296_0_0_reg_558 == 11'd1536) ? 1'b1 : 1'b0);

assign icmp_ln512_fu_1103_p2 = ((v299_0_0_reg_569 == 11'd1536) ? 1'b1 : 1'b0);

assign icmp_ln571_1_fu_1714_p2 = ((trunc_ln556_1_fu_1658_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_2_fu_1832_p2 = ((trunc_ln556_2_fu_1776_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_3_fu_2268_p2 = ((trunc_ln556_3_fu_2212_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_4_fu_1180_p2 = ((trunc_ln557_fu_1124_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_5_fu_3355_p2 = ((trunc_ln557_1_fu_3299_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_1298_p2 = ((trunc_ln556_fu_1242_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_1_fu_1726_p2 = (($signed(F2_1_fu_1720_p2) > $signed(12'd20)) ? 1'b1 : 1'b0);

assign icmp_ln581_2_fu_1844_p2 = (($signed(F2_2_fu_1838_p2) > $signed(12'd20)) ? 1'b1 : 1'b0);

assign icmp_ln581_3_fu_2280_p2 = (($signed(F2_3_fu_2274_p2) > $signed(12'd20)) ? 1'b1 : 1'b0);

assign icmp_ln581_4_fu_1192_p2 = (($signed(sub_ln575_fu_1186_p2) > $signed(12'd20)) ? 1'b1 : 1'b0);

assign icmp_ln581_5_fu_3367_p2 = (($signed(sub_ln575_1_fu_3361_p2) > $signed(12'd20)) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_1310_p2 = (($signed(F2_fu_1304_p2) > $signed(12'd20)) ? 1'b1 : 1'b0);

assign icmp_ln582_1_fu_1752_p2 = ((F2_1_fu_1720_p2 == 12'd20) ? 1'b1 : 1'b0);

assign icmp_ln582_2_fu_1870_p2 = ((F2_2_fu_1838_p2 == 12'd20) ? 1'b1 : 1'b0);

assign icmp_ln582_3_fu_2306_p2 = ((F2_3_fu_2274_p2 == 12'd20) ? 1'b1 : 1'b0);

assign icmp_ln582_4_fu_1218_p2 = ((sub_ln575_fu_1186_p2 == 12'd20) ? 1'b1 : 1'b0);

assign icmp_ln582_5_fu_3393_p2 = ((sub_ln575_1_fu_3361_p2 == 12'd20) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_1336_p2 = ((F2_fu_1304_p2 == 12'd20) ? 1'b1 : 1'b0);

assign icmp_ln585_1_fu_1893_p2 = ((sh_amt_1_reg_3769 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln585_2_fu_2052_p2 = ((sh_amt_2_reg_3809 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln585_3_fu_2329_p2 = ((sh_amt_3_reg_3859 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln585_4_fu_1359_p2 = ((select_ln581_reg_3663 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln585_5_fu_3416_p2 = ((select_ln581_1_reg_4178 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_1488_p2 = ((sh_amt_reg_3703 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln590_fu_2485_p2 = ((v338_0_reg_580 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln592_fu_2523_p2 = ((v340_0_0_reg_591 == 7'd96) ? 1'b1 : 1'b0);

assign icmp_ln598_fu_2549_p2 = ((v342_0_reg_602 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln600_fu_2587_p2 = ((v344_0_0_reg_613 == 7'd96) ? 1'b1 : 1'b0);

assign icmp_ln603_1_fu_1898_p2 = ((tmp_41_reg_3787 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln603_2_fu_2057_p2 = ((tmp_52_reg_3827 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln603_3_fu_2334_p2 = ((tmp_57_reg_3877 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln603_4_fu_1364_p2 = ((tmp_70_reg_3681 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln603_5_fu_3421_p2 = ((tmp_73_reg_4196 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_1493_p2 = ((tmp_38_reg_3721 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln607_fu_2613_p2 = ((v346_0_reg_624 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln608_fu_2659_p2 = ((v347_0_reg_635 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln609_fu_2706_p2 = ((v348_0_reg_646 == 7'd96) ? 1'b1 : 1'b0);

assign icmp_ln615_fu_2732_p2 = ((v350_0_reg_657 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln616_fu_2778_p2 = ((v351_0_reg_668 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln617_fu_2825_p2 = ((v352_0_reg_679 == 7'd96) ? 1'b1 : 1'b0);

assign icmp_ln634_fu_2851_p2 = ((v358_0_reg_690 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln636_fu_2889_p2 = ((v360_0_0_reg_701 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln644_fu_2915_p2 = ((i12_0_reg_712 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln646_fu_2953_p2 = ((k10_0_0_reg_723 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln661_fu_2979_p2 = ((h6_0_reg_734 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln672_fu_3022_p2 = ((v378_0_reg_745 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln674_fu_3060_p2 = ((v380_0_0_reg_756 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln681_fu_3086_p2 = ((v382_0_reg_767 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln683_fu_3124_p2 = ((v384_0_0_reg_778 == 7'd96) ? 1'b1 : 1'b0);

assign icmp_ln691_fu_3150_p2 = ((v387_0_0_reg_789 == 11'd1536) ? 1'b1 : 1'b0);

assign icmp_ln696_fu_3167_p2 = ((h7_0_0_reg_800 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln697_fu_3243_p2 = ((d4_0_0_reg_811 == 7'd96) ? 1'b1 : 1'b0);

assign icmp_ln705_fu_3278_p2 = ((v394_0_0_reg_822 == 11'd1536) ? 1'b1 : 1'b0);

assign icmp_ln753_fu_3573_p2 = ((v417_0_0_reg_833 == 11'd1536) ? 1'b1 : 1'b0);

assign ireg_V_1_fu_1654_p1 = grp_fu_1034_p1;

assign ireg_V_2_fu_1772_p1 = grp_fu_1037_p1;

assign ireg_V_3_fu_2208_p1 = grp_fu_1034_p1;

assign ireg_V_fu_1238_p1 = grp_fu_1034_p1;

assign man_V_10_fu_2254_p2 = (54'd0 - p_Result_59_fu_2250_p1);

assign man_V_11_fu_2260_p3 = ((p_Result_58_fu_2216_p3[0:0] === 1'b1) ? man_V_10_fu_2254_p2 : p_Result_59_fu_2250_p1);

assign man_V_1_fu_1284_p2 = (54'd0 - p_Result_53_fu_1280_p1);

assign man_V_2_fu_1290_p3 = ((p_Result_s_fu_1246_p3[0:0] === 1'b1) ? man_V_1_fu_1284_p2 : p_Result_53_fu_1280_p1);

assign man_V_4_fu_1700_p2 = (54'd0 - p_Result_55_fu_1696_p1);

assign man_V_5_fu_1706_p3 = ((p_Result_54_fu_1662_p3[0:0] === 1'b1) ? man_V_4_fu_1700_p2 : p_Result_55_fu_1696_p1);

assign man_V_7_fu_1818_p2 = (54'd0 - p_Result_57_fu_1814_p1);

assign man_V_8_fu_1824_p3 = ((p_Result_56_fu_1780_p3[0:0] === 1'b1) ? man_V_7_fu_1818_p2 : p_Result_57_fu_1814_p1);

assign or_ln581_1_fu_1983_p2 = (or_ln582_1_fu_1950_p2 | icmp_ln581_1_reg_3763);

assign or_ln581_2_fu_2142_p2 = (or_ln582_2_fu_2109_p2 | icmp_ln581_2_reg_3803);

assign or_ln581_3_fu_2419_p2 = (or_ln582_3_fu_2386_p2 | icmp_ln581_3_reg_3853);

assign or_ln581_4_fu_1468_p2 = (or_ln582_4_fu_1419_p2 | icmp_ln581_4_reg_3657);

assign or_ln581_5_fu_3507_p2 = (or_ln582_5_fu_3474_p2 | icmp_ln581_5_reg_4172);

assign or_ln581_fu_1578_p2 = (or_ln582_fu_1545_p2 | icmp_ln581_reg_3697);

assign or_ln582_1_fu_1950_p2 = (icmp_ln582_1_reg_3775 | icmp_ln571_1_reg_3757);

assign or_ln582_2_fu_2109_p2 = (icmp_ln582_2_reg_3815 | icmp_ln571_2_reg_3797);

assign or_ln582_3_fu_2386_p2 = (icmp_ln582_3_reg_3865 | icmp_ln571_3_reg_3847);

assign or_ln582_4_fu_1419_p2 = (icmp_ln582_4_reg_3669 | icmp_ln571_4_reg_3651);

assign or_ln582_5_fu_3474_p2 = (icmp_ln582_5_reg_4184 | icmp_ln571_5_reg_4166);

assign or_ln582_fu_1545_p2 = (icmp_ln582_reg_3709 | icmp_ln571_reg_3691);

assign or_ln603_10_fu_2457_p2 = (and_ln585_6_fu_2407_p2 | and_ln582_3_fu_2381_p2);

assign or_ln603_11_fu_2471_p2 = (or_ln603_9_fu_2444_p2 | or_ln603_10_fu_2457_p2);

assign or_ln603_12_fu_3532_p2 = (and_ln603_5_fu_3518_p2 | and_ln585_11_fu_3501_p2);

assign or_ln603_13_fu_3545_p2 = (and_ln585_10_fu_3495_p2 | and_ln582_5_fu_3469_p2);

assign or_ln603_14_fu_3559_p2 = (or_ln603_13_fu_3545_p2 | or_ln603_12_fu_3532_p2);

assign or_ln603_1_fu_1616_p2 = (and_ln585_fu_1566_p2 | and_ln582_fu_1540_p2);

assign or_ln603_2_fu_1630_p2 = (or_ln603_fu_1603_p2 | or_ln603_1_fu_1616_p2);

assign or_ln603_3_fu_2008_p2 = (and_ln603_1_fu_1994_p2 | and_ln585_3_fu_1977_p2);

assign or_ln603_4_fu_2021_p2 = (and_ln585_2_fu_1971_p2 | and_ln582_1_fu_1945_p2);

assign or_ln603_5_fu_2035_p2 = (or_ln603_4_fu_2021_p2 | or_ln603_3_fu_2008_p2);

assign or_ln603_6_fu_2167_p2 = (and_ln603_2_fu_2153_p2 | and_ln585_5_fu_2136_p2);

assign or_ln603_7_fu_2180_p2 = (and_ln585_4_fu_2130_p2 | and_ln582_2_fu_2104_p2);

assign or_ln603_8_fu_2194_p2 = (or_ln603_7_fu_2180_p2 | or_ln603_6_fu_2167_p2);

assign or_ln603_9_fu_2444_p2 = (and_ln603_3_fu_2430_p2 | and_ln585_7_fu_2413_p2);

assign or_ln603_fu_1603_p2 = (and_ln603_fu_1589_p2 | and_ln585_1_fu_1572_p2);

assign p_Result_53_fu_1280_p1 = tmp_fu_1272_p3;

assign p_Result_54_fu_1662_p3 = ireg_V_1_fu_1654_p1[32'd63];

assign p_Result_55_fu_1696_p1 = tmp_s_fu_1688_p3;

assign p_Result_56_fu_1780_p3 = ireg_V_2_fu_1772_p1[32'd63];

assign p_Result_57_fu_1814_p1 = tmp_8_fu_1806_p3;

assign p_Result_58_fu_2216_p3 = ireg_V_3_fu_2208_p1[32'd63];

assign p_Result_59_fu_2250_p1 = tmp_9_fu_2242_p3;

assign p_Result_9_fu_1136_p4 = {{bitcast_ln696_7_fu_1120_p1[62:52]}};

assign p_Result_s_97_fu_3311_p4 = {{bitcast_ln696_9_fu_3295_p1[62:52]}};

assign p_Result_s_fu_1246_p3 = ireg_V_fu_1238_p1[32'd63];

assign p_shl2_cast_fu_2811_p3 = {{add_ln618_fu_2794_p2}, {5'd0}};

assign p_shl8_cast_fu_2684_p3 = {{trunc_ln610_fu_2680_p1}, {7'd0}};

assign p_shl9_cast_fu_2692_p3 = {{add_ln610_fu_2675_p2}, {5'd0}};

assign p_shl_cast_fu_2803_p3 = {{trunc_ln618_fu_2799_p1}, {7'd0}};

assign scales_fixed_0_V_fu_1648_p3 = ((and_ln603_4_reg_3736[0:0] === 1'b1) ? shl_ln604_4_fu_1644_p2 : select_ln585_1_reg_3731);

assign select_ln570_1_fu_3347_p3 = ((tmp_72_fu_3303_p3[0:0] === 1'b1) ? sub_ln461_1_fu_3341_p2 : zext_ln569_1_fu_3337_p1);

assign select_ln570_fu_1172_p3 = ((tmp_69_fu_1128_p3[0:0] === 1'b1) ? sub_ln461_fu_1166_p2 : zext_ln569_fu_1162_p1);

assign select_ln581_1_fu_3385_p3 = ((icmp_ln581_5_fu_3367_p2[0:0] === 1'b1) ? add_ln581_5_fu_3373_p2 : sub_ln581_5_fu_3379_p2);

assign select_ln581_fu_1210_p3 = ((icmp_ln581_4_fu_1192_p2[0:0] === 1'b1) ? add_ln581_4_fu_1198_p2 : sub_ln581_4_fu_1204_p2);

assign select_ln582_fu_1412_p3 = ((and_ln582_4_fu_1407_p2[0:0] === 1'b1) ? trunc_ln583_4_reg_3675 : 32'd0);

assign select_ln585_1_fu_1460_p3 = ((and_ln585_9_fu_1454_p2[0:0] === 1'b1) ? trunc_ln586_4_fu_1378_p1 : select_ln585_fu_1446_p3);

assign select_ln585_fu_1446_p3 = ((and_ln585_8_fu_1440_p2[0:0] === 1'b1) ? select_ln588_4_fu_1394_p3 : select_ln582_fu_1412_p3);

assign select_ln588_1_fu_1927_p3 = ((tmp_42_fu_1919_p3[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln588_2_fu_2086_p3 = ((tmp_53_fu_2078_p3[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln588_3_fu_2363_p3 = ((tmp_68_fu_2355_p3[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln588_4_fu_1394_p3 = ((tmp_71_fu_1386_p3[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln588_5_fu_3451_p3 = ((tmp_74_fu_3443_p3[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln588_fu_1522_p3 = ((tmp_39_fu_1514_p3[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln603_10_fu_2186_p3 = ((or_ln603_6_fu_2167_p2[0:0] === 1'b1) ? select_ln603_8_fu_2159_p3 : select_ln603_9_fu_2173_p3);

assign select_ln603_12_fu_2436_p3 = ((and_ln603_3_fu_2430_p2[0:0] === 1'b1) ? shl_ln604_3_fu_2371_p2 : trunc_ln586_3_fu_2348_p1);

assign select_ln603_13_fu_2450_p3 = ((and_ln585_6_fu_2407_p2[0:0] === 1'b1) ? select_ln588_3_fu_2363_p3 : trunc_ln583_3_reg_3871);

assign select_ln603_14_fu_2463_p3 = ((or_ln603_9_fu_2444_p2[0:0] === 1'b1) ? select_ln603_12_fu_2436_p3 : select_ln603_13_fu_2450_p3);

assign select_ln603_17_fu_3524_p3 = ((and_ln603_5_fu_3518_p2[0:0] === 1'b1) ? shl_ln604_5_fu_3459_p2 : trunc_ln586_5_fu_3435_p1);

assign select_ln603_18_fu_3538_p3 = ((and_ln585_10_fu_3495_p2[0:0] === 1'b1) ? select_ln588_5_fu_3451_p3 : trunc_ln583_5_reg_4190);

assign select_ln603_19_fu_3551_p3 = ((or_ln603_12_fu_3532_p2[0:0] === 1'b1) ? select_ln603_17_fu_3524_p3 : select_ln603_18_fu_3538_p3);

assign select_ln603_1_fu_1609_p3 = ((and_ln585_fu_1566_p2[0:0] === 1'b1) ? select_ln588_fu_1522_p3 : trunc_ln583_reg_3715);

assign select_ln603_2_fu_1622_p3 = ((or_ln603_fu_1603_p2[0:0] === 1'b1) ? select_ln603_fu_1595_p3 : select_ln603_1_fu_1609_p3);

assign select_ln603_4_fu_2000_p3 = ((and_ln603_1_fu_1994_p2[0:0] === 1'b1) ? shl_ln604_1_fu_1935_p2 : trunc_ln586_1_fu_1912_p1);

assign select_ln603_5_fu_2014_p3 = ((and_ln585_2_fu_1971_p2[0:0] === 1'b1) ? select_ln588_1_fu_1927_p3 : trunc_ln583_1_reg_3781);

assign select_ln603_6_fu_2027_p3 = ((or_ln603_3_fu_2008_p2[0:0] === 1'b1) ? select_ln603_4_fu_2000_p3 : select_ln603_5_fu_2014_p3);

assign select_ln603_8_fu_2159_p3 = ((and_ln603_2_fu_2153_p2[0:0] === 1'b1) ? shl_ln604_2_fu_2094_p2 : trunc_ln586_2_fu_2071_p1);

assign select_ln603_9_fu_2173_p3 = ((and_ln585_4_fu_2130_p2[0:0] === 1'b1) ? select_ln588_2_fu_2086_p3 : trunc_ln583_2_reg_3821);

assign select_ln603_fu_1595_p3 = ((and_ln603_fu_1589_p2[0:0] === 1'b1) ? shl_ln604_fu_1530_p2 : trunc_ln586_fu_1507_p1);

assign sext_ln581_1_fu_1890_p1 = sh_amt_1_reg_3769;

assign sext_ln581_2_fu_2049_p1 = sh_amt_2_reg_3809;

assign sext_ln581_3_fu_2326_p1 = sh_amt_3_reg_3859;

assign sext_ln581_4_fu_1356_p1 = select_ln581_reg_3663;

assign sext_ln581_5_fu_3413_p1 = select_ln581_1_reg_4178;

assign sext_ln581_fu_1485_p1 = sh_amt_reg_3703;

assign sext_ln593_fu_2544_p1 = $signed(add_ln593_fu_2539_p2);

assign sext_ln601_fu_2608_p1 = $signed(add_ln601_fu_2603_p2);

assign sext_ln610_fu_2655_p1 = $signed(sub_ln610_fu_2649_p2);

assign sext_ln618_fu_2774_p1 = $signed(sub_ln618_fu_2768_p2);

assign sext_ln637_fu_2910_p1 = $signed(add_ln637_fu_2905_p2);

assign sext_ln647_fu_2974_p1 = $signed(add_ln647_fu_2969_p2);

assign sext_ln665_fu_3017_p1 = $signed(sub_ln665_fu_3011_p2);

assign sext_ln675_fu_3081_p1 = $signed(add_ln675_fu_3076_p2);

assign sext_ln684_fu_3145_p1 = $signed(add_ln684_fu_3140_p2);

assign sext_ln698_fu_3260_p1 = $signed(add_ln698_fu_3255_p2);

assign sext_ln699_fu_3270_p1 = $signed(add_ln699_reg_4148);

assign sh_amt_1_fu_1744_p3 = ((icmp_ln581_1_fu_1726_p2[0:0] === 1'b1) ? add_ln581_1_fu_1732_p2 : sub_ln581_1_fu_1738_p2);

assign sh_amt_2_fu_1862_p3 = ((icmp_ln581_2_fu_1844_p2[0:0] === 1'b1) ? add_ln581_2_fu_1850_p2 : sub_ln581_2_fu_1856_p2);

assign sh_amt_3_fu_2298_p3 = ((icmp_ln581_3_fu_2280_p2[0:0] === 1'b1) ? add_ln581_3_fu_2286_p2 : sub_ln581_3_fu_2292_p2);

assign sh_amt_fu_1328_p3 = ((icmp_ln581_fu_1310_p2[0:0] === 1'b1) ? add_ln581_fu_1316_p2 : sub_ln581_fu_1322_p2);

assign shl_ln604_1_fu_1935_p2 = trunc_ln583_1_reg_3781 << sext_ln581_1_fu_1890_p1;

assign shl_ln604_2_fu_2094_p2 = trunc_ln583_2_reg_3821 << sext_ln581_2_fu_2049_p1;

assign shl_ln604_3_fu_2371_p2 = trunc_ln583_3_reg_3871 << sext_ln581_3_fu_2326_p1;

assign shl_ln604_4_fu_1644_p2 = trunc_ln583_4_reg_3675 << sext_ln581_4_reg_3726;

assign shl_ln604_5_fu_3459_p2 = trunc_ln583_5_reg_4190 << sext_ln581_5_fu_3413_p1;

assign shl_ln604_fu_1530_p2 = trunc_ln583_reg_3715 << sext_ln581_fu_1485_p1;

assign shl_ln699_1_fu_3221_p3 = {{trunc_ln699_fu_3205_p1}, {5'd0}};

assign shl_ln_fu_3209_p3 = {{trunc_ln699_fu_3205_p1}, {7'd0}};

assign sub_ln461_1_fu_3341_p2 = (54'd0 - zext_ln569_1_fu_3337_p1);

assign sub_ln461_fu_1166_p2 = (54'd0 - zext_ln569_fu_1162_p1);

assign sub_ln575_1_fu_3361_p2 = (12'd1075 - zext_ln461_5_fu_3321_p1);

assign sub_ln575_fu_1186_p2 = (12'd1075 - zext_ln461_4_fu_1146_p1);

assign sub_ln581_1_fu_1738_p2 = (12'd20 - F2_1_fu_1720_p2);

assign sub_ln581_2_fu_1856_p2 = (12'd20 - F2_2_fu_1838_p2);

assign sub_ln581_3_fu_2292_p2 = (12'd20 - F2_3_fu_2274_p2);

assign sub_ln581_4_fu_1204_p2 = (12'd20 - sub_ln575_fu_1186_p2);

assign sub_ln581_5_fu_3379_p2 = (12'd20 - sub_ln575_1_fu_3361_p2);

assign sub_ln581_fu_1322_p2 = (12'd20 - F2_fu_1304_p2);

assign sub_ln593_fu_2517_p2 = (tmp_24_fu_2497_p3 - zext_ln593_fu_2513_p1);

assign sub_ln601_fu_2581_p2 = (tmp_26_fu_2561_p3 - zext_ln601_fu_2577_p1);

assign sub_ln610_1_fu_2700_p2 = (p_shl8_cast_fu_2684_p3 - p_shl9_cast_fu_2692_p3);

assign sub_ln610_fu_2649_p2 = (zext_ln610_fu_2633_p1 - zext_ln610_1_fu_2645_p1);

assign sub_ln618_1_fu_2819_p2 = (p_shl_cast_fu_2803_p3 - p_shl2_cast_fu_2811_p3);

assign sub_ln618_fu_2768_p2 = (zext_ln618_fu_2752_p1 - zext_ln618_1_fu_2764_p1);

assign sub_ln637_fu_2883_p2 = (tmp_32_fu_2863_p3 - zext_ln637_fu_2879_p1);

assign sub_ln647_fu_2947_p2 = (tmp_34_fu_2927_p3 - zext_ln647_fu_2943_p1);

assign sub_ln665_fu_3011_p2 = (tmp_36_fu_2991_p3 - zext_ln665_fu_3007_p1);

assign sub_ln675_fu_3054_p2 = (tmp_40_fu_3034_p3 - zext_ln675_fu_3050_p1);

assign sub_ln684_fu_3118_p2 = (tmp_44_fu_3098_p3 - zext_ln684_fu_3114_p1);

assign sub_ln698_fu_3199_p2 = (tmp_46_fu_3179_p3 - zext_ln698_fu_3195_p1);

assign sub_ln699_fu_3233_p2 = (zext_ln699_1_fu_3217_p1 - zext_ln699_2_fu_3229_p1);

assign tmp_1_fu_1154_p3 = {{1'd1}, {trunc_ln565_4_fu_1150_p1}};

assign tmp_24_fu_2497_p3 = {{v338_0_reg_580}, {7'd0}};

assign tmp_25_fu_2505_p3 = {{v338_0_reg_580}, {5'd0}};

assign tmp_26_fu_2561_p3 = {{v342_0_reg_602}, {7'd0}};

assign tmp_27_fu_2569_p3 = {{v342_0_reg_602}, {5'd0}};

assign tmp_28_fu_2625_p3 = {{v346_0_reg_624}, {3'd0}};

assign tmp_29_fu_2637_p3 = {{v346_0_reg_624}, {1'd0}};

assign tmp_30_fu_2744_p3 = {{v350_0_reg_657}, {3'd0}};

assign tmp_31_fu_2756_p3 = {{v350_0_reg_657}, {1'd0}};

assign tmp_32_fu_2863_p3 = {{v358_0_reg_690}, {3'd0}};

assign tmp_33_fu_2871_p3 = {{v358_0_reg_690}, {1'd0}};

assign tmp_34_fu_2927_p3 = {{i12_0_reg_712}, {3'd0}};

assign tmp_35_fu_2935_p3 = {{i12_0_reg_712}, {1'd0}};

assign tmp_36_fu_2991_p3 = {{h6_0_reg_734}, {3'd0}};

assign tmp_37_fu_2999_p3 = {{h6_0_reg_734}, {1'd0}};

assign tmp_39_fu_1514_p3 = bitcast_ln696_fu_1511_p1[32'd31];

assign tmp_40_fu_3034_p3 = {{v378_0_reg_745}, {3'd0}};

assign tmp_42_fu_1919_p3 = bitcast_ln696_2_fu_1916_p1[32'd31];

assign tmp_43_fu_3042_p3 = {{v378_0_reg_745}, {1'd0}};

assign tmp_44_fu_3098_p3 = {{v382_0_reg_767}, {7'd0}};

assign tmp_45_fu_3106_p3 = {{v382_0_reg_767}, {5'd0}};

assign tmp_46_fu_3179_p3 = {{h7_0_0_reg_800}, {7'd0}};

assign tmp_47_fu_3187_p3 = {{h7_0_0_reg_800}, {5'd0}};

assign tmp_53_fu_2078_p3 = bitcast_ln696_4_fu_2075_p1[32'd31];

assign tmp_5_fu_3329_p3 = {{1'd1}, {trunc_ln565_5_fu_3325_p1}};

assign tmp_68_fu_2355_p3 = bitcast_ln696_6_fu_2352_p1[32'd31];

assign tmp_69_fu_1128_p3 = bitcast_ln696_7_fu_1120_p1[32'd63];

assign tmp_71_fu_1386_p3 = bitcast_ln696_8_fu_1382_p1[32'd31];

assign tmp_72_fu_3303_p3 = bitcast_ln696_9_fu_3295_p1[32'd63];

assign tmp_74_fu_3443_p3 = bitcast_ln696_10_fu_3439_p1[32'd31];

assign tmp_8_fu_1806_p3 = {{1'd1}, {trunc_ln565_2_fu_1802_p1}};

assign tmp_9_fu_2242_p3 = {{1'd1}, {trunc_ln565_3_fu_2238_p1}};

assign tmp_fu_1272_p3 = {{1'd1}, {trunc_ln565_fu_1268_p1}};

assign tmp_s_fu_1688_p3 = {{1'd1}, {trunc_ln565_1_fu_1684_p1}};

assign trunc_ln556_1_fu_1658_p1 = ireg_V_1_fu_1654_p1[62:0];

assign trunc_ln556_2_fu_1776_p1 = ireg_V_2_fu_1772_p1[62:0];

assign trunc_ln556_3_fu_2212_p1 = ireg_V_3_fu_2208_p1[62:0];

assign trunc_ln556_fu_1242_p1 = ireg_V_fu_1238_p1[62:0];

assign trunc_ln557_1_fu_3299_p1 = bitcast_ln696_9_fu_3295_p1[62:0];

assign trunc_ln557_fu_1124_p1 = bitcast_ln696_7_fu_1120_p1[62:0];

assign trunc_ln565_1_fu_1684_p1 = ireg_V_1_fu_1654_p1[51:0];

assign trunc_ln565_2_fu_1802_p1 = ireg_V_2_fu_1772_p1[51:0];

assign trunc_ln565_3_fu_2238_p1 = ireg_V_3_fu_2208_p1[51:0];

assign trunc_ln565_4_fu_1150_p1 = bitcast_ln696_7_fu_1120_p1[51:0];

assign trunc_ln565_5_fu_3325_p1 = bitcast_ln696_9_fu_3295_p1[51:0];

assign trunc_ln565_fu_1268_p1 = ireg_V_fu_1238_p1[51:0];

assign trunc_ln583_1_fu_1758_p1 = man_V_5_fu_1706_p3[31:0];

assign trunc_ln583_2_fu_1876_p1 = man_V_8_fu_1824_p3[31:0];

assign trunc_ln583_3_fu_2312_p1 = man_V_11_fu_2260_p3[31:0];

assign trunc_ln583_4_fu_1224_p1 = select_ln570_fu_1172_p3[31:0];

assign trunc_ln583_5_fu_3399_p1 = select_ln570_1_fu_3347_p3[31:0];

assign trunc_ln583_fu_1342_p1 = man_V_2_fu_1290_p3[31:0];

assign trunc_ln586_1_fu_1912_p1 = ashr_ln586_1_fu_1907_p2[31:0];

assign trunc_ln586_2_fu_2071_p1 = ashr_ln586_2_fu_2066_p2[31:0];

assign trunc_ln586_3_fu_2348_p1 = ashr_ln586_3_fu_2343_p2[31:0];

assign trunc_ln586_4_fu_1378_p1 = ashr_ln586_4_fu_1373_p2[31:0];

assign trunc_ln586_5_fu_3435_p1 = ashr_ln586_5_fu_3430_p2[31:0];

assign trunc_ln586_fu_1507_p1 = ashr_ln586_fu_1502_p2[31:0];

assign trunc_ln610_fu_2680_p1 = add_ln610_fu_2675_p2[7:0];

assign trunc_ln618_fu_2799_p1 = add_ln618_fu_2794_p2[7:0];

assign trunc_ln699_fu_3205_p1 = h7_0_0_reg_800[3:0];

assign v263_address0 = grp_rms_norm_fu_931_v0_address0;

assign v264_0_address0 = grp_linear_forward_no_mu_fu_844_v80_0_address0;

assign v264_1_address0 = grp_linear_forward_no_mu_fu_844_v80_1_address0;

assign v266_0_address0 = grp_linear_forward_no_mu_fu_844_v80_0_address0;

assign v266_1_address0 = grp_linear_forward_no_mu_fu_844_v80_1_address0;

assign v268_0_address0 = grp_linear_forward_no_mu_fu_873_v80_0_address0;

assign v268_0_ce0 = grp_linear_forward_no_mu_fu_873_v80_0_ce0;

assign v268_1_address0 = grp_linear_forward_no_mu_fu_873_v80_1_address0;

assign v268_1_ce0 = grp_linear_forward_no_mu_fu_873_v80_1_ce0;

assign v270_0_address0 = grp_linear_forward_no_mu_fu_844_v80_0_address0;

assign v270_1_address0 = grp_linear_forward_no_mu_fu_844_v80_1_address0;

assign v272_address0 = grp_apply_rotary_pos_emb_fu_955_v162_address0;

assign v272_ce0 = grp_apply_rotary_pos_emb_fu_955_v162_ce0;

assign v273_address0 = grp_apply_rotary_pos_emb_fu_955_v163_address0;

assign v273_ce0 = grp_apply_rotary_pos_emb_fu_955_v163_ce0;

assign v274_address0 = grp_rms_norm_fu_931_v1_address0;

assign v275_address0 = grp_rms_norm_fu_931_v1_address0;

assign v276_address0 = grp_cache_update_fu_992_v192_address0;

assign v277_address0 = grp_cache_update_fu_992_v192_address0;

assign v300_V_fu_1636_p3 = ((or_ln603_2_fu_1630_p2[0:0] === 1'b1) ? select_ln603_2_fu_1622_p3 : 32'd0);

assign v302_V_fu_2041_p3 = ((or_ln603_5_fu_2035_p2[0:0] === 1'b1) ? select_ln603_6_fu_2027_p3 : 32'd0);

assign v304_V_fu_2200_p3 = ((or_ln603_8_fu_2194_p2[0:0] === 1'b1) ? select_ln603_10_fu_2186_p3 : 32'd0);

assign v306_V_fu_2477_p3 = ((or_ln603_11_fu_2471_p2[0:0] === 1'b1) ? select_ln603_14_fu_2463_p3 : 32'd0);

assign v338_fu_2491_p2 = (v338_0_reg_580 + 5'd1);

assign v342_fu_2555_p2 = (v342_0_reg_602 + 5'd1);

assign v346_fu_2619_p2 = (v346_0_reg_624 + 5'd1);

assign v347_fu_2665_p2 = (v347_0_reg_635 + 3'd1);

assign v348_fu_2712_p2 = (v348_0_reg_646 + 7'd1);

assign v350_fu_2738_p2 = (v350_0_reg_657 + 5'd1);

assign v351_fu_2784_p2 = (v351_0_reg_668 + 3'd1);

assign v352_fu_2831_p2 = (v352_0_reg_679 + 7'd1);

assign v358_fu_2857_p2 = (v358_0_reg_690 + 5'd1);

assign v378_fu_3028_p2 = (v378_0_reg_745 + 5'd1);

assign v382_fu_3092_p2 = (v382_0_reg_767 + 5'd1);

assign xor_ln571_1_fu_1940_p2 = (icmp_ln571_1_reg_3757 ^ 1'd1);

assign xor_ln571_2_fu_2099_p2 = (icmp_ln571_2_reg_3797 ^ 1'd1);

assign xor_ln571_3_fu_2376_p2 = (icmp_ln571_3_reg_3847 ^ 1'd1);

assign xor_ln571_4_fu_1402_p2 = (icmp_ln571_4_reg_3651 ^ 1'd1);

assign xor_ln571_5_fu_3464_p2 = (icmp_ln571_5_reg_4166 ^ 1'd1);

assign xor_ln571_fu_1535_p2 = (icmp_ln571_reg_3691 ^ 1'd1);

assign xor_ln581_1_fu_1988_p2 = (or_ln581_1_fu_1983_p2 ^ 1'd1);

assign xor_ln581_2_fu_2147_p2 = (or_ln581_2_fu_2142_p2 ^ 1'd1);

assign xor_ln581_3_fu_2424_p2 = (or_ln581_3_fu_2419_p2 ^ 1'd1);

assign xor_ln581_4_fu_1473_p2 = (or_ln581_4_fu_1468_p2 ^ 1'd1);

assign xor_ln581_5_fu_3512_p2 = (or_ln581_5_fu_3507_p2 ^ 1'd1);

assign xor_ln581_fu_1583_p2 = (or_ln581_fu_1578_p2 ^ 1'd1);

assign xor_ln582_1_fu_1954_p2 = (or_ln582_1_fu_1950_p2 ^ 1'd1);

assign xor_ln582_2_fu_2113_p2 = (or_ln582_2_fu_2109_p2 ^ 1'd1);

assign xor_ln582_3_fu_2390_p2 = (or_ln582_3_fu_2386_p2 ^ 1'd1);

assign xor_ln582_4_fu_1423_p2 = (or_ln582_4_fu_1419_p2 ^ 1'd1);

assign xor_ln582_5_fu_3478_p2 = (or_ln582_5_fu_3474_p2 ^ 1'd1);

assign xor_ln582_fu_1549_p2 = (or_ln582_fu_1545_p2 ^ 1'd1);

assign xor_ln585_1_fu_1965_p2 = (icmp_ln585_1_fu_1893_p2 ^ 1'd1);

assign xor_ln585_2_fu_2124_p2 = (icmp_ln585_2_fu_2052_p2 ^ 1'd1);

assign xor_ln585_3_fu_2401_p2 = (icmp_ln585_3_fu_2329_p2 ^ 1'd1);

assign xor_ln585_4_fu_1434_p2 = (icmp_ln585_4_fu_1359_p2 ^ 1'd1);

assign xor_ln585_5_fu_3489_p2 = (icmp_ln585_5_fu_3416_p2 ^ 1'd1);

assign xor_ln585_fu_1560_p2 = (icmp_ln585_fu_1488_p2 ^ 1'd1);

assign zext_ln461_1_fu_1680_p1 = exp_tmp_V_1_fu_1670_p4;

assign zext_ln461_2_fu_1798_p1 = exp_tmp_V_2_fu_1788_p4;

assign zext_ln461_3_fu_2234_p1 = exp_tmp_V_3_fu_2224_p4;

assign zext_ln461_4_fu_1146_p1 = p_Result_9_fu_1136_p4;

assign zext_ln461_5_fu_3321_p1 = p_Result_s_97_fu_3311_p4;

assign zext_ln461_fu_1264_p1 = exp_tmp_V_fu_1254_p4;

assign zext_ln480_fu_1064_p1 = v283_0_0_reg_536;

assign zext_ln501_fu_1081_p1 = v293_0_0_reg_547;

assign zext_ln507_fu_1098_p1 = v296_0_0_reg_558;

assign zext_ln513_fu_1115_p1 = v299_0_0_reg_569;

assign zext_ln569_1_fu_3337_p1 = tmp_5_fu_3329_p3;

assign zext_ln569_fu_1162_p1 = tmp_1_fu_1154_p3;

assign zext_ln586_1_fu_1903_p1 = $unsigned(sext_ln581_1_fu_1890_p1);

assign zext_ln586_2_fu_2062_p1 = $unsigned(sext_ln581_2_fu_2049_p1);

assign zext_ln586_3_fu_2339_p1 = $unsigned(sext_ln581_3_fu_2326_p1);

assign zext_ln586_4_fu_1369_p1 = $unsigned(sext_ln581_4_fu_1356_p1);

assign zext_ln586_5_fu_3426_p1 = $unsigned(sext_ln581_5_fu_3413_p1);

assign zext_ln586_fu_1498_p1 = $unsigned(sext_ln581_fu_1485_p1);

assign zext_ln593_1_fu_2535_p1 = v340_0_0_reg_591;

assign zext_ln593_fu_2513_p1 = tmp_25_fu_2505_p3;

assign zext_ln601_1_fu_2599_p1 = v344_0_0_reg_613;

assign zext_ln601_fu_2577_p1 = tmp_27_fu_2569_p3;

assign zext_ln610_1_fu_2645_p1 = tmp_29_fu_2637_p3;

assign zext_ln610_2_fu_2671_p1 = v347_0_reg_635;

assign zext_ln610_3_fu_2718_p1 = v348_0_reg_646;

assign zext_ln610_4_fu_2727_p1 = add_ln610_1_fu_2722_p2;

assign zext_ln610_fu_2633_p1 = tmp_28_fu_2625_p3;

assign zext_ln618_1_fu_2764_p1 = tmp_31_fu_2756_p3;

assign zext_ln618_2_fu_2790_p1 = v351_0_reg_668;

assign zext_ln618_3_fu_2837_p1 = v352_0_reg_679;

assign zext_ln618_4_fu_2846_p1 = add_ln618_1_fu_2841_p2;

assign zext_ln618_fu_2752_p1 = tmp_30_fu_2744_p3;

assign zext_ln637_1_fu_2901_p1 = v360_0_0_reg_701;

assign zext_ln637_fu_2879_p1 = tmp_33_fu_2871_p3;

assign zext_ln647_1_fu_2965_p1 = k10_0_0_reg_723;

assign zext_ln647_fu_2943_p1 = tmp_35_fu_2935_p3;

assign zext_ln665_fu_3007_p1 = tmp_37_fu_2999_p3;

assign zext_ln675_1_fu_3072_p1 = v380_0_0_reg_756;

assign zext_ln675_fu_3050_p1 = tmp_43_fu_3042_p3;

assign zext_ln684_1_fu_3136_p1 = v384_0_0_reg_778;

assign zext_ln684_fu_3114_p1 = tmp_45_fu_3106_p3;

assign zext_ln692_fu_3162_p1 = v387_0_0_reg_789;

assign zext_ln697_fu_3239_p1 = d4_0_0_reg_811;

assign zext_ln698_fu_3195_p1 = tmp_47_fu_3187_p3;

assign zext_ln699_1_fu_3217_p1 = shl_ln_fu_3209_p3;

assign zext_ln699_2_fu_3229_p1 = shl_ln699_1_fu_3221_p3;

assign zext_ln699_fu_3273_p1 = $unsigned(sext_ln699_fu_3270_p1);

assign zext_ln706_fu_3290_p1 = v394_0_0_reg_822;

assign zext_ln754_fu_3585_p1 = v417_0_0_reg_833;

always @ (posedge ap_clk) begin
    sub_ln593_reg_3895[4:0] <= 5'b00000;
    sub_ln601_reg_3916[4:0] <= 5'b00000;
    sext_ln610_reg_3937[0] <= 1'b0;
    sub_ln610_1_reg_3950[4:0] <= 5'b00000;
    sext_ln618_reg_3971[0] <= 1'b0;
    sub_ln618_1_reg_3984[4:0] <= 5'b00000;
    sub_ln637_reg_4005[0] <= 1'b0;
    sub_ln647_reg_4026[0] <= 1'b0;
    attn_weights_0_addr_1_reg_4057[0] <= 1'b0;
    sub_ln675_reg_4075[0] <= 1'b0;
    sub_ln684_reg_4096[4:0] <= 5'b00000;
    sub_ln698_reg_4125[4:0] <= 5'b00000;
    sub_ln699_reg_4130[4:0] <= 5'b00000;
end

endmodule //attention
