// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "reshape_2D_to_3D.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic reshape_2D_to_3D::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic reshape_2D_to_3D::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> reshape_2D_to_3D::ap_ST_fsm_state1 = "1";
const sc_lv<4> reshape_2D_to_3D::ap_ST_fsm_state2 = "10";
const sc_lv<4> reshape_2D_to_3D::ap_ST_fsm_state3 = "100";
const sc_lv<4> reshape_2D_to_3D::ap_ST_fsm_state4 = "1000";
const sc_lv<32> reshape_2D_to_3D::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> reshape_2D_to_3D::ap_const_lv32_1 = "1";
const sc_lv<1> reshape_2D_to_3D::ap_const_lv1_0 = "0";
const sc_lv<32> reshape_2D_to_3D::ap_const_lv32_2 = "10";
const sc_lv<5> reshape_2D_to_3D::ap_const_lv5_0 = "00000";
const sc_lv<1> reshape_2D_to_3D::ap_const_lv1_1 = "1";
const sc_lv<7> reshape_2D_to_3D::ap_const_lv7_0 = "0000000";
const sc_lv<32> reshape_2D_to_3D::ap_const_lv32_3 = "11";
const sc_lv<5> reshape_2D_to_3D::ap_const_lv5_10 = "10000";
const sc_lv<5> reshape_2D_to_3D::ap_const_lv5_1 = "1";
const sc_lv<7> reshape_2D_to_3D::ap_const_lv7_60 = "1100000";
const sc_lv<7> reshape_2D_to_3D::ap_const_lv7_1 = "1";
const bool reshape_2D_to_3D::ap_const_boolean_1 = true;

reshape_2D_to_3D::reshape_2D_to_3D(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln233_fu_99_p2);
    sensitive << ( h_0_0_reg_71 );

    SC_METHOD(thread_add_ln234_fu_175_p2);
    sensitive << ( d_0_0_reg_82 );

    SC_METHOD(thread_add_ln235_fu_181_p2);
    sensitive << ( sub_ln235_reg_212 );
    sensitive << ( zext_ln234_fu_165_p1 );

    SC_METHOD(thread_add_ln236_fu_195_p2);
    sensitive << ( sub_ln236_reg_217 );
    sensitive << ( zext_ln234_fu_165_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln233_fu_93_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln233_fu_93_p2 );

    SC_METHOD(thread_icmp_ln233_fu_93_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( h_0_0_reg_71 );

    SC_METHOD(thread_icmp_ln234_fu_169_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( d_0_0_reg_82 );

    SC_METHOD(thread_sext_ln235_fu_186_p1);
    sensitive << ( add_ln235_fu_181_p2 );

    SC_METHOD(thread_sext_ln236_fu_200_p1);
    sensitive << ( add_ln236_reg_235 );

    SC_METHOD(thread_shl_ln235_1_fu_121_p3);
    sensitive << ( trunc_ln235_fu_105_p1 );

    SC_METHOD(thread_shl_ln_fu_109_p3);
    sensitive << ( trunc_ln235_fu_105_p1 );

    SC_METHOD(thread_sub_ln235_fu_133_p2);
    sensitive << ( zext_ln235_1_fu_117_p1 );
    sensitive << ( zext_ln235_2_fu_129_p1 );

    SC_METHOD(thread_sub_ln236_fu_159_p2);
    sensitive << ( tmp_s_fu_139_p3 );
    sensitive << ( zext_ln236_fu_155_p1 );

    SC_METHOD(thread_tmp_9_fu_147_p3);
    sensitive << ( h_0_0_reg_71 );

    SC_METHOD(thread_tmp_s_fu_139_p3);
    sensitive << ( h_0_0_reg_71 );

    SC_METHOD(thread_trunc_ln235_fu_105_p1);
    sensitive << ( h_0_0_reg_71 );

    SC_METHOD(thread_v146_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln235_fu_190_p1 );

    SC_METHOD(thread_v146_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_v147_0_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln236_fu_200_p1 );

    SC_METHOD(thread_v147_0_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_v147_0_d0);
    sensitive << ( v146_q0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_v147_0_we0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_zext_ln234_fu_165_p1);
    sensitive << ( d_0_0_reg_82 );

    SC_METHOD(thread_zext_ln235_1_fu_117_p1);
    sensitive << ( shl_ln_fu_109_p3 );

    SC_METHOD(thread_zext_ln235_2_fu_129_p1);
    sensitive << ( shl_ln235_1_fu_121_p3 );

    SC_METHOD(thread_zext_ln235_fu_190_p1);
    sensitive << ( sext_ln235_fu_186_p1 );

    SC_METHOD(thread_zext_ln236_fu_155_p1);
    sensitive << ( tmp_9_fu_147_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln233_fu_93_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln234_fu_169_p2 );

    ap_CS_fsm = "0001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "reshape_2D_to_3D_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, v146_address0, "(port)v146_address0");
    sc_trace(mVcdFile, v146_ce0, "(port)v146_ce0");
    sc_trace(mVcdFile, v146_q0, "(port)v146_q0");
    sc_trace(mVcdFile, v147_0_address0, "(port)v147_0_address0");
    sc_trace(mVcdFile, v147_0_ce0, "(port)v147_0_ce0");
    sc_trace(mVcdFile, v147_0_we0, "(port)v147_0_we0");
    sc_trace(mVcdFile, v147_0_d0, "(port)v147_0_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, add_ln233_fu_99_p2, "add_ln233_fu_99_p2");
    sc_trace(mVcdFile, add_ln233_reg_207, "add_ln233_reg_207");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, sub_ln235_fu_133_p2, "sub_ln235_fu_133_p2");
    sc_trace(mVcdFile, sub_ln235_reg_212, "sub_ln235_reg_212");
    sc_trace(mVcdFile, icmp_ln233_fu_93_p2, "icmp_ln233_fu_93_p2");
    sc_trace(mVcdFile, sub_ln236_fu_159_p2, "sub_ln236_fu_159_p2");
    sc_trace(mVcdFile, sub_ln236_reg_217, "sub_ln236_reg_217");
    sc_trace(mVcdFile, add_ln234_fu_175_p2, "add_ln234_fu_175_p2");
    sc_trace(mVcdFile, add_ln234_reg_225, "add_ln234_reg_225");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln234_fu_169_p2, "icmp_ln234_fu_169_p2");
    sc_trace(mVcdFile, add_ln236_fu_195_p2, "add_ln236_fu_195_p2");
    sc_trace(mVcdFile, add_ln236_reg_235, "add_ln236_reg_235");
    sc_trace(mVcdFile, h_0_0_reg_71, "h_0_0_reg_71");
    sc_trace(mVcdFile, d_0_0_reg_82, "d_0_0_reg_82");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, zext_ln235_fu_190_p1, "zext_ln235_fu_190_p1");
    sc_trace(mVcdFile, sext_ln236_fu_200_p1, "sext_ln236_fu_200_p1");
    sc_trace(mVcdFile, trunc_ln235_fu_105_p1, "trunc_ln235_fu_105_p1");
    sc_trace(mVcdFile, shl_ln_fu_109_p3, "shl_ln_fu_109_p3");
    sc_trace(mVcdFile, shl_ln235_1_fu_121_p3, "shl_ln235_1_fu_121_p3");
    sc_trace(mVcdFile, zext_ln235_1_fu_117_p1, "zext_ln235_1_fu_117_p1");
    sc_trace(mVcdFile, zext_ln235_2_fu_129_p1, "zext_ln235_2_fu_129_p1");
    sc_trace(mVcdFile, tmp_9_fu_147_p3, "tmp_9_fu_147_p3");
    sc_trace(mVcdFile, tmp_s_fu_139_p3, "tmp_s_fu_139_p3");
    sc_trace(mVcdFile, zext_ln236_fu_155_p1, "zext_ln236_fu_155_p1");
    sc_trace(mVcdFile, zext_ln234_fu_165_p1, "zext_ln234_fu_165_p1");
    sc_trace(mVcdFile, add_ln235_fu_181_p2, "add_ln235_fu_181_p2");
    sc_trace(mVcdFile, sext_ln235_fu_186_p1, "sext_ln235_fu_186_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

reshape_2D_to_3D::~reshape_2D_to_3D() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void reshape_2D_to_3D::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        d_0_0_reg_82 = add_ln234_reg_225.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln233_fu_93_p2.read(), ap_const_lv1_0))) {
        d_0_0_reg_82 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln234_fu_169_p2.read(), ap_const_lv1_1))) {
        h_0_0_reg_71 = add_ln233_reg_207.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        h_0_0_reg_71 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        add_ln233_reg_207 = add_ln233_fu_99_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        add_ln234_reg_225 = add_ln234_fu_175_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln234_fu_169_p2.read()))) {
        add_ln236_reg_235 = add_ln236_fu_195_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln233_fu_93_p2.read(), ap_const_lv1_0))) {
        sub_ln235_reg_212 = sub_ln235_fu_133_p2.read();
        sub_ln236_reg_217 = sub_ln236_fu_159_p2.read();
    }
}

void reshape_2D_to_3D::thread_add_ln233_fu_99_p2() {
    add_ln233_fu_99_p2 = (!h_0_0_reg_71.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(h_0_0_reg_71.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void reshape_2D_to_3D::thread_add_ln234_fu_175_p2() {
    add_ln234_fu_175_p2 = (!d_0_0_reg_82.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(d_0_0_reg_82.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void reshape_2D_to_3D::thread_add_ln235_fu_181_p2() {
    add_ln235_fu_181_p2 = (!zext_ln234_fu_165_p1.read().is_01() || !sub_ln235_reg_212.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln234_fu_165_p1.read()) + sc_biguint<12>(sub_ln235_reg_212.read()));
}

void reshape_2D_to_3D::thread_add_ln236_fu_195_p2() {
    add_ln236_fu_195_p2 = (!sub_ln236_reg_217.read().is_01() || !zext_ln234_fu_165_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(sub_ln236_reg_217.read()) + sc_biguint<12>(zext_ln234_fu_165_p1.read()));
}

void reshape_2D_to_3D::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void reshape_2D_to_3D::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void reshape_2D_to_3D::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void reshape_2D_to_3D::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void reshape_2D_to_3D::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln233_fu_93_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void reshape_2D_to_3D::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void reshape_2D_to_3D::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln233_fu_93_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void reshape_2D_to_3D::thread_icmp_ln233_fu_93_p2() {
    icmp_ln233_fu_93_p2 = (!h_0_0_reg_71.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(h_0_0_reg_71.read() == ap_const_lv5_10);
}

void reshape_2D_to_3D::thread_icmp_ln234_fu_169_p2() {
    icmp_ln234_fu_169_p2 = (!d_0_0_reg_82.read().is_01() || !ap_const_lv7_60.is_01())? sc_lv<1>(): sc_lv<1>(d_0_0_reg_82.read() == ap_const_lv7_60);
}

void reshape_2D_to_3D::thread_sext_ln235_fu_186_p1() {
    sext_ln235_fu_186_p1 = esl_sext<32,12>(add_ln235_fu_181_p2.read());
}

void reshape_2D_to_3D::thread_sext_ln236_fu_200_p1() {
    sext_ln236_fu_200_p1 = esl_sext<64,12>(add_ln236_reg_235.read());
}

void reshape_2D_to_3D::thread_shl_ln235_1_fu_121_p3() {
    shl_ln235_1_fu_121_p3 = esl_concat<4,5>(trunc_ln235_fu_105_p1.read(), ap_const_lv5_0);
}

void reshape_2D_to_3D::thread_shl_ln_fu_109_p3() {
    shl_ln_fu_109_p3 = esl_concat<4,7>(trunc_ln235_fu_105_p1.read(), ap_const_lv7_0);
}

void reshape_2D_to_3D::thread_sub_ln235_fu_133_p2() {
    sub_ln235_fu_133_p2 = (!zext_ln235_1_fu_117_p1.read().is_01() || !zext_ln235_2_fu_129_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln235_1_fu_117_p1.read()) - sc_biguint<12>(zext_ln235_2_fu_129_p1.read()));
}

void reshape_2D_to_3D::thread_sub_ln236_fu_159_p2() {
    sub_ln236_fu_159_p2 = (!tmp_s_fu_139_p3.read().is_01() || !zext_ln236_fu_155_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(tmp_s_fu_139_p3.read()) - sc_biguint<12>(zext_ln236_fu_155_p1.read()));
}

void reshape_2D_to_3D::thread_tmp_9_fu_147_p3() {
    tmp_9_fu_147_p3 = esl_concat<5,5>(h_0_0_reg_71.read(), ap_const_lv5_0);
}

void reshape_2D_to_3D::thread_tmp_s_fu_139_p3() {
    tmp_s_fu_139_p3 = esl_concat<5,7>(h_0_0_reg_71.read(), ap_const_lv7_0);
}

void reshape_2D_to_3D::thread_trunc_ln235_fu_105_p1() {
    trunc_ln235_fu_105_p1 = h_0_0_reg_71.read().range(4-1, 0);
}

void reshape_2D_to_3D::thread_v146_address0() {
    v146_address0 =  (sc_lv<11>) (zext_ln235_fu_190_p1.read());
}

void reshape_2D_to_3D::thread_v146_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        v146_ce0 = ap_const_logic_1;
    } else {
        v146_ce0 = ap_const_logic_0;
    }
}

void reshape_2D_to_3D::thread_v147_0_address0() {
    v147_0_address0 =  (sc_lv<11>) (sext_ln236_fu_200_p1.read());
}

void reshape_2D_to_3D::thread_v147_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        v147_0_ce0 = ap_const_logic_1;
    } else {
        v147_0_ce0 = ap_const_logic_0;
    }
}

void reshape_2D_to_3D::thread_v147_0_d0() {
    v147_0_d0 = v146_q0.read();
}

void reshape_2D_to_3D::thread_v147_0_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        v147_0_we0 = ap_const_logic_1;
    } else {
        v147_0_we0 = ap_const_logic_0;
    }
}

void reshape_2D_to_3D::thread_zext_ln234_fu_165_p1() {
    zext_ln234_fu_165_p1 = esl_zext<12,7>(d_0_0_reg_82.read());
}

void reshape_2D_to_3D::thread_zext_ln235_1_fu_117_p1() {
    zext_ln235_1_fu_117_p1 = esl_zext<12,11>(shl_ln_fu_109_p3.read());
}

void reshape_2D_to_3D::thread_zext_ln235_2_fu_129_p1() {
    zext_ln235_2_fu_129_p1 = esl_zext<12,9>(shl_ln235_1_fu_121_p3.read());
}

void reshape_2D_to_3D::thread_zext_ln235_fu_190_p1() {
    zext_ln235_fu_190_p1 = esl_zext<64,32>(sext_ln235_fu_186_p1.read());
}

void reshape_2D_to_3D::thread_zext_ln236_fu_155_p1() {
    zext_ln236_fu_155_p1 = esl_zext<12,10>(tmp_9_fu_147_p3.read());
}

void reshape_2D_to_3D::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln233_fu_93_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln234_fu_169_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

