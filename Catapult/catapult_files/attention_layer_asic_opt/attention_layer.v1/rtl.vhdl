-- ----------------------------------------------------------------------
--  HLS HDL:        VHDL Netlister
--  HLS Version:    2024.1_2/1117371 Production Release
--  HLS Date:       Fri Jun 28 23:58:31 PDT 2024
-- 
--  Generated by:   dr655@ecelinux-04.ece.cornell.edu
--  Generated date: Fri Dec 13 01:25:39 2024
-- ----------------------------------------------------------------------

-- 
-- ------------------------------------------------------------------
--  Design Unit:    dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_22_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;
USE mgc_hls.ram_sync_dualRW_be_pkg.ALL;


ENTITY dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_22_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    IS
  PORT(
    en : OUT STD_LOGIC;
    data_out : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
    data_in : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
    data_in_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    addr_d : IN STD_LOGIC_VECTOR (17 DOWNTO 0);
    re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    data_out_d : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
    en_d : IN STD_LOGIC
  );
END dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_22_384_40_9_0_1_1_0_0_1_1_40_384_2_gen;

ARCHITECTURE v1 OF dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_22_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  en <= en_d;
  data_out_d <= data_out;
  we <= we_d;
  re <= re_d;
  addr <= addr_d;
  data_in <= data_in_d;
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_21_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;
USE mgc_hls.ram_sync_dualRW_be_pkg.ALL;


ENTITY dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_21_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    IS
  PORT(
    en : OUT STD_LOGIC;
    data_out : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
    data_in : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
    data_in_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    addr_d : IN STD_LOGIC_VECTOR (17 DOWNTO 0);
    re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    data_out_d : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
    en_d : IN STD_LOGIC
  );
END dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_21_384_40_9_0_1_1_0_0_1_1_40_384_2_gen;

ARCHITECTURE v1 OF dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_21_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  en <= en_d;
  data_out_d <= data_out;
  we <= we_d;
  re <= re_d;
  addr <= addr_d;
  data_in <= data_in_d;
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_20_384_8_9_0_1_1_0_0_1_1_8_384_2_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;
USE mgc_hls.ram_sync_dualRW_be_pkg.ALL;


ENTITY dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_20_384_8_9_0_1_1_0_0_1_1_8_384_2_gen
    IS
  PORT(
    en : OUT STD_LOGIC;
    data_out : IN STD_LOGIC_VECTOR (15 DOWNTO 0);
    we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
    data_in : OUT STD_LOGIC_VECTOR (15 DOWNTO 0);
    data_in_d : IN STD_LOGIC_VECTOR (15 DOWNTO 0);
    addr_d : IN STD_LOGIC_VECTOR (17 DOWNTO 0);
    re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    data_out_d : OUT STD_LOGIC_VECTOR (15 DOWNTO 0);
    en_d : IN STD_LOGIC
  );
END dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_20_384_8_9_0_1_1_0_0_1_1_8_384_2_gen;

ARCHITECTURE v1 OF dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_20_384_8_9_0_1_1_0_0_1_1_8_384_2_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  en <= en_d;
  data_out_d <= data_out;
  we <= we_d;
  re <= re_d;
  addr <= addr_d;
  data_in <= data_in_d;
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_19_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;
USE mgc_hls.ram_sync_dualRW_be_pkg.ALL;


ENTITY dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_19_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    IS
  PORT(
    en : OUT STD_LOGIC;
    data_out : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
    data_in : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
    data_in_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    addr_d : IN STD_LOGIC_VECTOR (17 DOWNTO 0);
    re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    data_out_d : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
    en_d : IN STD_LOGIC
  );
END dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_19_384_40_9_0_1_1_0_0_1_1_40_384_2_gen;

ARCHITECTURE v1 OF dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_19_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  en <= en_d;
  data_out_d <= data_out;
  we <= we_d;
  re <= re_d;
  addr <= addr_d;
  data_in <= data_in_d;
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_18_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;
USE mgc_hls.ram_sync_dualRW_be_pkg.ALL;


ENTITY dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_18_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    IS
  PORT(
    en : OUT STD_LOGIC;
    data_out : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
    data_in : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
    data_in_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    addr_d : IN STD_LOGIC_VECTOR (17 DOWNTO 0);
    re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    data_out_d : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
    en_d : IN STD_LOGIC
  );
END dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_18_384_40_9_0_1_1_0_0_1_1_40_384_2_gen;

ARCHITECTURE v1 OF dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_18_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  en <= en_d;
  data_out_d <= data_out;
  we <= we_d;
  re <= re_d;
  addr <= addr_d;
  data_in <= data_in_d;
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_17_48_40_6_0_1_1_0_0_1_1_40_48_2_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;
USE mgc_hls.ram_sync_dualRW_be_pkg.ALL;


ENTITY dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_17_48_40_6_0_1_1_0_0_1_1_40_48_2_gen
    IS
  PORT(
    en : OUT STD_LOGIC;
    data_out : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    addr : OUT STD_LOGIC_VECTOR (11 DOWNTO 0);
    data_in : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
    data_in_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    addr_d : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    data_out_d : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
    en_d : IN STD_LOGIC
  );
END dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_17_48_40_6_0_1_1_0_0_1_1_40_48_2_gen;

ARCHITECTURE v1 OF dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_17_48_40_6_0_1_1_0_0_1_1_40_48_2_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  en <= en_d;
  data_out_d <= data_out;
  we <= we_d;
  re <= re_d;
  addr <= addr_d;
  data_in <= data_in_d;
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_16_2304_40_12_0_1_1_0_0_1_1_40_2304_2_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;
USE mgc_hls.ram_sync_dualRW_be_pkg.ALL;


ENTITY dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_16_2304_40_12_0_1_1_0_0_1_1_40_2304_2_gen
    IS
  PORT(
    en : OUT STD_LOGIC;
    data_out : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    addr : OUT STD_LOGIC_VECTOR (23 DOWNTO 0);
    data_in : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
    data_in_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    addr_d : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    data_out_d : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
    en_d : IN STD_LOGIC
  );
END dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_16_2304_40_12_0_1_1_0_0_1_1_40_2304_2_gen;

ARCHITECTURE v1 OF dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_16_2304_40_12_0_1_1_0_0_1_1_40_2304_2_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  en <= en_d;
  data_out_d <= data_out;
  we <= we_d;
  re <= re_d;
  addr <= addr_d;
  data_in <= data_in_d;
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_15_2304_40_12_0_1_1_0_0_1_1_40_2304_2_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;
USE mgc_hls.ram_sync_dualRW_be_pkg.ALL;


ENTITY dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_15_2304_40_12_0_1_1_0_0_1_1_40_2304_2_gen
    IS
  PORT(
    en : OUT STD_LOGIC;
    data_out : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    addr : OUT STD_LOGIC_VECTOR (23 DOWNTO 0);
    data_in : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
    data_in_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    addr_d : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    data_out_d : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
    en_d : IN STD_LOGIC
  );
END dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_15_2304_40_12_0_1_1_0_0_1_1_40_2304_2_gen;

ARCHITECTURE v1 OF dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_15_2304_40_12_0_1_1_0_0_1_1_40_2304_2_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  en <= en_d;
  data_out_d <= data_out;
  we <= we_d;
  re <= re_d;
  addr <= addr_d;
  data_in <= data_in_d;
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_14_2304_40_12_0_1_1_0_0_1_1_40_2304_2_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;
USE mgc_hls.ram_sync_dualRW_be_pkg.ALL;


ENTITY dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_14_2304_40_12_0_1_1_0_0_1_1_40_2304_2_gen
    IS
  PORT(
    en : OUT STD_LOGIC;
    data_out : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    addr : OUT STD_LOGIC_VECTOR (23 DOWNTO 0);
    data_in : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
    data_in_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    addr_d : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
    re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    data_out_d : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
    en_d : IN STD_LOGIC
  );
END dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_14_2304_40_12_0_1_1_0_0_1_1_40_2304_2_gen;

ARCHITECTURE v1 OF dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_14_2304_40_12_0_1_1_0_0_1_1_40_2304_2_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  en <= en_d;
  data_out_d <= data_out;
  we <= we_d;
  re <= re_d;
  addr <= addr_d;
  data_in <= data_in_d;
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_13_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;
USE mgc_hls.ram_sync_dualRW_be_pkg.ALL;


ENTITY dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_13_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    IS
  PORT(
    en : OUT STD_LOGIC;
    data_out : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
    data_in : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
    data_in_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    addr_d : IN STD_LOGIC_VECTOR (17 DOWNTO 0);
    re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    data_out_d : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
    en_d : IN STD_LOGIC
  );
END dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_13_384_40_9_0_1_1_0_0_1_1_40_384_2_gen;

ARCHITECTURE v1 OF dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_13_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  en <= en_d;
  data_out_d <= data_out;
  we <= we_d;
  re <= re_d;
  addr <= addr_d;
  data_in <= data_in_d;
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_12_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;
USE mgc_hls.ram_sync_dualRW_be_pkg.ALL;


ENTITY dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_12_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    IS
  PORT(
    en : OUT STD_LOGIC;
    data_out : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
    data_in : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
    data_in_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    addr_d : IN STD_LOGIC_VECTOR (17 DOWNTO 0);
    re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    data_out_d : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
    en_d : IN STD_LOGIC
  );
END dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_12_384_40_9_0_1_1_0_0_1_1_40_384_2_gen;

ARCHITECTURE v1 OF dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_12_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  en <= en_d;
  data_out_d <= data_out;
  we <= we_d;
  re <= re_d;
  addr <= addr_d;
  data_in <= data_in_d;
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_11_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;
USE mgc_hls.ram_sync_dualRW_be_pkg.ALL;


ENTITY dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_11_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    IS
  PORT(
    en : OUT STD_LOGIC;
    data_out : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
    data_in : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
    data_in_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    addr_d : IN STD_LOGIC_VECTOR (17 DOWNTO 0);
    re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    data_out_d : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
    en_d : IN STD_LOGIC
  );
END dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_11_384_40_9_0_1_1_0_0_1_1_40_384_2_gen;

ARCHITECTURE v1 OF dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_11_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  en <= en_d;
  data_out_d <= data_out;
  we <= we_d;
  re <= re_d;
  addr <= addr_d;
  data_in <= data_in_d;
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_10_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;
USE mgc_hls.ram_sync_dualRW_be_pkg.ALL;


ENTITY dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_10_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    IS
  PORT(
    en : OUT STD_LOGIC;
    data_out : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
    data_in : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
    data_in_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    addr_d : IN STD_LOGIC_VECTOR (17 DOWNTO 0);
    re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    data_out_d : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
    en_d : IN STD_LOGIC
  );
END dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_10_384_40_9_0_1_1_0_0_1_1_40_384_2_gen;

ARCHITECTURE v1 OF dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_10_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  en <= en_d;
  data_out_d <= data_out;
  we <= we_d;
  re <= re_d;
  addr <= addr_d;
  data_in <= data_in_d;
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_9_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;
USE mgc_hls.ram_sync_dualRW_be_pkg.ALL;


ENTITY dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_9_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    IS
  PORT(
    en : OUT STD_LOGIC;
    data_out : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
    data_in : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
    data_in_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    addr_d : IN STD_LOGIC_VECTOR (17 DOWNTO 0);
    re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    data_out_d : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
    en_d : IN STD_LOGIC
  );
END dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_9_384_40_9_0_1_1_0_0_1_1_40_384_2_gen;

ARCHITECTURE v1 OF dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_9_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  en <= en_d;
  data_out_d <= data_out;
  we <= we_d;
  re <= re_d;
  addr <= addr_d;
  data_in <= data_in_d;
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_8_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;
USE mgc_hls.ram_sync_dualRW_be_pkg.ALL;


ENTITY dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_8_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    IS
  PORT(
    en : OUT STD_LOGIC;
    data_out : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
    data_in : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
    data_in_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    addr_d : IN STD_LOGIC_VECTOR (17 DOWNTO 0);
    re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    data_out_d : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
    en_d : IN STD_LOGIC
  );
END dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_8_384_40_9_0_1_1_0_0_1_1_40_384_2_gen;

ARCHITECTURE v1 OF dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_8_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  en <= en_d;
  data_out_d <= data_out;
  we <= we_d;
  re <= re_d;
  addr <= addr_d;
  data_in <= data_in_d;
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_7_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;
USE mgc_hls.ram_sync_dualRW_be_pkg.ALL;


ENTITY dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_7_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    IS
  PORT(
    en : OUT STD_LOGIC;
    data_out : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
    data_in : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
    data_in_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    addr_d : IN STD_LOGIC_VECTOR (17 DOWNTO 0);
    re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    data_out_d : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
    en_d : IN STD_LOGIC
  );
END dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_7_384_40_9_0_1_1_0_0_1_1_40_384_2_gen;

ARCHITECTURE v1 OF dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_7_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  en <= en_d;
  data_out_d <= data_out;
  we <= we_d;
  re <= re_d;
  addr <= addr_d;
  data_in <= data_in_d;
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_6_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;
USE mgc_hls.ram_sync_dualRW_be_pkg.ALL;


ENTITY dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_6_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    IS
  PORT(
    en : OUT STD_LOGIC;
    data_out : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
    data_in : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
    data_in_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    addr_d : IN STD_LOGIC_VECTOR (17 DOWNTO 0);
    re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    data_out_d : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
    en_d : IN STD_LOGIC
  );
END dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_6_384_40_9_0_1_1_0_0_1_1_40_384_2_gen;

ARCHITECTURE v1 OF dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_6_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  en <= en_d;
  data_out_d <= data_out;
  we <= we_d;
  re <= re_d;
  addr <= addr_d;
  data_in <= data_in_d;
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_5_384_8_9_0_1_1_0_0_1_1_8_384_2_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;
USE mgc_hls.ram_sync_dualRW_be_pkg.ALL;


ENTITY dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_5_384_8_9_0_1_1_0_0_1_1_8_384_2_gen
    IS
  PORT(
    en : OUT STD_LOGIC;
    data_out : IN STD_LOGIC_VECTOR (15 DOWNTO 0);
    we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
    data_in : OUT STD_LOGIC_VECTOR (15 DOWNTO 0);
    data_in_d : IN STD_LOGIC_VECTOR (15 DOWNTO 0);
    addr_d : IN STD_LOGIC_VECTOR (17 DOWNTO 0);
    re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    data_out_d : OUT STD_LOGIC_VECTOR (15 DOWNTO 0);
    en_d : IN STD_LOGIC
  );
END dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_5_384_8_9_0_1_1_0_0_1_1_8_384_2_gen;

ARCHITECTURE v1 OF dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_5_384_8_9_0_1_1_0_0_1_1_8_384_2_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  en <= en_d;
  data_out_d <= data_out;
  we <= we_d;
  re <= re_d;
  addr <= addr_d;
  data_in <= data_in_d;
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_4_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;
USE mgc_hls.ram_sync_dualRW_be_pkg.ALL;


ENTITY dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_4_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    IS
  PORT(
    en : OUT STD_LOGIC;
    data_out : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
    data_in : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
    data_in_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    addr_d : IN STD_LOGIC_VECTOR (17 DOWNTO 0);
    re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    data_out_d : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
    en_d : IN STD_LOGIC
  );
END dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_4_384_40_9_0_1_1_0_0_1_1_40_384_2_gen;

ARCHITECTURE v1 OF dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_4_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  en <= en_d;
  data_out_d <= data_out;
  we <= we_d;
  re <= re_d;
  addr <= addr_d;
  data_in <= data_in_d;
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_3_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;
USE mgc_hls.ram_sync_dualRW_be_pkg.ALL;


ENTITY dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_3_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    IS
  PORT(
    en : OUT STD_LOGIC;
    data_out : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
    data_in : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
    data_in_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    addr_d : IN STD_LOGIC_VECTOR (17 DOWNTO 0);
    re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
    data_out_d : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
    en_d : IN STD_LOGIC
  );
END dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_3_384_40_9_0_1_1_0_0_1_1_40_384_2_gen;

ARCHITECTURE v1 OF dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_3_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  en <= en_d;
  data_out_d <= data_out;
  we <= we_d;
  re <= re_d;
  addr <= addr_d;
  data_in <= data_in_d;
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    dut_core_core_fsm
--  FSM Module
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;
USE mgc_hls.ram_sync_dualRW_be_pkg.ALL;


ENTITY dut_core_core_fsm IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    input_rsc_en_d_1 : IN STD_LOGIC;
    fsm_output : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    for_for_C_1_tr0 : IN STD_LOGIC;
    attention_sqrt_for_C_10_tr0 : IN STD_LOGIC;
    RMS_NORM_LOOP_2_C_3_tr0 : IN STD_LOGIC;
    QUANTIZE_ACTIVATION_LOOP_4_C_7_tr0 : IN STD_LOGIC;
    QUANTIZE_ACTIVATION_LOOP_3_C_0_tr0 : IN STD_LOGIC;
    attention_5_1_384_384_8_48_q_proj_re_vinit_C_1_tr0 : IN STD_LOGIC;
    LINEAR_FORWARD_NO_MUL_LOOP_3_C_1_tr0 : IN STD_LOGIC;
    LINEAR_FORWARD_NO_MUL_LOOP_2_C_56_tr0 : IN STD_LOGIC;
    RESHAPE_2D_TO_3D_LOOP_3_C_2_tr0 : IN STD_LOGIC;
    RESHAPE_2D_TO_3D_LOOP_2_C_0_tr0 : IN STD_LOGIC;
    RESHAPE_2D_TO_3D_LOOP_3_2_C_3_tr0 : IN STD_LOGIC;
    RESHAPE_2D_TO_3D_LOOP_2_2_C_0_tr0 : IN STD_LOGIC;
    APPLY_ROTARY_POS_EMB_LOOP_6_C_2_tr0 : IN STD_LOGIC;
    APPLY_ROTARY_POS_EMB_LOOP_4_C_0_tr0 : IN STD_LOGIC;
    CACHE_UPDATE_LOOP_3_C_2_tr0 : IN STD_LOGIC;
    CACHE_UPDATE_LOOP_2_C_0_tr0 : IN STD_LOGIC;
    CACHE_UPDATE_LOOP_1_C_0_tr0 : IN STD_LOGIC;
    TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_2_tr0 : IN STD_LOGIC;
    TRANSPOSE_LAST_TWO_DIMS_LOOP_2_C_0_tr0 : IN STD_LOGIC;
    TRANSPOSE_LAST_TWO_DIMS_LOOP_1_C_0_tr0 : IN STD_LOGIC;
    GEMM_3D_FLOAT_LOOP_3_C_50_tr0 : IN STD_LOGIC;
    GEMM_3D_FLOAT_LOOP_1_C_0_tr0 : IN STD_LOGIC;
    SF_LOOP_3_C_3_tr0 : IN STD_LOGIC;
    SF_LOOP_1_C_0_tr0 : IN STD_LOGIC;
    SOFTMAX_LOOP_3_C_1_tr0 : IN STD_LOGIC;
    SOFTMAX_LOOP_4_C_5_tr0 : IN STD_LOGIC;
    SOFTMAX_LOOP_5_C_16_tr0 : IN STD_LOGIC;
    SOFTMAX_LOOP_1_C_2_tr0 : IN STD_LOGIC;
    GEMM_3D_FLOAT_LOOP_3_1_C_7_tr0 : IN STD_LOGIC;
    GEMM_3D_FLOAT_LOOP_1_1_C_0_tr0 : IN STD_LOGIC;
    ATTN_2D_LOOP_3_C_2_tr0 : IN STD_LOGIC;
    ATTN_2D_LOOP_2_C_0_tr0 : IN STD_LOGIC;
    RMS_NORM_LOOP_1_2_C_1_tr0 : IN STD_LOGIC;
    attention_sqrt_1_for_C_10_tr0 : IN STD_LOGIC;
    RMS_NORM_LOOP_2_2_C_3_tr0 : IN STD_LOGIC;
    QUANTIZE_ACTIVATION_LOOP_4_1_C_7_tr0 : IN STD_LOGIC;
    QUANTIZE_ACTIVATION_LOOP_3_1_C_0_tr0 : IN STD_LOGIC;
    output_vinit_C_1_tr0 : IN STD_LOGIC;
    LINEAR_FORWARD_NO_MUL_LOOP_3_3_C_0_tr0 : IN STD_LOGIC;
    LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_29_tr0 : IN STD_LOGIC;
    for_1_for_C_2_tr0 : IN STD_LOGIC
  );
END dut_core_core_fsm;

ARCHITECTURE v1 OF dut_core_core_fsm IS
  -- FSM State Type Declaration for dut_core_core_fsm_1
  TYPE dut_core_core_fsm_1_ST IS (main_C_0, for_for_C_0, for_for_C_1, main_C_1, main_C_2,
      attention_sqrt_for_C_0, attention_sqrt_for_C_1, attention_sqrt_for_C_2, attention_sqrt_for_C_3,
      attention_sqrt_for_C_4, attention_sqrt_for_C_5, attention_sqrt_for_C_6, attention_sqrt_for_C_7,
      attention_sqrt_for_C_8, attention_sqrt_for_C_9, attention_sqrt_for_C_10, main_C_3,
      main_C_4, main_C_5, main_C_6, main_C_7, main_C_8, main_C_9, main_C_10, main_C_11,
      main_C_12, main_C_13, main_C_14, main_C_15, main_C_16, main_C_17, main_C_18,
      main_C_19, main_C_20, main_C_21, main_C_22, main_C_23, main_C_24, main_C_25,
      main_C_26, main_C_27, main_C_28, main_C_29, RMS_NORM_LOOP_2_C_0, RMS_NORM_LOOP_2_C_1,
      RMS_NORM_LOOP_2_C_2, RMS_NORM_LOOP_2_C_3, main_C_30, main_C_31, main_C_32,
      main_C_33, main_C_34, main_C_35, main_C_36, main_C_37, main_C_38, main_C_39,
      main_C_40, QUANTIZE_ACTIVATION_LOOP_4_C_0, QUANTIZE_ACTIVATION_LOOP_4_C_1,
      QUANTIZE_ACTIVATION_LOOP_4_C_2, QUANTIZE_ACTIVATION_LOOP_4_C_3, QUANTIZE_ACTIVATION_LOOP_4_C_4,
      QUANTIZE_ACTIVATION_LOOP_4_C_5, QUANTIZE_ACTIVATION_LOOP_4_C_6, QUANTIZE_ACTIVATION_LOOP_4_C_7,
      QUANTIZE_ACTIVATION_LOOP_3_C_0, attention_5_1_384_384_8_48_q_proj_re_vinit_C_0,
      attention_5_1_384_384_8_48_q_proj_re_vinit_C_1, LINEAR_FORWARD_NO_MUL_LOOP_3_C_0,
      LINEAR_FORWARD_NO_MUL_LOOP_3_C_1, LINEAR_FORWARD_NO_MUL_LOOP_3_C_2, LINEAR_FORWARD_NO_MUL_LOOP_2_C_0,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_1, LINEAR_FORWARD_NO_MUL_LOOP_2_C_2, LINEAR_FORWARD_NO_MUL_LOOP_2_C_3,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_4, LINEAR_FORWARD_NO_MUL_LOOP_2_C_5, LINEAR_FORWARD_NO_MUL_LOOP_2_C_6,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_7, LINEAR_FORWARD_NO_MUL_LOOP_2_C_8, LINEAR_FORWARD_NO_MUL_LOOP_2_C_9,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_10, LINEAR_FORWARD_NO_MUL_LOOP_2_C_11, LINEAR_FORWARD_NO_MUL_LOOP_2_C_12,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_13, LINEAR_FORWARD_NO_MUL_LOOP_2_C_14, LINEAR_FORWARD_NO_MUL_LOOP_2_C_15,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_16, LINEAR_FORWARD_NO_MUL_LOOP_2_C_17, LINEAR_FORWARD_NO_MUL_LOOP_2_C_18,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_19, LINEAR_FORWARD_NO_MUL_LOOP_2_C_20, LINEAR_FORWARD_NO_MUL_LOOP_2_C_21,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_22, LINEAR_FORWARD_NO_MUL_LOOP_2_C_23, LINEAR_FORWARD_NO_MUL_LOOP_2_C_24,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_25, LINEAR_FORWARD_NO_MUL_LOOP_2_C_26, LINEAR_FORWARD_NO_MUL_LOOP_2_C_27,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_28, LINEAR_FORWARD_NO_MUL_LOOP_2_C_29, LINEAR_FORWARD_NO_MUL_LOOP_2_C_30,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_31, LINEAR_FORWARD_NO_MUL_LOOP_2_C_32, LINEAR_FORWARD_NO_MUL_LOOP_2_C_33,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_34, LINEAR_FORWARD_NO_MUL_LOOP_2_C_35, LINEAR_FORWARD_NO_MUL_LOOP_2_C_36,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_37, LINEAR_FORWARD_NO_MUL_LOOP_2_C_38, LINEAR_FORWARD_NO_MUL_LOOP_2_C_39,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_40, LINEAR_FORWARD_NO_MUL_LOOP_2_C_41, LINEAR_FORWARD_NO_MUL_LOOP_2_C_42,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_43, LINEAR_FORWARD_NO_MUL_LOOP_2_C_44, LINEAR_FORWARD_NO_MUL_LOOP_2_C_45,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_46, LINEAR_FORWARD_NO_MUL_LOOP_2_C_47, LINEAR_FORWARD_NO_MUL_LOOP_2_C_48,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_49, LINEAR_FORWARD_NO_MUL_LOOP_2_C_50, LINEAR_FORWARD_NO_MUL_LOOP_2_C_51,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_52, LINEAR_FORWARD_NO_MUL_LOOP_2_C_53, LINEAR_FORWARD_NO_MUL_LOOP_2_C_54,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_55, LINEAR_FORWARD_NO_MUL_LOOP_2_C_56, RESHAPE_2D_TO_3D_LOOP_3_C_0,
      RESHAPE_2D_TO_3D_LOOP_3_C_1, RESHAPE_2D_TO_3D_LOOP_3_C_2, RESHAPE_2D_TO_3D_LOOP_2_C_0,
      RESHAPE_2D_TO_3D_LOOP_3_2_C_0, RESHAPE_2D_TO_3D_LOOP_3_2_C_1, RESHAPE_2D_TO_3D_LOOP_3_2_C_2,
      RESHAPE_2D_TO_3D_LOOP_3_2_C_3, RESHAPE_2D_TO_3D_LOOP_2_2_C_0, APPLY_ROTARY_POS_EMB_LOOP_6_C_0,
      APPLY_ROTARY_POS_EMB_LOOP_6_C_1, APPLY_ROTARY_POS_EMB_LOOP_6_C_2, APPLY_ROTARY_POS_EMB_LOOP_4_C_0,
      CACHE_UPDATE_LOOP_3_C_0, CACHE_UPDATE_LOOP_3_C_1, CACHE_UPDATE_LOOP_3_C_2,
      CACHE_UPDATE_LOOP_2_C_0, CACHE_UPDATE_LOOP_1_C_0, TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_0,
      TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_1, TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_2, TRANSPOSE_LAST_TWO_DIMS_LOOP_2_C_0,
      TRANSPOSE_LAST_TWO_DIMS_LOOP_1_C_0, GEMM_3D_FLOAT_LOOP_3_C_0, GEMM_3D_FLOAT_LOOP_3_C_1,
      GEMM_3D_FLOAT_LOOP_3_C_2, GEMM_3D_FLOAT_LOOP_3_C_3, GEMM_3D_FLOAT_LOOP_3_C_4,
      GEMM_3D_FLOAT_LOOP_3_C_5, GEMM_3D_FLOAT_LOOP_3_C_6, GEMM_3D_FLOAT_LOOP_3_C_7,
      GEMM_3D_FLOAT_LOOP_3_C_8, GEMM_3D_FLOAT_LOOP_3_C_9, GEMM_3D_FLOAT_LOOP_3_C_10,
      GEMM_3D_FLOAT_LOOP_3_C_11, GEMM_3D_FLOAT_LOOP_3_C_12, GEMM_3D_FLOAT_LOOP_3_C_13,
      GEMM_3D_FLOAT_LOOP_3_C_14, GEMM_3D_FLOAT_LOOP_3_C_15, GEMM_3D_FLOAT_LOOP_3_C_16,
      GEMM_3D_FLOAT_LOOP_3_C_17, GEMM_3D_FLOAT_LOOP_3_C_18, GEMM_3D_FLOAT_LOOP_3_C_19,
      GEMM_3D_FLOAT_LOOP_3_C_20, GEMM_3D_FLOAT_LOOP_3_C_21, GEMM_3D_FLOAT_LOOP_3_C_22,
      GEMM_3D_FLOAT_LOOP_3_C_23, GEMM_3D_FLOAT_LOOP_3_C_24, GEMM_3D_FLOAT_LOOP_3_C_25,
      GEMM_3D_FLOAT_LOOP_3_C_26, GEMM_3D_FLOAT_LOOP_3_C_27, GEMM_3D_FLOAT_LOOP_3_C_28,
      GEMM_3D_FLOAT_LOOP_3_C_29, GEMM_3D_FLOAT_LOOP_3_C_30, GEMM_3D_FLOAT_LOOP_3_C_31,
      GEMM_3D_FLOAT_LOOP_3_C_32, GEMM_3D_FLOAT_LOOP_3_C_33, GEMM_3D_FLOAT_LOOP_3_C_34,
      GEMM_3D_FLOAT_LOOP_3_C_35, GEMM_3D_FLOAT_LOOP_3_C_36, GEMM_3D_FLOAT_LOOP_3_C_37,
      GEMM_3D_FLOAT_LOOP_3_C_38, GEMM_3D_FLOAT_LOOP_3_C_39, GEMM_3D_FLOAT_LOOP_3_C_40,
      GEMM_3D_FLOAT_LOOP_3_C_41, GEMM_3D_FLOAT_LOOP_3_C_42, GEMM_3D_FLOAT_LOOP_3_C_43,
      GEMM_3D_FLOAT_LOOP_3_C_44, GEMM_3D_FLOAT_LOOP_3_C_45, GEMM_3D_FLOAT_LOOP_3_C_46,
      GEMM_3D_FLOAT_LOOP_3_C_47, GEMM_3D_FLOAT_LOOP_3_C_48, GEMM_3D_FLOAT_LOOP_3_C_49,
      GEMM_3D_FLOAT_LOOP_3_C_50, GEMM_3D_FLOAT_LOOP_1_C_0, SF_LOOP_3_C_0, SF_LOOP_3_C_1,
      SF_LOOP_3_C_2, SF_LOOP_3_C_3, SF_LOOP_1_C_0, SOFTMAX_LOOP_1_C_0, SOFTMAX_LOOP_1_C_1,
      SOFTMAX_LOOP_3_C_0, SOFTMAX_LOOP_3_C_1, SOFTMAX_LOOP_4_C_0, SOFTMAX_LOOP_4_C_1,
      SOFTMAX_LOOP_4_C_2, SOFTMAX_LOOP_4_C_3, SOFTMAX_LOOP_4_C_4, SOFTMAX_LOOP_4_C_5,
      SOFTMAX_LOOP_5_C_0, SOFTMAX_LOOP_5_C_1, SOFTMAX_LOOP_5_C_2, SOFTMAX_LOOP_5_C_3,
      SOFTMAX_LOOP_5_C_4, SOFTMAX_LOOP_5_C_5, SOFTMAX_LOOP_5_C_6, SOFTMAX_LOOP_5_C_7,
      SOFTMAX_LOOP_5_C_8, SOFTMAX_LOOP_5_C_9, SOFTMAX_LOOP_5_C_10, SOFTMAX_LOOP_5_C_11,
      SOFTMAX_LOOP_5_C_12, SOFTMAX_LOOP_5_C_13, SOFTMAX_LOOP_5_C_14, SOFTMAX_LOOP_5_C_15,
      SOFTMAX_LOOP_5_C_16, SOFTMAX_LOOP_1_C_2, GEMM_3D_FLOAT_LOOP_3_1_C_0, GEMM_3D_FLOAT_LOOP_3_1_C_1,
      GEMM_3D_FLOAT_LOOP_3_1_C_2, GEMM_3D_FLOAT_LOOP_3_1_C_3, GEMM_3D_FLOAT_LOOP_3_1_C_4,
      GEMM_3D_FLOAT_LOOP_3_1_C_5, GEMM_3D_FLOAT_LOOP_3_1_C_6, GEMM_3D_FLOAT_LOOP_3_1_C_7,
      GEMM_3D_FLOAT_LOOP_1_1_C_0, ATTN_2D_LOOP_3_C_0, ATTN_2D_LOOP_3_C_1, ATTN_2D_LOOP_3_C_2,
      ATTN_2D_LOOP_2_C_0, RMS_NORM_LOOP_1_2_C_0, RMS_NORM_LOOP_1_2_C_1, main_C_41,
      main_C_42, main_C_43, attention_sqrt_1_for_C_0, attention_sqrt_1_for_C_1, attention_sqrt_1_for_C_2,
      attention_sqrt_1_for_C_3, attention_sqrt_1_for_C_4, attention_sqrt_1_for_C_5,
      attention_sqrt_1_for_C_6, attention_sqrt_1_for_C_7, attention_sqrt_1_for_C_8,
      attention_sqrt_1_for_C_9, attention_sqrt_1_for_C_10, main_C_44, main_C_45,
      main_C_46, main_C_47, main_C_48, main_C_49, main_C_50, main_C_51, main_C_52,
      main_C_53, main_C_54, main_C_55, main_C_56, main_C_57, RMS_NORM_LOOP_2_2_C_0,
      RMS_NORM_LOOP_2_2_C_1, RMS_NORM_LOOP_2_2_C_2, RMS_NORM_LOOP_2_2_C_3, main_C_58,
      main_C_59, main_C_60, main_C_61, main_C_62, main_C_63, main_C_64, main_C_65,
      main_C_66, main_C_67, main_C_68, main_C_69, main_C_70, main_C_71, main_C_72,
      main_C_73, main_C_74, main_C_75, main_C_76, main_C_77, main_C_78, main_C_79,
      main_C_80, main_C_81, main_C_82, main_C_83, main_C_84, main_C_85, QUANTIZE_ACTIVATION_LOOP_4_1_C_0,
      QUANTIZE_ACTIVATION_LOOP_4_1_C_1, QUANTIZE_ACTIVATION_LOOP_4_1_C_2, QUANTIZE_ACTIVATION_LOOP_4_1_C_3,
      QUANTIZE_ACTIVATION_LOOP_4_1_C_4, QUANTIZE_ACTIVATION_LOOP_4_1_C_5, QUANTIZE_ACTIVATION_LOOP_4_1_C_6,
      QUANTIZE_ACTIVATION_LOOP_4_1_C_7, QUANTIZE_ACTIVATION_LOOP_3_1_C_0, output_vinit_C_0,
      output_vinit_C_1, LINEAR_FORWARD_NO_MUL_LOOP_3_3_C_0, LINEAR_FORWARD_NO_MUL_LOOP_3_3_C_1,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_0, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_1, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_2,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_3, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_4, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_5,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_6, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_7, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_8,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_9, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_10, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_11,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_12, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_13, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_14,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_15, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_16, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_17,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_18, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_19, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_20,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_21, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_22, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_23,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_24, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_25, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_26,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_27, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_28, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_29,
      for_1_for_C_0, for_1_for_C_1, for_1_for_C_2);

  SIGNAL state_var : dut_core_core_fsm_1_ST;
  SIGNAL state_var_NS : dut_core_core_fsm_1_ST;

BEGIN
  dut_core_core_fsm_1 : PROCESS (for_for_C_1_tr0, attention_sqrt_for_C_10_tr0, RMS_NORM_LOOP_2_C_3_tr0,
      QUANTIZE_ACTIVATION_LOOP_4_C_7_tr0, QUANTIZE_ACTIVATION_LOOP_3_C_0_tr0, attention_5_1_384_384_8_48_q_proj_re_vinit_C_1_tr0,
      LINEAR_FORWARD_NO_MUL_LOOP_3_C_1_tr0, LINEAR_FORWARD_NO_MUL_LOOP_2_C_56_tr0,
      RESHAPE_2D_TO_3D_LOOP_3_C_2_tr0, RESHAPE_2D_TO_3D_LOOP_2_C_0_tr0, RESHAPE_2D_TO_3D_LOOP_3_2_C_3_tr0,
      RESHAPE_2D_TO_3D_LOOP_2_2_C_0_tr0, APPLY_ROTARY_POS_EMB_LOOP_6_C_2_tr0, APPLY_ROTARY_POS_EMB_LOOP_4_C_0_tr0,
      CACHE_UPDATE_LOOP_3_C_2_tr0, CACHE_UPDATE_LOOP_2_C_0_tr0, CACHE_UPDATE_LOOP_1_C_0_tr0,
      TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_2_tr0, TRANSPOSE_LAST_TWO_DIMS_LOOP_2_C_0_tr0,
      TRANSPOSE_LAST_TWO_DIMS_LOOP_1_C_0_tr0, GEMM_3D_FLOAT_LOOP_3_C_50_tr0, GEMM_3D_FLOAT_LOOP_1_C_0_tr0,
      SF_LOOP_3_C_3_tr0, SF_LOOP_1_C_0_tr0, SOFTMAX_LOOP_3_C_1_tr0, SOFTMAX_LOOP_4_C_5_tr0,
      SOFTMAX_LOOP_5_C_16_tr0, SOFTMAX_LOOP_1_C_2_tr0, GEMM_3D_FLOAT_LOOP_3_1_C_7_tr0,
      GEMM_3D_FLOAT_LOOP_1_1_C_0_tr0, ATTN_2D_LOOP_3_C_2_tr0, ATTN_2D_LOOP_2_C_0_tr0,
      RMS_NORM_LOOP_1_2_C_1_tr0, attention_sqrt_1_for_C_10_tr0, RMS_NORM_LOOP_2_2_C_3_tr0,
      QUANTIZE_ACTIVATION_LOOP_4_1_C_7_tr0, QUANTIZE_ACTIVATION_LOOP_3_1_C_0_tr0,
      output_vinit_C_1_tr0, LINEAR_FORWARD_NO_MUL_LOOP_3_3_C_0_tr0, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_29_tr0,
      for_1_for_C_2_tr0, state_var)
  BEGIN
    CASE state_var IS
      WHEN for_for_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000001");
        state_var_NS <= for_for_C_1;
      WHEN for_for_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000010");
        IF ( for_for_C_1_tr0 = '1' ) THEN
          state_var_NS <= main_C_1;
        ELSE
          state_var_NS <= for_for_C_0;
        END IF;
      WHEN main_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000011");
        state_var_NS <= main_C_2;
      WHEN main_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000100");
        state_var_NS <= attention_sqrt_for_C_0;
      WHEN attention_sqrt_for_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000101");
        state_var_NS <= attention_sqrt_for_C_1;
      WHEN attention_sqrt_for_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000110");
        state_var_NS <= attention_sqrt_for_C_2;
      WHEN attention_sqrt_for_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000111");
        state_var_NS <= attention_sqrt_for_C_3;
      WHEN attention_sqrt_for_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000001000");
        state_var_NS <= attention_sqrt_for_C_4;
      WHEN attention_sqrt_for_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000001001");
        state_var_NS <= attention_sqrt_for_C_5;
      WHEN attention_sqrt_for_C_5 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000001010");
        state_var_NS <= attention_sqrt_for_C_6;
      WHEN attention_sqrt_for_C_6 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000001011");
        state_var_NS <= attention_sqrt_for_C_7;
      WHEN attention_sqrt_for_C_7 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000001100");
        state_var_NS <= attention_sqrt_for_C_8;
      WHEN attention_sqrt_for_C_8 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000001101");
        state_var_NS <= attention_sqrt_for_C_9;
      WHEN attention_sqrt_for_C_9 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000001110");
        state_var_NS <= attention_sqrt_for_C_10;
      WHEN attention_sqrt_for_C_10 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000001111");
        IF ( attention_sqrt_for_C_10_tr0 = '1' ) THEN
          state_var_NS <= main_C_3;
        ELSE
          state_var_NS <= attention_sqrt_for_C_0;
        END IF;
      WHEN main_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000010000");
        state_var_NS <= main_C_4;
      WHEN main_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000010001");
        state_var_NS <= main_C_5;
      WHEN main_C_5 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000010010");
        state_var_NS <= main_C_6;
      WHEN main_C_6 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000010011");
        state_var_NS <= main_C_7;
      WHEN main_C_7 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000010100");
        state_var_NS <= main_C_8;
      WHEN main_C_8 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000010101");
        state_var_NS <= main_C_9;
      WHEN main_C_9 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000010110");
        state_var_NS <= main_C_10;
      WHEN main_C_10 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000010111");
        state_var_NS <= main_C_11;
      WHEN main_C_11 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000011000");
        state_var_NS <= main_C_12;
      WHEN main_C_12 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000011001");
        state_var_NS <= main_C_13;
      WHEN main_C_13 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000011010");
        state_var_NS <= main_C_14;
      WHEN main_C_14 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000011011");
        state_var_NS <= main_C_15;
      WHEN main_C_15 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000011100");
        state_var_NS <= main_C_16;
      WHEN main_C_16 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000011101");
        state_var_NS <= main_C_17;
      WHEN main_C_17 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000011110");
        state_var_NS <= main_C_18;
      WHEN main_C_18 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000011111");
        state_var_NS <= main_C_19;
      WHEN main_C_19 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000100000");
        state_var_NS <= main_C_20;
      WHEN main_C_20 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000100001");
        state_var_NS <= main_C_21;
      WHEN main_C_21 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000100010");
        state_var_NS <= main_C_22;
      WHEN main_C_22 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000100011");
        state_var_NS <= main_C_23;
      WHEN main_C_23 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000100100");
        state_var_NS <= main_C_24;
      WHEN main_C_24 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000100101");
        state_var_NS <= main_C_25;
      WHEN main_C_25 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000100110");
        state_var_NS <= main_C_26;
      WHEN main_C_26 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000100111");
        state_var_NS <= main_C_27;
      WHEN main_C_27 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000101000");
        state_var_NS <= main_C_28;
      WHEN main_C_28 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000101001");
        state_var_NS <= main_C_29;
      WHEN main_C_29 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000101010");
        state_var_NS <= RMS_NORM_LOOP_2_C_0;
      WHEN RMS_NORM_LOOP_2_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000101011");
        state_var_NS <= RMS_NORM_LOOP_2_C_1;
      WHEN RMS_NORM_LOOP_2_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000101100");
        state_var_NS <= RMS_NORM_LOOP_2_C_2;
      WHEN RMS_NORM_LOOP_2_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000101101");
        state_var_NS <= RMS_NORM_LOOP_2_C_3;
      WHEN RMS_NORM_LOOP_2_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000101110");
        IF ( RMS_NORM_LOOP_2_C_3_tr0 = '1' ) THEN
          state_var_NS <= main_C_30;
        ELSE
          state_var_NS <= RMS_NORM_LOOP_2_C_0;
        END IF;
      WHEN main_C_30 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000101111");
        state_var_NS <= main_C_31;
      WHEN main_C_31 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000110000");
        state_var_NS <= main_C_32;
      WHEN main_C_32 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000110001");
        state_var_NS <= main_C_33;
      WHEN main_C_33 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000110010");
        state_var_NS <= main_C_34;
      WHEN main_C_34 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000110011");
        state_var_NS <= main_C_35;
      WHEN main_C_35 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000110100");
        state_var_NS <= main_C_36;
      WHEN main_C_36 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000110101");
        state_var_NS <= main_C_37;
      WHEN main_C_37 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000110110");
        state_var_NS <= main_C_38;
      WHEN main_C_38 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000110111");
        state_var_NS <= main_C_39;
      WHEN main_C_39 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000111000");
        state_var_NS <= main_C_40;
      WHEN main_C_40 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000111001");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_4_C_0;
      WHEN QUANTIZE_ACTIVATION_LOOP_4_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000111010");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_4_C_1;
      WHEN QUANTIZE_ACTIVATION_LOOP_4_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000111011");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_4_C_2;
      WHEN QUANTIZE_ACTIVATION_LOOP_4_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000111100");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_4_C_3;
      WHEN QUANTIZE_ACTIVATION_LOOP_4_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000111101");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_4_C_4;
      WHEN QUANTIZE_ACTIVATION_LOOP_4_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000111110");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_4_C_5;
      WHEN QUANTIZE_ACTIVATION_LOOP_4_C_5 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000111111");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_4_C_6;
      WHEN QUANTIZE_ACTIVATION_LOOP_4_C_6 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001000000");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_4_C_7;
      WHEN QUANTIZE_ACTIVATION_LOOP_4_C_7 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001000001");
        IF ( QUANTIZE_ACTIVATION_LOOP_4_C_7_tr0 = '1' ) THEN
          state_var_NS <= QUANTIZE_ACTIVATION_LOOP_3_C_0;
        ELSE
          state_var_NS <= QUANTIZE_ACTIVATION_LOOP_4_C_0;
        END IF;
      WHEN QUANTIZE_ACTIVATION_LOOP_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001000010");
        IF ( QUANTIZE_ACTIVATION_LOOP_3_C_0_tr0 = '1' ) THEN
          state_var_NS <= attention_5_1_384_384_8_48_q_proj_re_vinit_C_0;
        ELSE
          state_var_NS <= QUANTIZE_ACTIVATION_LOOP_4_C_0;
        END IF;
      WHEN attention_5_1_384_384_8_48_q_proj_re_vinit_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001000011");
        state_var_NS <= attention_5_1_384_384_8_48_q_proj_re_vinit_C_1;
      WHEN attention_5_1_384_384_8_48_q_proj_re_vinit_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001000100");
        IF ( attention_5_1_384_384_8_48_q_proj_re_vinit_C_1_tr0 = '1' ) THEN
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_3_C_0;
        ELSE
          state_var_NS <= attention_5_1_384_384_8_48_q_proj_re_vinit_C_0;
        END IF;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001000101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_3_C_1;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_3_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001000110");
        IF ( LINEAR_FORWARD_NO_MUL_LOOP_3_C_1_tr0 = '1' ) THEN
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_0;
        ELSE
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_3_C_2;
        END IF;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_3_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001000111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_3_C_0;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001001000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_1;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001001001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_2;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001001010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_3;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001001011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_4;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001001100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_5;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_5 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001001101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_6;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_6 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001001110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_7;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_7 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001001111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_8;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_8 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001010000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_9;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_9 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001010001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_10;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_10 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001010010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_11;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_11 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001010011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_12;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_12 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001010100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_13;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_13 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001010101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_14;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_14 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001010110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_15;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_15 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001010111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_16;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_16 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001011000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_17;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_17 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001011001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_18;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_18 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001011010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_19;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_19 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001011011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_20;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_20 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001011100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_21;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_21 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001011101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_22;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_22 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001011110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_23;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_23 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001011111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_24;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_24 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001100000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_25;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_25 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001100001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_26;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_26 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001100010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_27;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_27 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001100011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_28;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_28 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001100100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_29;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_29 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001100101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_30;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_30 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001100110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_31;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_31 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001100111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_32;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_32 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001101000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_33;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_33 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001101001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_34;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_34 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001101010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_35;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_35 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001101011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_36;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_36 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001101100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_37;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_37 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001101101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_38;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_38 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001101110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_39;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_39 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001101111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_40;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_40 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001110000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_41;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_41 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001110001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_42;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_42 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001110010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_43;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_43 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001110011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_44;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_44 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001110100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_45;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_45 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001110101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_46;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_46 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001110110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_47;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_47 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001110111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_48;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_48 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001111000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_49;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_49 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001111001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_50;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_50 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001111010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_51;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_51 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001111011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_52;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_52 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001111100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_53;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_53 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001111101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_54;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_54 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001111110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_55;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_55 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001111111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_56;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_56 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010000000");
        IF ( LINEAR_FORWARD_NO_MUL_LOOP_2_C_56_tr0 = '1' ) THEN
          state_var_NS <= RESHAPE_2D_TO_3D_LOOP_3_C_0;
        ELSE
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_3_C_0;
        END IF;
      WHEN RESHAPE_2D_TO_3D_LOOP_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010000001");
        state_var_NS <= RESHAPE_2D_TO_3D_LOOP_3_C_1;
      WHEN RESHAPE_2D_TO_3D_LOOP_3_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010000010");
        state_var_NS <= RESHAPE_2D_TO_3D_LOOP_3_C_2;
      WHEN RESHAPE_2D_TO_3D_LOOP_3_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010000011");
        IF ( RESHAPE_2D_TO_3D_LOOP_3_C_2_tr0 = '1' ) THEN
          state_var_NS <= RESHAPE_2D_TO_3D_LOOP_2_C_0;
        ELSE
          state_var_NS <= RESHAPE_2D_TO_3D_LOOP_3_C_0;
        END IF;
      WHEN RESHAPE_2D_TO_3D_LOOP_2_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010000100");
        IF ( RESHAPE_2D_TO_3D_LOOP_2_C_0_tr0 = '1' ) THEN
          state_var_NS <= RESHAPE_2D_TO_3D_LOOP_3_2_C_0;
        ELSE
          state_var_NS <= RESHAPE_2D_TO_3D_LOOP_3_C_0;
        END IF;
      WHEN RESHAPE_2D_TO_3D_LOOP_3_2_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010000101");
        state_var_NS <= RESHAPE_2D_TO_3D_LOOP_3_2_C_1;
      WHEN RESHAPE_2D_TO_3D_LOOP_3_2_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010000110");
        state_var_NS <= RESHAPE_2D_TO_3D_LOOP_3_2_C_2;
      WHEN RESHAPE_2D_TO_3D_LOOP_3_2_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010000111");
        state_var_NS <= RESHAPE_2D_TO_3D_LOOP_3_2_C_3;
      WHEN RESHAPE_2D_TO_3D_LOOP_3_2_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010001000");
        IF ( RESHAPE_2D_TO_3D_LOOP_3_2_C_3_tr0 = '1' ) THEN
          state_var_NS <= RESHAPE_2D_TO_3D_LOOP_2_2_C_0;
        ELSE
          state_var_NS <= RESHAPE_2D_TO_3D_LOOP_3_2_C_0;
        END IF;
      WHEN RESHAPE_2D_TO_3D_LOOP_2_2_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010001001");
        IF ( RESHAPE_2D_TO_3D_LOOP_2_2_C_0_tr0 = '1' ) THEN
          state_var_NS <= APPLY_ROTARY_POS_EMB_LOOP_6_C_0;
        ELSE
          state_var_NS <= RESHAPE_2D_TO_3D_LOOP_3_2_C_0;
        END IF;
      WHEN APPLY_ROTARY_POS_EMB_LOOP_6_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010001010");
        state_var_NS <= APPLY_ROTARY_POS_EMB_LOOP_6_C_1;
      WHEN APPLY_ROTARY_POS_EMB_LOOP_6_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010001011");
        state_var_NS <= APPLY_ROTARY_POS_EMB_LOOP_6_C_2;
      WHEN APPLY_ROTARY_POS_EMB_LOOP_6_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010001100");
        IF ( APPLY_ROTARY_POS_EMB_LOOP_6_C_2_tr0 = '1' ) THEN
          state_var_NS <= APPLY_ROTARY_POS_EMB_LOOP_4_C_0;
        ELSE
          state_var_NS <= APPLY_ROTARY_POS_EMB_LOOP_6_C_0;
        END IF;
      WHEN APPLY_ROTARY_POS_EMB_LOOP_4_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010001101");
        IF ( APPLY_ROTARY_POS_EMB_LOOP_4_C_0_tr0 = '1' ) THEN
          state_var_NS <= CACHE_UPDATE_LOOP_3_C_0;
        ELSE
          state_var_NS <= APPLY_ROTARY_POS_EMB_LOOP_6_C_0;
        END IF;
      WHEN CACHE_UPDATE_LOOP_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010001110");
        state_var_NS <= CACHE_UPDATE_LOOP_3_C_1;
      WHEN CACHE_UPDATE_LOOP_3_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010001111");
        state_var_NS <= CACHE_UPDATE_LOOP_3_C_2;
      WHEN CACHE_UPDATE_LOOP_3_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010010000");
        IF ( CACHE_UPDATE_LOOP_3_C_2_tr0 = '1' ) THEN
          state_var_NS <= CACHE_UPDATE_LOOP_2_C_0;
        ELSE
          state_var_NS <= CACHE_UPDATE_LOOP_3_C_0;
        END IF;
      WHEN CACHE_UPDATE_LOOP_2_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010010001");
        IF ( CACHE_UPDATE_LOOP_2_C_0_tr0 = '1' ) THEN
          state_var_NS <= CACHE_UPDATE_LOOP_1_C_0;
        ELSE
          state_var_NS <= CACHE_UPDATE_LOOP_3_C_0;
        END IF;
      WHEN CACHE_UPDATE_LOOP_1_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010010010");
        IF ( CACHE_UPDATE_LOOP_1_C_0_tr0 = '1' ) THEN
          state_var_NS <= TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_0;
        ELSE
          state_var_NS <= CACHE_UPDATE_LOOP_3_C_0;
        END IF;
      WHEN TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010010011");
        state_var_NS <= TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_1;
      WHEN TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010010100");
        state_var_NS <= TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_2;
      WHEN TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010010101");
        IF ( TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_2_tr0 = '1' ) THEN
          state_var_NS <= TRANSPOSE_LAST_TWO_DIMS_LOOP_2_C_0;
        ELSE
          state_var_NS <= TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_0;
        END IF;
      WHEN TRANSPOSE_LAST_TWO_DIMS_LOOP_2_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010010110");
        IF ( TRANSPOSE_LAST_TWO_DIMS_LOOP_2_C_0_tr0 = '1' ) THEN
          state_var_NS <= TRANSPOSE_LAST_TWO_DIMS_LOOP_1_C_0;
        ELSE
          state_var_NS <= TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_0;
        END IF;
      WHEN TRANSPOSE_LAST_TWO_DIMS_LOOP_1_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010010111");
        IF ( TRANSPOSE_LAST_TWO_DIMS_LOOP_1_C_0_tr0 = '1' ) THEN
          state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_0;
        ELSE
          state_var_NS <= TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_0;
        END IF;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010011000");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_1;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010011001");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_2;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010011010");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_3;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010011011");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_4;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010011100");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_5;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_5 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010011101");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_6;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_6 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010011110");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_7;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_7 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010011111");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_8;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_8 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010100000");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_9;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_9 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010100001");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_10;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_10 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010100010");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_11;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_11 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010100011");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_12;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_12 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010100100");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_13;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_13 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010100101");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_14;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_14 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010100110");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_15;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_15 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010100111");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_16;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_16 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010101000");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_17;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_17 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010101001");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_18;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_18 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010101010");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_19;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_19 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010101011");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_20;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_20 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010101100");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_21;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_21 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010101101");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_22;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_22 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010101110");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_23;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_23 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010101111");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_24;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_24 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010110000");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_25;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_25 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010110001");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_26;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_26 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010110010");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_27;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_27 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010110011");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_28;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_28 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010110100");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_29;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_29 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010110101");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_30;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_30 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010110110");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_31;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_31 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010110111");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_32;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_32 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010111000");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_33;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_33 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010111001");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_34;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_34 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010111010");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_35;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_35 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010111011");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_36;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_36 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010111100");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_37;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_37 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010111101");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_38;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_38 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010111110");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_39;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_39 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010111111");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_40;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_40 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011000000");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_41;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_41 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011000001");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_42;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_42 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011000010");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_43;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_43 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011000011");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_44;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_44 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011000100");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_45;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_45 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011000101");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_46;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_46 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011000110");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_47;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_47 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011000111");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_48;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_48 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011001000");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_49;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_49 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011001001");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_50;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_50 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011001010");
        IF ( GEMM_3D_FLOAT_LOOP_3_C_50_tr0 = '1' ) THEN
          state_var_NS <= GEMM_3D_FLOAT_LOOP_1_C_0;
        ELSE
          state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_0;
        END IF;
      WHEN GEMM_3D_FLOAT_LOOP_1_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011001011");
        IF ( GEMM_3D_FLOAT_LOOP_1_C_0_tr0 = '1' ) THEN
          state_var_NS <= SF_LOOP_3_C_0;
        ELSE
          state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_0;
        END IF;
      WHEN SF_LOOP_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011001100");
        state_var_NS <= SF_LOOP_3_C_1;
      WHEN SF_LOOP_3_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011001101");
        state_var_NS <= SF_LOOP_3_C_2;
      WHEN SF_LOOP_3_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011001110");
        state_var_NS <= SF_LOOP_3_C_3;
      WHEN SF_LOOP_3_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011001111");
        IF ( SF_LOOP_3_C_3_tr0 = '1' ) THEN
          state_var_NS <= SF_LOOP_1_C_0;
        ELSE
          state_var_NS <= SF_LOOP_3_C_0;
        END IF;
      WHEN SF_LOOP_1_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011010000");
        IF ( SF_LOOP_1_C_0_tr0 = '1' ) THEN
          state_var_NS <= SOFTMAX_LOOP_1_C_0;
        ELSE
          state_var_NS <= SF_LOOP_3_C_0;
        END IF;
      WHEN SOFTMAX_LOOP_1_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011010001");
        state_var_NS <= SOFTMAX_LOOP_1_C_1;
      WHEN SOFTMAX_LOOP_1_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011010010");
        state_var_NS <= SOFTMAX_LOOP_3_C_0;
      WHEN SOFTMAX_LOOP_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011010011");
        state_var_NS <= SOFTMAX_LOOP_3_C_1;
      WHEN SOFTMAX_LOOP_3_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011010100");
        IF ( SOFTMAX_LOOP_3_C_1_tr0 = '1' ) THEN
          state_var_NS <= SOFTMAX_LOOP_4_C_0;
        ELSE
          state_var_NS <= SOFTMAX_LOOP_3_C_0;
        END IF;
      WHEN SOFTMAX_LOOP_4_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011010101");
        state_var_NS <= SOFTMAX_LOOP_4_C_1;
      WHEN SOFTMAX_LOOP_4_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011010110");
        state_var_NS <= SOFTMAX_LOOP_4_C_2;
      WHEN SOFTMAX_LOOP_4_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011010111");
        state_var_NS <= SOFTMAX_LOOP_4_C_3;
      WHEN SOFTMAX_LOOP_4_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011011000");
        state_var_NS <= SOFTMAX_LOOP_4_C_4;
      WHEN SOFTMAX_LOOP_4_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011011001");
        state_var_NS <= SOFTMAX_LOOP_4_C_5;
      WHEN SOFTMAX_LOOP_4_C_5 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011011010");
        IF ( SOFTMAX_LOOP_4_C_5_tr0 = '1' ) THEN
          state_var_NS <= SOFTMAX_LOOP_5_C_0;
        ELSE
          state_var_NS <= SOFTMAX_LOOP_4_C_0;
        END IF;
      WHEN SOFTMAX_LOOP_5_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011011011");
        state_var_NS <= SOFTMAX_LOOP_5_C_1;
      WHEN SOFTMAX_LOOP_5_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011011100");
        state_var_NS <= SOFTMAX_LOOP_5_C_2;
      WHEN SOFTMAX_LOOP_5_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011011101");
        state_var_NS <= SOFTMAX_LOOP_5_C_3;
      WHEN SOFTMAX_LOOP_5_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011011110");
        state_var_NS <= SOFTMAX_LOOP_5_C_4;
      WHEN SOFTMAX_LOOP_5_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011011111");
        state_var_NS <= SOFTMAX_LOOP_5_C_5;
      WHEN SOFTMAX_LOOP_5_C_5 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011100000");
        state_var_NS <= SOFTMAX_LOOP_5_C_6;
      WHEN SOFTMAX_LOOP_5_C_6 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011100001");
        state_var_NS <= SOFTMAX_LOOP_5_C_7;
      WHEN SOFTMAX_LOOP_5_C_7 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011100010");
        state_var_NS <= SOFTMAX_LOOP_5_C_8;
      WHEN SOFTMAX_LOOP_5_C_8 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011100011");
        state_var_NS <= SOFTMAX_LOOP_5_C_9;
      WHEN SOFTMAX_LOOP_5_C_9 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011100100");
        state_var_NS <= SOFTMAX_LOOP_5_C_10;
      WHEN SOFTMAX_LOOP_5_C_10 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011100101");
        state_var_NS <= SOFTMAX_LOOP_5_C_11;
      WHEN SOFTMAX_LOOP_5_C_11 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011100110");
        state_var_NS <= SOFTMAX_LOOP_5_C_12;
      WHEN SOFTMAX_LOOP_5_C_12 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011100111");
        state_var_NS <= SOFTMAX_LOOP_5_C_13;
      WHEN SOFTMAX_LOOP_5_C_13 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011101000");
        state_var_NS <= SOFTMAX_LOOP_5_C_14;
      WHEN SOFTMAX_LOOP_5_C_14 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011101001");
        state_var_NS <= SOFTMAX_LOOP_5_C_15;
      WHEN SOFTMAX_LOOP_5_C_15 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011101010");
        state_var_NS <= SOFTMAX_LOOP_5_C_16;
      WHEN SOFTMAX_LOOP_5_C_16 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011101011");
        IF ( SOFTMAX_LOOP_5_C_16_tr0 = '1' ) THEN
          state_var_NS <= SOFTMAX_LOOP_1_C_2;
        ELSE
          state_var_NS <= SOFTMAX_LOOP_5_C_0;
        END IF;
      WHEN SOFTMAX_LOOP_1_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011101100");
        IF ( SOFTMAX_LOOP_1_C_2_tr0 = '1' ) THEN
          state_var_NS <= GEMM_3D_FLOAT_LOOP_3_1_C_0;
        ELSE
          state_var_NS <= SOFTMAX_LOOP_1_C_0;
        END IF;
      WHEN GEMM_3D_FLOAT_LOOP_3_1_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011101101");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_1_C_1;
      WHEN GEMM_3D_FLOAT_LOOP_3_1_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011101110");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_1_C_2;
      WHEN GEMM_3D_FLOAT_LOOP_3_1_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011101111");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_1_C_3;
      WHEN GEMM_3D_FLOAT_LOOP_3_1_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011110000");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_1_C_4;
      WHEN GEMM_3D_FLOAT_LOOP_3_1_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011110001");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_1_C_5;
      WHEN GEMM_3D_FLOAT_LOOP_3_1_C_5 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011110010");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_1_C_6;
      WHEN GEMM_3D_FLOAT_LOOP_3_1_C_6 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011110011");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_1_C_7;
      WHEN GEMM_3D_FLOAT_LOOP_3_1_C_7 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011110100");
        IF ( GEMM_3D_FLOAT_LOOP_3_1_C_7_tr0 = '1' ) THEN
          state_var_NS <= GEMM_3D_FLOAT_LOOP_1_1_C_0;
        ELSE
          state_var_NS <= GEMM_3D_FLOAT_LOOP_3_1_C_0;
        END IF;
      WHEN GEMM_3D_FLOAT_LOOP_1_1_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011110101");
        IF ( GEMM_3D_FLOAT_LOOP_1_1_C_0_tr0 = '1' ) THEN
          state_var_NS <= ATTN_2D_LOOP_3_C_0;
        ELSE
          state_var_NS <= GEMM_3D_FLOAT_LOOP_3_1_C_0;
        END IF;
      WHEN ATTN_2D_LOOP_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011110110");
        state_var_NS <= ATTN_2D_LOOP_3_C_1;
      WHEN ATTN_2D_LOOP_3_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011110111");
        state_var_NS <= ATTN_2D_LOOP_3_C_2;
      WHEN ATTN_2D_LOOP_3_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011111000");
        IF ( ATTN_2D_LOOP_3_C_2_tr0 = '1' ) THEN
          state_var_NS <= ATTN_2D_LOOP_2_C_0;
        ELSE
          state_var_NS <= ATTN_2D_LOOP_3_C_0;
        END IF;
      WHEN ATTN_2D_LOOP_2_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011111001");
        IF ( ATTN_2D_LOOP_2_C_0_tr0 = '1' ) THEN
          state_var_NS <= RMS_NORM_LOOP_1_2_C_0;
        ELSE
          state_var_NS <= ATTN_2D_LOOP_3_C_0;
        END IF;
      WHEN RMS_NORM_LOOP_1_2_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011111010");
        state_var_NS <= RMS_NORM_LOOP_1_2_C_1;
      WHEN RMS_NORM_LOOP_1_2_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011111011");
        IF ( RMS_NORM_LOOP_1_2_C_1_tr0 = '1' ) THEN
          state_var_NS <= main_C_41;
        ELSE
          state_var_NS <= RMS_NORM_LOOP_1_2_C_0;
        END IF;
      WHEN main_C_41 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011111100");
        state_var_NS <= main_C_42;
      WHEN main_C_42 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011111101");
        state_var_NS <= main_C_43;
      WHEN main_C_43 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011111110");
        state_var_NS <= attention_sqrt_1_for_C_0;
      WHEN attention_sqrt_1_for_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011111111");
        state_var_NS <= attention_sqrt_1_for_C_1;
      WHEN attention_sqrt_1_for_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100000000");
        state_var_NS <= attention_sqrt_1_for_C_2;
      WHEN attention_sqrt_1_for_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100000001");
        state_var_NS <= attention_sqrt_1_for_C_3;
      WHEN attention_sqrt_1_for_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100000010");
        state_var_NS <= attention_sqrt_1_for_C_4;
      WHEN attention_sqrt_1_for_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100000011");
        state_var_NS <= attention_sqrt_1_for_C_5;
      WHEN attention_sqrt_1_for_C_5 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100000100");
        state_var_NS <= attention_sqrt_1_for_C_6;
      WHEN attention_sqrt_1_for_C_6 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100000101");
        state_var_NS <= attention_sqrt_1_for_C_7;
      WHEN attention_sqrt_1_for_C_7 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100000110");
        state_var_NS <= attention_sqrt_1_for_C_8;
      WHEN attention_sqrt_1_for_C_8 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100000111");
        state_var_NS <= attention_sqrt_1_for_C_9;
      WHEN attention_sqrt_1_for_C_9 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100001000");
        state_var_NS <= attention_sqrt_1_for_C_10;
      WHEN attention_sqrt_1_for_C_10 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100001001");
        IF ( attention_sqrt_1_for_C_10_tr0 = '1' ) THEN
          state_var_NS <= main_C_44;
        ELSE
          state_var_NS <= attention_sqrt_1_for_C_0;
        END IF;
      WHEN main_C_44 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100001010");
        state_var_NS <= main_C_45;
      WHEN main_C_45 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100001011");
        state_var_NS <= main_C_46;
      WHEN main_C_46 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100001100");
        state_var_NS <= main_C_47;
      WHEN main_C_47 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100001101");
        state_var_NS <= main_C_48;
      WHEN main_C_48 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100001110");
        state_var_NS <= main_C_49;
      WHEN main_C_49 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100001111");
        state_var_NS <= main_C_50;
      WHEN main_C_50 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100010000");
        state_var_NS <= main_C_51;
      WHEN main_C_51 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100010001");
        state_var_NS <= main_C_52;
      WHEN main_C_52 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100010010");
        state_var_NS <= main_C_53;
      WHEN main_C_53 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100010011");
        state_var_NS <= main_C_54;
      WHEN main_C_54 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100010100");
        state_var_NS <= main_C_55;
      WHEN main_C_55 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100010101");
        state_var_NS <= main_C_56;
      WHEN main_C_56 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100010110");
        state_var_NS <= main_C_57;
      WHEN main_C_57 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100010111");
        state_var_NS <= RMS_NORM_LOOP_2_2_C_0;
      WHEN RMS_NORM_LOOP_2_2_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100011000");
        state_var_NS <= RMS_NORM_LOOP_2_2_C_1;
      WHEN RMS_NORM_LOOP_2_2_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100011001");
        state_var_NS <= RMS_NORM_LOOP_2_2_C_2;
      WHEN RMS_NORM_LOOP_2_2_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100011010");
        state_var_NS <= RMS_NORM_LOOP_2_2_C_3;
      WHEN RMS_NORM_LOOP_2_2_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100011011");
        IF ( RMS_NORM_LOOP_2_2_C_3_tr0 = '1' ) THEN
          state_var_NS <= main_C_58;
        ELSE
          state_var_NS <= RMS_NORM_LOOP_2_2_C_0;
        END IF;
      WHEN main_C_58 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100011100");
        state_var_NS <= main_C_59;
      WHEN main_C_59 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100011101");
        state_var_NS <= main_C_60;
      WHEN main_C_60 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100011110");
        state_var_NS <= main_C_61;
      WHEN main_C_61 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100011111");
        state_var_NS <= main_C_62;
      WHEN main_C_62 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100100000");
        state_var_NS <= main_C_63;
      WHEN main_C_63 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100100001");
        state_var_NS <= main_C_64;
      WHEN main_C_64 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100100010");
        state_var_NS <= main_C_65;
      WHEN main_C_65 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100100011");
        state_var_NS <= main_C_66;
      WHEN main_C_66 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100100100");
        state_var_NS <= main_C_67;
      WHEN main_C_67 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100100101");
        state_var_NS <= main_C_68;
      WHEN main_C_68 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100100110");
        state_var_NS <= main_C_69;
      WHEN main_C_69 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100100111");
        state_var_NS <= main_C_70;
      WHEN main_C_70 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100101000");
        state_var_NS <= main_C_71;
      WHEN main_C_71 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100101001");
        state_var_NS <= main_C_72;
      WHEN main_C_72 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100101010");
        state_var_NS <= main_C_73;
      WHEN main_C_73 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100101011");
        state_var_NS <= main_C_74;
      WHEN main_C_74 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100101100");
        state_var_NS <= main_C_75;
      WHEN main_C_75 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100101101");
        state_var_NS <= main_C_76;
      WHEN main_C_76 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100101110");
        state_var_NS <= main_C_77;
      WHEN main_C_77 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100101111");
        state_var_NS <= main_C_78;
      WHEN main_C_78 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100110000");
        state_var_NS <= main_C_79;
      WHEN main_C_79 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100110001");
        state_var_NS <= main_C_80;
      WHEN main_C_80 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100110010");
        state_var_NS <= main_C_81;
      WHEN main_C_81 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100110011");
        state_var_NS <= main_C_82;
      WHEN main_C_82 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100110100");
        state_var_NS <= main_C_83;
      WHEN main_C_83 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100110101");
        state_var_NS <= main_C_84;
      WHEN main_C_84 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100110110");
        state_var_NS <= main_C_85;
      WHEN main_C_85 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100110111");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_4_1_C_0;
      WHEN QUANTIZE_ACTIVATION_LOOP_4_1_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100111000");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_4_1_C_1;
      WHEN QUANTIZE_ACTIVATION_LOOP_4_1_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100111001");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_4_1_C_2;
      WHEN QUANTIZE_ACTIVATION_LOOP_4_1_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100111010");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_4_1_C_3;
      WHEN QUANTIZE_ACTIVATION_LOOP_4_1_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100111011");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_4_1_C_4;
      WHEN QUANTIZE_ACTIVATION_LOOP_4_1_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100111100");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_4_1_C_5;
      WHEN QUANTIZE_ACTIVATION_LOOP_4_1_C_5 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100111101");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_4_1_C_6;
      WHEN QUANTIZE_ACTIVATION_LOOP_4_1_C_6 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100111110");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_4_1_C_7;
      WHEN QUANTIZE_ACTIVATION_LOOP_4_1_C_7 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100111111");
        IF ( QUANTIZE_ACTIVATION_LOOP_4_1_C_7_tr0 = '1' ) THEN
          state_var_NS <= QUANTIZE_ACTIVATION_LOOP_3_1_C_0;
        ELSE
          state_var_NS <= QUANTIZE_ACTIVATION_LOOP_4_1_C_0;
        END IF;
      WHEN QUANTIZE_ACTIVATION_LOOP_3_1_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101000000");
        IF ( QUANTIZE_ACTIVATION_LOOP_3_1_C_0_tr0 = '1' ) THEN
          state_var_NS <= output_vinit_C_0;
        ELSE
          state_var_NS <= QUANTIZE_ACTIVATION_LOOP_4_1_C_0;
        END IF;
      WHEN output_vinit_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101000001");
        state_var_NS <= output_vinit_C_1;
      WHEN output_vinit_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101000010");
        IF ( output_vinit_C_1_tr0 = '1' ) THEN
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_3_3_C_0;
        ELSE
          state_var_NS <= output_vinit_C_0;
        END IF;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_3_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101000011");
        IF ( LINEAR_FORWARD_NO_MUL_LOOP_3_3_C_0_tr0 = '1' ) THEN
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_0;
        ELSE
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_3_3_C_1;
        END IF;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_3_3_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101000100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_3_3_C_0;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101000101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_1;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101000110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_2;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101000111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_3;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101001000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_4;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101001001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_5;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_5 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101001010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_6;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_6 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101001011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_7;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_7 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101001100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_8;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_8 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101001101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_9;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_9 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101001110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_10;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_10 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101001111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_11;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_11 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101010000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_12;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_12 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101010001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_13;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_13 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101010010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_14;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_14 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101010011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_15;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_15 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101010100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_16;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_16 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101010101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_17;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_17 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101010110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_18;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_18 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101010111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_19;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_19 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101011000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_20;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_20 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101011001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_21;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_21 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101011010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_22;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_22 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101011011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_23;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_23 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101011100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_24;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_24 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101011101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_25;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_25 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101011110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_26;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_26 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101011111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_27;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_27 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101100000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_28;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_28 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101100001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_29;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_29 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101100010");
        IF ( LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_29_tr0 = '1' ) THEN
          state_var_NS <= for_1_for_C_0;
        ELSE
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_3_3_C_0;
        END IF;
      WHEN for_1_for_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101100011");
        state_var_NS <= for_1_for_C_1;
      WHEN for_1_for_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101100100");
        state_var_NS <= for_1_for_C_2;
      WHEN for_1_for_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101100101");
        IF ( for_1_for_C_2_tr0 = '1' ) THEN
          state_var_NS <= main_C_0;
        ELSE
          state_var_NS <= for_1_for_C_0;
        END IF;
      -- main_C_0
      WHEN OTHERS =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000000");
        state_var_NS <= for_for_C_0;
    END CASE;
  END PROCESS dut_core_core_fsm_1;

  dut_core_core_fsm_1_REG : PROCESS (clk)
  BEGIN
    IF clk'event AND ( clk = '1' ) THEN
      IF ( rst = '1' ) THEN
        state_var <= main_C_0;
      ELSE
        IF ( input_rsc_en_d_1 = '1' ) THEN
          state_var <= state_var_NS;
        END IF;
      END IF;
    END IF;
  END PROCESS dut_core_core_fsm_1_REG;

END v1;

-- ------------------------------------------------------------------
--  Design Unit:    dut_core_staller
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;
USE mgc_hls.ram_sync_dualRW_be_pkg.ALL;


ENTITY dut_core_staller IS
  PORT(
    en : IN STD_LOGIC;
    strm_in_rsci_wen_comp : IN STD_LOGIC;
    strm_out_rsci_wen_comp : IN STD_LOGIC;
    input_rsc_en_d_1 : OUT STD_LOGIC
  );
END dut_core_staller;

ARCHITECTURE v1 OF dut_core_staller IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  input_rsc_en_d_1 <= strm_in_rsci_wen_comp AND strm_out_rsci_wen_comp AND en;
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    dut_core_strm_out_rsci_strm_out_wait_ctrl
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;
USE mgc_hls.ram_sync_dualRW_be_pkg.ALL;


ENTITY dut_core_strm_out_rsci_strm_out_wait_ctrl IS
  PORT(
    strm_out_rsci_iswt0 : IN STD_LOGIC;
    strm_out_rsci_biwt : OUT STD_LOGIC;
    strm_out_rsci_irdy : IN STD_LOGIC
  );
END dut_core_strm_out_rsci_strm_out_wait_ctrl;

ARCHITECTURE v1 OF dut_core_strm_out_rsci_strm_out_wait_ctrl IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  strm_out_rsci_biwt <= strm_out_rsci_iswt0 AND strm_out_rsci_irdy;
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    dut_core_strm_in_rsci_strm_in_wait_ctrl
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;
USE mgc_hls.ram_sync_dualRW_be_pkg.ALL;


ENTITY dut_core_strm_in_rsci_strm_in_wait_ctrl IS
  PORT(
    strm_in_rsci_iswt0 : IN STD_LOGIC;
    strm_in_rsci_biwt : OUT STD_LOGIC;
    strm_in_rsci_ivld : IN STD_LOGIC
  );
END dut_core_strm_in_rsci_strm_in_wait_ctrl;

ARCHITECTURE v1 OF dut_core_strm_in_rsci_strm_in_wait_ctrl IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  strm_in_rsci_biwt <= strm_in_rsci_iswt0 AND strm_in_rsci_ivld;
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    dut_core_strm_out_rsci
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;
USE mgc_hls.ram_sync_dualRW_be_pkg.ALL;


ENTITY dut_core_strm_out_rsci IS
  PORT(
    strm_out_rsc_dat : OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
    strm_out_rsc_vld : OUT STD_LOGIC;
    strm_out_rsc_rdy : IN STD_LOGIC;
    strm_out_rsci_oswt : IN STD_LOGIC;
    strm_out_rsci_wen_comp : OUT STD_LOGIC;
    strm_out_rsci_idat : IN STD_LOGIC_VECTOR (31 DOWNTO 0)
  );
END dut_core_strm_out_rsci;

ARCHITECTURE v1 OF dut_core_strm_out_rsci IS
  -- Interconnect Declarations
  SIGNAL strm_out_rsci_biwt : STD_LOGIC;
  SIGNAL strm_out_rsci_irdy : STD_LOGIC;

  SIGNAL strm_out_rsci_idat_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL strm_out_rsci_dat : STD_LOGIC_VECTOR (31 DOWNTO 0);

  COMPONENT dut_core_strm_out_rsci_strm_out_wait_ctrl
    PORT(
      strm_out_rsci_iswt0 : IN STD_LOGIC;
      strm_out_rsci_biwt : OUT STD_LOGIC;
      strm_out_rsci_irdy : IN STD_LOGIC
    );
  END COMPONENT;
BEGIN
  strm_out_rsci : mgc_hls.ccs_out_wait_pkg_v1.ccs_out_wait_v1
    GENERIC MAP(
      rscid => 2,
      width => 32
      )
    PORT MAP(
      irdy => strm_out_rsci_irdy,
      ivld => strm_out_rsci_oswt,
      idat => strm_out_rsci_idat_1,
      rdy => strm_out_rsc_rdy,
      vld => strm_out_rsc_vld,
      dat => strm_out_rsci_dat
    );
  strm_out_rsci_idat_1 <= (strm_out_rsci_idat(31 DOWNTO 2)) & STD_LOGIC_VECTOR'(
      "00");
  strm_out_rsc_dat <= strm_out_rsci_dat;

  dut_core_strm_out_rsci_strm_out_wait_ctrl_inst : dut_core_strm_out_rsci_strm_out_wait_ctrl
    PORT MAP(
      strm_out_rsci_iswt0 => strm_out_rsci_oswt,
      strm_out_rsci_biwt => strm_out_rsci_biwt,
      strm_out_rsci_irdy => strm_out_rsci_irdy
    );
  strm_out_rsci_wen_comp <= (NOT strm_out_rsci_oswt) OR strm_out_rsci_biwt;
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    dut_core_strm_in_rsci
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;
USE mgc_hls.ram_sync_dualRW_be_pkg.ALL;


ENTITY dut_core_strm_in_rsci IS
  PORT(
    strm_in_rsc_dat : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
    strm_in_rsc_vld : IN STD_LOGIC;
    strm_in_rsc_rdy : OUT STD_LOGIC;
    strm_in_rsci_oswt : IN STD_LOGIC;
    strm_in_rsci_wen_comp : OUT STD_LOGIC;
    strm_in_rsci_idat_mxwt : OUT STD_LOGIC_VECTOR (29 DOWNTO 0)
  );
END dut_core_strm_in_rsci;

ARCHITECTURE v1 OF dut_core_strm_in_rsci IS
  -- Interconnect Declarations
  SIGNAL strm_in_rsci_biwt : STD_LOGIC;
  SIGNAL strm_in_rsci_ivld : STD_LOGIC;
  SIGNAL strm_in_rsci_idat : STD_LOGIC_VECTOR (31 DOWNTO 0);

  SIGNAL strm_in_rsci_dat : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL strm_in_rsci_idat_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);

  COMPONENT dut_core_strm_in_rsci_strm_in_wait_ctrl
    PORT(
      strm_in_rsci_iswt0 : IN STD_LOGIC;
      strm_in_rsci_biwt : OUT STD_LOGIC;
      strm_in_rsci_ivld : IN STD_LOGIC
    );
  END COMPONENT;
BEGIN
  strm_in_rsci : mgc_hls.ccs_in_wait_pkg_v1.ccs_in_wait_v1
    GENERIC MAP(
      rscid => 1,
      width => 32
      )
    PORT MAP(
      rdy => strm_in_rsc_rdy,
      vld => strm_in_rsc_vld,
      dat => strm_in_rsci_dat,
      irdy => strm_in_rsci_oswt,
      ivld => strm_in_rsci_ivld,
      idat => strm_in_rsci_idat_1
    );
  strm_in_rsci_dat <= strm_in_rsc_dat;
  strm_in_rsci_idat <= strm_in_rsci_idat_1;

  dut_core_strm_in_rsci_strm_in_wait_ctrl_inst : dut_core_strm_in_rsci_strm_in_wait_ctrl
    PORT MAP(
      strm_in_rsci_iswt0 => strm_in_rsci_oswt,
      strm_in_rsci_biwt => strm_in_rsci_biwt,
      strm_in_rsci_ivld => strm_in_rsci_ivld
    );
  strm_in_rsci_idat_mxwt <= strm_in_rsci_idat(31 DOWNTO 2);
  strm_in_rsci_wen_comp <= (NOT strm_in_rsci_oswt) OR strm_in_rsci_biwt;
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    dut_core
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;
USE mgc_hls.ram_sync_dualRW_be_pkg.ALL;


ENTITY dut_core IS
  PORT(
    clk : IN STD_LOGIC;
    en : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    strm_in_rsc_dat : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
    strm_in_rsc_vld : IN STD_LOGIC;
    strm_in_rsc_rdy : OUT STD_LOGIC;
    strm_out_rsc_dat : OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
    strm_out_rsc_vld : OUT STD_LOGIC;
    strm_out_rsc_rdy : IN STD_LOGIC;
    input_rsci_data_in_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    input_rsci_addr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    input_rsci_re_d : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    input_rsci_we_d : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    input_rsci_data_out_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    input_rsci_en_d : OUT STD_LOGIC;
    output_rsci_data_in_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    output_rsci_addr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    output_rsci_re_d : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    output_rsci_we_d : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
    output_rsci_data_out_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
    attention_5_1_384_384_8_48_quantized_hidden_states_rsci_data_in_d : OUT STD_LOGIC_VECTOR
        (7 DOWNTO 0);
    attention_5_1_384_384_8_48_quantized_hidden_states_rsci_addr_d : OUT STD_LOGIC_VECTOR
        (8 DOWNTO 0);
    attention_5_1_384_384_8_48_quantized_hidden_states_rsci_re_d : OUT STD_LOGIC_VECTOR
        (1 DOWNTO 0);
    attention_5_1_384_384_8_48_quantized_hidden_states_rsci_we_d : OUT STD_LOGIC_VECTOR
        (1 DOWNTO 0);
    attention_5_1_384_384_8_48_quantized_hidden_states_rsci_data_out_d : IN STD_LOGIC_VECTOR
        (15 DOWNTO 0);
    attention_5_1_384_384_8_48_q_proj_re_rsci_data_in_d : OUT STD_LOGIC_VECTOR (39
        DOWNTO 0);
    attention_5_1_384_384_8_48_q_proj_re_rsci_addr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_q_proj_re_rsci_re_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
        0);
    attention_5_1_384_384_8_48_q_proj_re_rsci_we_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
        0);
    attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d : IN STD_LOGIC_VECTOR (79
        DOWNTO 0);
    attention_5_1_384_384_8_48_k_proj_re_rsci_data_in_d : OUT STD_LOGIC_VECTOR (39
        DOWNTO 0);
    attention_5_1_384_384_8_48_k_proj_re_rsci_addr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_proj_re_rsci_re_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_proj_re_rsci_we_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_proj_re_rsci_data_out_d : IN STD_LOGIC_VECTOR (79
        DOWNTO 0);
    attention_5_1_384_384_8_48_v_proj_re_rsci_data_in_d : OUT STD_LOGIC_VECTOR (39
        DOWNTO 0);
    attention_5_1_384_384_8_48_v_proj_re_rsci_addr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_v_proj_re_rsci_re_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
        0);
    attention_5_1_384_384_8_48_v_proj_re_rsci_we_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
        0);
    attention_5_1_384_384_8_48_v_proj_re_rsci_data_out_d : IN STD_LOGIC_VECTOR (79
        DOWNTO 0);
    attention_5_1_384_384_8_48_q_proj_rsci_data_in_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_q_proj_rsci_addr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_q_proj_rsci_re_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
        0);
    attention_5_1_384_384_8_48_q_proj_rsci_we_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
        0);
    attention_5_1_384_384_8_48_q_proj_rsci_data_out_d : IN STD_LOGIC_VECTOR (79 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_proj_rsci_data_in_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_proj_rsci_addr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_proj_rsci_re_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_proj_rsci_we_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_proj_rsci_data_out_d : IN STD_LOGIC_VECTOR (79 DOWNTO
        0);
    attention_5_1_384_384_8_48_v_proj_rsci_data_in_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_v_proj_rsci_addr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_v_proj_rsci_re_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
        0);
    attention_5_1_384_384_8_48_v_proj_rsci_we_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
        0);
    attention_5_1_384_384_8_48_v_proj_rsci_data_out_d : IN STD_LOGIC_VECTOR (79 DOWNTO
        0);
    attention_5_1_384_384_8_48_q_embed_rsci_data_in_d : OUT STD_LOGIC_VECTOR (39
        DOWNTO 0);
    attention_5_1_384_384_8_48_q_embed_rsci_addr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_q_embed_rsci_re_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
        0);
    attention_5_1_384_384_8_48_q_embed_rsci_we_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
        0);
    attention_5_1_384_384_8_48_q_embed_rsci_data_out_d : IN STD_LOGIC_VECTOR (79
        DOWNTO 0);
    attention_5_1_384_384_8_48_k_embed_rsci_data_in_d : OUT STD_LOGIC_VECTOR (39
        DOWNTO 0);
    attention_5_1_384_384_8_48_k_embed_rsci_addr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_embed_rsci_re_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_embed_rsci_we_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_embed_rsci_data_out_d : IN STD_LOGIC_VECTOR (79
        DOWNTO 0);
    attention_5_1_384_384_8_48_k_cache_upd_rsci_data_in_d : OUT STD_LOGIC_VECTOR
        (39 DOWNTO 0);
    attention_5_1_384_384_8_48_k_cache_upd_rsci_addr_d : OUT STD_LOGIC_VECTOR (11
        DOWNTO 0);
    attention_5_1_384_384_8_48_k_cache_upd_rsci_re_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_cache_upd_rsci_we_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_cache_upd_rsci_data_out_d : IN STD_LOGIC_VECTOR
        (79 DOWNTO 0);
    attention_5_1_384_384_8_48_v_cache_upd_rsci_data_in_d : OUT STD_LOGIC_VECTOR
        (39 DOWNTO 0);
    attention_5_1_384_384_8_48_v_cache_upd_rsci_addr_d : OUT STD_LOGIC_VECTOR (11
        DOWNTO 0);
    attention_5_1_384_384_8_48_v_cache_upd_rsci_re_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
        0);
    attention_5_1_384_384_8_48_v_cache_upd_rsci_we_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
        0);
    attention_5_1_384_384_8_48_v_cache_upd_rsci_data_out_d : IN STD_LOGIC_VECTOR
        (79 DOWNTO 0);
    attention_5_1_384_384_8_48_k_proj_transposed_rsci_data_in_d : OUT STD_LOGIC_VECTOR
        (39 DOWNTO 0);
    attention_5_1_384_384_8_48_k_proj_transposed_rsci_addr_d : OUT STD_LOGIC_VECTOR
        (11 DOWNTO 0);
    attention_5_1_384_384_8_48_k_proj_transposed_rsci_re_d : OUT STD_LOGIC_VECTOR
        (1 DOWNTO 0);
    attention_5_1_384_384_8_48_k_proj_transposed_rsci_we_d : OUT STD_LOGIC_VECTOR
        (1 DOWNTO 0);
    attention_5_1_384_384_8_48_k_proj_transposed_rsci_data_out_d : IN STD_LOGIC_VECTOR
        (79 DOWNTO 0);
    attention_5_1_384_384_8_48_attn_weights_rsci_data_in_d : OUT STD_LOGIC_VECTOR
        (39 DOWNTO 0);
    attention_5_1_384_384_8_48_attn_weights_rsci_addr_d : OUT STD_LOGIC_VECTOR (5
        DOWNTO 0);
    attention_5_1_384_384_8_48_attn_weights_rsci_re_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
        0);
    attention_5_1_384_384_8_48_attn_weights_rsci_we_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
        0);
    attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d : IN STD_LOGIC_VECTOR
        (79 DOWNTO 0);
    attention_5_1_384_384_8_48_attn_output_rsci_data_in_d : OUT STD_LOGIC_VECTOR
        (39 DOWNTO 0);
    attention_5_1_384_384_8_48_attn_output_rsci_addr_d : OUT STD_LOGIC_VECTOR (8
        DOWNTO 0);
    attention_5_1_384_384_8_48_attn_output_rsci_re_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
        0);
    attention_5_1_384_384_8_48_attn_output_rsci_we_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
        0);
    attention_5_1_384_384_8_48_attn_output_rsci_data_out_d : IN STD_LOGIC_VECTOR
        (79 DOWNTO 0);
    attention_5_1_384_384_8_48_attn_output_2D_rsci_data_in_d : OUT STD_LOGIC_VECTOR
        (39 DOWNTO 0);
    attention_5_1_384_384_8_48_attn_output_2D_rsci_addr_d : OUT STD_LOGIC_VECTOR
        (8 DOWNTO 0);
    attention_5_1_384_384_8_48_attn_output_2D_rsci_re_d : OUT STD_LOGIC_VECTOR (1
        DOWNTO 0);
    attention_5_1_384_384_8_48_attn_output_2D_rsci_we_d : OUT STD_LOGIC_VECTOR (1
        DOWNTO 0);
    attention_5_1_384_384_8_48_attn_output_2D_rsci_data_out_d : IN STD_LOGIC_VECTOR
        (79 DOWNTO 0);
    attention_5_1_384_384_8_48_quantized_final_output_rsci_data_in_d : OUT STD_LOGIC_VECTOR
        (7 DOWNTO 0);
    attention_5_1_384_384_8_48_quantized_final_output_rsci_addr_d : OUT STD_LOGIC_VECTOR
        (8 DOWNTO 0);
    attention_5_1_384_384_8_48_quantized_final_output_rsci_re_d : OUT STD_LOGIC_VECTOR
        (1 DOWNTO 0);
    attention_5_1_384_384_8_48_quantized_final_output_rsci_we_d : OUT STD_LOGIC_VECTOR
        (1 DOWNTO 0);
    attention_5_1_384_384_8_48_quantized_final_output_rsci_data_out_d : IN STD_LOGIC_VECTOR
        (15 DOWNTO 0);
    apply_rotary_pos_emb_1_8_48_rotated_q_rsci_data_in_d : OUT STD_LOGIC_VECTOR (39
        DOWNTO 0);
    apply_rotary_pos_emb_1_8_48_rotated_q_rsci_addr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    apply_rotary_pos_emb_1_8_48_rotated_q_rsci_re_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
        0);
    apply_rotary_pos_emb_1_8_48_rotated_q_rsci_we_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
        0);
    apply_rotary_pos_emb_1_8_48_rotated_q_rsci_data_out_d : IN STD_LOGIC_VECTOR (79
        DOWNTO 0);
    apply_rotary_pos_emb_1_8_48_rotated_k_rsci_data_in_d : OUT STD_LOGIC_VECTOR (39
        DOWNTO 0);
    apply_rotary_pos_emb_1_8_48_rotated_k_rsci_addr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    apply_rotary_pos_emb_1_8_48_rotated_k_rsci_re_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
        0);
    apply_rotary_pos_emb_1_8_48_rotated_k_rsci_we_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
        0);
    apply_rotary_pos_emb_1_8_48_rotated_k_rsci_data_out_d : IN STD_LOGIC_VECTOR (79
        DOWNTO 0)
  );
END dut_core;

ARCHITECTURE v1 OF dut_core IS
  -- Interconnect Declarations
  SIGNAL strm_in_rsci_wen_comp : STD_LOGIC;
  SIGNAL strm_in_rsci_idat_mxwt : STD_LOGIC_VECTOR (29 DOWNTO 0);
  SIGNAL strm_out_rsci_wen_comp : STD_LOGIC;
  SIGNAL input_rsc_en_d_1 : STD_LOGIC;
  SIGNAL SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_z : STD_LOGIC_VECTOR (55 DOWNTO
      0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z
      : STD_LOGIC_VECTOR (71 DOWNTO 0);
  SIGNAL rms_norm_384_div_cmp_z : STD_LOGIC_VECTOR (71 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL strm_out_rsci_idat_31_2 : STD_LOGIC_VECTOR (29 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_17_16
      : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_1_0
      : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL rms_norm_384_div_cmp_b_19_16 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL rms_norm_384_div_cmp_b_4_1 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL rms_norm_384_div_cmp_b_0 : STD_LOGIC;
  SIGNAL fsm_output : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_3_INIT_2D_MEM_LOOP_2_3_nor_tmp : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_and_2_tmp : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_LINEAR_FORWARD_NO_MUL_LOOP_2_nor_tmp : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_and_1_tmp : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_nand_tmp : STD_LOGIC;
  SIGNAL for_for_for_for_nor_tmp : STD_LOGIC;
  SIGNAL and_dcpl : STD_LOGIC;
  SIGNAL and_dcpl_1 : STD_LOGIC;
  SIGNAL not_tmp_21 : STD_LOGIC;
  SIGNAL and_dcpl_6 : STD_LOGIC;
  SIGNAL or_tmp_46 : STD_LOGIC;
  SIGNAL or_tmp_55 : STD_LOGIC;
  SIGNAL and_dcpl_13 : STD_LOGIC;
  SIGNAL or_tmp_68 : STD_LOGIC;
  SIGNAL and_dcpl_19 : STD_LOGIC;
  SIGNAL or_tmp_76 : STD_LOGIC;
  SIGNAL and_dcpl_25 : STD_LOGIC;
  SIGNAL and_dcpl_28 : STD_LOGIC;
  SIGNAL or_tmp_188 : STD_LOGIC;
  SIGNAL or_tmp_191 : STD_LOGIC;
  SIGNAL or_tmp_207 : STD_LOGIC;
  SIGNAL and_dcpl_79 : STD_LOGIC;
  SIGNAL and_dcpl_97 : STD_LOGIC;
  SIGNAL and_dcpl_98 : STD_LOGIC;
  SIGNAL and_dcpl_99 : STD_LOGIC;
  SIGNAL and_dcpl_100 : STD_LOGIC;
  SIGNAL and_dcpl_101 : STD_LOGIC;
  SIGNAL and_dcpl_102 : STD_LOGIC;
  SIGNAL and_dcpl_103 : STD_LOGIC;
  SIGNAL and_dcpl_104 : STD_LOGIC;
  SIGNAL and_dcpl_105 : STD_LOGIC;
  SIGNAL or_dcpl_104 : STD_LOGIC;
  SIGNAL or_dcpl_105 : STD_LOGIC;
  SIGNAL or_dcpl_106 : STD_LOGIC;
  SIGNAL or_dcpl_109 : STD_LOGIC;
  SIGNAL or_dcpl_110 : STD_LOGIC;
  SIGNAL or_dcpl_111 : STD_LOGIC;
  SIGNAL or_dcpl_114 : STD_LOGIC;
  SIGNAL or_dcpl_115 : STD_LOGIC;
  SIGNAL and_dcpl_107 : STD_LOGIC;
  SIGNAL and_dcpl_108 : STD_LOGIC;
  SIGNAL and_dcpl_110 : STD_LOGIC;
  SIGNAL and_dcpl_111 : STD_LOGIC;
  SIGNAL and_dcpl_112 : STD_LOGIC;
  SIGNAL or_dcpl_129 : STD_LOGIC;
  SIGNAL or_dcpl_130 : STD_LOGIC;
  SIGNAL or_dcpl_133 : STD_LOGIC;
  SIGNAL or_dcpl_134 : STD_LOGIC;
  SIGNAL and_dcpl_114 : STD_LOGIC;
  SIGNAL and_dcpl_116 : STD_LOGIC;
  SIGNAL and_dcpl_117 : STD_LOGIC;
  SIGNAL and_dcpl_118 : STD_LOGIC;
  SIGNAL and_tmp_16 : STD_LOGIC;
  SIGNAL or_tmp_227 : STD_LOGIC;
  SIGNAL or_tmp_230 : STD_LOGIC;
  SIGNAL and_dcpl_125 : STD_LOGIC;
  SIGNAL and_dcpl_126 : STD_LOGIC;
  SIGNAL and_dcpl_127 : STD_LOGIC;
  SIGNAL and_dcpl_128 : STD_LOGIC;
  SIGNAL not_tmp_199 : STD_LOGIC;
  SIGNAL and_dcpl_130 : STD_LOGIC;
  SIGNAL and_dcpl_132 : STD_LOGIC;
  SIGNAL or_tmp_247 : STD_LOGIC;
  SIGNAL and_dcpl_135 : STD_LOGIC;
  SIGNAL and_dcpl_136 : STD_LOGIC;
  SIGNAL and_dcpl_138 : STD_LOGIC;
  SIGNAL and_dcpl_142 : STD_LOGIC;
  SIGNAL and_dcpl_144 : STD_LOGIC;
  SIGNAL or_tmp_266 : STD_LOGIC;
  SIGNAL and_dcpl_147 : STD_LOGIC;
  SIGNAL and_dcpl_148 : STD_LOGIC;
  SIGNAL and_dcpl_149 : STD_LOGIC;
  SIGNAL and_dcpl_150 : STD_LOGIC;
  SIGNAL mux_tmp_236 : STD_LOGIC;
  SIGNAL and_dcpl_151 : STD_LOGIC;
  SIGNAL and_dcpl_152 : STD_LOGIC;
  SIGNAL mux_tmp_238 : STD_LOGIC;
  SIGNAL and_dcpl_153 : STD_LOGIC;
  SIGNAL and_dcpl_155 : STD_LOGIC;
  SIGNAL and_dcpl_157 : STD_LOGIC;
  SIGNAL and_dcpl_158 : STD_LOGIC;
  SIGNAL and_dcpl_159 : STD_LOGIC;
  SIGNAL and_dcpl_160 : STD_LOGIC;
  SIGNAL and_dcpl_161 : STD_LOGIC;
  SIGNAL and_dcpl_162 : STD_LOGIC;
  SIGNAL nor_tmp_88 : STD_LOGIC;
  SIGNAL not_tmp_215 : STD_LOGIC;
  SIGNAL and_dcpl_165 : STD_LOGIC;
  SIGNAL and_dcpl_166 : STD_LOGIC;
  SIGNAL or_tmp_278 : STD_LOGIC;
  SIGNAL and_dcpl_167 : STD_LOGIC;
  SIGNAL or_dcpl_150 : STD_LOGIC;
  SIGNAL and_dcpl_168 : STD_LOGIC;
  SIGNAL and_dcpl_169 : STD_LOGIC;
  SIGNAL and_dcpl_171 : STD_LOGIC;
  SIGNAL and_dcpl_172 : STD_LOGIC;
  SIGNAL and_dcpl_173 : STD_LOGIC;
  SIGNAL and_dcpl_176 : STD_LOGIC;
  SIGNAL and_dcpl_178 : STD_LOGIC;
  SIGNAL mux_tmp_260 : STD_LOGIC;
  SIGNAL mux_tmp_261 : STD_LOGIC;
  SIGNAL and_dcpl_183 : STD_LOGIC;
  SIGNAL and_dcpl_185 : STD_LOGIC;
  SIGNAL or_dcpl_156 : STD_LOGIC;
  SIGNAL and_dcpl_189 : STD_LOGIC;
  SIGNAL and_dcpl_192 : STD_LOGIC;
  SIGNAL and_dcpl_194 : STD_LOGIC;
  SIGNAL and_dcpl_195 : STD_LOGIC;
  SIGNAL and_dcpl_196 : STD_LOGIC;
  SIGNAL and_dcpl_197 : STD_LOGIC;
  SIGNAL and_dcpl_198 : STD_LOGIC;
  SIGNAL and_dcpl_204 : STD_LOGIC;
  SIGNAL and_dcpl_205 : STD_LOGIC;
  SIGNAL and_dcpl_208 : STD_LOGIC;
  SIGNAL and_dcpl_210 : STD_LOGIC;
  SIGNAL and_dcpl_211 : STD_LOGIC;
  SIGNAL and_dcpl_212 : STD_LOGIC;
  SIGNAL and_dcpl_213 : STD_LOGIC;
  SIGNAL and_dcpl_214 : STD_LOGIC;
  SIGNAL nor_tmp_95 : STD_LOGIC;
  SIGNAL and_dcpl_228 : STD_LOGIC;
  SIGNAL and_dcpl_232 : STD_LOGIC;
  SIGNAL and_dcpl_233 : STD_LOGIC;
  SIGNAL and_dcpl_234 : STD_LOGIC;
  SIGNAL and_dcpl_235 : STD_LOGIC;
  SIGNAL and_dcpl_238 : STD_LOGIC;
  SIGNAL and_dcpl_240 : STD_LOGIC;
  SIGNAL and_dcpl_241 : STD_LOGIC;
  SIGNAL and_dcpl_242 : STD_LOGIC;
  SIGNAL and_dcpl_243 : STD_LOGIC;
  SIGNAL and_dcpl_245 : STD_LOGIC;
  SIGNAL and_dcpl_247 : STD_LOGIC;
  SIGNAL or_tmp_313 : STD_LOGIC;
  SIGNAL mux_tmp_277 : STD_LOGIC;
  SIGNAL or_tmp_314 : STD_LOGIC;
  SIGNAL or_tmp_316 : STD_LOGIC;
  SIGNAL mux_tmp_278 : STD_LOGIC;
  SIGNAL mux_tmp_283 : STD_LOGIC;
  SIGNAL and_dcpl_256 : STD_LOGIC;
  SIGNAL and_dcpl_257 : STD_LOGIC;
  SIGNAL and_dcpl_259 : STD_LOGIC;
  SIGNAL and_dcpl_260 : STD_LOGIC;
  SIGNAL and_dcpl_261 : STD_LOGIC;
  SIGNAL and_dcpl_262 : STD_LOGIC;
  SIGNAL and_dcpl_263 : STD_LOGIC;
  SIGNAL and_dcpl_264 : STD_LOGIC;
  SIGNAL and_dcpl_265 : STD_LOGIC;
  SIGNAL and_dcpl_266 : STD_LOGIC;
  SIGNAL and_dcpl_267 : STD_LOGIC;
  SIGNAL and_dcpl_268 : STD_LOGIC;
  SIGNAL and_dcpl_269 : STD_LOGIC;
  SIGNAL and_dcpl_272 : STD_LOGIC;
  SIGNAL and_dcpl_274 : STD_LOGIC;
  SIGNAL and_dcpl_275 : STD_LOGIC;
  SIGNAL and_dcpl_276 : STD_LOGIC;
  SIGNAL and_dcpl_277 : STD_LOGIC;
  SIGNAL and_dcpl_278 : STD_LOGIC;
  SIGNAL and_dcpl_279 : STD_LOGIC;
  SIGNAL and_dcpl_280 : STD_LOGIC;
  SIGNAL and_dcpl_281 : STD_LOGIC;
  SIGNAL and_dcpl_282 : STD_LOGIC;
  SIGNAL and_dcpl_283 : STD_LOGIC;
  SIGNAL and_dcpl_284 : STD_LOGIC;
  SIGNAL and_dcpl_285 : STD_LOGIC;
  SIGNAL and_dcpl_286 : STD_LOGIC;
  SIGNAL and_dcpl_287 : STD_LOGIC;
  SIGNAL and_dcpl_288 : STD_LOGIC;
  SIGNAL and_dcpl_289 : STD_LOGIC;
  SIGNAL and_dcpl_290 : STD_LOGIC;
  SIGNAL and_dcpl_291 : STD_LOGIC;
  SIGNAL and_dcpl_292 : STD_LOGIC;
  SIGNAL and_dcpl_293 : STD_LOGIC;
  SIGNAL and_dcpl_294 : STD_LOGIC;
  SIGNAL and_dcpl_295 : STD_LOGIC;
  SIGNAL and_dcpl_296 : STD_LOGIC;
  SIGNAL and_dcpl_297 : STD_LOGIC;
  SIGNAL and_dcpl_298 : STD_LOGIC;
  SIGNAL and_dcpl_299 : STD_LOGIC;
  SIGNAL and_dcpl_300 : STD_LOGIC;
  SIGNAL and_dcpl_301 : STD_LOGIC;
  SIGNAL and_dcpl_302 : STD_LOGIC;
  SIGNAL and_dcpl_303 : STD_LOGIC;
  SIGNAL and_dcpl_304 : STD_LOGIC;
  SIGNAL and_dcpl_305 : STD_LOGIC;
  SIGNAL and_dcpl_306 : STD_LOGIC;
  SIGNAL and_dcpl_307 : STD_LOGIC;
  SIGNAL and_dcpl_308 : STD_LOGIC;
  SIGNAL and_dcpl_309 : STD_LOGIC;
  SIGNAL and_dcpl_310 : STD_LOGIC;
  SIGNAL and_dcpl_311 : STD_LOGIC;
  SIGNAL and_dcpl_312 : STD_LOGIC;
  SIGNAL and_dcpl_313 : STD_LOGIC;
  SIGNAL and_dcpl_314 : STD_LOGIC;
  SIGNAL and_dcpl_315 : STD_LOGIC;
  SIGNAL and_dcpl_316 : STD_LOGIC;
  SIGNAL and_dcpl_317 : STD_LOGIC;
  SIGNAL and_dcpl_318 : STD_LOGIC;
  SIGNAL and_dcpl_319 : STD_LOGIC;
  SIGNAL and_dcpl_320 : STD_LOGIC;
  SIGNAL and_dcpl_321 : STD_LOGIC;
  SIGNAL and_dcpl_322 : STD_LOGIC;
  SIGNAL and_dcpl_323 : STD_LOGIC;
  SIGNAL and_dcpl_324 : STD_LOGIC;
  SIGNAL and_dcpl_325 : STD_LOGIC;
  SIGNAL and_dcpl_328 : STD_LOGIC;
  SIGNAL and_dcpl_329 : STD_LOGIC;
  SIGNAL and_dcpl_332 : STD_LOGIC;
  SIGNAL and_dcpl_335 : STD_LOGIC;
  SIGNAL and_dcpl_337 : STD_LOGIC;
  SIGNAL and_dcpl_342 : STD_LOGIC;
  SIGNAL and_dcpl_348 : STD_LOGIC;
  SIGNAL or_dcpl_166 : STD_LOGIC;
  SIGNAL or_tmp_324 : STD_LOGIC;
  SIGNAL mux_tmp_291 : STD_LOGIC;
  SIGNAL and_dcpl_356 : STD_LOGIC;
  SIGNAL or_tmp_329 : STD_LOGIC;
  SIGNAL and_dcpl_359 : STD_LOGIC;
  SIGNAL and_dcpl_361 : STD_LOGIC;
  SIGNAL and_dcpl_366 : STD_LOGIC;
  SIGNAL and_dcpl_367 : STD_LOGIC;
  SIGNAL and_dcpl_368 : STD_LOGIC;
  SIGNAL and_dcpl_373 : STD_LOGIC;
  SIGNAL and_dcpl_374 : STD_LOGIC;
  SIGNAL or_tmp_340 : STD_LOGIC;
  SIGNAL and_dcpl_378 : STD_LOGIC;
  SIGNAL and_dcpl_384 : STD_LOGIC;
  SIGNAL and_dcpl_386 : STD_LOGIC;
  SIGNAL and_dcpl_387 : STD_LOGIC;
  SIGNAL and_dcpl_388 : STD_LOGIC;
  SIGNAL nor_tmp_98 : STD_LOGIC;
  SIGNAL and_dcpl_395 : STD_LOGIC;
  SIGNAL and_dcpl_396 : STD_LOGIC;
  SIGNAL and_dcpl_399 : STD_LOGIC;
  SIGNAL and_dcpl_403 : STD_LOGIC;
  SIGNAL and_dcpl_404 : STD_LOGIC;
  SIGNAL and_dcpl_405 : STD_LOGIC;
  SIGNAL and_dcpl_406 : STD_LOGIC;
  SIGNAL and_dcpl_407 : STD_LOGIC;
  SIGNAL or_dcpl_179 : STD_LOGIC;
  SIGNAL or_tmp_348 : STD_LOGIC;
  SIGNAL or_tmp_349 : STD_LOGIC;
  SIGNAL and_dcpl_419 : STD_LOGIC;
  SIGNAL not_tmp_260 : STD_LOGIC;
  SIGNAL or_tmp_354 : STD_LOGIC;
  SIGNAL and_dcpl_440 : STD_LOGIC;
  SIGNAL and_dcpl_445 : STD_LOGIC;
  SIGNAL and_dcpl_446 : STD_LOGIC;
  SIGNAL and_dcpl_447 : STD_LOGIC;
  SIGNAL and_dcpl_450 : STD_LOGIC;
  SIGNAL and_dcpl_454 : STD_LOGIC;
  SIGNAL or_tmp_373 : STD_LOGIC;
  SIGNAL mux_tmp_356 : STD_LOGIC;
  SIGNAL nor_tmp_109 : STD_LOGIC;
  SIGNAL and_dcpl_458 : STD_LOGIC;
  SIGNAL and_dcpl_460 : STD_LOGIC;
  SIGNAL and_dcpl_461 : STD_LOGIC;
  SIGNAL and_dcpl_468 : STD_LOGIC;
  SIGNAL not_tmp_296 : STD_LOGIC;
  SIGNAL and_dcpl_474 : STD_LOGIC;
  SIGNAL or_tmp_449 : STD_LOGIC;
  SIGNAL mux_tmp_402 : STD_LOGIC;
  SIGNAL mux_tmp_405 : STD_LOGIC;
  SIGNAL and_dcpl_477 : STD_LOGIC;
  SIGNAL and_dcpl_494 : STD_LOGIC;
  SIGNAL and_dcpl_496 : STD_LOGIC;
  SIGNAL and_dcpl_497 : STD_LOGIC;
  SIGNAL and_dcpl_500 : STD_LOGIC;
  SIGNAL or_tmp_496 : STD_LOGIC;
  SIGNAL mux_tmp_458 : STD_LOGIC;
  SIGNAL or_tmp_497 : STD_LOGIC;
  SIGNAL or_tmp_499 : STD_LOGIC;
  SIGNAL or_tmp_500 : STD_LOGIC;
  SIGNAL or_tmp_502 : STD_LOGIC;
  SIGNAL or_tmp_511 : STD_LOGIC;
  SIGNAL and_dcpl_505 : STD_LOGIC;
  SIGNAL or_tmp_523 : STD_LOGIC;
  SIGNAL and_dcpl_514 : STD_LOGIC;
  SIGNAL nor_tmp_140 : STD_LOGIC;
  SIGNAL and_dcpl_530 : STD_LOGIC;
  SIGNAL and_dcpl_545 : STD_LOGIC;
  SIGNAL mux_tmp_584 : STD_LOGIC;
  SIGNAL or_tmp_646 : STD_LOGIC;
  SIGNAL nor_tmp_145 : STD_LOGIC;
  SIGNAL xor_dcpl_4 : STD_LOGIC;
  SIGNAL and_dcpl_553 : STD_LOGIC;
  SIGNAL and_dcpl_556 : STD_LOGIC;
  SIGNAL mux_tmp_606 : STD_LOGIC;
  SIGNAL or_tmp_676 : STD_LOGIC;
  SIGNAL or_tmp_707 : STD_LOGIC;
  SIGNAL or_tmp_712 : STD_LOGIC;
  SIGNAL or_tmp_726 : STD_LOGIC;
  SIGNAL mux_tmp_665 : STD_LOGIC;
  SIGNAL and_dcpl_581 : STD_LOGIC;
  SIGNAL and_dcpl_583 : STD_LOGIC;
  SIGNAL or_tmp_766 : STD_LOGIC;
  SIGNAL and_dcpl_584 : STD_LOGIC;
  SIGNAL and_dcpl_587 : STD_LOGIC;
  SIGNAL and_dcpl_588 : STD_LOGIC;
  SIGNAL or_dcpl_202 : STD_LOGIC;
  SIGNAL mux_tmp_681 : STD_LOGIC;
  SIGNAL and_dcpl_606 : STD_LOGIC;
  SIGNAL and_dcpl_612 : STD_LOGIC;
  SIGNAL nor_tmp_171 : STD_LOGIC;
  SIGNAL or_tmp_831 : STD_LOGIC;
  SIGNAL mux_tmp_728 : STD_LOGIC;
  SIGNAL or_tmp_849 : STD_LOGIC;
  SIGNAL or_dcpl_205 : STD_LOGIC;
  SIGNAL not_tmp_460 : STD_LOGIC;
  SIGNAL or_tmp_874 : STD_LOGIC;
  SIGNAL nor_tmp_182 : STD_LOGIC;
  SIGNAL and_dcpl_630 : STD_LOGIC;
  SIGNAL or_tmp_907 : STD_LOGIC;
  SIGNAL or_tmp_911 : STD_LOGIC;
  SIGNAL mux_tmp_808 : STD_LOGIC;
  SIGNAL or_dcpl_210 : STD_LOGIC;
  SIGNAL not_tmp_504 : STD_LOGIC;
  SIGNAL or_tmp_927 : STD_LOGIC;
  SIGNAL not_tmp_512 : STD_LOGIC;
  SIGNAL or_tmp_943 : STD_LOGIC;
  SIGNAL and_dcpl_640 : STD_LOGIC;
  SIGNAL mux_tmp_848 : STD_LOGIC;
  SIGNAL or_tmp_976 : STD_LOGIC;
  SIGNAL and_dcpl_655 : STD_LOGIC;
  SIGNAL or_tmp_979 : STD_LOGIC;
  SIGNAL and_dcpl_659 : STD_LOGIC;
  SIGNAL and_dcpl_661 : STD_LOGIC;
  SIGNAL and_dcpl_662 : STD_LOGIC;
  SIGNAL not_tmp_552 : STD_LOGIC;
  SIGNAL mux_tmp_956 : STD_LOGIC;
  SIGNAL or_tmp_1058 : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_1_and_cse : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_3_INIT_2D_MEM_LOOP_2_3_nor_itm : STD_LOGIC;
  SIGNAL exitL_exit_LINEAR_FORWARD_NO_MUL_LOOP_5_3_lpi_2 : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_1_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs_mx1
      : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_3_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs_mx1
      : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_2_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs_mx1
      : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_4_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs_mx1
      : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1 : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm :
      STD_LOGIC;
  SIGNAL exit_LINEAR_FORWARD_NO_MUL_LOOP_4_lpi_3_dfm_2 : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_and_1_mdf_sva : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs_mx1
      : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_3_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs_mx1
      : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_2_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs_mx1
      : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_4_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs_mx1
      : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_3_stage_0_2 : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_2_1_slc_40_1_svs : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_39 : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_39 : STD_LOGIC;
  SIGNAL and_254_ssc : STD_LOGIC;
  SIGNAL and_255_ssc : STD_LOGIC;
  SIGNAL and_257_ssc : STD_LOGIC;
  SIGNAL and_461_ssc : STD_LOGIC;
  SIGNAL and_462_ssc : STD_LOGIC;
  SIGNAL and_463_ssc : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_38_18
      : STD_LOGIC_VECTOR (20 DOWNTO 0);
  SIGNAL mux_234_seb : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_39 : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_38_30 : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_45_sdt : STD_LOGIC_VECTOR (13 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_45_itm_13_9 : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_45_itm_8_0 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL attention_round_1_qr_39_16_3_lpi_3_dfm_23_20 : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_and_ssc : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_and_ssc : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_read_rom_v_weights_rom_map_1_sdt
      : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_and_1_ssc : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_40_sdt : STD_LOGIC_VECTOR (18 DOWNTO
      0);
  SIGNAL SF_LOOP_3_acc_38_sdt : STD_LOGIC_VECTOR (18 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_1_and_ssc : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_3_and_ssc : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_14_sdt : STD_LOGIC_VECTOR (40 DOWNTO
      0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_3_and_1_ssc : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_and_ssc : STD_LOGIC;
  SIGNAL or_1327_cse : STD_LOGIC;
  SIGNAL and_863_cse : STD_LOGIC;
  SIGNAL or_1328_cse : STD_LOGIC;
  SIGNAL reg_strm_out_rsci_iswt0_cse : STD_LOGIC;
  SIGNAL reg_strm_in_rsci_iswt0_cse : STD_LOGIC;
  SIGNAL or_412_cse : STD_LOGIC;
  SIGNAL or_455_cse : STD_LOGIC;
  SIGNAL and_850_cse : STD_LOGIC;
  SIGNAL or_616_cse : STD_LOGIC;
  SIGNAL or_1363_cse : STD_LOGIC;
  SIGNAL nor_83_cse : STD_LOGIC;
  SIGNAL nor_414_cse : STD_LOGIC;
  SIGNAL nor_372_cse : STD_LOGIC;
  SIGNAL or_601_cse : STD_LOGIC;
  SIGNAL or_607_cse : STD_LOGIC;
  SIGNAL or_1326_cse : STD_LOGIC;
  SIGNAL nor_371_cse : STD_LOGIC;
  SIGNAL and_849_cse : STD_LOGIC;
  SIGNAL or_369_cse : STD_LOGIC;
  SIGNAL or_811_cse : STD_LOGIC;
  SIGNAL nand_158_cse : STD_LOGIC;
  SIGNAL or_966_cse : STD_LOGIC;
  SIGNAL or_955_cse : STD_LOGIC;
  SIGNAL or_454_cse : STD_LOGIC;
  SIGNAL and_864_cse : STD_LOGIC;
  SIGNAL or_629_cse : STD_LOGIC;
  SIGNAL nand_170_cse : STD_LOGIC;
  SIGNAL nand_175_cse : STD_LOGIC;
  SIGNAL nor_552_cse : STD_LOGIC;
  SIGNAL and_855_cse : STD_LOGIC;
  SIGNAL and_745_cse : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_3_and_2_cse : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_and_5_cse : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_and_4_cse : STD_LOGIC;
  SIGNAL or_1325_cse : STD_LOGIC;
  SIGNAL nand_160_cse : STD_LOGIC;
  SIGNAL and_19_cse : STD_LOGIC;
  SIGNAL or_645_cse : STD_LOGIC;
  SIGNAL or_1217_cse : STD_LOGIC;
  SIGNAL and_929_cse : STD_LOGIC;
  SIGNAL or_1017_cse : STD_LOGIC;
  SIGNAL or_113_cse : STD_LOGIC;
  SIGNAL nor_581_cse : STD_LOGIC;
  SIGNAL nor_315_cse : STD_LOGIC;
  SIGNAL and_747_cse : STD_LOGIC;
  SIGNAL or_935_cse : STD_LOGIC;
  SIGNAL or_6_cse : STD_LOGIC;
  SIGNAL and_944_cse : STD_LOGIC;
  SIGNAL and_882_cse : STD_LOGIC;
  SIGNAL or_586_cse : STD_LOGIC;
  SIGNAL nor_439_cse : STD_LOGIC;
  SIGNAL or_604_cse : STD_LOGIC;
  SIGNAL or_80_cse : STD_LOGIC;
  SIGNAL nor_428_cse : STD_LOGIC;
  SIGNAL or_722_cse : STD_LOGIC;
  SIGNAL nor_398_cse : STD_LOGIC;
  SIGNAL mux_716_cse : STD_LOGIC;
  SIGNAL or_788_cse : STD_LOGIC;
  SIGNAL or_1283_cse : STD_LOGIC;
  SIGNAL or_553_cse : STD_LOGIC;
  SIGNAL nor_419_cse : STD_LOGIC;
  SIGNAL and_878_cse : STD_LOGIC;
  SIGNAL or_614_cse : STD_LOGIC;
  SIGNAL and_971_cse : STD_LOGIC;
  SIGNAL mux_797_cse : STD_LOGIC;
  SIGNAL ATTN_2D_LOOP_3_or_cse : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_cse : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_1_cse : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_2_cse : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_4_cse : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_5_cse : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_6_cse : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_7_cse : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_38_cse : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_39_cse : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_41_cse : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_43_cse : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_48_cse : STD_LOGIC;
  SIGNAL for_for_or_cse : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_acc_185_sdt : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL mux_220_ssc : STD_LOGIC;
  SIGNAL reg_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_a_32_0_ftd : STD_LOGIC;
  SIGNAL reg_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_a_32_0_ftd_1 : STD_LOGIC;
  SIGNAL and_274_ssc : STD_LOGIC;
  SIGNAL and_277_ssc : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_1_or_ssc : STD_LOGIC;
  SIGNAL and_447_ssc : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_1_qif_read_rom_v_cache_rom_map_1_sdt : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_and_ssc : STD_LOGIC;
  SIGNAL reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd
      : STD_LOGIC;
  SIGNAL reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1
      : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_2
      : STD_LOGIC_VECTOR (14 DOWNTO 0);
  SIGNAL rms_norm_384_div_cmp_b_60 : STD_LOGIC;
  SIGNAL and_528_seb : STD_LOGIC;
  SIGNAL SF_LOOP_3_acc_5_psp_sva_9 : STD_LOGIC;
  SIGNAL SF_LOOP_3_acc_5_psp_sva_8_0 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL attention_sqrt_1_for_i_and_ssc : STD_LOGIC;
  SIGNAL attention_sqrt_1_for_i_4_0_sva_4_3 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL attention_sqrt_1_for_i_4_0_sva_2_0 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_59_58
      : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_57_39
      : STD_LOGIC_VECTOR (18 DOWNTO 0);
  SIGNAL rms_norm_384_div_cmp_b_59_39 : STD_LOGIC_VECTOR (20 DOWNTO 0);
  SIGNAL rms_norm_384_div_cmp_b_38_20 : STD_LOGIC_VECTOR (18 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_acc_34_sdt : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL and_667_ssc : STD_LOGIC;
  SIGNAL and_668_ssc : STD_LOGIC;
  SIGNAL and_688_ssc : STD_LOGIC;
  SIGNAL SF_LOOP_3_acc_86_sdt : STD_LOGIC_VECTOR (12 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_87_sdt : STD_LOGIC_VECTOR (14 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_read_rom_q_weights_rom_map_1_sdt
      : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_or_5_cse : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_or_6_cse : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_or_8_cse : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_or_4_cse : STD_LOGIC;
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_1_or_cse : STD_LOGIC;
  SIGNAL or_368_cse : STD_LOGIC;
  SIGNAL mux_445_cse : STD_LOGIC;
  SIGNAL nor_501_cse : STD_LOGIC;
  SIGNAL reg_GEMM_3D_FLOAT_LOOP_4_acc_96_cse : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL mux_967_cse : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_and_1_rgt : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_and_3_rgt : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_and_5_rgt : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_or_2_m1c : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_or_5_m1c : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_or_2_m1c : STD_LOGIC;
  SIGNAL and_198_ssc : STD_LOGIC;
  SIGNAL and_202_ssc : STD_LOGIC;
  SIGNAL SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b_39 : STD_LOGIC;
  SIGNAL SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b_14_0 : STD_LOGIC_VECTOR (14 DOWNTO
      0);
  SIGNAL and_195_ssc : STD_LOGIC;
  SIGNAL and_197_ssc : STD_LOGIC;
  SIGNAL SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a_55 : STD_LOGIC;
  SIGNAL SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a_54_31 : STD_LOGIC_VECTOR (23 DOWNTO
      0);
  SIGNAL SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a_30_16 : STD_LOGIC_VECTOR (14 DOWNTO
      0);
  SIGNAL or_436_ssc : STD_LOGIC;
  SIGNAL and_188_ssc : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_a_71
      : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_a_46_32
      : STD_LOGIC_VECTOR (14 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_15
      : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_14_2
      : STD_LOGIC_VECTOR (12 DOWNTO 0);
  SIGNAL and_173_ssc : STD_LOGIC;
  SIGNAL rms_norm_384_div_cmp_a_71 : STD_LOGIC;
  SIGNAL rms_norm_384_div_cmp_a_70_47 : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL rms_norm_384_div_cmp_a_46_32 : STD_LOGIC_VECTOR (14 DOWNTO 0);
  SIGNAL rms_norm_384_div_cmp_b_15 : STD_LOGIC;
  SIGNAL rms_norm_384_div_cmp_b_14_5 : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_29_15 : STD_LOGIC_VECTOR
      (14 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_14_0 : STD_LOGIC_VECTOR (14
      DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_1_max_val_and_1_ssc : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_38_15 : STD_LOGIC_VECTOR (23
      DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_14_0 : STD_LOGIC_VECTOR (14 DOWNTO
      0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_max_val_and_1_ssc : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_38_15 : STD_LOGIC_VECTOR (23 DOWNTO
      0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_14_0 : STD_LOGIC_VECTOR (14 DOWNTO
      0);
  SIGNAL CACHE_UPDATE_LOOP_3_1_CACHE_UPDATE_LOOP_3_1_nand_ssc : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_and_cse : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_57_cse : STD_LOGIC;
  SIGNAL attention_sqrt_1_for_i_4_0_sva_mx0c3 : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_lpi_3_mx0c2 : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_mx0c2 : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_dfm_mx1c2 : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_acc_13_psp_mx0c1 : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_13_sdt_mx0c1 : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_12_sdt_mx0c1 : STD_LOGIC;
  SIGNAL SF_LOOP_3_SF_LOOP_3_or_24_rmff : STD_LOGIC;
  SIGNAL SF_LOOP_3_SF_LOOP_3_or_20_rmff : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_nand_rmff : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_mux1h_17_rmff : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_mux1h_16_rmff : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_nand_1_rmff : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_3_l_2_0_lpi_3_dfm_1_0_1 : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_5_2 : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_acc_252_psp : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_acc_21_cse_sva : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_acc_251_psp : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_acc_45_psp : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_acc_248_psp : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_acc_247_psp : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_acc_28_cse_sva : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_acc_246_psp : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_acc_23_cse_sva : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_acc_245_psp : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_acc_244_psp : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0 : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_acc_20_itm : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_acc_250_sdt_2_0 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_acc_41_psp : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_lpi_3_6_0 : STD_LOGIC_VECTOR (6
      DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_dfm_6_0 : STD_LOGIC_VECTOR
      (6 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_acc_43_psp : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_acc_42_psp : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_6_0 : STD_LOGIC_VECTOR (6
      DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_acc_243_sdt_2_0 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_acc_40_cse_sva : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_1_qif_acc_3_ncse_2_0 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_1_l_2_0_lpi_3_1_0 : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_l_2_0_lpi_3_dfm_1_0_1 : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_13_sdt_39_0 : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_12_sdt_39_0 : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_acc_13_psp_39_0 : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_5_psp_sva_21 : STD_LOGIC;
  SIGNAL SF_LOOP_3_acc_5_psp_sva_19_17 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_90_psp_1 : STD_LOGIC_VECTOR (14 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_7_psp_sva_1 : STD_LOGIC_VECTOR (17 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_53_itm_27_24 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_53_itm_23_15 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_53_itm_14_9 : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_53_itm_8_0 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_acc_193_itm : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_mul_sdt_1_sva_mx0w5 : STD_LOGIC_VECTOR (4 DOWNTO
      0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_mul_sdt_15_sva : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_acc_34_sdt : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_k_5_0_sva_1_3_0 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva_2 : STD_LOGIC_VECTOR (4 DOWNTO
      0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_1_LINEAR_FORWARD_NO_MUL_LOOP_5_1_and_1_cse_1
      : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_2_exs_2_0 : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_and_ssc : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_4_2 : STD_LOGIC_VECTOR (2 DOWNTO
      0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_and_1_ssc : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva_4_2 : STD_LOGIC_VECTOR (2 DOWNTO
      0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva_1_0 : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_sqrt_for_i_4_0_sva_1_mx0w0 : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_mux1h_1_rmff_3_1 : STD_LOGIC_VECTOR (2 DOWNTO
      0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_mux1h_1_rmff_0 : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_qif_read_rom_k_cache_rom_map_1_itm : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_39_itm : STD_LOGIC_VECTOR (17 DOWNTO
      0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_itm : STD_LOGIC_VECTOR
      (16 DOWNTO 0);
  SIGNAL SF_LOOP_3_and_itm : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_cosval_read_rom_cos_tab_rom_map_1_itm : STD_LOGIC_VECTOR
      (16 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_47_itm : STD_LOGIC_VECTOR (19 DOWNTO 0);
  SIGNAL mux_502_itm : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_read_rom_ln_weight_rom_map_1_itm : STD_LOGIC_VECTOR (12
      DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_read_rom_ln_weight_in_rom_map_1_itm : STD_LOGIC_VECTOR (11
      DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_or_itm : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_or_1_itm : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_12_itm : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_13_itm : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_read_rom_k_weights_rom_map_1_itm
      : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_1_weight_val_lshift_itm : STD_LOGIC_VECTOR
      (6 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_lshift_itm : STD_LOGIC_VECTOR
      (6 DOWNTO 0);
  SIGNAL and_677_itm : STD_LOGIC;
  SIGNAL and_678_itm : STD_LOGIC;
  SIGNAL and_679_itm : STD_LOGIC;
  SIGNAL and_682_itm : STD_LOGIC;
  SIGNAL and_683_itm : STD_LOGIC;
  SIGNAL and_684_itm : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_56_itm : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_82_itm : STD_LOGIC_VECTOR (2 DOWNTO
      0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_read_rom_o_weights_rom_map_1_itm
      : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_lshift_itm : STD_LOGIC_VECTOR (6
      DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_3_weight_val_lshift_itm : STD_LOGIC_VECTOR
      (6 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_11_itm : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL mux_328_itm : STD_LOGIC;
  SIGNAL mux_946_itm : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_10_itm : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_or_7_itm : STD_LOGIC;
  SIGNAL z_out : STD_LOGIC_VECTOR (37 DOWNTO 0);
  SIGNAL and_dcpl_728 : STD_LOGIC;
  SIGNAL z_out_2 : STD_LOGIC_VECTOR (21 DOWNTO 0);
  SIGNAL and_dcpl_749 : STD_LOGIC;
  SIGNAL and_dcpl_763 : STD_LOGIC;
  SIGNAL z_out_4 : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL z_out_5 : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL and_dcpl_787 : STD_LOGIC;
  SIGNAL and_dcpl_790 : STD_LOGIC;
  SIGNAL and_dcpl_795 : STD_LOGIC;
  SIGNAL and_dcpl_800 : STD_LOGIC;
  SIGNAL and_dcpl_804 : STD_LOGIC;
  SIGNAL z_out_6 : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL z_out_7 : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL and_dcpl_829 : STD_LOGIC;
  SIGNAL z_out_8 : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL and_dcpl_855 : STD_LOGIC;
  SIGNAL and_dcpl_856 : STD_LOGIC;
  SIGNAL and_dcpl_874 : STD_LOGIC;
  SIGNAL and_dcpl_877 : STD_LOGIC;
  SIGNAL z_out_9 : STD_LOGIC_VECTOR (42 DOWNTO 0);
  SIGNAL and_dcpl_880 : STD_LOGIC;
  SIGNAL and_dcpl_884 : STD_LOGIC;
  SIGNAL and_dcpl_885 : STD_LOGIC;
  SIGNAL and_dcpl_887 : STD_LOGIC;
  SIGNAL and_dcpl_889 : STD_LOGIC;
  SIGNAL and_dcpl_893 : STD_LOGIC;
  SIGNAL and_dcpl_897 : STD_LOGIC;
  SIGNAL and_dcpl_898 : STD_LOGIC;
  SIGNAL and_dcpl_901 : STD_LOGIC;
  SIGNAL and_dcpl_902 : STD_LOGIC;
  SIGNAL and_dcpl_905 : STD_LOGIC;
  SIGNAL and_dcpl_914 : STD_LOGIC;
  SIGNAL and_dcpl_922 : STD_LOGIC;
  SIGNAL and_dcpl_924 : STD_LOGIC;
  SIGNAL z_out_10 : STD_LOGIC_VECTOR (67 DOWNTO 0);
  SIGNAL and_dcpl_932 : STD_LOGIC;
  SIGNAL and_dcpl_939 : STD_LOGIC;
  SIGNAL and_dcpl_940 : STD_LOGIC;
  SIGNAL and_dcpl_944 : STD_LOGIC;
  SIGNAL and_dcpl_946 : STD_LOGIC;
  SIGNAL and_dcpl_947 : STD_LOGIC;
  SIGNAL and_dcpl_950 : STD_LOGIC;
  SIGNAL and_dcpl_955 : STD_LOGIC;
  SIGNAL z_out_11 : STD_LOGIC_VECTOR (99 DOWNTO 0);
  SIGNAL and_dcpl_962 : STD_LOGIC;
  SIGNAL and_dcpl_963 : STD_LOGIC;
  SIGNAL and_dcpl_969 : STD_LOGIC;
  SIGNAL and_dcpl_970 : STD_LOGIC;
  SIGNAL and_dcpl_973 : STD_LOGIC;
  SIGNAL and_dcpl_976 : STD_LOGIC;
  SIGNAL and_dcpl_978 : STD_LOGIC;
  SIGNAL z_out_12 : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL and_dcpl_1000 : STD_LOGIC;
  SIGNAL and_dcpl_1006 : STD_LOGIC;
  SIGNAL z_out_14 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL and_dcpl_1029 : STD_LOGIC;
  SIGNAL z_out_15 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL and_dcpl_1057 : STD_LOGIC;
  SIGNAL z_out_16 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL and_dcpl_1070 : STD_LOGIC;
  SIGNAL and_dcpl_1075 : STD_LOGIC;
  SIGNAL and_dcpl_1079 : STD_LOGIC;
  SIGNAL and_dcpl_1080 : STD_LOGIC;
  SIGNAL and_dcpl_1083 : STD_LOGIC;
  SIGNAL and_dcpl_1084 : STD_LOGIC;
  SIGNAL z_out_17 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL and_dcpl_1097 : STD_LOGIC;
  SIGNAL and_dcpl_1103 : STD_LOGIC;
  SIGNAL and_dcpl_1105 : STD_LOGIC;
  SIGNAL and_dcpl_1112 : STD_LOGIC;
  SIGNAL z_out_18 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL and_dcpl_1136 : STD_LOGIC;
  SIGNAL z_out_19 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL not_tmp_753 : STD_LOGIC;
  SIGNAL not_tmp_754 : STD_LOGIC;
  SIGNAL z_out_20 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL and_dcpl_1178 : STD_LOGIC;
  SIGNAL z_out_21 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL and_dcpl_1186 : STD_LOGIC;
  SIGNAL and_dcpl_1201 : STD_LOGIC;
  SIGNAL and_dcpl_1206 : STD_LOGIC;
  SIGNAL and_dcpl_1208 : STD_LOGIC;
  SIGNAL z_out_22 : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL z_out_23 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL and_dcpl_1238 : STD_LOGIC;
  SIGNAL and_dcpl_1239 : STD_LOGIC;
  SIGNAL and_dcpl_1240 : STD_LOGIC;
  SIGNAL and_dcpl_1245 : STD_LOGIC;
  SIGNAL and_dcpl_1249 : STD_LOGIC;
  SIGNAL and_dcpl_1254 : STD_LOGIC;
  SIGNAL and_dcpl_1257 : STD_LOGIC;
  SIGNAL z_out_24 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL z_out_25 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL and_dcpl_1291 : STD_LOGIC;
  SIGNAL and_dcpl_1295 : STD_LOGIC;
  SIGNAL and_dcpl_1301 : STD_LOGIC;
  SIGNAL and_dcpl_1306 : STD_LOGIC;
  SIGNAL z_out_26 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL or_tmp_1137 : STD_LOGIC;
  SIGNAL z_out_27 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL and_dcpl_1337 : STD_LOGIC;
  SIGNAL and_dcpl_1344 : STD_LOGIC;
  SIGNAL z_out_28 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL and_dcpl_1346 : STD_LOGIC;
  SIGNAL z_out_29 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL z_out_31 : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL and_dcpl_1385 : STD_LOGIC;
  SIGNAL and_dcpl_1388 : STD_LOGIC;
  SIGNAL and_dcpl_1392 : STD_LOGIC;
  SIGNAL and_dcpl_1393 : STD_LOGIC;
  SIGNAL and_dcpl_1398 : STD_LOGIC;
  SIGNAL and_dcpl_1400 : STD_LOGIC;
  SIGNAL and_dcpl_1402 : STD_LOGIC;
  SIGNAL and_dcpl_1403 : STD_LOGIC;
  SIGNAL and_dcpl_1407 : STD_LOGIC;
  SIGNAL and_dcpl_1411 : STD_LOGIC;
  SIGNAL z_out_32 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL z_out_33 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL and_dcpl_1440 : STD_LOGIC;
  SIGNAL z_out_34 : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL or_tmp_1208 : STD_LOGIC;
  SIGNAL nor_tmp_241 : STD_LOGIC;
  SIGNAL z_out_35 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL and_dcpl_1468 : STD_LOGIC;
  SIGNAL and_dcpl_1471 : STD_LOGIC;
  SIGNAL and_dcpl_1476 : STD_LOGIC;
  SIGNAL z_out_36 : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL and_dcpl_1498 : STD_LOGIC;
  SIGNAL z_out_37 : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL z_out_39 : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL z_out_40 : STD_LOGIC_VECTOR (41 DOWNTO 0);
  SIGNAL and_dcpl_1557 : STD_LOGIC;
  SIGNAL and_dcpl_1572 : STD_LOGIC;
  SIGNAL z_out_49 : STD_LOGIC_VECTOR (29 DOWNTO 0);
  SIGNAL z_out_50 : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL and_dcpl_1685 : STD_LOGIC;
  SIGNAL and_dcpl_1698 : STD_LOGIC;
  SIGNAL and_dcpl_1721 : STD_LOGIC;
  SIGNAL and_dcpl_1729 : STD_LOGIC;
  SIGNAL and_dcpl_1760 : STD_LOGIC;
  SIGNAL and_dcpl_1764 : STD_LOGIC;
  SIGNAL and_dcpl_1766 : STD_LOGIC;
  SIGNAL and_dcpl_1772 : STD_LOGIC;
  SIGNAL and_dcpl_1775 : STD_LOGIC;
  SIGNAL and_dcpl_1780 : STD_LOGIC;
  SIGNAL and_dcpl_1787 : STD_LOGIC;
  SIGNAL and_dcpl_1793 : STD_LOGIC;
  SIGNAL and_dcpl_1797 : STD_LOGIC;
  SIGNAL and_dcpl_1802 : STD_LOGIC;
  SIGNAL z_out_56 : STD_LOGIC_VECTOR (29 DOWNTO 0);
  SIGNAL z_out_57 : STD_LOGIC_VECTOR (30 DOWNTO 0);
  SIGNAL and_dcpl_1823 : STD_LOGIC;
  SIGNAL and_dcpl_1825 : STD_LOGIC;
  SIGNAL and_dcpl_1832 : STD_LOGIC;
  SIGNAL and_dcpl_1837 : STD_LOGIC;
  SIGNAL z_out_58 : STD_LOGIC_VECTOR (60 DOWNTO 0);
  SIGNAL and_dcpl_1840 : STD_LOGIC;
  SIGNAL and_dcpl_1852 : STD_LOGIC;
  SIGNAL and_dcpl_1853 : STD_LOGIC;
  SIGNAL and_dcpl_1855 : STD_LOGIC;
  SIGNAL and_dcpl_1857 : STD_LOGIC;
  SIGNAL and_dcpl_1869 : STD_LOGIC;
  SIGNAL and_dcpl_1870 : STD_LOGIC;
  SIGNAL z_out_59 : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL and_dcpl_1884 : STD_LOGIC;
  SIGNAL z_out_60 : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL and_dcpl_1901 : STD_LOGIC;
  SIGNAL z_out_61 : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL and_dcpl_1910 : STD_LOGIC;
  SIGNAL and_dcpl_1917 : STD_LOGIC;
  SIGNAL and_dcpl_1923 : STD_LOGIC;
  SIGNAL z_out_62 : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs
      : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_2_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs
      : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_3_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs
      : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_4_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs
      : STD_LOGIC;
  SIGNAL attention_exp_exp_half_mul_3_cse_sva : STD_LOGIC_VECTOR (79 DOWNTO 0);
  SIGNAL attention_abs_4_qif_acc_pmx_lpi_1_dfm : STD_LOGIC_VECTOR (30 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_1_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs
      : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_2_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs
      : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_3_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs
      : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_4_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs
      : STD_LOGIC;
  SIGNAL attention_sqrt_1_guess_sva_29_0 : STD_LOGIC_VECTOR (29 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_acc_13_psp : STD_LOGIC_VECTOR (40 DOWNTO 0);
  SIGNAL exitL_exit_LINEAR_FORWARD_NO_MUL_LOOP_5_3_lpi_2_mx0c2 : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_acc_17_sdt_mx0w7 : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm_mx0c5 : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_psp_sva_1 : STD_LOGIC_VECTOR (5 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_3_psp_sva_1 : STD_LOGIC_VECTOR (2
      DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_4_psp_sva_1 : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL attention_sqrt_1_guess_sva_29_0_mx0c0 : STD_LOGIC;
  SIGNAL attention_sqrt_1_guess_sva_29_0_mx0c2 : STD_LOGIC;
  SIGNAL attention_sqrt_1_guess_sva_29_0_mx0c3 : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_or_mx0w6 : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c1
      : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c2
      : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c5
      : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_acc_212_mx0w8 : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_itm_mx0c4
      : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_itm_mx0c7
      : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_itm_mx0c9
      : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_itm_mx0c10
      : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_acc_12_sdt_mx0w1 : STD_LOGIC_VECTOR (52 DOWNTO
      0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_8_sdt_mx0c0 : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_8_sdt_mx0c2 : STD_LOGIC;
  SIGNAL lfst_exit_LINEAR_FORWARD_NO_MUL_LOOP_4_sva_dfm_mx1w0 : STD_LOGIC;
  SIGNAL lfst_exit_LINEAR_FORWARD_NO_MUL_LOOP_4_3_sva_dfm_mx2w0 : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_acc_193_itm_mx0c0 : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_acc_193_itm_mx0c2 : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_and_4_ssc_1 : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_and_1_ssc_1 : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_nor_ssc_1 : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_and_5_ssc_1 : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_25_mx0w12 : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt_mx0c0 : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt_mx0c1 : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_acc_33_sdt_mx0w5 : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_mx0c0 : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_mx0c1 : STD_LOGIC;
  SIGNAL attention_round_qr_39_16_lpi_3_dfm_mx0w0 : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_mx0w2 : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_28_mx0w3 : STD_LOGIC_VECTOR (7 DOWNTO
      0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_mx0c0 : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_mx0c3 : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c0 : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c4 : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c5 : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c6 : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c7 : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_acc_36_sdt_mx0w5 : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_3 : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_2_l_2_0_lpi_3_dfm_1_0_1 : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_1_l_2_0_lpi_3_dfm_1_0_1 : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_acc_28_cse_sva_mx0w3 : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_acc_183_sdt_mx0w1 : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_acc_185_sdt_mx0w2 : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_k_5_0_sva_1_mx0w8 : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_11_sdt_1 : STD_LOGIC_VECTOR (56 DOWNTO
      0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_13_sdt_mx0w0 : STD_LOGIC_VECTOR (41 DOWNTO
      0);
  SIGNAL GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0_mx0c1 : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_qif_acc_5_sdt_1 : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_1_qif_acc_5_sdt_1 : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_acc_191_sdt_1 : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL SOFTMAX_LOOP_4_x_lpi_3_dfm_1_20_1_mx0w1 : STD_LOGIC_VECTOR (19 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_34_sdt_14_0_1 : STD_LOGIC_VECTOR (14 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_77_sdt_1 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL attention_exp_exp_half_mul_4_cse_sva_1 : STD_LOGIC_VECTOR (59 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_2_and_4_ssc_1 : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_nor_ssc_1 : STD_LOGIC;
  SIGNAL attention_abs_qif_acc_pmx_lpi_1_dfm_mx0_30_1 : STD_LOGIC_VECTOR (29 DOWNTO
      0);
  SIGNAL attention_max_attn_fixed_t_attention_max_attn_fixed_t_and_mut_mx0w2_39 :
      STD_LOGIC;
  SIGNAL attention_max_attn_fixed_t_1_conc_psp_mx0w12_39 : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_lpi_3_7 : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_7 : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_dfm_7 : STD_LOGIC;
  SIGNAL SF_LOOP_3_acc_38_itm_18 : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_13_sdt_41_40 : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_acc_12_sdt_15_0 : STD_LOGIC_VECTOR (15 DOWNTO
      0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_8_sdt_52 : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_8_sdt_51_0 : STD_LOGIC_VECTOR (51 DOWNTO
      0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_12_sdt_42_41 : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_12_sdt_40 : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_acc_13_psp_41_40 : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_8_psp_60 : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_8_psp_59_57 : STD_LOGIC_VECTOR (2
      DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_8_psp_56_0 : STD_LOGIC_VECTOR (56
      DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_exs_5_0 : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_k_5_0_sva_1_5_4 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_lpi_3_mx1_7 : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_lpi_3_mx1_6_0 : STD_LOGIC_VECTOR
      (6 DOWNTO 0);
  SIGNAL attention_max_attn_fixed_t_attention_max_attn_fixed_t_and_mut_mx0w2_38_15
      : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL attention_max_attn_fixed_t_attention_max_attn_fixed_t_and_mut_mx0w2_14_0
      : STD_LOGIC_VECTOR (14 DOWNTO 0);
  SIGNAL attention_max_attn_fixed_t_1_conc_psp_mx0w12_38_15 : STD_LOGIC_VECTOR (23
      DOWNTO 0);
  SIGNAL attention_max_attn_fixed_t_1_conc_psp_mx0w12_14_0 : STD_LOGIC_VECTOR (14
      DOWNTO 0);
  SIGNAL reg_SF_LOOP_3_acc_38_1_ftd : STD_LOGIC;
  SIGNAL reg_SF_LOOP_3_acc_38_1_ftd_1 : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL reg_SF_LOOP_3_acc_38_1_ftd_2 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL attention_round_1_qelse_and_3_ssc : STD_LOGIC;
  SIGNAL reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd : STD_LOGIC_VECTOR (2 DOWNTO
      0);
  SIGNAL reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_1 : STD_LOGIC_VECTOR (4
      DOWNTO 0);
  SIGNAL reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_2 : STD_LOGIC_VECTOR (2
      DOWNTO 0);
  SIGNAL reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3 : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_and_ssc : STD_LOGIC;
  SIGNAL reg_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_ftd : STD_LOGIC_VECTOR (3
      DOWNTO 0);
  SIGNAL reg_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_ftd_1 : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL reg_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_ftd_2 : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL exs_tmp_1_12_0 : STD_LOGIC_VECTOR (12 DOWNTO 0);
  SIGNAL exu_tmp_5_6_0 : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL exs_tmp_4_26_0 : STD_LOGIC_VECTOR (26 DOWNTO 0);
  SIGNAL exs_tmp_40_54_10 : STD_LOGIC_VECTOR (44 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc : STD_LOGIC;
  SIGNAL and_1675_ssc : STD_LOGIC;
  SIGNAL and_1676_ssc : STD_LOGIC;
  SIGNAL attention_round_1_qelse_or_9_cse : STD_LOGIC;
  SIGNAL attention_round_1_qelse_or_8_cse : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_or_13_cse : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_1_ki_or_cse : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_or_9_cse : STD_LOGIC;
  SIGNAL SF_LOOP_3_and_4_cse : STD_LOGIC;
  SIGNAL or_705_cse : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_3_or_7_cse : STD_LOGIC;
  SIGNAL attention_round_qelse_mux_2_cse : STD_LOGIC_VECTOR (16 DOWNTO 0);
  SIGNAL and_893_cse : STD_LOGIC;
  SIGNAL mux_316_cse : STD_LOGIC;
  SIGNAL nor_525_cse : STD_LOGIC;
  SIGNAL nor_609_cse : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_nor_6_cse : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_nor_11_cse : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_nor_14_cse : STD_LOGIC;
  SIGNAL nor_450_cse : STD_LOGIC;
  SIGNAL nand_242_cse : STD_LOGIC;
  SIGNAL nor_721_cse : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_1_1_nor_1_cse : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_nor_3_cse : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_60_cse : STD_LOGIC;
  SIGNAL SF_LOOP_3_or_9_cse : STD_LOGIC;
  SIGNAL mux_993_cse : STD_LOGIC;
  SIGNAL nor_723_cse : STD_LOGIC;
  SIGNAL nand_164_cse : STD_LOGIC;
  SIGNAL nand_258_cse : STD_LOGIC;
  SIGNAL nor_775_cse : STD_LOGIC;
  SIGNAL nor_707_cse : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_1_cse
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_nor_13_cse : STD_LOGIC;
  SIGNAL or_709_cse : STD_LOGIC;
  SIGNAL nor_706_cse : STD_LOGIC;
  SIGNAL SF_LOOP_3_or_11_cse : STD_LOGIC;
  SIGNAL and_629_ssc : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_lpi_3_mx2_7_4 : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_lpi_3_mx2_3_2 : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_lpi_3_mx2_1_0 : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL and_1055_cse : STD_LOGIC;
  SIGNAL xor_cse : STD_LOGIC;
  SIGNAL and_615_cse : STD_LOGIC;
  SIGNAL and_1312_cse : STD_LOGIC;
  SIGNAL and_1441_cse : STD_LOGIC;
  SIGNAL and_1076_cse : STD_LOGIC;
  SIGNAL and_1305_cse : STD_LOGIC;
  SIGNAL mux_991_cse : STD_LOGIC;
  SIGNAL and_1562_cse : STD_LOGIC;
  SIGNAL and_1447_cse : STD_LOGIC;
  SIGNAL and_1425_cse : STD_LOGIC;
  SIGNAL and_1417_cse : STD_LOGIC;
  SIGNAL and_1914_cse : STD_LOGIC;
  SIGNAL and_995_cse : STD_LOGIC;
  SIGNAL and_1208_cse : STD_LOGIC;
  SIGNAL and_1216_cse : STD_LOGIC;
  SIGNAL nor_779_cse : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_or_36_cse : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_1_cse
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_7_cse
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_or_45_cse : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_and_17_cse : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_or_10_cse : STD_LOGIC;
  SIGNAL and_1333_cse : STD_LOGIC;
  SIGNAL and_1338_cse : STD_LOGIC;
  SIGNAL and_1388_cse : STD_LOGIC;
  SIGNAL and_1360_cse : STD_LOGIC;
  SIGNAL and_1358_cse : STD_LOGIC;
  SIGNAL and_1214_cse : STD_LOGIC;
  SIGNAL for_for_nor_3_cse : STD_LOGIC;
  SIGNAL and_1318_cse : STD_LOGIC;
  SIGNAL and_1304_cse : STD_LOGIC;
  SIGNAL and_1315_cse : STD_LOGIC;
  SIGNAL and_1298_cse : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_16_cse : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_1 : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_0 : STD_LOGIC;
  SIGNAL nand_246_seb : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_k_5_0_sva_5_4 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL attention_sqrt_1_guess_or_1_cse : STD_LOGIC;
  SIGNAL attention_sqrt_1_guess_or_2_cse : STD_LOGIC;
  SIGNAL attention_round_1_qelse_or_16_cse : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_or_6_cse : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_or_cse : STD_LOGIC;
  SIGNAL or_dcpl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_or_21_cse : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_1_or_6_cse_1 : STD_LOGIC;
  SIGNAL or_1563_tmp : STD_LOGIC;
  SIGNAL or_1566_tmp : STD_LOGIC;
  SIGNAL and_2271_cse : STD_LOGIC;
  SIGNAL and_2277_cse : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_nand_3_itm : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_or_10_itm : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_and_12_itm : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_and_13_itm : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_or_3_itm : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_or_4_itm : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_or_5_itm : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_20_itm : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_21_itm : STD_LOGIC;
  SIGNAL nand_245_itm : STD_LOGIC;
  SIGNAL and_416_itm : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_nor_5_itm : STD_LOGIC;
  SIGNAL SF_LOOP_3_acc_56_itm : STD_LOGIC_VECTOR (34 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_32_itm : STD_LOGIC_VECTOR (21 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_1_2_or_itm : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_1_2_or_1_itm : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_1_2_or_2_itm : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_or_18_itm : STD_LOGIC;
  SIGNAL SF_LOOP_3_or_4_itm : STD_LOGIC;
  SIGNAL SF_LOOP_3_or_13_itm : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_or_itm : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_mul_itm_71_32_1 : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_itm_23_1 : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_itm_40_1 : STD_LOGIC;
  SIGNAL attention_max_attn_fixed_t_or_cse_1 : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_and_ssc : STD_LOGIC;
  SIGNAL reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd
      : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1
      : STD_LOGIC_VECTOR (35 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_and_2_ssc : STD_LOGIC;
  SIGNAL reg_GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_ftd : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL reg_GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_ftd_1 : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL reg_GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_ftd_2 : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_1_i_and_5_ssc : STD_LOGIC;
  SIGNAL reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd : STD_LOGIC;
  SIGNAL reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd_1 : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_2_1_j_and_ssc : STD_LOGIC;
  SIGNAL reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1 : STD_LOGIC;
  SIGNAL reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_1 : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_2 : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_1_2_nor_seb : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_2_cse_1
      : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_1_or_1_ssc : STD_LOGIC;
  SIGNAL SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b_38_36 : STD_LOGIC_VECTOR (2 DOWNTO
      0);
  SIGNAL SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b_35_15 : STD_LOGIC_VECTOR (20 DOWNTO
      0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_a_70_68
      : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_a_67_47
      : STD_LOGIC_VECTOR (20 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_rmff_2 : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_rmff_1_0 : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_qif_CACHE_UPDATE_LOOP_3_qif_nor_ssc : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_qif_and_2_ssc : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_qif_and_ssc : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_qif_acc_3_ncse_2_1 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_qif_acc_3_ncse_0 : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_acc_242_sdt : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL and_704_ssc : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_k_and_7_cse : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_k_and_8_cse : STD_LOGIC;
  SIGNAL z_out_30_2 : STD_LOGIC;
  SIGNAL z_out_44_17 : STD_LOGIC;
  SIGNAL z_out_45_17 : STD_LOGIC;
  SIGNAL z_out_46_17 : STD_LOGIC;
  SIGNAL z_out_51_40_1 : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL z_out_53_40 : STD_LOGIC;
  SIGNAL z_out_55_1 : STD_LOGIC;
  SIGNAL z_out_55_0 : STD_LOGIC;
  SIGNAL and_1159_cse : STD_LOGIC;
  SIGNAL nor_696_cse : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_sdt : STD_LOGIC_VECTOR (42 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_sdt_1 : STD_LOGIC_VECTOR (40 DOWNTO 0);
  SIGNAL z_out_41_52_8 : STD_LOGIC_VECTOR (44 DOWNTO 0);
  SIGNAL z_out_42_49_8 : STD_LOGIC_VECTOR (41 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_cse_17 : STD_LOGIC;

  SIGNAL RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_mux1h_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_mux1h_nl : STD_LOGIC;
  SIGNAL mux_208_nl : STD_LOGIC;
  SIGNAL mux_207_nl : STD_LOGIC;
  SIGNAL mux_206_nl : STD_LOGIC;
  SIGNAL mux_205_nl : STD_LOGIC;
  SIGNAL mux_204_nl : STD_LOGIC;
  SIGNAL mux_203_nl : STD_LOGIC;
  SIGNAL mux_202_nl : STD_LOGIC;
  SIGNAL or_366_nl : STD_LOGIC;
  SIGNAL and_851_nl : STD_LOGIC;
  SIGNAL or_389_nl : STD_LOGIC;
  SIGNAL mux_219_nl : STD_LOGIC;
  SIGNAL nor_236_nl : STD_LOGIC;
  SIGNAL mux_218_nl : STD_LOGIC;
  SIGNAL or_387_nl : STD_LOGIC;
  SIGNAL and_856_nl : STD_LOGIC;
  SIGNAL nand_13_nl : STD_LOGIC;
  SIGNAL mux_217_nl : STD_LOGIC;
  SIGNAL nor_367_nl : STD_LOGIC;
  SIGNAL and_858_nl : STD_LOGIC;
  SIGNAL mux_225_nl : STD_LOGIC;
  SIGNAL mux_189_nl : STD_LOGIC;
  SIGNAL nor_311_nl : STD_LOGIC;
  SIGNAL and_807_nl : STD_LOGIC;
  SIGNAL mux_233_nl : STD_LOGIC;
  SIGNAL nor_606_nl : STD_LOGIC;
  SIGNAL mux_232_nl : STD_LOGIC;
  SIGNAL or_411_nl : STD_LOGIC;
  SIGNAL nor_607_nl : STD_LOGIC;
  SIGNAL mux_231_nl : STD_LOGIC;
  SIGNAL or_408_nl : STD_LOGIC;
  SIGNAL or_406_nl : STD_LOGIC;
  SIGNAL mux_230_nl : STD_LOGIC;
  SIGNAL mux_229_nl : STD_LOGIC;
  SIGNAL nor_608_nl : STD_LOGIC;
  SIGNAL mux_228_nl : STD_LOGIC;
  SIGNAL nor_610_nl : STD_LOGIC;
  SIGNAL mux_227_nl : STD_LOGIC;
  SIGNAL nor_611_nl : STD_LOGIC;
  SIGNAL nor_612_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_2_nl : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL rms_norm_384_mux1h_2_nl : STD_LOGIC;
  SIGNAL mux_246_nl : STD_LOGIC;
  SIGNAL mux_245_nl : STD_LOGIC;
  SIGNAL nand_14_nl : STD_LOGIC;
  SIGNAL mux_244_nl : STD_LOGIC;
  SIGNAL and_862_nl : STD_LOGIC;
  SIGNAL mux_243_nl : STD_LOGIC;
  SIGNAL mux_242_nl : STD_LOGIC;
  SIGNAL mux_241_nl : STD_LOGIC;
  SIGNAL mux_240_nl : STD_LOGIC;
  SIGNAL or_422_nl : STD_LOGIC;
  SIGNAL or_420_nl : STD_LOGIC;
  SIGNAL or_419_nl : STD_LOGIC;
  SIGNAL mux_249_nl : STD_LOGIC;
  SIGNAL mux_248_nl : STD_LOGIC;
  SIGNAL rms_norm_384_mux1h_17_nl : STD_LOGIC;
  SIGNAL rms_norm_384_mux1h_21_nl : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL rms_norm_384_not_1_nl : STD_LOGIC;
  SIGNAL mux_257_nl : STD_LOGIC;
  SIGNAL mux_256_nl : STD_LOGIC;
  SIGNAL mux_255_nl : STD_LOGIC;
  SIGNAL or_435_nl : STD_LOGIC;
  SIGNAL or_434_nl : STD_LOGIC;
  SIGNAL mux_254_nl : STD_LOGIC;
  SIGNAL or_433_nl : STD_LOGIC;
  SIGNAL or_431_nl : STD_LOGIC;
  SIGNAL mux_258_nl : STD_LOGIC;
  SIGNAL nor_374_nl : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_mux1h_9_nl : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_mux1h_13_nl : STD_LOGIC_VECTOR (2 DOWNTO
      0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_not_4_nl : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_mux1h_16_nl : STD_LOGIC_VECTOR (20 DOWNTO
      0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_not_2_nl : STD_LOGIC;
  SIGNAL mux_259_nl : STD_LOGIC;
  SIGNAL mux_263_nl : STD_LOGIC;
  SIGNAL mux_262_nl : STD_LOGIC;
  SIGNAL SOFTMAX_LOOP_5_mux_nl : STD_LOGIC;
  SIGNAL and_192_nl : STD_LOGIC;
  SIGNAL SOFTMAX_LOOP_5_mux_1_nl : STD_LOGIC_VECTOR (14 DOWNTO 0);
  SIGNAL SOFTMAX_LOOP_5_not_1_nl : STD_LOGIC;
  SIGNAL mux_264_nl : STD_LOGIC;
  SIGNAL mux_266_nl : STD_LOGIC;
  SIGNAL mux_265_nl : STD_LOGIC;
  SIGNAL mux_282_nl : STD_LOGIC;
  SIGNAL or_478_nl : STD_LOGIC;
  SIGNAL mux_285_nl : STD_LOGIC;
  SIGNAL mux_284_nl : STD_LOGIC;
  SIGNAL mux_288_nl : STD_LOGIC;
  SIGNAL mux_287_nl : STD_LOGIC;
  SIGNAL or_488_nl : STD_LOGIC;
  SIGNAL mux_286_nl : STD_LOGIC;
  SIGNAL or_487_nl : STD_LOGIC;
  SIGNAL or_486_nl : STD_LOGIC;
  SIGNAL mux_304_nl : STD_LOGIC;
  SIGNAL mux_303_nl : STD_LOGIC;
  SIGNAL or_503_nl : STD_LOGIC;
  SIGNAL mux_302_nl : STD_LOGIC;
  SIGNAL mux_301_nl : STD_LOGIC;
  SIGNAL or_512_nl : STD_LOGIC;
  SIGNAL or_510_nl : STD_LOGIC;
  SIGNAL mux_298_nl : STD_LOGIC;
  SIGNAL nor_339_nl : STD_LOGIC;
  SIGNAL nor_340_nl : STD_LOGIC;
  SIGNAL mux_349_nl : STD_LOGIC;
  SIGNAL mux_348_nl : STD_LOGIC;
  SIGNAL nor_400_nl : STD_LOGIC;
  SIGNAL nor_401_nl : STD_LOGIC;
  SIGNAL nor_402_nl : STD_LOGIC;
  SIGNAL mux_347_nl : STD_LOGIC;
  SIGNAL mux_346_nl : STD_LOGIC;
  SIGNAL mux_345_nl : STD_LOGIC;
  SIGNAL mux_344_nl : STD_LOGIC;
  SIGNAL or_1362_nl : STD_LOGIC;
  SIGNAL nand_nl : STD_LOGIC;
  SIGNAL mux_343_nl : STD_LOGIC;
  SIGNAL mux_342_nl : STD_LOGIC;
  SIGNAL nand_243_nl : STD_LOGIC;
  SIGNAL mux_341_nl : STD_LOGIC;
  SIGNAL mux_340_nl : STD_LOGIC;
  SIGNAL mux_339_nl : STD_LOGIC;
  SIGNAL nor_397_nl : STD_LOGIC;
  SIGNAL mux_338_nl : STD_LOGIC;
  SIGNAL mux_337_nl : STD_LOGIC;
  SIGNAL mux_336_nl : STD_LOGIC;
  SIGNAL mux_335_nl : STD_LOGIC;
  SIGNAL mux_334_nl : STD_LOGIC;
  SIGNAL nor_394_nl : STD_LOGIC;
  SIGNAL nor_395_nl : STD_LOGIC;
  SIGNAL mux_333_nl : STD_LOGIC;
  SIGNAL or_556_nl : STD_LOGIC;
  SIGNAL mux_332_nl : STD_LOGIC;
  SIGNAL or_554_nl : STD_LOGIC;
  SIGNAL mux1h_1_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL mux1h_2_nl : STD_LOGIC_VECTOR (35 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_84_nl : STD_LOGIC_VECTOR (13 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_88_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_37_nl : STD_LOGIC_VECTOR (15 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_35_nl : STD_LOGIC_VECTOR (13 DOWNTO
      0);
  SIGNAL mux_398_nl : STD_LOGIC;
  SIGNAL nor_418_nl : STD_LOGIC;
  SIGNAL mux_397_nl : STD_LOGIC;
  SIGNAL or_637_nl : STD_LOGIC;
  SIGNAL or_636_nl : STD_LOGIC;
  SIGNAL and_884_nl : STD_LOGIC;
  SIGNAL for_for_j_and_1_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL for_for_j_mux1h_1_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_acc_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL for_for_j_or_nl : STD_LOGIC;
  SIGNAL and_487_nl : STD_LOGIC;
  SIGNAL mux_385_nl : STD_LOGIC;
  SIGNAL mux_384_nl : STD_LOGIC;
  SIGNAL mux_383_nl : STD_LOGIC;
  SIGNAL mux_382_nl : STD_LOGIC;
  SIGNAL nor_411_nl : STD_LOGIC;
  SIGNAL mux_381_nl : STD_LOGIC;
  SIGNAL nor_412_nl : STD_LOGIC;
  SIGNAL nor_415_nl : STD_LOGIC;
  SIGNAL mux_380_nl : STD_LOGIC;
  SIGNAL nand_18_nl : STD_LOGIC;
  SIGNAL nor_416_nl : STD_LOGIC;
  SIGNAL and_494_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_2_not_nl : STD_LOGIC;
  SIGNAL mux_379_nl : STD_LOGIC;
  SIGNAL mux_378_nl : STD_LOGIC;
  SIGNAL mux_377_nl : STD_LOGIC;
  SIGNAL or_608_nl : STD_LOGIC;
  SIGNAL mux_376_nl : STD_LOGIC;
  SIGNAL mux_375_nl : STD_LOGIC;
  SIGNAL or_605_nl : STD_LOGIC;
  SIGNAL mux_374_nl : STD_LOGIC;
  SIGNAL mux_373_nl : STD_LOGIC;
  SIGNAL mux_372_nl : STD_LOGIC;
  SIGNAL mux_371_nl : STD_LOGIC;
  SIGNAL or_600_nl : STD_LOGIC;
  SIGNAL or_597_nl : STD_LOGIC;
  SIGNAL mux_396_nl : STD_LOGIC;
  SIGNAL mux_395_nl : STD_LOGIC;
  SIGNAL mux_394_nl : STD_LOGIC;
  SIGNAL mux_393_nl : STD_LOGIC;
  SIGNAL mux_392_nl : STD_LOGIC;
  SIGNAL mux_391_nl : STD_LOGIC;
  SIGNAL or_633_nl : STD_LOGIC;
  SIGNAL or_632_nl : STD_LOGIC;
  SIGNAL or_631_nl : STD_LOGIC;
  SIGNAL mux_390_nl : STD_LOGIC;
  SIGNAL mux_389_nl : STD_LOGIC;
  SIGNAL or_628_nl : STD_LOGIC;
  SIGNAL mux_388_nl : STD_LOGIC;
  SIGNAL or_627_nl : STD_LOGIC;
  SIGNAL mux_387_nl : STD_LOGIC;
  SIGNAL or_625_nl : STD_LOGIC;
  SIGNAL for_for_j_and_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL for_for_j_mux1h_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_1_acc_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL nor_407_nl : STD_LOGIC;
  SIGNAL mux_357_nl : STD_LOGIC;
  SIGNAL or_1332_nl : STD_LOGIC;
  SIGNAL nand_179_nl : STD_LOGIC;
  SIGNAL mux_369_nl : STD_LOGIC;
  SIGNAL mux_368_nl : STD_LOGIC;
  SIGNAL mux_367_nl : STD_LOGIC;
  SIGNAL mux_366_nl : STD_LOGIC;
  SIGNAL or_593_nl : STD_LOGIC;
  SIGNAL mux_365_nl : STD_LOGIC;
  SIGNAL or_592_nl : STD_LOGIC;
  SIGNAL or_590_nl : STD_LOGIC;
  SIGNAL mux_364_nl : STD_LOGIC;
  SIGNAL mux_363_nl : STD_LOGIC;
  SIGNAL nor_408_nl : STD_LOGIC;
  SIGNAL mux_362_nl : STD_LOGIC;
  SIGNAL nand_17_nl : STD_LOGIC;
  SIGNAL mux_361_nl : STD_LOGIC;
  SIGNAL mux_360_nl : STD_LOGIC;
  SIGNAL nor_409_nl : STD_LOGIC;
  SIGNAL mux_359_nl : STD_LOGIC;
  SIGNAL and_477_nl : STD_LOGIC;
  SIGNAL mux_358_nl : STD_LOGIC;
  SIGNAL nand_181_nl : STD_LOGIC;
  SIGNAL and_486_nl : STD_LOGIC;
  SIGNAL mux_355_nl : STD_LOGIC;
  SIGNAL or_1359_nl : STD_LOGIC;
  SIGNAL mux_354_nl : STD_LOGIC;
  SIGNAL mux_353_nl : STD_LOGIC;
  SIGNAL or_578_nl : STD_LOGIC;
  SIGNAL mux_352_nl : STD_LOGIC;
  SIGNAL or_577_nl : STD_LOGIC;
  SIGNAL or_576_nl : STD_LOGIC;
  SIGNAL mux_351_nl : STD_LOGIC;
  SIGNAL or_1360_nl : STD_LOGIC;
  SIGNAL or_1361_nl : STD_LOGIC;
  SIGNAL mux_350_nl : STD_LOGIC;
  SIGNAL or_572_nl : STD_LOGIC;
  SIGNAL mux_422_nl : STD_LOGIC;
  SIGNAL mux_421_nl : STD_LOGIC;
  SIGNAL mux_420_nl : STD_LOGIC;
  SIGNAL mux_419_nl : STD_LOGIC;
  SIGNAL mux_418_nl : STD_LOGIC;
  SIGNAL mux_417_nl : STD_LOGIC;
  SIGNAL mux_416_nl : STD_LOGIC;
  SIGNAL or_651_nl : STD_LOGIC;
  SIGNAL mux_415_nl : STD_LOGIC;
  SIGNAL mux_414_nl : STD_LOGIC;
  SIGNAL mux_413_nl : STD_LOGIC;
  SIGNAL mux_412_nl : STD_LOGIC;
  SIGNAL mux_411_nl : STD_LOGIC;
  SIGNAL mux_410_nl : STD_LOGIC;
  SIGNAL mux_409_nl : STD_LOGIC;
  SIGNAL mux_408_nl : STD_LOGIC;
  SIGNAL mux_407_nl : STD_LOGIC;
  SIGNAL nand_183_nl : STD_LOGIC;
  SIGNAL mux_406_nl : STD_LOGIC;
  SIGNAL mux_404_nl : STD_LOGIC;
  SIGNAL mux_403_nl : STD_LOGIC;
  SIGNAL mux_401_nl : STD_LOGIC;
  SIGNAL or_644_nl : STD_LOGIC;
  SIGNAL mux_400_nl : STD_LOGIC;
  SIGNAL mux_399_nl : STD_LOGIC;
  SIGNAL or_643_nl : STD_LOGIC;
  SIGNAL or_642_nl : STD_LOGIC;
  SIGNAL nand_19_nl : STD_LOGIC;
  SIGNAL for_for_mux1h_4_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_and_1_nl : STD_LOGIC;
  SIGNAL for_for_or_3_nl : STD_LOGIC;
  SIGNAL for_for_or_6_nl : STD_LOGIC;
  SIGNAL mux_456_nl : STD_LOGIC;
  SIGNAL mux_455_nl : STD_LOGIC;
  SIGNAL mux_454_nl : STD_LOGIC;
  SIGNAL mux_453_nl : STD_LOGIC;
  SIGNAL or_690_nl : STD_LOGIC;
  SIGNAL nand_21_nl : STD_LOGIC;
  SIGNAL mux_452_nl : STD_LOGIC;
  SIGNAL nand_20_nl : STD_LOGIC;
  SIGNAL mux_451_nl : STD_LOGIC;
  SIGNAL nor_429_nl : STD_LOGIC;
  SIGNAL mux_450_nl : STD_LOGIC;
  SIGNAL mux_449_nl : STD_LOGIC;
  SIGNAL mux_448_nl : STD_LOGIC;
  SIGNAL or_684_nl : STD_LOGIC;
  SIGNAL mux_447_nl : STD_LOGIC;
  SIGNAL mux_446_nl : STD_LOGIC;
  SIGNAL or_680_nl : STD_LOGIC;
  SIGNAL mux_444_nl : STD_LOGIC;
  SIGNAL mux_443_nl : STD_LOGIC;
  SIGNAL or_678_nl : STD_LOGIC;
  SIGNAL mux_465_nl : STD_LOGIC;
  SIGNAL mux_464_nl : STD_LOGIC;
  SIGNAL or_698_nl : STD_LOGIC;
  SIGNAL mux_463_nl : STD_LOGIC;
  SIGNAL mux_462_nl : STD_LOGIC;
  SIGNAL mux_461_nl : STD_LOGIC;
  SIGNAL mux_460_nl : STD_LOGIC;
  SIGNAL mux_459_nl : STD_LOGIC;
  SIGNAL or_695_nl : STD_LOGIC;
  SIGNAL attention_sqrt_for_i_attention_sqrt_for_i_mux_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_sqrt_1_for_i_not_2_nl : STD_LOGIC;
  SIGNAL mux1h_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL mux_649_nl : STD_LOGIC;
  SIGNAL mux_648_nl : STD_LOGIC;
  SIGNAL nand_38_nl : STD_LOGIC;
  SIGNAL mux_647_nl : STD_LOGIC;
  SIGNAL and_725_nl : STD_LOGIC;
  SIGNAL mux_646_nl : STD_LOGIC;
  SIGNAL nor_156_nl : STD_LOGIC;
  SIGNAL mux_645_nl : STD_LOGIC;
  SIGNAL nor_217_nl : STD_LOGIC;
  SIGNAL mux_644_nl : STD_LOGIC;
  SIGNAL nand_61_nl : STD_LOGIC;
  SIGNAL or_930_nl : STD_LOGIC;
  SIGNAL mux_643_nl : STD_LOGIC;
  SIGNAL or_929_nl : STD_LOGIC;
  SIGNAL mux_642_nl : STD_LOGIC;
  SIGNAL mux_641_nl : STD_LOGIC;
  SIGNAL mux_640_nl : STD_LOGIC;
  SIGNAL nand_62_nl : STD_LOGIC;
  SIGNAL mux_639_nl : STD_LOGIC;
  SIGNAL mux_638_nl : STD_LOGIC;
  SIGNAL or_926_nl : STD_LOGIC;
  SIGNAL mux_637_nl : STD_LOGIC;
  SIGNAL mux_636_nl : STD_LOGIC;
  SIGNAL or_924_nl : STD_LOGIC;
  SIGNAL nand_36_nl : STD_LOGIC;
  SIGNAL or_921_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_or_1_nl : STD_LOGIC;
  SIGNAL mux_652_nl : STD_LOGIC;
  SIGNAL mux_651_nl : STD_LOGIC;
  SIGNAL nor_492_nl : STD_LOGIC;
  SIGNAL nor_493_nl : STD_LOGIC;
  SIGNAL nor_494_nl : STD_LOGIC;
  SIGNAL mux_650_nl : STD_LOGIC;
  SIGNAL or_937_nl : STD_LOGIC;
  SIGNAL and_595_nl : STD_LOGIC;
  SIGNAL mux_490_nl : STD_LOGIC;
  SIGNAL mux_489_nl : STD_LOGIC;
  SIGNAL mux_488_nl : STD_LOGIC;
  SIGNAL mux_487_nl : STD_LOGIC;
  SIGNAL mux_486_nl : STD_LOGIC;
  SIGNAL mux_485_nl : STD_LOGIC;
  SIGNAL mux_484_nl : STD_LOGIC;
  SIGNAL mux_483_nl : STD_LOGIC;
  SIGNAL mux_482_nl : STD_LOGIC;
  SIGNAL mux_480_nl : STD_LOGIC;
  SIGNAL or_713_nl : STD_LOGIC;
  SIGNAL mux_479_nl : STD_LOGIC;
  SIGNAL mux_478_nl : STD_LOGIC;
  SIGNAL mux_477_nl : STD_LOGIC;
  SIGNAL mux_476_nl : STD_LOGIC;
  SIGNAL mux_474_nl : STD_LOGIC;
  SIGNAL mux_471_nl : STD_LOGIC;
  SIGNAL or_708_nl : STD_LOGIC;
  SIGNAL mux_470_nl : STD_LOGIC;
  SIGNAL or_706_nl : STD_LOGIC;
  SIGNAL mux_469_nl : STD_LOGIC;
  SIGNAL mux_468_nl : STD_LOGIC;
  SIGNAL or_703_nl : STD_LOGIC;
  SIGNAL mux_467_nl : STD_LOGIC;
  SIGNAL mux_466_nl : STD_LOGIC;
  SIGNAL and_596_nl : STD_LOGIC;
  SIGNAL nor_629_nl : STD_LOGIC;
  SIGNAL mux_979_nl : STD_LOGIC;
  SIGNAL mux_978_nl : STD_LOGIC;
  SIGNAL mux_977_nl : STD_LOGIC;
  SIGNAL mux_976_nl : STD_LOGIC;
  SIGNAL or_1378_nl : STD_LOGIC;
  SIGNAL mux_975_nl : STD_LOGIC;
  SIGNAL or_1376_nl : STD_LOGIC;
  SIGNAL mux_974_nl : STD_LOGIC;
  SIGNAL or_1375_nl : STD_LOGIC;
  SIGNAL nand_249_nl : STD_LOGIC;
  SIGNAL mux_973_nl : STD_LOGIC;
  SIGNAL or_1374_nl : STD_LOGIC;
  SIGNAL or_1372_nl : STD_LOGIC;
  SIGNAL mux_972_nl : STD_LOGIC;
  SIGNAL or_1371_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_52_nl : STD_LOGIC_VECTOR (30 DOWNTO
      0);
  SIGNAL attention_abs_qif_or_nl : STD_LOGIC;
  SIGNAL attention_abs_qif_or_1_nl : STD_LOGIC;
  SIGNAL mux_516_nl : STD_LOGIC;
  SIGNAL mux_515_nl : STD_LOGIC;
  SIGNAL nand_194_nl : STD_LOGIC;
  SIGNAL mux_514_nl : STD_LOGIC;
  SIGNAL mux_210_nl : STD_LOGIC;
  SIGNAL mux_512_nl : STD_LOGIC;
  SIGNAL or_746_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_nl : STD_LOGIC_VECTOR (77 DOWNTO
      0);
  SIGNAL attention_sqrt_guess_or_nl : STD_LOGIC;
  SIGNAL mux_501_nl : STD_LOGIC;
  SIGNAL or_381_nl : STD_LOGIC;
  SIGNAL mux_500_nl : STD_LOGIC;
  SIGNAL mux_499_nl : STD_LOGIC;
  SIGNAL or_730_nl : STD_LOGIC;
  SIGNAL mux_498_nl : STD_LOGIC;
  SIGNAL mux_497_nl : STD_LOGIC;
  SIGNAL or_729_nl : STD_LOGIC;
  SIGNAL or_726_nl : STD_LOGIC;
  SIGNAL mux_496_nl : STD_LOGIC;
  SIGNAL mux_495_nl : STD_LOGIC;
  SIGNAL or_724_nl : STD_LOGIC;
  SIGNAL mux_494_nl : STD_LOGIC;
  SIGNAL mux_493_nl : STD_LOGIC;
  SIGNAL or_721_nl : STD_LOGIC;
  SIGNAL mux_511_nl : STD_LOGIC;
  SIGNAL and_900_nl : STD_LOGIC;
  SIGNAL nor_442_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_or_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_or_1_nl : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_and_1_nl : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_1_nl : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL mux_510_nl : STD_LOGIC;
  SIGNAL or_742_nl : STD_LOGIC;
  SIGNAL mux_509_nl : STD_LOGIC;
  SIGNAL mux_508_nl : STD_LOGIC;
  SIGNAL mux_507_nl : STD_LOGIC;
  SIGNAL mux_506_nl : STD_LOGIC;
  SIGNAL mux_505_nl : STD_LOGIC;
  SIGNAL mux_504_nl : STD_LOGIC;
  SIGNAL or_735_nl : STD_LOGIC;
  SIGNAL mux_503_nl : STD_LOGIC;
  SIGNAL or_734_nl : STD_LOGIC;
  SIGNAL or_733_nl : STD_LOGIC;
  SIGNAL not_2244_nl : STD_LOGIC;
  SIGNAL mux_530_nl : STD_LOGIC;
  SIGNAL mux_529_nl : STD_LOGIC;
  SIGNAL nand_197_nl : STD_LOGIC;
  SIGNAL mux_528_nl : STD_LOGIC;
  SIGNAL mux_527_nl : STD_LOGIC;
  SIGNAL mux_526_nl : STD_LOGIC;
  SIGNAL mux_525_nl : STD_LOGIC;
  SIGNAL mux_524_nl : STD_LOGIC;
  SIGNAL mux_523_nl : STD_LOGIC;
  SIGNAL nor_451_nl : STD_LOGIC;
  SIGNAL mux_522_nl : STD_LOGIC;
  SIGNAL mux_521_nl : STD_LOGIC;
  SIGNAL or_764_nl : STD_LOGIC;
  SIGNAL or_762_nl : STD_LOGIC;
  SIGNAL and_545_nl : STD_LOGIC;
  SIGNAL attention_sqrt_for_acc_3_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL attention_sqrt_for_or_nl : STD_LOGIC;
  SIGNAL attention_sqrt_for_or_1_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_2_mux1h_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_and_nl : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_LINEAR_FORWARD_NO_MUL_LOOP_4_and_3_nl : STD_LOGIC;
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_2_RESHAPE_2D_TO_3D_LOOP_3_2_or_nl : STD_LOGIC;
  SIGNAL mux_583_nl : STD_LOGIC;
  SIGNAL nor_465_nl : STD_LOGIC;
  SIGNAL mux_582_nl : STD_LOGIC;
  SIGNAL nor_466_nl : STD_LOGIC;
  SIGNAL mux_581_nl : STD_LOGIC;
  SIGNAL or_830_nl : STD_LOGIC;
  SIGNAL mux_580_nl : STD_LOGIC;
  SIGNAL nand_203_nl : STD_LOGIC;
  SIGNAL or_829_nl : STD_LOGIC;
  SIGNAL or_828_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_mux1h_nl : STD_LOGIC;
  SIGNAL and_568_nl : STD_LOGIC;
  SIGNAL mux_589_nl : STD_LOGIC;
  SIGNAL mux_590_nl : STD_LOGIC;
  SIGNAL mux_588_nl : STD_LOGIC;
  SIGNAL or_1366_nl : STD_LOGIC;
  SIGNAL mux_587_nl : STD_LOGIC;
  SIGNAL or_845_nl : STD_LOGIC;
  SIGNAL or_843_nl : STD_LOGIC;
  SIGNAL or_1367_nl : STD_LOGIC;
  SIGNAL mux_586_nl : STD_LOGIC;
  SIGNAL or_839_nl : STD_LOGIC;
  SIGNAL mux_585_nl : STD_LOGIC;
  SIGNAL nand_30_nl : STD_LOGIC;
  SIGNAL or_838_nl : STD_LOGIC;
  SIGNAL or_836_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_acc_43_nl : STD_LOGIC_VECTOR (10 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_1_j_asn_SF_LOOP_3_acc_45_itm_1_8_RMS_NORM_LOOP_2_and_nl
      : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_mux1h_1_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_acc_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL nor_474_nl : STD_LOGIC;
  SIGNAL mux_596_nl : STD_LOGIC;
  SIGNAL mux_595_nl : STD_LOGIC;
  SIGNAL nand_206_nl : STD_LOGIC;
  SIGNAL mux_594_nl : STD_LOGIC;
  SIGNAL nor_469_nl : STD_LOGIC;
  SIGNAL mux_593_nl : STD_LOGIC;
  SIGNAL or_857_nl : STD_LOGIC;
  SIGNAL nor_475_nl : STD_LOGIC;
  SIGNAL mux_592_nl : STD_LOGIC;
  SIGNAL or_1343_nl : STD_LOGIC;
  SIGNAL mux_591_nl : STD_LOGIC;
  SIGNAL or_850_nl : STD_LOGIC;
  SIGNAL or_849_nl : STD_LOGIC;
  SIGNAL and_576_nl : STD_LOGIC;
  SIGNAL and_577_nl : STD_LOGIC;
  SIGNAL mux_605_nl : STD_LOGIC;
  SIGNAL mux_604_nl : STD_LOGIC;
  SIGNAL mux_603_nl : STD_LOGIC;
  SIGNAL nor_614_nl : STD_LOGIC;
  SIGNAL nor_615_nl : STD_LOGIC;
  SIGNAL mux_602_nl : STD_LOGIC;
  SIGNAL mux_601_nl : STD_LOGIC;
  SIGNAL or_1364_nl : STD_LOGIC;
  SIGNAL mux_600_nl : STD_LOGIC;
  SIGNAL mux_599_nl : STD_LOGIC;
  SIGNAL or_867_nl : STD_LOGIC;
  SIGNAL mux_598_nl : STD_LOGIC;
  SIGNAL nor_616_nl : STD_LOGIC;
  SIGNAL mux_597_nl : STD_LOGIC;
  SIGNAL nor_617_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_SF_LOOP_3_nor_nl : STD_LOGIC;
  SIGNAL mux_613_nl : STD_LOGIC;
  SIGNAL mux_612_nl : STD_LOGIC;
  SIGNAL mux_611_nl : STD_LOGIC;
  SIGNAL mux_610_nl : STD_LOGIC;
  SIGNAL mux_609_nl : STD_LOGIC;
  SIGNAL mux_608_nl : STD_LOGIC;
  SIGNAL mux_607_nl : STD_LOGIC;
  SIGNAL nor_148_nl : STD_LOGIC;
  SIGNAL or_875_nl : STD_LOGIC;
  SIGNAL nor_911_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_2_if_mux1h_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_2_acc_4_nl : STD_LOGIC_VECTOR (40 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_2_attention_abs_2_nand_nl : STD_LOGIC;
  SIGNAL attention_abs_2_mux_2_nl : STD_LOGIC_VECTOR (38 DOWNTO 0);
  SIGNAL mux_619_nl : STD_LOGIC;
  SIGNAL or_1344_nl : STD_LOGIC;
  SIGNAL mux_618_nl : STD_LOGIC;
  SIGNAL or_889_nl : STD_LOGIC;
  SIGNAL or_1345_nl : STD_LOGIC;
  SIGNAL mux_617_nl : STD_LOGIC;
  SIGNAL or_886_nl : STD_LOGIC;
  SIGNAL or_884_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mux1h_11_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mux1h_17_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mux1h_18_nl : STD_LOGIC;
  SIGNAL nor_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mux_2_nl : STD_LOGIC;
  SIGNAL mux_677_nl : STD_LOGIC;
  SIGNAL mux_676_nl : STD_LOGIC;
  SIGNAL mux_675_nl : STD_LOGIC;
  SIGNAL nand_40_nl : STD_LOGIC;
  SIGNAL mux_674_nl : STD_LOGIC;
  SIGNAL mux_673_nl : STD_LOGIC;
  SIGNAL mux_672_nl : STD_LOGIC;
  SIGNAL and_921_nl : STD_LOGIC;
  SIGNAL mux_671_nl : STD_LOGIC;
  SIGNAL mux_670_nl : STD_LOGIC;
  SIGNAL mux_669_nl : STD_LOGIC;
  SIGNAL mux_668_nl : STD_LOGIC;
  SIGNAL mux_667_nl : STD_LOGIC;
  SIGNAL mux_666_nl : STD_LOGIC;
  SIGNAL nand_213_nl : STD_LOGIC;
  SIGNAL mux_664_nl : STD_LOGIC;
  SIGNAL or_961_nl : STD_LOGIC;
  SIGNAL mux_663_nl : STD_LOGIC;
  SIGNAL mux_662_nl : STD_LOGIC;
  SIGNAL mux_661_nl : STD_LOGIC;
  SIGNAL or_959_nl : STD_LOGIC;
  SIGNAL mux_660_nl : STD_LOGIC;
  SIGNAL or_956_nl : STD_LOGIC;
  SIGNAL mux_659_nl : STD_LOGIC;
  SIGNAL or_954_nl : STD_LOGIC;
  SIGNAL and_612_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_1_or_nl : STD_LOGIC;
  SIGNAL and_622_nl : STD_LOGIC;
  SIGNAL mux_691_nl : STD_LOGIC;
  SIGNAL mux_690_nl : STD_LOGIC;
  SIGNAL or_1347_nl : STD_LOGIC;
  SIGNAL mux_689_nl : STD_LOGIC;
  SIGNAL mux_688_nl : STD_LOGIC;
  SIGNAL mux_687_nl : STD_LOGIC;
  SIGNAL nor_504_nl : STD_LOGIC;
  SIGNAL and_616_nl : STD_LOGIC;
  SIGNAL mux_686_nl : STD_LOGIC;
  SIGNAL nor_505_nl : STD_LOGIC;
  SIGNAL nor_506_nl : STD_LOGIC;
  SIGNAL mux_685_nl : STD_LOGIC;
  SIGNAL mux_684_nl : STD_LOGIC;
  SIGNAL and_614_nl : STD_LOGIC;
  SIGNAL nor_507_nl : STD_LOGIC;
  SIGNAL mux_683_nl : STD_LOGIC;
  SIGNAL nand_214_nl : STD_LOGIC;
  SIGNAL mux_682_nl : STD_LOGIC;
  SIGNAL and_613_nl : STD_LOGIC;
  SIGNAL mux_710_nl : STD_LOGIC;
  SIGNAL mux_709_nl : STD_LOGIC;
  SIGNAL mux_708_nl : STD_LOGIC;
  SIGNAL mux_707_nl : STD_LOGIC;
  SIGNAL or_1009_nl : STD_LOGIC;
  SIGNAL mux_706_nl : STD_LOGIC;
  SIGNAL or_1004_nl : STD_LOGIC;
  SIGNAL mux_705_nl : STD_LOGIC;
  SIGNAL mux_704_nl : STD_LOGIC;
  SIGNAL or_1001_nl : STD_LOGIC;
  SIGNAL or_1000_nl : STD_LOGIC;
  SIGNAL mux_702_nl : STD_LOGIC;
  SIGNAL or_999_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_nor_nl
      : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_nor_nl : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux1h_6_nl : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_15_nl : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux1h_7_nl : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_not_1_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_23_nl : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux1h_8_nl : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_not_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_24_nl : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux1h_9_nl : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_not_2_nl : STD_LOGIC;
  SIGNAL mux_944_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_acc_192_nl : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_acc_17_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL mux_720_nl : STD_LOGIC;
  SIGNAL mux_719_nl : STD_LOGIC;
  SIGNAL nand_43_nl : STD_LOGIC;
  SIGNAL or_1025_nl : STD_LOGIC;
  SIGNAL mux_718_nl : STD_LOGIC;
  SIGNAL mux_717_nl : STD_LOGIC;
  SIGNAL or_1023_nl : STD_LOGIC;
  SIGNAL mux_941_nl : STD_LOGIC;
  SIGNAL mux_748_nl : STD_LOGIC;
  SIGNAL mux_747_nl : STD_LOGIC;
  SIGNAL mux_746_nl : STD_LOGIC;
  SIGNAL mux_745_nl : STD_LOGIC;
  SIGNAL or_1056_nl : STD_LOGIC;
  SIGNAL mux_744_nl : STD_LOGIC;
  SIGNAL mux_743_nl : STD_LOGIC;
  SIGNAL or_1050_nl : STD_LOGIC;
  SIGNAL mux_742_nl : STD_LOGIC;
  SIGNAL mux_741_nl : STD_LOGIC;
  SIGNAL mux_740_nl : STD_LOGIC;
  SIGNAL mux_739_nl : STD_LOGIC;
  SIGNAL mux_738_nl : STD_LOGIC;
  SIGNAL mux_737_nl : STD_LOGIC;
  SIGNAL mux_736_nl : STD_LOGIC;
  SIGNAL or_1046_nl : STD_LOGIC;
  SIGNAL mux_735_nl : STD_LOGIC;
  SIGNAL mux_734_nl : STD_LOGIC;
  SIGNAL or_1045_nl : STD_LOGIC;
  SIGNAL or_1040_nl : STD_LOGIC;
  SIGNAL mux_733_nl : STD_LOGIC;
  SIGNAL mux_732_nl : STD_LOGIC;
  SIGNAL mux_731_nl : STD_LOGIC;
  SIGNAL mux_730_nl : STD_LOGIC;
  SIGNAL mux_729_nl : STD_LOGIC;
  SIGNAL mux_727_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_1_i_mux1h_5_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_1_i_and_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_1_i_and_4_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_1_i_mux1h_8_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_1_i_not_2_nl : STD_LOGIC;
  SIGNAL mux_770_nl : STD_LOGIC;
  SIGNAL nor_543_nl : STD_LOGIC;
  SIGNAL mux_769_nl : STD_LOGIC;
  SIGNAL or_1085_nl : STD_LOGIC;
  SIGNAL mux_768_nl : STD_LOGIC;
  SIGNAL mux_767_nl : STD_LOGIC;
  SIGNAL mux_766_nl : STD_LOGIC;
  SIGNAL mux_765_nl : STD_LOGIC;
  SIGNAL nor_540_nl : STD_LOGIC;
  SIGNAL mux_764_nl : STD_LOGIC;
  SIGNAL mux_763_nl : STD_LOGIC;
  SIGNAL mux_762_nl : STD_LOGIC;
  SIGNAL and_938_nl : STD_LOGIC;
  SIGNAL nor_541_nl : STD_LOGIC;
  SIGNAL mux_761_nl : STD_LOGIC;
  SIGNAL mux_760_nl : STD_LOGIC;
  SIGNAL nand_226_nl : STD_LOGIC;
  SIGNAL nand_227_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_1_i_nand_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_1_i_mux1h_6_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_2_1_j_not_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_1_i_mux1h_9_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mux1h_12_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_acc_240_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_and_14_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_and_15_nl : STD_LOGIC;
  SIGNAL nor_908_nl : STD_LOGIC;
  SIGNAL mux_789_nl : STD_LOGIC;
  SIGNAL mux_788_nl : STD_LOGIC;
  SIGNAL and_947_nl : STD_LOGIC;
  SIGNAL mux_787_nl : STD_LOGIC;
  SIGNAL mux_786_nl : STD_LOGIC;
  SIGNAL and_948_nl : STD_LOGIC;
  SIGNAL mux_785_nl : STD_LOGIC;
  SIGNAL nor_553_nl : STD_LOGIC;
  SIGNAL nor_554_nl : STD_LOGIC;
  SIGNAL mux_784_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mux1h_15_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL not_2256_nl : STD_LOGIC;
  SIGNAL mux_798_nl : STD_LOGIC;
  SIGNAL nand_46_nl : STD_LOGIC;
  SIGNAL mux_796_nl : STD_LOGIC;
  SIGNAL nor_555_nl : STD_LOGIC;
  SIGNAL mux_795_nl : STD_LOGIC;
  SIGNAL mux_794_nl : STD_LOGIC;
  SIGNAL and_951_nl : STD_LOGIC;
  SIGNAL mux_793_nl : STD_LOGIC;
  SIGNAL mux_792_nl : STD_LOGIC;
  SIGNAL nor_556_nl : STD_LOGIC;
  SIGNAL mux_791_nl : STD_LOGIC;
  SIGNAL and_659_nl : STD_LOGIC;
  SIGNAL or_1107_nl : STD_LOGIC;
  SIGNAL mux_790_nl : STD_LOGIC;
  SIGNAL mux_802_nl : STD_LOGIC;
  SIGNAL mux_801_nl : STD_LOGIC;
  SIGNAL mux_800_nl : STD_LOGIC;
  SIGNAL mux_799_nl : STD_LOGIC;
  SIGNAL nand_235_nl : STD_LOGIC;
  SIGNAL mux_806_nl : STD_LOGIC;
  SIGNAL nor_559_nl : STD_LOGIC;
  SIGNAL mux_805_nl : STD_LOGIC;
  SIGNAL mux_804_nl : STD_LOGIC;
  SIGNAL nand_250_nl : STD_LOGIC;
  SIGNAL nand_251_nl : STD_LOGIC;
  SIGNAL and_955_nl : STD_LOGIC;
  SIGNAL mux_803_nl : STD_LOGIC;
  SIGNAL or_258_nl : STD_LOGIC;
  SIGNAL mux_807_nl : STD_LOGIC;
  SIGNAL or_1124_nl : STD_LOGIC;
  SIGNAL mux_943_nl : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_nor_1_nl
      : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_and_10_nl : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_1_qif_and_1_nl : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_1_qif_and_2_nl : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_1_qif_or_1_nl : STD_LOGIC;
  SIGNAL mux_814_nl : STD_LOGIC;
  SIGNAL mux_813_nl : STD_LOGIC;
  SIGNAL or_1136_nl : STD_LOGIC;
  SIGNAL nand_49_nl : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_LINEAR_FORWARD_NO_MUL_LOOP_4_and_1_nl : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_1_ki_mux_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_acc_241_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL mux_830_nl : STD_LOGIC;
  SIGNAL mux_829_nl : STD_LOGIC;
  SIGNAL mux_828_nl : STD_LOGIC;
  SIGNAL or_1155_nl : STD_LOGIC;
  SIGNAL or_1154_nl : STD_LOGIC;
  SIGNAL or_1153_nl : STD_LOGIC;
  SIGNAL mux_942_nl : STD_LOGIC;
  SIGNAL mux_840_nl : STD_LOGIC;
  SIGNAL nor_566_nl : STD_LOGIC;
  SIGNAL mux_839_nl : STD_LOGIC;
  SIGNAL nor_567_nl : STD_LOGIC;
  SIGNAL mux_847_nl : STD_LOGIC;
  SIGNAL nor_568_nl : STD_LOGIC;
  SIGNAL mux_846_nl : STD_LOGIC;
  SIGNAL mux_845_nl : STD_LOGIC;
  SIGNAL mux_844_nl : STD_LOGIC;
  SIGNAL mux_843_nl : STD_LOGIC;
  SIGNAL and_958_nl : STD_LOGIC;
  SIGNAL mux_842_nl : STD_LOGIC;
  SIGNAL mux_841_nl : STD_LOGIC;
  SIGNAL nand_51_nl : STD_LOGIC;
  SIGNAL mux_849_nl : STD_LOGIC;
  SIGNAL mux_838_nl : STD_LOGIC;
  SIGNAL or_1162_nl : STD_LOGIC;
  SIGNAL mux_837_nl : STD_LOGIC;
  SIGNAL or_1161_nl : STD_LOGIC;
  SIGNAL mux_836_nl : STD_LOGIC;
  SIGNAL nand_50_nl : STD_LOGIC;
  SIGNAL mux_835_nl : STD_LOGIC;
  SIGNAL mux_834_nl : STD_LOGIC;
  SIGNAL mux_833_nl : STD_LOGIC;
  SIGNAL or_1158_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_k_mux1h_6_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_k_mux1h_8_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_k_or_nl : STD_LOGIC;
  SIGNAL mux1h_4_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_k_and_2_nl : STD_LOGIC;
  SIGNAL or_1576_nl : STD_LOGIC;
  SIGNAL mux_861_nl : STD_LOGIC;
  SIGNAL nor_571_nl : STD_LOGIC;
  SIGNAL mux_860_nl : STD_LOGIC;
  SIGNAL or_1176_nl : STD_LOGIC;
  SIGNAL mux_859_nl : STD_LOGIC;
  SIGNAL or_1175_nl : STD_LOGIC;
  SIGNAL or_1174_nl : STD_LOGIC;
  SIGNAL and_961_nl : STD_LOGIC;
  SIGNAL mux_858_nl : STD_LOGIC;
  SIGNAL nor_570_nl : STD_LOGIC;
  SIGNAL mux_857_nl : STD_LOGIC;
  SIGNAL mux_856_nl : STD_LOGIC;
  SIGNAL mux_855_nl : STD_LOGIC;
  SIGNAL mux_854_nl : STD_LOGIC;
  SIGNAL and_960_nl : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_k_mux1h_5_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_k_mux1h_10_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL mux1h_5_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_acc_22_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL or_1569_nl : STD_LOGIC;
  SIGNAL mux_nl : STD_LOGIC;
  SIGNAL or_1575_nl : STD_LOGIC;
  SIGNAL nor_910_nl : STD_LOGIC;
  SIGNAL mux_867_nl : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_LINEAR_FORWARD_NO_MUL_LOOP_4_and_2_nl : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_2_ki_mux_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL mux_822_nl : STD_LOGIC;
  SIGNAL mux_821_nl : STD_LOGIC;
  SIGNAL mux_820_nl : STD_LOGIC;
  SIGNAL mux_819_nl : STD_LOGIC;
  SIGNAL mux_818_nl : STD_LOGIC;
  SIGNAL mux_817_nl : STD_LOGIC;
  SIGNAL mux_816_nl : STD_LOGIC;
  SIGNAL or_1141_nl : STD_LOGIC;
  SIGNAL mux_815_nl : STD_LOGIC;
  SIGNAL or_1139_nl : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_or_2_nl : STD_LOGIC;
  SIGNAL and_710_nl : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_1_or_2_nl : STD_LOGIC;
  SIGNAL mux_953_nl : STD_LOGIC;
  SIGNAL mux_952_nl : STD_LOGIC;
  SIGNAL nor_597_nl : STD_LOGIC;
  SIGNAL mux_951_nl : STD_LOGIC;
  SIGNAL and_711_nl : STD_LOGIC;
  SIGNAL mux_950_nl : STD_LOGIC;
  SIGNAL mux_949_nl : STD_LOGIC;
  SIGNAL mux_948_nl : STD_LOGIC;
  SIGNAL nor_598_nl : STD_LOGIC;
  SIGNAL nor_599_nl : STD_LOGIC;
  SIGNAL mux_947_nl : STD_LOGIC;
  SIGNAL or_1280_nl : STD_LOGIC;
  SIGNAL or_1279_nl : STD_LOGIC;
  SIGNAL or_1358_nl : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_3_or_5_nl : STD_LOGIC;
  SIGNAL mux_966_nl : STD_LOGIC;
  SIGNAL mux_965_nl : STD_LOGIC;
  SIGNAL mux_964_nl : STD_LOGIC;
  SIGNAL mux_963_nl : STD_LOGIC;
  SIGNAL nand_241_nl : STD_LOGIC;
  SIGNAL mux_962_nl : STD_LOGIC;
  SIGNAL or_1293_nl : STD_LOGIC;
  SIGNAL mux_961_nl : STD_LOGIC;
  SIGNAL mux_960_nl : STD_LOGIC;
  SIGNAL mux_959_nl : STD_LOGIC;
  SIGNAL or_1292_nl : STD_LOGIC;
  SIGNAL mux_958_nl : STD_LOGIC;
  SIGNAL mux_923_nl : STD_LOGIC;
  SIGNAL mux_922_nl : STD_LOGIC;
  SIGNAL mux_921_nl : STD_LOGIC;
  SIGNAL mux_920_nl : STD_LOGIC;
  SIGNAL mux_919_nl : STD_LOGIC;
  SIGNAL nor_582_nl : STD_LOGIC;
  SIGNAL nor_583_nl : STD_LOGIC;
  SIGNAL nor_584_nl : STD_LOGIC;
  SIGNAL mux_918_nl : STD_LOGIC;
  SIGNAL nor_585_nl : STD_LOGIC;
  SIGNAL mux_917_nl : STD_LOGIC;
  SIGNAL and_969_nl : STD_LOGIC;
  SIGNAL nor_586_nl : STD_LOGIC;
  SIGNAL nor_587_nl : STD_LOGIC;
  SIGNAL mux_940_nl : STD_LOGIC;
  SIGNAL mux_939_nl : STD_LOGIC;
  SIGNAL mux_938_nl : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_acc_15_nl : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_66_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_80_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_86_nl : STD_LOGIC_VECTOR (5 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_76_nl : STD_LOGIC_VECTOR (2 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_74_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_64_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_92_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL RMS_NORM_LOOP_2_2_mul_nl : STD_LOGIC_VECTOR (71 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_acc_11_nl : STD_LOGIC_VECTOR (50 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_acc_10_nl : STD_LOGIC_VECTOR (48 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_acc_6_nl : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_88_nl : STD_LOGIC_VECTOR (2 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_90_nl : STD_LOGIC_VECTOR (5 DOWNTO
      0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_7_nl : STD_LOGIC_VECTOR (46 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_5_nl : STD_LOGIC_VECTOR (41 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_qif_acc_4_nl : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_1_qif_acc_4_nl : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL SOFTMAX_LOOP_4_SOFTMAX_LOOP_4_nor_nl : STD_LOGIC;
  SIGNAL SOFTMAX_LOOP_4_and_1_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_acc_82_nl : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_39_nl : STD_LOGIC_VECTOR (17 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_nl_1 : STD_LOGIC_VECTOR (23 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_nl_2 : STD_LOGIC_VECTOR (40 DOWNTO
      0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_3_LINEAR_FORWARD_NO_MUL_LOOP_4_3_nor_nl : STD_LOGIC;
  SIGNAL mux_223_nl : STD_LOGIC;
  SIGNAL nor_326_nl : STD_LOGIC;
  SIGNAL mux_222_nl : STD_LOGIC;
  SIGNAL nor_327_nl : STD_LOGIC;
  SIGNAL mux_221_nl : STD_LOGIC;
  SIGNAL nor_328_nl : STD_LOGIC;
  SIGNAL and_811_nl : STD_LOGIC;
  SIGNAL nor_329_nl : STD_LOGIC;
  SIGNAL mux_235_nl : STD_LOGIC;
  SIGNAL mux_237_nl : STD_LOGIC;
  SIGNAL mux_239_nl : STD_LOGIC;
  SIGNAL mux_247_nl : STD_LOGIC;
  SIGNAL and_813_nl : STD_LOGIC;
  SIGNAL mux_250_nl : STD_LOGIC;
  SIGNAL mux_252_nl : STD_LOGIC;
  SIGNAL mux_251_nl : STD_LOGIC;
  SIGNAL mux_253_nl : STD_LOGIC;
  SIGNAL nor_334_nl : STD_LOGIC;
  SIGNAL or_473_nl : STD_LOGIC;
  SIGNAL nand_136_nl : STD_LOGIC;
  SIGNAL or_480_nl : STD_LOGIC;
  SIGNAL or_492_nl : STD_LOGIC;
  SIGNAL and_805_nl : STD_LOGIC;
  SIGNAL or_582_nl : STD_LOGIC;
  SIGNAL or_580_nl : STD_LOGIC;
  SIGNAL mux_370_nl : STD_LOGIC;
  SIGNAL nor_343_nl : STD_LOGIC;
  SIGNAL nor_344_nl : STD_LOGIC;
  SIGNAL nor_345_nl : STD_LOGIC;
  SIGNAL nor_346_nl : STD_LOGIC;
  SIGNAL mux_427_nl : STD_LOGIC;
  SIGNAL mux_426_nl : STD_LOGIC;
  SIGNAL nor_348_nl : STD_LOGIC;
  SIGNAL mux_425_nl : STD_LOGIC;
  SIGNAL nor_350_nl : STD_LOGIC;
  SIGNAL nor_351_nl : STD_LOGIC;
  SIGNAL mux_457_nl : STD_LOGIC;
  SIGNAL nor_352_nl : STD_LOGIC;
  SIGNAL and_797_nl : STD_LOGIC;
  SIGNAL mux_579_nl : STD_LOGIC;
  SIGNAL nor_354_nl : STD_LOGIC;
  SIGNAL mux_678_nl : STD_LOGIC;
  SIGNAL or_1320_nl : STD_LOGIC;
  SIGNAL nand_143_nl : STD_LOGIC;
  SIGNAL mux_679_nl : STD_LOGIC;
  SIGNAL or_970_nl : STD_LOGIC;
  SIGNAL mux_680_nl : STD_LOGIC;
  SIGNAL mux_874_nl : STD_LOGIC;
  SIGNAL mux_897_nl : STD_LOGIC;
  SIGNAL mux_955_nl : STD_LOGIC;
  SIGNAL or_810_nl : STD_LOGIC;
  SIGNAL mux_209_nl : STD_LOGIC;
  SIGNAL or_1324_nl : STD_LOGIC;
  SIGNAL nand_157_nl : STD_LOGIC;
  SIGNAL mux_441_nl : STD_LOGIC;
  SIGNAL mux_440_nl : STD_LOGIC;
  SIGNAL or_675_nl : STD_LOGIC;
  SIGNAL mux_439_nl : STD_LOGIC;
  SIGNAL mux_438_nl : STD_LOGIC;
  SIGNAL nand_185_nl : STD_LOGIC;
  SIGNAL or_673_nl : STD_LOGIC;
  SIGNAL or_672_nl : STD_LOGIC;
  SIGNAL mux_437_nl : STD_LOGIC;
  SIGNAL or_671_nl : STD_LOGIC;
  SIGNAL mux_436_nl : STD_LOGIC;
  SIGNAL mux_435_nl : STD_LOGIC;
  SIGNAL mux_434_nl : STD_LOGIC;
  SIGNAL mux_433_nl : STD_LOGIC;
  SIGNAL mux_432_nl : STD_LOGIC;
  SIGNAL mux_431_nl : STD_LOGIC;
  SIGNAL mux_430_nl : STD_LOGIC;
  SIGNAL and_889_nl : STD_LOGIC;
  SIGNAL or_667_nl : STD_LOGIC;
  SIGNAL or_664_nl : STD_LOGIC;
  SIGNAL mux_429_nl : STD_LOGIC;
  SIGNAL or_663_nl : STD_LOGIC;
  SIGNAL mux_428_nl : STD_LOGIC;
  SIGNAL or_662_nl : STD_LOGIC;
  SIGNAL or_661_nl : STD_LOGIC;
  SIGNAL or_659_nl : STD_LOGIC;
  SIGNAL mux_492_nl : STD_LOGIC;
  SIGNAL or_1335_nl : STD_LOGIC;
  SIGNAL mux_491_nl : STD_LOGIC;
  SIGNAL or_718_nl : STD_LOGIC;
  SIGNAL or_716_nl : STD_LOGIC;
  SIGNAL or_1336_nl : STD_LOGIC;
  SIGNAL mux_532_nl : STD_LOGIC;
  SIGNAL nor_453_nl : STD_LOGIC;
  SIGNAL mux_531_nl : STD_LOGIC;
  SIGNAL nor_454_nl : STD_LOGIC;
  SIGNAL mux_533_nl : STD_LOGIC;
  SIGNAL or_774_nl : STD_LOGIC;
  SIGNAL mux_534_nl : STD_LOGIC;
  SIGNAL nor_455_nl : STD_LOGIC;
  SIGNAL nor_456_nl : STD_LOGIC;
  SIGNAL mux_548_nl : STD_LOGIC;
  SIGNAL or_1340_nl : STD_LOGIC;
  SIGNAL or_1341_nl : STD_LOGIC;
  SIGNAL mux_554_nl : STD_LOGIC;
  SIGNAL mux_553_nl : STD_LOGIC;
  SIGNAL nand_202_nl : STD_LOGIC;
  SIGNAL or_801_nl : STD_LOGIC;
  SIGNAL mux_552_nl : STD_LOGIC;
  SIGNAL mux_551_nl : STD_LOGIC;
  SIGNAL mux_550_nl : STD_LOGIC;
  SIGNAL mux_549_nl : STD_LOGIC;
  SIGNAL mux_620_nl : STD_LOGIC;
  SIGNAL nor_486_nl : STD_LOGIC;
  SIGNAL nor_487_nl : STD_LOGIC;
  SIGNAL mux_621_nl : STD_LOGIC;
  SIGNAL nor_630_nl : STD_LOGIC;
  SIGNAL nor_631_nl : STD_LOGIC;
  SIGNAL mux_653_nl : STD_LOGIC;
  SIGNAL nor_496_nl : STD_LOGIC;
  SIGNAL nor_497_nl : STD_LOGIC;
  SIGNAL nor_499_nl : STD_LOGIC;
  SIGNAL mux_657_nl : STD_LOGIC;
  SIGNAL mux_656_nl : STD_LOGIC;
  SIGNAL or_952_nl : STD_LOGIC;
  SIGNAL mux_655_nl : STD_LOGIC;
  SIGNAL nand_211_nl : STD_LOGIC;
  SIGNAL or_949_nl : STD_LOGIC;
  SIGNAL or_947_nl : STD_LOGIC;
  SIGNAL and_919_nl : STD_LOGIC;
  SIGNAL mux_654_nl : STD_LOGIC;
  SIGNAL and_918_nl : STD_LOGIC;
  SIGNAL nor_498_nl : STD_LOGIC;
  SIGNAL mux_692_nl : STD_LOGIC;
  SIGNAL nand_216_nl : STD_LOGIC;
  SIGNAL or_1348_nl : STD_LOGIC;
  SIGNAL mux_715_nl : STD_LOGIC;
  SIGNAL mux_721_nl : STD_LOGIC;
  SIGNAL mux_725_nl : STD_LOGIC;
  SIGNAL mux_724_nl : STD_LOGIC;
  SIGNAL nor_520_nl : STD_LOGIC;
  SIGNAL mux_723_nl : STD_LOGIC;
  SIGNAL nor_521_nl : STD_LOGIC;
  SIGNAL nor_522_nl : STD_LOGIC;
  SIGNAL nor_523_nl : STD_LOGIC;
  SIGNAL mux_722_nl : STD_LOGIC;
  SIGNAL nor_519_nl : STD_LOGIC;
  SIGNAL and_931_nl : STD_LOGIC;
  SIGNAL mux_752_nl : STD_LOGIC;
  SIGNAL nor_531_nl : STD_LOGIC;
  SIGNAL mux_751_nl : STD_LOGIC;
  SIGNAL or_1062_nl : STD_LOGIC;
  SIGNAL or_1061_nl : STD_LOGIC;
  SIGNAL nor_532_nl : STD_LOGIC;
  SIGNAL mux_750_nl : STD_LOGIC;
  SIGNAL mux_749_nl : STD_LOGIC;
  SIGNAL or_1350_nl : STD_LOGIC;
  SIGNAL or_1058_nl : STD_LOGIC;
  SIGNAL mux_759_nl : STD_LOGIC;
  SIGNAL mux_758_nl : STD_LOGIC;
  SIGNAL mux_757_nl : STD_LOGIC;
  SIGNAL nor_533_nl : STD_LOGIC;
  SIGNAL mux_756_nl : STD_LOGIC;
  SIGNAL or_1076_nl : STD_LOGIC;
  SIGNAL or_1075_nl : STD_LOGIC;
  SIGNAL nor_534_nl : STD_LOGIC;
  SIGNAL nor_535_nl : STD_LOGIC;
  SIGNAL mux_755_nl : STD_LOGIC;
  SIGNAL and_935_nl : STD_LOGIC;
  SIGNAL mux_754_nl : STD_LOGIC;
  SIGNAL mux_753_nl : STD_LOGIC;
  SIGNAL nor_536_nl : STD_LOGIC;
  SIGNAL nor_537_nl : STD_LOGIC;
  SIGNAL nor_538_nl : STD_LOGIC;
  SIGNAL mux_783_nl : STD_LOGIC;
  SIGNAL or_1098_nl : STD_LOGIC;
  SIGNAL mux_782_nl : STD_LOGIC;
  SIGNAL nor_545_nl : STD_LOGIC;
  SIGNAL mux_781_nl : STD_LOGIC;
  SIGNAL mux_780_nl : STD_LOGIC;
  SIGNAL mux_779_nl : STD_LOGIC;
  SIGNAL mux_778_nl : STD_LOGIC;
  SIGNAL nor_544_nl : STD_LOGIC;
  SIGNAL mux_777_nl : STD_LOGIC;
  SIGNAL or_1095_nl : STD_LOGIC;
  SIGNAL mux_776_nl : STD_LOGIC;
  SIGNAL mux_775_nl : STD_LOGIC;
  SIGNAL mux_774_nl : STD_LOGIC;
  SIGNAL and_942_nl : STD_LOGIC;
  SIGNAL and_943_nl : STD_LOGIC;
  SIGNAL mux_772_nl : STD_LOGIC;
  SIGNAL nor_547_nl : STD_LOGIC;
  SIGNAL nor_548_nl : STD_LOGIC;
  SIGNAL mux_771_nl : STD_LOGIC;
  SIGNAL or_1089_nl : STD_LOGIC;
  SIGNAL mux_809_nl : STD_LOGIC;
  SIGNAL mux_869_nl : STD_LOGIC;
  SIGNAL and_nl : STD_LOGIC;
  SIGNAL nor_632_nl : STD_LOGIC;
  SIGNAL mux_868_nl : STD_LOGIC;
  SIGNAL mux_884_nl : STD_LOGIC;
  SIGNAL mux_883_nl : STD_LOGIC;
  SIGNAL and_692_nl : STD_LOGIC;
  SIGNAL mux_882_nl : STD_LOGIC;
  SIGNAL mux_881_nl : STD_LOGIC;
  SIGNAL mux_880_nl : STD_LOGIC;
  SIGNAL mux_879_nl : STD_LOGIC;
  SIGNAL mux_878_nl : STD_LOGIC;
  SIGNAL mux_877_nl : STD_LOGIC;
  SIGNAL mux_876_nl : STD_LOGIC;
  SIGNAL or_1204_nl : STD_LOGIC;
  SIGNAL or_1203_nl : STD_LOGIC;
  SIGNAL mux_875_nl : STD_LOGIC;
  SIGNAL or_1200_nl : STD_LOGIC;
  SIGNAL mux_904_nl : STD_LOGIC;
  SIGNAL mux_903_nl : STD_LOGIC;
  SIGNAL mux_902_nl : STD_LOGIC;
  SIGNAL mux_901_nl : STD_LOGIC;
  SIGNAL mux_900_nl : STD_LOGIC;
  SIGNAL mux_899_nl : STD_LOGIC;
  SIGNAL mux_898_nl : STD_LOGIC;
  SIGNAL mux_930_nl : STD_LOGIC;
  SIGNAL mux_929_nl : STD_LOGIC;
  SIGNAL mux_928_nl : STD_LOGIC;
  SIGNAL mux_927_nl : STD_LOGIC;
  SIGNAL nor_588_nl : STD_LOGIC;
  SIGNAL nor_589_nl : STD_LOGIC;
  SIGNAL nor_590_nl : STD_LOGIC;
  SIGNAL nor_591_nl : STD_LOGIC;
  SIGNAL mux_926_nl : STD_LOGIC;
  SIGNAL mux_925_nl : STD_LOGIC;
  SIGNAL nor_592_nl : STD_LOGIC;
  SIGNAL nor_593_nl : STD_LOGIC;
  SIGNAL mux_924_nl : STD_LOGIC;
  SIGNAL nor_594_nl : STD_LOGIC;
  SIGNAL nor_595_nl : STD_LOGIC;
  SIGNAL mux_274_nl : STD_LOGIC;
  SIGNAL nor_380_nl : STD_LOGIC;
  SIGNAL nor_381_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_SF_LOOP_3_or_31_nl : STD_LOGIC;
  SIGNAL mux_331_nl : STD_LOGIC;
  SIGNAL mux_330_nl : STD_LOGIC;
  SIGNAL mux_329_nl : STD_LOGIC;
  SIGNAL mux_327_nl : STD_LOGIC;
  SIGNAL and_868_nl : STD_LOGIC;
  SIGNAL for_for_nand_nl : STD_LOGIC;
  SIGNAL mux_326_nl : STD_LOGIC;
  SIGNAL or_1329_nl : STD_LOGIC;
  SIGNAL or_1330_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_SF_LOOP_3_or_29_nl : STD_LOGIC;
  SIGNAL mux_323_nl : STD_LOGIC;
  SIGNAL mux_322_nl : STD_LOGIC;
  SIGNAL mux_321_nl : STD_LOGIC;
  SIGNAL mux_320_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_SF_LOOP_3_or_28_nl : STD_LOGIC;
  SIGNAL mux_319_nl : STD_LOGIC;
  SIGNAL mux_318_nl : STD_LOGIC;
  SIGNAL or_528_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_nand_1_nl : STD_LOGIC;
  SIGNAL mux_317_nl : STD_LOGIC;
  SIGNAL and_2251_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_nand_nl : STD_LOGIC;
  SIGNAL mux_312_nl : STD_LOGIC;
  SIGNAL nor_386_nl : STD_LOGIC;
  SIGNAL nor_387_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_SF_LOOP_3_or_25_nl : STD_LOGIC;
  SIGNAL mux_309_nl : STD_LOGIC;
  SIGNAL mux_308_nl : STD_LOGIC;
  SIGNAL nor_384_nl : STD_LOGIC;
  SIGNAL mux_307_nl : STD_LOGIC;
  SIGNAL mux_306_nl : STD_LOGIC;
  SIGNAL or_518_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_SF_LOOP_3_or_23_nl : STD_LOGIC;
  SIGNAL mux_300_nl : STD_LOGIC;
  SIGNAL mux_299_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_SF_LOOP_3_or_22_nl : STD_LOGIC;
  SIGNAL mux_296_nl : STD_LOGIC;
  SIGNAL mux_295_nl : STD_LOGIC;
  SIGNAL or_500_nl : STD_LOGIC;
  SIGNAL mux_294_nl : STD_LOGIC;
  SIGNAL mux_293_nl : STD_LOGIC;
  SIGNAL or_497_nl : STD_LOGIC;
  SIGNAL or_495_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_SF_LOOP_3_or_21_nl : STD_LOGIC;
  SIGNAL mux_292_nl : STD_LOGIC;
  SIGNAL mux_290_nl : STD_LOGIC;
  SIGNAL mux_289_nl : STD_LOGIC;
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_2_nand_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_nand_nl : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_1_nand_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_nand_1_nl : STD_LOGIC;
  SIGNAL mux_281_nl : STD_LOGIC;
  SIGNAL mux_280_nl : STD_LOGIC;
  SIGNAL nand_168_nl : STD_LOGIC;
  SIGNAL mux_279_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_nand_nl : STD_LOGIC;
  SIGNAL mux_276_nl : STD_LOGIC;
  SIGNAL mux_275_nl : STD_LOGIC;
  SIGNAL or_469_nl : STD_LOGIC;
  SIGNAL or_468_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_SF_LOOP_3_SF_LOOP_3_nand_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_SF_LOOP_3_or_5_nl : STD_LOGIC;
  SIGNAL mux_271_nl : STD_LOGIC;
  SIGNAL mux_270_nl : STD_LOGIC;
  SIGNAL mux_269_nl : STD_LOGIC;
  SIGNAL nand_167_nl : STD_LOGIC;
  SIGNAL mux_268_nl : STD_LOGIC;
  SIGNAL or_453_nl : STD_LOGIC;
  SIGNAL ATTN_2D_LOOP_3_nand_nl : STD_LOGIC;
  SIGNAL mux_267_nl : STD_LOGIC;
  SIGNAL nor_375_nl : STD_LOGIC;
  SIGNAL nor_376_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_nand_1_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_nand_nl : STD_LOGIC;
  SIGNAL for_for_and_1_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL for_for_mux1h_1_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL for_for_not_1_nl : STD_LOGIC;
  SIGNAL for_for_and_2_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL for_for_mux1h_5_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL for_for_not_2_nl : STD_LOGIC;
  SIGNAL for_for_or_2_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL for_for_and_3_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL for_for_mux1h_6_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL for_for_nor_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_3_INIT_2D_MEM_LOOP_2_3_and_nl : STD_LOGIC_VECTOR (23
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_3_mux_nl : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL not_2250_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_3_INIT_2D_MEM_LOOP_2_3_and_1_nl : STD_LOGIC_VECTOR (15
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_3_mux_1_nl : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL not_2251_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_3_or_nl : STD_LOGIC;
  SIGNAL mux_325_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_or_3_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_or_4_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_and_7_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_and_8_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_mux1h_4_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_mux1h_7_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_or_2_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_and_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_mux1h_9_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL not_2240_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_2_mux_4_nl : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_mux_7_nl : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL not_2249_nl : STD_LOGIC;
  SIGNAL mux_311_nl : STD_LOGIC;
  SIGNAL nor_385_nl : STD_LOGIC;
  SIGNAL and_867_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_mux1h_2_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_mux1h_5_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_mux1h_7_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_and_2_nl : STD_LOGIC_VECTOR (23
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_mux_2_nl : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL not_2247_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_and_3_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_2_mux_3_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_and_6_nl : STD_LOGIC_VECTOR (14
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_mux_6_nl : STD_LOGIC_VECTOR (14 DOWNTO 0);
  SIGNAL not_2268_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_1_mux1h_3_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_1_mux1h_7_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_1_mux1h_8_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_and_nl : STD_LOGIC_VECTOR (23
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_mux_nl : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL not_2245_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_and_1_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_2_mux_1_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_and_5_nl : STD_LOGIC_VECTOR (14
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_mux_5_nl : STD_LOGIC_VECTOR (14 DOWNTO 0);
  SIGNAL not_2267_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_nl : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_1_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_2_nl : STD_LOGIC_VECTOR (3
      DOWNTO 0);
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_mux1h_1_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_mux1h_5_nl : STD_LOGIC;
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_mux1h_3_nl : STD_LOGIC;
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_mux1h_4_nl : STD_LOGIC;
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_or_nl : STD_LOGIC;
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_RESHAPE_2D_TO_3D_LOOP_3_mux_nl : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_1_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_6_nl : STD_LOGIC;
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_3_nl : STD_LOGIC;
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_4_nl : STD_LOGIC;
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_5_nl : STD_LOGIC;
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_7_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_2_RESHAPE_2D_TO_3D_LOOP_3_2_mux_nl : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_2_RESHAPE_2D_TO_3D_LOOP_3_2_mux_1_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_acc_7_nl : STD_LOGIC_VECTOR (55 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mul_4_nl : STD_LOGIC_VECTOR (55 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mux1h_4_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_or_3_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_or_5_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mux1h_16_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_or_6_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_or_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_or_1_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_or_2_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_or_3_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_acc_14_nl : STD_LOGIC_VECTOR (55 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mul_9_nl : STD_LOGIC_VECTOR (55 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_mux_nl : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_mux_1_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_mux_2_nl : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_mux_3_nl : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nand_nl : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_mux_nl : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_mux_1_nl : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_mux_4_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_mux_2_nl : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_mux_3_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_mux_5_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL CACHE_UPDATE_LOOP_3_1_mux_1_nl : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_1_mux_2_nl : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_1_mux_3_nl : STD_LOGIC_VECTOR (14 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_1_mux1h_1_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_1_mux1h_3_nl : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_1_mux1h_7_nl : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_1_mux1h_5_nl : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_1_mux1h_4_nl : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_1_or_nl : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_1_CACHE_UPDATE_LOOP_3_1_mux_nl : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_1_CACHE_UPDATE_LOOP_3_1_mux_2_nl : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_and_nl : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_1_nl : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_3_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_12_nl : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_4_nl : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_19_nl : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_5_nl : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_27_nl : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_6_nl : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_32_nl : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_37_nl : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_7_nl : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_40_nl : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_8_nl : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_9_nl : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_47_nl : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_10_nl : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_51_nl : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux_nl : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_55_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_acc_8_nl : STD_LOGIC_VECTOR (37 DOWNTO 0);
  SIGNAL and_289_nl : STD_LOGIC;
  SIGNAL and_290_nl : STD_LOGIC;
  SIGNAL mux1h_6_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_mux1h_35_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_mux1h_24_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_or_11_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_or_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_mux_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_or_13_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mux_1_nl : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mux_2_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mux_3_nl : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mux_5_nl : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL ATTN_2D_LOOP_3_and_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL ATTN_2D_LOOP_3_mux1h_1_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL ATTN_2D_LOOP_3_not_1_nl : STD_LOGIC;
  SIGNAL ATTN_2D_LOOP_3_and_1_nl : STD_LOGIC;
  SIGNAL ATTN_2D_LOOP_3_mux1h_4_nl : STD_LOGIC;
  SIGNAL ATTN_2D_LOOP_3_and_3_nl : STD_LOGIC;
  SIGNAL ATTN_2D_LOOP_3_mux1h_6_nl : STD_LOGIC;
  SIGNAL ATTN_2D_LOOP_3_and_4_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL ATTN_2D_LOOP_3_mux1h_7_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL ATTN_2D_LOOP_3_not_3_nl : STD_LOGIC;
  SIGNAL ATTN_2D_LOOP_3_or_2_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL ATTN_2D_LOOP_3_and_2_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL ATTN_2D_LOOP_3_mux1h_5_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL ATTN_2D_LOOP_3_nor_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_or_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_or_1_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_and_8_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_and_9_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_QUANTIZE_ACTIVATION_LOOP_5_1_or_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_QUANTIZE_ACTIVATION_LOOP_5_1_or_1_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_acc_6_nl : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_acc_12_nl : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_32_nl : STD_LOGIC_VECTOR (10 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_30_nl : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_nand_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_46_nl : STD_LOGIC_VECTOR (24 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_44_nl : STD_LOGIC_VECTOR (22 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_42_nl : STD_LOGIC_VECTOR (20 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_40_nl : STD_LOGIC_VECTOR (18 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_38_nl : STD_LOGIC_VECTOR (16 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_36_nl : STD_LOGIC_VECTOR (14 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_34_nl : STD_LOGIC_VECTOR (12 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_32_nl : STD_LOGIC_VECTOR (10 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_30_nl : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_nand_nl
      : STD_LOGIC;
  SIGNAL mux_981_nl : STD_LOGIC;
  SIGNAL nor_687_nl : STD_LOGIC;
  SIGNAL nor_688_nl : STD_LOGIC;
  SIGNAL mux_984_nl : STD_LOGIC;
  SIGNAL mux_983_nl : STD_LOGIC;
  SIGNAL mux_982_nl : STD_LOGIC;
  SIGNAL nor_697_nl : STD_LOGIC;
  SIGNAL mux_985_nl : STD_LOGIC;
  SIGNAL nor_698_nl : STD_LOGIC;
  SIGNAL nor_699_nl : STD_LOGIC;
  SIGNAL mux_986_nl : STD_LOGIC;
  SIGNAL nor_702_nl : STD_LOGIC;
  SIGNAL nor_703_nl : STD_LOGIC;
  SIGNAL mux_988_nl : STD_LOGIC;
  SIGNAL mux_987_nl : STD_LOGIC;
  SIGNAL nor_708_nl : STD_LOGIC;
  SIGNAL mux_989_nl : STD_LOGIC;
  SIGNAL or_nl : STD_LOGIC;
  SIGNAL or_1544_nl : STD_LOGIC;
  SIGNAL mux_990_nl : STD_LOGIC;
  SIGNAL or_1545_nl : STD_LOGIC;
  SIGNAL mux_992_nl : STD_LOGIC;
  SIGNAL nor_727_nl : STD_LOGIC;
  SIGNAL and_2253_nl : STD_LOGIC;
  SIGNAL nor_728_nl : STD_LOGIC;
  SIGNAL nor_737_nl : STD_LOGIC;
  SIGNAL mux_999_nl : STD_LOGIC;
  SIGNAL mux_998_nl : STD_LOGIC;
  SIGNAL or_1421_nl : STD_LOGIC;
  SIGNAL or_1420_nl : STD_LOGIC;
  SIGNAL mux_997_nl : STD_LOGIC;
  SIGNAL or_1418_nl : STD_LOGIC;
  SIGNAL or_1416_nl : STD_LOGIC;
  SIGNAL nor_738_nl : STD_LOGIC;
  SIGNAL mux_996_nl : STD_LOGIC;
  SIGNAL or_1413_nl : STD_LOGIC;
  SIGNAL mux_995_nl : STD_LOGIC;
  SIGNAL or_1411_nl : STD_LOGIC;
  SIGNAL or_1410_nl : STD_LOGIC;
  SIGNAL mux_1003_nl : STD_LOGIC;
  SIGNAL or_1549_nl : STD_LOGIC;
  SIGNAL mux_1002_nl : STD_LOGIC;
  SIGNAL nand_263_nl : STD_LOGIC;
  SIGNAL or_1550_nl : STD_LOGIC;
  SIGNAL mux_1001_nl : STD_LOGIC;
  SIGNAL mux_1016_nl : STD_LOGIC;
  SIGNAL mux_1015_nl : STD_LOGIC;
  SIGNAL mux_1014_nl : STD_LOGIC;
  SIGNAL or_1449_nl : STD_LOGIC;
  SIGNAL mux_1013_nl : STD_LOGIC;
  SIGNAL or_1448_nl : STD_LOGIC;
  SIGNAL mux_1012_nl : STD_LOGIC;
  SIGNAL or_1445_nl : STD_LOGIC;
  SIGNAL or_1443_nl : STD_LOGIC;
  SIGNAL mux_1011_nl : STD_LOGIC;
  SIGNAL or_1441_nl : STD_LOGIC;
  SIGNAL mux_1021_nl : STD_LOGIC;
  SIGNAL mux_1020_nl : STD_LOGIC;
  SIGNAL nor_784_nl : STD_LOGIC;
  SIGNAL mux_1019_nl : STD_LOGIC;
  SIGNAL nor_785_nl : STD_LOGIC;
  SIGNAL and_754_nl : STD_LOGIC;
  SIGNAL mux_1018_nl : STD_LOGIC;
  SIGNAL nor_786_nl : STD_LOGIC;
  SIGNAL nor_787_nl : STD_LOGIC;
  SIGNAL mux_1024_nl : STD_LOGIC;
  SIGNAL and_2257_nl : STD_LOGIC;
  SIGNAL mux_1023_nl : STD_LOGIC;
  SIGNAL nor_789_nl : STD_LOGIC;
  SIGNAL nor_790_nl : STD_LOGIC;
  SIGNAL mux_1022_nl : STD_LOGIC;
  SIGNAL nor_791_nl : STD_LOGIC;
  SIGNAL nor_792_nl : STD_LOGIC;
  SIGNAL mux_1052_nl : STD_LOGIC;
  SIGNAL nor_811_nl : STD_LOGIC;
  SIGNAL nor_812_nl : STD_LOGIC;
  SIGNAL mux_1063_nl : STD_LOGIC;
  SIGNAL mux_1062_nl : STD_LOGIC;
  SIGNAL nor_832_nl : STD_LOGIC;
  SIGNAL nor_833_nl : STD_LOGIC;
  SIGNAL mux_1061_nl : STD_LOGIC;
  SIGNAL mux_1060_nl : STD_LOGIC;
  SIGNAL nor_835_nl : STD_LOGIC;
  SIGNAL mux_1064_nl : STD_LOGIC;
  SIGNAL mux_1074_nl : STD_LOGIC;
  SIGNAL mux_1073_nl : STD_LOGIC;
  SIGNAL mux_1072_nl : STD_LOGIC;
  SIGNAL mux_1071_nl : STD_LOGIC;
  SIGNAL mux_1034_nl : STD_LOGIC;
  SIGNAL nor_886_nl : STD_LOGIC;
  SIGNAL nor_887_nl : STD_LOGIC;
  SIGNAL mux_1039_nl : STD_LOGIC;
  SIGNAL mux_1038_nl : STD_LOGIC;
  SIGNAL mux_1037_nl : STD_LOGIC;
  SIGNAL nor_890_nl : STD_LOGIC;
  SIGNAL nor_891_nl : STD_LOGIC;
  SIGNAL mux_1036_nl : STD_LOGIC;
  SIGNAL and_2263_nl : STD_LOGIC;
  SIGNAL mux_1035_nl : STD_LOGIC;
  SIGNAL and_2262_nl : STD_LOGIC;
  SIGNAL nor_888_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_mux_1_nl
      : STD_LOGIC;
  SIGNAL SF_LOOP_3_acc_55_nl : STD_LOGIC_VECTOR (30 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_80_nl : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_73_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_76_nl : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_81_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_74_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_75_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_78_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_79_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_68_nl : STD_LOGIC_VECTOR (13 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_69_nl : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_70_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_71_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_62_nl : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_66_nl : STD_LOGIC_VECTOR (13 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_64_nl : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_12_nl : STD_LOGIC_VECTOR (16 DOWNTO 0);
  SIGNAL SF_LOOP_3_mux_70_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_mux_71_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_mux_72_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_SF_LOOP_3_and_10_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL SF_LOOP_3_mux_73_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_SF_LOOP_3_and_11_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_SF_LOOP_3_and_12_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_mux_74_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_mux_75_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_mux_76_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_mux_77_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_SF_LOOP_3_and_13_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL SF_LOOP_3_mux_78_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_mux_79_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_SF_LOOP_3_or_38_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL not_3341_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_mux_80_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_SF_LOOP_3_or_39_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL not_3342_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_mux_81_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_SF_LOOP_3_or_40_nl : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL not_3343_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_mux_82_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_mux_83_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_SF_LOOP_3_or_41_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_mux_84_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_SF_LOOP_3_or_42_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL not_3345_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_mux_85_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_18_nl
      : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux_126_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_19_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux_127_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_20_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux_128_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_21_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux_129_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_22_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux_130_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_23_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux_131_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_24_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux_132_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux_133_nl : STD_LOGIC_VECTOR (20 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux_134_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_12_nl : STD_LOGIC_VECTOR (30 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_94_nl : STD_LOGIC_VECTOR (30 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_95_nl : STD_LOGIC_VECTOR (28 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_96_nl : STD_LOGIC_VECTOR (26 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_97_nl : STD_LOGIC_VECTOR (24 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_98_nl : STD_LOGIC_VECTOR (22 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_99_nl : STD_LOGIC_VECTOR (20 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_mux_2_nl
      : STD_LOGIC_VECTOR (29 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_or_2_nl : STD_LOGIC;
  SIGNAL acc_5_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux_20_nl : STD_LOGIC;
  SIGNAL acc_6_nl : STD_LOGIC_VECTOR (10 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_13_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_mux_13_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_14_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_mux_14_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_15_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_mux_15_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_16_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_and_38_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux_21_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_and_39_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_and_18_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_3_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_mux_16_nl
      : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_acc_nl : STD_LOGIC_VECTOR (6 DOWNTO
      0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_mux_4_nl : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_mux_17_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_17_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_mux_18_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_18_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_mux_19_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_19_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_mux_20_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_4_nl
      : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL not_3348_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_mux_21_nl
      : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_mux_22_nl
      : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_5_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_and_40_nl : STD_LOGIC_VECTOR (13 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_89_nl : STD_LOGIC_VECTOR (13
      DOWNTO 0);
  SIGNAL not_3350_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_90_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_and_41_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_91_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_92_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_and_42_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_93_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_94_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_and_43_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_95_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_96_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_and_44_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_97_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_98_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_and_45_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_99_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_100_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_and_46_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_101_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_102_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_and_47_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_103_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_104_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_and_48_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_105_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_106_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_and_49_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_107_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_108_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_and_50_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_109_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_110_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_and_51_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_111_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_112_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_and_52_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_113_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_114_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_and_53_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_115_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_116_nl : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_117_nl : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_and_54_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_118_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_119_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_and_55_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_120_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_121_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_and_56_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_122_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_123_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_and_57_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_124_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_125_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_and_58_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_126_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_127_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_and_59_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_128_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_129_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_and_60_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_130_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_131_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_and_61_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_132_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_133_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_and_62_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_134_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_135_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_and_63_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_136_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_137_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_and_64_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_138_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_139_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_and_65_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_140_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_141_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_and_66_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_142_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_143_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_and_67_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_144_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_145_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_and_68_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_146_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_147_nl : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_1_2_and_5_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_1_2_mux1h_8_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL not_3364_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_1_2_mux1h_9_nl : STD_LOGIC_VECTOR (30 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_1_2_and_6_nl : STD_LOGIC_VECTOR (34 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_1_2_mux1h_10_nl : STD_LOGIC_VECTOR (34 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_1_2_and_7_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_1_2_mux1h_11_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_1_2_and_8_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_1_2_mux1h_12_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_1_2_and_9_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_1_2_mux1h_13_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_1_2_mux1h_14_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_1_2_mux1h_15_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_1_1_mux1h_10_nl : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_1_1_or_10_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_1_1_mux1h_11_nl : STD_LOGIC_VECTOR (79 DOWNTO 0);
  SIGNAL attention_abs_2_qif_mux1h_2_nl : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL attention_abs_2_qif_mux1h_3_nl : STD_LOGIC_VECTOR (14 DOWNTO 0);
  SIGNAL acc_12_nl : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_1_CACHE_UPDATE_LOOP_3_1_mux_3_nl : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_1_or_7_nl : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_1_or_8_nl : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_1_mux1h_9_nl : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_1_or_9_nl : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_1_mux1h_10_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mux_6_nl : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_and_2_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_mux1h_30_nl : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_or_3_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_mux1h_7_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_or_4_nl : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_mux1h_8_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_or_2_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_mux1h_42_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_or_25_nl : STD_LOGIC;
  SIGNAL mux_1087_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL or_1577_nl : STD_LOGIC;
  SIGNAL acc_16_nl : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_mux_4_nl
      : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_or_22_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_nor_2_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_33_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_104_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL acc_17_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_or_26_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_mux1h_43_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_mux1h_44_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_nor_1_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_or_27_nl : STD_LOGIC;
  SIGNAL acc_18_nl : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_1_1_RMS_NORM_LOOP_1_1_and_5_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL RMS_NORM_LOOP_1_1_nor_5_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_1_1_and_2_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_1_1_mux1h_12_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL not_3368_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_1_1_RMS_NORM_LOOP_1_1_or_1_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_1_1_mux_6_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_1_1_mux1h_13_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_1_1_or_11_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_1_1_RMS_NORM_LOOP_1_1_and_6_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL RMS_NORM_LOOP_1_1_mux_7_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_1_1_RMS_NORM_LOOP_1_1_and_7_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_1_1_mux_8_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_1_1_RMS_NORM_LOOP_1_1_and_8_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL RMS_NORM_LOOP_1_1_nor_7_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_1_1_RMS_NORM_LOOP_1_1_and_9_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL RMS_NORM_LOOP_1_1_mux_9_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL not_3370_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_mux1h_45_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_mux1h_46_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_or_28_nl : STD_LOGIC;
  SIGNAL acc_20_nl : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_20_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_or_49_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_148_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_or_50_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_149_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_or_51_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_150_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_and_71_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_151_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_or_52_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux_22_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_and_73_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux_23_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_nor_31_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_and_74_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_152_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_or_53_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_153_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_or_12_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL mux_1088_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_or_13_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_mux1h_24_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_5_nl : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_or_14_nl : STD_LOGIC;
  SIGNAL acc_22_nl : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_15_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_61_nl : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_16_nl : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_and_4_nl : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_17_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_18_nl : STD_LOGIC;
  SIGNAL acc_23_nl : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL SF_LOOP_3_mux1h_31_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_mux1h_32_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_or_15_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_mux1h_33_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_mux1h_34_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_mux1h_35_nl : STD_LOGIC;
  SIGNAL acc_24_nl : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL SF_LOOP_3_SF_LOOP_3_SF_LOOP_3_and_2_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_SF_LOOP_3_mux_6_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_and_10_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_SF_LOOP_3_SF_LOOP_3_and_3_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_SF_LOOP_3_mux_7_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_SF_LOOP_3_and_14_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_SF_LOOP_3_or_43_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_mux_86_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_mux1h_36_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_or_16_nl : STD_LOGIC;
  SIGNAL acc_26_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_25_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux_136_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_105_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_nor_3_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_34_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_106_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL acc_27_nl : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL for_for_for_for_and_6_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL for_for_nor_5_nl : STD_LOGIC;
  SIGNAL for_for_mux1h_10_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL for_for_for_for_and_7_nl : STD_LOGIC;
  SIGNAL for_for_mux_5_nl : STD_LOGIC;
  SIGNAL for_for_for_for_and_8_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL for_for_mux_6_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL not_3376_nl : STD_LOGIC;
  SIGNAL for_for_for_for_and_9_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL for_for_mux_7_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL not_3377_nl : STD_LOGIC;
  SIGNAL for_for_or_8_nl : STD_LOGIC;
  SIGNAL for_for_for_for_and_10_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL for_for_mux_8_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL not_3378_nl : STD_LOGIC;
  SIGNAL for_for_for_for_and_11_nl : STD_LOGIC;
  SIGNAL for_for_for_for_or_1_nl : STD_LOGIC;
  SIGNAL for_for_mux_9_nl : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_3_2_acc_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_3_2_mux1h_2_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL and_2309_nl : STD_LOGIC;
  SIGNAL mux_1090_nl : STD_LOGIC;
  SIGNAL nor_913_nl : STD_LOGIC;
  SIGNAL mux_1091_nl : STD_LOGIC;
  SIGNAL nor_914_nl : STD_LOGIC;
  SIGNAL nor_915_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_or_1_nl
      : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux_5_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_or_3_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_13_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL and_2310_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_and_9_nl : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_mux1h_5_nl : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_nor_2_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_or_3_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_mux1h_6_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_mux1h_7_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_or_4_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_mux_26_nl : STD_LOGIC;
  SIGNAL and_2311_nl : STD_LOGIC;
  SIGNAL acc_32_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL SF_LOOP_3_mux_87_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL SF_LOOP_3_SF_LOOP_3_or_44_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_mux_88_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_or_17_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_mux_89_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_SF_LOOP_3_and_15_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_SF_LOOP_3_and_16_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_SF_LOOP_3_and_17_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL not_3392_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_or_19_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_mux_7_nl : STD_LOGIC;
  SIGNAL mux_1092_nl : STD_LOGIC;
  SIGNAL mux_1093_nl : STD_LOGIC;
  SIGNAL nor_917_nl : STD_LOGIC;
  SIGNAL mux_1094_nl : STD_LOGIC;
  SIGNAL mux_1095_nl : STD_LOGIC;
  SIGNAL nor_918_nl : STD_LOGIC;
  SIGNAL nor_919_nl : STD_LOGIC;
  SIGNAL mux_1096_nl : STD_LOGIC;
  SIGNAL mux_1097_nl : STD_LOGIC;
  SIGNAL nor_920_nl : STD_LOGIC;
  SIGNAL mux_1098_nl : STD_LOGIC;
  SIGNAL or_1580_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_and_2_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mux_8_nl : STD_LOGIC_VECTOR (2
      DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_or_29_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_mux_27_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_and_3_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_mux1h_31_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_or_20_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_or_21_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_mux_8_nl : STD_LOGIC;
  SIGNAL acc_37_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_or_22_nl : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_mux_3_nl : STD_LOGIC_VECTOR (40 DOWNTO 0);
  SIGNAL and_2314_nl : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_3_mux_13_nl : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_3_mux_14_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_3_mux_15_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_3_mux_17_nl : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_acc_14_nl : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_3_mux_16_nl : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_3_LINEAR_FORWARD_NO_MUL_LOOP_2_3_and_1_nl :
      STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_scale_not_101_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_nl : STD_LOGIC_VECTOR
      (17 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_acc_nl : STD_LOGIC_VECTOR
      (17 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux_5_nl : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux_6_nl : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux_7_nl : STD_LOGIC_VECTOR
      (4 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux_8_nl : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux_9_nl : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_1_nl : STD_LOGIC_VECTOR
      (17 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_mux_8_nl : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL attention_round_qelse_mux_13_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_mux_9_nl : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL attention_round_qelse_mux_14_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_mux_10_nl : STD_LOGIC_VECTOR
      (4 DOWNTO 0);
  SIGNAL attention_round_qelse_mux_15_nl : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_mux_11_nl : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL attention_round_qelse_mux_16_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_mux_12_nl : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL attention_round_qelse_mux_17_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_nl : STD_LOGIC_VECTOR
      (17 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_26_nl
      : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_27_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_28_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux_137_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_29_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux_138_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux_139_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux_140_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_30_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux_141_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux_142_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_31_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux_143_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux_144_nl : STD_LOGIC_VECTOR (27 DOWNTO
      0);
  SIGNAL SF_LOOP_3_acc_91_nl : STD_LOGIC_VECTOR (27 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_92_nl : STD_LOGIC_VECTOR (24 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_93_nl : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL SF_LOOP_3_SF_LOOP_3_nand_2_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_and_11_nl : STD_LOGIC;
  SIGNAL acc_49_nl : STD_LOGIC_VECTOR (41 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_2_1_if_mux1h_8_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_2_1_if_mux1h_9_nl : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_2_1_if_mux1h_10_nl : STD_LOGIC_VECTOR (14 DOWNTO
      0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_2_1_if_mux1h_11_nl : STD_LOGIC_VECTOR (14 DOWNTO
      0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_2_1_if_or_3_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_2_1_if_mux1h_12_nl : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_2_1_attention_abs_6_nand_1_nl : STD_LOGIC;
  SIGNAL attention_abs_6_mux_3_nl : STD_LOGIC_VECTOR (38 DOWNTO 0);
  SIGNAL attention_max_attn_fixed_t_acc_nl : STD_LOGIC_VECTOR (40 DOWNTO 0);
  SIGNAL attention_max_attn_fixed_t_mux1h_3_nl : STD_LOGIC;
  SIGNAL attention_max_attn_fixed_t_mux1h_4_nl : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL attention_max_attn_fixed_t_mux1h_5_nl : STD_LOGIC_VECTOR (14 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_and_19_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_35_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_36_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_and_20_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_37_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_38_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_and_21_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_39_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_40_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_and_22_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_41_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_42_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_and_23_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_43_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_44_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_and_24_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_45_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_46_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_and_25_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_47_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_48_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_and_26_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_49_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_50_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_and_27_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_51_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_52_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_and_28_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_53_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_54_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_and_29_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_55_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_56_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_and_30_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_57_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_58_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_59_nl : STD_LOGIC_VECTOR (27 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_114_nl : STD_LOGIC_VECTOR (27 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux_135_nl : STD_LOGIC_VECTOR (19 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_100_nl : STD_LOGIC_VECTOR (19 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_101_nl : STD_LOGIC_VECTOR (17 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_102_nl : STD_LOGIC_VECTOR (15 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_103_nl : STD_LOGIC_VECTOR (13 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_54_nl : STD_LOGIC_VECTOR (19 DOWNTO
      0);
  SIGNAL and_2308_nl : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_2_LINEAR_FORWARD_NO_MUL_LOOP_5_2_and_7_nl :
      STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_2_mux_3_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_2_else_if_acc_3_nl : STD_LOGIC_VECTOR (7 DOWNTO
      0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_3_LINEAR_FORWARD_NO_MUL_LOOP_5_3_and_6_nl :
      STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_3_mux_8_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_3_else_if_acc_3_nl : STD_LOGIC_VECTOR (7 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_or_23_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_4_nl
      : STD_LOGIC_VECTOR (19 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux_6_nl : STD_LOGIC_VECTOR (19 DOWNTO
      0);
  SIGNAL not_3405_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_14_nl : STD_LOGIC_VECTOR (23 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_15_nl : STD_LOGIC_VECTOR (15 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_5_nl
      : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux_7_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL not_3406_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_6_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux_8_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_7_nl
      : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux_9_nl : STD_LOGIC_VECTOR (15 DOWNTO
      0);
  SIGNAL not_3408_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_16_nl : STD_LOGIC_VECTOR (23 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_17_nl : STD_LOGIC_VECTOR (5 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_18_nl : STD_LOGIC_VECTOR (9 DOWNTO
      0);
  SIGNAL RMS_NORM_LOOP_1_1_RMS_NORM_LOOP_1_1_mux_1_nl : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL RMS_NORM_LOOP_1_1_or_12_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_1_1_mux1h_14_nl : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_1_1_or_13_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_1_1_or_14_nl : STD_LOGIC;
  SIGNAL and_2319_nl : STD_LOGIC;
  SIGNAL and_2320_nl : STD_LOGIC;
  SIGNAL acc_57_nl : STD_LOGIC_VECTOR (40 DOWNTO 0);
  SIGNAL SOFTMAX_LOOP_4_x_mux_4_nl : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL SOFTMAX_LOOP_4_x_SOFTMAX_LOOP_4_x_nand_1_nl : STD_LOGIC;
  SIGNAL SOFTMAX_LOOP_4_x_mux_5_nl : STD_LOGIC;
  SIGNAL SOFTMAX_LOOP_4_x_mux_6_nl : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL SOFTMAX_LOOP_4_x_mux_7_nl : STD_LOGIC_VECTOR (14 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mux_9_nl : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_or_30_nl : STD_LOGIC;
  SIGNAL mux_1099_nl : STD_LOGIC;
  SIGNAL mux_1100_nl : STD_LOGIC;
  SIGNAL nor_921_nl : STD_LOGIC;
  SIGNAL nor_923_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_mux_28_nl : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_mux1h_47_nl : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_acc_255_nl : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_mux1h_48_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_mux1h_49_nl : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_mux1h_50_nl : STD_LOGIC_VECTOR (14 DOWNTO 0);
  SIGNAL SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a : STD_LOGIC_VECTOR (55 DOWNTO
      0);
  SIGNAL SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_z_1 : STD_LOGIC_VECTOR (55 DOWNTO
      0);

  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_a
      : STD_LOGIC_VECTOR (71 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b
      : STD_LOGIC_VECTOR (59 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z_1
      : STD_LOGIC_VECTOR (71 DOWNTO 0);

  SIGNAL rms_norm_384_div_cmp_a : STD_LOGIC_VECTOR (71 DOWNTO 0);
  SIGNAL rms_norm_384_div_cmp_b : STD_LOGIC_VECTOR (60 DOWNTO 0);
  SIGNAL rms_norm_384_div_cmp_z_1 : STD_LOGIC_VECTOR (71 DOWNTO 0);

  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_a : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_1 : STD_LOGIC_VECTOR (39
      DOWNTO 0);

  SIGNAL CACHE_UPDATE_LOOP_3_qif_read_rom_k_cache_rom_map_1_rg_addr : STD_LOGIC_VECTOR
      (10 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_qif_read_rom_k_cache_rom_map_1_rg_data_out : STD_LOGIC_VECTOR
      (39 DOWNTO 0);

  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_rg_addr :
      STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_rg_data_out
      : STD_LOGIC_VECTOR (16 DOWNTO 0);

  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_cosval_read_rom_cos_tab_rom_map_1_rg_addr :
      STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_cosval_read_rom_cos_tab_rom_map_1_rg_data_out
      : STD_LOGIC_VECTOR (16 DOWNTO 0);

  SIGNAL CACHE_UPDATE_LOOP_3_1_qif_read_rom_v_cache_rom_map_1_rg_addr : STD_LOGIC_VECTOR
      (10 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_1_qif_read_rom_v_cache_rom_map_1_rg_data_out : STD_LOGIC_VECTOR
      (39 DOWNTO 0);

  SIGNAL RMS_NORM_LOOP_2_2_read_rom_ln_weight_rom_map_1_rg_addr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_2_read_rom_ln_weight_rom_map_1_rg_data_out : STD_LOGIC_VECTOR
      (12 DOWNTO 0);

  SIGNAL RMS_NORM_LOOP_2_read_rom_ln_weight_in_rom_map_1_rg_addr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_read_rom_ln_weight_in_rom_map_1_rg_data_out : STD_LOGIC_VECTOR
      (11 DOWNTO 0);

  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_read_rom_k_weights_rom_map_1_rg_addr
      : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_read_rom_k_weights_rom_map_1_rg_data_out
      : STD_LOGIC_VECTOR (7 DOWNTO 0);

  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_read_rom_v_weights_rom_map_1_rg_addr
      : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_read_rom_v_weights_rom_map_1_rg_data_out
      : STD_LOGIC_VECTOR (7 DOWNTO 0);

  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_1_weight_val_lshift_rg_a : STD_LOGIC ;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_1_weight_val_lshift_rg_s : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_1_weight_val_lshift_rg_z : STD_LOGIC_VECTOR
      (6 DOWNTO 0);

  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_lshift_rg_a : STD_LOGIC ;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_lshift_rg_s : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_lshift_rg_z : STD_LOGIC_VECTOR
      (6 DOWNTO 0);

  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_read_rom_o_weights_rom_map_1_rg_addr
      : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_read_rom_o_weights_rom_map_1_rg_data_out
      : STD_LOGIC_VECTOR (7 DOWNTO 0);

  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_read_rom_q_weights_rom_map_1_rg_addr
      : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_read_rom_q_weights_rom_map_1_rg_data_out
      : STD_LOGIC_VECTOR (7 DOWNTO 0);

  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_lshift_rg_a : STD_LOGIC ;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_lshift_rg_s : STD_LOGIC_VECTOR (3
      DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_lshift_rg_z : STD_LOGIC_VECTOR (6
      DOWNTO 0);

  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_3_weight_val_lshift_rg_a : STD_LOGIC ;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_3_weight_val_lshift_rg_s : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_3_weight_val_lshift_rg_z : STD_LOGIC_VECTOR
      (6 DOWNTO 0);

  COMPONENT dut_core_strm_in_rsci
    PORT(
      strm_in_rsc_dat : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
      strm_in_rsc_vld : IN STD_LOGIC;
      strm_in_rsc_rdy : OUT STD_LOGIC;
      strm_in_rsci_oswt : IN STD_LOGIC;
      strm_in_rsci_wen_comp : OUT STD_LOGIC;
      strm_in_rsci_idat_mxwt : OUT STD_LOGIC_VECTOR (29 DOWNTO 0)
    );
  END COMPONENT;
  SIGNAL dut_core_strm_in_rsci_inst_strm_in_rsc_dat : STD_LOGIC_VECTOR (31 DOWNTO
      0);
  SIGNAL dut_core_strm_in_rsci_inst_strm_in_rsci_idat_mxwt : STD_LOGIC_VECTOR (29
      DOWNTO 0);

  COMPONENT dut_core_strm_out_rsci
    PORT(
      strm_out_rsc_dat : OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
      strm_out_rsc_vld : OUT STD_LOGIC;
      strm_out_rsc_rdy : IN STD_LOGIC;
      strm_out_rsci_oswt : IN STD_LOGIC;
      strm_out_rsci_wen_comp : OUT STD_LOGIC;
      strm_out_rsci_idat : IN STD_LOGIC_VECTOR (31 DOWNTO 0)
    );
  END COMPONENT;
  SIGNAL dut_core_strm_out_rsci_inst_strm_out_rsc_dat : STD_LOGIC_VECTOR (31 DOWNTO
      0);
  SIGNAL dut_core_strm_out_rsci_inst_strm_out_rsci_idat : STD_LOGIC_VECTOR (31 DOWNTO
      0);

  COMPONENT dut_core_staller
    PORT(
      en : IN STD_LOGIC;
      strm_in_rsci_wen_comp : IN STD_LOGIC;
      strm_out_rsci_wen_comp : IN STD_LOGIC;
      input_rsc_en_d_1 : OUT STD_LOGIC
    );
  END COMPONENT;
  COMPONENT dut_core_core_fsm
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      input_rsc_en_d_1 : IN STD_LOGIC;
      fsm_output : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      for_for_C_1_tr0 : IN STD_LOGIC;
      attention_sqrt_for_C_10_tr0 : IN STD_LOGIC;
      RMS_NORM_LOOP_2_C_3_tr0 : IN STD_LOGIC;
      QUANTIZE_ACTIVATION_LOOP_4_C_7_tr0 : IN STD_LOGIC;
      QUANTIZE_ACTIVATION_LOOP_3_C_0_tr0 : IN STD_LOGIC;
      attention_5_1_384_384_8_48_q_proj_re_vinit_C_1_tr0 : IN STD_LOGIC;
      LINEAR_FORWARD_NO_MUL_LOOP_3_C_1_tr0 : IN STD_LOGIC;
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_56_tr0 : IN STD_LOGIC;
      RESHAPE_2D_TO_3D_LOOP_3_C_2_tr0 : IN STD_LOGIC;
      RESHAPE_2D_TO_3D_LOOP_2_C_0_tr0 : IN STD_LOGIC;
      RESHAPE_2D_TO_3D_LOOP_3_2_C_3_tr0 : IN STD_LOGIC;
      RESHAPE_2D_TO_3D_LOOP_2_2_C_0_tr0 : IN STD_LOGIC;
      APPLY_ROTARY_POS_EMB_LOOP_6_C_2_tr0 : IN STD_LOGIC;
      APPLY_ROTARY_POS_EMB_LOOP_4_C_0_tr0 : IN STD_LOGIC;
      CACHE_UPDATE_LOOP_3_C_2_tr0 : IN STD_LOGIC;
      CACHE_UPDATE_LOOP_2_C_0_tr0 : IN STD_LOGIC;
      CACHE_UPDATE_LOOP_1_C_0_tr0 : IN STD_LOGIC;
      TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_2_tr0 : IN STD_LOGIC;
      TRANSPOSE_LAST_TWO_DIMS_LOOP_2_C_0_tr0 : IN STD_LOGIC;
      TRANSPOSE_LAST_TWO_DIMS_LOOP_1_C_0_tr0 : IN STD_LOGIC;
      GEMM_3D_FLOAT_LOOP_3_C_50_tr0 : IN STD_LOGIC;
      GEMM_3D_FLOAT_LOOP_1_C_0_tr0 : IN STD_LOGIC;
      SF_LOOP_3_C_3_tr0 : IN STD_LOGIC;
      SF_LOOP_1_C_0_tr0 : IN STD_LOGIC;
      SOFTMAX_LOOP_3_C_1_tr0 : IN STD_LOGIC;
      SOFTMAX_LOOP_4_C_5_tr0 : IN STD_LOGIC;
      SOFTMAX_LOOP_5_C_16_tr0 : IN STD_LOGIC;
      SOFTMAX_LOOP_1_C_2_tr0 : IN STD_LOGIC;
      GEMM_3D_FLOAT_LOOP_3_1_C_7_tr0 : IN STD_LOGIC;
      GEMM_3D_FLOAT_LOOP_1_1_C_0_tr0 : IN STD_LOGIC;
      ATTN_2D_LOOP_3_C_2_tr0 : IN STD_LOGIC;
      ATTN_2D_LOOP_2_C_0_tr0 : IN STD_LOGIC;
      RMS_NORM_LOOP_1_2_C_1_tr0 : IN STD_LOGIC;
      attention_sqrt_1_for_C_10_tr0 : IN STD_LOGIC;
      RMS_NORM_LOOP_2_2_C_3_tr0 : IN STD_LOGIC;
      QUANTIZE_ACTIVATION_LOOP_4_1_C_7_tr0 : IN STD_LOGIC;
      QUANTIZE_ACTIVATION_LOOP_3_1_C_0_tr0 : IN STD_LOGIC;
      output_vinit_C_1_tr0 : IN STD_LOGIC;
      LINEAR_FORWARD_NO_MUL_LOOP_3_3_C_0_tr0 : IN STD_LOGIC;
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_29_tr0 : IN STD_LOGIC;
      for_1_for_C_2_tr0 : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL dut_core_core_fsm_inst_fsm_output : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL dut_core_core_fsm_inst_attention_sqrt_for_C_10_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_4_C_7_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_3_C_0_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_APPLY_ROTARY_POS_EMB_LOOP_6_C_2_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_APPLY_ROTARY_POS_EMB_LOOP_4_C_0_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_2_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_TRANSPOSE_LAST_TWO_DIMS_LOOP_2_C_0_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_TRANSPOSE_LAST_TWO_DIMS_LOOP_1_C_0_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_3_C_50_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_1_C_0_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_SF_LOOP_3_C_3_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_SF_LOOP_1_C_0_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_SOFTMAX_LOOP_3_C_1_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_SOFTMAX_LOOP_4_C_5_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_SOFTMAX_LOOP_5_C_16_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_SOFTMAX_LOOP_1_C_2_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_3_1_C_7_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_1_1_C_0_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_ATTN_2D_LOOP_3_C_2_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_ATTN_2D_LOOP_2_C_0_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_RMS_NORM_LOOP_1_2_C_1_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_attention_sqrt_1_for_C_10_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_4_1_C_7_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_3_1_C_0_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_29_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_for_1_for_C_2_tr0 : STD_LOGIC;

  FUNCTION CONV_SL_1_1(input_val:BOOLEAN)
  RETURN STD_LOGIC IS
  BEGIN
    IF input_val THEN RETURN '1';ELSE RETURN '0';END IF;
  END;

  FUNCTION MUX1HOT_s_1_11_2(input_10 : STD_LOGIC;
  input_9 : STD_LOGIC;
  input_8 : STD_LOGIC;
  input_7 : STD_LOGIC;
  input_6 : STD_LOGIC;
  input_5 : STD_LOGIC;
  input_4 : STD_LOGIC;
  input_3 : STD_LOGIC;
  input_2 : STD_LOGIC;
  input_1 : STD_LOGIC;
  input_0 : STD_LOGIC;
  sel : STD_LOGIC_VECTOR(10 DOWNTO 0))
  RETURN STD_LOGIC IS
    VARIABLE result : STD_LOGIC;
    VARIABLE tmp : STD_LOGIC;

    BEGIN
      tmp := sel(0);
      result := input_0 and tmp;
      tmp := sel(1);
      result := result or ( input_1 and tmp);
      tmp := sel(2);
      result := result or ( input_2 and tmp);
      tmp := sel(3);
      result := result or ( input_3 and tmp);
      tmp := sel(4);
      result := result or ( input_4 and tmp);
      tmp := sel(5);
      result := result or ( input_5 and tmp);
      tmp := sel(6);
      result := result or ( input_6 and tmp);
      tmp := sel(7);
      result := result or ( input_7 and tmp);
      tmp := sel(8);
      result := result or ( input_8 and tmp);
      tmp := sel(9);
      result := result or ( input_9 and tmp);
      tmp := sel(10);
      result := result or ( input_10 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_s_1_12_2(input_11 : STD_LOGIC;
  input_10 : STD_LOGIC;
  input_9 : STD_LOGIC;
  input_8 : STD_LOGIC;
  input_7 : STD_LOGIC;
  input_6 : STD_LOGIC;
  input_5 : STD_LOGIC;
  input_4 : STD_LOGIC;
  input_3 : STD_LOGIC;
  input_2 : STD_LOGIC;
  input_1 : STD_LOGIC;
  input_0 : STD_LOGIC;
  sel : STD_LOGIC_VECTOR(11 DOWNTO 0))
  RETURN STD_LOGIC IS
    VARIABLE result : STD_LOGIC;
    VARIABLE tmp : STD_LOGIC;

    BEGIN
      tmp := sel(0);
      result := input_0 and tmp;
      tmp := sel(1);
      result := result or ( input_1 and tmp);
      tmp := sel(2);
      result := result or ( input_2 and tmp);
      tmp := sel(3);
      result := result or ( input_3 and tmp);
      tmp := sel(4);
      result := result or ( input_4 and tmp);
      tmp := sel(5);
      result := result or ( input_5 and tmp);
      tmp := sel(6);
      result := result or ( input_6 and tmp);
      tmp := sel(7);
      result := result or ( input_7 and tmp);
      tmp := sel(8);
      result := result or ( input_8 and tmp);
      tmp := sel(9);
      result := result or ( input_9 and tmp);
      tmp := sel(10);
      result := result or ( input_10 and tmp);
      tmp := sel(11);
      result := result or ( input_11 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_s_1_15_2(input_14 : STD_LOGIC;
  input_13 : STD_LOGIC;
  input_12 : STD_LOGIC;
  input_11 : STD_LOGIC;
  input_10 : STD_LOGIC;
  input_9 : STD_LOGIC;
  input_8 : STD_LOGIC;
  input_7 : STD_LOGIC;
  input_6 : STD_LOGIC;
  input_5 : STD_LOGIC;
  input_4 : STD_LOGIC;
  input_3 : STD_LOGIC;
  input_2 : STD_LOGIC;
  input_1 : STD_LOGIC;
  input_0 : STD_LOGIC;
  sel : STD_LOGIC_VECTOR(14 DOWNTO 0))
  RETURN STD_LOGIC IS
    VARIABLE result : STD_LOGIC;
    VARIABLE tmp : STD_LOGIC;

    BEGIN
      tmp := sel(0);
      result := input_0 and tmp;
      tmp := sel(1);
      result := result or ( input_1 and tmp);
      tmp := sel(2);
      result := result or ( input_2 and tmp);
      tmp := sel(3);
      result := result or ( input_3 and tmp);
      tmp := sel(4);
      result := result or ( input_4 and tmp);
      tmp := sel(5);
      result := result or ( input_5 and tmp);
      tmp := sel(6);
      result := result or ( input_6 and tmp);
      tmp := sel(7);
      result := result or ( input_7 and tmp);
      tmp := sel(8);
      result := result or ( input_8 and tmp);
      tmp := sel(9);
      result := result or ( input_9 and tmp);
      tmp := sel(10);
      result := result or ( input_10 and tmp);
      tmp := sel(11);
      result := result or ( input_11 and tmp);
      tmp := sel(12);
      result := result or ( input_12 and tmp);
      tmp := sel(13);
      result := result or ( input_13 and tmp);
      tmp := sel(14);
      result := result or ( input_14 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_s_1_16_2(input_15 : STD_LOGIC;
  input_14 : STD_LOGIC;
  input_13 : STD_LOGIC;
  input_12 : STD_LOGIC;
  input_11 : STD_LOGIC;
  input_10 : STD_LOGIC;
  input_9 : STD_LOGIC;
  input_8 : STD_LOGIC;
  input_7 : STD_LOGIC;
  input_6 : STD_LOGIC;
  input_5 : STD_LOGIC;
  input_4 : STD_LOGIC;
  input_3 : STD_LOGIC;
  input_2 : STD_LOGIC;
  input_1 : STD_LOGIC;
  input_0 : STD_LOGIC;
  sel : STD_LOGIC_VECTOR(15 DOWNTO 0))
  RETURN STD_LOGIC IS
    VARIABLE result : STD_LOGIC;
    VARIABLE tmp : STD_LOGIC;

    BEGIN
      tmp := sel(0);
      result := input_0 and tmp;
      tmp := sel(1);
      result := result or ( input_1 and tmp);
      tmp := sel(2);
      result := result or ( input_2 and tmp);
      tmp := sel(3);
      result := result or ( input_3 and tmp);
      tmp := sel(4);
      result := result or ( input_4 and tmp);
      tmp := sel(5);
      result := result or ( input_5 and tmp);
      tmp := sel(6);
      result := result or ( input_6 and tmp);
      tmp := sel(7);
      result := result or ( input_7 and tmp);
      tmp := sel(8);
      result := result or ( input_8 and tmp);
      tmp := sel(9);
      result := result or ( input_9 and tmp);
      tmp := sel(10);
      result := result or ( input_10 and tmp);
      tmp := sel(11);
      result := result or ( input_11 and tmp);
      tmp := sel(12);
      result := result or ( input_12 and tmp);
      tmp := sel(13);
      result := result or ( input_13 and tmp);
      tmp := sel(14);
      result := result or ( input_14 and tmp);
      tmp := sel(15);
      result := result or ( input_15 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_s_1_17_2(input_16 : STD_LOGIC;
  input_15 : STD_LOGIC;
  input_14 : STD_LOGIC;
  input_13 : STD_LOGIC;
  input_12 : STD_LOGIC;
  input_11 : STD_LOGIC;
  input_10 : STD_LOGIC;
  input_9 : STD_LOGIC;
  input_8 : STD_LOGIC;
  input_7 : STD_LOGIC;
  input_6 : STD_LOGIC;
  input_5 : STD_LOGIC;
  input_4 : STD_LOGIC;
  input_3 : STD_LOGIC;
  input_2 : STD_LOGIC;
  input_1 : STD_LOGIC;
  input_0 : STD_LOGIC;
  sel : STD_LOGIC_VECTOR(16 DOWNTO 0))
  RETURN STD_LOGIC IS
    VARIABLE result : STD_LOGIC;
    VARIABLE tmp : STD_LOGIC;

    BEGIN
      tmp := sel(0);
      result := input_0 and tmp;
      tmp := sel(1);
      result := result or ( input_1 and tmp);
      tmp := sel(2);
      result := result or ( input_2 and tmp);
      tmp := sel(3);
      result := result or ( input_3 and tmp);
      tmp := sel(4);
      result := result or ( input_4 and tmp);
      tmp := sel(5);
      result := result or ( input_5 and tmp);
      tmp := sel(6);
      result := result or ( input_6 and tmp);
      tmp := sel(7);
      result := result or ( input_7 and tmp);
      tmp := sel(8);
      result := result or ( input_8 and tmp);
      tmp := sel(9);
      result := result or ( input_9 and tmp);
      tmp := sel(10);
      result := result or ( input_10 and tmp);
      tmp := sel(11);
      result := result or ( input_11 and tmp);
      tmp := sel(12);
      result := result or ( input_12 and tmp);
      tmp := sel(13);
      result := result or ( input_13 and tmp);
      tmp := sel(14);
      result := result or ( input_14 and tmp);
      tmp := sel(15);
      result := result or ( input_15 and tmp);
      tmp := sel(16);
      result := result or ( input_16 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_s_1_18_2(input_17 : STD_LOGIC;
  input_16 : STD_LOGIC;
  input_15 : STD_LOGIC;
  input_14 : STD_LOGIC;
  input_13 : STD_LOGIC;
  input_12 : STD_LOGIC;
  input_11 : STD_LOGIC;
  input_10 : STD_LOGIC;
  input_9 : STD_LOGIC;
  input_8 : STD_LOGIC;
  input_7 : STD_LOGIC;
  input_6 : STD_LOGIC;
  input_5 : STD_LOGIC;
  input_4 : STD_LOGIC;
  input_3 : STD_LOGIC;
  input_2 : STD_LOGIC;
  input_1 : STD_LOGIC;
  input_0 : STD_LOGIC;
  sel : STD_LOGIC_VECTOR(17 DOWNTO 0))
  RETURN STD_LOGIC IS
    VARIABLE result : STD_LOGIC;
    VARIABLE tmp : STD_LOGIC;

    BEGIN
      tmp := sel(0);
      result := input_0 and tmp;
      tmp := sel(1);
      result := result or ( input_1 and tmp);
      tmp := sel(2);
      result := result or ( input_2 and tmp);
      tmp := sel(3);
      result := result or ( input_3 and tmp);
      tmp := sel(4);
      result := result or ( input_4 and tmp);
      tmp := sel(5);
      result := result or ( input_5 and tmp);
      tmp := sel(6);
      result := result or ( input_6 and tmp);
      tmp := sel(7);
      result := result or ( input_7 and tmp);
      tmp := sel(8);
      result := result or ( input_8 and tmp);
      tmp := sel(9);
      result := result or ( input_9 and tmp);
      tmp := sel(10);
      result := result or ( input_10 and tmp);
      tmp := sel(11);
      result := result or ( input_11 and tmp);
      tmp := sel(12);
      result := result or ( input_12 and tmp);
      tmp := sel(13);
      result := result or ( input_13 and tmp);
      tmp := sel(14);
      result := result or ( input_14 and tmp);
      tmp := sel(15);
      result := result or ( input_15 and tmp);
      tmp := sel(16);
      result := result or ( input_16 and tmp);
      tmp := sel(17);
      result := result or ( input_17 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_s_1_3_2(input_2 : STD_LOGIC;
  input_1 : STD_LOGIC;
  input_0 : STD_LOGIC;
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC IS
    VARIABLE result : STD_LOGIC;
    VARIABLE tmp : STD_LOGIC;

    BEGIN
      tmp := sel(0);
      result := input_0 and tmp;
      tmp := sel(1);
      result := result or ( input_1 and tmp);
      tmp := sel(2);
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_s_1_4_2(input_3 : STD_LOGIC;
  input_2 : STD_LOGIC;
  input_1 : STD_LOGIC;
  input_0 : STD_LOGIC;
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC IS
    VARIABLE result : STD_LOGIC;
    VARIABLE tmp : STD_LOGIC;

    BEGIN
      tmp := sel(0);
      result := input_0 and tmp;
      tmp := sel(1);
      result := result or ( input_1 and tmp);
      tmp := sel(2);
      result := result or ( input_2 and tmp);
      tmp := sel(3);
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_s_1_5_2(input_4 : STD_LOGIC;
  input_3 : STD_LOGIC;
  input_2 : STD_LOGIC;
  input_1 : STD_LOGIC;
  input_0 : STD_LOGIC;
  sel : STD_LOGIC_VECTOR(4 DOWNTO 0))
  RETURN STD_LOGIC IS
    VARIABLE result : STD_LOGIC;
    VARIABLE tmp : STD_LOGIC;

    BEGIN
      tmp := sel(0);
      result := input_0 and tmp;
      tmp := sel(1);
      result := result or ( input_1 and tmp);
      tmp := sel(2);
      result := result or ( input_2 and tmp);
      tmp := sel(3);
      result := result or ( input_3 and tmp);
      tmp := sel(4);
      result := result or ( input_4 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_s_1_7_2(input_6 : STD_LOGIC;
  input_5 : STD_LOGIC;
  input_4 : STD_LOGIC;
  input_3 : STD_LOGIC;
  input_2 : STD_LOGIC;
  input_1 : STD_LOGIC;
  input_0 : STD_LOGIC;
  sel : STD_LOGIC_VECTOR(6 DOWNTO 0))
  RETURN STD_LOGIC IS
    VARIABLE result : STD_LOGIC;
    VARIABLE tmp : STD_LOGIC;

    BEGIN
      tmp := sel(0);
      result := input_0 and tmp;
      tmp := sel(1);
      result := result or ( input_1 and tmp);
      tmp := sel(2);
      result := result or ( input_2 and tmp);
      tmp := sel(3);
      result := result or ( input_3 and tmp);
      tmp := sel(4);
      result := result or ( input_4 and tmp);
      tmp := sel(5);
      result := result or ( input_5 and tmp);
      tmp := sel(6);
      result := result or ( input_6 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_s_1_8_2(input_7 : STD_LOGIC;
  input_6 : STD_LOGIC;
  input_5 : STD_LOGIC;
  input_4 : STD_LOGIC;
  input_3 : STD_LOGIC;
  input_2 : STD_LOGIC;
  input_1 : STD_LOGIC;
  input_0 : STD_LOGIC;
  sel : STD_LOGIC_VECTOR(7 DOWNTO 0))
  RETURN STD_LOGIC IS
    VARIABLE result : STD_LOGIC;
    VARIABLE tmp : STD_LOGIC;

    BEGIN
      tmp := sel(0);
      result := input_0 and tmp;
      tmp := sel(1);
      result := result or ( input_1 and tmp);
      tmp := sel(2);
      result := result or ( input_2 and tmp);
      tmp := sel(3);
      result := result or ( input_3 and tmp);
      tmp := sel(4);
      result := result or ( input_4 and tmp);
      tmp := sel(5);
      result := result or ( input_5 and tmp);
      tmp := sel(6);
      result := result or ( input_6 and tmp);
      tmp := sel(7);
      result := result or ( input_7 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_s_1_9_2(input_8 : STD_LOGIC;
  input_7 : STD_LOGIC;
  input_6 : STD_LOGIC;
  input_5 : STD_LOGIC;
  input_4 : STD_LOGIC;
  input_3 : STD_LOGIC;
  input_2 : STD_LOGIC;
  input_1 : STD_LOGIC;
  input_0 : STD_LOGIC;
  sel : STD_LOGIC_VECTOR(8 DOWNTO 0))
  RETURN STD_LOGIC IS
    VARIABLE result : STD_LOGIC;
    VARIABLE tmp : STD_LOGIC;

    BEGIN
      tmp := sel(0);
      result := input_0 and tmp;
      tmp := sel(1);
      result := result or ( input_1 and tmp);
      tmp := sel(2);
      result := result or ( input_2 and tmp);
      tmp := sel(3);
      result := result or ( input_3 and tmp);
      tmp := sel(4);
      result := result or ( input_4 and tmp);
      tmp := sel(5);
      result := result or ( input_5 and tmp);
      tmp := sel(6);
      result := result or ( input_6 and tmp);
      tmp := sel(7);
      result := result or ( input_7 and tmp);
      tmp := sel(8);
      result := result or ( input_8 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_10_3_2(input_2 : STD_LOGIC_VECTOR(9 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(9 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(9 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(9 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(9 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_10_4_2(input_3 : STD_LOGIC_VECTOR(9 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(9 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(9 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(9 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(9 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(9 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_13_4_2(input_3 : STD_LOGIC_VECTOR(12 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(12 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(12 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(12 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(12 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(12 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_14_3_2(input_2 : STD_LOGIC_VECTOR(13 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(13 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(13 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(13 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(13 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_15_12_2(input_11 : STD_LOGIC_VECTOR(14 DOWNTO 0);
  input_10 : STD_LOGIC_VECTOR(14 DOWNTO 0);
  input_9 : STD_LOGIC_VECTOR(14 DOWNTO 0);
  input_8 : STD_LOGIC_VECTOR(14 DOWNTO 0);
  input_7 : STD_LOGIC_VECTOR(14 DOWNTO 0);
  input_6 : STD_LOGIC_VECTOR(14 DOWNTO 0);
  input_5 : STD_LOGIC_VECTOR(14 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(14 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(14 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(14 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(14 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(14 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(11 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(14 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(14 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
      tmp := (OTHERS=>sel( 6));
      result := result or ( input_6 and tmp);
      tmp := (OTHERS=>sel( 7));
      result := result or ( input_7 and tmp);
      tmp := (OTHERS=>sel( 8));
      result := result or ( input_8 and tmp);
      tmp := (OTHERS=>sel( 9));
      result := result or ( input_9 and tmp);
      tmp := (OTHERS=>sel( 10));
      result := result or ( input_10 and tmp);
      tmp := (OTHERS=>sel( 11));
      result := result or ( input_11 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_15_3_2(input_2 : STD_LOGIC_VECTOR(14 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(14 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(14 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(14 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(14 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_15_4_2(input_3 : STD_LOGIC_VECTOR(14 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(14 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(14 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(14 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(14 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(14 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_15_5_2(input_4 : STD_LOGIC_VECTOR(14 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(14 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(14 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(14 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(14 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(4 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(14 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(14 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_16_3_2(input_2 : STD_LOGIC_VECTOR(15 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(15 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(15 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(15 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(15 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_19_4_2(input_3 : STD_LOGIC_VECTOR(18 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(18 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(18 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(18 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(18 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(18 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_20_3_2(input_2 : STD_LOGIC_VECTOR(19 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(19 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(19 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(19 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(19 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_21_3_2(input_2 : STD_LOGIC_VECTOR(20 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(20 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(20 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(20 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(20 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_21_4_2(input_3 : STD_LOGIC_VECTOR(20 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(20 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(20 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(20 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(20 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(20 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_24_13_2(input_12 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  input_11 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  input_10 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  input_9 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  input_8 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  input_7 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  input_6 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  input_5 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(12 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(23 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(23 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
      tmp := (OTHERS=>sel( 6));
      result := result or ( input_6 and tmp);
      tmp := (OTHERS=>sel( 7));
      result := result or ( input_7 and tmp);
      tmp := (OTHERS=>sel( 8));
      result := result or ( input_8 and tmp);
      tmp := (OTHERS=>sel( 9));
      result := result or ( input_9 and tmp);
      tmp := (OTHERS=>sel( 10));
      result := result or ( input_10 and tmp);
      tmp := (OTHERS=>sel( 11));
      result := result or ( input_11 and tmp);
      tmp := (OTHERS=>sel( 12));
      result := result or ( input_12 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_24_3_2(input_2 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(23 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(23 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_24_4_2(input_3 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(23 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(23 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_24_5_2(input_4 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(4 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(23 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(23 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_28_3_2(input_2 : STD_LOGIC_VECTOR(27 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(27 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(27 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(27 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(27 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_2_18_2(input_17 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_16 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_15 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_14 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_13 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_12 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_11 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_10 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_9 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_8 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_7 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_6 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_5 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(17 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(1 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(1 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
      tmp := (OTHERS=>sel( 6));
      result := result or ( input_6 and tmp);
      tmp := (OTHERS=>sel( 7));
      result := result or ( input_7 and tmp);
      tmp := (OTHERS=>sel( 8));
      result := result or ( input_8 and tmp);
      tmp := (OTHERS=>sel( 9));
      result := result or ( input_9 and tmp);
      tmp := (OTHERS=>sel( 10));
      result := result or ( input_10 and tmp);
      tmp := (OTHERS=>sel( 11));
      result := result or ( input_11 and tmp);
      tmp := (OTHERS=>sel( 12));
      result := result or ( input_12 and tmp);
      tmp := (OTHERS=>sel( 13));
      result := result or ( input_13 and tmp);
      tmp := (OTHERS=>sel( 14));
      result := result or ( input_14 and tmp);
      tmp := (OTHERS=>sel( 15));
      result := result or ( input_15 and tmp);
      tmp := (OTHERS=>sel( 16));
      result := result or ( input_16 and tmp);
      tmp := (OTHERS=>sel( 17));
      result := result or ( input_17 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_2_3_2(input_2 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(1 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(1 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_2_4_2(input_3 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(1 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(1 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_2_5_2(input_4 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(4 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(1 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(1 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_2_6_2(input_5 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(5 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(1 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(1 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_2_7_2(input_6 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_5 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(6 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(1 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(1 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
      tmp := (OTHERS=>sel( 6));
      result := result or ( input_6 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_2_8_2(input_7 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_6 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_5 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(7 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(1 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(1 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
      tmp := (OTHERS=>sel( 6));
      result := result or ( input_6 and tmp);
      tmp := (OTHERS=>sel( 7));
      result := result or ( input_7 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_2_9_2(input_8 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_7 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_6 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_5 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(8 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(1 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(1 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
      tmp := (OTHERS=>sel( 6));
      result := result or ( input_6 and tmp);
      tmp := (OTHERS=>sel( 7));
      result := result or ( input_7 and tmp);
      tmp := (OTHERS=>sel( 8));
      result := result or ( input_8 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_30_3_2(input_2 : STD_LOGIC_VECTOR(29 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(29 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(29 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(29 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(29 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_31_3_2(input_2 : STD_LOGIC_VECTOR(30 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(30 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(30 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(30 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(30 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_31_6_2(input_5 : STD_LOGIC_VECTOR(30 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(30 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(30 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(30 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(30 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(30 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(5 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(30 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(30 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_35_7_2(input_6 : STD_LOGIC_VECTOR(34 DOWNTO 0);
  input_5 : STD_LOGIC_VECTOR(34 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(34 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(34 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(34 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(34 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(34 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(6 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(34 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(34 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
      tmp := (OTHERS=>sel( 6));
      result := result or ( input_6 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_36_9_2(input_8 : STD_LOGIC_VECTOR(35 DOWNTO 0);
  input_7 : STD_LOGIC_VECTOR(35 DOWNTO 0);
  input_6 : STD_LOGIC_VECTOR(35 DOWNTO 0);
  input_5 : STD_LOGIC_VECTOR(35 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(35 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(35 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(35 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(35 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(35 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(8 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(35 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(35 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
      tmp := (OTHERS=>sel( 6));
      result := result or ( input_6 and tmp);
      tmp := (OTHERS=>sel( 7));
      result := result or ( input_7 and tmp);
      tmp := (OTHERS=>sel( 8));
      result := result or ( input_8 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_3_3_2(input_2 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(2 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(2 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_3_4_2(input_3 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(2 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(2 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_3_6_2(input_5 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(5 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(2 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(2 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_3_7_2(input_6 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_5 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(6 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(2 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(2 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
      tmp := (OTHERS=>sel( 6));
      result := result or ( input_6 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_3_9_2(input_8 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_7 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_6 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_5 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(8 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(2 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(2 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
      tmp := (OTHERS=>sel( 6));
      result := result or ( input_6 and tmp);
      tmp := (OTHERS=>sel( 7));
      result := result or ( input_7 and tmp);
      tmp := (OTHERS=>sel( 8));
      result := result or ( input_8 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_40_3_2(input_2 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(39 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(39 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_40_4_2(input_3 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(39 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(39 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_40_5_2(input_4 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(4 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(39 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(39 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_40_6_2(input_5 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(5 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(39 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(39 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_4_3_2(input_2 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(3 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(3 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_4_4_2(input_3 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(3 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(3 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_4_5_2(input_4 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(4 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(3 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(3 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_4_7_2(input_6 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  input_5 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(6 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(3 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(3 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
      tmp := (OTHERS=>sel( 6));
      result := result or ( input_6 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_4_8_2(input_7 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  input_6 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  input_5 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(7 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(3 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(3 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
      tmp := (OTHERS=>sel( 6));
      result := result or ( input_6 and tmp);
      tmp := (OTHERS=>sel( 7));
      result := result or ( input_7 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_52_3_2(input_2 : STD_LOGIC_VECTOR(51 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(51 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(51 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(51 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(51 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_57_3_2(input_2 : STD_LOGIC_VECTOR(56 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(56 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(56 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(56 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(56 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_5_3_2(input_2 : STD_LOGIC_VECTOR(4 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(4 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(4 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(4 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(4 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_5_5_2(input_4 : STD_LOGIC_VECTOR(4 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(4 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(4 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(4 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(4 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(4 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(4 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(4 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_6_3_2(input_2 : STD_LOGIC_VECTOR(5 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(5 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(5 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(5 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(5 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_7_3_2(input_2 : STD_LOGIC_VECTOR(6 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(6 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(6 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(6 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(6 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_7_4_2(input_3 : STD_LOGIC_VECTOR(6 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(6 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(6 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(6 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(6 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(6 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_80_7_2(input_6 : STD_LOGIC_VECTOR(79 DOWNTO 0);
  input_5 : STD_LOGIC_VECTOR(79 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(79 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(79 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(79 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(79 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(79 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(6 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(79 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(79 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
      tmp := (OTHERS=>sel( 6));
      result := result or ( input_6 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_8_5_2(input_4 : STD_LOGIC_VECTOR(7 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(7 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(7 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(7 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(7 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(4 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(7 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(7 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_8_6_2(input_5 : STD_LOGIC_VECTOR(7 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(7 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(7 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(7 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(7 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(7 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(5 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(7 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(7 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_9_3_2(input_2 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(8 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(8 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_9_4_2(input_3 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(8 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(8 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_9_5_2(input_4 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(4 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(8 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(8 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_9_6_2(input_5 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(5 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(8 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(8 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_9_7_2(input_6 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_5 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(6 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(8 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(8 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
      tmp := (OTHERS=>sel( 6));
      result := result or ( input_6 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_9_8_2(input_7 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_6 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_5 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(7 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(8 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(8 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
      tmp := (OTHERS=>sel( 6));
      result := result or ( input_6 and tmp);
      tmp := (OTHERS=>sel( 7));
      result := result or ( input_7 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_9_9_2(input_8 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_7 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_6 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_5 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(8 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(8 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(8 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
      tmp := (OTHERS=>sel( 6));
      result := result or ( input_6 and tmp);
      tmp := (OTHERS=>sel( 7));
      result := result or ( input_7 and tmp);
      tmp := (OTHERS=>sel( 8));
      result := result or ( input_8 and tmp);
    RETURN result;
  END;

  FUNCTION MUX_s_1_2_2(input_0 : STD_LOGIC;
  input_1 : STD_LOGIC;
  sel : STD_LOGIC)
  RETURN STD_LOGIC IS
    VARIABLE result : STD_LOGIC;

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_10_2_2(input_0 : STD_LOGIC_VECTOR(9 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(9 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(9 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_14_2_2(input_0 : STD_LOGIC_VECTOR(13 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(13 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(13 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_15_2_2(input_0 : STD_LOGIC_VECTOR(14 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(14 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(14 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_16_2_2(input_0 : STD_LOGIC_VECTOR(15 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(15 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(15 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_17_2_2(input_0 : STD_LOGIC_VECTOR(16 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(16 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(16 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_20_2_2(input_0 : STD_LOGIC_VECTOR(19 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(19 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(19 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_21_2_2(input_0 : STD_LOGIC_VECTOR(20 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(20 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(20 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_24_2_2(input_0 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(23 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_28_2_2(input_0 : STD_LOGIC_VECTOR(27 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(27 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(27 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_2_2_2(input_0 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(1 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_30_2_2(input_0 : STD_LOGIC_VECTOR(29 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(29 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(29 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_35_2_2(input_0 : STD_LOGIC_VECTOR(34 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(34 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(34 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_36_2_2(input_0 : STD_LOGIC_VECTOR(35 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(35 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(35 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_39_2_2(input_0 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(38 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_3_2_2(input_0 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(2 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_40_2_2(input_0 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(39 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_41_2_2(input_0 : STD_LOGIC_VECTOR(40 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(40 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(40 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_4_2_2(input_0 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(3 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_5_2_2(input_0 : STD_LOGIC_VECTOR(4 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(4 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(4 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_6_2_2(input_0 : STD_LOGIC_VECTOR(5 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(5 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(5 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_7_2_2(input_0 : STD_LOGIC_VECTOR(6 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(6 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(6 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_8_2_2(input_0 : STD_LOGIC_VECTOR(7 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(7 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(7 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_9_2_2(input_0 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(8 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

BEGIN
  SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp : mgc_hls.mgc_comps.mgc_div
    GENERIC MAP(
      width_a => 56,
      width_b => 40,
      signd => 1
      )
    PORT MAP(
      a => SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a,
      b => SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b,
      z => SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_z_1
    );
  SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a <= SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a_55
      & SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a_54_31 & SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a_30_16
      & STD_LOGIC_VECTOR'( "0000000000000000");
  SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b <= SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b_39
      & SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b_38_36 & SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b_35_15
      & SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b_14_0;
  SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_z <= SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_z_1;

  LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp : mgc_hls.mgc_comps.mgc_div
    GENERIC MAP(
      width_a => 72,
      width_b => 60,
      signd => 1
      )
    PORT MAP(
      a => LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_a,
      b => LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b,
      z => LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z_1
    );
  LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_a <= LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_a_71
      & LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_a_70_68
      & LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_a_67_47
      & LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_a_46_32
      & STD_LOGIC_VECTOR'( "00000000000000000000000000000000");
  LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b <= LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_59_58
      & LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_57_39
      & LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_38_18
      & LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_17_16
      & LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_15
      & LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_14_2
      & LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_1_0;
  LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z <= LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z_1;

  rms_norm_384_div_cmp : mgc_hls.mgc_comps.mgc_div
    GENERIC MAP(
      width_a => 72,
      width_b => 61,
      signd => 1
      )
    PORT MAP(
      a => rms_norm_384_div_cmp_a,
      b => rms_norm_384_div_cmp_b,
      z => rms_norm_384_div_cmp_z_1
    );
  rms_norm_384_div_cmp_a <= rms_norm_384_div_cmp_a_71 & rms_norm_384_div_cmp_a_70_47
      & rms_norm_384_div_cmp_a_46_32 & STD_LOGIC_VECTOR'( "00000000000000000000000000000000");
  rms_norm_384_div_cmp_b <= rms_norm_384_div_cmp_b_60 & rms_norm_384_div_cmp_b_59_39
      & rms_norm_384_div_cmp_b_38_20 & rms_norm_384_div_cmp_b_19_16 & rms_norm_384_div_cmp_b_15
      & rms_norm_384_div_cmp_b_14_5 & rms_norm_384_div_cmp_b_4_1 & rms_norm_384_div_cmp_b_0;
  rms_norm_384_div_cmp_z <= rms_norm_384_div_cmp_z_1;

  operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp : mgc_hls.mgc_comps.mgc_div
    GENERIC MAP(
      width_a => 40,
      width_b => 40,
      signd => 1
      )
    PORT MAP(
      a => operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_a,
      b => operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b,
      z => operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_1
    );
  operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_a <= STD_LOGIC_VECTOR(UNSIGNED'( "0")
      & UNSIGNED(CONV_SIGNED(SIGNED(reg_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_a_32_0_ftd
      & STD_LOGIC_VECTOR'( "000000000000000") & reg_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_a_32_0_ftd_1
      & STD_LOGIC_VECTOR'( "0000000000000000")),39)));
  operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b <= operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_39
      & operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_38_30 & operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_29_15
      & operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_14_0;
  operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z <= operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_1;

  CACHE_UPDATE_LOOP_3_qif_read_rom_k_cache_rom_map_1_rg : mgc_hls.dutmgc_rom_33_1920_40_1_60_pkg.dutmgc_rom_33_1920_40_1_60
    PORT MAP(
      addr => CACHE_UPDATE_LOOP_3_qif_read_rom_k_cache_rom_map_1_rg_addr,
      data_out => CACHE_UPDATE_LOOP_3_qif_read_rom_k_cache_rom_map_1_rg_data_out
    );
  CACHE_UPDATE_LOOP_3_qif_read_rom_k_cache_rom_map_1_rg_addr <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED(CACHE_UPDATE_LOOP_3_qif_acc_5_sdt_1(5
      DOWNTO 4)), 2), 3) + UNSIGNED(reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd
      & reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd_1), 3)) & (CACHE_UPDATE_LOOP_3_qif_acc_5_sdt_1(3
      DOWNTO 0)) & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1;
  CACHE_UPDATE_LOOP_3_qif_read_rom_k_cache_rom_map_1_itm <= CACHE_UPDATE_LOOP_3_qif_read_rom_k_cache_rom_map_1_rg_data_out;

  APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_rg : mgc_hls.dutmgc_rom_34_960_17_1_60_pkg.dutmgc_rom_34_960_17_1_60
    PORT MAP(
      addr => APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_rg_addr,
      data_out => APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_rg_data_out
    );
  APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_rg_addr <= (z_out_22(4
      DOWNTO 0)) & (reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd(0)) & reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_1
      & reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_2;
  APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_itm <= APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_rg_data_out;

  APPLY_ROTARY_POS_EMB_LOOP_6_cosval_read_rom_cos_tab_rom_map_1_rg : mgc_hls.dutmgc_rom_35_960_17_1_60_pkg.dutmgc_rom_35_960_17_1_60
    PORT MAP(
      addr => APPLY_ROTARY_POS_EMB_LOOP_6_cosval_read_rom_cos_tab_rom_map_1_rg_addr,
      data_out => APPLY_ROTARY_POS_EMB_LOOP_6_cosval_read_rom_cos_tab_rom_map_1_rg_data_out
    );
  APPLY_ROTARY_POS_EMB_LOOP_6_cosval_read_rom_cos_tab_rom_map_1_rg_addr <= (z_out_22(4
      DOWNTO 0)) & (reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd(0)) & reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_1
      & reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_2;
  APPLY_ROTARY_POS_EMB_LOOP_6_cosval_read_rom_cos_tab_rom_map_1_itm <= APPLY_ROTARY_POS_EMB_LOOP_6_cosval_read_rom_cos_tab_rom_map_1_rg_data_out;

  CACHE_UPDATE_LOOP_3_1_qif_read_rom_v_cache_rom_map_1_rg : mgc_hls.dutmgc_rom_36_1920_40_1_60_pkg.dutmgc_rom_36_1920_40_1_60
    PORT MAP(
      addr => CACHE_UPDATE_LOOP_3_1_qif_read_rom_v_cache_rom_map_1_rg_addr,
      data_out => CACHE_UPDATE_LOOP_3_1_qif_read_rom_v_cache_rom_map_1_rg_data_out
    );
  CACHE_UPDATE_LOOP_3_1_qif_read_rom_v_cache_rom_map_1_rg_addr <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED(CACHE_UPDATE_LOOP_3_1_qif_acc_5_sdt_1(5
      DOWNTO 4)), 2), 3) + UNSIGNED(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0), 3)) &
      (CACHE_UPDATE_LOOP_3_1_qif_acc_5_sdt_1(3 DOWNTO 0)) & reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_1
      & reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_2;
  CACHE_UPDATE_LOOP_3_1_qif_read_rom_v_cache_rom_map_1_sdt <= CACHE_UPDATE_LOOP_3_1_qif_read_rom_v_cache_rom_map_1_rg_data_out;

  RMS_NORM_LOOP_2_2_read_rom_ln_weight_rom_map_1_rg : mgc_hls.dutmgc_rom_37_384_13_1_60_pkg.dutmgc_rom_37_384_13_1_60
    PORT MAP(
      addr => RMS_NORM_LOOP_2_2_read_rom_ln_weight_rom_map_1_rg_addr,
      data_out => RMS_NORM_LOOP_2_2_read_rom_ln_weight_rom_map_1_rg_data_out
    );
  RMS_NORM_LOOP_2_2_read_rom_ln_weight_rom_map_1_rg_addr <= reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3;
  RMS_NORM_LOOP_2_2_read_rom_ln_weight_rom_map_1_itm <= RMS_NORM_LOOP_2_2_read_rom_ln_weight_rom_map_1_rg_data_out;

  RMS_NORM_LOOP_2_read_rom_ln_weight_in_rom_map_1_rg : mgc_hls.dutmgc_rom_38_384_12_1_60_pkg.dutmgc_rom_38_384_12_1_60
    PORT MAP(
      addr => RMS_NORM_LOOP_2_read_rom_ln_weight_in_rom_map_1_rg_addr,
      data_out => RMS_NORM_LOOP_2_read_rom_ln_weight_in_rom_map_1_rg_data_out
    );
  RMS_NORM_LOOP_2_read_rom_ln_weight_in_rom_map_1_rg_addr <= reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3;
  RMS_NORM_LOOP_2_read_rom_ln_weight_in_rom_map_1_itm <= RMS_NORM_LOOP_2_read_rom_ln_weight_in_rom_map_1_rg_data_out;

  LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_read_rom_k_weights_rom_map_1_rg : mgc_hls.dutmgc_rom_39_36864_8_1_60_pkg.dutmgc_rom_39_36864_8_1_60
    PORT MAP(
      addr => LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_read_rom_k_weights_rom_map_1_rg_addr,
      data_out => LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_read_rom_k_weights_rom_map_1_rg_data_out
    );
  LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_read_rom_k_weights_rom_map_1_rg_addr
      <= (z_out_6(8 DOWNTO 0)) & (SF_LOOP_3_acc_45_itm_8_0(6 DOWNTO 0));
  LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_read_rom_k_weights_rom_map_1_itm <= LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_read_rom_k_weights_rom_map_1_rg_data_out;

  LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_read_rom_v_weights_rom_map_1_rg : mgc_hls.dutmgc_rom_40_36864_8_1_60_pkg.dutmgc_rom_40_36864_8_1_60
    PORT MAP(
      addr => LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_read_rom_v_weights_rom_map_1_rg_addr,
      data_out => LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_read_rom_v_weights_rom_map_1_rg_data_out
    );
  LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_read_rom_v_weights_rom_map_1_rg_addr
      <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd
      & reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1 & APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp)
      + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(reg_SF_LOOP_3_acc_38_1_ftd_2(8 DOWNTO
      7)), 2), 7), 7), 9) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd
      & reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1 & APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp
      & '0'), 8), 9), 9)) & (reg_SF_LOOP_3_acc_38_1_ftd_2(6 DOWNTO 0));
  LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_read_rom_v_weights_rom_map_1_sdt <= LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_read_rom_v_weights_rom_map_1_rg_data_out;

  LINEAR_FORWARD_NO_MUL_LOOP_5_1_weight_val_lshift_rg : mgc_hls.mgc_shift_comps_v5.mgc_shift_bl_v5
    GENERIC MAP(
      width_a => 1,
      signd_a => 0,
      width_s => 4,
      width_z => 7
      )
    PORT MAP(
      a(0) => LINEAR_FORWARD_NO_MUL_LOOP_5_1_weight_val_lshift_rg_a,
      s => LINEAR_FORWARD_NO_MUL_LOOP_5_1_weight_val_lshift_rg_s,
      z => LINEAR_FORWARD_NO_MUL_LOOP_5_1_weight_val_lshift_rg_z
    );
  LINEAR_FORWARD_NO_MUL_LOOP_5_1_weight_val_lshift_rg_a <= '1';
  LINEAR_FORWARD_NO_MUL_LOOP_5_1_weight_val_lshift_rg_s <= '0' & LINEAR_FORWARD_NO_MUL_LOOP_5_1_l_2_0_lpi_3_dfm_1_0_1
      & '0';
  LINEAR_FORWARD_NO_MUL_LOOP_5_1_weight_val_lshift_itm <= LINEAR_FORWARD_NO_MUL_LOOP_5_1_weight_val_lshift_rg_z;

  LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_lshift_rg : mgc_hls.mgc_shift_comps_v5.mgc_shift_bl_v5
    GENERIC MAP(
      width_a => 1,
      signd_a => 0,
      width_s => 4,
      width_z => 7
      )
    PORT MAP(
      a(0) => LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_lshift_rg_a,
      s => LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_lshift_rg_s,
      z => LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_lshift_rg_z
    );
  LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_lshift_rg_a <= '1';
  LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_lshift_rg_s <= '0' & LINEAR_FORWARD_NO_MUL_LOOP_5_2_l_2_0_lpi_3_dfm_1_0_1
      & '0';
  LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_lshift_itm <= LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_lshift_rg_z;

  LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_read_rom_o_weights_rom_map_1_rg : mgc_hls.dutmgc_rom_41_36864_8_1_60_pkg.dutmgc_rom_41_36864_8_1_60
    PORT MAP(
      addr => LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_read_rom_o_weights_rom_map_1_rg_addr,
      data_out => LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_read_rom_o_weights_rom_map_1_rg_data_out
    );
  LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_read_rom_o_weights_rom_map_1_rg_addr
      <= (z_out_6(8 DOWNTO 0)) & (reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(6
      DOWNTO 0));
  LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_read_rom_o_weights_rom_map_1_itm <= LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_read_rom_o_weights_rom_map_1_rg_data_out;

  LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_read_rom_q_weights_rom_map_1_rg : mgc_hls.dutmgc_rom_42_36864_8_1_60_pkg.dutmgc_rom_42_36864_8_1_60
    PORT MAP(
      addr => LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_read_rom_q_weights_rom_map_1_rg_addr,
      data_out => LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_read_rom_q_weights_rom_map_1_rg_data_out
    );
  LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_read_rom_q_weights_rom_map_1_rg_addr <=
      (z_out_7(8 DOWNTO 0)) & (reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(6
      DOWNTO 0));
  LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_read_rom_q_weights_rom_map_1_sdt <= LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_read_rom_q_weights_rom_map_1_rg_data_out;

  LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_lshift_rg : mgc_hls.mgc_shift_comps_v5.mgc_shift_bl_v5
    GENERIC MAP(
      width_a => 1,
      signd_a => 0,
      width_s => 4,
      width_z => 7
      )
    PORT MAP(
      a(0) => LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_lshift_rg_a,
      s => LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_lshift_rg_s,
      z => LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_lshift_rg_z
    );
  LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_lshift_rg_a <= '1';
  LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_lshift_rg_s <= '0' & LINEAR_FORWARD_NO_MUL_LOOP_5_l_2_0_lpi_3_dfm_1_0_1
      & '0';
  LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_lshift_itm <= LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_lshift_rg_z;

  LINEAR_FORWARD_NO_MUL_LOOP_5_3_weight_val_lshift_rg : mgc_hls.mgc_shift_comps_v5.mgc_shift_bl_v5
    GENERIC MAP(
      width_a => 1,
      signd_a => 0,
      width_s => 4,
      width_z => 7
      )
    PORT MAP(
      a(0) => LINEAR_FORWARD_NO_MUL_LOOP_5_3_weight_val_lshift_rg_a,
      s => LINEAR_FORWARD_NO_MUL_LOOP_5_3_weight_val_lshift_rg_s,
      z => LINEAR_FORWARD_NO_MUL_LOOP_5_3_weight_val_lshift_rg_z
    );
  LINEAR_FORWARD_NO_MUL_LOOP_5_3_weight_val_lshift_rg_a <= '1';
  LINEAR_FORWARD_NO_MUL_LOOP_5_3_weight_val_lshift_rg_s <= '0' & LINEAR_FORWARD_NO_MUL_LOOP_5_3_l_2_0_lpi_3_dfm_1_0_1
      & '0';
  LINEAR_FORWARD_NO_MUL_LOOP_5_3_weight_val_lshift_itm <= LINEAR_FORWARD_NO_MUL_LOOP_5_3_weight_val_lshift_rg_z;

  dut_core_strm_in_rsci_inst : dut_core_strm_in_rsci
    PORT MAP(
      strm_in_rsc_dat => dut_core_strm_in_rsci_inst_strm_in_rsc_dat,
      strm_in_rsc_vld => strm_in_rsc_vld,
      strm_in_rsc_rdy => strm_in_rsc_rdy,
      strm_in_rsci_oswt => reg_strm_in_rsci_iswt0_cse,
      strm_in_rsci_wen_comp => strm_in_rsci_wen_comp,
      strm_in_rsci_idat_mxwt => dut_core_strm_in_rsci_inst_strm_in_rsci_idat_mxwt
    );
  dut_core_strm_in_rsci_inst_strm_in_rsc_dat <= strm_in_rsc_dat;
  strm_in_rsci_idat_mxwt <= dut_core_strm_in_rsci_inst_strm_in_rsci_idat_mxwt;

  dut_core_strm_out_rsci_inst : dut_core_strm_out_rsci
    PORT MAP(
      strm_out_rsc_dat => dut_core_strm_out_rsci_inst_strm_out_rsc_dat,
      strm_out_rsc_vld => strm_out_rsc_vld,
      strm_out_rsc_rdy => strm_out_rsc_rdy,
      strm_out_rsci_oswt => reg_strm_out_rsci_iswt0_cse,
      strm_out_rsci_wen_comp => strm_out_rsci_wen_comp,
      strm_out_rsci_idat => dut_core_strm_out_rsci_inst_strm_out_rsci_idat
    );
  strm_out_rsc_dat <= dut_core_strm_out_rsci_inst_strm_out_rsc_dat;
  dut_core_strm_out_rsci_inst_strm_out_rsci_idat <= strm_out_rsci_idat_31_2 & STD_LOGIC_VECTOR'(
      "00");

  dut_core_staller_inst : dut_core_staller
    PORT MAP(
      en => en,
      strm_in_rsci_wen_comp => strm_in_rsci_wen_comp,
      strm_out_rsci_wen_comp => strm_out_rsci_wen_comp,
      input_rsc_en_d_1 => input_rsc_en_d_1
    );
  dut_core_core_fsm_inst : dut_core_core_fsm
    PORT MAP(
      clk => clk,
      rst => rst,
      input_rsc_en_d_1 => input_rsc_en_d_1,
      fsm_output => dut_core_core_fsm_inst_fsm_output,
      for_for_C_1_tr0 => CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm,
      attention_sqrt_for_C_10_tr0 => dut_core_core_fsm_inst_attention_sqrt_for_C_10_tr0,
      RMS_NORM_LOOP_2_C_3_tr0 => and_dcpl_13,
      QUANTIZE_ACTIVATION_LOOP_4_C_7_tr0 => dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_4_C_7_tr0,
      QUANTIZE_ACTIVATION_LOOP_3_C_0_tr0 => dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_3_C_0_tr0,
      attention_5_1_384_384_8_48_q_proj_re_vinit_C_1_tr0 => CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm,
      LINEAR_FORWARD_NO_MUL_LOOP_3_C_1_tr0 => and_dcpl_97,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_56_tr0 => CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm,
      RESHAPE_2D_TO_3D_LOOP_3_C_2_tr0 => CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm,
      RESHAPE_2D_TO_3D_LOOP_2_C_0_tr0 => CACHE_UPDATE_LOOP_1_and_cse,
      RESHAPE_2D_TO_3D_LOOP_3_2_C_3_tr0 => and_dcpl_13,
      RESHAPE_2D_TO_3D_LOOP_2_2_C_0_tr0 => CACHE_UPDATE_LOOP_1_and_cse,
      APPLY_ROTARY_POS_EMB_LOOP_6_C_2_tr0 => dut_core_core_fsm_inst_APPLY_ROTARY_POS_EMB_LOOP_6_C_2_tr0,
      APPLY_ROTARY_POS_EMB_LOOP_4_C_0_tr0 => dut_core_core_fsm_inst_APPLY_ROTARY_POS_EMB_LOOP_4_C_0_tr0,
      CACHE_UPDATE_LOOP_3_C_2_tr0 => CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm,
      CACHE_UPDATE_LOOP_2_C_0_tr0 => for_for_for_for_nor_tmp,
      CACHE_UPDATE_LOOP_1_C_0_tr0 => CACHE_UPDATE_LOOP_1_and_cse,
      TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_2_tr0 => dut_core_core_fsm_inst_TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_2_tr0,
      TRANSPOSE_LAST_TWO_DIMS_LOOP_2_C_0_tr0 => dut_core_core_fsm_inst_TRANSPOSE_LAST_TWO_DIMS_LOOP_2_C_0_tr0,
      TRANSPOSE_LAST_TWO_DIMS_LOOP_1_C_0_tr0 => dut_core_core_fsm_inst_TRANSPOSE_LAST_TWO_DIMS_LOOP_1_C_0_tr0,
      GEMM_3D_FLOAT_LOOP_3_C_50_tr0 => dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_3_C_50_tr0,
      GEMM_3D_FLOAT_LOOP_1_C_0_tr0 => dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_1_C_0_tr0,
      SF_LOOP_3_C_3_tr0 => dut_core_core_fsm_inst_SF_LOOP_3_C_3_tr0,
      SF_LOOP_1_C_0_tr0 => dut_core_core_fsm_inst_SF_LOOP_1_C_0_tr0,
      SOFTMAX_LOOP_3_C_1_tr0 => dut_core_core_fsm_inst_SOFTMAX_LOOP_3_C_1_tr0,
      SOFTMAX_LOOP_4_C_5_tr0 => dut_core_core_fsm_inst_SOFTMAX_LOOP_4_C_5_tr0,
      SOFTMAX_LOOP_5_C_16_tr0 => dut_core_core_fsm_inst_SOFTMAX_LOOP_5_C_16_tr0,
      SOFTMAX_LOOP_1_C_2_tr0 => dut_core_core_fsm_inst_SOFTMAX_LOOP_1_C_2_tr0,
      GEMM_3D_FLOAT_LOOP_3_1_C_7_tr0 => dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_3_1_C_7_tr0,
      GEMM_3D_FLOAT_LOOP_1_1_C_0_tr0 => dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_1_1_C_0_tr0,
      ATTN_2D_LOOP_3_C_2_tr0 => dut_core_core_fsm_inst_ATTN_2D_LOOP_3_C_2_tr0,
      ATTN_2D_LOOP_2_C_0_tr0 => dut_core_core_fsm_inst_ATTN_2D_LOOP_2_C_0_tr0,
      RMS_NORM_LOOP_1_2_C_1_tr0 => dut_core_core_fsm_inst_RMS_NORM_LOOP_1_2_C_1_tr0,
      attention_sqrt_1_for_C_10_tr0 => dut_core_core_fsm_inst_attention_sqrt_1_for_C_10_tr0,
      RMS_NORM_LOOP_2_2_C_3_tr0 => and_dcpl_13,
      QUANTIZE_ACTIVATION_LOOP_4_1_C_7_tr0 => dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_4_1_C_7_tr0,
      QUANTIZE_ACTIVATION_LOOP_3_1_C_0_tr0 => dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_3_1_C_0_tr0,
      output_vinit_C_1_tr0 => INIT_2D_MEM_LOOP_2_3_INIT_2D_MEM_LOOP_2_3_nor_itm,
      LINEAR_FORWARD_NO_MUL_LOOP_3_3_C_0_tr0 => and_dcpl_97,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_29_tr0 => dut_core_core_fsm_inst_LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_29_tr0,
      for_1_for_C_2_tr0 => dut_core_core_fsm_inst_for_1_for_C_2_tr0
    );
  fsm_output <= dut_core_core_fsm_inst_fsm_output;
  dut_core_core_fsm_inst_attention_sqrt_for_C_10_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_4_C_7_tr0 <= APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_4_2(2);
  dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_3_C_0_tr0 <= NOT (z_out_31(2));
  dut_core_core_fsm_inst_APPLY_ROTARY_POS_EMB_LOOP_6_C_2_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_APPLY_ROTARY_POS_EMB_LOOP_4_C_0_tr0 <= z_out_37(3);
  dut_core_core_fsm_inst_TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_2_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_TRANSPOSE_LAST_TWO_DIMS_LOOP_2_C_0_tr0 <= NOT (z_out_31(2));
  dut_core_core_fsm_inst_TRANSPOSE_LAST_TWO_DIMS_LOOP_1_C_0_tr0 <= z_out_35(3);
  dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_3_C_50_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_1_C_0_tr0 <= z_out_35(3);
  dut_core_core_fsm_inst_SF_LOOP_3_C_3_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_SF_LOOP_1_C_0_tr0 <= z_out_35(3);
  dut_core_core_fsm_inst_SOFTMAX_LOOP_3_C_1_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_SOFTMAX_LOOP_4_C_5_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_SOFTMAX_LOOP_5_C_16_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_SOFTMAX_LOOP_1_C_2_tr0 <= z_out_35(3);
  dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_3_1_C_7_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_1_1_C_0_tr0 <= z_out_35(3);
  dut_core_core_fsm_inst_ATTN_2D_LOOP_3_C_2_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_ATTN_2D_LOOP_2_C_0_tr0 <= z_out_37(3);
  dut_core_core_fsm_inst_RMS_NORM_LOOP_1_2_C_1_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_attention_sqrt_1_for_C_10_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_4_1_C_7_tr0 <= APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_4_2(2);
  dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_3_1_C_0_tr0 <= NOT (z_out_31(2));
  dut_core_core_fsm_inst_LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_29_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_for_1_for_C_2_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;

  input_rsci_en_d <= input_rsc_en_d_1;
  QUANTIZE_ACTIVATION_LOOP_1_max_val_and_1_ssc <= input_rsc_en_d_1 AND (RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_nor_ssc_1
      OR RMS_NORM_LOOP_2_and_4_ssc_1 OR RMS_NORM_LOOP_2_2_and_5_ssc_1 OR and_19_cse)
      AND and_dcpl_105;
  QUANTIZE_ACTIVATION_LOOP_1_1_max_val_and_1_ssc <= input_rsc_en_d_1 AND (RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_nor_ssc_1
      OR RMS_NORM_LOOP_2_2_and_4_ssc_1 OR RMS_NORM_LOOP_2_2_and_5_ssc_1 OR and_19_cse)
      AND and_dcpl_112;
  and_850_cse <= CONV_SL_1_1(fsm_output(1 DOWNTO 0)=STD_LOGIC_VECTOR'("11"));
  and_849_cse <= CONV_SL_1_1(fsm_output(8 DOWNTO 7)=STD_LOGIC_VECTOR'("11"));
  or_369_cse <= CONV_SL_1_1(fsm_output(2 DOWNTO 0)/=STD_LOGIC_VECTOR'("000"));
  nor_315_cse <= NOT((fsm_output(0)) OR (fsm_output(2)));
  or_368_cse <= and_850_cse OR (fsm_output(7));
  nand_158_cse <= NOT(CONV_SL_1_1(fsm_output(6 DOWNTO 5)=STD_LOGIC_VECTOR'("11")));
  or_1325_cse <= CONV_SL_1_1(fsm_output(7 DOWNTO 5)/=STD_LOGIC_VECTOR'("000"));
  nand_160_cse <= NOT(CONV_SL_1_1(fsm_output(7 DOWNTO 5)=STD_LOGIC_VECTOR'("111")));
  or_1326_cse <= CONV_SL_1_1(fsm_output(2 DOWNTO 1)/=STD_LOGIC_VECTOR'("00"));
  and_855_cse <= CONV_SL_1_1(fsm_output(2 DOWNTO 1)=STD_LOGIC_VECTOR'("11"));
  nor_236_nl <= NOT((fsm_output(8)) OR (fsm_output(2)));
  or_387_nl <= and_855_cse OR (fsm_output(8));
  and_856_nl <= or_1326_cse AND (fsm_output(8));
  mux_218_nl <= MUX_s_1_2_2(or_387_nl, and_856_nl, fsm_output(0));
  mux_219_nl <= MUX_s_1_2_2(nor_236_nl, mux_218_nl, fsm_output(3));
  or_389_nl <= (fsm_output(6)) OR (fsm_output(4)) OR (fsm_output(7)) OR mux_219_nl;
  nor_367_nl <= NOT((fsm_output(7)) OR (fsm_output(3)) OR (NOT (fsm_output(0))) OR
      (fsm_output(1)) OR (NOT((fsm_output(2)) AND (fsm_output(8)))));
  and_858_nl <= (fsm_output(7)) AND (fsm_output(3)) AND (fsm_output(1)) AND (fsm_output(2))
      AND (NOT (fsm_output(8)));
  mux_217_nl <= MUX_s_1_2_2(nor_367_nl, and_858_nl, fsm_output(4));
  nand_13_nl <= NOT((fsm_output(6)) AND mux_217_nl);
  mux_220_ssc <= MUX_s_1_2_2(or_389_nl, nand_13_nl, fsm_output(5));
  and_747_cse <= (fsm_output(1)) AND (fsm_output(3));
  mux_225_nl <= MUX_s_1_2_2((NOT or_tmp_247), and_747_cse, fsm_output(0));
  nor_311_nl <= NOT((fsm_output(6)) OR (fsm_output(2)) OR (NOT (fsm_output(0))) OR
      (fsm_output(1)) OR (fsm_output(4)) OR (fsm_output(7)) OR (NOT (fsm_output(8))));
  and_807_nl <= (fsm_output(6)) AND (fsm_output(2)) AND (NOT (fsm_output(0))) AND
      (fsm_output(1)) AND (fsm_output(4)) AND (fsm_output(7)) AND (NOT (fsm_output(8)));
  mux_189_nl <= MUX_s_1_2_2(nor_311_nl, and_807_nl, fsm_output(5));
  attention_sqrt_1_guess_or_1_cse <= ((NOT and_dcpl_149) AND mux_225_nl AND and_dcpl_132
      AND and_dcpl_130 AND and_dcpl) OR ((NOT and_dcpl_183) AND mux_189_nl AND (fsm_output(3)));
  attention_sqrt_1_guess_or_2_cse <= and_dcpl_149 OR and_dcpl_183;
  or_1327_cse <= CONV_SL_1_1(fsm_output(1 DOWNTO 0)/=STD_LOGIC_VECTOR'("01"));
  or_412_cse <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)/=STD_LOGIC_VECTOR'("100"));
  nor_83_cse <= NOT(CONV_SL_1_1(fsm_output(1 DOWNTO 0)/=STD_LOGIC_VECTOR'("10")));
  nor_609_cse <= NOT(CONV_SL_1_1(fsm_output(8 DOWNTO 6)/=STD_LOGIC_VECTOR'("000")));
  nand_164_cse <= NOT(CONV_SL_1_1(fsm_output(7 DOWNTO 6)=STD_LOGIC_VECTOR'("11")));
  or_411_nl <= (NOT((fsm_output(0)) OR (fsm_output(1)) OR (fsm_output(8)))) OR CONV_SL_1_1(fsm_output(7
      DOWNTO 6)/=STD_LOGIC_VECTOR'("00"));
  mux_232_nl <= MUX_s_1_2_2(or_412_cse, or_411_nl, fsm_output(2));
  nor_606_nl <= NOT((fsm_output(4)) OR mux_232_nl);
  or_408_nl <= (or_1327_cse AND (fsm_output(8))) OR CONV_SL_1_1(fsm_output(7 DOWNTO
      6)/=STD_LOGIC_VECTOR'("00"));
  or_406_nl <= nor_83_cse OR CONV_SL_1_1(fsm_output(8 DOWNTO 6)/=STD_LOGIC_VECTOR'("000"));
  mux_231_nl <= MUX_s_1_2_2(or_408_nl, or_406_nl, fsm_output(2));
  nor_607_nl <= NOT((fsm_output(4)) OR mux_231_nl);
  mux_233_nl <= MUX_s_1_2_2(nor_606_nl, nor_607_nl, fsm_output(3));
  nor_608_nl <= NOT((NOT (fsm_output(2))) OR (NOT (fsm_output(0))) OR (fsm_output(1))
      OR (NOT (fsm_output(8))) OR (NOT (fsm_output(6))) OR (fsm_output(7)));
  mux_229_nl <= MUX_s_1_2_2(nor_608_nl, nor_609_cse, fsm_output(4));
  nor_610_nl <= NOT((NOT (fsm_output(2))) OR (NOT (fsm_output(0))) OR (NOT (fsm_output(1)))
      OR (fsm_output(8)) OR (fsm_output(6)) OR (fsm_output(7)));
  nor_611_nl <= NOT((fsm_output(0)) OR (fsm_output(1)) OR (fsm_output(8)) OR (fsm_output(6))
      OR (fsm_output(7)));
  nor_612_nl <= NOT((NOT (fsm_output(0))) OR (NOT (fsm_output(1))) OR (fsm_output(8))
      OR nand_164_cse);
  mux_227_nl <= MUX_s_1_2_2(nor_611_nl, nor_612_nl, fsm_output(2));
  mux_228_nl <= MUX_s_1_2_2(nor_610_nl, mux_227_nl, fsm_output(4));
  mux_230_nl <= MUX_s_1_2_2(mux_229_nl, mux_228_nl, fsm_output(3));
  mux_234_seb <= MUX_s_1_2_2(mux_233_nl, mux_230_nl, fsm_output(5));
  nor_371_cse <= NOT(CONV_SL_1_1(fsm_output(2 DOWNTO 0)/=STD_LOGIC_VECTOR'("000")));
  nor_372_cse <= NOT(nor_371_cse OR (fsm_output(8)));
  and_863_cse <= CONV_SL_1_1(fsm_output(2 DOWNTO 0)=STD_LOGIC_VECTOR'("111"));
  mux_248_nl <= MUX_s_1_2_2((fsm_output(4)), or_616_cse, and_863_cse);
  mux_249_nl <= MUX_s_1_2_2(mux_248_nl, (NOT mux_tmp_236), fsm_output(5));
  and_173_ssc <= mux_249_nl AND and_dcpl_150;
  or_1328_cse <= CONV_SL_1_1(fsm_output(1 DOWNTO 0)/=STD_LOGIC_VECTOR'("00"));
  and_864_cse <= (fsm_output(1)) AND (fsm_output(8));
  or_435_nl <= (fsm_output(0)) OR (fsm_output(1)) OR (fsm_output(8));
  mux_255_nl <= MUX_s_1_2_2((fsm_output(4)), or_616_cse, or_435_nl);
  or_434_nl <= and_864_cse OR CONV_SL_1_1(fsm_output(4 DOWNTO 3)/=STD_LOGIC_VECTOR'("00"));
  mux_256_nl <= MUX_s_1_2_2(mux_255_nl, or_434_nl, fsm_output(2));
  or_433_nl <= (or_1328_cse AND (fsm_output(8))) OR CONV_SL_1_1(fsm_output(4 DOWNTO
      3)/=STD_LOGIC_VECTOR'("00"));
  or_431_nl <= (NOT (fsm_output(0))) OR (fsm_output(1)) OR (NOT (fsm_output(8)))
      OR (fsm_output(4)) OR (fsm_output(3));
  mux_254_nl <= MUX_s_1_2_2(or_433_nl, or_431_nl, fsm_output(2));
  mux_257_nl <= MUX_s_1_2_2((NOT mux_256_nl), mux_254_nl, fsm_output(5));
  or_436_ssc <= mux_257_nl OR or_dcpl_150;
  nor_374_nl <= NOT(and_863_cse OR CONV_SL_1_1(fsm_output(4 DOWNTO 3)/=STD_LOGIC_VECTOR'("00")));
  mux_258_nl <= MUX_s_1_2_2(nor_374_nl, or_tmp_278, fsm_output(5));
  and_188_ssc <= (NOT mux_258_nl) AND and_dcpl_166;
  mux_259_nl <= MUX_s_1_2_2(not_tmp_215, mux_tmp_236, fsm_output(5));
  and_195_ssc <= (NOT mux_259_nl) AND and_dcpl_176;
  mux_262_nl <= MUX_s_1_2_2(or_tmp_76, mux_tmp_260, or_1328_cse);
  mux_263_nl <= MUX_s_1_2_2(mux_262_nl, mux_tmp_261, fsm_output(2));
  and_197_ssc <= (NOT mux_263_nl) AND and_dcpl_178;
  mux_264_nl <= MUX_s_1_2_2(and_944_cse, (NOT mux_tmp_236), fsm_output(5));
  and_198_ssc <= mux_264_nl AND and_dcpl_176;
  mux_265_nl <= MUX_s_1_2_2(or_tmp_76, mux_tmp_260, fsm_output(1));
  mux_266_nl <= MUX_s_1_2_2(mux_265_nl, mux_tmp_261, fsm_output(2));
  and_202_ssc <= (NOT mux_266_nl) AND and_dcpl_178;
  APPLY_ROTARY_POS_EMB_LOOP_3_nand_1_rmff <= NOT(and_dcpl_192 AND and_dcpl_189 AND
      (NOT((fsm_output(5)) OR LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1)));
  APPLY_ROTARY_POS_EMB_LOOP_3_mux1h_1_rmff_3_1 <= MUX1HOT_v_3_3_2(APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_4_2,
      APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva_4_2, (z_out_23(3 DOWNTO 1)), STD_LOGIC_VECTOR'(
      and_dcpl_197 & and_dcpl_198 & and_dcpl_196));
  APPLY_ROTARY_POS_EMB_LOOP_3_mux1h_1_rmff_0 <= MUX1HOT_s_1_3_2(APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_1,
      (APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva_1_0(1)), (z_out_23(0)), STD_LOGIC_VECTOR'(
      and_dcpl_197 & and_dcpl_198 & and_dcpl_196));
  APPLY_ROTARY_POS_EMB_LOOP_3_mux1h_17_rmff <= MUX1HOT_s_1_3_2(APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_0,
      (APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva_1_0(0)), (z_out_14(0)), STD_LOGIC_VECTOR'(
      and_dcpl_197 & and_dcpl_198 & and_dcpl_196));
  APPLY_ROTARY_POS_EMB_LOOP_3_mux1h_16_rmff <= MUX1HOT_s_1_3_2(reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1,
      (attention_sqrt_1_for_i_4_0_sva_4_3(0)), (reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_1(1)),
      STD_LOGIC_VECTOR'( and_dcpl_197 & and_dcpl_198 & and_dcpl_196));
  APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_rmff_2 <= MUX_s_1_2_2((attention_sqrt_1_for_i_4_0_sva_2_0(2)),
      (reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_1(0)), and_dcpl_196);
  APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_rmff_1_0 <= MUX_v_2_2_2((attention_sqrt_1_for_i_4_0_sva_2_0(1
      DOWNTO 0)), reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_2, and_dcpl_196);
  QUANTIZE_ACTIVATION_LOOP_5_1_or_2_m1c <= ((NOT(QUANTIZE_ACTIVATION_LOOP_5_1_2_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs_mx1
      OR QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_cse_17)) AND and_dcpl_211)
      OR ((NOT(QUANTIZE_ACTIVATION_LOOP_5_1_1_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs_mx1
      OR QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_cse_17)) AND and_dcpl_212);
  or_455_cse <= CONV_SL_1_1(fsm_output(8 DOWNTO 7)/=STD_LOGIC_VECTOR'("10"));
  or_454_cse <= CONV_SL_1_1(fsm_output(8 DOWNTO 7)/=STD_LOGIC_VECTOR'("01"));
  and_274_ssc <= (NOT mux_tmp_283) AND and_dcpl_19 AND and_dcpl_28;
  and_277_ssc <= and_dcpl_257 AND and_dcpl_114;
  or_478_nl <= CONV_SL_1_1(fsm_output(1 DOWNTO 0)/=STD_LOGIC_VECTOR'("10"));
  mux_282_nl <= MUX_s_1_2_2(or_1327_cse, or_478_nl, fsm_output(5));
  GEMM_3D_FLOAT_LOOP_4_or_5_cse <= ((NOT mux_282_nl) AND and_dcpl_102 AND and_dcpl_19
      AND and_dcpl_204) OR and_dcpl_261;
  GEMM_3D_FLOAT_LOOP_4_or_6_cse <= and_277_ssc OR and_dcpl_263;
  GEMM_3D_FLOAT_LOOP_4_or_8_cse <= and_dcpl_268 OR and_dcpl_269;
  mux_284_nl <= MUX_s_1_2_2(or_dcpl_109, or_616_cse, fsm_output(6));
  mux_285_nl <= MUX_s_1_2_2(mux_284_nl, (fsm_output(6)), fsm_output(5));
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_nand_rmff <= NOT((NOT mux_285_nl) AND and_dcpl_19);
  CACHE_UPDATE_LOOP_3_1_CACHE_UPDATE_LOOP_3_1_nand_ssc <= NOT((reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd(1))
      AND reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1 AND (NOT (reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd(0))));
  APPLY_ROTARY_POS_EMB_LOOP_6_or_4_cse <= and_dcpl_292 OR and_dcpl_309 OR and_dcpl_310
      OR and_dcpl_311 OR and_dcpl_312 OR and_dcpl_313 OR and_dcpl_314 OR and_dcpl_315
      OR and_dcpl_317 OR and_dcpl_318 OR and_dcpl_319 OR and_dcpl_320 OR and_dcpl_321
      OR and_dcpl_322 OR and_dcpl_323 OR and_dcpl_324;
  or_488_nl <= (fsm_output(0)) OR (NOT and_747_cse);
  or_487_nl <= (NOT (fsm_output(1))) OR (fsm_output(3));
  mux_286_nl <= MUX_s_1_2_2(or_487_nl, or_tmp_247, fsm_output(0));
  mux_287_nl <= MUX_s_1_2_2(or_488_nl, mux_286_nl, fsm_output(2));
  or_486_nl <= (fsm_output(2)) OR (fsm_output(0)) OR (NOT and_747_cse);
  mux_288_nl <= MUX_s_1_2_2(mux_287_nl, or_486_nl, LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1);
  SF_LOOP_3_SF_LOOP_3_or_20_rmff <= mux_288_nl OR or_586_cse OR (NOT (fsm_output(7)))
      OR or_811_cse;
  RESHAPE_2D_TO_3D_LOOP_3_1_or_cse <= and_dcpl_348 OR and_dcpl_197;
  or_503_nl <= (fsm_output(2)) OR (fsm_output(0)) OR (fsm_output(7)) OR (NOT (fsm_output(3)));
  mux_303_nl <= MUX_s_1_2_2(or_tmp_340, or_503_nl, fsm_output(6));
  or_512_nl <= (fsm_output(0)) OR (fsm_output(7)) OR (NOT (fsm_output(3)));
  or_510_nl <= (NOT (fsm_output(0))) OR (fsm_output(7)) OR (fsm_output(3));
  mux_301_nl <= MUX_s_1_2_2(or_512_nl, or_510_nl, fsm_output(2));
  mux_302_nl <= MUX_s_1_2_2(or_tmp_340, mux_301_nl, fsm_output(6));
  mux_304_nl <= MUX_s_1_2_2(mux_303_nl, mux_302_nl, LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1);
  SF_LOOP_3_SF_LOOP_3_or_24_rmff <= mux_304_nl OR or_586_cse OR (fsm_output(1)) OR
      (fsm_output(5));
  nor_339_nl <= NOT(CONV_SL_1_1(fsm_output(3 DOWNTO 2)/=STD_LOGIC_VECTOR'("10")));
  nor_340_nl <= NOT(CONV_SL_1_1(fsm_output(3 DOWNTO 2)/=STD_LOGIC_VECTOR'("01")));
  mux_298_nl <= MUX_s_1_2_2(nor_339_nl, nor_340_nl, fsm_output(5));
  INIT_2D_MEM_LOOP_2_1_or_ssc <= (and_dcpl_384 AND and_dcpl_259) OR (mux_298_nl AND
      and_dcpl_132 AND and_dcpl_127 AND (NOT (fsm_output(0))) AND (fsm_output(6)));
  nand_170_cse <= NOT((fsm_output(1)) AND (fsm_output(6)));
  QUANTIZE_ACTIVATION_LOOP_5_or_5_m1c <= ((NOT(QUANTIZE_ACTIVATION_LOOP_5_2_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs_mx1
      OR QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_cse_17)) AND and_dcpl_404)
      OR ((NOT(QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs_mx1
      OR QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_cse_17)) AND and_dcpl_405);
  and_447_ssc <= and_dcpl_128 AND and_dcpl_243;
  or_1363_cse <= CONV_SL_1_1(fsm_output(7 DOWNTO 2)/=STD_LOGIC_VECTOR'("000110"));
  nand_175_cse <= NOT(CONV_SL_1_1(fsm_output(1 DOWNTO 0)=STD_LOGIC_VECTOR'("11")));
  nor_398_cse <= NOT((fsm_output(2)) OR (NOT (fsm_output(7))));
  or_553_cse <= (fsm_output(1)) OR (NOT (fsm_output(7)));
  and_2271_cse <= and_dcpl_104 AND and_dcpl_238;
  and_2277_cse <= and_dcpl_454 AND and_dcpl_148;
  nor_400_nl <= NOT((fsm_output(2)) OR (fsm_output(0)) OR (fsm_output(7)) OR (fsm_output(4))
      OR (fsm_output(3)));
  nor_401_nl <= NOT((NOT (fsm_output(2))) OR (fsm_output(0)) OR (NOT (fsm_output(7)))
      OR (NOT (fsm_output(4))) OR (fsm_output(3)));
  mux_348_nl <= MUX_s_1_2_2(nor_400_nl, nor_401_nl, fsm_output(6));
  nor_402_nl <= NOT((NOT (fsm_output(6))) OR (fsm_output(2)) OR (NOT((fsm_output(0))
      AND (fsm_output(7)) AND (fsm_output(4)) AND (fsm_output(3)))));
  mux_349_nl <= MUX_s_1_2_2(mux_348_nl, nor_402_nl, fsm_output(5));
  GEMM_3D_FLOAT_LOOP_4_nand_3_itm <= NOT(mux_349_nl AND nor_439_cse);
  or_1362_nl <= (fsm_output(3)) OR (fsm_output(2)) OR (NOT (fsm_output(1))) OR (fsm_output(7));
  mux_342_nl <= MUX_s_1_2_2(and_882_cse, (fsm_output(1)), fsm_output(0));
  mux_343_nl <= MUX_s_1_2_2(mux_342_nl, or_604_cse, fsm_output(2));
  nand_nl <= NOT((fsm_output(3)) AND mux_343_nl);
  mux_344_nl <= MUX_s_1_2_2(or_1362_nl, nand_nl, fsm_output(5));
  nand_243_nl <= NOT((fsm_output(5)) AND (fsm_output(7)));
  mux_345_nl <= MUX_s_1_2_2(mux_344_nl, nand_243_nl, fsm_output(4));
  nor_397_nl <= NOT((NOT(CONV_SL_1_1(fsm_output(2 DOWNTO 1)/=STD_LOGIC_VECTOR'("00"))))
      OR (fsm_output(7)));
  mux_339_nl <= MUX_s_1_2_2((fsm_output(7)), nor_397_nl, fsm_output(3));
  mux_337_nl <= MUX_s_1_2_2(or_604_cse, (fsm_output(7)), fsm_output(2));
  mux_338_nl <= MUX_s_1_2_2(mux_337_nl, nor_398_cse, fsm_output(3));
  mux_340_nl <= MUX_s_1_2_2(mux_339_nl, mux_338_nl, fsm_output(5));
  nor_394_nl <= NOT((fsm_output(0)) OR (fsm_output(1)) OR (NOT (fsm_output(7))));
  mux_334_nl <= MUX_s_1_2_2((fsm_output(7)), nor_394_nl, fsm_output(2));
  nor_395_nl <= NOT((fsm_output(2)) OR (NOT (fsm_output(0))) OR (fsm_output(1)) OR
      (NOT (fsm_output(7))));
  mux_335_nl <= MUX_s_1_2_2(mux_334_nl, nor_395_nl, fsm_output(3));
  or_556_nl <= (fsm_output(2)) OR (NOT(nand_175_cse AND (fsm_output(7))));
  or_554_nl <= (fsm_output(0)) OR (NOT and_882_cse);
  mux_332_nl <= MUX_s_1_2_2(or_554_nl, or_553_cse, fsm_output(2));
  mux_333_nl <= MUX_s_1_2_2(or_556_nl, mux_332_nl, fsm_output(3));
  mux_336_nl <= MUX_s_1_2_2(mux_335_nl, mux_333_nl, fsm_output(5));
  mux_341_nl <= MUX_s_1_2_2((NOT mux_340_nl), mux_336_nl, fsm_output(4));
  mux_346_nl <= MUX_s_1_2_2(mux_345_nl, mux_341_nl, fsm_output(6));
  mux_347_nl <= MUX_s_1_2_2(mux_346_nl, or_1363_cse, fsm_output(8));
  GEMM_3D_FLOAT_LOOP_4_and_ssc <= input_rsc_en_d_1 AND mux_347_nl;
  operator_40_24_true_AC_TRN_AC_WRAP_acc_40_sdt <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(26))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(26))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(26))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(26))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(26))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(26))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(26))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(26))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(22),
      1),2))), 18), 19) + CONV_SIGNED(CONV_SIGNED(SIGNED(z_out_49(16 DOWNTO 0)),
      17), 19), 19));
  SF_LOOP_3_acc_88_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(z_out_2(20),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(z_out_2(17), 1), 1),
      2), 2));
  SF_LOOP_3_acc_84_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_88_nl),
      2)) & (SF_LOOP_3_acc_34_sdt_14_0_1(14 DOWNTO 4))), 13), 14) + UNSIGNED'( "01000000000001"),
      14));
  SF_LOOP_3_acc_38_sdt <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_84_nl),
      14)) & (SF_LOOP_3_acc_34_sdt_14_0_1(3 DOWNTO 0))), 18), 19) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(z_out_2(16
      DOWNTO 0)), 17), 19) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((z_out_2(19 DOWNTO
      18)) & STD_LOGIC_VECTOR'( "00") & (z_out_2(19 DOWNTO 18)) & STD_LOGIC_VECTOR'(
      "00") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(z_out_2(20), 1),5)) & STD_LOGIC_VECTOR'(
      "000") & (z_out_2(17))), 17), 19), 19));
  or_629_cse <= CONV_SL_1_1(fsm_output(8 DOWNTO 7)/=STD_LOGIC_VECTOR'("00"));
  and_882_cse <= (fsm_output(1)) AND (fsm_output(7));
  or_616_cse <= CONV_SL_1_1(fsm_output(4 DOWNTO 3)/=STD_LOGIC_VECTOR'("00"));
  nor_414_cse <= NOT(CONV_SL_1_1(fsm_output(1 DOWNTO 0)/=STD_LOGIC_VECTOR'("00")));
  or_601_cse <= (NOT (fsm_output(1))) OR (fsm_output(7));
  or_607_cse <= (fsm_output(1)) OR (fsm_output(7));
  or_604_cse <= (NOT (fsm_output(0))) OR (NOT (fsm_output(1))) OR (fsm_output(7));
  or_614_cse <= (fsm_output(2)) OR (NOT (fsm_output(6)));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_35_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(21))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(21))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(21))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(21))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(21))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(21))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(21))),
      13), 14) + CONV_SIGNED(CONV_SIGNED(SIGNED(z_out_7), 12), 14), 14));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_37_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(23))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(23))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(23))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(23))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(23))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(23))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(23))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(23))),
      15), 16) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_35_nl),
      16), 16));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_39_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(25))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(25))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(25))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(25))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(25))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(25))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(25))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(25))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(25))),
      17), 18) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_37_nl),
      18), 18));
  or_637_nl <= (fsm_output(0)) OR (fsm_output(1)) OR (fsm_output(7)) OR (NOT (fsm_output(8)))
      OR (fsm_output(4));
  or_636_nl <= (fsm_output(0)) OR (NOT (fsm_output(1))) OR (fsm_output(7)) OR (fsm_output(8))
      OR (fsm_output(4));
  mux_397_nl <= MUX_s_1_2_2(or_637_nl, or_636_nl, fsm_output(2));
  nor_418_nl <= NOT((fsm_output(6)) OR mux_397_nl);
  and_884_nl <= (fsm_output(6)) AND (fsm_output(2)) AND (fsm_output(0)) AND (NOT
      (fsm_output(1))) AND (fsm_output(7)) AND (NOT (fsm_output(8))) AND (fsm_output(4));
  mux_398_nl <= MUX_s_1_2_2(nor_418_nl, and_884_nl, fsm_output(5));
  SF_LOOP_3_and_itm <= (NOT and_dcpl_514) AND mux_398_nl AND (fsm_output(3));
  or_645_cse <= CONV_SL_1_1(fsm_output(6 DOWNTO 5)/=STD_LOGIC_VECTOR'("10"));
  nor_419_cse <= NOT((fsm_output(5)) OR (fsm_output(8)));
  attention_round_1_qelse_or_9_cse <= (and_dcpl_403 AND and_dcpl_477 AND (fsm_output(5))
      AND z_out_53_40) OR (and_dcpl_111 AND and_dcpl_228 AND (fsm_output(5)) AND
      z_out_53_40);
  attention_round_1_qelse_or_8_cse <= and_dcpl_445 OR and_dcpl_240;
  and_745_cse <= (fsm_output(2)) AND (fsm_output(4));
  or_586_cse <= (fsm_output(8)) OR (fsm_output(4));
  and_878_cse <= (fsm_output(5)) AND (fsm_output(8));
  SF_LOOP_3_acc_47_itm <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((NOT
      (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(34 DOWNTO 33))) &
      STD_LOGIC_VECTOR'( "11") & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(26
      DOWNTO 25))) & STD_LOGIC_VECTOR'( "11") & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(26
      DOWNTO 23))) & '1' & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(21
      DOWNTO 20))) & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(15
      DOWNTO 14))) & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(34
      DOWNTO 33)))), 19), 20) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(SIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(39))
      & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(19 DOWNTO 18)) &
      (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(34 DOWNTO 30)) & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(32
      DOWNTO 29)) & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(13 DOWNTO
      12)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(17),
      1),3))),19)), 19), 20) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(z_out_2(20),
      1), 1), 20), 20));
  attention_round_1_qelse_and_3_ssc <= input_rsc_en_d_1 AND (NOT and_dcpl_662);
  attention_round_1_qelse_or_16_cse <= attention_round_1_qelse_or_8_cse OR (and_dcpl_403
      AND and_dcpl_477 AND (fsm_output(5)) AND (NOT z_out_53_40)) OR (and_dcpl_111
      AND and_dcpl_228 AND (fsm_output(5)) AND (NOT z_out_53_40));
  nor_428_cse <= NOT((NOT (fsm_output(1))) OR (NOT (fsm_output(8))) OR (fsm_output(7)));
  mux_445_cse <= MUX_s_1_2_2(or_455_cse, or_629_cse, fsm_output(1));
  or_935_cse <= (NOT (fsm_output(1))) OR (fsm_output(8));
  or_698_nl <= (fsm_output(7)) OR (NOT or_tmp_496);
  mux_464_nl <= MUX_s_1_2_2(or_698_nl, or_tmp_497, fsm_output(1));
  mux_461_nl <= MUX_s_1_2_2(nor_tmp_95, or_tmp_496, fsm_output(7));
  mux_462_nl <= MUX_s_1_2_2(or_tmp_497, mux_461_nl, fsm_output(1));
  mux_459_nl <= MUX_s_1_2_2(mux_tmp_458, or_tmp_496, fsm_output(7));
  or_695_nl <= (fsm_output(7)) OR nor_tmp_95;
  mux_460_nl <= MUX_s_1_2_2(mux_459_nl, or_695_nl, fsm_output(1));
  mux_463_nl <= MUX_s_1_2_2(mux_462_nl, mux_460_nl, fsm_output(0));
  mux_465_nl <= MUX_s_1_2_2(mux_464_nl, mux_463_nl, fsm_output(2));
  attention_sqrt_1_for_i_and_ssc <= input_rsc_en_d_1 AND (mux_465_nl OR CONV_SL_1_1(fsm_output(6
      DOWNTO 4)/=STD_LOGIC_VECTOR'("000")));
  or_705_cse <= (fsm_output(4)) OR (NOT (fsm_output(6)));
  and_893_cse <= CONV_SL_1_1(fsm_output(6 DOWNTO 5)=STD_LOGIC_VECTOR'("11"));
  or_709_cse <= CONV_SL_1_1(fsm_output(6 DOWNTO 5)/=STD_LOGIC_VECTOR'("01"));
  or_381_nl <= CONV_SL_1_1(fsm_output(8 DOWNTO 4)/=STD_LOGIC_VECTOR'("10000"));
  mux_499_nl <= MUX_s_1_2_2(or_1325_cse, or_tmp_523, fsm_output(1));
  or_730_nl <= CONV_SL_1_1(fsm_output(8 DOWNTO 5)/=STD_LOGIC_VECTOR'("1000"));
  mux_500_nl <= MUX_s_1_2_2(mux_499_nl, or_730_nl, fsm_output(4));
  mux_501_nl <= MUX_s_1_2_2(or_381_nl, mux_500_nl, fsm_output(3));
  or_729_nl <= (fsm_output(4)) OR nor_439_cse OR CONV_SL_1_1(fsm_output(7 DOWNTO
      5)/=STD_LOGIC_VECTOR'("000"));
  or_726_nl <= (fsm_output(4)) OR (fsm_output(8)) OR (fsm_output(6)) OR (fsm_output(7));
  mux_497_nl <= MUX_s_1_2_2(or_729_nl, or_726_nl, fsm_output(3));
  or_724_nl <= (NOT (fsm_output(1))) OR (NOT (fsm_output(8))) OR (fsm_output(5))
      OR (fsm_output(6)) OR (fsm_output(7));
  mux_495_nl <= MUX_s_1_2_2(or_1325_cse, or_724_nl, fsm_output(4));
  mux_493_nl <= MUX_s_1_2_2(or_tmp_523, or_722_cse, fsm_output(1));
  or_721_nl <= (NOT (fsm_output(1))) OR (fsm_output(8)) OR nand_160_cse;
  mux_494_nl <= MUX_s_1_2_2(mux_493_nl, or_721_nl, fsm_output(4));
  mux_496_nl <= MUX_s_1_2_2(mux_495_nl, mux_494_nl, fsm_output(3));
  mux_498_nl <= MUX_s_1_2_2(mux_497_nl, mux_496_nl, fsm_output(0));
  mux_502_itm <= MUX_s_1_2_2(mux_501_nl, mux_498_nl, fsm_output(2));
  and_900_nl <= (fsm_output(2)) AND (fsm_output(0)) AND (fsm_output(8)) AND (fsm_output(4))
      AND (NOT (fsm_output(3)));
  nor_442_nl <= NOT((fsm_output(2)) OR (fsm_output(0)) OR (fsm_output(8)) OR (fsm_output(4))
      OR (NOT (fsm_output(3))));
  mux_511_nl <= MUX_s_1_2_2(and_900_nl, nor_442_nl, fsm_output(5));
  and_528_seb <= mux_511_nl AND and_dcpl_101 AND (NOT (fsm_output(6)));
  SF_LOOP_3_and_4_cse <= input_rsc_en_d_1 AND (NOT((((or_1328_cse OR (fsm_output(2)))
      AND (fsm_output(3))) OR CONV_SL_1_1(fsm_output(5 DOWNTO 4)/=STD_LOGIC_VECTOR'("00")))
      AND and_dcpl_152));
  nor_450_cse <= NOT(CONV_SL_1_1(fsm_output(7 DOWNTO 6)/=STD_LOGIC_VECTOR'("00")));
  or_788_cse <= (fsm_output(5)) OR (NOT (fsm_output(8))) OR (fsm_output(7));
  or_811_cse <= CONV_SL_1_1(fsm_output(6 DOWNTO 5)/=STD_LOGIC_VECTOR'("00"));
  GEMM_3D_FLOAT_LOOP_4_1_and_ssc <= input_rsc_en_d_1 AND (and_dcpl_147 OR and_dcpl_447
      OR and_dcpl_136 OR and_dcpl_445 OR GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_itm_mx0c4
      OR and_dcpl_388 OR and_dcpl_337 OR GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_itm_mx0c7
      OR and_dcpl_324 OR GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_itm_mx0c9
      OR GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_itm_mx0c10
      OR and_dcpl_242 OR and_dcpl_162 OR and_dcpl_240 OR and_dcpl_169);
  GEMM_3D_FLOAT_LOOP_4_1_or_13_cse <= GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_itm_mx0c7
      OR GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_itm_mx0c10;
  SF_LOOP_3_acc_43_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(29))
      & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(11 DOWNTO 8)) &
      (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(22)) & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(29),
      1),2)) & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(21 DOWNTO
      20))), 10), 11) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(39))
      & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(28 DOWNTO 25)) &
      '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(11 DOWNTO 8))),
      10), 11) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(35),
      1), 1), 11), 11));
  SF_LOOP_3_acc_45_sdt <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(35))
      & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(17 DOWNTO 12)) &
      STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(36),
      1),3)) & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(39)) & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(24
      DOWNTO 23))), 13), 14) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(39),
      1), 1), 14) + CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_43_nl), 14) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(36),
      1), 1), 14) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(SIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(22))
      & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(28 DOWNTO 25)) &
      (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(7 DOWNTO 6))),8)),
      8), 14) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(29),
      1), 1), 14) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(36))
      & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(24 DOWNTO 23)) &
      STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(19),
      1),2)) & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(22)) & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(15
      DOWNTO 14))), 8), 14) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(22),
      1), 1), 14) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(34
      DOWNTO 33))) & '1' & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(13
      DOWNTO 12)))), 5), 14) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((NOT (z_out_2(21)))
      & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(32 DOWNTO 30)))),
      4), 14) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(18),
      1), 1), 14), 14));
  SF_LOOP_3_acc_86_sdt <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(34
      DOWNTO 30)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(29),
      1),4)) & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(34 DOWNTO
      33))), 12), 13) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(SIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(39))
      & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(29)) & '0'
      & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(24 DOWNTO 22)) &
      (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(32 DOWNTO 30)) & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(35))),12)),
      12), 13), 13));
  LINEAR_FORWARD_NO_MUL_LOOP_2_3_and_ssc <= input_rsc_en_d_1 AND (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_8_sdt_mx0c0
      OR and_dcpl_497 OR LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_8_sdt_mx0c2 OR and_dcpl_556);
  or_1563_tmp <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_8_sdt_mx0c2 OR LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_8_sdt_mx0c0;
  and_19_cse <= RMS_NORM_LOOP_2_2_and_2_tmp AND reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd;
  or_966_cse <= (NOT (fsm_output(5))) OR (NOT (fsm_output(7))) OR (fsm_output(8));
  or_955_cse <= (fsm_output(1)) OR (NOT (fsm_output(7))) OR (fsm_output(8));
  nor_501_cse <= NOT(nor_371_cse OR CONV_SL_1_1(fsm_output(8 DOWNTO 7)/=STD_LOGIC_VECTOR'("01")));
  APPLY_ROTARY_POS_EMB_LOOP_6_or_9_cse <= and_dcpl_581 OR and_dcpl_348 OR and_dcpl_587
      OR and_dcpl_260;
  APPLY_ROTARY_POS_EMB_LOOP_6_or_10_itm <= and_dcpl_584 OR and_dcpl_337 OR and_dcpl_328;
  APPLY_ROTARY_POS_EMB_LOOP_6_and_12_itm <= (NOT (z_out_19(2))) AND and_dcpl_118;
  APPLY_ROTARY_POS_EMB_LOOP_6_and_13_itm <= (z_out_19(2)) AND and_dcpl_118;
  and_615_cse <= (fsm_output(3)) AND or_369_cse;
  APPLY_ROTARY_POS_EMB_LOOP_3_and_ssc <= input_rsc_en_d_1 AND (APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_mx0c0
      OR APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_mx0c1 OR and_dcpl_348 OR and_dcpl_337
      OR and_dcpl_274 OR and_dcpl_263);
  LINEAR_FORWARD_NO_MUL_LOOP_4_1_ki_or_cse <= and_dcpl_337 OR and_dcpl_274;
  and_929_cse <= CONV_SL_1_1(fsm_output(4 DOWNTO 3)=STD_LOGIC_VECTOR'("11"));
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_or_2_m1c <= ((NOT(QUANTIZE_ACTIVATION_LOOP_5_4_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs_mx1
      OR z_out_45_17)) AND and_dcpl_446) OR ((NOT(QUANTIZE_ACTIVATION_LOOP_5_1_4_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs_mx1
      OR z_out_45_17)) AND and_dcpl_241);
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_or_itm <= (z_out_45_17 AND and_dcpl_446)
      OR (z_out_45_17 AND and_dcpl_241);
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_or_1_itm <= ((NOT((NOT QUANTIZE_ACTIVATION_LOOP_5_4_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs_mx1)
      OR z_out_45_17)) AND and_dcpl_446) OR ((NOT((NOT QUANTIZE_ACTIVATION_LOOP_5_1_4_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs_mx1)
      OR z_out_45_17)) AND and_dcpl_241);
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_12_itm <= (NOT CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm)
      AND QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_or_2_m1c;
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_13_itm <= CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm
      AND QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_or_2_m1c;
  or_1009_nl <= nor_414_cse OR CONV_SL_1_1(fsm_output(8 DOWNTO 7)/=STD_LOGIC_VECTOR'("01"));
  or_1004_nl <= (NOT (fsm_output(1))) OR (NOT (fsm_output(8))) OR (fsm_output(7));
  mux_706_nl <= MUX_s_1_2_2(or_955_cse, or_1004_nl, fsm_output(0));
  mux_707_nl <= MUX_s_1_2_2(or_1009_nl, mux_706_nl, fsm_output(5));
  or_1001_nl <= and_864_cse OR (fsm_output(7));
  mux_704_nl <= MUX_s_1_2_2(mux_445_cse, or_1001_nl, fsm_output(0));
  mux_705_nl <= MUX_s_1_2_2(or_454_cse, mux_704_nl, fsm_output(5));
  mux_708_nl <= MUX_s_1_2_2(mux_707_nl, mux_705_nl, fsm_output(2));
  mux_709_nl <= MUX_s_1_2_2(or_966_cse, mux_708_nl, and_929_cse);
  or_999_nl <= (fsm_output(1)) OR (NOT (fsm_output(8))) OR (fsm_output(7));
  mux_702_nl <= MUX_s_1_2_2(or_999_nl, or_629_cse, fsm_output(0));
  or_1000_nl <= CONV_SL_1_1(fsm_output(5 DOWNTO 2)/=STD_LOGIC_VECTOR'("0001")) OR
      mux_702_nl;
  mux_710_nl <= MUX_s_1_2_2(mux_709_nl, or_1000_nl, fsm_output(6));
  LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_and_ssc <= input_rsc_en_d_1 AND (((NOT
      or_dcpl_202) AND mux_710_nl) OR and_dcpl_446 OR and_dcpl_274 OR and_dcpl_241
      OR and_dcpl_118);
  or_1017_cse <= (fsm_output(1)) OR (fsm_output(8)) OR (fsm_output(0)) OR (NOT (fsm_output(7)));
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_or_3_itm <= (z_out_45_17 AND
      and_dcpl_404) OR (z_out_45_17 AND and_dcpl_211);
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_or_4_itm <= ((NOT((NOT QUANTIZE_ACTIVATION_LOOP_5_3_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs_mx1)
      OR z_out_45_17)) AND and_dcpl_404) OR ((NOT((NOT QUANTIZE_ACTIVATION_LOOP_5_1_3_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs_mx1)
      OR z_out_45_17)) AND and_dcpl_211);
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_or_5_itm <= ((NOT(QUANTIZE_ACTIVATION_LOOP_5_3_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs_mx1
      OR z_out_45_17)) AND and_dcpl_404) OR ((NOT(QUANTIZE_ACTIVATION_LOOP_5_1_3_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs_mx1
      OR z_out_45_17)) AND and_dcpl_211);
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_20_itm <= (NOT and_dcpl_25)
      AND and_dcpl_373;
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_21_itm <= and_dcpl_25 AND
      and_dcpl_373;
  GEMM_3D_FLOAT_LOOP_4_and_2_ssc <= input_rsc_en_d_1 AND (and_dcpl_404 OR and_dcpl_373
      OR and_dcpl_274 OR and_dcpl_530 OR and_dcpl_211);
  LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_and_ssc <= input_rsc_en_d_1 AND (NOT(and_dcpl_384
      AND CONV_SL_1_1(fsm_output(2 DOWNTO 1)=STD_LOGIC_VECTOR'("11")) AND and_dcpl_28));
  mux_944_nl <= MUX_s_1_2_2(not_tmp_512, mux_tmp_238, fsm_output(5));
  LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_and_1_rgt <= (NOT((NOT mux_944_nl) AND
      and_dcpl_606)) AND LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_lpi_3_mx0c2;
  mux_716_cse <= MUX_s_1_2_2((NOT (fsm_output(7))), (fsm_output(7)), fsm_output(8));
  LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_and_ssc <= input_rsc_en_d_1 AND ((NOT(or_dcpl_202
      OR and_dcpl_368)) OR LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_mx0c2);
  mux_941_nl <= MUX_s_1_2_2(not_tmp_512, nor_tmp_171, fsm_output(5));
  LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_and_3_rgt <= (NOT((NOT mux_941_nl) AND
      and_dcpl_606)) AND LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_mx0c2;
  nor_525_cse <= NOT(CONV_SL_1_1(fsm_output(5 DOWNTO 4)/=STD_LOGIC_VECTOR'("00")));
  or_1056_nl <= (NOT((fsm_output(0)) OR (fsm_output(4)) OR (fsm_output(5)))) OR CONV_SL_1_1(fsm_output(8
      DOWNTO 7)/=STD_LOGIC_VECTOR'("01"));
  mux_745_nl <= MUX_s_1_2_2(or_1056_nl, or_tmp_849, fsm_output(1));
  or_1050_nl <= nor_525_cse OR CONV_SL_1_1(fsm_output(8 DOWNTO 7)/=STD_LOGIC_VECTOR'("01"));
  mux_743_nl <= MUX_s_1_2_2(or_tmp_849, or_1050_nl, fsm_output(0));
  mux_744_nl <= MUX_s_1_2_2(mux_743_nl, or_454_cse, fsm_output(1));
  mux_746_nl <= MUX_s_1_2_2(mux_745_nl, mux_744_nl, fsm_output(3));
  mux_740_nl <= MUX_s_1_2_2(or_454_cse, mux_716_cse, fsm_output(5));
  mux_741_nl <= MUX_s_1_2_2(mux_740_nl, or_788_cse, fsm_output(4));
  mux_738_nl <= MUX_s_1_2_2(mux_tmp_728, or_tmp_831, and_971_cse);
  mux_736_nl <= MUX_s_1_2_2(or_455_cse, or_454_cse, fsm_output(5));
  or_1046_nl <= (fsm_output(0)) OR (fsm_output(4));
  mux_737_nl <= MUX_s_1_2_2(mux_736_nl, or_788_cse, or_1046_nl);
  mux_739_nl <= MUX_s_1_2_2(mux_738_nl, mux_737_nl, fsm_output(1));
  mux_742_nl <= MUX_s_1_2_2(mux_741_nl, mux_739_nl, fsm_output(3));
  mux_747_nl <= MUX_s_1_2_2(mux_746_nl, mux_742_nl, fsm_output(6));
  or_1045_nl <= (NOT((NOT(nor_414_cse OR (fsm_output(4)))) OR (fsm_output(5)))) OR
      CONV_SL_1_1(fsm_output(8 DOWNTO 7)/=STD_LOGIC_VECTOR'("01"));
  or_1040_nl <= (NOT((fsm_output(1)) OR (NOT (fsm_output(0))) OR (fsm_output(4))
      OR (fsm_output(5)))) OR CONV_SL_1_1(fsm_output(8 DOWNTO 7)/=STD_LOGIC_VECTOR'("01"));
  mux_734_nl <= MUX_s_1_2_2(or_1045_nl, or_1040_nl, fsm_output(3));
  mux_731_nl <= MUX_s_1_2_2(mux_716_cse, or_788_cse, fsm_output(4));
  mux_729_nl <= MUX_s_1_2_2(and_849_cse, or_454_cse, fsm_output(5));
  mux_730_nl <= MUX_s_1_2_2(mux_729_nl, mux_tmp_728, fsm_output(4));
  mux_732_nl <= MUX_s_1_2_2(mux_731_nl, mux_730_nl, fsm_output(1));
  mux_727_nl <= MUX_s_1_2_2(or_788_cse, or_tmp_831, fsm_output(4));
  mux_733_nl <= MUX_s_1_2_2(mux_732_nl, mux_727_nl, fsm_output(3));
  mux_735_nl <= MUX_s_1_2_2(mux_734_nl, mux_733_nl, fsm_output(6));
  mux_748_nl <= MUX_s_1_2_2(mux_747_nl, mux_735_nl, fsm_output(2));
  APPLY_ROTARY_POS_EMB_LOOP_1_i_and_5_ssc <= input_rsc_en_d_1 AND ((NOT(or_dcpl_205
      OR (NOT (z_out_22(4))) OR (NOT((z_out_36(4)) AND LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1))))
      OR APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_mx0c0 OR APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_mx0c3
      OR and_dcpl_587 OR and_dcpl_450 OR and_dcpl_260 OR and_dcpl_530 OR and_dcpl_118)
      AND mux_748_nl;
  or_1085_nl <= (fsm_output(1)) OR (NOT (fsm_output(6)));
  mux_769_nl <= MUX_s_1_2_2(nand_170_cse, or_1085_nl, fsm_output(0));
  nor_543_nl <= NOT(CONV_SL_1_1(fsm_output(5 DOWNTO 2)/=STD_LOGIC_VECTOR'("0001"))
      OR mux_769_nl);
  nor_540_nl <= NOT((fsm_output(0)) OR (fsm_output(1)) OR (fsm_output(6)));
  mux_765_nl <= MUX_s_1_2_2((fsm_output(6)), nor_540_nl, fsm_output(4));
  mux_764_nl <= MUX_s_1_2_2((fsm_output(6)), (NOT or_tmp_874), fsm_output(4));
  mux_766_nl <= MUX_s_1_2_2(mux_765_nl, mux_764_nl, fsm_output(2));
  and_938_nl <= nand_175_cse AND (fsm_output(6));
  mux_762_nl <= MUX_s_1_2_2(or_tmp_874, and_938_nl, fsm_output(4));
  mux_761_nl <= MUX_s_1_2_2((fsm_output(6)), (NOT (fsm_output(6))), fsm_output(1));
  nor_541_nl <= NOT((fsm_output(4)) OR mux_761_nl);
  mux_763_nl <= MUX_s_1_2_2(mux_762_nl, nor_541_nl, fsm_output(2));
  mux_767_nl <= MUX_s_1_2_2(mux_766_nl, (NOT mux_763_nl), fsm_output(3));
  nand_226_nl <= NOT((fsm_output(4)) AND (fsm_output(6)));
  nand_227_nl <= NOT(((fsm_output(2)) OR (fsm_output(4)) OR (fsm_output(1))) AND
      (fsm_output(6)));
  mux_760_nl <= MUX_s_1_2_2(nand_226_nl, nand_227_nl, fsm_output(3));
  mux_768_nl <= MUX_s_1_2_2(mux_767_nl, mux_760_nl, fsm_output(5));
  mux_770_nl <= MUX_s_1_2_2(nor_543_nl, mux_768_nl, fsm_output(7));
  CACHE_UPDATE_LOOP_2_1_j_and_ssc <= input_rsc_en_d_1 AND ((NOT(or_dcpl_202 OR (mux_770_nl
      AND (NOT (fsm_output(8)))))) OR CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c0 OR and_dcpl_348
      OR CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c4 OR CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c5
      OR CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c6 OR CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c7);
  nor_552_cse <= NOT((fsm_output(5)) OR (fsm_output(7)));
  and_944_cse <= CONV_SL_1_1(fsm_output(4 DOWNTO 2)=STD_LOGIC_VECTOR'("111"));
  mux_797_cse <= MUX_s_1_2_2((fsm_output(1)), (NOT (fsm_output(1))), fsm_output(0));
  mux_799_nl <= MUX_s_1_2_2(and_929_cse, mux_tmp_260, nor_83_cse);
  mux_800_nl <= MUX_s_1_2_2(nor_tmp_88, mux_799_nl, fsm_output(2));
  mux_801_nl <= MUX_s_1_2_2(mux_800_nl, (NOT or_tmp_907), fsm_output(6));
  nand_235_nl <= NOT((fsm_output(6)) AND (NOT(CONV_SL_1_1(fsm_output(4 DOWNTO 1)=STD_LOGIC_VECTOR'("0111")))));
  mux_802_nl <= MUX_s_1_2_2(mux_801_nl, nand_235_nl, fsm_output(5));
  APPLY_ROTARY_POS_EMB_LOOP_3_and_1_ssc <= input_rsc_en_d_1 AND (NOT(mux_802_nl AND
      and_dcpl_19));
  GEMM_3D_FLOAT_LOOP_4_acc_34_sdt <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0
      & STD_LOGIC_VECTOR'( "00")), 5), 6) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(2
      DOWNTO 1)), 2), 6) + UNSIGNED'( "000001"), 6));
  nand_250_nl <= NOT((fsm_output(1)) AND mux_tmp_260);
  nand_251_nl <= NOT(((fsm_output(1)) OR (fsm_output(4))) AND (fsm_output(3)));
  mux_804_nl <= MUX_s_1_2_2(nand_250_nl, nand_251_nl, fsm_output(0));
  mux_805_nl <= MUX_s_1_2_2(mux_804_nl, or_tmp_911, fsm_output(2));
  nor_559_nl <= NOT((fsm_output(6)) OR mux_805_nl);
  or_258_nl <= (NOT (fsm_output(1))) OR (fsm_output(3)) OR (NOT (fsm_output(4)));
  mux_803_nl <= MUX_s_1_2_2(or_tmp_188, or_258_nl, fsm_output(0));
  and_955_nl <= (fsm_output(6)) AND (fsm_output(2)) AND (NOT mux_803_nl);
  mux_806_nl <= MUX_s_1_2_2(nor_559_nl, and_955_nl, fsm_output(5));
  and_667_ssc <= mux_806_nl AND and_dcpl_19;
  or_1124_nl <= (fsm_output(6)) OR (fsm_output(4)) OR (NOT (fsm_output(3)));
  mux_807_nl <= MUX_s_1_2_2(or_1124_nl, or_tmp_766, fsm_output(5));
  and_668_ssc <= (NOT mux_807_nl) AND and_dcpl_583;
  LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_and_1_ssc <= input_rsc_en_d_1 AND (NOT
      and_dcpl_395);
  mux_943_nl <= MUX_s_1_2_2(not_tmp_512, mux_tmp_808, fsm_output(5));
  LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_and_5_rgt <= (NOT((NOT mux_943_nl) AND
      and_dcpl_606)) AND LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_dfm_mx1c2;
  CACHE_UPDATE_LOOP_3_qif_CACHE_UPDATE_LOOP_3_qif_nor_ssc <= NOT(or_dcpl_210 OR LINEAR_FORWARD_NO_MUL_LOOP_4_1_ki_or_cse);
  CACHE_UPDATE_LOOP_3_qif_and_2_ssc <= or_dcpl_210 AND (NOT LINEAR_FORWARD_NO_MUL_LOOP_4_1_ki_or_cse);
  or_1136_nl <= (NOT (fsm_output(2))) OR (fsm_output(0)) OR (NOT (fsm_output(1)))
      OR (fsm_output(7)) OR (fsm_output(4)) OR (fsm_output(3));
  mux_813_nl <= MUX_s_1_2_2(not_tmp_504, or_1136_nl, fsm_output(6));
  nand_49_nl <= NOT((NOT(CONV_SL_1_1(fsm_output(7 DOWNTO 6)/=STD_LOGIC_VECTOR'("10"))))
      AND or_dcpl_109);
  mux_814_nl <= MUX_s_1_2_2(mux_813_nl, nand_49_nl, fsm_output(5));
  CACHE_UPDATE_LOOP_3_qif_and_ssc <= input_rsc_en_d_1 AND (mux_814_nl OR (fsm_output(8)));
  GEMM_3D_FLOAT_LOOP_4_acc_242_sdt <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(z_out_23(3),
      1), 1), 4) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0),
      3), 4), 4));
  mux_942_nl <= MUX_s_1_2_2(not_tmp_512, mux_tmp_848, fsm_output(5));
  and_704_ssc <= (NOT mux_942_nl) AND and_dcpl_606;
  mux_839_nl <= MUX_s_1_2_2(or_tmp_76, or_tmp_207, fsm_output(2));
  nor_566_nl <= NOT((fsm_output(6)) OR mux_839_nl);
  nor_567_nl <= NOT((NOT (fsm_output(6))) OR (fsm_output(2)) OR or_dcpl_109);
  mux_840_nl <= MUX_s_1_2_2(nor_566_nl, nor_567_nl, fsm_output(5));
  and_677_itm <= mux_840_nl AND and_dcpl_19 AND nor_414_cse;
  mux_845_nl <= MUX_s_1_2_2(or_tmp_188, or_tmp_191, fsm_output(0));
  mux_843_nl <= MUX_s_1_2_2(or_tmp_76, or_tmp_207, fsm_output(1));
  mux_844_nl <= MUX_s_1_2_2(mux_843_nl, or_tmp_247, fsm_output(0));
  mux_846_nl <= MUX_s_1_2_2(mux_845_nl, mux_844_nl, fsm_output(2));
  nor_568_nl <= NOT((fsm_output(6)) OR mux_846_nl);
  nand_51_nl <= NOT((fsm_output(1)) AND (NOT mux_tmp_260));
  mux_841_nl <= MUX_s_1_2_2(nand_51_nl, or_tmp_188, fsm_output(0));
  mux_842_nl <= MUX_s_1_2_2(or_tmp_76, mux_841_nl, fsm_output(2));
  and_958_nl <= (fsm_output(6)) AND (NOT mux_842_nl);
  mux_847_nl <= MUX_s_1_2_2(nor_568_nl, and_958_nl, fsm_output(5));
  and_678_itm <= mux_847_nl AND and_dcpl_19;
  mux_849_nl <= MUX_s_1_2_2(or_dcpl_109, mux_tmp_848, fsm_output(5));
  and_679_itm <= (NOT mux_849_nl) AND and_dcpl_606;
  or_1566_tmp <= and_dcpl_395 OR and_678_itm;
  or_1161_nl <= (NOT (fsm_output(1))) OR (fsm_output(5)) OR (fsm_output(6));
  mux_837_nl <= MUX_s_1_2_2(or_tmp_943, or_1161_nl, fsm_output(4));
  or_1162_nl <= (fsm_output(3)) OR mux_837_nl;
  mux_834_nl <= MUX_s_1_2_2(nand_158_cse, or_811_cse, fsm_output(1));
  mux_835_nl <= MUX_s_1_2_2(or_tmp_943, mux_834_nl, fsm_output(2));
  nand_50_nl <= NOT((fsm_output(4)) AND (NOT mux_835_nl));
  or_1158_nl <= CONV_SL_1_1(fsm_output(2 DOWNTO 1)/=STD_LOGIC_VECTOR'("00")) OR nand_158_cse;
  mux_833_nl <= MUX_s_1_2_2(or_tmp_943, or_1158_nl, fsm_output(4));
  mux_836_nl <= MUX_s_1_2_2(nand_50_nl, mux_833_nl, fsm_output(3));
  mux_838_nl <= MUX_s_1_2_2(or_1162_nl, mux_836_nl, fsm_output(0));
  nand_245_itm <= NOT((NOT mux_838_nl) AND and_dcpl_19);
  APPLY_ROTARY_POS_EMB_LOOP_6_k_and_7_cse <= (NOT and_704_ssc) AND and_679_itm;
  APPLY_ROTARY_POS_EMB_LOOP_6_k_and_8_cse <= and_704_ssc AND and_679_itm;
  or_1176_nl <= (NOT (fsm_output(0))) OR (fsm_output(1)) OR (fsm_output(4)) OR (fsm_output(3));
  or_1175_nl <= (NOT (fsm_output(1))) OR (fsm_output(4));
  or_1174_nl <= (NOT (fsm_output(1))) OR (fsm_output(4)) OR (fsm_output(3));
  mux_859_nl <= MUX_s_1_2_2(or_1175_nl, or_1174_nl, fsm_output(0));
  mux_860_nl <= MUX_s_1_2_2(or_1176_nl, mux_859_nl, fsm_output(2));
  nor_571_nl <= NOT((fsm_output(6)) OR mux_860_nl);
  and_961_nl <= (fsm_output(6)) AND (NOT mux_tmp_277);
  mux_861_nl <= MUX_s_1_2_2(nor_571_nl, and_961_nl, fsm_output(5));
  and_682_itm <= mux_861_nl AND and_dcpl_19;
  and_683_itm <= and_dcpl_257 AND and_dcpl_194;
  and_684_itm <= and_dcpl_257 AND and_dcpl_185;
  mux_855_nl <= MUX_s_1_2_2(or_616_cse, or_tmp_76, fsm_output(1));
  mux_856_nl <= MUX_s_1_2_2(mux_855_nl, or_tmp_314, fsm_output(0));
  mux_854_nl <= MUX_s_1_2_2(or_tmp_191, or_tmp_316, fsm_output(0));
  mux_857_nl <= MUX_s_1_2_2(mux_856_nl, mux_854_nl, fsm_output(2));
  nor_570_nl <= NOT((fsm_output(6)) OR mux_857_nl);
  and_960_nl <= (fsm_output(6)) AND (fsm_output(2)) AND (NOT mux_tmp_278);
  mux_858_nl <= MUX_s_1_2_2(nor_570_nl, and_960_nl, fsm_output(5));
  nand_246_seb <= NOT(mux_858_nl AND and_dcpl_19);
  mux_867_nl <= MUX_s_1_2_2((NOT or_tmp_646), nor_tmp_145, fsm_output(2));
  and_688_ssc <= mux_867_nl AND and_dcpl_132 AND and_882_cse AND and_dcpl;
  LINEAR_FORWARD_NO_MUL_LOOP_2_and_cse <= input_rsc_en_d_1 AND (NOT(or_tmp_207 OR
      (fsm_output(8)) OR or_607_cse OR or_113_cse OR CONV_SL_1_1(fsm_output(6 DOWNTO
      5)/=STD_LOGIC_VECTOR'("10"))));
  LINEAR_FORWARD_NO_MUL_LOOP_2_2_and_ssc <= input_rsc_en_d_1 AND (and_dcpl_497 OR
      LINEAR_FORWARD_NO_MUL_LOOP_2_2_acc_13_psp_mx0c1);
  or_1217_cse <= (fsm_output(8)) OR (NOT (fsm_output(6)));
  LINEAR_FORWARD_NO_MUL_LOOP_2_1_and_ssc <= input_rsc_en_d_1 AND (and_dcpl_497 OR
      LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_13_sdt_mx0c1 OR and_dcpl_556);
  or_1283_cse <= (fsm_output(2)) OR (NOT (fsm_output(4)));
  and_971_cse <= (fsm_output(0)) AND (fsm_output(4));
  SF_LOOP_3_acc_87_sdt <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(SIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(22))
      & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(35),
      1),2)) & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(21 DOWNTO
      20)) & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(7 DOWNTO
      6)) & (z_out_2(20)) & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(16),
      1),2))),14)), 14), 15) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(19
      DOWNTO 18)) & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(29))
      & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(13 DOWNTO 12)) &
      STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(17),
      1),4)) & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(21
      DOWNTO 20)) & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(19),
      1),2))), 14), 15), 15));
  LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_14_sdt <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED(LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_13_sdt_mx0w0(41
      DOWNTO 4)), 38), 41) + CONV_UNSIGNED(CONV_SIGNED(SIGNED(QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva),
      40), 41), 41));
  LINEAR_FORWARD_NO_MUL_LOOP_2_3_and_1_ssc <= input_rsc_en_d_1 AND (and_dcpl_659
      OR LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_12_sdt_mx0c1 OR and_dcpl_661 OR and_dcpl_556);
  LINEAR_FORWARD_NO_MUL_LOOP_2_3_and_2_cse <= (NOT and_dcpl_655) AND and_dcpl_659;
  LINEAR_FORWARD_NO_MUL_LOOP_2_3_or_7_cse <= and_dcpl_661 OR and_dcpl_556;
  or_1358_nl <= (fsm_output(6)) OR (NOT (fsm_output(4)));
  mux_967_cse <= MUX_s_1_2_2(or_705_cse, or_1358_nl, fsm_output(5));
  nand_242_cse <= NOT(CONV_SL_1_1(fsm_output(6 DOWNTO 4)=STD_LOGIC_VECTOR'("111")));
  nor_581_cse <= NOT(CONV_SL_1_1(fsm_output(4 DOWNTO 3)/=STD_LOGIC_VECTOR'("00")));
  GEMM_3D_FLOAT_LOOP_4_and_5_cse <= input_rsc_en_d_1 AND (NOT(or_dcpl_110 OR or_553_cse
      OR or_113_cse OR or_811_cse));
  GEMM_3D_FLOAT_LOOP_4_1_and_4_cse <= input_rsc_en_d_1 AND (and_dcpl_274 OR and_dcpl_263);
  QUANTIZE_ACTIVATION_LOOP_5_4_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs_mx1
      <= MUX_s_1_2_2(z_out_46_17, QUANTIZE_ACTIVATION_LOOP_5_4_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs,
      z_out_45_17);
  QUANTIZE_ACTIVATION_LOOP_5_2_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs_mx1
      <= MUX_s_1_2_2(z_out_44_17, QUANTIZE_ACTIVATION_LOOP_5_2_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs,
      QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_cse_17);
  QUANTIZE_ACTIVATION_LOOP_5_3_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs_mx1
      <= MUX_s_1_2_2(z_out_46_17, QUANTIZE_ACTIVATION_LOOP_5_3_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs,
      z_out_45_17);
  QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs_mx1
      <= MUX_s_1_2_2(z_out_44_17, QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs,
      QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_cse_17);
  QUANTIZE_ACTIVATION_LOOP_5_1_4_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs_mx1
      <= MUX_s_1_2_2(z_out_46_17, QUANTIZE_ACTIVATION_LOOP_5_1_4_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs,
      z_out_45_17);
  QUANTIZE_ACTIVATION_LOOP_5_1_2_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs_mx1
      <= MUX_s_1_2_2(z_out_44_17, QUANTIZE_ACTIVATION_LOOP_5_1_2_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs,
      QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_cse_17);
  QUANTIZE_ACTIVATION_LOOP_5_1_3_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs_mx1
      <= MUX_s_1_2_2(z_out_46_17, QUANTIZE_ACTIVATION_LOOP_5_1_3_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs,
      z_out_45_17);
  QUANTIZE_ACTIVATION_LOOP_5_1_1_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs_mx1
      <= MUX_s_1_2_2(z_out_44_17, QUANTIZE_ACTIVATION_LOOP_5_1_1_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs,
      QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_cse_17);
  LINEAR_FORWARD_NO_MUL_LOOP_5_and_1_tmp <= (z_out_21(2)) AND (z_out_20(2)) AND (z_out_19(2));
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_acc_15_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd
      & reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_1 & reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_2)
      + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(attention_sqrt_1_for_i_4_0_sva_2_0(2
      DOWNTO 1)), 2), 6), 6));
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_acc_17_sdt_mx0w7 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(z_out_24
      & (reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_1(0)) & reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_2
      & '0'), 8), 9) + CONV_UNSIGNED(UNSIGNED(TRANSPOSE_LAST_TWO_DIMS_LOOP_3_acc_15_nl),
      9), 9));
  for_for_for_for_nor_tmp <= NOT(z_out_30_2 OR (z_out_31(2)));
  LINEAR_FORWARD_NO_MUL_LOOP_2_LINEAR_FORWARD_NO_MUL_LOOP_2_nor_tmp <= NOT((z_out_31(2))
      OR (z_out_17(2)) OR z_out_30_2);
  operator_40_24_true_AC_TRN_AC_WRAP_acc_56_itm <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(23),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(24)),
      1), 1), 2) + UNSIGNED'( "01"), 2));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_66_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(19),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(20)),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(26)),
      1), 1), 2), 2));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_80_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(21),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(22)),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(25),
      1), 1), 2), 2));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_82_itm <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_66_nl),
      3) + CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_80_nl),
      3) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(33),
      1), 1), 3), 3));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_74_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(11),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(12)),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(30)),
      1), 1), 2), 2));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_64_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(13),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(14)),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(29),
      1), 1), 2), 2));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_76_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_74_nl),
      3) + CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_64_nl),
      3) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(35),
      1), 1), 3), 3));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_86_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(z_out_24),
      4), 6) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(3)),
      1), 1), 6) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(z_out_18), 4), 6) + CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_76_nl),
      6) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(2)),
      1), 1), 6), 6));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_psp_sva_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_86_nl),
      6) + UNSIGNED(STD_LOGIC_VECTOR'( "10111") & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(7))),
      6));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_92_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED'(
      '1' & (operator_40_24_true_AC_TRN_AC_WRAP_acc_psp_sva_1(0))) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT
      (operator_40_24_true_AC_TRN_AC_WRAP_acc_psp_sva_1(1)), 1), 1), 2) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_psp_sva_1(2),
      1), 1), 2), 2));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_3_psp_sva_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_92_nl),
      3) + CONV_UNSIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_psp_sva_1(5
      DOWNTO 4)), 2), 3) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (operator_40_24_true_AC_TRN_AC_WRAP_acc_psp_sva_1(3)),
      1), 1), 3), 3));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_4_psp_sva_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED'(
      '1' & (operator_40_24_true_AC_TRN_AC_WRAP_acc_3_psp_sva_1(0))) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT
      (operator_40_24_true_AC_TRN_AC_WRAP_acc_3_psp_sva_1(1)), 1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT
      (operator_40_24_true_AC_TRN_AC_WRAP_acc_3_psp_sva_1(2)), 1), 1), 2), 2));
  attention_abs_qif_acc_pmx_lpi_1_dfm_mx0_30_1 <= MUX_v_30_2_2((z_out_9(30 DOWNTO
      1)), (z_out_57(30 DOWNTO 1)), z_out_9(31));
  attention_sqrt_for_i_4_0_sva_1_mx0w0 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(attention_sqrt_1_for_i_4_0_sva_4_3
      & attention_sqrt_1_for_i_4_0_sva_2_0) + SIGNED'( "00001"), 5));
  nor_439_cse <= NOT((fsm_output(1)) OR (fsm_output(8)));
  or_722_cse <= CONV_SL_1_1(fsm_output(8 DOWNTO 5)/=STD_LOGIC_VECTOR'("0000"));
  operator_40_24_true_AC_TRN_AC_WRAP_or_mx0w6 <= (operator_40_24_true_AC_TRN_AC_WRAP_acc_4_psp_sva_1(0))
      OR CONV_SL_1_1(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(6
      DOWNTO 0)/=STD_LOGIC_VECTOR'("0000000"));
  attention_max_attn_fixed_t_attention_max_attn_fixed_t_and_mut_mx0w2_39 <= QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_39
      AND z_out_53_40;
  attention_max_attn_fixed_t_attention_max_attn_fixed_t_and_mut_mx0w2_38_15 <= MUX_v_24_2_2(STD_LOGIC_VECTOR'("000000000000000000000000"),
      QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_38_15, z_out_53_40);
  attention_max_attn_fixed_t_attention_max_attn_fixed_t_and_mut_mx0w2_14_0 <= MUX_v_15_2_2(STD_LOGIC_VECTOR'("000000000000000"),
      QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_14_0, z_out_53_40);
  GEMM_3D_FLOAT_LOOP_4_acc_212_mx0w8 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(z_out_11(55
      DOWNTO 16)) + UNSIGNED(reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd
      & reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1
      & reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_2),
      40));
  RMS_NORM_LOOP_2_2_mul_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED'( SIGNED(attention_5_1_384_384_8_48_attn_output_2D_rsci_data_out_d(39
      DOWNTO 0)) * SIGNED(LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_8_sdt_52 & LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_8_sdt_51_0)),
      72));
  RMS_NORM_LOOP_2_2_mul_itm_71_32_1 <= RMS_NORM_LOOP_2_2_mul_nl(71 DOWNTO 32);
  attention_max_attn_fixed_t_1_conc_psp_mx0w12_39 <= QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_39
      AND z_out_53_40;
  attention_max_attn_fixed_t_1_conc_psp_mx0w12_38_15 <= MUX_v_24_2_2(STD_LOGIC_VECTOR'("000000000000000000000000"),
      QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_38_15, z_out_53_40);
  attention_max_attn_fixed_t_1_conc_psp_mx0w12_14_0 <= MUX_v_15_2_2(STD_LOGIC_VECTOR'("000000000000000"),
      QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_14_0, z_out_53_40);
  RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_nand_tmp <= NOT(SF_LOOP_3_acc_5_psp_sva_9 AND CONV_SL_1_1(SF_LOOP_3_acc_5_psp_sva_8_0=STD_LOGIC_VECTOR'("111111111")));
  LINEAR_FORWARD_NO_MUL_LOOP_2_acc_6_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(NOT
      QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva) + CONV_SIGNED(CONV_SIGNED(SIGNED(QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(39
      DOWNTO 4)), 36), 40), 40));
  LINEAR_FORWARD_NO_MUL_LOOP_2_acc_10_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva
      & STD_LOGIC_VECTOR'( "010000000")) + CONV_SIGNED(CONV_SIGNED(SIGNED((NOT QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva)
      & STD_LOGIC_VECTOR'( "0100000")), 47), 49) + CONV_SIGNED(CONV_SIGNED(SIGNED((NOT
      QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva) & STD_LOGIC_VECTOR'( "01000")), 45),
      49) + CONV_SIGNED(CONV_SIGNED(SIGNED((NOT QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva)
      & STD_LOGIC_VECTOR'( "001")), 43), 49) + CONV_SIGNED(SIGNED(LINEAR_FORWARD_NO_MUL_LOOP_2_acc_6_nl),
      49), 49));
  LINEAR_FORWARD_NO_MUL_LOOP_2_acc_11_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED((NOT
      QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva) & STD_LOGIC_VECTOR'( "00000000000"))
      + CONV_SIGNED(SIGNED(LINEAR_FORWARD_NO_MUL_LOOP_2_acc_10_nl), 51), 51));
  LINEAR_FORWARD_NO_MUL_LOOP_2_acc_12_sdt_mx0w1 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva
      & STD_LOGIC_VECTOR'( "0100000000000")) + CONV_SIGNED(SIGNED(LINEAR_FORWARD_NO_MUL_LOOP_2_acc_11_nl),
      53), 53));
  lfst_exit_LINEAR_FORWARD_NO_MUL_LOOP_4_sva_dfm_mx1w0 <= LINEAR_FORWARD_NO_MUL_LOOP_2_LINEAR_FORWARD_NO_MUL_LOOP_2_nor_tmp
      OR (NOT exit_LINEAR_FORWARD_NO_MUL_LOOP_4_lpi_3_dfm_2);
  lfst_exit_LINEAR_FORWARD_NO_MUL_LOOP_4_3_sva_dfm_mx2w0 <= NOT((z_out_31(2)) AND
      (z_out_22(4)) AND (z_out_19(2)));
  RMS_NORM_LOOP_2_and_4_ssc_1 <= (input_rsci_data_out_d(39)) AND (NOT LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1);
  RMS_NORM_LOOP_2_2_and_1_ssc_1 <= (NOT QUANTIZE_ACTIVATION_LOOP_2_1_slc_40_1_svs)
      AND LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1;
  RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_nor_ssc_1 <= NOT((input_rsci_data_out_d(39)) OR
      LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1);
  RMS_NORM_LOOP_2_2_and_5_ssc_1 <= (NOT reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd)
      AND RMS_NORM_LOOP_2_2_and_2_tmp;
  operator_40_24_true_AC_TRN_AC_WRAP_acc_88_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (operator_40_24_true_AC_TRN_AC_WRAP_acc_psp_sva_1(3)) & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(8))),
      2), 3) + CONV_SIGNED(CONV_SIGNED(SIGNED'( '1' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(10))),
      2), 3) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(11),
      1), 1), 3), 3));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_25_mx0w12 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_88_nl),
      4) + CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_psp_sva_1(5
      DOWNTO 4)), 2), 4) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_psp_sva_1(1),
      1), 1), 4), 4));
  GEMM_3D_FLOAT_LOOP_4_1_acc_33_sdt_mx0w5 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(STD_LOGIC_VECTOR'(
      "10") & CACHE_UPDATE_LOOP_3_k_5_0_sva_5_4), 4), 5) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0
      & '0'), 4), 5) + UNSIGNED'( "00001"), 5));
  attention_round_qr_39_16_lpi_3_dfm_mx0w0 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(23
      DOWNTO 1)), 23), 24) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(0),
      1), 1), 24), 24));
  and_629_ssc <= QUANTIZE_ACTIVATION_LOOP_2_1_slc_40_1_svs AND (NOT exitL_exit_LINEAR_FORWARD_NO_MUL_LOOP_5_3_lpi_2);
  LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_lpi_3_mx2_7_4 <= MUX_v_4_2_2((LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_read_rom_o_weights_rom_map_1_itm(7
      DOWNTO 4)), reg_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_ftd, and_629_ssc);
  LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_lpi_3_mx2_3_2 <= MUX_v_2_2_2((LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_read_rom_o_weights_rom_map_1_itm(3
      DOWNTO 2)), reg_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_ftd_1, and_629_ssc);
  LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_lpi_3_mx2_1_0 <= MUX_v_2_2_2((LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_read_rom_o_weights_rom_map_1_itm(1
      DOWNTO 0)), reg_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_ftd_2, and_629_ssc);
  attention_round_qelse_mux_2_cse <= MUX_v_17_2_2((z_out_8(23 DOWNTO 7)), (z_out_50(23
      DOWNTO 7)), z_out_53_40);
  GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_mx0w2 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED'(
      "01101111") + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0
      & STD_LOGIC_VECTOR'( "00") & reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd), 7), 8),
      8));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_90_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED((operator_40_24_true_AC_TRN_AC_WRAP_acc_psp_sva_1(5
      DOWNTO 4)) & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(3),
      1),2))), 4), 6) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(14))
      & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(11
      DOWNTO 9))), 4), 6) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_psp_sva_1(2),
      1), 1), 6), 6));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_28_mx0w3 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_90_nl),
      8) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(14))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(12))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(2),
      1),2))), 6), 8) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_3_psp_sva_1(1),
      1), 1), 8), 8));
  LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_lpi_3_mx1_7 <= MUX_s_1_2_2((LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_read_rom_q_weights_rom_map_1_sdt(7)),
      LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_lpi_3_7, and_dcpl_25);
  LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_lpi_3_mx1_6_0 <= MUX_v_7_2_2((LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_read_rom_q_weights_rom_map_1_sdt(6
      DOWNTO 0)), LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_lpi_3_6_0, and_dcpl_25);
  GEMM_3D_FLOAT_LOOP_4_1_mul_sdt_1_sva_mx0w5 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED('1'
      & (NOT GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0)), 4), 5) + UNSIGNED(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0
      & STD_LOGIC_VECTOR'( "01")), 5));
  APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva_2 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd
      & reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd_1 & '0'), 4), 5) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd
      & reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd_1), 3), 5) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_sqrt_1_for_i_4_0_sva_4_3(1),
      1), 1), 5), 5));
  GEMM_3D_FLOAT_LOOP_4_1_acc_36_sdt_mx0w5 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(z_out_15
      & (CACHE_UPDATE_LOOP_3_k_5_0_sva_5_4(0))), 5), 6) + UNSIGNED'( "001111"), 6));
  APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_3 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd
      & reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_1 & reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_2)
      + SIGNED'( "000001"), 6));
  LINEAR_FORWARD_NO_MUL_LOOP_5_1_LINEAR_FORWARD_NO_MUL_LOOP_5_1_and_1_cse_1 <= APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_1
      AND (NOT APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_0);
  LINEAR_FORWARD_NO_MUL_LOOP_5_l_2_0_lpi_3_dfm_1_0_1 <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"),
      APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0, LINEAR_FORWARD_NO_MUL_LOOP_5_exs_5_0);
  exit_LINEAR_FORWARD_NO_MUL_LOOP_4_lpi_3_dfm_2 <= (z_out_36(4)) AND (z_out_22(4))
      AND (z_out_37(4)) AND LINEAR_FORWARD_NO_MUL_LOOP_5_and_1_tmp;
  LINEAR_FORWARD_NO_MUL_LOOP_5_2_l_2_0_lpi_3_dfm_1_0_1 <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"),
      APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva_1_0, LINEAR_FORWARD_NO_MUL_LOOP_5_exs_5_0);
  LINEAR_FORWARD_NO_MUL_LOOP_5_1_l_2_0_lpi_3_dfm_1_0_1 <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"),
      LINEAR_FORWARD_NO_MUL_LOOP_5_1_l_2_0_lpi_3_1_0, LINEAR_FORWARD_NO_MUL_LOOP_5_exs_5_0);
  LINEAR_FORWARD_NO_MUL_LOOP_5_exs_5_0 <= NOT(LINEAR_FORWARD_NO_MUL_LOOP_5_and_1_mdf_sva
      OR (NOT QUANTIZE_ACTIVATION_LOOP_2_1_slc_40_1_svs));
  GEMM_3D_FLOAT_LOOP_4_1_acc_28_cse_sva_mx0w3 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED('1'
      & (NOT (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(2 DOWNTO 1)))), 3), 4) + UNSIGNED(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0
      & '1'), 4));
  GEMM_3D_FLOAT_LOOP_4_acc_183_sdt_mx0w1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0
      & STD_LOGIC_VECTOR'( "000")), 6), 7) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(STD_LOGIC_VECTOR'(
      "111") & (reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd(1))), 4), 7) + UNSIGNED'( "0000001"),
      7));
  GEMM_3D_FLOAT_LOOP_4_acc_185_sdt_mx0w2 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED'(
      "0111111") + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd),
      2), 7), 7));
  CACHE_UPDATE_LOOP_3_k_5_0_sva_1_mx0w8 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(CACHE_UPDATE_LOOP_3_k_5_0_sva_5_4
      & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1)
      + SIGNED'( "000001"), 6));
  LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_5_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva
      & STD_LOGIC_VECTOR'( "01")) + CONV_SIGNED(CONV_SIGNED(SIGNED(NOT QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva),
      40), 42), 42));
  LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_7_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED((NOT
      QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva) & STD_LOGIC_VECTOR'( "0000000")) +
      CONV_SIGNED(CONV_SIGNED(SIGNED(QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva & STD_LOGIC_VECTOR'(
      "0000")), 44), 47) + CONV_SIGNED(SIGNED(LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_5_nl),
      47), 47));
  LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_11_sdt_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED((NOT
      QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva) & STD_LOGIC_VECTOR'( "0010000000000000")),
      56), 57) + CONV_SIGNED(CONV_SIGNED(SIGNED((NOT QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva)
      & STD_LOGIC_VECTOR'( "0100000000000")), 53), 57) + CONV_SIGNED(CONV_SIGNED(SIGNED((NOT
      QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva) & STD_LOGIC_VECTOR'( "01000000000")),
      51), 57) + CONV_SIGNED(CONV_SIGNED(SIGNED((NOT QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva)
      & STD_LOGIC_VECTOR'( "010000000")), 49), 57) + CONV_SIGNED(SIGNED(LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_7_nl),
      57), 57));
  LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_13_sdt_mx0w0 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva
      & STD_LOGIC_VECTOR'( "01")) + CONV_UNSIGNED(CONV_SIGNED(SIGNED(LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_11_sdt_1(56
      DOWNTO 16)), 41), 42), 42));
  LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_11_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(NOT
      QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva) + CONV_SIGNED(CONV_SIGNED(SIGNED(z_out_41_52_8(44
      DOWNTO 8)), 37), 40), 40));
  CACHE_UPDATE_LOOP_3_qif_acc_4_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED('1'
      & (NOT reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd) & (NOT reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd_1)),
      4), 5) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(attention_sqrt_1_for_i_4_0_sva_2_0
      & '1'), 4), 5), 5));
  CACHE_UPDATE_LOOP_3_qif_acc_5_sdt_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SIGNED(CACHE_UPDATE_LOOP_3_qif_acc_4_nl),
      6) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(z_out_27), 3), 6), 6));
  CACHE_UPDATE_LOOP_3_1_qif_acc_4_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED('1'
      & (NOT GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0)), 4), 5) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd
      & reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1 & '1'), 4), 5), 5));
  CACHE_UPDATE_LOOP_3_1_qif_acc_5_sdt_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SIGNED(CACHE_UPDATE_LOOP_3_1_qif_acc_4_nl),
      6) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(z_out_28), 3), 6), 6));
  GEMM_3D_FLOAT_LOOP_4_acc_191_sdt_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(STD_LOGIC_VECTOR'(
      "11111") & (reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd(1))), 6), 7) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0
      & STD_LOGIC_VECTOR'( "000")), 6), 7) + UNSIGNED'( "0000001"), 7));
  SOFTMAX_LOOP_4_SOFTMAX_LOOP_4_nor_nl <= NOT(operator_40_24_true_AC_TRN_AC_WRAP_acc_itm_23_1
      OR operator_40_24_true_AC_TRN_AC_WRAP_acc_itm_40_1);
  SOFTMAX_LOOP_4_and_1_nl <= operator_40_24_true_AC_TRN_AC_WRAP_acc_itm_23_1 AND
      (NOT operator_40_24_true_AC_TRN_AC_WRAP_acc_itm_40_1);
  SOFTMAX_LOOP_4_x_lpi_3_dfm_1_20_1_mx0w1 <= MUX1HOT_v_20_3_2((z_out_60(20 DOWNTO
      1)), STD_LOGIC_VECTOR'( "10110000000000000000"), STD_LOGIC_VECTOR'( "01010000000000000000"),
      STD_LOGIC_VECTOR'( SOFTMAX_LOOP_4_SOFTMAX_LOOP_4_nor_nl & SOFTMAX_LOOP_4_and_1_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_acc_itm_40_1));
  SF_LOOP_3_acc_82_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(SIGNED'(
      (z_out_2(21)) & '0' & (z_out_2(21))),4)), 4), 5) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((z_out_2(17))
      & '0' & (z_out_2(19 DOWNTO 18))), 4), 5), 5));
  SF_LOOP_3_acc_34_sdt_14_0_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((z_out_2(21))
      & STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_82_nl), 5)) & (z_out_2(19
      DOWNTO 17)) & (z_out_2(17)) & z_out_16), 14), 15) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((z_out_2(20))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(z_out_2(20), 1),2)) & '0'
      & (z_out_2(17)) & '0' & (z_out_2(21)) & STD_LOGIC_VECTOR'( "000") & (z_out_2(20))
      & '0' & (z_out_2(20))), 14), 15), 15));
  SF_LOOP_3_acc_77_sdt_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED('1' & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(21
      DOWNTO 20)))) + UNSIGNED('1' & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(38
      DOWNTO 37)))) + UNSIGNED'( "001"), 3));
  SF_LOOP_3_acc_90_psp_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_38_itm_18
      & reg_SF_LOOP_3_acc_38_1_ftd & reg_SF_LOOP_3_acc_38_1_ftd_1 & (reg_SF_LOOP_3_acc_38_1_ftd_2(8
      DOWNTO 4))) + UNSIGNED(reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd &
      reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd_1 & STD_LOGIC_VECTOR'( "1111111111")
      & (NOT (SF_LOOP_3_acc_5_psp_sva_19_17(2 DOWNTO 1)))), 15));
  SF_LOOP_3_acc_39_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED((SF_LOOP_3_acc_90_psp_1(14))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SF_LOOP_3_acc_90_psp_1(14),
      1),3)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SF_LOOP_3_acc_90_psp_1(14),
      1),2)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SF_LOOP_3_acc_90_psp_1(14),
      1),2)) & STD_LOGIC_VECTOR'( "00") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SF_LOOP_3_acc_90_psp_1(14),
      1),4))), 17), 18) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((SF_LOOP_3_acc_90_psp_1(12
      DOWNTO 0)) & (reg_SF_LOOP_3_acc_38_1_ftd_2(3 DOWNTO 0))), 17), 18), 18));
  SF_LOOP_3_acc_7_psp_sva_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(SIGNED(SF_LOOP_3_acc_39_nl),
      18) + UNSIGNED((SF_LOOP_3_acc_90_psp_1(13)) & '0' & (SF_LOOP_3_acc_90_psp_1(13))
      & STD_LOGIC_VECTOR'( "000") & (SF_LOOP_3_acc_90_psp_1(13)) & STD_LOGIC_VECTOR'(
      "00") & (SF_LOOP_3_acc_90_psp_1(13)) & STD_LOGIC_VECTOR'( "00") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SF_LOOP_3_acc_90_psp_1(13),
      1),2)) & STD_LOGIC_VECTOR'( "000") & (SF_LOOP_3_acc_90_psp_1(13))), 18));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_nl_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED(z_out_60(39
      DOWNTO 17)), 23), 24) + UNSIGNED'( "000000000000000000000101"), 24));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_itm_23_1 <= operator_40_24_true_AC_TRN_AC_WRAP_acc_nl_1(23);
  attention_exp_exp_half_mul_4_cse_sva_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED'(
      SIGNED(z_out_10(39 DOWNTO 0)) * SIGNED(SOFTMAX_LOOP_4_x_lpi_3_dfm_1_20_1_mx0w1)),
      60));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_nl_2 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(NOT
      z_out_60), 40), 41) + SIGNED'( "00000000000000000000010100000000000000001"),
      41));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_itm_40_1 <= operator_40_24_true_AC_TRN_AC_WRAP_acc_nl_2(40);
  RMS_NORM_LOOP_2_2_and_4_ssc_1 <= (attention_5_1_384_384_8_48_attn_output_2D_rsci_data_out_d(39))
      AND (NOT LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1);
  RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_nor_ssc_1 <= NOT((attention_5_1_384_384_8_48_attn_output_2D_rsci_data_out_d(39))
      OR LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1);
  RMS_NORM_LOOP_2_2_and_2_tmp <= QUANTIZE_ACTIVATION_LOOP_2_1_slc_40_1_svs AND LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1;
  INIT_2D_MEM_LOOP_2_3_INIT_2D_MEM_LOOP_2_3_nor_tmp <= NOT(CONV_SL_1_1(SF_LOOP_3_acc_45_itm_8_0/=STD_LOGIC_VECTOR'("000000000")));
  LINEAR_FORWARD_NO_MUL_LOOP_5_3_LINEAR_FORWARD_NO_MUL_LOOP_4_3_nor_nl <= NOT(exitL_exit_LINEAR_FORWARD_NO_MUL_LOOP_5_3_lpi_2
      OR (NOT QUANTIZE_ACTIVATION_LOOP_2_1_slc_40_1_svs));
  LINEAR_FORWARD_NO_MUL_LOOP_5_3_l_2_0_lpi_3_dfm_1_0_1 <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"),
      LINEAR_FORWARD_NO_MUL_LOOP_5_1_l_2_0_lpi_3_1_0, LINEAR_FORWARD_NO_MUL_LOOP_5_3_LINEAR_FORWARD_NO_MUL_LOOP_4_3_nor_nl);
  LINEAR_FORWARD_NO_MUL_LOOP_5_2_exs_2_0 <= (APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_0
      AND (NOT APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_1)) OR LINEAR_FORWARD_NO_MUL_LOOP_5_1_LINEAR_FORWARD_NO_MUL_LOOP_5_1_and_1_cse_1;
  CACHE_UPDATE_LOOP_1_and_cse <= (z_out_37(3)) AND (z_out_35(3));
  or_6_cse <= CONV_SL_1_1(fsm_output(4 DOWNTO 2)/=STD_LOGIC_VECTOR'("000"));
  and_dcpl <= NOT(CONV_SL_1_1(fsm_output(6 DOWNTO 5)/=STD_LOGIC_VECTOR'("00")));
  and_dcpl_1 <= NOT((fsm_output(7)) OR (fsm_output(4)));
  not_tmp_21 <= NOT((fsm_output(1)) OR (fsm_output(3)));
  and_dcpl_6 <= NOT(CONV_SL_1_1(fsm_output(8 DOWNTO 7)/=STD_LOGIC_VECTOR'("00")));
  or_tmp_46 <= (fsm_output(4)) OR (fsm_output(6)) OR (fsm_output(7));
  or_tmp_55 <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)/=STD_LOGIC_VECTOR'("001"));
  or_80_cse <= (fsm_output(6)) OR (fsm_output(8));
  and_dcpl_13 <= LINEAR_FORWARD_NO_MUL_LOOP_3_stage_0_2 AND CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm;
  or_tmp_68 <= (fsm_output(8)) OR (NOT (fsm_output(5)));
  or_113_cse <= (fsm_output(2)) OR (fsm_output(0));
  and_dcpl_19 <= CONV_SL_1_1(fsm_output(8 DOWNTO 7)=STD_LOGIC_VECTOR'("01"));
  or_tmp_76 <= CONV_SL_1_1(fsm_output(4 DOWNTO 3)/=STD_LOGIC_VECTOR'("10"));
  and_dcpl_25 <= QUANTIZE_ACTIVATION_LOOP_2_1_slc_40_1_svs AND (NOT LINEAR_FORWARD_NO_MUL_LOOP_5_and_1_mdf_sva);
  and_dcpl_28 <= CONV_SL_1_1(fsm_output(6 DOWNTO 5)=STD_LOGIC_VECTOR'("10"));
  or_tmp_188 <= (NOT (fsm_output(1))) OR (NOT (fsm_output(3))) OR (fsm_output(4));
  or_tmp_191 <= (fsm_output(1)) OR (fsm_output(3)) OR (fsm_output(4));
  or_tmp_207 <= CONV_SL_1_1(fsm_output(4 DOWNTO 3)/=STD_LOGIC_VECTOR'("01"));
  and_dcpl_79 <= CONV_SL_1_1(fsm_output(8 DOWNTO 7)=STD_LOGIC_VECTOR'("10"));
  and_dcpl_97 <= NOT(LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1 OR CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm);
  and_dcpl_98 <= CONV_SL_1_1(fsm_output(6 DOWNTO 5)=STD_LOGIC_VECTOR'("01"));
  and_dcpl_99 <= (NOT (fsm_output(0))) AND (fsm_output(2));
  and_dcpl_100 <= and_dcpl_99 AND and_dcpl_98;
  and_dcpl_101 <= (NOT (fsm_output(7))) AND (fsm_output(1));
  and_dcpl_102 <= CONV_SL_1_1(fsm_output(4 DOWNTO 3)=STD_LOGIC_VECTOR'("01"));
  and_dcpl_103 <= and_dcpl_102 AND (NOT (fsm_output(8)));
  and_dcpl_104 <= and_dcpl_103 AND and_dcpl_101;
  and_dcpl_105 <= and_dcpl_104 AND and_dcpl_100;
  or_dcpl_104 <= (NOT (fsm_output(5))) OR z_out_45_17;
  or_dcpl_105 <= (fsm_output(0)) OR (NOT (fsm_output(2)));
  or_dcpl_106 <= or_dcpl_105 OR (fsm_output(6));
  or_dcpl_109 <= NOT(CONV_SL_1_1(fsm_output(4 DOWNTO 3)=STD_LOGIC_VECTOR'("11")));
  or_dcpl_110 <= or_dcpl_109 OR (fsm_output(8));
  or_dcpl_111 <= or_dcpl_110 OR or_607_cse;
  or_dcpl_114 <= NOT((fsm_output(0)) AND (fsm_output(2)));
  or_dcpl_115 <= or_dcpl_114 OR (fsm_output(6));
  and_dcpl_107 <= (fsm_output(0)) AND (NOT (fsm_output(2)));
  and_dcpl_108 <= and_dcpl_107 AND and_dcpl;
  and_dcpl_110 <= and_929_cse AND (fsm_output(8));
  and_dcpl_111 <= and_dcpl_110 AND and_dcpl_101;
  and_dcpl_112 <= and_dcpl_111 AND and_dcpl_108;
  or_dcpl_129 <= or_dcpl_109 OR (NOT (fsm_output(8)));
  or_dcpl_130 <= or_dcpl_129 OR or_601_cse;
  or_dcpl_133 <= (NOT (fsm_output(0))) OR (fsm_output(2));
  or_dcpl_134 <= or_dcpl_133 OR (fsm_output(6));
  and_dcpl_114 <= and_dcpl_107 AND and_dcpl_28;
  and_dcpl_116 <= nor_581_cse AND (fsm_output(8));
  and_dcpl_117 <= and_dcpl_116 AND and_dcpl_101;
  and_dcpl_118 <= and_dcpl_117 AND and_dcpl_114;
  and_tmp_16 <= (fsm_output(8)) AND or_616_cse;
  or_tmp_227 <= (fsm_output(8)) OR (fsm_output(4)) OR (fsm_output(3));
  or_tmp_230 <= CONV_SL_1_1(fsm_output(7 DOWNTO 4)/=STD_LOGIC_VECTOR'("0000"));
  and_dcpl_125 <= (fsm_output(0)) AND (fsm_output(2));
  and_dcpl_126 <= and_dcpl_125 AND and_893_cse;
  and_dcpl_127 <= NOT((fsm_output(7)) OR (fsm_output(1)));
  and_dcpl_128 <= and_dcpl_116 AND and_dcpl_127;
  nor_326_nl <= NOT(CONV_SL_1_1(fsm_output(7 DOWNTO 3)/=STD_LOGIC_VECTOR'("00001")));
  nor_327_nl <= NOT((NOT((fsm_output(3)) OR (fsm_output(0)))) OR CONV_SL_1_1(fsm_output(7
      DOWNTO 4)/=STD_LOGIC_VECTOR'("0000")));
  nor_328_nl <= NOT(CONV_SL_1_1(fsm_output(7 DOWNTO 4)/=STD_LOGIC_VECTOR'("0000")));
  and_811_nl <= (fsm_output(0)) AND (fsm_output(4)) AND (fsm_output(5)) AND (fsm_output(6))
      AND (fsm_output(7));
  mux_221_nl <= MUX_s_1_2_2(nor_328_nl, and_811_nl, fsm_output(3));
  mux_222_nl <= MUX_s_1_2_2(nor_327_nl, mux_221_nl, fsm_output(1));
  mux_223_nl <= MUX_s_1_2_2(nor_326_nl, mux_222_nl, fsm_output(2));
  nor_329_nl <= NOT(CONV_SL_1_1(fsm_output(7 DOWNTO 3)/=STD_LOGIC_VECTOR'("00000")));
  not_tmp_199 <= MUX_s_1_2_2(mux_223_nl, nor_329_nl, fsm_output(8));
  and_dcpl_130 <= (NOT (fsm_output(7))) AND (fsm_output(2));
  and_dcpl_132 <= NOT((fsm_output(4)) OR (fsm_output(8)));
  or_tmp_247 <= (fsm_output(1)) OR (fsm_output(3));
  and_dcpl_135 <= and_dcpl_125 AND and_dcpl_98;
  and_dcpl_136 <= and_dcpl_104 AND and_dcpl_135;
  and_dcpl_138 <= and_dcpl_6 AND and_dcpl_98;
  and_dcpl_142 <= (NOT((NOT(nor_414_cse AND (NOT (fsm_output(2))))) AND (fsm_output(3))))
      AND (fsm_output(4)) AND and_dcpl_138;
  and_dcpl_144 <= (NOT (fsm_output(7))) AND (fsm_output(0));
  or_tmp_266 <= (fsm_output(1)) OR (NOT (fsm_output(8)));
  mux_235_nl <= MUX_s_1_2_2(or_tmp_266, or_935_cse, fsm_output(2));
  and_dcpl_147 <= (NOT mux_235_nl) AND and_dcpl_102 AND and_dcpl_144 AND and_dcpl;
  and_dcpl_148 <= and_dcpl_125 AND and_dcpl;
  and_dcpl_149 <= and_dcpl_104 AND and_dcpl_148;
  and_dcpl_150 <= and_dcpl_6 AND (NOT (fsm_output(6)));
  mux_tmp_236 <= MUX_s_1_2_2((fsm_output(4)), or_616_cse, or_1326_cse);
  mux_237_nl <= MUX_s_1_2_2((fsm_output(4)), (NOT mux_tmp_236), fsm_output(5));
  and_dcpl_151 <= mux_237_nl AND and_dcpl_150;
  and_dcpl_152 <= and_dcpl_6 AND (fsm_output(6));
  mux_tmp_238 <= MUX_s_1_2_2((fsm_output(4)), or_616_cse, or_369_cse);
  mux_239_nl <= MUX_s_1_2_2(mux_tmp_238, (NOT or_6_cse), fsm_output(5));
  and_dcpl_153 <= mux_239_nl AND and_dcpl_152;
  and_813_nl <= (fsm_output(0)) AND (fsm_output(1)) AND (fsm_output(4)) AND (fsm_output(3));
  mux_247_nl <= MUX_s_1_2_2(nor_581_cse, and_813_nl, fsm_output(2));
  and_dcpl_155 <= (NOT mux_247_nl) AND and_dcpl_6 AND and_893_cse;
  and_dcpl_157 <= and_dcpl_103 AND and_dcpl_127;
  and_dcpl_158 <= and_dcpl_157 AND and_dcpl_114;
  mux_250_nl <= MUX_s_1_2_2(mux_tmp_236, (NOT or_6_cse), fsm_output(5));
  and_dcpl_159 <= mux_250_nl AND and_dcpl_152;
  and_dcpl_160 <= and_dcpl_99 AND and_dcpl;
  and_dcpl_161 <= and_dcpl_110 AND and_dcpl_127;
  and_dcpl_162 <= and_dcpl_161 AND and_dcpl_160;
  nor_tmp_88 <= or_1328_cse AND CONV_SL_1_1(fsm_output(4 DOWNTO 3)=STD_LOGIC_VECTOR'("11"));
  not_tmp_215 <= NOT((fsm_output(2)) AND nor_tmp_88);
  mux_251_nl <= MUX_s_1_2_2(and_929_cse, (fsm_output(4)), and_863_cse);
  mux_252_nl <= MUX_s_1_2_2(not_tmp_215, mux_251_nl, fsm_output(5));
  and_dcpl_165 <= (NOT mux_252_nl) AND and_dcpl_79 AND (NOT (fsm_output(6)));
  and_dcpl_166 <= and_dcpl_79 AND (fsm_output(6));
  or_tmp_278 <= CONV_SL_1_1(fsm_output(4 DOWNTO 0)/=STD_LOGIC_VECTOR'("00000"));
  nor_334_nl <= NOT(and_855_cse OR CONV_SL_1_1(fsm_output(4 DOWNTO 3)/=STD_LOGIC_VECTOR'("00")));
  mux_253_nl <= MUX_s_1_2_2(nor_334_nl, or_tmp_278, fsm_output(5));
  and_dcpl_167 <= (NOT mux_253_nl) AND and_dcpl_166;
  or_dcpl_150 <= CONV_SL_1_1(fsm_output(7 DOWNTO 6)/=STD_LOGIC_VECTOR'("01"));
  and_dcpl_168 <= and_dcpl_99 AND and_dcpl_28;
  and_dcpl_169 <= and_dcpl_117 AND and_dcpl_168;
  and_dcpl_171 <= (fsm_output(7)) AND (NOT (fsm_output(1)));
  and_dcpl_172 <= and_929_cse AND (NOT (fsm_output(8)));
  and_dcpl_173 <= and_dcpl_172 AND and_dcpl_171;
  and_dcpl_176 <= and_dcpl_19 AND (fsm_output(6));
  and_dcpl_178 <= and_dcpl_79 AND and_dcpl;
  mux_tmp_260 <= MUX_s_1_2_2((NOT (fsm_output(3))), (fsm_output(3)), fsm_output(4));
  mux_tmp_261 <= MUX_s_1_2_2(mux_tmp_260, or_tmp_207, and_850_cse);
  and_dcpl_183 <= and_dcpl_102 AND (fsm_output(8)) AND and_dcpl_127 AND and_dcpl_108;
  and_dcpl_185 <= and_dcpl_99 AND and_893_cse;
  or_dcpl_156 <= or_616_cse OR (fsm_output(0));
  and_dcpl_189 <= (fsm_output(2)) AND (NOT (fsm_output(6)));
  and_dcpl_192 <= (NOT or_tmp_227) AND and_882_cse;
  and_dcpl_194 <= nor_315_cse AND and_dcpl;
  and_dcpl_195 <= and_dcpl_103 AND and_882_cse;
  and_dcpl_196 <= and_dcpl_195 AND and_dcpl_194;
  and_dcpl_197 <= and_dcpl_192 AND and_dcpl_160;
  and_dcpl_198 <= and_dcpl_192 AND and_dcpl_148;
  and_dcpl_204 <= (NOT (fsm_output(2))) AND (fsm_output(6));
  and_dcpl_205 <= and_dcpl_204 AND (NOT (fsm_output(5)));
  and_dcpl_208 <= and_dcpl_116 AND and_dcpl_101 AND (fsm_output(0));
  and_dcpl_210 <= and_dcpl_107 AND and_dcpl_98;
  and_dcpl_211 <= and_dcpl_111 AND and_dcpl_210;
  and_dcpl_212 <= and_dcpl_161 AND and_dcpl_100;
  and_dcpl_213 <= and_dcpl_161 AND and_dcpl_135;
  and_dcpl_214 <= and_dcpl_111 AND and_dcpl_100;
  nor_tmp_95 <= (fsm_output(8)) AND (fsm_output(3));
  and_dcpl_228 <= nor_315_cse AND (NOT (fsm_output(6)));
  and_dcpl_232 <= CONV_SL_1_1(fsm_output(4 DOWNTO 3)=STD_LOGIC_VECTOR'("10"));
  and_dcpl_233 <= and_dcpl_232 AND (NOT (fsm_output(8)));
  and_dcpl_234 <= and_dcpl_233 AND and_882_cse;
  and_dcpl_235 <= and_dcpl_234 AND and_dcpl_126;
  and_dcpl_238 <= nor_315_cse AND and_dcpl_98;
  and_dcpl_240 <= and_dcpl_161 AND and_dcpl_210;
  and_dcpl_241 <= and_dcpl_111 AND and_dcpl_238;
  and_dcpl_242 <= and_dcpl_161 AND and_dcpl_108;
  and_dcpl_243 <= and_dcpl_107 AND and_893_cse;
  and_dcpl_245 <= and_dcpl_234 AND and_dcpl_185;
  and_dcpl_247 <= (fsm_output(3)) AND (NOT (fsm_output(8)));
  or_tmp_313 <= and_850_cse OR CONV_SL_1_1(fsm_output(4 DOWNTO 3)/=STD_LOGIC_VECTOR'("10"));
  or_473_nl <= nor_414_cse OR CONV_SL_1_1(fsm_output(4 DOWNTO 3)/=STD_LOGIC_VECTOR'("01"));
  mux_tmp_277 <= MUX_s_1_2_2(or_tmp_313, or_473_nl, fsm_output(2));
  or_tmp_314 <= (fsm_output(1)) OR (NOT (fsm_output(4))) OR (fsm_output(3));
  or_tmp_316 <= (fsm_output(1)) OR (fsm_output(4)) OR (NOT (fsm_output(3)));
  mux_tmp_278 <= MUX_s_1_2_2(or_tmp_316, or_tmp_314, fsm_output(0));
  nand_136_nl <= NOT((fsm_output(0)) AND (fsm_output(1)) AND (fsm_output(4)));
  or_480_nl <= (fsm_output(0)) OR (fsm_output(1)) OR (fsm_output(4)) OR (NOT (fsm_output(3)));
  mux_tmp_283 <= MUX_s_1_2_2(nand_136_nl, or_480_nl, fsm_output(2));
  and_dcpl_256 <= and_dcpl_195 AND and_dcpl_168;
  and_dcpl_257 <= and_dcpl_233 AND and_dcpl_171;
  and_dcpl_259 <= and_dcpl_125 AND and_dcpl_28;
  and_dcpl_260 <= and_dcpl_257 AND and_dcpl_259;
  and_dcpl_261 <= and_dcpl_173 AND and_dcpl_114;
  and_dcpl_262 <= and_dcpl_103 AND and_dcpl_171;
  and_dcpl_263 <= and_dcpl_262 AND and_dcpl_126;
  and_dcpl_264 <= and_dcpl_195 AND and_dcpl_185;
  and_dcpl_265 <= and_dcpl_195 AND and_dcpl_126;
  and_dcpl_266 <= nor_315_cse AND and_893_cse;
  and_dcpl_267 <= and_dcpl_257 AND and_dcpl_266;
  and_dcpl_268 <= and_dcpl_257 AND and_dcpl_243;
  and_dcpl_269 <= and_dcpl_234 AND and_dcpl_266;
  and_dcpl_272 <= and_dcpl_257 AND and_dcpl_160;
  and_dcpl_274 <= and_dcpl_173 AND and_dcpl_194;
  and_dcpl_275 <= and_dcpl_173 AND and_dcpl_108;
  and_dcpl_276 <= and_dcpl_172 AND and_882_cse;
  and_dcpl_277 <= and_dcpl_276 AND and_dcpl_194;
  and_dcpl_278 <= and_dcpl_276 AND and_dcpl_108;
  and_dcpl_279 <= and_dcpl_173 AND and_dcpl_160;
  and_dcpl_280 <= and_dcpl_173 AND and_dcpl_148;
  and_dcpl_281 <= and_dcpl_276 AND and_dcpl_160;
  and_dcpl_282 <= and_dcpl_276 AND and_dcpl_148;
  and_dcpl_283 <= (NOT or_tmp_227) AND and_dcpl_171;
  and_dcpl_284 <= and_dcpl_283 AND and_dcpl_238;
  and_dcpl_285 <= and_dcpl_283 AND and_dcpl_210;
  and_dcpl_286 <= and_dcpl_192 AND and_dcpl_238;
  and_dcpl_287 <= and_dcpl_192 AND and_dcpl_210;
  and_dcpl_288 <= and_dcpl_283 AND and_dcpl_100;
  and_dcpl_289 <= and_dcpl_283 AND and_dcpl_135;
  and_dcpl_290 <= and_dcpl_192 AND and_dcpl_100;
  and_dcpl_291 <= and_dcpl_192 AND and_dcpl_135;
  and_dcpl_292 <= and_dcpl_262 AND and_dcpl_238;
  and_dcpl_293 <= and_dcpl_262 AND and_dcpl_210;
  and_dcpl_294 <= and_dcpl_195 AND and_dcpl_238;
  and_dcpl_295 <= and_dcpl_195 AND and_dcpl_210;
  and_dcpl_296 <= and_dcpl_262 AND and_dcpl_100;
  and_dcpl_297 <= and_dcpl_262 AND and_dcpl_135;
  and_dcpl_298 <= and_dcpl_195 AND and_dcpl_100;
  and_dcpl_299 <= and_dcpl_195 AND and_dcpl_135;
  and_dcpl_300 <= and_dcpl_257 AND and_dcpl_238;
  and_dcpl_301 <= and_dcpl_257 AND and_dcpl_210;
  and_dcpl_302 <= and_dcpl_234 AND and_dcpl_238;
  and_dcpl_303 <= and_dcpl_234 AND and_dcpl_210;
  and_dcpl_304 <= and_dcpl_257 AND and_dcpl_100;
  and_dcpl_305 <= and_dcpl_257 AND and_dcpl_135;
  and_dcpl_306 <= and_dcpl_234 AND and_dcpl_100;
  and_dcpl_307 <= and_dcpl_234 AND and_dcpl_135;
  and_dcpl_308 <= and_dcpl_173 AND and_dcpl_238;
  and_dcpl_309 <= and_dcpl_173 AND and_dcpl_210;
  and_dcpl_310 <= and_dcpl_276 AND and_dcpl_238;
  and_dcpl_311 <= and_dcpl_276 AND and_dcpl_210;
  and_dcpl_312 <= and_dcpl_173 AND and_dcpl_100;
  and_dcpl_313 <= and_dcpl_173 AND and_dcpl_135;
  and_dcpl_314 <= and_dcpl_276 AND and_dcpl_100;
  and_dcpl_315 <= and_dcpl_276 AND and_dcpl_135;
  and_dcpl_316 <= nor_315_cse AND and_dcpl_28;
  and_dcpl_317 <= and_dcpl_283 AND and_dcpl_316;
  and_dcpl_318 <= and_dcpl_283 AND and_dcpl_114;
  and_dcpl_319 <= and_dcpl_192 AND and_dcpl_316;
  and_dcpl_320 <= and_dcpl_192 AND and_dcpl_114;
  and_dcpl_321 <= and_dcpl_283 AND and_dcpl_168;
  and_dcpl_322 <= and_dcpl_283 AND and_dcpl_259;
  and_dcpl_323 <= and_dcpl_192 AND and_dcpl_168;
  and_dcpl_324 <= and_dcpl_192 AND and_dcpl_259;
  and_dcpl_325 <= and_dcpl_195 AND and_dcpl_148;
  and_dcpl_328 <= and_dcpl_234 AND and_dcpl_108;
  and_dcpl_329 <= and_dcpl_195 AND and_dcpl_108;
  and_dcpl_332 <= and_dcpl_189 AND (NOT (fsm_output(5)));
  and_dcpl_335 <= and_dcpl_103 AND and_882_cse AND (NOT (fsm_output(0)));
  and_dcpl_337 <= and_dcpl_195 AND and_dcpl_160;
  and_dcpl_342 <= and_dcpl_192 AND and_dcpl_194;
  and_dcpl_348 <= and_dcpl_283 AND and_dcpl_148;
  or_dcpl_166 <= or_tmp_227 OR or_dcpl_150;
  or_tmp_324 <= CONV_SL_1_1(fsm_output(2 DOWNTO 0)/=STD_LOGIC_VECTOR'("100"));
  or_492_nl <= (fsm_output(2)) OR (NOT and_850_cse);
  mux_tmp_291 <= MUX_s_1_2_2(or_492_nl, or_tmp_324, fsm_output(5));
  and_dcpl_356 <= (NOT or_tmp_227) AND and_dcpl_127;
  or_tmp_329 <= (NOT (fsm_output(2))) OR (NOT (fsm_output(0))) OR (fsm_output(1))
      OR (NOT (fsm_output(7))) OR (fsm_output(3));
  and_dcpl_359 <= and_dcpl_99 AND (fsm_output(6));
  and_dcpl_361 <= (NOT or_tmp_227) AND and_dcpl_101;
  and_dcpl_366 <= and_dcpl_361 AND and_dcpl_114;
  and_dcpl_367 <= and_dcpl_130 AND and_dcpl_28;
  and_dcpl_368 <= (NOT(or_tmp_227 OR (NOT((fsm_output(1)) XOR (fsm_output(0))))))
      AND and_dcpl_367;
  and_dcpl_373 <= and_dcpl_356 AND and_dcpl_259;
  and_dcpl_374 <= and_dcpl_356 AND and_dcpl_185;
  or_tmp_340 <= (fsm_output(2)) OR (NOT (fsm_output(0))) OR (NOT (fsm_output(7)))
      OR (fsm_output(3));
  and_dcpl_378 <= NOT((fsm_output(2)) OR (fsm_output(5)));
  and_dcpl_384 <= nor_581_cse AND and_dcpl_6;
  and_dcpl_386 <= and_dcpl_283 AND and_dcpl_194;
  and_dcpl_387 <= and_dcpl_283 AND and_dcpl_108;
  and_dcpl_388 <= and_dcpl_361 AND and_dcpl_259;
  nor_tmp_98 <= (fsm_output(2)) AND (fsm_output(0)) AND (fsm_output(4)) AND (fsm_output(3));
  and_dcpl_395 <= and_dcpl_361 AND and_dcpl_168;
  and_dcpl_396 <= and_dcpl_172 AND and_dcpl_101;
  and_dcpl_399 <= (fsm_output(2)) AND (fsm_output(6));
  and_dcpl_403 <= and_dcpl_172 AND and_dcpl_127;
  and_dcpl_404 <= and_dcpl_403 AND and_dcpl_135;
  and_dcpl_405 <= and_dcpl_396 AND and_dcpl_100;
  and_dcpl_406 <= and_dcpl_396 AND and_dcpl_135;
  and_dcpl_407 <= and_dcpl_356 AND and_dcpl_316;
  or_dcpl_179 <= (fsm_output(4)) OR (NOT (fsm_output(8))) OR (fsm_output(7));
  or_tmp_348 <= CONV_SL_1_1(fsm_output(2 DOWNTO 1)/=STD_LOGIC_VECTOR'("01"));
  or_tmp_349 <= CONV_SL_1_1(fsm_output(2 DOWNTO 1)/=STD_LOGIC_VECTOR'("10"));
  and_dcpl_419 <= and_dcpl_128 AND and_dcpl_114;
  not_tmp_260 <= MUX_s_1_2_2(and_850_cse, (NOT or_1328_cse), fsm_output(2));
  or_tmp_354 <= (fsm_output(1)) OR (NOT (fsm_output(4)));
  and_805_nl <= (fsm_output(1)) AND (fsm_output(4));
  mux_328_itm <= MUX_s_1_2_2(and_805_nl, (fsm_output(1)), fsm_output(0));
  and_dcpl_440 <= and_dcpl_356 AND and_dcpl_108;
  and_dcpl_445 <= and_dcpl_396 AND and_dcpl_210;
  and_dcpl_446 <= and_dcpl_403 AND and_dcpl_100;
  and_dcpl_447 <= and_dcpl_157 AND and_dcpl_100;
  and_dcpl_450 <= and_dcpl_262 AND and_dcpl_259;
  and_dcpl_454 <= and_dcpl_232 AND (fsm_output(8)) AND and_dcpl_101;
  or_tmp_373 <= (fsm_output(6)) OR (fsm_output(8)) OR (fsm_output(7)) OR (fsm_output(0))
      OR (fsm_output(4));
  or_582_nl <= (NOT (fsm_output(1))) OR (NOT (fsm_output(7))) OR (fsm_output(8))
      OR or_dcpl_109;
  or_580_nl <= (NOT (fsm_output(1))) OR (fsm_output(7)) OR (NOT (fsm_output(8)))
      OR (fsm_output(4)) OR (fsm_output(3));
  mux_tmp_356 <= MUX_s_1_2_2(or_582_nl, or_580_nl, fsm_output(0));
  nor_tmp_109 <= (fsm_output(8)) AND (fsm_output(4));
  and_dcpl_458 <= (fsm_output(3)) AND (NOT (fsm_output(7)));
  nor_343_nl <= NOT((fsm_output(2)) OR (NOT((fsm_output(0)) AND (fsm_output(8)) AND
      (fsm_output(4)))));
  nor_344_nl <= NOT((NOT (fsm_output(2))) OR (fsm_output(0)) OR (fsm_output(8)) OR
      (fsm_output(4)));
  mux_370_nl <= MUX_s_1_2_2(nor_343_nl, nor_344_nl, fsm_output(5));
  and_dcpl_460 <= mux_370_nl AND and_dcpl_458 AND (fsm_output(1)) AND (NOT (fsm_output(6)));
  and_dcpl_461 <= and_dcpl_361 AND and_dcpl_316;
  and_dcpl_468 <= and_dcpl_458 AND (NOT (fsm_output(2)));
  nor_345_nl <= NOT((fsm_output(0)) OR (fsm_output(1)) OR (NOT((fsm_output(4)) AND
      (fsm_output(8)))));
  nor_346_nl <= NOT((NOT (fsm_output(0))) OR (NOT (fsm_output(1))) OR (fsm_output(8))
      OR (fsm_output(4)));
  not_tmp_296 <= MUX_s_1_2_2(nor_345_nl, nor_346_nl, fsm_output(5));
  and_dcpl_474 <= and_dcpl_361 AND and_dcpl_108;
  or_tmp_449 <= NOT((NOT((fsm_output(5)) AND (fsm_output(8)))) AND (fsm_output(6)));
  mux_tmp_402 <= MUX_s_1_2_2((NOT (fsm_output(6))), (fsm_output(8)), fsm_output(5));
  mux_tmp_405 <= MUX_s_1_2_2((NOT or_80_cse), or_1217_cse, fsm_output(5));
  and_dcpl_477 <= and_dcpl_99 AND (NOT (fsm_output(6)));
  and_dcpl_494 <= not_tmp_296 AND and_dcpl_458 AND (NOT((fsm_output(2)) OR (fsm_output(6))));
  nor_348_nl <= NOT((fsm_output(2)) OR (fsm_output(1)) OR (NOT (fsm_output(7))) OR
      (fsm_output(8)));
  nor_350_nl <= NOT((fsm_output(1)) OR (fsm_output(7)) OR (fsm_output(8)));
  mux_425_nl <= MUX_s_1_2_2(nor_428_cse, nor_350_nl, fsm_output(2));
  mux_426_nl <= MUX_s_1_2_2(nor_348_nl, mux_425_nl, fsm_output(6));
  nor_351_nl <= NOT((NOT (fsm_output(6))) OR (fsm_output(2)) OR (NOT (fsm_output(1)))
      OR (fsm_output(7)) OR (NOT (fsm_output(8))));
  mux_427_nl <= MUX_s_1_2_2(mux_426_nl, nor_351_nl, fsm_output(5));
  and_dcpl_496 <= mux_427_nl AND nor_581_cse AND (NOT (fsm_output(0)));
  and_dcpl_497 <= and_dcpl_157 AND and_dcpl_316;
  nor_352_nl <= NOT((fsm_output(6)) OR (fsm_output(1)) OR (fsm_output(7)) OR (fsm_output(4))
      OR (fsm_output(3)));
  and_797_nl <= (fsm_output(6)) AND (fsm_output(1)) AND (fsm_output(3)) AND (fsm_output(4))
      AND (fsm_output(7));
  mux_457_nl <= MUX_s_1_2_2(nor_352_nl, and_797_nl, fsm_output(5));
  and_dcpl_500 <= mux_457_nl AND (NOT (fsm_output(8))) AND (fsm_output(0)) AND (fsm_output(2));
  or_tmp_496 <= (fsm_output(8)) OR (fsm_output(3));
  mux_tmp_458 <= MUX_s_1_2_2((NOT (fsm_output(3))), (fsm_output(3)), fsm_output(8));
  or_tmp_497 <= (fsm_output(7)) OR mux_tmp_458;
  or_tmp_499 <= CONV_SL_1_1(fsm_output(6 DOWNTO 4)/=STD_LOGIC_VECTOR'("011"));
  or_tmp_500 <= NOT((fsm_output(4)) AND (fsm_output(0)) AND (fsm_output(5)) AND (NOT
      (fsm_output(6))));
  or_tmp_502 <= (fsm_output(4)) OR (fsm_output(0)) OR (fsm_output(5)) OR (NOT (fsm_output(6)));
  or_tmp_511 <= CONV_SL_1_1(fsm_output(6 DOWNTO 4)/=STD_LOGIC_VECTOR'("100"));
  and_dcpl_505 <= and_dcpl_262 AND and_dcpl_194;
  or_tmp_523 <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)/=STD_LOGIC_VECTOR'("000"));
  and_dcpl_514 <= and_dcpl_173 AND and_dcpl_126;
  nor_tmp_140 <= CONV_SL_1_1(fsm_output(7 DOWNTO 5)=STD_LOGIC_VECTOR'("111"));
  and_dcpl_530 <= and_dcpl_173 AND and_dcpl_185;
  nor_354_nl <= NOT((NOT (fsm_output(2))) OR (fsm_output(7)));
  mux_579_nl <= MUX_s_1_2_2(nor_398_cse, nor_354_nl, fsm_output(6));
  and_dcpl_545 <= mux_579_nl AND nor_581_cse AND nor_439_cse AND (NOT((fsm_output(0))
      OR (fsm_output(5))));
  mux_tmp_584 <= MUX_s_1_2_2((NOT (fsm_output(1))), (fsm_output(1)), fsm_output(0));
  or_tmp_646 <= (fsm_output(0)) OR (fsm_output(3));
  nor_tmp_145 <= (fsm_output(0)) AND (fsm_output(3));
  xor_dcpl_4 <= (fsm_output(8)) XOR (fsm_output(1));
  and_dcpl_553 <= nor_581_cse AND (NOT (fsm_output(7))) AND xor_dcpl_4;
  and_dcpl_556 <= and_dcpl_128 AND and_dcpl_259;
  mux_tmp_606 <= MUX_s_1_2_2((NOT (fsm_output(8))), (fsm_output(8)), fsm_output(6));
  or_tmp_676 <= (NOT (fsm_output(4))) OR (NOT (fsm_output(6))) OR (fsm_output(8));
  or_tmp_707 <= CONV_SL_1_1(fsm_output(7 DOWNTO 4)/=STD_LOGIC_VECTOR'("1001"));
  or_tmp_712 <= CONV_SL_1_1(fsm_output(8 DOWNTO 4)/=STD_LOGIC_VECTOR'("01000"));
  or_tmp_726 <= (fsm_output(1)) OR (fsm_output(8));
  mux_tmp_665 <= MUX_s_1_2_2((NOT (fsm_output(8))), (fsm_output(8)), fsm_output(7));
  or_1320_nl <= (fsm_output(6)) OR (fsm_output(2)) OR (fsm_output(3));
  nand_143_nl <= NOT((fsm_output(6)) AND (fsm_output(2)) AND (fsm_output(3)));
  mux_678_nl <= MUX_s_1_2_2(or_1320_nl, nand_143_nl, fsm_output(5));
  and_dcpl_581 <= (NOT(mux_678_nl OR (fsm_output(4)))) AND and_dcpl_19 AND CONV_SL_1_1(fsm_output(1
      DOWNTO 0)=STD_LOGIC_VECTOR'("01"));
  and_dcpl_583 <= and_dcpl_19 AND CONV_SL_1_1(fsm_output(1 DOWNTO 0)=STD_LOGIC_VECTOR'("10"));
  or_tmp_766 <= NOT((fsm_output(6)) AND (fsm_output(2)) AND (fsm_output(4)) AND (NOT
      (fsm_output(3))));
  or_970_nl <= (fsm_output(6)) OR (fsm_output(2)) OR (fsm_output(4)) OR (NOT (fsm_output(3)));
  mux_679_nl <= MUX_s_1_2_2(or_970_nl, or_tmp_766, fsm_output(5));
  and_dcpl_584 <= (NOT mux_679_nl) AND and_dcpl_583;
  mux_680_nl <= MUX_s_1_2_2(nor_414_cse, and_850_cse, fsm_output(6));
  and_dcpl_587 <= mux_680_nl AND and_929_cse AND and_dcpl_19 AND and_dcpl_378;
  and_dcpl_588 <= and_dcpl_262 AND and_dcpl_168;
  or_dcpl_202 <= LINEAR_FORWARD_NO_MUL_LOOP_3_stage_0_2 OR (NOT LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1);
  mux_tmp_681 <= MUX_s_1_2_2((fsm_output(2)), or_1326_cse, fsm_output(0));
  and_dcpl_606 <= and_dcpl_19 AND (NOT (fsm_output(6)));
  and_dcpl_612 <= nor_581_cse AND (fsm_output(2)) AND and_dcpl_28 AND (((fsm_output(0))
      AND (NOT LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1)) OR (fsm_output(1))) AND
      and_dcpl_6;
  nor_tmp_171 <= CONV_SL_1_1(fsm_output(4 DOWNTO 1)=STD_LOGIC_VECTOR'("1111"));
  or_tmp_831 <= (fsm_output(5)) OR mux_716_cse;
  mux_tmp_728 <= MUX_s_1_2_2(mux_716_cse, or_454_cse, fsm_output(5));
  or_tmp_849 <= (NOT(CONV_SL_1_1(fsm_output(5 DOWNTO 4)/=STD_LOGIC_VECTOR'("01"))))
      OR CONV_SL_1_1(fsm_output(8 DOWNTO 7)/=STD_LOGIC_VECTOR'("01"));
  or_dcpl_205 <= NOT(LINEAR_FORWARD_NO_MUL_LOOP_5_and_1_tmp AND (z_out_37(4)));
  not_tmp_460 <= NOT((fsm_output(7)) AND (fsm_output(2)));
  or_tmp_874 <= (fsm_output(0)) OR (fsm_output(1)) OR (NOT (fsm_output(6)));
  nor_tmp_182 <= (fsm_output(5)) AND (fsm_output(7));
  and_dcpl_630 <= (NOT or_tmp_227) AND or_1328_cse AND and_dcpl_367;
  or_tmp_907 <= CONV_SL_1_1(fsm_output(4 DOWNTO 1)/=STD_LOGIC_VECTOR'("0000"));
  or_tmp_911 <= NOT((fsm_output(0)) AND (fsm_output(1)) AND (NOT (fsm_output(4)))
      AND (fsm_output(3)));
  mux_tmp_808 <= MUX_s_1_2_2((fsm_output(4)), or_616_cse, and_855_cse);
  or_dcpl_210 <= or_dcpl_205 OR (NOT((z_out_22(4)) AND (z_out_36(4))));
  not_tmp_504 <= NOT(or_369_cse AND (fsm_output(7)) AND (fsm_output(4)) AND (fsm_output(3)));
  or_tmp_927 <= (fsm_output(6)) OR (NOT nor_tmp_182);
  not_tmp_512 <= NOT(or_369_cse AND CONV_SL_1_1(fsm_output(4 DOWNTO 3)=STD_LOGIC_VECTOR'("11")));
  or_tmp_943 <= (fsm_output(1)) OR (fsm_output(5)) OR (fsm_output(6));
  and_dcpl_640 <= and_dcpl_192 AND and_dcpl_108;
  mux_tmp_848 <= MUX_s_1_2_2(and_929_cse, (fsm_output(4)), or_1326_cse);
  or_tmp_976 <= (fsm_output(2)) OR and_850_cse OR CONV_SL_1_1(fsm_output(4 DOWNTO
      3)/=STD_LOGIC_VECTOR'("00"));
  mux_874_nl <= MUX_s_1_2_2(mux_tmp_238, (NOT or_tmp_976), fsm_output(5));
  and_dcpl_655 <= mux_874_nl AND and_dcpl_152;
  or_tmp_979 <= CONV_SL_1_1(fsm_output(4 DOWNTO 2)/=STD_LOGIC_VECTOR'("001"));
  mux_897_nl <= MUX_s_1_2_2(nor_581_cse, or_tmp_976, fsm_output(5));
  and_dcpl_659 <= (NOT mux_897_nl) AND and_dcpl_152;
  and_dcpl_661 <= and_dcpl_234 AND and_dcpl_168;
  and_dcpl_662 <= and_dcpl_234 AND and_dcpl_259;
  not_tmp_552 <= NOT((fsm_output(6)) AND (fsm_output(2)) AND (fsm_output(5)));
  mux_946_itm <= MUX_s_1_2_2(or_dcpl_109, or_616_cse, fsm_output(5));
  mux_955_nl <= MUX_s_1_2_2(or_705_cse, (fsm_output(6)), fsm_output(5));
  or_810_nl <= CONV_SL_1_1(fsm_output(6 DOWNTO 4)/=STD_LOGIC_VECTOR'("001"));
  mux_tmp_956 <= MUX_s_1_2_2(mux_955_nl, or_810_nl, fsm_output(3));
  or_tmp_1058 <= (fsm_output(3)) OR mux_967_cse;
  or_1324_nl <= (fsm_output(6)) OR (fsm_output(1)) OR (fsm_output(8));
  nand_157_nl <= NOT((fsm_output(6)) AND (fsm_output(1)) AND (fsm_output(8)));
  mux_209_nl <= MUX_s_1_2_2(or_1324_nl, nand_157_nl, fsm_output(5));
  exitL_exit_LINEAR_FORWARD_NO_MUL_LOOP_5_3_lpi_2_mx0c2 <= (NOT(mux_209_nl OR (fsm_output(3))))
      AND and_dcpl_1 AND nor_315_cse;
  or_675_nl <= (fsm_output(4)) OR (fsm_output(2)) OR (NOT (fsm_output(0))) OR (fsm_output(1))
      OR (fsm_output(5)) OR (fsm_output(8));
  nand_185_nl <= NOT((fsm_output(0)) AND (fsm_output(1)) AND (fsm_output(5)) AND
      (NOT (fsm_output(8))));
  or_673_nl <= (fsm_output(1)) OR (NOT (fsm_output(5))) OR (fsm_output(8));
  mux_438_nl <= MUX_s_1_2_2(nand_185_nl, or_673_nl, fsm_output(2));
  or_671_nl <= (fsm_output(5)) OR (NOT (fsm_output(8)));
  mux_436_nl <= MUX_s_1_2_2((NOT (fsm_output(8))), or_tmp_68, fsm_output(1));
  mux_437_nl <= MUX_s_1_2_2(or_671_nl, mux_436_nl, fsm_output(0));
  or_672_nl <= (fsm_output(2)) OR mux_437_nl;
  mux_439_nl <= MUX_s_1_2_2(mux_438_nl, or_672_nl, fsm_output(4));
  mux_440_nl <= MUX_s_1_2_2(or_675_nl, mux_439_nl, fsm_output(3));
  mux_432_nl <= MUX_s_1_2_2(or_tmp_68, nor_419_cse, fsm_output(1));
  mux_431_nl <= MUX_s_1_2_2(or_tmp_68, and_878_cse, fsm_output(1));
  mux_433_nl <= MUX_s_1_2_2(mux_432_nl, mux_431_nl, fsm_output(0));
  and_889_nl <= ((fsm_output(1)) OR (fsm_output(5))) AND (fsm_output(8));
  or_667_nl <= (LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1 AND LINEAR_FORWARD_NO_MUL_LOOP_2_LINEAR_FORWARD_NO_MUL_LOOP_2_nor_tmp
      AND (z_out_37(4)) AND (z_out_22(4)) AND (z_out_36(4)) AND LINEAR_FORWARD_NO_MUL_LOOP_5_and_1_tmp
      AND (NOT (fsm_output(1))) AND (NOT (fsm_output(5)))) OR (fsm_output(8));
  mux_430_nl <= MUX_s_1_2_2(and_889_nl, or_667_nl, fsm_output(0));
  mux_434_nl <= MUX_s_1_2_2(mux_433_nl, mux_430_nl, fsm_output(2));
  mux_435_nl <= MUX_s_1_2_2(mux_434_nl, (fsm_output(8)), or_616_cse);
  mux_441_nl <= MUX_s_1_2_2(mux_440_nl, mux_435_nl, fsm_output(6));
  or_662_nl <= and_850_cse OR (fsm_output(5)) OR (fsm_output(8));
  or_661_nl <= nor_414_cse OR (fsm_output(5)) OR (fsm_output(8));
  mux_428_nl <= MUX_s_1_2_2(or_662_nl, or_661_nl, fsm_output(2));
  or_663_nl <= (fsm_output(4)) OR mux_428_nl;
  or_659_nl <= (fsm_output(4)) OR (NOT (fsm_output(2))) OR (NOT (fsm_output(1)))
      OR (fsm_output(5)) OR (fsm_output(8));
  mux_429_nl <= MUX_s_1_2_2(or_663_nl, or_659_nl, fsm_output(3));
  or_664_nl <= (fsm_output(6)) OR mux_429_nl;
  CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm_mx0c5 <= MUX_s_1_2_2(mux_441_nl,
      or_664_nl, fsm_output(7));
  or_718_nl <= (NOT (fsm_output(0))) OR (fsm_output(1)) OR (NOT (fsm_output(7)))
      OR (fsm_output(4)) OR (NOT (fsm_output(3)));
  or_716_nl <= (fsm_output(0)) OR (fsm_output(1)) OR (fsm_output(4)) OR (fsm_output(3));
  mux_491_nl <= MUX_s_1_2_2(or_718_nl, or_716_nl, fsm_output(2));
  or_1335_nl <= (fsm_output(6)) OR mux_491_nl;
  or_1336_nl <= (NOT (fsm_output(6))) OR (NOT (fsm_output(2))) OR (fsm_output(0))
      OR (NOT((fsm_output(1)) AND (fsm_output(7)) AND (fsm_output(4)) AND (fsm_output(3))));
  mux_492_nl <= MUX_s_1_2_2(or_1335_nl, or_1336_nl, fsm_output(5));
  attention_sqrt_1_for_i_4_0_sva_mx0c3 <= NOT(mux_492_nl OR (fsm_output(8)));
  attention_sqrt_1_guess_sva_29_0_mx0c0 <= and_dcpl_356 AND and_dcpl_160;
  attention_sqrt_1_guess_sva_29_0_mx0c2 <= and_dcpl_173 AND and_dcpl_316;
  attention_sqrt_1_guess_sva_29_0_mx0c3 <= and_dcpl_276 AND and_dcpl_185;
  mux_531_nl <= MUX_s_1_2_2(or_tmp_207, or_tmp_76, fsm_output(0));
  nor_453_nl <= NOT((fsm_output(6)) OR (fsm_output(2)) OR mux_531_nl);
  nor_454_nl <= NOT((NOT (fsm_output(6))) OR (NOT (fsm_output(2))) OR (fsm_output(0))
      OR (NOT (fsm_output(4))) OR (fsm_output(3)));
  mux_532_nl <= MUX_s_1_2_2(nor_453_nl, nor_454_nl, fsm_output(5));
  APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c1 <=
      mux_532_nl AND and_dcpl_19 AND (fsm_output(1));
  or_774_nl <= CONV_SL_1_1(fsm_output(2 DOWNTO 0)/=STD_LOGIC_VECTOR'("000")) OR or_dcpl_109;
  mux_533_nl <= MUX_s_1_2_2(or_774_nl, mux_tmp_283, fsm_output(6));
  APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c2 <=
      (NOT mux_533_nl) AND and_dcpl_19 AND (NOT (fsm_output(5)));
  nor_455_nl <= NOT((NOT (fsm_output(2))) OR (NOT (fsm_output(0))) OR (fsm_output(1))
      OR (fsm_output(7)) OR (NOT (fsm_output(8))) OR (fsm_output(4)) OR (fsm_output(3)));
  nor_456_nl <= NOT((fsm_output(2)) OR mux_tmp_356);
  mux_534_nl <= MUX_s_1_2_2(nor_455_nl, nor_456_nl, fsm_output(5));
  APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c5 <=
      mux_534_nl AND (fsm_output(6));
  or_1340_nl <= (NOT (fsm_output(0))) OR (fsm_output(1)) OR (NOT (fsm_output(3)));
  or_1341_nl <= (fsm_output(0)) OR (NOT (fsm_output(1))) OR (fsm_output(3));
  mux_548_nl <= MUX_s_1_2_2(or_1340_nl, or_1341_nl, fsm_output(2));
  GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_itm_mx0c4
      <= (NOT(mux_548_nl OR (fsm_output(4)))) AND and_dcpl_6 AND and_dcpl_28;
  nand_202_nl <= NOT((fsm_output(0)) AND (fsm_output(4)) AND (fsm_output(3)));
  mux_553_nl <= MUX_s_1_2_2(nand_202_nl, or_dcpl_156, fsm_output(6));
  mux_550_nl <= MUX_s_1_2_2((fsm_output(4)), or_616_cse, fsm_output(1));
  mux_551_nl <= MUX_s_1_2_2((NOT mux_550_nl), or_616_cse, fsm_output(0));
  mux_549_nl <= MUX_s_1_2_2(nor_581_cse, or_616_cse, fsm_output(0));
  mux_552_nl <= MUX_s_1_2_2(mux_551_nl, mux_549_nl, fsm_output(2));
  or_801_nl <= (fsm_output(6)) OR mux_552_nl;
  mux_554_nl <= MUX_s_1_2_2(mux_553_nl, or_801_nl, fsm_output(5));
  GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_itm_mx0c7
      <= (NOT mux_554_nl) AND and_dcpl_19;
  GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_itm_mx0c9
      <= and_dcpl_247 AND (fsm_output(7)) AND ((fsm_output(4)) XOR (fsm_output(0)))
      AND CONV_SL_1_1(fsm_output(2 DOWNTO 1)=STD_LOGIC_VECTOR'("10")) AND and_dcpl_28;
  GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_itm_mx0c10
      <= and_dcpl_232 AND and_dcpl_19 AND and_dcpl_266;
  LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_8_sdt_mx0c0 <= and_dcpl_104 AND and_dcpl_210;
  LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_8_sdt_mx0c2 <= and_dcpl_161 AND and_dcpl_194;
  nor_486_nl <= NOT((fsm_output(2)) OR (fsm_output(0)) OR (NOT((fsm_output(1)) AND
      (fsm_output(8)) AND (fsm_output(4)))));
  nor_487_nl <= NOT((NOT (fsm_output(2))) OR (NOT (fsm_output(0))) OR (fsm_output(1))
      OR (fsm_output(8)) OR (fsm_output(4)));
  mux_620_nl <= MUX_s_1_2_2(nor_486_nl, nor_487_nl, fsm_output(5));
  GEMM_3D_FLOAT_LOOP_4_acc_193_itm_mx0c0 <= mux_620_nl AND and_dcpl_458 AND (NOT
      (fsm_output(6)));
  nor_630_nl <= NOT((NOT (fsm_output(6))) OR (fsm_output(2)) OR (fsm_output(4)) OR
      (fsm_output(3)));
  nor_631_nl <= NOT((fsm_output(6)) OR nor_581_cse);
  mux_621_nl <= MUX_s_1_2_2(nor_630_nl, nor_631_nl, fsm_output(5));
  GEMM_3D_FLOAT_LOOP_4_acc_193_itm_mx0c2 <= mux_621_nl AND and_dcpl_19 AND and_850_cse;
  nor_496_nl <= NOT((NOT (fsm_output(6))) OR (fsm_output(2)) OR (fsm_output(1)) OR
      (fsm_output(8)) OR (fsm_output(4)) OR (fsm_output(3)));
  nor_497_nl <= NOT((fsm_output(6)) OR (NOT((fsm_output(2)) AND (fsm_output(1)) AND
      (fsm_output(8)) AND (fsm_output(4)) AND (fsm_output(3)))));
  mux_653_nl <= MUX_s_1_2_2(nor_496_nl, nor_497_nl, fsm_output(5));
  APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt_mx0c0 <= mux_653_nl AND and_dcpl_144;
  nand_211_nl <= NOT((fsm_output(2)) AND (fsm_output(6)));
  mux_655_nl <= MUX_s_1_2_2(nand_211_nl, or_614_cse, or_tmp_726);
  or_952_nl <= (fsm_output(3)) OR mux_655_nl;
  or_949_nl <= (fsm_output(3)) OR (NOT (fsm_output(1))) OR (NOT (fsm_output(8)))
      OR (fsm_output(2)) OR (NOT (fsm_output(6)));
  mux_656_nl <= MUX_s_1_2_2(or_952_nl, or_949_nl, fsm_output(5));
  or_947_nl <= (fsm_output(5)) OR (fsm_output(3)) OR (fsm_output(1)) OR (fsm_output(8))
      OR (fsm_output(2)) OR (fsm_output(6));
  mux_657_nl <= MUX_s_1_2_2(mux_656_nl, or_947_nl, fsm_output(7));
  nor_499_nl <= NOT((fsm_output(4)) OR mux_657_nl);
  and_918_nl <= (fsm_output(1)) AND (fsm_output(8)) AND (fsm_output(2)) AND (NOT
      (fsm_output(6)));
  nor_498_nl <= NOT((fsm_output(1)) OR (fsm_output(8)) OR (fsm_output(2)) OR (fsm_output(6)));
  mux_654_nl <= MUX_s_1_2_2(and_918_nl, nor_498_nl, fsm_output(3));
  and_919_nl <= (NOT((NOT (fsm_output(4))) OR (fsm_output(7)) OR (NOT (fsm_output(5)))))
      AND mux_654_nl;
  APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt_mx0c1 <= MUX_s_1_2_2(nor_499_nl, and_919_nl,
      fsm_output(0));
  APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_mx0c0 <= and_929_cse AND (NOT (fsm_output(7)))
      AND xor_dcpl_4 AND and_dcpl_238;
  nand_216_nl <= NOT((fsm_output(0)) AND (fsm_output(1)) AND (fsm_output(8)));
  or_1348_nl <= nor_414_cse OR (fsm_output(8));
  mux_692_nl <= MUX_s_1_2_2(nand_216_nl, or_1348_nl, fsm_output(2));
  APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_mx0c1 <= (NOT(mux_692_nl OR (fsm_output(3))))
      AND and_dcpl_1 AND and_dcpl_28;
  mux_715_nl <= MUX_s_1_2_2(or_dcpl_109, mux_tmp_238, fsm_output(5));
  LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_lpi_3_mx0c2 <= (NOT mux_715_nl) AND and_dcpl_606;
  mux_721_nl <= MUX_s_1_2_2(or_dcpl_109, nor_tmp_171, fsm_output(5));
  LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_mx0c2 <= (NOT mux_721_nl) AND and_dcpl_606;
  nor_520_nl <= NOT((NOT((NOT (fsm_output(2))) OR CACHE_UPDATE_LOOP_1_and_cse)) OR
      (fsm_output(0)) OR (NOT (fsm_output(7))) OR (fsm_output(4)) OR (fsm_output(5)));
  nor_521_nl <= NOT((NOT (fsm_output(0))) OR (NOT CACHE_UPDATE_LOOP_1_and_cse) OR
      (NOT (fsm_output(7))) OR (fsm_output(4)) OR (fsm_output(5)));
  nor_522_nl <= NOT((NOT (fsm_output(0))) OR (NOT (z_out_37(3))) OR (NOT (fsm_output(7)))
      OR (fsm_output(4)) OR (fsm_output(5)));
  mux_723_nl <= MUX_s_1_2_2(nor_521_nl, nor_522_nl, fsm_output(2));
  mux_724_nl <= MUX_s_1_2_2(nor_520_nl, mux_723_nl, fsm_output(3));
  nor_519_nl <= NOT((fsm_output(7)) OR (fsm_output(4)) OR (fsm_output(5)));
  and_931_nl <= (fsm_output(7)) AND (fsm_output(4)) AND (fsm_output(5));
  mux_722_nl <= MUX_s_1_2_2(nor_519_nl, and_931_nl, fsm_output(0));
  nor_523_nl <= NOT((fsm_output(3)) OR (NOT((fsm_output(2)) AND mux_722_nl)));
  mux_725_nl <= MUX_s_1_2_2(mux_724_nl, nor_523_nl, fsm_output(6));
  APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_mx0c0 <= mux_725_nl AND nor_439_cse;
  or_1062_nl <= (NOT (fsm_output(2))) OR CACHE_UPDATE_LOOP_1_and_cse OR CONV_SL_1_1(fsm_output(6
      DOWNTO 4)/=STD_LOGIC_VECTOR'("000"));
  or_1061_nl <= (fsm_output(2)) OR (NOT (fsm_output(4))) OR (fsm_output(5)) OR (fsm_output(6));
  mux_751_nl <= MUX_s_1_2_2(or_1062_nl, or_1061_nl, fsm_output(1));
  nor_531_nl <= NOT((fsm_output(3)) OR mux_751_nl);
  or_1350_nl <= CACHE_UPDATE_LOOP_1_and_cse OR CONV_SL_1_1(fsm_output(6 DOWNTO 5)/=STD_LOGIC_VECTOR'("00"));
  mux_749_nl <= MUX_s_1_2_2(or_1350_nl, nand_158_cse, fsm_output(4));
  or_1058_nl <= (z_out_37(3)) OR CONV_SL_1_1(fsm_output(6 DOWNTO 4)/=STD_LOGIC_VECTOR'("000"));
  mux_750_nl <= MUX_s_1_2_2(mux_749_nl, or_1058_nl, fsm_output(2));
  nor_532_nl <= NOT((NOT (fsm_output(3))) OR (fsm_output(1)) OR mux_750_nl);
  mux_752_nl <= MUX_s_1_2_2(nor_531_nl, nor_532_nl, fsm_output(0));
  APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_mx0c3 <= mux_752_nl AND and_dcpl_19;
  or_1076_nl <= (NOT (fsm_output(7))) OR (fsm_output(2));
  or_1075_nl <= (fsm_output(7)) OR (NOT (fsm_output(2)));
  mux_756_nl <= MUX_s_1_2_2(or_1076_nl, or_1075_nl, fsm_output(6));
  nor_533_nl <= NOT((fsm_output(0)) OR mux_756_nl);
  nor_534_nl <= NOT((NOT (fsm_output(0))) OR (fsm_output(6)) OR not_tmp_460);
  mux_757_nl <= MUX_s_1_2_2(nor_533_nl, nor_534_nl, fsm_output(3));
  nor_535_nl <= NOT((fsm_output(3)) OR (fsm_output(0)) OR (NOT (fsm_output(6))) OR
      (NOT (fsm_output(7))) OR (fsm_output(2)));
  mux_758_nl <= MUX_s_1_2_2(mux_757_nl, nor_535_nl, fsm_output(4));
  and_935_nl <= (fsm_output(3)) AND (fsm_output(0)) AND (fsm_output(6)) AND (fsm_output(7))
      AND (NOT (fsm_output(2)));
  nor_536_nl <= NOT((fsm_output(6)) OR (NOT (fsm_output(7))) OR (fsm_output(2)));
  nor_537_nl <= NOT((fsm_output(6)) OR not_tmp_460);
  mux_753_nl <= MUX_s_1_2_2(nor_536_nl, nor_537_nl, fsm_output(0));
  nor_538_nl <= NOT((fsm_output(0)) OR (NOT (fsm_output(6))) OR (NOT (fsm_output(7)))
      OR (fsm_output(2)));
  mux_754_nl <= MUX_s_1_2_2(mux_753_nl, nor_538_nl, fsm_output(3));
  mux_755_nl <= MUX_s_1_2_2(and_935_nl, mux_754_nl, fsm_output(4));
  mux_759_nl <= MUX_s_1_2_2(mux_758_nl, mux_755_nl, fsm_output(1));
  CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c0 <= mux_759_nl AND nor_419_cse;
  CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c4 <= and_dcpl_233 AND (NOT((fsm_output(1))
      XOR (fsm_output(6)))) AND (fsm_output(7)) AND (fsm_output(0)) AND and_dcpl_378;
  CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c5 <= and_dcpl_103 AND and_dcpl_204 AND and_882_cse
      AND (NOT((fsm_output(0)) XOR (fsm_output(5))));
  CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c6 <= and_dcpl_195 AND and_dcpl_259;
  or_1098_nl <= CONV_SL_1_1(fsm_output(6 DOWNTO 2)/=STD_LOGIC_VECTOR'("10001"));
  mux_779_nl <= MUX_s_1_2_2(or_1328_cse, and_850_cse, fsm_output(4));
  nor_544_nl <= NOT(CONV_SL_1_1(fsm_output(1 DOWNTO 0)/=STD_LOGIC_VECTOR'("01")));
  mux_778_nl <= MUX_s_1_2_2(nor_544_nl, and_850_cse, fsm_output(4));
  mux_780_nl <= MUX_s_1_2_2((NOT mux_779_nl), mux_778_nl, fsm_output(2));
  or_1095_nl <= (fsm_output(4)) OR (fsm_output(0)) OR (fsm_output(1));
  mux_777_nl <= MUX_s_1_2_2((fsm_output(4)), or_1095_nl, fsm_output(2));
  mux_781_nl <= MUX_s_1_2_2(mux_780_nl, mux_777_nl, fsm_output(3));
  nor_545_nl <= NOT((fsm_output(5)) OR mux_781_nl);
  and_942_nl <= (fsm_output(4)) AND mux_797_cse;
  and_943_nl <= (fsm_output(4)) AND or_1328_cse;
  mux_774_nl <= MUX_s_1_2_2(and_942_nl, and_943_nl, fsm_output(2));
  nor_547_nl <= NOT((NOT((fsm_output(4)) OR (fsm_output(0)))) OR (fsm_output(1)));
  nor_548_nl <= NOT((fsm_output(4)) OR (fsm_output(0)) OR (NOT (fsm_output(1))));
  mux_772_nl <= MUX_s_1_2_2(nor_547_nl, nor_548_nl, fsm_output(2));
  mux_775_nl <= MUX_s_1_2_2(mux_774_nl, mux_772_nl, fsm_output(3));
  or_1089_nl <= (fsm_output(2)) OR (fsm_output(4)) OR nor_83_cse;
  mux_771_nl <= MUX_s_1_2_2((fsm_output(4)), or_1089_nl, fsm_output(3));
  mux_776_nl <= MUX_s_1_2_2(mux_775_nl, mux_771_nl, fsm_output(5));
  mux_782_nl <= MUX_s_1_2_2(nor_545_nl, mux_776_nl, fsm_output(6));
  mux_783_nl <= MUX_s_1_2_2(or_1098_nl, mux_782_nl, fsm_output(7));
  CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c7 <= mux_783_nl OR (fsm_output(8));
  mux_809_nl <= MUX_s_1_2_2(or_dcpl_109, mux_tmp_808, fsm_output(5));
  LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_dfm_mx1c2 <= (NOT mux_809_nl) AND
      and_dcpl_606;
  and_nl <= (fsm_output(6)) AND (NOT mux_tmp_238);
  mux_868_nl <= MUX_s_1_2_2(and_dcpl_102, mux_tmp_260, or_369_cse);
  nor_632_nl <= NOT((fsm_output(6)) OR (NOT mux_868_nl));
  mux_869_nl <= MUX_s_1_2_2(and_nl, nor_632_nl, fsm_output(5));
  LINEAR_FORWARD_NO_MUL_LOOP_2_2_acc_13_psp_mx0c1 <= mux_869_nl AND and_dcpl_19;
  mux_881_nl <= MUX_s_1_2_2(and_745_cse, (fsm_output(2)), fsm_output(3));
  mux_882_nl <= MUX_s_1_2_2((NOT or_1283_cse), mux_881_nl, fsm_output(0));
  and_692_nl <= (fsm_output(5)) AND mux_882_nl;
  mux_879_nl <= MUX_s_1_2_2(or_1283_cse, (fsm_output(2)), fsm_output(3));
  mux_880_nl <= MUX_s_1_2_2(and_929_cse, mux_879_nl, fsm_output(5));
  mux_883_nl <= MUX_s_1_2_2(and_692_nl, mux_880_nl, fsm_output(1));
  or_1204_nl <= (fsm_output(2)) OR (fsm_output(4));
  mux_876_nl <= MUX_s_1_2_2(or_1204_nl, or_tmp_979, fsm_output(0));
  or_1203_nl <= (NOT (fsm_output(0))) OR (fsm_output(3)) OR (fsm_output(2)) OR (NOT
      (fsm_output(4)));
  mux_877_nl <= MUX_s_1_2_2(mux_876_nl, or_1203_nl, fsm_output(5));
  or_1200_nl <= (fsm_output(0)) OR (fsm_output(3)) OR (fsm_output(2)) OR (NOT (fsm_output(4)));
  mux_875_nl <= MUX_s_1_2_2(or_tmp_979, or_1200_nl, fsm_output(5));
  mux_878_nl <= MUX_s_1_2_2(mux_877_nl, mux_875_nl, fsm_output(1));
  mux_884_nl <= MUX_s_1_2_2(mux_883_nl, (NOT mux_878_nl), fsm_output(6));
  LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_13_sdt_mx0c1 <= mux_884_nl AND and_dcpl_19;
  mux_902_nl <= MUX_s_1_2_2(or_tmp_207, or_616_cse, or_369_cse);
  mux_903_nl <= MUX_s_1_2_2((NOT and_944_cse), mux_902_nl, fsm_output(6));
  mux_899_nl <= MUX_s_1_2_2((NOT mux_tmp_260), or_tmp_76, or_1328_cse);
  mux_900_nl <= MUX_s_1_2_2(mux_899_nl, (fsm_output(3)), fsm_output(2));
  mux_898_nl <= MUX_s_1_2_2(or_tmp_313, or_tmp_911, fsm_output(2));
  mux_901_nl <= MUX_s_1_2_2(mux_900_nl, mux_898_nl, fsm_output(6));
  mux_904_nl <= MUX_s_1_2_2(mux_903_nl, mux_901_nl, fsm_output(5));
  LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_12_sdt_mx0c1 <= (NOT mux_904_nl) AND and_dcpl_19;
  nor_588_nl <= NOT(CACHE_UPDATE_LOOP_1_and_cse OR (fsm_output(6)) OR (NOT (fsm_output(2)))
      OR (fsm_output(5)));
  nor_589_nl <= NOT((z_out_35(3)) OR not_tmp_552);
  mux_927_nl <= MUX_s_1_2_2(nor_588_nl, nor_589_nl, fsm_output(3));
  nor_590_nl <= NOT((fsm_output(3)) OR (z_out_35(3)) OR (NOT (fsm_output(6))) OR
      (fsm_output(2)) OR (fsm_output(5)));
  mux_928_nl <= MUX_s_1_2_2(mux_927_nl, nor_590_nl, fsm_output(4));
  nor_591_nl <= NOT(CONV_SL_1_1(fsm_output(4 DOWNTO 3)/=STD_LOGIC_VECTOR'("10"))
      OR CACHE_UPDATE_LOOP_1_and_cse OR (fsm_output(6)) OR (fsm_output(2)) OR (fsm_output(5)));
  mux_929_nl <= MUX_s_1_2_2(mux_928_nl, nor_591_nl, fsm_output(1));
  nor_592_nl <= NOT((NOT (fsm_output(3))) OR (fsm_output(6)) OR (fsm_output(2)) OR
      (fsm_output(5)));
  nor_593_nl <= NOT((fsm_output(3)) OR not_tmp_552);
  mux_925_nl <= MUX_s_1_2_2(nor_592_nl, nor_593_nl, fsm_output(4));
  nor_594_nl <= NOT((NOT (fsm_output(3))) OR (z_out_35(3)) OR (NOT (fsm_output(6)))
      OR (fsm_output(2)) OR (fsm_output(5)));
  nor_595_nl <= NOT((fsm_output(3)) OR (z_out_35(3)) OR (fsm_output(6)) OR (NOT (fsm_output(2)))
      OR (fsm_output(5)));
  mux_924_nl <= MUX_s_1_2_2(nor_594_nl, nor_595_nl, fsm_output(4));
  mux_926_nl <= MUX_s_1_2_2(mux_925_nl, mux_924_nl, fsm_output(1));
  mux_930_nl <= MUX_s_1_2_2(mux_929_nl, mux_926_nl, fsm_output(0));
  GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0_mx0c1 <= mux_930_nl AND and_dcpl_19;
  nor_380_nl <= NOT((fsm_output(6)) OR (fsm_output(1)) OR (fsm_output(7)) OR (NOT
      (fsm_output(8))));
  nor_381_nl <= NOT((NOT (fsm_output(6))) OR (fsm_output(0)) OR (NOT (fsm_output(1)))
      OR (NOT (fsm_output(7))) OR (fsm_output(8)));
  mux_274_nl <= MUX_s_1_2_2(nor_380_nl, nor_381_nl, fsm_output(5));
  and_254_ssc <= mux_274_nl AND and_929_cse AND (NOT (fsm_output(2)));
  and_255_ssc <= and_dcpl_111 AND and_dcpl_194;
  and_257_ssc <= and_dcpl_161 AND and_dcpl_238;
  ATTN_2D_LOOP_3_or_cse <= and_257_ssc OR and_dcpl_240 OR and_dcpl_241 OR and_dcpl_211;
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_cse <= and_dcpl_275 OR and_dcpl_277 OR and_dcpl_278
      OR and_dcpl_279;
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_1_cse <= and_dcpl_281 OR and_dcpl_282 OR and_dcpl_284
      OR and_dcpl_285;
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_2_cse <= and_dcpl_292 OR and_dcpl_321 OR and_dcpl_322
      OR and_dcpl_323 OR and_dcpl_324;
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_4_cse <= and_dcpl_299 OR and_dcpl_300 OR and_dcpl_301
      OR and_dcpl_302;
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_5_cse <= and_dcpl_304 OR and_dcpl_305 OR and_dcpl_306
      OR and_dcpl_307 OR and_dcpl_308;
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_6_cse <= and_dcpl_310 OR and_dcpl_311 OR and_dcpl_312
      OR and_dcpl_313;
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_7_cse <= and_dcpl_315 OR and_dcpl_317 OR and_dcpl_318
      OR and_dcpl_319;
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_57_cse <= and_dcpl_293 OR and_dcpl_294 OR and_dcpl_295
      OR and_dcpl_296 OR and_dcpl_297;
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_38_cse <= and_dcpl_277 OR and_dcpl_295 OR and_dcpl_311;
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_39_cse <= and_dcpl_289 OR and_dcpl_306 OR and_dcpl_323;
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_41_cse <= and_dcpl_275 OR and_dcpl_285 OR and_dcpl_294
      OR and_dcpl_302 OR and_dcpl_310 OR and_dcpl_319;
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_43_cse <= and_dcpl_281 OR and_dcpl_290 OR and_dcpl_299
      OR and_dcpl_307 OR and_dcpl_315 OR and_dcpl_324;
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_48_cse <= and_dcpl_279 OR and_dcpl_284 OR and_dcpl_288
      OR and_dcpl_297 OR and_dcpl_301 OR and_dcpl_305 OR and_dcpl_313 OR and_dcpl_318
      OR and_dcpl_322;
  and_461_ssc <= not_tmp_260 AND and_dcpl_102 AND and_dcpl_138;
  and_462_ssc <= and_dcpl_157 AND and_dcpl_135;
  and_463_ssc <= and_dcpl_396 AND and_dcpl_238;
  for_for_or_cse <= and_463_ssc OR and_dcpl_445 OR and_dcpl_446 OR and_dcpl_404;
  mux_330_nl <= MUX_s_1_2_2((NOT mux_328_itm), or_tmp_354, fsm_output(2));
  mux_327_nl <= MUX_s_1_2_2(or_tmp_354, (fsm_output(1)), fsm_output(0));
  mux_329_nl <= MUX_s_1_2_2((NOT mux_328_itm), mux_327_nl, fsm_output(2));
  and_868_nl <= (SF_LOOP_3_acc_5_psp_sva_8_0(0)) AND SF_LOOP_3_acc_5_psp_sva_9 AND
      CONV_SL_1_1(SF_LOOP_3_acc_5_psp_sva_8_0(8 DOWNTO 1)=STD_LOGIC_VECTOR'("11111111"));
  mux_331_nl <= MUX_s_1_2_2(mux_330_nl, mux_329_nl, and_868_nl);
  SF_LOOP_3_SF_LOOP_3_or_31_nl <= mux_331_nl OR (NOT (fsm_output(3))) OR (fsm_output(8))
      OR (fsm_output(7)) OR (fsm_output(6)) OR (NOT (fsm_output(5)));
  input_rsci_re_d <= STD_LOGIC_VECTOR'( '1' & SF_LOOP_3_SF_LOOP_3_or_31_nl);
  or_1329_nl <= (fsm_output(2)) OR (NOT (fsm_output(0))) OR (fsm_output(3));
  or_1330_nl <= (NOT (fsm_output(2))) OR (fsm_output(0)) OR (NOT (fsm_output(3)));
  mux_326_nl <= MUX_s_1_2_2(or_1329_nl, or_1330_nl, fsm_output(5));
  for_for_nand_nl <= NOT((NOT(mux_326_nl OR (fsm_output(4)))) AND and_dcpl_6 AND
      (NOT((fsm_output(1)) OR (fsm_output(6)))));
  input_rsci_we_d <= STD_LOGIC_VECTOR'( '1' & for_for_nand_nl);
  mux_322_nl <= MUX_s_1_2_2(or_tmp_349, or_tmp_348, fsm_output(5));
  mux_320_nl <= MUX_s_1_2_2((NOT (fsm_output(1))), (fsm_output(1)), fsm_output(2));
  mux_321_nl <= MUX_s_1_2_2(mux_320_nl, or_tmp_348, fsm_output(5));
  mux_323_nl <= MUX_s_1_2_2(mux_322_nl, mux_321_nl, LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1);
  SF_LOOP_3_SF_LOOP_3_or_29_nl <= mux_323_nl OR (fsm_output(3)) OR or_dcpl_179 OR
      (NOT((fsm_output(0)) AND (fsm_output(6))));
  output_rsci_re_d <= STD_LOGIC_VECTOR'( '1' & SF_LOOP_3_SF_LOOP_3_or_29_nl);
  mux_318_nl <= MUX_s_1_2_2((NOT (fsm_output(0))), (fsm_output(0)), fsm_output(2));
  or_528_nl <= (NOT LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1) OR (fsm_output(5));
  mux_319_nl <= MUX_s_1_2_2(mux_318_nl, or_dcpl_133, or_528_nl);
  SF_LOOP_3_SF_LOOP_3_or_28_nl <= mux_319_nl OR (fsm_output(3)) OR or_dcpl_179 OR
      (fsm_output(1)) OR (NOT (fsm_output(6)));
  output_rsci_we_d <= STD_LOGIC_VECTOR'( '1' & SF_LOOP_3_SF_LOOP_3_or_28_nl);
  mux_316_cse <= MUX_s_1_2_2(z_out_55_0, (NOT z_out_55_0), z_out_55_1);
  and_2251_nl <= (fsm_output(0)) AND mux_316_cse;
  mux_317_nl <= MUX_s_1_2_2(and_2251_nl, mux_316_cse, fsm_output(1));
  QUANTIZE_ACTIVATION_LOOP_5_nand_1_nl <= NOT(mux_317_nl AND and_dcpl_384 AND and_dcpl_399
      AND (NOT (fsm_output(5))) AND LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1);
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_re_d <= STD_LOGIC_VECTOR'(
      '1' & QUANTIZE_ACTIVATION_LOOP_5_nand_1_nl);
  nor_386_nl <= NOT((NOT (fsm_output(6))) OR (fsm_output(2)) OR (fsm_output(0)) OR
      (fsm_output(1)) OR (fsm_output(4)) OR (fsm_output(3)));
  nor_387_nl <= NOT((fsm_output(6)) OR not_tmp_215);
  mux_312_nl <= MUX_s_1_2_2(nor_386_nl, nor_387_nl, fsm_output(5));
  QUANTIZE_ACTIVATION_LOOP_5_nand_nl <= NOT(mux_312_nl AND and_dcpl_6);
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_we_d <= STD_LOGIC_VECTOR'(
      '1' & QUANTIZE_ACTIVATION_LOOP_5_nand_nl);
  attention_5_1_384_384_8_48_q_proj_re_rsci_re_d <= STD_LOGIC_VECTOR'( '1' & SF_LOOP_3_SF_LOOP_3_or_24_rmff);
  nor_384_nl <= NOT((fsm_output(2)) OR (NOT (fsm_output(0))) OR (fsm_output(4)) OR
      (fsm_output(3)));
  mux_308_nl <= MUX_s_1_2_2(nor_384_nl, nor_tmp_98, fsm_output(5));
  or_518_nl <= (NOT (fsm_output(0))) OR (fsm_output(4)) OR (fsm_output(3));
  mux_306_nl <= MUX_s_1_2_2(or_518_nl, or_dcpl_156, fsm_output(2));
  mux_307_nl <= MUX_s_1_2_2((NOT mux_306_nl), nor_tmp_98, fsm_output(5));
  mux_309_nl <= MUX_s_1_2_2(mux_308_nl, mux_307_nl, LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1);
  SF_LOOP_3_SF_LOOP_3_or_25_nl <= (NOT mux_309_nl) OR or_629_cse OR nand_170_cse;
  attention_5_1_384_384_8_48_q_proj_re_rsci_we_d <= STD_LOGIC_VECTOR'( '1' & SF_LOOP_3_SF_LOOP_3_or_25_nl);
  attention_5_1_384_384_8_48_k_proj_re_rsci_re_d <= STD_LOGIC_VECTOR'( '1' & SF_LOOP_3_SF_LOOP_3_or_24_rmff);
  mux_299_nl <= MUX_s_1_2_2((NOT and_850_cse), or_tmp_324, fsm_output(5));
  mux_300_nl <= MUX_s_1_2_2(mux_tmp_291, mux_299_nl, LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1);
  SF_LOOP_3_SF_LOOP_3_or_23_nl <= mux_300_nl OR or_dcpl_166;
  attention_5_1_384_384_8_48_k_proj_re_rsci_we_d <= STD_LOGIC_VECTOR'( '1' & SF_LOOP_3_SF_LOOP_3_or_23_nl);
  or_500_nl <= (fsm_output(2)) OR (fsm_output(0)) OR (fsm_output(1)) OR (fsm_output(7))
      OR (NOT (fsm_output(3)));
  mux_295_nl <= MUX_s_1_2_2(or_tmp_329, or_500_nl, fsm_output(6));
  or_497_nl <= (fsm_output(0)) OR (fsm_output(1)) OR (fsm_output(7)) OR (NOT (fsm_output(3)));
  or_495_nl <= (fsm_output(0)) OR (NOT (fsm_output(1))) OR (fsm_output(7)) OR (fsm_output(3));
  mux_293_nl <= MUX_s_1_2_2(or_497_nl, or_495_nl, fsm_output(2));
  mux_294_nl <= MUX_s_1_2_2(or_tmp_329, mux_293_nl, fsm_output(6));
  mux_296_nl <= MUX_s_1_2_2(mux_295_nl, mux_294_nl, LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1);
  SF_LOOP_3_SF_LOOP_3_or_22_nl <= mux_296_nl OR or_586_cse OR (fsm_output(5));
  attention_5_1_384_384_8_48_v_proj_re_rsci_re_d <= STD_LOGIC_VECTOR'( '1' & SF_LOOP_3_SF_LOOP_3_or_22_nl);
  mux_289_nl <= MUX_s_1_2_2((NOT and_850_cse), or_1327_cse, fsm_output(2));
  mux_290_nl <= MUX_s_1_2_2(mux_289_nl, or_tmp_324, fsm_output(5));
  mux_292_nl <= MUX_s_1_2_2(mux_tmp_291, mux_290_nl, LINEAR_FORWARD_NO_MUL_LOOP_3_stage_0_2);
  SF_LOOP_3_SF_LOOP_3_or_21_nl <= mux_292_nl OR or_dcpl_166;
  attention_5_1_384_384_8_48_v_proj_re_rsci_we_d <= STD_LOGIC_VECTOR'( '1' & SF_LOOP_3_SF_LOOP_3_or_21_nl);
  attention_5_1_384_384_8_48_q_proj_rsci_re_d <= STD_LOGIC_VECTOR'( '1' & SF_LOOP_3_SF_LOOP_3_or_20_rmff);
  attention_5_1_384_384_8_48_q_proj_rsci_we_d <= STD_LOGIC_VECTOR'( '1' & (NOT and_dcpl_342));
  attention_5_1_384_384_8_48_k_proj_rsci_re_d <= STD_LOGIC_VECTOR'( '1' & SF_LOOP_3_SF_LOOP_3_or_20_rmff);
  attention_5_1_384_384_8_48_k_proj_rsci_we_d <= STD_LOGIC_VECTOR'( '1' & (NOT and_dcpl_342));
  RESHAPE_2D_TO_3D_LOOP_3_2_nand_nl <= NOT(and_dcpl_335 AND and_dcpl_332 AND reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1
      AND CONV_SL_1_1(reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd=STD_LOGIC_VECTOR'("10")));
  attention_5_1_384_384_8_48_v_proj_rsci_re_d <= STD_LOGIC_VECTOR'( '1' & RESHAPE_2D_TO_3D_LOOP_3_2_nand_nl);
  attention_5_1_384_384_8_48_v_proj_rsci_we_d <= STD_LOGIC_VECTOR'( '1' & (NOT and_dcpl_197));
  attention_5_1_384_384_8_48_q_embed_rsci_re_d <= STD_LOGIC_VECTOR'( '1' & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_nand_rmff);
  attention_5_1_384_384_8_48_q_embed_rsci_we_d <= STD_LOGIC_VECTOR'( '1' & (NOT and_dcpl_329));
  APPLY_ROTARY_POS_EMB_LOOP_6_nand_nl <= NOT(and_dcpl_335 AND and_dcpl_332 AND CONV_SL_1_1(attention_sqrt_1_for_i_4_0_sva_2_0=STD_LOGIC_VECTOR'("101")));
  attention_5_1_384_384_8_48_k_embed_rsci_re_d <= STD_LOGIC_VECTOR'( '1' & APPLY_ROTARY_POS_EMB_LOOP_6_nand_nl);
  attention_5_1_384_384_8_48_k_embed_rsci_we_d <= STD_LOGIC_VECTOR'( '1' & (NOT and_dcpl_329));
  attention_5_1_384_384_8_48_k_cache_upd_rsci_re_d <= STD_LOGIC_VECTOR'( '1' & (NOT
      and_dcpl_328));
  attention_5_1_384_384_8_48_k_cache_upd_rsci_we_d <= STD_LOGIC_VECTOR'( '1' & (NOT
      and_dcpl_325));
  CACHE_UPDATE_LOOP_3_1_nand_nl <= NOT((NOT mux_tmp_277) AND and_dcpl_19 AND and_893_cse);
  attention_5_1_384_384_8_48_v_cache_upd_rsci_re_d <= STD_LOGIC_VECTOR'( '1' & CACHE_UPDATE_LOOP_3_1_nand_nl);
  attention_5_1_384_384_8_48_v_cache_upd_rsci_we_d <= STD_LOGIC_VECTOR'( '1' & (NOT
      and_dcpl_325));
  attention_5_1_384_384_8_48_k_proj_transposed_rsci_re_d <= STD_LOGIC_VECTOR'( '1'
      & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_nand_rmff);
  attention_5_1_384_384_8_48_k_proj_transposed_rsci_we_d <= STD_LOGIC_VECTOR'( '1'
      & (NOT and_dcpl_272));
  mux_279_nl <= MUX_s_1_2_2(and_dcpl_232, (fsm_output(4)), fsm_output(1));
  nand_168_nl <= NOT((fsm_output(0)) AND mux_279_nl);
  mux_280_nl <= MUX_s_1_2_2(nand_168_nl, mux_tmp_278, fsm_output(2));
  mux_281_nl <= MUX_s_1_2_2(mux_280_nl, mux_tmp_277, fsm_output(5));
  GEMM_3D_FLOAT_LOOP_4_nand_1_nl <= NOT((NOT mux_281_nl) AND and_dcpl_176);
  attention_5_1_384_384_8_48_attn_weights_rsci_re_d <= STD_LOGIC_VECTOR'( '1' & GEMM_3D_FLOAT_LOOP_4_nand_1_nl);
  or_469_nl <= (fsm_output(0)) OR (NOT (fsm_output(1))) OR (fsm_output(4));
  mux_275_nl <= MUX_s_1_2_2(or_1327_cse, or_469_nl, fsm_output(2));
  or_468_nl <= (fsm_output(2)) OR (fsm_output(0)) OR (NOT (fsm_output(1))) OR (fsm_output(4));
  mux_276_nl <= MUX_s_1_2_2(mux_275_nl, or_468_nl, fsm_output(5));
  GEMM_3D_FLOAT_LOOP_4_nand_nl <= NOT((NOT mux_276_nl) AND and_dcpl_247 AND CONV_SL_1_1(fsm_output(7
      DOWNTO 6)=STD_LOGIC_VECTOR'("11")));
  attention_5_1_384_384_8_48_attn_weights_rsci_we_d <= STD_LOGIC_VECTOR'( '1' & GEMM_3D_FLOAT_LOOP_4_nand_nl);
  attention_5_1_384_384_8_48_attn_output_rsci_re_d <= STD_LOGIC_VECTOR'( '1' & (NOT
      and_dcpl_245));
  SF_LOOP_3_SF_LOOP_3_SF_LOOP_3_nand_nl <= NOT(and_dcpl_234 AND and_dcpl_243);
  attention_5_1_384_384_8_48_attn_output_rsci_we_d <= STD_LOGIC_VECTOR'( '1' & SF_LOOP_3_SF_LOOP_3_SF_LOOP_3_nand_nl);
  nand_167_nl <= NOT(CONV_SL_1_1(SF_LOOP_3_acc_5_psp_sva_8_0=STD_LOGIC_VECTOR'("111111111"))
      AND SF_LOOP_3_acc_5_psp_sva_9 AND CONV_SL_1_1(fsm_output(8 DOWNTO 6)=STD_LOGIC_VECTOR'("100")));
  mux_268_nl <= MUX_s_1_2_2(or_455_cse, or_454_cse, fsm_output(6));
  mux_269_nl <= MUX_s_1_2_2(nand_167_nl, mux_268_nl, fsm_output(5));
  mux_270_nl <= MUX_s_1_2_2(or_412_cse, mux_269_nl, fsm_output(1));
  or_453_nl <= CONV_SL_1_1(fsm_output(8 DOWNTO 5)/=STD_LOGIC_VECTOR'("1001"));
  mux_271_nl <= MUX_s_1_2_2(mux_270_nl, or_453_nl, fsm_output(0));
  SF_LOOP_3_SF_LOOP_3_or_5_nl <= mux_271_nl OR or_dcpl_109 OR (fsm_output(2));
  attention_5_1_384_384_8_48_attn_output_2D_rsci_re_d <= STD_LOGIC_VECTOR'( '1' &
      SF_LOOP_3_SF_LOOP_3_or_5_nl);
  nor_375_nl <= NOT((fsm_output(6)) OR (fsm_output(2)) OR (fsm_output(1)) OR (fsm_output(7))
      OR (NOT nor_tmp_95));
  nor_376_nl <= NOT((NOT (fsm_output(6))) OR (NOT (fsm_output(2))) OR (NOT (fsm_output(1)))
      OR (NOT (fsm_output(7))) OR (fsm_output(8)) OR (fsm_output(3)));
  mux_267_nl <= MUX_s_1_2_2(nor_375_nl, nor_376_nl, fsm_output(5));
  ATTN_2D_LOOP_3_nand_nl <= NOT(mux_267_nl AND (fsm_output(4)) AND (fsm_output(0)));
  attention_5_1_384_384_8_48_attn_output_2D_rsci_we_d <= STD_LOGIC_VECTOR'( '1' &
      ATTN_2D_LOOP_3_nand_nl);
  QUANTIZE_ACTIVATION_LOOP_5_1_nand_1_nl <= NOT(and_dcpl_208 AND and_dcpl_205 AND
      (z_out_55_0 XOR z_out_55_1) AND LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1);
  attention_5_1_384_384_8_48_quantized_final_output_rsci_re_d <= STD_LOGIC_VECTOR'(
      '1' & QUANTIZE_ACTIVATION_LOOP_5_1_nand_1_nl);
  xor_cse <= and_850_cse XOR (fsm_output(2));
  QUANTIZE_ACTIVATION_LOOP_5_1_nand_nl <= NOT(xor_cse AND and_929_cse AND and_dcpl_79
      AND and_dcpl_98);
  attention_5_1_384_384_8_48_quantized_final_output_rsci_we_d <= STD_LOGIC_VECTOR'(
      '1' & QUANTIZE_ACTIVATION_LOOP_5_1_nand_nl);
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_re_d <= STD_LOGIC_VECTOR'( '1' & (NOT
      and_dcpl_196));
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_we_d <= STD_LOGIC_VECTOR'( '1' & APPLY_ROTARY_POS_EMB_LOOP_3_nand_1_rmff);
  apply_rotary_pos_emb_1_8_48_rotated_k_rsci_re_d <= STD_LOGIC_VECTOR'( '1' & (NOT
      and_dcpl_196));
  apply_rotary_pos_emb_1_8_48_rotated_k_rsci_we_d <= STD_LOGIC_VECTOR'( '1' & APPLY_ROTARY_POS_EMB_LOOP_3_nand_1_rmff);
  input_rsci_data_in_d <= MUX_v_40_2_2(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(strm_in_rsci_idat_mxwt),40)),
      (z_out_10(67 DOWNTO 28)), and_dcpl_447);
  for_for_mux1h_1_nl <= MUX1HOT_v_3_3_2((reg_SF_LOOP_3_acc_38_1_ftd_2(8 DOWNTO 6)),
      (reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(8 DOWNTO 6)), attention_sqrt_1_for_i_4_0_sva_2_0,
      STD_LOGIC_VECTOR'( and_dcpl_440 & and_461_ssc & for_for_or_cse));
  for_for_not_1_nl <= NOT and_462_ssc;
  for_for_and_1_nl <= MUX_v_3_2_2(STD_LOGIC_VECTOR'("000"), for_for_mux1h_1_nl, for_for_not_1_nl);
  for_for_mux1h_5_nl <= MUX1HOT_v_4_3_2((reg_SF_LOOP_3_acc_38_1_ftd_2(5 DOWNTO 2)),
      (reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(5 DOWNTO 2)), APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt,
      STD_LOGIC_VECTOR'( and_dcpl_440 & and_461_ssc & for_for_or_cse));
  for_for_not_2_nl <= NOT and_462_ssc;
  for_for_and_2_nl <= MUX_v_4_2_2(STD_LOGIC_VECTOR'("0000"), for_for_mux1h_5_nl,
      for_for_not_2_nl);
  for_for_mux1h_6_nl <= MUX1HOT_v_2_4_2((reg_SF_LOOP_3_acc_38_1_ftd_2(1 DOWNTO 0)),
      (reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(1 DOWNTO 0)), STD_LOGIC_VECTOR'(
      "10"), STD_LOGIC_VECTOR'( "01"), STD_LOGIC_VECTOR'( and_dcpl_440 & and_461_ssc
      & and_dcpl_445 & and_dcpl_446));
  for_for_nor_nl <= NOT(and_462_ssc OR and_dcpl_404);
  for_for_and_3_nl <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"), for_for_mux1h_6_nl, for_for_nor_nl);
  for_for_or_2_nl <= MUX_v_2_2_2(for_for_and_3_nl, STD_LOGIC_VECTOR'("11"), and_463_ssc);
  input_rsci_addr_d <= for_for_and_1_nl & for_for_and_2_nl & for_for_or_2_nl;
  INIT_2D_MEM_LOOP_2_3_mux_nl <= MUX_v_24_2_2((z_out_56(23 DOWNTO 0)), (LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z(39
      DOWNTO 16)), and_447_ssc);
  not_2250_nl <= NOT and_dcpl_419;
  INIT_2D_MEM_LOOP_2_3_INIT_2D_MEM_LOOP_2_3_and_nl <= MUX_v_24_2_2(STD_LOGIC_VECTOR'("000000000000000000000000"),
      INIT_2D_MEM_LOOP_2_3_mux_nl, not_2250_nl);
  INIT_2D_MEM_LOOP_2_3_mux_1_nl <= MUX_v_16_2_2((output_rsci_data_out_d(15 DOWNTO
      0)), (LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z(15
      DOWNTO 0)), and_447_ssc);
  not_2251_nl <= NOT and_dcpl_419;
  INIT_2D_MEM_LOOP_2_3_INIT_2D_MEM_LOOP_2_3_and_1_nl <= MUX_v_16_2_2(STD_LOGIC_VECTOR'("0000000000000000"),
      INIT_2D_MEM_LOOP_2_3_mux_1_nl, not_2251_nl);
  output_rsci_data_in_d <= INIT_2D_MEM_LOOP_2_3_INIT_2D_MEM_LOOP_2_3_and_nl & INIT_2D_MEM_LOOP_2_3_INIT_2D_MEM_LOOP_2_3_and_1_nl;
  mux_325_nl <= MUX_s_1_2_2(or_tmp_349, (fsm_output(2)), fsm_output(5));
  INIT_2D_MEM_LOOP_2_3_or_nl <= (not_tmp_260 AND nor_581_cse AND and_dcpl_79 AND
      and_dcpl_28) OR ((NOT mux_325_nl) AND nor_581_cse AND and_dcpl_79 AND (fsm_output(0))
      AND (fsm_output(6)));
  output_rsci_addr_d <= MUX_v_9_2_2(SF_LOOP_3_acc_45_itm_8_0, reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3,
      INIT_2D_MEM_LOOP_2_3_or_nl);
  QUANTIZE_ACTIVATION_LOOP_5_or_3_nl <= (QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_cse_17
      AND and_dcpl_404) OR (QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_cse_17
      AND and_dcpl_405);
  QUANTIZE_ACTIVATION_LOOP_5_or_4_nl <= ((NOT((NOT QUANTIZE_ACTIVATION_LOOP_5_2_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs_mx1)
      OR QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_cse_17)) AND and_dcpl_404)
      OR ((NOT((NOT QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs_mx1)
      OR QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_cse_17)) AND and_dcpl_405);
  QUANTIZE_ACTIVATION_LOOP_5_and_7_nl <= (NOT z_out_53_40) AND QUANTIZE_ACTIVATION_LOOP_5_or_5_m1c;
  QUANTIZE_ACTIVATION_LOOP_5_and_8_nl <= z_out_53_40 AND QUANTIZE_ACTIVATION_LOOP_5_or_5_m1c;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_data_in_d <= MUX1HOT_v_8_6_2(STD_LOGIC_VECTOR'(
      "10000000"), STD_LOGIC_VECTOR'( "01111111"), (z_out_8(7 DOWNTO 0)), (z_out_50(7
      DOWNTO 0)), (reg_GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_ftd & reg_GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_ftd_1
      & reg_GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_ftd_2), (reg_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_ftd
      & reg_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_ftd_1 & reg_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_ftd_2),
      STD_LOGIC_VECTOR'( QUANTIZE_ACTIVATION_LOOP_5_or_3_nl & QUANTIZE_ACTIVATION_LOOP_5_or_4_nl
      & QUANTIZE_ACTIVATION_LOOP_5_and_7_nl & QUANTIZE_ACTIVATION_LOOP_5_and_8_nl
      & and_dcpl_406 & and_dcpl_407));
  QUANTIZE_ACTIVATION_LOOP_5_or_6_cse <= and_dcpl_404 OR and_dcpl_405 OR and_dcpl_406
      OR and_dcpl_407 OR and_dcpl_395;
  QUANTIZE_ACTIVATION_LOOP_5_mux1h_4_nl <= MUX1HOT_v_3_3_2(attention_sqrt_1_for_i_4_0_sva_2_0,
      (reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd & reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd_1),
      (reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd & reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1),
      STD_LOGIC_VECTOR'( QUANTIZE_ACTIVATION_LOOP_5_or_6_cse & and_dcpl_373 & and_dcpl_388));
  QUANTIZE_ACTIVATION_LOOP_5_mux1h_7_nl <= MUX1HOT_v_4_3_2(APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt,
      GEMM_3D_FLOAT_LOOP_4_1_acc_23_cse_sva, APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp,
      STD_LOGIC_VECTOR'( QUANTIZE_ACTIVATION_LOOP_5_or_6_cse & and_dcpl_373 & and_dcpl_388));
  QUANTIZE_ACTIVATION_LOOP_5_mux1h_9_nl <= MUX1HOT_v_2_5_2(STD_LOGIC_VECTOR'( "01"),
      STD_LOGIC_VECTOR'( "10"), LINEAR_FORWARD_NO_MUL_LOOP_5_l_2_0_lpi_3_dfm_1_0_1,
      reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1, reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_2,
      STD_LOGIC_VECTOR'( and_dcpl_404 & and_dcpl_406 & and_dcpl_373 & and_dcpl_395
      & and_dcpl_388));
  not_2240_nl <= NOT and_dcpl_405;
  QUANTIZE_ACTIVATION_LOOP_5_and_nl <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"), QUANTIZE_ACTIVATION_LOOP_5_mux1h_9_nl,
      not_2240_nl);
  QUANTIZE_ACTIVATION_LOOP_5_or_2_nl <= MUX_v_2_2_2(QUANTIZE_ACTIVATION_LOOP_5_and_nl,
      STD_LOGIC_VECTOR'("11"), and_dcpl_407);
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_addr_d <= QUANTIZE_ACTIVATION_LOOP_5_mux1h_4_nl
      & QUANTIZE_ACTIVATION_LOOP_5_mux1h_7_nl & QUANTIZE_ACTIVATION_LOOP_5_or_2_nl;
  and_416_itm <= and_dcpl_396 AND and_dcpl_126;
  INIT_2D_MEM_LOOP_2_2_mux_4_nl <= MUX_v_24_2_2((z_out_56(23 DOWNTO 0)), (rms_norm_384_div_cmp_z(39
      DOWNTO 16)), and_416_itm);
  INIT_2D_MEM_LOOP_2_2_mux_7_nl <= MUX_v_16_2_2((attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d(15
      DOWNTO 0)), (rms_norm_384_div_cmp_z(15 DOWNTO 0)), and_416_itm);
  not_2249_nl <= NOT and_dcpl_366;
  attention_5_1_384_384_8_48_q_proj_re_rsci_data_in_d <= MUX_v_40_2_2(STD_LOGIC_VECTOR'("0000000000000000000000000000000000000000"),
      (INIT_2D_MEM_LOOP_2_2_mux_4_nl & INIT_2D_MEM_LOOP_2_2_mux_7_nl), not_2249_nl);
  nor_385_nl <= NOT((fsm_output(2)) OR (fsm_output(0)) OR (fsm_output(1)) OR (fsm_output(4)));
  and_867_nl <= (fsm_output(2)) AND (fsm_output(0)) AND (fsm_output(1)) AND (fsm_output(4));
  mux_311_nl <= MUX_s_1_2_2(nor_385_nl, and_867_nl, fsm_output(5));
  INIT_2D_MEM_LOOP_2_or_cse <= and_dcpl_368 OR (mux_311_nl AND and_dcpl_247 AND CONV_SL_1_1(fsm_output(7
      DOWNTO 6)=STD_LOGIC_VECTOR'("01")));
  INIT_2D_MEM_LOOP_2_mux1h_2_nl <= MUX1HOT_v_4_3_2((SF_LOOP_3_acc_45_itm_8_0(8 DOWNTO
      5)), (reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(8 DOWNTO 5)), z_out_23,
      STD_LOGIC_VECTOR'( and_dcpl_366 & INIT_2D_MEM_LOOP_2_or_cse & and_dcpl_387));
  INIT_2D_MEM_LOOP_2_mux1h_5_nl <= MUX1HOT_s_1_3_2((SF_LOOP_3_acc_45_itm_8_0(4)),
      (reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(4)), (z_out_14(0)), STD_LOGIC_VECTOR'(
      and_dcpl_366 & INIT_2D_MEM_LOOP_2_or_cse & and_dcpl_387));
  INIT_2D_MEM_LOOP_2_mux1h_7_nl <= MUX1HOT_v_4_3_2((SF_LOOP_3_acc_45_itm_8_0(3 DOWNTO
      0)), (reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(3 DOWNTO 0)), (reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_1
      & reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_2), STD_LOGIC_VECTOR'( and_dcpl_366
      & INIT_2D_MEM_LOOP_2_or_cse & and_dcpl_387));
  attention_5_1_384_384_8_48_q_proj_re_rsci_addr_d <= INIT_2D_MEM_LOOP_2_mux1h_2_nl
      & INIT_2D_MEM_LOOP_2_mux1h_5_nl & INIT_2D_MEM_LOOP_2_mux1h_7_nl;
  INIT_2D_MEM_LOOP_2_2_mux_2_nl <= MUX_v_24_2_2((z_out_56(23 DOWNTO 0)), (rms_norm_384_div_cmp_z(39
      DOWNTO 16)), and_dcpl_374);
  not_2247_nl <= NOT and_dcpl_366;
  INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_and_2_nl <= MUX_v_24_2_2(STD_LOGIC_VECTOR'("000000000000000000000000"),
      INIT_2D_MEM_LOOP_2_2_mux_2_nl, not_2247_nl);
  INIT_2D_MEM_LOOP_2_2_mux_3_nl <= MUX_s_1_2_2((reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(0)),
      (rms_norm_384_div_cmp_z(15)), and_dcpl_374);
  INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_and_3_nl <= INIT_2D_MEM_LOOP_2_2_mux_3_nl
      AND (NOT and_dcpl_366);
  INIT_2D_MEM_LOOP_2_2_mux_6_nl <= MUX_v_15_2_2(reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_2,
      (rms_norm_384_div_cmp_z(14 DOWNTO 0)), and_dcpl_374);
  not_2268_nl <= NOT and_dcpl_366;
  INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_and_6_nl <= MUX_v_15_2_2(STD_LOGIC_VECTOR'("000000000000000"),
      INIT_2D_MEM_LOOP_2_2_mux_6_nl, not_2268_nl);
  attention_5_1_384_384_8_48_k_proj_re_rsci_data_in_d <= INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_and_2_nl
      & INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_and_3_nl & INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_and_6_nl;
  INIT_2D_MEM_LOOP_2_1_mux1h_3_nl <= MUX1HOT_v_4_3_2((reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(8
      DOWNTO 5)), (SF_LOOP_3_acc_45_itm_8_0(8 DOWNTO 5)), z_out_26, STD_LOGIC_VECTOR'(
      and_dcpl_366 & INIT_2D_MEM_LOOP_2_1_or_ssc & and_dcpl_387));
  INIT_2D_MEM_LOOP_2_1_mux1h_7_nl <= MUX1HOT_s_1_3_2((reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(4)),
      (SF_LOOP_3_acc_45_itm_8_0(4)), (z_out_18(0)), STD_LOGIC_VECTOR'( and_dcpl_366
      & INIT_2D_MEM_LOOP_2_1_or_ssc & and_dcpl_387));
  INIT_2D_MEM_LOOP_2_1_mux1h_8_nl <= MUX1HOT_v_4_3_2((reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(3
      DOWNTO 0)), (SF_LOOP_3_acc_45_itm_8_0(3 DOWNTO 0)), (reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd
      & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1), STD_LOGIC_VECTOR'( and_dcpl_366 &
      INIT_2D_MEM_LOOP_2_1_or_ssc & and_dcpl_387));
  attention_5_1_384_384_8_48_k_proj_re_rsci_addr_d <= INIT_2D_MEM_LOOP_2_1_mux1h_3_nl
      & INIT_2D_MEM_LOOP_2_1_mux1h_7_nl & INIT_2D_MEM_LOOP_2_1_mux1h_8_nl;
  INIT_2D_MEM_LOOP_2_2_mux_nl <= MUX_v_24_2_2((z_out_56(23 DOWNTO 0)), (LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z(39
      DOWNTO 16)), and_dcpl_374);
  not_2245_nl <= NOT and_dcpl_366;
  INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_and_nl <= MUX_v_24_2_2(STD_LOGIC_VECTOR'("000000000000000000000000"),
      INIT_2D_MEM_LOOP_2_2_mux_nl, not_2245_nl);
  INIT_2D_MEM_LOOP_2_2_mux_1_nl <= MUX_s_1_2_2((reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(0)),
      (LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z(15)),
      and_dcpl_374);
  INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_and_1_nl <= INIT_2D_MEM_LOOP_2_2_mux_1_nl
      AND (NOT and_dcpl_366);
  INIT_2D_MEM_LOOP_2_2_mux_5_nl <= MUX_v_15_2_2(reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_2,
      (LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z(14
      DOWNTO 0)), and_dcpl_374);
  not_2267_nl <= NOT and_dcpl_366;
  INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_and_5_nl <= MUX_v_15_2_2(STD_LOGIC_VECTOR'("000000000000000"),
      INIT_2D_MEM_LOOP_2_2_mux_5_nl, not_2267_nl);
  attention_5_1_384_384_8_48_v_proj_re_rsci_data_in_d <= INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_and_nl
      & INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_and_1_nl & INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_and_5_nl;
  INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_nl <= MUX_v_4_2_2((reg_SF_LOOP_3_acc_38_1_ftd_2(8
      DOWNTO 5)), z_out_26, and_dcpl_348);
  INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_1_nl <= MUX_s_1_2_2((reg_SF_LOOP_3_acc_38_1_ftd_2(4)),
      (z_out_18(0)), and_dcpl_348);
  INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_2_nl <= MUX_v_4_2_2((reg_SF_LOOP_3_acc_38_1_ftd_2(3
      DOWNTO 0)), (reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_1 & reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_2),
      and_dcpl_348);
  attention_5_1_384_384_8_48_v_proj_re_rsci_addr_d <= INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_nl
      & INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_1_nl & INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_2_nl;
  attention_5_1_384_384_8_48_q_proj_rsci_data_in_d <= attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d(39
      DOWNTO 0);
  RESHAPE_2D_TO_3D_LOOP_3_mux1h_1_nl <= MUX1HOT_v_3_4_2((GEMM_3D_FLOAT_LOOP_4_1_acc_28_cse_sva(3
      DOWNTO 1)), (APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva_2(4 DOWNTO 2)), APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_4_2,
      (z_out_23(3 DOWNTO 1)), STD_LOGIC_VECTOR'( and_dcpl_342 & and_dcpl_348 & and_dcpl_197
      & and_dcpl_196));
  RESHAPE_2D_TO_3D_LOOP_3_mux1h_5_nl <= MUX1HOT_s_1_4_2((GEMM_3D_FLOAT_LOOP_4_1_acc_28_cse_sva(0)),
      (APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva_2(1)), APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_1,
      (z_out_23(0)), STD_LOGIC_VECTOR'( and_dcpl_342 & and_dcpl_348 & and_dcpl_197
      & and_dcpl_196));
  RESHAPE_2D_TO_3D_LOOP_3_mux1h_3_nl <= MUX1HOT_s_1_4_2((GEMM_3D_FLOAT_LOOP_4_1_acc_23_cse_sva(0)),
      (APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva_2(0)), APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_0,
      (z_out_14(0)), STD_LOGIC_VECTOR'( and_dcpl_342 & and_dcpl_348 & and_dcpl_197
      & and_dcpl_196));
  RESHAPE_2D_TO_3D_LOOP_3_or_nl <= and_dcpl_342 OR and_dcpl_196;
  RESHAPE_2D_TO_3D_LOOP_3_mux1h_4_nl <= MUX1HOT_s_1_3_2((reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_1(1)),
      (attention_sqrt_1_for_i_4_0_sva_4_3(0)), reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1,
      STD_LOGIC_VECTOR'( RESHAPE_2D_TO_3D_LOOP_3_or_nl & and_dcpl_348 & and_dcpl_197));
  RESHAPE_2D_TO_3D_LOOP_3_RESHAPE_2D_TO_3D_LOOP_3_mux_nl <= MUX_v_3_2_2(((reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_1(0))
      & reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_2), attention_sqrt_1_for_i_4_0_sva_2_0,
      RESHAPE_2D_TO_3D_LOOP_3_1_or_cse);
  attention_5_1_384_384_8_48_q_proj_rsci_addr_d <= RESHAPE_2D_TO_3D_LOOP_3_mux1h_1_nl
      & RESHAPE_2D_TO_3D_LOOP_3_mux1h_5_nl & RESHAPE_2D_TO_3D_LOOP_3_mux1h_3_nl &
      RESHAPE_2D_TO_3D_LOOP_3_mux1h_4_nl & RESHAPE_2D_TO_3D_LOOP_3_RESHAPE_2D_TO_3D_LOOP_3_mux_nl;
  attention_5_1_384_384_8_48_k_proj_rsci_data_in_d <= attention_5_1_384_384_8_48_k_proj_re_rsci_data_out_d(39
      DOWNTO 0);
  RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_1_nl <= MUX1HOT_v_3_4_2((APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp(3
      DOWNTO 1)), (APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva_2(4 DOWNTO 2)), APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_4_2,
      (z_out_23(3 DOWNTO 1)), STD_LOGIC_VECTOR'( and_dcpl_342 & and_dcpl_348 & and_dcpl_197
      & and_dcpl_196));
  RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_6_nl <= MUX1HOT_s_1_4_2((APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp(0)),
      (APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva_2(1)), APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_1,
      (z_out_23(0)), STD_LOGIC_VECTOR'( and_dcpl_342 & and_dcpl_348 & and_dcpl_197
      & and_dcpl_196));
  RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_3_nl <= MUX1HOT_s_1_4_2((APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(0)),
      (APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva_2(0)), APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_0,
      (z_out_14(0)), STD_LOGIC_VECTOR'( and_dcpl_342 & and_dcpl_348 & and_dcpl_197
      & and_dcpl_196));
  RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_4_nl <= MUX1HOT_s_1_4_2((reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd(1)),
      (attention_sqrt_1_for_i_4_0_sva_4_3(0)), reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1,
      (reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_1(1)), STD_LOGIC_VECTOR'( and_dcpl_342
      & and_dcpl_348 & and_dcpl_197 & and_dcpl_196));
  RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_5_nl <= MUX1HOT_s_1_3_2((reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd(0)),
      (attention_sqrt_1_for_i_4_0_sva_2_0(2)), (reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_1(0)),
      STD_LOGIC_VECTOR'( and_dcpl_342 & RESHAPE_2D_TO_3D_LOOP_3_1_or_cse & and_dcpl_196));
  RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_7_nl <= MUX1HOT_v_2_3_2(reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1,
      (attention_sqrt_1_for_i_4_0_sva_2_0(1 DOWNTO 0)), reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_2,
      STD_LOGIC_VECTOR'( and_dcpl_342 & RESHAPE_2D_TO_3D_LOOP_3_1_or_cse & and_dcpl_196));
  attention_5_1_384_384_8_48_k_proj_rsci_addr_d <= RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_1_nl
      & RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_6_nl & RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_3_nl
      & RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_4_nl & RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_5_nl
      & RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_7_nl;
  attention_5_1_384_384_8_48_v_proj_rsci_data_in_d <= attention_5_1_384_384_8_48_v_proj_re_rsci_data_out_d(39
      DOWNTO 0);
  RESHAPE_2D_TO_3D_LOOP_3_2_RESHAPE_2D_TO_3D_LOOP_3_2_mux_nl <= MUX_v_4_2_2(APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp,
      z_out_26, and_dcpl_337);
  RESHAPE_2D_TO_3D_LOOP_3_2_RESHAPE_2D_TO_3D_LOOP_3_2_mux_1_nl <= MUX_s_1_2_2((APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(0)),
      (z_out_18(0)), and_dcpl_337);
  attention_5_1_384_384_8_48_v_proj_rsci_addr_d <= RESHAPE_2D_TO_3D_LOOP_3_2_RESHAPE_2D_TO_3D_LOOP_3_2_mux_nl
      & RESHAPE_2D_TO_3D_LOOP_3_2_RESHAPE_2D_TO_3D_LOOP_3_2_mux_1_nl & reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_1
      & reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_2;
  APPLY_ROTARY_POS_EMB_LOOP_6_mul_4_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED'( SIGNED(apply_rotary_pos_emb_1_8_48_rotated_q_rsci_data_out_d(39
      DOWNTO 0)) * SIGNED(reg_SF_LOOP_3_acc_38_1_ftd_1 & reg_SF_LOOP_3_acc_38_1_ftd_2)),
      56));
  APPLY_ROTARY_POS_EMB_LOOP_6_acc_7_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(z_out_10(55
      DOWNTO 0)) + CONV_SIGNED(SIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_mul_4_nl), 56),
      56));
  attention_5_1_384_384_8_48_q_embed_rsci_data_in_d <= APPLY_ROTARY_POS_EMB_LOOP_6_acc_7_nl(55
      DOWNTO 16);
  APPLY_ROTARY_POS_EMB_LOOP_6_or_3_nl <= and_dcpl_275 OR and_dcpl_277 OR and_dcpl_278
      OR and_dcpl_279 OR and_dcpl_280 OR and_dcpl_281 OR and_dcpl_282 OR and_dcpl_284
      OR and_dcpl_285 OR and_dcpl_286 OR and_dcpl_287 OR and_dcpl_288 OR and_dcpl_289
      OR and_dcpl_290 OR and_dcpl_291;
  APPLY_ROTARY_POS_EMB_LOOP_6_or_5_nl <= and_dcpl_293 OR and_dcpl_294 OR and_dcpl_295
      OR and_dcpl_296 OR and_dcpl_297 OR and_dcpl_298 OR and_dcpl_299 OR and_dcpl_300
      OR and_dcpl_301 OR and_dcpl_302 OR and_dcpl_303 OR and_dcpl_304 OR and_dcpl_305
      OR and_dcpl_306 OR and_dcpl_307 OR and_dcpl_308;
  APPLY_ROTARY_POS_EMB_LOOP_6_mux1h_4_nl <= MUX1HOT_v_4_5_2(APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp,
      (GEMM_3D_FLOAT_LOOP_4_1_mul_sdt_1_sva_mx0w5(4 DOWNTO 1)), (GEMM_3D_FLOAT_LOOP_4_mul_sdt_15_sva(4
      DOWNTO 1)), GEMM_3D_FLOAT_LOOP_4_1_acc_34_sdt, CACHE_UPDATE_LOOP_3_k_5_0_sva_1_3_0,
      STD_LOGIC_VECTOR'( and_dcpl_329 & and_dcpl_274 & APPLY_ROTARY_POS_EMB_LOOP_6_or_3_nl
      & APPLY_ROTARY_POS_EMB_LOOP_6_or_4_cse & APPLY_ROTARY_POS_EMB_LOOP_6_or_5_nl));
  APPLY_ROTARY_POS_EMB_LOOP_6_or_6_nl <= and_dcpl_275 OR and_dcpl_277 OR and_dcpl_278
      OR and_dcpl_279 OR and_dcpl_280 OR and_dcpl_281 OR and_dcpl_282 OR and_dcpl_284
      OR and_dcpl_285 OR and_dcpl_286 OR and_dcpl_287 OR and_dcpl_288 OR and_dcpl_289
      OR and_dcpl_290 OR and_dcpl_291 OR and_dcpl_293 OR and_dcpl_294 OR and_dcpl_295
      OR and_dcpl_296 OR and_dcpl_297 OR and_dcpl_298 OR and_dcpl_299 OR and_dcpl_300
      OR and_dcpl_301 OR and_dcpl_302 OR and_dcpl_303 OR and_dcpl_304 OR and_dcpl_305
      OR and_dcpl_306 OR and_dcpl_307 OR and_dcpl_308;
  APPLY_ROTARY_POS_EMB_LOOP_6_mux1h_16_nl <= MUX1HOT_s_1_4_2((APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(0)),
      (GEMM_3D_FLOAT_LOOP_4_1_mul_sdt_1_sva_mx0w5(0)), (GEMM_3D_FLOAT_LOOP_4_mul_sdt_15_sva(0)),
      (NOT (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(0))), STD_LOGIC_VECTOR'( and_dcpl_329
      & and_dcpl_274 & APPLY_ROTARY_POS_EMB_LOOP_6_or_6_nl & APPLY_ROTARY_POS_EMB_LOOP_6_or_4_cse));
  APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_or_nl <= ((reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_1(1))
      AND (NOT(and_dcpl_284 OR and_dcpl_285 OR and_dcpl_286 OR and_dcpl_287 OR and_dcpl_288
      OR and_dcpl_289 OR and_dcpl_290 OR and_dcpl_291 OR and_dcpl_292 OR and_dcpl_301
      OR and_dcpl_302 OR and_dcpl_303 OR and_dcpl_304 OR and_dcpl_305 OR and_dcpl_306
      OR and_dcpl_307 OR and_dcpl_308 OR and_dcpl_318 OR and_dcpl_319 OR and_dcpl_320
      OR and_dcpl_321 OR and_dcpl_322 OR and_dcpl_323 OR and_dcpl_324))) OR and_dcpl_274
      OR and_dcpl_275 OR and_dcpl_277 OR and_dcpl_278 OR and_dcpl_279 OR and_dcpl_280
      OR and_dcpl_281 OR and_dcpl_282 OR and_dcpl_293 OR and_dcpl_294 OR and_dcpl_295
      OR and_dcpl_296 OR and_dcpl_297 OR and_dcpl_298 OR and_dcpl_299 OR and_dcpl_300
      OR and_dcpl_309 OR and_dcpl_310 OR and_dcpl_311 OR and_dcpl_312 OR and_dcpl_313
      OR and_dcpl_314 OR and_dcpl_315 OR and_dcpl_317;
  APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_or_1_nl <= ((reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_1(0))
      AND (NOT(and_dcpl_279 OR and_dcpl_280 OR and_dcpl_281 OR and_dcpl_282 OR and_dcpl_288
      OR and_dcpl_289 OR and_dcpl_290 OR and_dcpl_291 OR and_dcpl_292 OR and_dcpl_297
      OR and_dcpl_298 OR and_dcpl_299 OR and_dcpl_300 OR and_dcpl_305 OR and_dcpl_306
      OR and_dcpl_307 OR and_dcpl_308 OR and_dcpl_313 OR and_dcpl_314 OR and_dcpl_315
      OR and_dcpl_317 OR and_dcpl_322 OR and_dcpl_323 OR and_dcpl_324))) OR and_dcpl_274
      OR and_dcpl_275 OR and_dcpl_277 OR and_dcpl_278 OR and_dcpl_284 OR and_dcpl_285
      OR and_dcpl_286 OR and_dcpl_287 OR and_dcpl_293 OR and_dcpl_294 OR and_dcpl_295
      OR and_dcpl_296 OR and_dcpl_301 OR and_dcpl_302 OR and_dcpl_303 OR and_dcpl_304
      OR and_dcpl_309 OR and_dcpl_310 OR and_dcpl_311 OR and_dcpl_312 OR and_dcpl_318
      OR and_dcpl_319 OR and_dcpl_320 OR and_dcpl_321;
  APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_or_2_nl <= ((reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_2(1))
      AND (NOT(and_dcpl_277 OR and_dcpl_278 OR and_dcpl_281 OR and_dcpl_282 OR and_dcpl_286
      OR and_dcpl_287 OR and_dcpl_290 OR and_dcpl_291 OR and_dcpl_292 OR and_dcpl_295
      OR and_dcpl_296 OR and_dcpl_299 OR and_dcpl_300 OR and_dcpl_303 OR and_dcpl_304
      OR and_dcpl_307 OR and_dcpl_308 OR and_dcpl_311 OR and_dcpl_312 OR and_dcpl_315
      OR and_dcpl_317 OR and_dcpl_320 OR and_dcpl_321 OR and_dcpl_324))) OR and_dcpl_274
      OR and_dcpl_275 OR and_dcpl_279 OR and_dcpl_280 OR and_dcpl_284 OR and_dcpl_285
      OR and_dcpl_288 OR and_dcpl_289 OR and_dcpl_293 OR and_dcpl_294 OR and_dcpl_297
      OR and_dcpl_298 OR and_dcpl_301 OR and_dcpl_302 OR and_dcpl_305 OR and_dcpl_306
      OR and_dcpl_309 OR and_dcpl_310 OR and_dcpl_313 OR and_dcpl_314 OR and_dcpl_318
      OR and_dcpl_319 OR and_dcpl_322 OR and_dcpl_323;
  APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_or_3_nl <= ((reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_2(0))
      AND (NOT(and_dcpl_275 OR and_dcpl_278 OR and_dcpl_280 OR and_dcpl_282 OR and_dcpl_285
      OR and_dcpl_287 OR and_dcpl_289 OR and_dcpl_291 OR and_dcpl_292 OR and_dcpl_294
      OR and_dcpl_296 OR and_dcpl_298 OR and_dcpl_300 OR and_dcpl_302 OR and_dcpl_304
      OR and_dcpl_306 OR and_dcpl_308 OR and_dcpl_310 OR and_dcpl_312 OR and_dcpl_314
      OR and_dcpl_317 OR and_dcpl_319 OR and_dcpl_321 OR and_dcpl_323))) OR and_dcpl_274
      OR and_dcpl_277 OR and_dcpl_279 OR and_dcpl_281 OR and_dcpl_284 OR and_dcpl_286
      OR and_dcpl_288 OR and_dcpl_290 OR and_dcpl_293 OR and_dcpl_295 OR and_dcpl_297
      OR and_dcpl_299 OR and_dcpl_301 OR and_dcpl_303 OR and_dcpl_305 OR and_dcpl_307
      OR and_dcpl_309 OR and_dcpl_311 OR and_dcpl_313 OR and_dcpl_315 OR and_dcpl_318
      OR and_dcpl_320 OR and_dcpl_322 OR and_dcpl_324;
  attention_5_1_384_384_8_48_q_embed_rsci_addr_d <= APPLY_ROTARY_POS_EMB_LOOP_6_mux1h_4_nl
      & APPLY_ROTARY_POS_EMB_LOOP_6_mux1h_16_nl & APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_or_nl
      & APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_or_1_nl & APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_or_2_nl
      & APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_or_3_nl;
  APPLY_ROTARY_POS_EMB_LOOP_6_mul_9_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED'( SIGNED(apply_rotary_pos_emb_1_8_48_rotated_k_rsci_data_out_d(39
      DOWNTO 0)) * SIGNED(reg_SF_LOOP_3_acc_38_1_ftd_1 & reg_SF_LOOP_3_acc_38_1_ftd_2)),
      56));
  APPLY_ROTARY_POS_EMB_LOOP_6_acc_14_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(z_out_11(55
      DOWNTO 0)) + CONV_SIGNED(SIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_mul_9_nl), 56),
      56));
  attention_5_1_384_384_8_48_k_embed_rsci_data_in_d <= APPLY_ROTARY_POS_EMB_LOOP_6_acc_14_nl(55
      DOWNTO 16);
  APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_mux_nl <= MUX_v_4_2_2(APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp,
      z_out_23, and_dcpl_337);
  APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_mux_1_nl <= MUX_s_1_2_2((APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(0)),
      (z_out_15(0)), and_dcpl_337);
  APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_mux_2_nl <= MUX_v_2_2_2(reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_1,
      reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd, and_dcpl_337);
  APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_mux_3_nl <= MUX_v_2_2_2(reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_2,
      reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1, and_dcpl_337);
  attention_5_1_384_384_8_48_k_embed_rsci_addr_d <= APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_mux_nl
      & APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_mux_1_nl & APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_mux_2_nl
      & APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_mux_3_nl;
  CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nand_nl <= NOT(CONV_SL_1_1(attention_sqrt_1_for_i_4_0_sva_2_0=STD_LOGIC_VECTOR'("101")));
  attention_5_1_384_384_8_48_k_cache_upd_rsci_data_in_d <= MUX_v_40_2_2((attention_5_1_384_384_8_48_k_embed_rsci_data_out_d(39
      DOWNTO 0)), (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd
      & reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1),
      CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nand_nl);
  CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_mux_nl <= MUX_v_4_2_2(APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp,
      z_out_16, and_dcpl_328);
  CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_mux_1_nl <= MUX_s_1_2_2((APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva_4_2(0)),
      (z_out_32(2)), and_dcpl_328);
  CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_mux_4_nl <= MUX_v_2_2_2(APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva_1_0,
      (z_out_32(1 DOWNTO 0)), and_dcpl_328);
  CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_mux_2_nl <= MUX_s_1_2_2(CACHE_UPDATE_LOOP_3_qif_acc_3_ncse_0,
      (z_out_27(0)), and_dcpl_328);
  CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_mux_3_nl <= MUX_v_2_2_2(reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd,
      reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_1, and_dcpl_328);
  CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_mux_5_nl <= MUX_v_2_2_2(reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1,
      reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_2, and_dcpl_328);
  attention_5_1_384_384_8_48_k_cache_upd_rsci_addr_d <= CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_mux_nl
      & CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_mux_1_nl & CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_mux_4_nl
      & CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_mux_2_nl & CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_mux_3_nl
      & CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_mux_5_nl;
  CACHE_UPDATE_LOOP_3_1_mux_1_nl <= MUX_s_1_2_2((attention_5_1_384_384_8_48_v_proj_rsci_data_out_d(39)),
      reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd,
      CACHE_UPDATE_LOOP_3_1_CACHE_UPDATE_LOOP_3_1_nand_ssc);
  CACHE_UPDATE_LOOP_3_1_mux_2_nl <= MUX_v_24_2_2((attention_5_1_384_384_8_48_v_proj_rsci_data_out_d(38
      DOWNTO 15)), reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1,
      CACHE_UPDATE_LOOP_3_1_CACHE_UPDATE_LOOP_3_1_nand_ssc);
  CACHE_UPDATE_LOOP_3_1_mux_3_nl <= MUX_v_15_2_2((attention_5_1_384_384_8_48_v_proj_rsci_data_out_d(14
      DOWNTO 0)), reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_2,
      CACHE_UPDATE_LOOP_3_1_CACHE_UPDATE_LOOP_3_1_nand_ssc);
  attention_5_1_384_384_8_48_v_cache_upd_rsci_data_in_d <= CACHE_UPDATE_LOOP_3_1_mux_1_nl
      & CACHE_UPDATE_LOOP_3_1_mux_2_nl & CACHE_UPDATE_LOOP_3_1_mux_3_nl;
  CACHE_UPDATE_LOOP_3_1_or_1_ssc <= and_dcpl_263 OR and_dcpl_264 OR and_dcpl_265
      OR and_dcpl_267 OR and_dcpl_268 OR and_dcpl_269;
  CACHE_UPDATE_LOOP_3_1_mux1h_1_nl <= MUX1HOT_v_4_7_2(APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt,
      (z_out_36(3 DOWNTO 0)), (GEMM_3D_FLOAT_LOOP_4_1_acc_20_itm(6 DOWNTO 3)), GEMM_3D_FLOAT_LOOP_4_1_acc_45_psp,
      GEMM_3D_FLOAT_LOOP_4_1_acc_43_psp, GEMM_3D_FLOAT_LOOP_4_1_acc_42_psp, GEMM_3D_FLOAT_LOOP_4_1_acc_41_psp,
      STD_LOGIC_VECTOR'( and_dcpl_325 & and_dcpl_263 & and_dcpl_264 & and_dcpl_265
      & and_dcpl_267 & and_dcpl_268 & and_dcpl_269));
  CACHE_UPDATE_LOOP_3_1_mux1h_3_nl <= MUX1HOT_s_1_7_2((APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_4_2(0)),
      (z_out_17(2)), (GEMM_3D_FLOAT_LOOP_4_1_acc_20_itm(2)), (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_5_2(1)),
      (GEMM_3D_FLOAT_LOOP_4_1_acc_34_sdt(2)), (APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_4_2(1)),
      (CACHE_UPDATE_LOOP_3_k_5_0_sva_1_3_0(2)), STD_LOGIC_VECTOR'( and_dcpl_325 &
      and_dcpl_263 & and_dcpl_264 & and_dcpl_265 & and_dcpl_267 & and_dcpl_268 &
      and_dcpl_269));
  CACHE_UPDATE_LOOP_3_1_mux1h_7_nl <= MUX1HOT_s_1_7_2(APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_1,
      (z_out_17(1)), (GEMM_3D_FLOAT_LOOP_4_1_acc_20_itm(1)), (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_5_2(0)),
      (GEMM_3D_FLOAT_LOOP_4_1_acc_34_sdt(1)), (APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_4_2(0)),
      (CACHE_UPDATE_LOOP_3_k_5_0_sva_1_3_0(1)), STD_LOGIC_VECTOR'( and_dcpl_325 &
      and_dcpl_263 & and_dcpl_264 & and_dcpl_265 & and_dcpl_267 & and_dcpl_268 &
      and_dcpl_269));
  CACHE_UPDATE_LOOP_3_1_mux1h_5_nl <= MUX1HOT_s_1_7_2(APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_0,
      (z_out_17(0)), (GEMM_3D_FLOAT_LOOP_4_1_acc_20_itm(0)), (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0(1)),
      (GEMM_3D_FLOAT_LOOP_4_1_acc_34_sdt(0)), APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_1,
      (CACHE_UPDATE_LOOP_3_k_5_0_sva_1_3_0(0)), STD_LOGIC_VECTOR'( and_dcpl_325 &
      and_dcpl_263 & and_dcpl_264 & and_dcpl_265 & and_dcpl_267 & and_dcpl_268 &
      and_dcpl_269));
  CACHE_UPDATE_LOOP_3_1_or_nl <= and_dcpl_264 OR and_dcpl_267 OR and_dcpl_269;
  CACHE_UPDATE_LOOP_3_1_mux1h_4_nl <= MUX1HOT_s_1_5_2((CACHE_UPDATE_LOOP_3_1_qif_acc_3_ncse_2_0(0)),
      (z_out_27(0)), (CACHE_UPDATE_LOOP_3_k_5_0_sva_5_4(0)), (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0(0)),
      APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_0, STD_LOGIC_VECTOR'( and_dcpl_325
      & and_dcpl_263 & CACHE_UPDATE_LOOP_3_1_or_nl & and_dcpl_265 & and_dcpl_268));
  CACHE_UPDATE_LOOP_3_1_CACHE_UPDATE_LOOP_3_1_mux_nl <= MUX_v_2_2_2(reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_1,
      reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd, CACHE_UPDATE_LOOP_3_1_or_1_ssc);
  CACHE_UPDATE_LOOP_3_1_CACHE_UPDATE_LOOP_3_1_mux_2_nl <= MUX_v_2_2_2(reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_2,
      reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1, CACHE_UPDATE_LOOP_3_1_or_1_ssc);
  attention_5_1_384_384_8_48_v_cache_upd_rsci_addr_d <= CACHE_UPDATE_LOOP_3_1_mux1h_1_nl
      & CACHE_UPDATE_LOOP_3_1_mux1h_3_nl & CACHE_UPDATE_LOOP_3_1_mux1h_7_nl & CACHE_UPDATE_LOOP_3_1_mux1h_5_nl
      & CACHE_UPDATE_LOOP_3_1_mux1h_4_nl & CACHE_UPDATE_LOOP_3_1_CACHE_UPDATE_LOOP_3_1_mux_nl
      & CACHE_UPDATE_LOOP_3_1_CACHE_UPDATE_LOOP_3_1_mux_2_nl;
  attention_5_1_384_384_8_48_k_proj_transposed_rsci_data_in_d <= attention_5_1_384_384_8_48_k_cache_upd_rsci_data_out_d(39
      DOWNTO 0);
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_10_itm <= and_dcpl_287 OR and_dcpl_288 OR and_dcpl_289
      OR and_dcpl_290 OR and_dcpl_291;
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_1_nl <= MUX1HOT_s_1_17_2((APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(3)),
      (z_out_35(3)), (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_5_2(3)), (GEMM_3D_FLOAT_LOOP_4_acc_252_psp(3)),
      (GEMM_3D_FLOAT_LOOP_4_acc_21_cse_sva(6)), (GEMM_3D_FLOAT_LOOP_4_acc_251_psp(3)),
      (GEMM_3D_FLOAT_LOOP_4_1_acc_45_psp(3)), (reg_GEMM_3D_FLOAT_LOOP_4_acc_96_cse(3)),
      (GEMM_3D_FLOAT_LOOP_4_acc_248_psp(3)), (reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_1(1)),
      (GEMM_3D_FLOAT_LOOP_4_acc_247_psp(3)), (GEMM_3D_FLOAT_LOOP_4_1_acc_28_cse_sva(3)),
      (GEMM_3D_FLOAT_LOOP_4_acc_246_psp(3)), (GEMM_3D_FLOAT_LOOP_4_1_acc_23_cse_sva(3)),
      (GEMM_3D_FLOAT_LOOP_4_acc_245_psp(3)), (APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva_4_2(2)),
      (GEMM_3D_FLOAT_LOOP_4_acc_244_psp(3)), STD_LOGIC_VECTOR'( and_dcpl_272 & and_dcpl_274
      & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_cse & and_dcpl_280 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_1_cse
      & and_dcpl_286 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_2_cse & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_57_cse
      & and_dcpl_298 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_4_cse & and_dcpl_303 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_5_cse
      & and_dcpl_309 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_6_cse & and_dcpl_314 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_7_cse
      & and_dcpl_320));
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_and_nl <= TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_1_nl
      AND (NOT(and_dcpl_287 OR and_dcpl_288 OR and_dcpl_289 OR and_dcpl_290 OR and_dcpl_291));
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_3_nl <= MUX1HOT_v_2_18_2((APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(2
      DOWNTO 1)), (z_out_35(2 DOWNTO 1)), (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_5_2(2
      DOWNTO 1)), (GEMM_3D_FLOAT_LOOP_4_acc_252_psp(2 DOWNTO 1)), (GEMM_3D_FLOAT_LOOP_4_acc_21_cse_sva(5
      DOWNTO 4)), (GEMM_3D_FLOAT_LOOP_4_acc_251_psp(2 DOWNTO 1)), (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(2
      DOWNTO 1)), (GEMM_3D_FLOAT_LOOP_4_1_acc_45_psp(2 DOWNTO 1)), (reg_GEMM_3D_FLOAT_LOOP_4_acc_96_cse(2
      DOWNTO 1)), (GEMM_3D_FLOAT_LOOP_4_acc_248_psp(2 DOWNTO 1)), STD_LOGIC_VECTOR'(
      (reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_1(0)) & (reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_2(1))),
      (GEMM_3D_FLOAT_LOOP_4_acc_247_psp(2 DOWNTO 1)), (GEMM_3D_FLOAT_LOOP_4_1_acc_28_cse_sva(2
      DOWNTO 1)), (GEMM_3D_FLOAT_LOOP_4_acc_246_psp(2 DOWNTO 1)), (GEMM_3D_FLOAT_LOOP_4_1_acc_23_cse_sva(2
      DOWNTO 1)), (GEMM_3D_FLOAT_LOOP_4_acc_245_psp(2 DOWNTO 1)), (APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva_4_2(1
      DOWNTO 0)), (GEMM_3D_FLOAT_LOOP_4_acc_244_psp(2 DOWNTO 1)), STD_LOGIC_VECTOR'(
      and_dcpl_272 & and_dcpl_274 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_cse & and_dcpl_280
      & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_1_cse & and_dcpl_286 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_10_itm
      & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_2_cse & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_57_cse
      & and_dcpl_298 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_4_cse & and_dcpl_303 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_5_cse
      & and_dcpl_309 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_6_cse & and_dcpl_314 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_7_cse
      & and_dcpl_320));
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_12_nl <= MUX1HOT_s_1_18_2((APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(0)),
      (z_out_35(0)), (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_5_2(0)), (GEMM_3D_FLOAT_LOOP_4_acc_252_psp(0)),
      (GEMM_3D_FLOAT_LOOP_4_acc_21_cse_sva(3)), (GEMM_3D_FLOAT_LOOP_4_acc_251_psp(0)),
      (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(0)), (GEMM_3D_FLOAT_LOOP_4_1_acc_45_psp(0)),
      (reg_GEMM_3D_FLOAT_LOOP_4_acc_96_cse(0)), (GEMM_3D_FLOAT_LOOP_4_acc_248_psp(0)),
      (reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_2(0)), (GEMM_3D_FLOAT_LOOP_4_acc_247_psp(0)),
      (GEMM_3D_FLOAT_LOOP_4_1_acc_28_cse_sva(0)), (GEMM_3D_FLOAT_LOOP_4_acc_246_psp(0)),
      (GEMM_3D_FLOAT_LOOP_4_1_acc_23_cse_sva(0)), (GEMM_3D_FLOAT_LOOP_4_acc_245_psp(0)),
      (APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva_1_0(1)), (GEMM_3D_FLOAT_LOOP_4_acc_244_psp(0)),
      STD_LOGIC_VECTOR'( and_dcpl_272 & and_dcpl_274 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_cse
      & and_dcpl_280 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_1_cse & and_dcpl_286 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_10_itm
      & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_2_cse & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_57_cse
      & and_dcpl_298 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_4_cse & and_dcpl_303 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_5_cse
      & and_dcpl_309 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_6_cse & and_dcpl_314 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_7_cse
      & and_dcpl_320));
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_19_nl <= and_dcpl_287 OR and_dcpl_288 OR and_dcpl_289
      OR and_dcpl_290 OR and_dcpl_291 OR and_dcpl_294 OR and_dcpl_295 OR and_dcpl_296
      OR and_dcpl_297;
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_4_nl <= MUX1HOT_s_1_18_2((reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(6)),
      (z_out_29(6)), (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0(1)), (GEMM_3D_FLOAT_LOOP_4_1_acc_20_itm(5)),
      (GEMM_3D_FLOAT_LOOP_4_acc_21_cse_sva(2)), (GEMM_3D_FLOAT_LOOP_4_acc_250_sdt_2_0(2)),
      (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(2)), (GEMM_3D_FLOAT_LOOP_4_1_acc_41_psp(2)),
      (LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_lpi_3_6_0(6)), (LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_dfm_6_0(5)),
      (GEMM_3D_FLOAT_LOOP_4_1_acc_43_psp(2)), (reg_GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_ftd(2)),
      (CACHE_UPDATE_LOOP_3_qif_acc_3_ncse_2_1(0)), (reg_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_ftd(2)),
      (GEMM_3D_FLOAT_LOOP_4_1_acc_42_psp(2)), (LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_6_0(5)),
      (APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva_1_0(0)), (GEMM_3D_FLOAT_LOOP_4_acc_243_sdt_2_0(2)),
      STD_LOGIC_VECTOR'( and_dcpl_272 & and_dcpl_274 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_cse
      & and_dcpl_280 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_1_cse & and_dcpl_286 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_19_nl
      & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_2_cse & and_dcpl_293 & and_dcpl_298 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_4_cse
      & and_dcpl_303 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_5_cse & and_dcpl_309 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_6_cse
      & and_dcpl_314 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_7_cse & and_dcpl_320));
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_27_nl <= and_dcpl_287 OR and_dcpl_288 OR and_dcpl_289
      OR and_dcpl_290 OR and_dcpl_291 OR and_dcpl_294 OR and_dcpl_295 OR and_dcpl_296
      OR and_dcpl_297 OR and_dcpl_315 OR and_dcpl_317 OR and_dcpl_318 OR and_dcpl_319;
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_5_nl <= MUX1HOT_s_1_17_2((reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(5)),
      (z_out_29(5)), (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0(0)), (GEMM_3D_FLOAT_LOOP_4_1_acc_20_itm(4)),
      (GEMM_3D_FLOAT_LOOP_4_acc_21_cse_sva(1)), (GEMM_3D_FLOAT_LOOP_4_acc_250_sdt_2_0(1)),
      (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(1)), (GEMM_3D_FLOAT_LOOP_4_1_acc_41_psp(1)),
      (LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_lpi_3_6_0(5)), (LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_dfm_6_0(4)),
      (GEMM_3D_FLOAT_LOOP_4_1_acc_43_psp(1)), (reg_GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_ftd(1)),
      CACHE_UPDATE_LOOP_3_qif_acc_3_ncse_0, (reg_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_ftd(1)),
      (GEMM_3D_FLOAT_LOOP_4_1_acc_42_psp(1)), (LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_6_0(4)),
      (GEMM_3D_FLOAT_LOOP_4_acc_243_sdt_2_0(1)), STD_LOGIC_VECTOR'( and_dcpl_272
      & and_dcpl_274 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_cse & and_dcpl_280 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_1_cse
      & and_dcpl_286 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_27_nl & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_2_cse
      & and_dcpl_293 & and_dcpl_298 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_4_cse & and_dcpl_303
      & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_5_cse & and_dcpl_309 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_6_cse
      & and_dcpl_314 & and_dcpl_320));
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_32_nl <= and_dcpl_275 OR and_dcpl_277 OR and_dcpl_278
      OR and_dcpl_279 OR and_dcpl_287 OR and_dcpl_288 OR and_dcpl_289 OR and_dcpl_290
      OR and_dcpl_291 OR and_dcpl_294 OR and_dcpl_295 OR and_dcpl_296 OR and_dcpl_297
      OR and_dcpl_304 OR and_dcpl_305 OR and_dcpl_306 OR and_dcpl_307 OR and_dcpl_308
      OR and_dcpl_315 OR and_dcpl_317 OR and_dcpl_318 OR and_dcpl_319;
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_6_nl <= MUX1HOT_s_1_15_2((reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(4)),
      (z_out_29(4)), (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(0)), (GEMM_3D_FLOAT_LOOP_4_1_acc_20_itm(3)),
      (GEMM_3D_FLOAT_LOOP_4_acc_21_cse_sva(0)), (GEMM_3D_FLOAT_LOOP_4_acc_250_sdt_2_0(0)),
      (GEMM_3D_FLOAT_LOOP_4_1_acc_41_psp(0)), (LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_lpi_3_6_0(4)),
      (LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_dfm_6_0(3)), (GEMM_3D_FLOAT_LOOP_4_1_acc_43_psp(0)),
      (reg_GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_ftd(0)), (reg_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_ftd(0)),
      (GEMM_3D_FLOAT_LOOP_4_1_acc_42_psp(0)), (LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_6_0(3)),
      (GEMM_3D_FLOAT_LOOP_4_acc_243_sdt_2_0(0)), STD_LOGIC_VECTOR'( and_dcpl_272
      & and_dcpl_274 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_32_nl & and_dcpl_280 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_1_cse
      & and_dcpl_286 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_2_cse & and_dcpl_293 & and_dcpl_298
      & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_4_cse & and_dcpl_303 & and_dcpl_309 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_6_cse
      & and_dcpl_314 & and_dcpl_320));
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_7_nl <= MUX1HOT_s_1_9_2((reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(3)),
      (GEMM_3D_FLOAT_LOOP_4_acc_40_cse_sva(3)), (GEMM_3D_FLOAT_LOOP_4_1_acc_20_itm(2)),
      APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_1, (CACHE_UPDATE_LOOP_3_1_qif_acc_3_ncse_2_0(2)),
      (LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_dfm_6_0(2)), (reg_GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_ftd_1(1)),
      (LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_6_0(2)), (GEMM_3D_FLOAT_LOOP_4_acc_185_sdt(1)),
      STD_LOGIC_VECTOR'( and_dcpl_272 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_38_cse
      & and_dcpl_280 & and_dcpl_286 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_39_cse &
      and_dcpl_298 & and_dcpl_303 & and_dcpl_314 & and_dcpl_320));
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_37_nl <= (TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_7_nl
      AND (NOT(and_dcpl_278 OR and_dcpl_279 OR and_dcpl_284 OR and_dcpl_291 OR and_dcpl_292
      OR and_dcpl_296 OR and_dcpl_297 OR and_dcpl_301 OR and_dcpl_308 OR and_dcpl_312
      OR and_dcpl_313 OR and_dcpl_318 OR and_dcpl_285 OR and_dcpl_290 OR and_dcpl_302
      OR and_dcpl_307 OR and_dcpl_319 OR and_dcpl_324))) OR and_dcpl_274 OR and_dcpl_282
      OR and_dcpl_287 OR and_dcpl_288 OR and_dcpl_293 OR and_dcpl_300 OR and_dcpl_304
      OR and_dcpl_305 OR and_dcpl_309 OR and_dcpl_317 OR and_dcpl_321 OR and_dcpl_322
      OR and_dcpl_275 OR and_dcpl_281 OR and_dcpl_294 OR and_dcpl_299 OR and_dcpl_310
      OR and_dcpl_315;
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_8_nl <= MUX1HOT_s_1_11_2((reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(2)),
      (reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1(1)), (GEMM_3D_FLOAT_LOOP_4_acc_40_cse_sva(2)),
      (GEMM_3D_FLOAT_LOOP_4_1_acc_20_itm(1)), (attention_sqrt_1_for_i_4_0_sva_2_0(2)),
      APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_1, (CACHE_UPDATE_LOOP_3_1_qif_acc_3_ncse_2_0(1)),
      (LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_dfm_6_0(1)), (reg_GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_ftd_1(0)),
      (LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_6_0(1)), (GEMM_3D_FLOAT_LOOP_4_acc_185_sdt(1)),
      STD_LOGIC_VECTOR'( and_dcpl_272 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_41_cse
      & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_38_cse & and_dcpl_280 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_43_cse
      & and_dcpl_286 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_39_cse & and_dcpl_298 &
      and_dcpl_303 & and_dcpl_314 & and_dcpl_320));
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_40_nl <= (TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_8_nl
      AND (NOT(and_dcpl_279 OR and_dcpl_282 OR and_dcpl_288 OR and_dcpl_291 OR and_dcpl_292
      OR and_dcpl_297 OR and_dcpl_300 OR and_dcpl_305 OR and_dcpl_308 OR and_dcpl_313
      OR and_dcpl_317 OR and_dcpl_322))) OR and_dcpl_274 OR and_dcpl_278 OR and_dcpl_284
      OR and_dcpl_287 OR and_dcpl_293 OR and_dcpl_296 OR and_dcpl_301 OR and_dcpl_304
      OR and_dcpl_309 OR and_dcpl_312 OR and_dcpl_318 OR and_dcpl_321;
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_47_nl <= and_dcpl_278 OR and_dcpl_282 OR and_dcpl_287
      OR and_dcpl_291 OR and_dcpl_292 OR and_dcpl_296 OR and_dcpl_300 OR and_dcpl_304
      OR and_dcpl_308 OR and_dcpl_312 OR and_dcpl_317 OR and_dcpl_321;
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_9_nl <= MUX1HOT_s_1_16_2((reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(1)),
      (z_out_29(1)), (reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1(0)), (GEMM_3D_FLOAT_LOOP_4_acc_40_cse_sva(1)),
      (reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd(1)), (LINEAR_FORWARD_NO_MUL_LOOP_5_1_l_2_0_lpi_3_1_0(1)),
      (GEMM_3D_FLOAT_LOOP_4_1_acc_20_itm(0)), (attention_sqrt_1_for_i_4_0_sva_2_0(1)),
      APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_1, (CACHE_UPDATE_LOOP_3_1_qif_acc_3_ncse_2_0(0)),
      (LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_lpi_3_6_0(1)), (LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_dfm_6_0(0)),
      (reg_GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_ftd_2(1)), (reg_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_ftd_2(1)),
      (LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_6_0(0)), (GEMM_3D_FLOAT_LOOP_4_acc_185_sdt(1)),
      STD_LOGIC_VECTOR'( and_dcpl_272 & and_dcpl_274 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_41_cse
      & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_38_cse & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_47_nl
      & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_48_cse & and_dcpl_280 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_43_cse
      & and_dcpl_286 & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_39_cse & and_dcpl_293 &
      and_dcpl_298 & and_dcpl_303 & and_dcpl_309 & and_dcpl_314 & and_dcpl_320));
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_51_nl <= and_dcpl_275 OR and_dcpl_278 OR and_dcpl_280
      OR and_dcpl_282 OR and_dcpl_285 OR and_dcpl_287 OR and_dcpl_289 OR and_dcpl_291
      OR and_dcpl_292 OR and_dcpl_294 OR and_dcpl_296 OR and_dcpl_298 OR and_dcpl_300
      OR and_dcpl_302 OR and_dcpl_304 OR and_dcpl_306 OR and_dcpl_308 OR and_dcpl_310
      OR and_dcpl_312 OR and_dcpl_314 OR and_dcpl_317 OR and_dcpl_319 OR and_dcpl_321
      OR and_dcpl_323;
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_10_nl <= MUX1HOT_s_1_11_2((reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(0)),
      (z_out_29(0)), (reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd(0)), (GEMM_3D_FLOAT_LOOP_4_acc_40_cse_sva(0)),
      (LINEAR_FORWARD_NO_MUL_LOOP_5_1_l_2_0_lpi_3_1_0(0)), (attention_sqrt_1_for_i_4_0_sva_2_0(0)),
      APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_0, (LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_lpi_3_6_0(0)),
      (reg_GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_ftd_2(0)), (reg_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_ftd_2(0)),
      (GEMM_3D_FLOAT_LOOP_4_acc_185_sdt(0)), STD_LOGIC_VECTOR'( and_dcpl_272 & and_dcpl_274
      & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_51_nl & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_38_cse
      & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_48_cse & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_43_cse
      & and_dcpl_286 & and_dcpl_293 & and_dcpl_303 & and_dcpl_309 & and_dcpl_320));
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_55_nl <= and_dcpl_274 OR and_dcpl_275 OR and_dcpl_277
      OR and_dcpl_278 OR and_dcpl_279 OR and_dcpl_280 OR and_dcpl_281 OR and_dcpl_282
      OR and_dcpl_284 OR and_dcpl_285 OR and_dcpl_286 OR and_dcpl_287 OR and_dcpl_288
      OR and_dcpl_289 OR and_dcpl_290 OR and_dcpl_291 OR and_dcpl_292 OR and_dcpl_293
      OR and_dcpl_294 OR and_dcpl_295 OR and_dcpl_296 OR and_dcpl_297 OR and_dcpl_298
      OR and_dcpl_299 OR and_dcpl_300 OR and_dcpl_301 OR and_dcpl_302 OR and_dcpl_303
      OR and_dcpl_304 OR and_dcpl_305 OR and_dcpl_306 OR and_dcpl_307 OR and_dcpl_308
      OR and_dcpl_309 OR and_dcpl_310 OR and_dcpl_311 OR and_dcpl_312 OR and_dcpl_313
      OR and_dcpl_314 OR and_dcpl_315 OR and_dcpl_317 OR and_dcpl_318 OR and_dcpl_319
      OR and_dcpl_320 OR and_dcpl_321 OR and_dcpl_322 OR and_dcpl_323 OR and_dcpl_324;
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux_nl <= MUX_s_1_2_2((attention_sqrt_1_for_i_4_0_sva_2_0(0)),
      reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1, TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_55_nl);
  attention_5_1_384_384_8_48_k_proj_transposed_rsci_addr_d <= TRANSPOSE_LAST_TWO_DIMS_LOOP_3_and_nl
      & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_3_nl & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_12_nl
      & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_4_nl & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_5_nl
      & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_6_nl & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_37_nl
      & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_40_nl & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_9_nl
      & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_10_nl & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux_nl;
  SF_LOOP_3_acc_8_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(z_out) + SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd,
      1),2)) & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(32
      DOWNTO 17)) & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(6
      DOWNTO 5)) & (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(21))
      & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(12),
      1),2)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(3),
      1),4)) & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(9
      DOWNTO 8)) & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_2(4
      DOWNTO 3))), 38));
  and_289_nl <= and_dcpl_262 AND and_dcpl_114;
  and_290_nl <= and_dcpl_195 AND and_dcpl_266;
  attention_5_1_384_384_8_48_attn_weights_rsci_data_in_d <= MUX1HOT_v_40_4_2(z_out_59,
      STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_8_nl), 38),40)),
      (z_out_11(55 DOWNTO 16)), (SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_z(39 DOWNTO
      0)), STD_LOGIC_VECTOR'( and_289_nl & and_dcpl_256 & and_dcpl_261 & and_290_nl));
  GEMM_3D_FLOAT_LOOP_4_or_7_itm <= and_dcpl_265 OR and_dcpl_267;
  GEMM_3D_FLOAT_LOOP_4_or_21_cse <= and_274_ssc OR and_dcpl_260;
  mux1h_6_nl <= MUX1HOT_v_3_7_2((APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp(3 DOWNTO
      1)), (APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(3 DOWNTO 1)), (GEMM_3D_FLOAT_LOOP_4_1_mul_sdt_1_sva_mx0w5(4
      DOWNTO 2)), APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva_4_2, (GEMM_3D_FLOAT_LOOP_4_1_acc_23_cse_sva(3
      DOWNTO 1)), (GEMM_3D_FLOAT_LOOP_4_1_acc_28_cse_sva(3 DOWNTO 1)), (z_out_26(3
      DOWNTO 1)), STD_LOGIC_VECTOR'( GEMM_3D_FLOAT_LOOP_4_or_5_cse & and_dcpl_256
      & GEMM_3D_FLOAT_LOOP_4_or_6_cse & and_dcpl_264 & GEMM_3D_FLOAT_LOOP_4_or_7_itm
      & GEMM_3D_FLOAT_LOOP_4_or_8_cse & GEMM_3D_FLOAT_LOOP_4_or_21_cse));
  GEMM_3D_FLOAT_LOOP_4_mux1h_35_nl <= MUX1HOT_s_1_7_2((APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp(0)),
      (z_out_26(0)), (APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(0)), (GEMM_3D_FLOAT_LOOP_4_1_mul_sdt_1_sva_mx0w5(1)),
      (APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva_1_0(1)), (GEMM_3D_FLOAT_LOOP_4_1_acc_23_cse_sva(0)),
      (GEMM_3D_FLOAT_LOOP_4_1_acc_28_cse_sva(0)), STD_LOGIC_VECTOR'( GEMM_3D_FLOAT_LOOP_4_or_5_cse
      & GEMM_3D_FLOAT_LOOP_4_or_21_cse & and_dcpl_256 & GEMM_3D_FLOAT_LOOP_4_or_6_cse
      & and_dcpl_264 & GEMM_3D_FLOAT_LOOP_4_or_7_itm & GEMM_3D_FLOAT_LOOP_4_or_8_cse));
  GEMM_3D_FLOAT_LOOP_4_or_11_nl <= and_dcpl_264 OR and_dcpl_265 OR and_dcpl_267;
  GEMM_3D_FLOAT_LOOP_4_mux1h_24_nl <= MUX1HOT_s_1_7_2((APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(0)),
      (z_out_18(0)), (APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp(0)), (GEMM_3D_FLOAT_LOOP_4_1_mul_sdt_1_sva_mx0w5(0)),
      (z_out_18(0)), (APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva_1_0(0)), (NOT (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(0))),
      STD_LOGIC_VECTOR'( GEMM_3D_FLOAT_LOOP_4_or_5_cse & and_274_ssc & and_dcpl_256
      & GEMM_3D_FLOAT_LOOP_4_or_6_cse & and_dcpl_260 & GEMM_3D_FLOAT_LOOP_4_or_11_nl
      & GEMM_3D_FLOAT_LOOP_4_or_8_cse));
  GEMM_3D_FLOAT_LOOP_4_or_13_nl <= and_dcpl_260 OR and_dcpl_261;
  GEMM_3D_FLOAT_LOOP_4_mux_nl <= MUX_s_1_2_2(reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1,
      (attention_sqrt_1_for_i_4_0_sva_2_0(0)), GEMM_3D_FLOAT_LOOP_4_or_13_nl);
  GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_or_nl <= (GEMM_3D_FLOAT_LOOP_4_mux_nl
      AND (NOT(and_277_ssc OR and_dcpl_264 OR and_dcpl_267 OR and_dcpl_269))) OR
      and_dcpl_263 OR and_dcpl_265 OR and_dcpl_268;
  attention_5_1_384_384_8_48_attn_weights_rsci_addr_d <= mux1h_6_nl & GEMM_3D_FLOAT_LOOP_4_mux1h_35_nl
      & GEMM_3D_FLOAT_LOOP_4_mux1h_24_nl & GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_or_nl;
  attention_5_1_384_384_8_48_attn_output_rsci_data_in_d <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(z_out_61)
      + UNSIGNED(z_out_58(39 DOWNTO 0)), 40));
  GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mux_1_nl <= MUX_v_4_2_2(APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp,
      z_out_23, and_dcpl_245);
  GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mux_2_nl <= MUX_s_1_2_2((APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(0)),
      (z_out_14(0)), and_dcpl_245);
  GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mux_3_nl <= MUX_v_2_2_2(reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd,
      reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_1, and_dcpl_245);
  GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mux_5_nl <= MUX_v_2_2_2(reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1,
      reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_2, and_dcpl_245);
  attention_5_1_384_384_8_48_attn_output_rsci_addr_d <= GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mux_1_nl
      & GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mux_2_nl & GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mux_3_nl
      & GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mux_5_nl;
  attention_5_1_384_384_8_48_attn_output_2D_rsci_data_in_d <= MUX_v_40_2_2((attention_5_1_384_384_8_48_attn_output_rsci_data_out_d(39
      DOWNTO 0)), RMS_NORM_LOOP_2_2_mul_itm_71_32_1, and_dcpl_242);
  ATTN_2D_LOOP_3_mux1h_1_nl <= MUX1HOT_v_3_3_2((APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp(3
      DOWNTO 1)), (reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(8 DOWNTO 6)),
      attention_sqrt_1_for_i_4_0_sva_2_0, STD_LOGIC_VECTOR'( and_dcpl_235 & and_254_ssc
      & ATTN_2D_LOOP_3_or_cse));
  ATTN_2D_LOOP_3_not_1_nl <= NOT and_255_ssc;
  ATTN_2D_LOOP_3_and_nl <= MUX_v_3_2_2(STD_LOGIC_VECTOR'("000"), ATTN_2D_LOOP_3_mux1h_1_nl,
      ATTN_2D_LOOP_3_not_1_nl);
  ATTN_2D_LOOP_3_mux1h_4_nl <= MUX1HOT_s_1_3_2((APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp(0)),
      (reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(5)), (APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(3)),
      STD_LOGIC_VECTOR'( and_dcpl_235 & and_254_ssc & ATTN_2D_LOOP_3_or_cse));
  ATTN_2D_LOOP_3_and_1_nl <= ATTN_2D_LOOP_3_mux1h_4_nl AND (NOT and_255_ssc);
  ATTN_2D_LOOP_3_mux1h_6_nl <= MUX1HOT_s_1_3_2((APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(0)),
      (reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(4)), (APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(2)),
      STD_LOGIC_VECTOR'( and_dcpl_235 & and_254_ssc & ATTN_2D_LOOP_3_or_cse));
  ATTN_2D_LOOP_3_and_3_nl <= ATTN_2D_LOOP_3_mux1h_6_nl AND (NOT and_255_ssc);
  ATTN_2D_LOOP_3_mux1h_7_nl <= MUX1HOT_v_2_3_2(reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_1,
      (reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(3 DOWNTO 2)), (APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(1
      DOWNTO 0)), STD_LOGIC_VECTOR'( and_dcpl_235 & and_254_ssc & ATTN_2D_LOOP_3_or_cse));
  ATTN_2D_LOOP_3_not_3_nl <= NOT and_255_ssc;
  ATTN_2D_LOOP_3_and_4_nl <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"), ATTN_2D_LOOP_3_mux1h_7_nl,
      ATTN_2D_LOOP_3_not_3_nl);
  ATTN_2D_LOOP_3_mux1h_5_nl <= MUX1HOT_v_2_4_2(reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_2,
      (reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(1 DOWNTO 0)), STD_LOGIC_VECTOR'(
      "10"), STD_LOGIC_VECTOR'( "01"), STD_LOGIC_VECTOR'( and_dcpl_235 & and_254_ssc
      & and_dcpl_240 & and_dcpl_241));
  ATTN_2D_LOOP_3_nor_nl <= NOT(and_255_ssc OR and_dcpl_211);
  ATTN_2D_LOOP_3_and_2_nl <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"), ATTN_2D_LOOP_3_mux1h_5_nl,
      ATTN_2D_LOOP_3_nor_nl);
  ATTN_2D_LOOP_3_or_2_nl <= MUX_v_2_2_2(ATTN_2D_LOOP_3_and_2_nl, STD_LOGIC_VECTOR'("11"),
      and_257_ssc);
  attention_5_1_384_384_8_48_attn_output_2D_rsci_addr_d <= ATTN_2D_LOOP_3_and_nl
      & ATTN_2D_LOOP_3_and_1_nl & ATTN_2D_LOOP_3_and_3_nl & ATTN_2D_LOOP_3_and_4_nl
      & ATTN_2D_LOOP_3_or_2_nl;
  QUANTIZE_ACTIVATION_LOOP_5_1_or_nl <= (QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_cse_17
      AND and_dcpl_211) OR (QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_cse_17
      AND and_dcpl_212);
  QUANTIZE_ACTIVATION_LOOP_5_1_or_1_nl <= ((NOT((NOT QUANTIZE_ACTIVATION_LOOP_5_1_2_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs_mx1)
      OR QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_cse_17)) AND and_dcpl_211)
      OR ((NOT((NOT QUANTIZE_ACTIVATION_LOOP_5_1_1_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs_mx1)
      OR QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_cse_17)) AND and_dcpl_212);
  QUANTIZE_ACTIVATION_LOOP_5_1_and_8_nl <= (NOT z_out_53_40) AND QUANTIZE_ACTIVATION_LOOP_5_1_or_2_m1c;
  QUANTIZE_ACTIVATION_LOOP_5_1_and_9_nl <= z_out_53_40 AND QUANTIZE_ACTIVATION_LOOP_5_1_or_2_m1c;
  attention_5_1_384_384_8_48_quantized_final_output_rsci_data_in_d <= MUX1HOT_v_8_6_2(STD_LOGIC_VECTOR'(
      "10000000"), STD_LOGIC_VECTOR'( "01111111"), (z_out_8(7 DOWNTO 0)), (z_out_50(7
      DOWNTO 0)), (reg_GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_ftd & reg_GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_ftd_1
      & reg_GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_ftd_2), (reg_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_ftd
      & reg_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_ftd_1 & reg_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_ftd_2),
      STD_LOGIC_VECTOR'( QUANTIZE_ACTIVATION_LOOP_5_1_or_nl & QUANTIZE_ACTIVATION_LOOP_5_1_or_1_nl
      & QUANTIZE_ACTIVATION_LOOP_5_1_and_8_nl & QUANTIZE_ACTIVATION_LOOP_5_1_and_9_nl
      & and_dcpl_213 & and_dcpl_214));
  QUANTIZE_ACTIVATION_LOOP_5_1_QUANTIZE_ACTIVATION_LOOP_5_1_or_nl <= ((LINEAR_FORWARD_NO_MUL_LOOP_5_3_l_2_0_lpi_3_dfm_1_0_1(1))
      AND (NOT(and_dcpl_211 OR and_dcpl_212))) OR and_dcpl_213 OR and_dcpl_214;
  QUANTIZE_ACTIVATION_LOOP_5_1_QUANTIZE_ACTIVATION_LOOP_5_1_or_1_nl <= ((LINEAR_FORWARD_NO_MUL_LOOP_5_3_l_2_0_lpi_3_dfm_1_0_1(0))
      AND (NOT(and_dcpl_212 OR and_dcpl_213))) OR and_dcpl_211 OR and_dcpl_214;
  attention_5_1_384_384_8_48_quantized_final_output_rsci_addr_d <= attention_sqrt_1_for_i_4_0_sva_2_0
      & APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt & QUANTIZE_ACTIVATION_LOOP_5_1_QUANTIZE_ACTIVATION_LOOP_5_1_or_nl
      & QUANTIZE_ACTIVATION_LOOP_5_1_QUANTIZE_ACTIVATION_LOOP_5_1_or_1_nl;
  APPLY_ROTARY_POS_EMB_LOOP_3_acc_6_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED( -SIGNED(attention_5_1_384_384_8_48_q_proj_rsci_data_out_d(39
      DOWNTO 0)), 40));
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_data_in_d <= MUX_v_40_2_2((attention_5_1_384_384_8_48_q_proj_rsci_data_out_d(39
      DOWNTO 0)), STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(APPLY_ROTARY_POS_EMB_LOOP_3_acc_6_nl),
      40)), and_dcpl_198);
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_addr_d <= APPLY_ROTARY_POS_EMB_LOOP_3_mux1h_1_rmff_3_1
      & APPLY_ROTARY_POS_EMB_LOOP_3_mux1h_1_rmff_0 & APPLY_ROTARY_POS_EMB_LOOP_3_mux1h_17_rmff
      & APPLY_ROTARY_POS_EMB_LOOP_3_mux1h_16_rmff & APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_rmff_2
      & APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_rmff_1_0;
  APPLY_ROTARY_POS_EMB_LOOP_3_acc_12_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED( -SIGNED(attention_5_1_384_384_8_48_k_proj_rsci_data_out_d(39
      DOWNTO 0)), 40));
  apply_rotary_pos_emb_1_8_48_rotated_k_rsci_data_in_d <= MUX_v_40_2_2((attention_5_1_384_384_8_48_k_proj_rsci_data_out_d(39
      DOWNTO 0)), STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(APPLY_ROTARY_POS_EMB_LOOP_3_acc_12_nl),
      40)), and_dcpl_198);
  apply_rotary_pos_emb_1_8_48_rotated_k_rsci_addr_d <= APPLY_ROTARY_POS_EMB_LOOP_3_mux1h_1_rmff_3_1
      & APPLY_ROTARY_POS_EMB_LOOP_3_mux1h_1_rmff_0 & APPLY_ROTARY_POS_EMB_LOOP_3_mux1h_17_rmff
      & APPLY_ROTARY_POS_EMB_LOOP_3_mux1h_16_rmff & APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_rmff_2
      & APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_rmff_1_0;
  and_995_cse <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)=STD_LOGIC_VECTOR'("011")) AND
      nor_525_cse AND CONV_SL_1_1(fsm_output(3 DOWNTO 0)=STD_LOGIC_VECTOR'("1110"));
  and_dcpl_728 <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)=STD_LOGIC_VECTOR'("011")) AND
      nor_525_cse AND CONV_SL_1_1(fsm_output(3 DOWNTO 0)=STD_LOGIC_VECTOR'("1101"));
  operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_nand_nl <=
      NOT((operator_40_24_true_AC_TRN_AC_WRAP_acc_4_psp_sva_1(1)) AND (NOT (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(3))));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_30_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_28_mx0w3),
      8), 9) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(16))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(16))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(16))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(12),
      1),2))), 8), 9) + CONV_SIGNED(CONV_UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_nand_nl,
      1), 9), 9));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_32_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(18))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(18))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(18))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(18))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(14),
      1),2))), 10), 11) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_30_nl),
      11), 11));
  exs_tmp_1_12_0 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(20))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(20))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(20))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(20))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(20))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(16),
      1),2))), 12), 13) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_32_nl),
      13), 13));
  and_dcpl_749 <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)=STD_LOGIC_VECTOR'("011"));
  and_1055_cse <= nor_609_cse AND nor_525_cse AND not_tmp_21 AND and_dcpl_99;
  and_dcpl_763 <= and_dcpl_749 AND (fsm_output(5)) AND (fsm_output(4)) AND (fsm_output(3))
      AND (fsm_output(1)) AND and_dcpl_99;
  and_1076_cse <= nor_609_cse AND nor_525_cse AND CONV_SL_1_1(fsm_output(3 DOWNTO
      0)=STD_LOGIC_VECTOR'("0011"));
  and_dcpl_787 <= (NOT (fsm_output(8))) AND (fsm_output(7)) AND (fsm_output(6)) AND
      (fsm_output(5)) AND (fsm_output(4)) AND (fsm_output(3)) AND (NOT (fsm_output(1)))
      AND and_dcpl_125;
  and_dcpl_790 <= CONV_SL_1_1(fsm_output(3 DOWNTO 0)=STD_LOGIC_VECTOR'("0011"));
  and_dcpl_795 <= and_dcpl_6 AND (NOT (fsm_output(6))) AND nor_525_cse AND and_dcpl_790;
  and_dcpl_800 <= and_dcpl_6 AND (fsm_output(6)) AND nor_525_cse AND not_tmp_21 AND
      and_dcpl_125;
  and_dcpl_804 <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)=STD_LOGIC_VECTOR'("101")) AND
      nor_525_cse AND and_dcpl_790;
  operator_40_24_true_AC_TRN_AC_WRAP_2_nor_6_cse <= NOT(and_dcpl_787 OR and_dcpl_795);
  exu_tmp_5_6_0 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd
      & reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd_1 & GEMM_3D_FLOAT_LOOP_4_1_acc_23_cse_sva)
      + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(8
      DOWNTO 7)), 2), 7), 7));
  operator_40_24_true_AC_TRN_AC_WRAP_2_nor_11_cse <= NOT(and_dcpl_787 OR (and_dcpl_6
      AND (NOT (fsm_output(6))) AND nor_525_cse AND CONV_SL_1_1(fsm_output(3 DOWNTO
      0)=STD_LOGIC_VECTOR'("0011"))));
  and_dcpl_829 <= CONV_SL_1_1(fsm_output(5 DOWNTO 4)=STD_LOGIC_VECTOR'("11"));
  and_dcpl_855 <= and_dcpl_749 AND CONV_SL_1_1(fsm_output(5 DOWNTO 4)=STD_LOGIC_VECTOR'("11"));
  and_dcpl_856 <= and_dcpl_855 AND (fsm_output(3)) AND (NOT (fsm_output(1))) AND
      and_dcpl_125;
  and_1159_cse <= and_dcpl_749 AND (NOT (fsm_output(5))) AND (fsm_output(4)) AND
      (NOT (fsm_output(3))) AND (fsm_output(1)) AND and_dcpl_99;
  and_dcpl_874 <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)=STD_LOGIC_VECTOR'("101")) AND
      nor_525_cse AND not_tmp_21 AND and_dcpl_125;
  and_dcpl_877 <= and_dcpl_855 AND (fsm_output(3)) AND (fsm_output(1)) AND and_dcpl_99;
  operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_nand_nl
      <= NOT((reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1(1)) AND (NOT (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(3))));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_30_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_ftd
      & reg_GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_ftd_1 & reg_GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_ftd_2),
      8), 9) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(16))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(16))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(16))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(12),
      1),2))), 8), 9) + CONV_SIGNED(CONV_UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_nand_nl,
      1), 9), 9));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_32_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(18))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(18))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(18))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(18))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(14),
      1),2))), 10), 11) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_30_nl),
      11), 11));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_34_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(20))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(20))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(20))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(20))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(20))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(16),
      1),2))), 12), 13) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_32_nl),
      13), 13));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_36_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(22))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(22))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(22))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(22))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(22))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(22))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(18),
      1),2))), 14), 15) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_34_nl),
      15), 15));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_38_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(24))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(24))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(24))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(24))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(24))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(24))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(24))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(20),
      1),2))), 16), 17) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_36_nl),
      17), 17));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_40_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(26))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(26))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(26))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(26))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(26))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(26))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(26))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(26))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(22),
      1),2))), 18), 19) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_38_nl),
      19), 19));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_42_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(28))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(28))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(28))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(28))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(28))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(28))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(28))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(28))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(28))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(24),
      1),2))), 20), 21) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_40_nl),
      21), 21));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_44_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(30))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(30))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(30))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(30))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(30))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(30))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(30))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(30))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(30))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(30))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(26),
      1),2))), 22), 23) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_42_nl),
      23), 23));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_46_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(32))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(32))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(32))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(32))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(32))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(32))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(32))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(32))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(32))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(32))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(32))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(28),
      1),2))), 24), 25) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_44_nl),
      25), 25));
  exs_tmp_4_26_0 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(34))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(34))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(34))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(34))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(34))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(34))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(34))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(34))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(34))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(34))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(34))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(34))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(30),
      1),2))), 26), 27) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_46_nl),
      27), 27));
  operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc <= and_1055_cse OR and_dcpl_877;
  operator_40_24_true_AC_TRN_AC_WRAP_2_nor_14_cse <= NOT(and_1055_cse OR and_dcpl_877);
  and_dcpl_880 <= (fsm_output(3)) AND (fsm_output(1)) AND and_dcpl_107;
  and_dcpl_884 <= and_dcpl_176 AND CONV_SL_1_1(fsm_output(5 DOWNTO 4)=STD_LOGIC_VECTOR'("11"));
  and_dcpl_885 <= and_dcpl_884 AND and_dcpl_880;
  and_dcpl_887 <= (fsm_output(3)) AND (NOT (fsm_output(1)));
  and_dcpl_889 <= CONV_SL_1_1(fsm_output(5 DOWNTO 4)=STD_LOGIC_VECTOR'("01"));
  and_dcpl_893 <= and_dcpl_79 AND (NOT (fsm_output(6))) AND and_dcpl_889 AND and_dcpl_887
      AND nor_315_cse;
  and_dcpl_897 <= and_dcpl_6 AND CONV_SL_1_1(fsm_output(6 DOWNTO 4)=STD_LOGIC_VECTOR'("010"));
  and_dcpl_898 <= and_dcpl_897 AND and_dcpl_880;
  and_dcpl_901 <= and_dcpl_897 AND and_dcpl_887 AND and_dcpl_99;
  and_dcpl_902 <= (NOT (fsm_output(3))) AND (fsm_output(1));
  and_dcpl_905 <= and_dcpl_176 AND and_dcpl_889 AND and_dcpl_902 AND and_dcpl_99;
  nor_687_nl <= NOT((fsm_output(1)) OR (NOT (fsm_output(8))));
  nor_688_nl <= NOT((NOT (fsm_output(1))) OR (fsm_output(8)));
  mux_981_nl <= MUX_s_1_2_2(nor_687_nl, nor_688_nl, fsm_output(2));
  and_1208_cse <= mux_981_nl AND nor_450_cse AND nor_525_cse AND (fsm_output(3))
      AND (fsm_output(0));
  and_dcpl_914 <= CONV_SL_1_1(fsm_output(6 DOWNTO 3)=STD_LOGIC_VECTOR'("0111"));
  and_1214_cse <= xor_cse AND and_dcpl_6 AND and_dcpl_914;
  and_1216_cse <= (or_1328_cse XOR (fsm_output(2))) AND and_dcpl_79 AND and_dcpl_914;
  and_dcpl_922 <= and_dcpl_19 AND (NOT (fsm_output(6))) AND nor_525_cse AND and_dcpl_880;
  and_dcpl_924 <= and_dcpl_884 AND and_dcpl_902 AND and_dcpl_107;
  and_dcpl_932 <= nor_609_cse AND nor_525_cse AND not_tmp_21 AND and_dcpl_107;
  and_dcpl_939 <= and_dcpl_19 AND CONV_SL_1_1(fsm_output(6 DOWNTO 4)=STD_LOGIC_VECTOR'("101"));
  and_dcpl_940 <= and_dcpl_939 AND and_dcpl_887 AND nor_315_cse;
  and_dcpl_944 <= and_dcpl_939 AND CONV_SL_1_1(fsm_output(3 DOWNTO 0)=STD_LOGIC_VECTOR'("0111"));
  and_dcpl_946 <= and_dcpl_939 AND and_dcpl_887 AND and_dcpl_107;
  nor_696_cse <= NOT(CONV_SL_1_1(fsm_output(6 DOWNTO 5)/=STD_LOGIC_VECTOR'("01")));
  mux_982_nl <= MUX_s_1_2_2((fsm_output(6)), (NOT (fsm_output(6))), fsm_output(5));
  mux_983_nl <= MUX_s_1_2_2(mux_982_nl, nor_696_cse, fsm_output(4));
  nor_697_nl <= NOT(nor_525_cse OR (fsm_output(6)));
  mux_984_nl <= MUX_s_1_2_2(mux_983_nl, nor_697_nl, and_615_cse);
  and_dcpl_947 <= mux_984_nl AND and_dcpl_19;
  nor_698_nl <= NOT(CONV_SL_1_1(fsm_output(4 DOWNTO 3)/=STD_LOGIC_VECTOR'("10")));
  nor_699_nl <= NOT((fsm_output(0)) OR (NOT (fsm_output(1))) OR (NOT (fsm_output(3)))
      OR (fsm_output(4)));
  mux_985_nl <= MUX_s_1_2_2(nor_698_nl, nor_699_nl, fsm_output(2));
  and_dcpl_950 <= mux_985_nl AND and_dcpl_19 AND CONV_SL_1_1(fsm_output(6 DOWNTO
      5)=STD_LOGIC_VECTOR'("11"));
  and_dcpl_955 <= and_dcpl_19 AND (NOT (fsm_output(6))) AND nor_525_cse AND (fsm_output(3))
      AND (fsm_output(1)) AND and_dcpl_107;
  and_dcpl_962 <= nor_609_cse AND CONV_SL_1_1(fsm_output(5 DOWNTO 4)=STD_LOGIC_VECTOR'("10"));
  and_dcpl_963 <= and_dcpl_962 AND and_dcpl_887 AND and_dcpl_99;
  and_dcpl_969 <= CONV_SL_1_1(fsm_output(8 DOWNTO 4)=STD_LOGIC_VECTOR'("10001"));
  and_dcpl_970 <= and_dcpl_969 AND and_dcpl_887 AND and_dcpl_107;
  nor_702_nl <= NOT((fsm_output(0)) OR (NOT (fsm_output(1))) OR (NOT (fsm_output(4)))
      OR (fsm_output(5)) OR (NOT (fsm_output(8))));
  nor_703_nl <= NOT((NOT (fsm_output(0))) OR (fsm_output(1)) OR (fsm_output(4)) OR
      (NOT (fsm_output(5))) OR (fsm_output(8)));
  mux_986_nl <= MUX_s_1_2_2(nor_702_nl, nor_703_nl, fsm_output(2));
  and_dcpl_973 <= mux_986_nl AND nor_450_cse AND (fsm_output(3));
  and_dcpl_976 <= and_dcpl_962 AND and_747_cse AND and_dcpl_99;
  and_dcpl_978 <= and_dcpl_969 AND and_747_cse AND and_dcpl_107;
  and_dcpl_1000 <= and_dcpl_606 AND nor_525_cse;
  and_1298_cse <= and_dcpl_1000 AND CONV_SL_1_1(fsm_output(3 DOWNTO 0)=STD_LOGIC_VECTOR'("1110"));
  and_dcpl_1006 <= and_dcpl_606 AND CONV_SL_1_1(fsm_output(5 DOWNTO 4)=STD_LOGIC_VECTOR'("01"));
  and_1304_cse <= and_dcpl_1006 AND CONV_SL_1_1(fsm_output(3 DOWNTO 0)=STD_LOGIC_VECTOR'("0011"));
  nor_707_cse <= NOT((fsm_output(1)) OR (fsm_output(3)) OR (fsm_output(4)) OR (fsm_output(5))
      OR (fsm_output(6)));
  nor_706_cse <= NOT((NOT (fsm_output(1))) OR (NOT (fsm_output(3))) OR (fsm_output(4))
      OR (fsm_output(5)) OR (fsm_output(6)));
  mux_987_nl <= MUX_s_1_2_2(nor_706_cse, nor_707_cse, fsm_output(0));
  nor_708_nl <= NOT((fsm_output(0)) OR (NOT (fsm_output(1))) OR (fsm_output(3)) OR
      nand_242_cse);
  mux_988_nl <= MUX_s_1_2_2(mux_987_nl, nor_708_nl, fsm_output(2));
  and_1305_cse <= mux_988_nl AND and_dcpl_19;
  and_1312_cse <= and_dcpl_19 AND CONV_SL_1_1(fsm_output(6 DOWNTO 4)=STD_LOGIC_VECTOR'("110"))
      AND and_dcpl_887 AND and_dcpl_125;
  and_1315_cse <= and_dcpl_1000 AND not_tmp_21 AND and_dcpl_125;
  and_1318_cse <= and_dcpl_1006 AND and_dcpl_887 AND nor_315_cse;
  and_dcpl_1029 <= and_dcpl_19 AND CONV_SL_1_1(fsm_output(6 DOWNTO 4)=STD_LOGIC_VECTOR'("110"))
      AND and_dcpl_887 AND (fsm_output(0)) AND (fsm_output(2));
  and_1333_cse <= and_dcpl_606 AND nor_525_cse AND CONV_SL_1_1(fsm_output(3 DOWNTO
      0)=STD_LOGIC_VECTOR'("1110"));
  and_1338_cse <= and_dcpl_606 AND CONV_SL_1_1(fsm_output(5 DOWNTO 4)=STD_LOGIC_VECTOR'("01"))
      AND and_dcpl_887 AND nor_315_cse;
  and_dcpl_1057 <= and_dcpl_887 AND (fsm_output(0)) AND (fsm_output(2));
  and_1358_cse <= and_dcpl_176 AND CONV_SL_1_1(fsm_output(5 DOWNTO 4)=STD_LOGIC_VECTOR'("10"))
      AND and_dcpl_1057;
  and_1360_cse <= and_dcpl_176 AND nor_525_cse AND and_dcpl_1057;
  and_dcpl_1070 <= and_dcpl_887 AND nor_315_cse;
  and_dcpl_1075 <= and_dcpl_606 AND CONV_SL_1_1(fsm_output(5 DOWNTO 4)=STD_LOGIC_VECTOR'("01"))
      AND and_dcpl_1070;
  and_dcpl_1079 <= and_dcpl_6 AND (fsm_output(6)) AND nor_525_cse;
  and_dcpl_1080 <= and_dcpl_1079 AND and_dcpl_1070;
  and_dcpl_1083 <= not_tmp_21 AND and_dcpl_125;
  and_dcpl_1084 <= and_dcpl_1079 AND and_dcpl_1083;
  and_1388_cse <= and_dcpl_606 AND nor_525_cse AND and_dcpl_1083;
  or_nl <= (NOT (fsm_output(0))) OR (NOT (fsm_output(1))) OR (fsm_output(3)) OR (fsm_output(4))
      OR (fsm_output(5)) OR (fsm_output(6)) OR (fsm_output(7));
  or_1544_nl <= (fsm_output(0)) OR (fsm_output(1)) OR (NOT(CONV_SL_1_1(fsm_output(7
      DOWNTO 3)=STD_LOGIC_VECTOR'("11111"))));
  mux_989_nl <= MUX_s_1_2_2(or_nl, or_1544_nl, fsm_output(2));
  nor_721_cse <= NOT(mux_989_nl OR (fsm_output(8)));
  nand_258_cse <= NOT((fsm_output(3)) AND (fsm_output(5)) AND (fsm_output(6)));
  or_1545_nl <= (fsm_output(3)) OR (fsm_output(5)) OR (fsm_output(6));
  mux_990_nl <= MUX_s_1_2_2(or_1545_nl, nand_258_cse, fsm_output(2));
  nor_723_cse <= NOT(mux_990_nl OR (fsm_output(8)));
  and_dcpl_1097 <= nor_723_cse AND (fsm_output(7)) AND (NOT (fsm_output(4))) AND
      (NOT (fsm_output(1))) AND (fsm_output(0));
  mux_991_cse <= MUX_s_1_2_2(and_747_cse, not_tmp_21, fsm_output(0));
  and_dcpl_1103 <= mux_991_cse AND and_dcpl_19 AND and_dcpl AND (NOT (fsm_output(4)))
      AND (fsm_output(2));
  nor_727_nl <= NOT((fsm_output(1)) OR (NOT (fsm_output(3))) OR (NOT (fsm_output(4)))
      OR (fsm_output(6)));
  and_2253_nl <= (fsm_output(1)) AND (fsm_output(4)) AND (fsm_output(6));
  mux_992_nl <= MUX_s_1_2_2(nor_727_nl, and_2253_nl, fsm_output(0));
  nor_728_nl <= NOT((fsm_output(0)) OR (fsm_output(1)) OR (NOT (fsm_output(3))) OR
      (fsm_output(4)) OR (NOT (fsm_output(6))));
  mux_993_cse <= MUX_s_1_2_2(mux_992_nl, nor_728_nl, fsm_output(2));
  and_dcpl_1105 <= mux_993_cse AND and_dcpl_19 AND (NOT (fsm_output(5)));
  and_dcpl_1112 <= and_dcpl_19 AND CONV_SL_1_1(fsm_output(6 DOWNTO 4)=STD_LOGIC_VECTOR'("101"))
      AND not_tmp_21 AND (fsm_output(0)) AND (fsm_output(2));
  and_1417_cse <= (fsm_output(7)) AND (NOT (fsm_output(8))) AND (NOT (fsm_output(6)))
      AND (NOT (fsm_output(5))) AND (fsm_output(4)) AND (fsm_output(3)) AND (NOT
      (fsm_output(1))) AND nor_315_cse;
  and_1425_cse <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)=STD_LOGIC_VECTOR'("101")) AND
      nor_525_cse AND CONV_SL_1_1(fsm_output(3 DOWNTO 0)=STD_LOGIC_VECTOR'("0011"));
  and_dcpl_1136 <= and_dcpl_6 AND (fsm_output(6)) AND nor_525_cse AND not_tmp_21
      AND (fsm_output(0)) AND (fsm_output(2));
  not_tmp_753 <= NOT((fsm_output(8)) AND (fsm_output(6)));
  or_1421_nl <= (fsm_output(7)) OR (NOT (fsm_output(0))) OR (fsm_output(4)) OR (fsm_output(8))
      OR (fsm_output(6));
  or_1418_nl <= (NOT (fsm_output(8))) OR (fsm_output(6));
  mux_997_nl <= MUX_s_1_2_2(or_1217_cse, or_1418_nl, fsm_output(4));
  or_1420_nl <= (fsm_output(7)) OR (fsm_output(0)) OR mux_997_nl;
  mux_998_nl <= MUX_s_1_2_2(or_1421_nl, or_1420_nl, fsm_output(3));
  or_1416_nl <= (fsm_output(3)) OR (fsm_output(7)) OR (NOT (fsm_output(0))) OR (fsm_output(4))
      OR not_tmp_753;
  mux_999_nl <= MUX_s_1_2_2(mux_998_nl, or_1416_nl, fsm_output(2));
  nor_737_nl <= NOT((fsm_output(5)) OR mux_999_nl);
  or_1413_nl <= (fsm_output(7)) OR (NOT (fsm_output(0))) OR (fsm_output(4)) OR not_tmp_753;
  or_1411_nl <= (NOT (fsm_output(0))) OR (fsm_output(4)) OR (fsm_output(8)) OR (fsm_output(6));
  or_1410_nl <= (fsm_output(0)) OR (NOT (fsm_output(4))) OR (fsm_output(8)) OR (NOT
      (fsm_output(6)));
  mux_995_nl <= MUX_s_1_2_2(or_1411_nl, or_1410_nl, fsm_output(7));
  mux_996_nl <= MUX_s_1_2_2(or_1413_nl, mux_995_nl, fsm_output(3));
  nor_738_nl <= NOT((NOT (fsm_output(5))) OR (fsm_output(2)) OR mux_996_nl);
  not_tmp_754 <= MUX_s_1_2_2(nor_737_nl, nor_738_nl, fsm_output(1));
  and_1441_cse <= and_dcpl_19 AND (fsm_output(6)) AND nor_525_cse AND and_dcpl_887
      AND and_dcpl_125;
  and_1447_cse <= and_dcpl_19 AND CONV_SL_1_1(fsm_output(6 DOWNTO 4)=STD_LOGIC_VECTOR'("001"))
      AND and_dcpl_887 AND nor_315_cse;
  RMS_NORM_LOOP_1_1_nor_1_cse <= NOT(not_tmp_754 OR and_dcpl_800);
  and_dcpl_1178 <= and_dcpl_6 AND (fsm_output(6)) AND nor_525_cse AND and_dcpl_1083;
  and_dcpl_1186 <= and_dcpl_19 AND CONV_SL_1_1(fsm_output(6 DOWNTO 4)=STD_LOGIC_VECTOR'("111"))
      AND and_dcpl_887 AND (fsm_output(0)) AND (fsm_output(2));
  nand_263_nl <= NOT((fsm_output(8)) AND (fsm_output(1)));
  mux_1002_nl <= MUX_s_1_2_2(nand_263_nl, or_tmp_726, fsm_output(2));
  or_1549_nl <= (fsm_output(4)) OR (NOT (fsm_output(0))) OR (NOT (fsm_output(6)))
      OR (fsm_output(5)) OR mux_1002_nl;
  mux_1001_nl <= MUX_s_1_2_2((NOT (fsm_output(1))), (fsm_output(1)), fsm_output(8));
  or_1550_nl <= (NOT (fsm_output(4))) OR (fsm_output(0)) OR (fsm_output(6)) OR (NOT
      (fsm_output(5))) OR (fsm_output(2)) OR mux_1001_nl;
  mux_1003_nl <= MUX_s_1_2_2(or_1549_nl, or_1550_nl, fsm_output(3));
  and_dcpl_1201 <= NOT(mux_1003_nl OR (fsm_output(7)));
  and_dcpl_1206 <= and_dcpl_1000 AND and_747_cse AND (NOT (fsm_output(0))) AND (fsm_output(2));
  and_dcpl_1208 <= and_dcpl_1000 AND and_747_cse AND nor_315_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_2_nor_3_cse <= NOT(and_dcpl_1186 OR and_1076_cse);
  and_dcpl_1238 <= NOT((fsm_output(8)) OR (fsm_output(6)) OR (fsm_output(5)));
  and_dcpl_1239 <= and_dcpl_1238 AND (fsm_output(7)) AND (fsm_output(4));
  and_dcpl_1240 <= and_dcpl_1239 AND CONV_SL_1_1(fsm_output(3 DOWNTO 0)=STD_LOGIC_VECTOR'("0011"));
  and_dcpl_1245 <= (fsm_output(7)) AND (NOT (fsm_output(4)));
  and_dcpl_1249 <= (NOT (fsm_output(8))) AND (fsm_output(6)) AND (NOT (fsm_output(5)))
      AND and_dcpl_1245 AND and_dcpl_887 AND (fsm_output(0)) AND (fsm_output(2));
  and_dcpl_1254 <= and_dcpl_1238 AND and_dcpl_1245 AND CONV_SL_1_1(fsm_output(3 DOWNTO
      0)=STD_LOGIC_VECTOR'("1110"));
  and_dcpl_1257 <= and_dcpl_1239 AND and_dcpl_887 AND nor_315_cse;
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_60_cse <= and_dcpl_1240 OR and_dcpl_1254;
  and_1562_cse <= and_dcpl_19 AND (fsm_output(6)) AND nor_525_cse AND and_dcpl_887
      AND (fsm_output(0)) AND (fsm_output(2));
  SF_LOOP_3_or_9_cse <= and_1333_cse OR and_1304_cse;
  and_dcpl_1291 <= mux_993_cse AND nor_419_cse AND (fsm_output(7));
  and_dcpl_1295 <= nor_723_cse AND and_dcpl_1245 AND CONV_SL_1_1(fsm_output(1 DOWNTO
      0)=STD_LOGIC_VECTOR'("01"));
  nor_775_cse <= NOT((fsm_output(8)) OR (fsm_output(6)));
  and_dcpl_1301 <= mux_991_cse AND nor_775_cse AND (NOT (fsm_output(5))) AND (fsm_output(7))
      AND (NOT (fsm_output(4))) AND (fsm_output(2));
  and_dcpl_1306 <= CONV_SL_1_1(fsm_output(8 DOWNTO 4)=STD_LOGIC_VECTOR'("01101"))
      AND not_tmp_21 AND and_dcpl_125;
  or_tmp_1137 <= (fsm_output(4)) OR (NOT (fsm_output(6))) OR (NOT (fsm_output(8)))
      OR (fsm_output(7));
  or_1449_nl <= (fsm_output(4)) OR (NOT (fsm_output(6))) OR (fsm_output(8)) OR (fsm_output(7));
  mux_1014_nl <= MUX_s_1_2_2(or_tmp_1137, or_1449_nl, fsm_output(1));
  or_1448_nl <= (NOT (fsm_output(4))) OR (fsm_output(6)) OR (fsm_output(8)) OR (NOT
      (fsm_output(7)));
  mux_1013_nl <= MUX_s_1_2_2(or_1448_nl, or_tmp_1137, fsm_output(1));
  mux_1015_nl <= MUX_s_1_2_2(mux_1014_nl, mux_1013_nl, fsm_output(0));
  or_1445_nl <= (NOT (fsm_output(1))) OR (NOT (fsm_output(4))) OR (fsm_output(6))
      OR (fsm_output(8)) OR (NOT (fsm_output(7)));
  or_1441_nl <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)/=STD_LOGIC_VECTOR'("011"));
  mux_1011_nl <= MUX_s_1_2_2(or_tmp_55, or_1441_nl, fsm_output(4));
  or_1443_nl <= (fsm_output(1)) OR mux_1011_nl;
  mux_1012_nl <= MUX_s_1_2_2(or_1445_nl, or_1443_nl, fsm_output(0));
  mux_1016_nl <= MUX_s_1_2_2(mux_1015_nl, mux_1012_nl, fsm_output(2));
  nor_779_cse <= NOT(mux_1016_nl OR (fsm_output(5)) OR (fsm_output(3)));
  nor_784_nl <= NOT((fsm_output(1)) OR (NOT (fsm_output(3))) OR (NOT (fsm_output(4)))
      OR (fsm_output(6)) OR (NOT (fsm_output(7))));
  nor_785_nl <= NOT((fsm_output(3)) OR (NOT (fsm_output(4))) OR (fsm_output(6)) OR
      (NOT (fsm_output(7))));
  and_754_nl <= (fsm_output(4)) AND (fsm_output(6)) AND (fsm_output(7));
  mux_1019_nl <= MUX_s_1_2_2(nor_785_nl, and_754_nl, fsm_output(1));
  mux_1020_nl <= MUX_s_1_2_2(nor_784_nl, mux_1019_nl, fsm_output(0));
  nor_786_nl <= NOT((fsm_output(1)) OR (NOT (fsm_output(3))) OR (fsm_output(4)) OR
      nand_164_cse);
  nor_787_nl <= NOT((fsm_output(1)) OR (fsm_output(3)) OR (fsm_output(4)) OR (NOT
      (fsm_output(6))) OR (fsm_output(7)));
  mux_1018_nl <= MUX_s_1_2_2(nor_786_nl, nor_787_nl, fsm_output(0));
  mux_1021_nl <= MUX_s_1_2_2(mux_1020_nl, mux_1018_nl, fsm_output(2));
  and_dcpl_1337 <= mux_1021_nl AND nor_419_cse;
  and_dcpl_1344 <= nor_419_cse AND (fsm_output(7)) AND (NOT((fsm_output(6)) OR (fsm_output(4))))
      AND (fsm_output(3)) AND (fsm_output(1)) AND (NOT (fsm_output(0))) AND (fsm_output(2));
  nor_789_nl <= NOT((fsm_output(5)) OR (NOT (fsm_output(6))) OR (fsm_output(8)));
  nor_790_nl <= NOT((fsm_output(5)) OR (fsm_output(6)) OR (NOT (fsm_output(8))));
  mux_1023_nl <= MUX_s_1_2_2(nor_789_nl, nor_790_nl, fsm_output(4));
  and_2257_nl <= (NOT((fsm_output(1)) OR (NOT (fsm_output(3))))) AND mux_1023_nl;
  nor_791_nl <= NOT((fsm_output(3)) OR (fsm_output(4)) OR (fsm_output(5)) OR (fsm_output(6))
      OR (fsm_output(8)));
  nor_792_nl <= NOT((NOT (fsm_output(3))) OR (fsm_output(4)) OR (NOT (fsm_output(5)))
      OR (fsm_output(6)) OR (fsm_output(8)));
  mux_1022_nl <= MUX_s_1_2_2(nor_791_nl, nor_792_nl, fsm_output(1));
  mux_1024_nl <= MUX_s_1_2_2(and_2257_nl, mux_1022_nl, fsm_output(0));
  and_dcpl_1346 <= mux_1024_nl AND (NOT((fsm_output(7)) OR (fsm_output(2))));
  nor_811_nl <= NOT((fsm_output(1)) OR (NOT (fsm_output(4))) OR (fsm_output(5)) OR
      (NOT (fsm_output(8))));
  nor_812_nl <= NOT((NOT (fsm_output(1))) OR (fsm_output(4)) OR (NOT (fsm_output(5)))
      OR (fsm_output(8)));
  mux_1052_nl <= MUX_s_1_2_2(nor_811_nl, nor_812_nl, fsm_output(0));
  and_dcpl_1385 <= mux_1052_nl AND nor_450_cse AND CONV_SL_1_1(fsm_output(3 DOWNTO
      2)=STD_LOGIC_VECTOR'("10"));
  and_dcpl_1388 <= (fsm_output(3)) AND (NOT (fsm_output(1))) AND nor_315_cse;
  and_dcpl_1392 <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)=STD_LOGIC_VECTOR'("001")) AND
      nor_525_cse;
  and_dcpl_1393 <= and_dcpl_1392 AND and_dcpl_1388;
  and_dcpl_1398 <= nor_775_cse AND (fsm_output(7));
  and_dcpl_1400 <= and_dcpl_1398 AND nor_525_cse AND CONV_SL_1_1(fsm_output(3 DOWNTO
      0)=STD_LOGIC_VECTOR'("1110"));
  and_dcpl_1402 <= and_dcpl_1398 AND CONV_SL_1_1(fsm_output(5 DOWNTO 4)=STD_LOGIC_VECTOR'("01"));
  and_dcpl_1403 <= and_dcpl_1402 AND and_dcpl_1388;
  and_dcpl_1407 <= and_dcpl_1392 AND not_tmp_21 AND (fsm_output(0)) AND (fsm_output(2));
  and_dcpl_1411 <= and_dcpl_1402 AND CONV_SL_1_1(fsm_output(3 DOWNTO 0)=STD_LOGIC_VECTOR'("0011"));
  and_dcpl_1440 <= nor_775_cse AND (fsm_output(7)) AND (NOT (fsm_output(5))) AND
      (fsm_output(4)) AND and_dcpl_887 AND nor_315_cse;
  or_tmp_1208 <= (fsm_output(6)) OR (fsm_output(5)) OR (fsm_output(2));
  nor_tmp_241 <= (fsm_output(6)) AND (fsm_output(5)) AND (fsm_output(2));
  and_dcpl_1468 <= (NOT (fsm_output(8))) AND (fsm_output(6));
  and_dcpl_1471 <= and_dcpl_1468 AND (NOT (fsm_output(7))) AND nor_525_cse AND not_tmp_21
      AND and_dcpl_125;
  and_dcpl_1476 <= and_dcpl_1468 AND (fsm_output(7)) AND (fsm_output(5)) AND (NOT
      (fsm_output(4))) AND and_dcpl_887 AND and_dcpl_125;
  nor_832_nl <= NOT((NOT (fsm_output(1))) OR (fsm_output(3)) OR (NOT (fsm_output(4)))
      OR (fsm_output(5)) OR (fsm_output(6)));
  mux_1061_nl <= MUX_s_1_2_2(and_dcpl, and_893_cse, fsm_output(4));
  nor_833_nl <= NOT((fsm_output(1)) OR (NOT((fsm_output(3)) AND mux_1061_nl)));
  mux_1062_nl <= MUX_s_1_2_2(nor_832_nl, nor_833_nl, fsm_output(0));
  nor_835_nl <= NOT((fsm_output(1)) OR (NOT (fsm_output(3))) OR (fsm_output(4)) OR
      (fsm_output(5)) OR (fsm_output(6)));
  mux_1060_nl <= MUX_s_1_2_2(nor_707_cse, nor_835_nl, fsm_output(0));
  mux_1063_nl <= MUX_s_1_2_2(mux_1062_nl, mux_1060_nl, fsm_output(2));
  and_dcpl_1498 <= mux_1063_nl AND and_dcpl_19;
  and_dcpl_1557 <= and_dcpl_6 AND (fsm_output(6)) AND nor_525_cse AND (fsm_output(3))
      AND (NOT (fsm_output(1))) AND nor_315_cse;
  and_dcpl_1572 <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)=STD_LOGIC_VECTOR'("001")) AND
      nor_525_cse AND (fsm_output(3)) AND (NOT (fsm_output(1))) AND nor_315_cse;
  mux_1064_nl <= MUX_s_1_2_2(and_864_cse, nor_439_cse, fsm_output(2));
  and_1914_cse <= mux_1064_nl AND nor_450_cse AND (fsm_output(5)) AND (fsm_output(4))
      AND (fsm_output(3)) AND (NOT (fsm_output(0)));
  and_dcpl_1685 <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)=STD_LOGIC_VECTOR'("100")) AND
      and_dcpl_889 AND CONV_SL_1_1(fsm_output(3 DOWNTO 0)=STD_LOGIC_VECTOR'("1001"));
  and_dcpl_1698 <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)=STD_LOGIC_VECTOR'("011")) AND
      and_dcpl_889 AND not_tmp_21 AND (NOT (fsm_output(0))) AND (fsm_output(2));
  and_dcpl_1721 <= and_dcpl_6 AND CONV_SL_1_1(fsm_output(6 DOWNTO 0)=STD_LOGIC_VECTOR'("0101111"));
  and_dcpl_1729 <= and_dcpl_79 AND CONV_SL_1_1(fsm_output(6 DOWNTO 0)=STD_LOGIC_VECTOR'("0011100"));
  attention_max_attn_fixed_t_or_cse_1 <= and_1214_cse OR and_1216_cse;
  and_dcpl_1760 <= and_dcpl_1079 AND not_tmp_21 AND and_dcpl_125;
  and_dcpl_1764 <= and_dcpl_1079 AND and_dcpl_902 AND (NOT (fsm_output(0))) AND (fsm_output(2));
  and_dcpl_1766 <= and_dcpl_1079 AND and_dcpl_902 AND and_dcpl_125;
  and_dcpl_1772 <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)=STD_LOGIC_VECTOR'("101")) AND
      nor_525_cse AND and_dcpl_902 AND (fsm_output(0)) AND (NOT (fsm_output(2)));
  and_dcpl_1775 <= not_tmp_21 AND and_dcpl_99;
  and_dcpl_1780 <= nor_609_cse AND nor_525_cse AND and_dcpl_1775;
  and_dcpl_1787 <= and_dcpl_1468 AND (fsm_output(7)) AND (fsm_output(5)) AND (fsm_output(4))
      AND (fsm_output(3)) AND (fsm_output(1)) AND and_dcpl_99;
  and_dcpl_1793 <= and_dcpl_1468 AND nor_552_cse AND nor_581_cse AND (fsm_output(0))
      AND (fsm_output(2));
  and_dcpl_1797 <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)=STD_LOGIC_VECTOR'("101")) AND
      nor_525_cse AND and_dcpl_1775;
  and_dcpl_1802 <= and_dcpl_1468 AND (NOT (fsm_output(7))) AND nor_525_cse AND (NOT
      (fsm_output(3))) AND (fsm_output(1)) AND and_dcpl_99;
  operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_1_cse
      <= reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd
      AND (NOT(and_dcpl_1780 OR and_dcpl_1787 OR and_dcpl_1797 OR and_dcpl_1802));
  operator_40_24_true_AC_TRN_AC_WRAP_nor_13_cse <= NOT(and_dcpl_1780 OR and_dcpl_1787);
  and_dcpl_1823 <= and_dcpl_1468 AND (fsm_output(7));
  and_dcpl_1825 <= and_dcpl_1823 AND CONV_SL_1_1(fsm_output(5 DOWNTO 4)=STD_LOGIC_VECTOR'("01"))
      AND and_dcpl_902 AND (fsm_output(0)) AND (fsm_output(2));
  and_dcpl_1832 <= and_dcpl_1468 AND (NOT (fsm_output(7))) AND nor_525_cse AND (fsm_output(3))
      AND (NOT (fsm_output(1))) AND nor_315_cse;
  and_dcpl_1837 <= and_dcpl_1823 AND CONV_SL_1_1(fsm_output(5 DOWNTO 4)=STD_LOGIC_VECTOR'("11"))
      AND and_dcpl_902 AND (fsm_output(0)) AND (NOT (fsm_output(2)));
  exs_tmp_40_54_10 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED((NOT
      QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva) & STD_LOGIC_VECTOR'( "0001")), 44),
      45) + CONV_UNSIGNED(CONV_SIGNED(SIGNED(z_out_41_52_8(42 DOWNTO 2)), 41), 45),
      45));
  and_dcpl_1840 <= not_tmp_21 AND and_dcpl_107;
  and_dcpl_1852 <= and_dcpl_606 AND CONV_SL_1_1(fsm_output(5 DOWNTO 4)=STD_LOGIC_VECTOR'("10"));
  and_dcpl_1853 <= and_dcpl_1852 AND and_dcpl_1070;
  and_dcpl_1855 <= and_dcpl_176 AND nor_525_cse;
  and_dcpl_1857 <= and_dcpl_887 AND and_dcpl_107;
  and_dcpl_1869 <= and_dcpl_606 AND and_dcpl_829 AND and_dcpl_1857;
  and_dcpl_1870 <= and_dcpl_1855 AND and_dcpl_1857;
  and_dcpl_1884 <= and_dcpl_749 AND nor_525_cse AND CONV_SL_1_1(fsm_output(3 DOWNTO
      0)=STD_LOGIC_VECTOR'("1001"));
  and_dcpl_1901 <= and_dcpl_749 AND nor_525_cse AND (fsm_output(3)) AND (NOT (fsm_output(1)))
      AND and_dcpl_107;
  mux_1072_nl <= MUX_s_1_2_2(or_645_cse, or_709_cse, fsm_output(4));
  mux_1073_nl <= MUX_s_1_2_2(mux_1072_nl, or_tmp_499, fsm_output(3));
  mux_1071_nl <= MUX_s_1_2_2(or_645_cse, or_709_cse, or_616_cse);
  mux_1074_nl <= MUX_s_1_2_2(mux_1073_nl, mux_1071_nl, fsm_output(2));
  and_dcpl_1910 <= (NOT mux_1074_nl) AND (NOT (fsm_output(8))) AND (fsm_output(7))
      AND (NOT (fsm_output(1))) AND (fsm_output(0));
  and_dcpl_1917 <= and_dcpl_1468 AND (fsm_output(7)) AND (fsm_output(5)) AND (fsm_output(4))
      AND (NOT (fsm_output(3))) AND and_dcpl_107;
  and_dcpl_1923 <= and_dcpl_1468 AND (fsm_output(7)) AND nor_525_cse AND (fsm_output(3))
      AND (NOT (fsm_output(1))) AND and_dcpl_107;
  nor_886_nl <= NOT((fsm_output(0)) OR (NOT (fsm_output(4))) OR (fsm_output(5)) OR
      (fsm_output(6)));
  nor_887_nl <= NOT((NOT (fsm_output(0))) OR (fsm_output(4)) OR nand_158_cse);
  mux_1034_nl <= MUX_s_1_2_2(nor_886_nl, nor_887_nl, fsm_output(2));
  and_1675_ssc <= mux_1034_nl AND and_dcpl_19 AND (fsm_output(3)) AND (NOT (fsm_output(1)));
  nor_890_nl <= NOT(CONV_SL_1_1(fsm_output(6 DOWNTO 3)/=STD_LOGIC_VECTOR'("0000")));
  nor_891_nl <= NOT(CONV_SL_1_1(fsm_output(6 DOWNTO 3)/=STD_LOGIC_VECTOR'("0010")));
  mux_1037_nl <= MUX_s_1_2_2(nor_890_nl, nor_891_nl, fsm_output(1));
  mux_1038_nl <= MUX_s_1_2_2(nor_706_cse, mux_1037_nl, fsm_output(0));
  and_2262_nl <= CONV_SL_1_1(fsm_output(6 DOWNTO 4)=STD_LOGIC_VECTOR'("111"));
  nor_888_nl <= NOT(CONV_SL_1_1(fsm_output(6 DOWNTO 4)/=STD_LOGIC_VECTOR'("000")));
  mux_1035_nl <= MUX_s_1_2_2(and_2262_nl, nor_888_nl, fsm_output(3));
  and_2263_nl <= (fsm_output(1)) AND mux_1035_nl;
  mux_1036_nl <= MUX_s_1_2_2(and_2263_nl, nor_707_cse, fsm_output(0));
  mux_1039_nl <= MUX_s_1_2_2(mux_1038_nl, mux_1036_nl, fsm_output(2));
  and_1676_ssc <= mux_1039_nl AND and_dcpl_19;
  SF_LOOP_3_or_11_cse <= and_dcpl_1291 OR and_dcpl_1295 OR and_dcpl_1301 OR and_dcpl_1306;
  operator_40_24_true_AC_TRN_AC_WRAP_2_or_36_cse <= and_dcpl_800 OR and_dcpl_804;
  operator_40_24_true_AC_TRN_AC_WRAP_2_nor_5_itm <= NOT(and_dcpl_800 OR and_dcpl_804);
  operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_1_cse
      <= (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(17))
      AND operator_40_24_true_AC_TRN_AC_WRAP_2_nor_5_itm;
  operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_7_cse
      <= (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(19))
      AND (NOT and_dcpl_800);
  operator_40_24_true_AC_TRN_AC_WRAP_2_or_45_cse <= and_dcpl_1186 OR and_1076_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_2_cse_1
      <= (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(21))
      AND and_995_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_mux_1_nl
      <= MUX_s_1_2_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(1)),
      reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd,
      and_dcpl_1793);
  operator_40_24_true_AC_TRN_AC_WRAP_and_17_cse <= operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_mux_1_nl
      AND (NOT(and_dcpl_1797 OR and_dcpl_1802));
  operator_40_24_true_AC_TRN_AC_WRAP_or_10_cse <= and_dcpl_1780 OR and_dcpl_1787;
  for_for_nor_3_cse <= NOT(and_dcpl_1346 OR and_1562_cse);
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_16_cse <= CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm
      AND and_1914_cse;
  CACHE_UPDATE_LOOP_3_1_or_6_cse_1 <= and_1305_cse OR and_1315_cse;
  or_dcpl <= and_dcpl_292 OR (and_dcpl_262 AND and_dcpl_316) OR and_dcpl_440 OR and_dcpl_261
      OR (and_dcpl_276 AND and_dcpl_243);
  SF_LOOP_3_acc_55_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(z_out_49),
      30), 31) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_53_itm_27_24 &
      SF_LOOP_3_acc_53_itm_23_15 & SF_LOOP_3_acc_53_itm_14_9 & SF_LOOP_3_acc_53_itm_8_0),
      28), 31), 31));
  SF_LOOP_3_acc_56_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(20
      DOWNTO 15)) & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(20),
      1),4)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(21),
      1),2)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(12),
      1),4)) & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(6
      DOWNTO 5)) & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(13
      DOWNTO 10)) & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_2(11
      DOWNTO 8)) & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_2(2))),
      33), 35) + CONV_SIGNED(SIGNED(SF_LOOP_3_acc_55_nl), 35), 35));
  SF_LOOP_3_acc_73_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED('1' & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(13
      DOWNTO 12)))) + UNSIGNED(STD_LOGIC_VECTOR'( "11") & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(34))))
      + UNSIGNED'( "001"), 3));
  SF_LOOP_3_acc_76_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((NOT
      (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(22))) & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(39)))
      & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(24 DOWNTO 23)))),
      4), 5) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(35)))
      & '1' & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(7 DOWNTO
      6)))), 4), 5) + UNSIGNED'( "00001"), 5));
  SF_LOOP_3_acc_80_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(z_out_25
      & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(12))) & STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_73_nl),
      3)) & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(33)))),
      9), 10) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_76_nl),
      5)) & STD_LOGIC_VECTOR'( "11") & (SF_LOOP_3_acc_77_sdt_1(2 DOWNTO 1))), 9),
      10) + UNSIGNED'( "0000000001"), 10));
  SF_LOOP_3_acc_74_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED('1' & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(32
      DOWNTO 31)))) + UNSIGNED('1' & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(24
      DOWNTO 23)))) + UNSIGNED'( "001"), 3));
  SF_LOOP_3_acc_75_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(STD_LOGIC_VECTOR'(
      "11") & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(13 DOWNTO
      12)))) + UNSIGNED('1' & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(32
      DOWNTO 30)))), 4));
  SF_LOOP_3_acc_78_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED('1' & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(4
      DOWNTO 3)))) + UNSIGNED('1' & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(15
      DOWNTO 14)))) + UNSIGNED'( "001"), 3));
  SF_LOOP_3_acc_79_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED('1' & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(34
      DOWNTO 33)))) + UNSIGNED('1' & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(38
      DOWNTO 37)))), 3));
  SF_LOOP_3_acc_81_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED('1' & STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_74_nl),
      3)) & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(30))) &
      STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_75_nl), 4))) + UNSIGNED(STD_LOGIC_VECTOR'(
      "11") & STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_78_nl), 3)) &
      '1' & STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_79_nl), 3))), 9));
  SF_LOOP_3_acc_68_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(4
      DOWNTO 3)) & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(4
      DOWNTO 3)) & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(34
      DOWNTO 33)) & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(19))
      & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(15 DOWNTO
      14))), 13), 14) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(32
      DOWNTO 30)) & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(24
      DOWNTO 23)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(2),
      1),2)) & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(39))
      & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(5))), 13),
      14), 14));
  SF_LOOP_3_acc_69_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((NOT
      (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(2))) & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(15
      DOWNTO 14))) & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(38
      DOWNTO 37)))), 5), 6) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(5)))
      & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(26 DOWNTO 25)))
      & '1' & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(26)))),
      5), 6) + UNSIGNED'( "000001"), 6));
  SF_LOOP_3_acc_70_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED('1' & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(32
      DOWNTO 30)))) + UNSIGNED(STD_LOGIC_VECTOR'( "11") & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(7
      DOWNTO 6)))) + UNSIGNED'( "0001"), 4));
  SF_LOOP_3_acc_71_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED('1' & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(24
      DOWNTO 23))) & '1') + UNSIGNED(STD_LOGIC_VECTOR'( "11") & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(15
      DOWNTO 14)))), 4));
  SF_LOOP_3_acc_62_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(16))
      & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(18),
      1),8))), 9), 10) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(27))
      & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(35),
      1),5)) & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(26 DOWNTO
      25)) & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(27))), 9),
      10), 10));
  SF_LOOP_3_acc_64_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(39))
      & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(11 DOWNTO 8)) &
      (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(36))), 6), 7) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(39))
      & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(34 DOWNTO 33))),
      3), 7), 7));
  SF_LOOP_3_acc_66_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(SIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(16))
      & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(28),
      1),2)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(28),
      1),3)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(28),
      1),3))),13)), 13), 14) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_64_nl),
      7)) & (z_out_26(2 DOWNTO 0))), 10), 14) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(36),
      1), 1), 14), 14));
  SF_LOOP_3_acc_12_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(5))
      & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(34 DOWNTO 33)) &
      (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(15 DOWNTO 14)) & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(19),
      1),4)) & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(36),
      1),2)) & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(11
      DOWNTO 8))), 16), 17) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(19))
      & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(36),
      1),2)) & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(21 DOWNTO
      20)) & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(32 DOWNTO 30))
      & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(4 DOWNTO 3)) & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(17),
      1),2)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(17),
      1),3))), 16), 17) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(39),
      1), 1), 17), 17));
  SF_LOOP_3_acc_32_itm <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_80_nl),
      10)) & (SF_LOOP_3_acc_77_sdt_1(0)) & STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_81_nl),
      9))), 20), 22) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(z_out_24 & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(17))
      & STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_68_nl), 14))), 19),
      22) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_69_nl),
      6)) & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(25))) &
      STD_LOGIC_VECTOR'( "11") & STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_70_nl),
      4)) & STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_71_nl), 4)) & STD_LOGIC_VECTOR'(
      "00")), 19), 22) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(z_out_27 & (z_out_20(7
      DOWNTO 0)) & z_out_34), 18), 22) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_62_nl),
      10)) & (z_out_29(7 DOWNTO 0))), 18), 22) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(21
      DOWNTO 20)) & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(5))
      & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(39)) & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(28))
      & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(24 DOWNTO 23)) &
      (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(2)) & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(13
      DOWNTO 12)) & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(21
      DOWNTO 20)) & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(26 DOWNTO
      25))), 17), 22) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(34
      DOWNTO 33)) & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(22))
      & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(7 DOWNTO 6))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(5),
      1),5)) & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(22))
      & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(16),
      1),2))), 17), 22) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(11
      DOWNTO 8))) & '1' & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(24
      DOWNTO 23))) & STD_LOGIC_VECTOR'( "111") & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(15
      DOWNTO 14))) & '1' & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(7
      DOWNTO 6))) & STD_LOGIC_VECTOR'( "000")), 18), 22) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((NOT
      (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(32 DOWNTO 30))) &
      (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(15 DOWNTO 14)))
      & STD_LOGIC_VECTOR'( "111") & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(7
      DOWNTO 6))) & STD_LOGIC_VECTOR'( "111") & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(32
      DOWNTO 30))) & STD_LOGIC_VECTOR'( "00")), 18), 22) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(7
      DOWNTO 6)) & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(32 DOWNTO
      30)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(5),
      1),2)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(35),
      1),3)) & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(27)) & '0'
      & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(35),
      1),2)) & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(2))),
      18), 22) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(36))
      & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(11 DOWNTO 8)) &
      (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(36)) & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(17))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(22),
      1),3)) & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(19)) & '0'
      & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(38 DOWNTO 37)) &
      STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(27),
      1),2))), 17), 22) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(22))
      & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(27)) & STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_66_nl),
      14))), 16), 22) + CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_12_nl), 22) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(SIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(29))
      & STD_LOGIC_VECTOR'( "000") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(29),
      1),2)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(29),
      1),2)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(29),
      1),4)) & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(29))),17)),
      17), 22), 22));
  RMS_NORM_LOOP_1_2_or_itm <= and_dcpl_885 OR and_1216_cse;
  RMS_NORM_LOOP_1_2_or_1_itm <= and_dcpl_893 OR and_dcpl_898 OR and_dcpl_924;
  RMS_NORM_LOOP_1_2_or_2_itm <= and_dcpl_901 OR and_1214_cse;
  RMS_NORM_LOOP_1_2_nor_seb <= NOT(and_dcpl_893 OR and_dcpl_898);
  operator_40_24_true_AC_TRN_AC_WRAP_2_or_18_itm <= and_dcpl_1201 OR and_dcpl_1208;
  SF_LOOP_3_or_4_itm <= nor_779_cse OR and_1333_cse OR and_1304_cse;
  SF_LOOP_3_or_13_itm <= and_1318_cse OR and_1358_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_or_itm <= and_dcpl_1337 OR and_dcpl_1344;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_39 <= '0';
      ELSIF ( (input_rsc_en_d_1 AND and_dcpl_105) = '1' ) THEN
        QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_39 <= RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_mux1h_nl
            AND (NOT(RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_nor_ssc_1 OR RMS_NORM_LOOP_2_2_and_5_ssc_1));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_38_15 <= STD_LOGIC_VECTOR'( "000000000000000000000000");
        QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_14_0 <= STD_LOGIC_VECTOR'( "000000000000000");
      ELSIF ( QUANTIZE_ACTIVATION_LOOP_1_max_val_and_1_ssc = '1' ) THEN
        QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_38_15 <= MUX1HOT_v_24_4_2((input_rsci_data_out_d(38
            DOWNTO 15)), (z_out_12(38 DOWNTO 15)), reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1,
            (GEMM_3D_FLOAT_LOOP_4_acc_193_itm(38 DOWNTO 15)), STD_LOGIC_VECTOR'(
            RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_nor_ssc_1 & RMS_NORM_LOOP_2_and_4_ssc_1
            & RMS_NORM_LOOP_2_2_and_5_ssc_1 & and_19_cse));
        QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_14_0 <= MUX1HOT_v_15_4_2((input_rsci_data_out_d(14
            DOWNTO 0)), (z_out_12(14 DOWNTO 0)), reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_2,
            (GEMM_3D_FLOAT_LOOP_4_acc_193_itm(14 DOWNTO 0)), STD_LOGIC_VECTOR'( RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_nor_ssc_1
            & RMS_NORM_LOOP_2_and_4_ssc_1 & RMS_NORM_LOOP_2_2_and_5_ssc_1 & and_19_cse));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        QUANTIZE_ACTIVATION_LOOP_5_4_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs
            <= '0';
      ELSIF ( (input_rsc_en_d_1 AND (NOT(or_dcpl_111 OR or_dcpl_106 OR or_dcpl_104)))
          = '1' ) THEN
        QUANTIZE_ACTIVATION_LOOP_5_4_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs
            <= z_out_46_17;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        QUANTIZE_ACTIVATION_LOOP_5_2_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs
            <= '0';
      ELSIF ( (input_rsc_en_d_1 AND (NOT(or_dcpl_111 OR or_dcpl_115 OR (NOT (fsm_output(5)))
          OR QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_cse_17))) =
          '1' ) THEN
        QUANTIZE_ACTIVATION_LOOP_5_2_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs
            <= z_out_44_17;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        QUANTIZE_ACTIVATION_LOOP_5_3_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs
            <= '0';
      ELSIF ( (input_rsc_en_d_1 AND (NOT(or_dcpl_111 OR or_dcpl_115 OR or_dcpl_104)))
          = '1' ) THEN
        QUANTIZE_ACTIVATION_LOOP_5_3_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs
            <= z_out_46_17;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs
            <= '0';
      ELSIF ( (input_rsc_en_d_1 AND (NOT(or_dcpl_110 OR or_601_cse OR or_dcpl_106
          OR (NOT (fsm_output(5))) OR QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_cse_17)))
          = '1' ) THEN
        QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs
            <= z_out_44_17;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_39 <= '0';
      ELSIF ( (input_rsc_en_d_1 AND and_dcpl_112) = '1' ) THEN
        QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_39 <= RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_mux1h_nl
            AND (NOT(RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_nor_ssc_1 OR RMS_NORM_LOOP_2_2_and_5_ssc_1));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_38_15 <= STD_LOGIC_VECTOR'( "000000000000000000000000");
        QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_14_0 <= STD_LOGIC_VECTOR'( "000000000000000");
      ELSIF ( QUANTIZE_ACTIVATION_LOOP_1_1_max_val_and_1_ssc = '1' ) THEN
        QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_38_15 <= MUX1HOT_v_24_4_2((attention_5_1_384_384_8_48_attn_output_2D_rsci_data_out_d(38
            DOWNTO 15)), (z_out_12(38 DOWNTO 15)), reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1,
            (GEMM_3D_FLOAT_LOOP_4_acc_193_itm(38 DOWNTO 15)), STD_LOGIC_VECTOR'(
            RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_nor_ssc_1 & RMS_NORM_LOOP_2_2_and_4_ssc_1
            & RMS_NORM_LOOP_2_2_and_5_ssc_1 & and_19_cse));
        QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_14_0 <= MUX1HOT_v_15_4_2((attention_5_1_384_384_8_48_attn_output_2D_rsci_data_out_d(14
            DOWNTO 0)), (z_out_12(14 DOWNTO 0)), reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_2,
            (GEMM_3D_FLOAT_LOOP_4_acc_193_itm(14 DOWNTO 0)), STD_LOGIC_VECTOR'( RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_nor_ssc_1
            & RMS_NORM_LOOP_2_2_and_4_ssc_1 & RMS_NORM_LOOP_2_2_and_5_ssc_1 & and_19_cse));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        QUANTIZE_ACTIVATION_LOOP_5_1_4_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs
            <= '0';
      ELSIF ( (input_rsc_en_d_1 AND (NOT(or_dcpl_130 OR or_113_cse OR (fsm_output(6))
          OR or_dcpl_104))) = '1' ) THEN
        QUANTIZE_ACTIVATION_LOOP_5_1_4_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs
            <= z_out_46_17;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        QUANTIZE_ACTIVATION_LOOP_5_1_2_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs
            <= '0';
      ELSIF ( (input_rsc_en_d_1 AND (NOT(or_dcpl_130 OR or_dcpl_134 OR (NOT (fsm_output(5)))
          OR QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_cse_17))) =
          '1' ) THEN
        QUANTIZE_ACTIVATION_LOOP_5_1_2_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs
            <= z_out_44_17;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        QUANTIZE_ACTIVATION_LOOP_5_1_3_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs
            <= '0';
      ELSIF ( (input_rsc_en_d_1 AND (NOT(or_dcpl_130 OR or_dcpl_134 OR or_dcpl_104)))
          = '1' ) THEN
        QUANTIZE_ACTIVATION_LOOP_5_1_3_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs
            <= z_out_46_17;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        QUANTIZE_ACTIVATION_LOOP_5_1_1_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs
            <= '0';
      ELSIF ( (input_rsc_en_d_1 AND (NOT(or_dcpl_129 OR or_607_cse OR or_dcpl_106
          OR (NOT (fsm_output(5))) OR QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_cse_17)))
          = '1' ) THEN
        QUANTIZE_ACTIVATION_LOOP_5_1_1_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs
            <= z_out_44_17;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        exitL_exit_LINEAR_FORWARD_NO_MUL_LOOP_5_3_lpi_2 <= '0';
      ELSIF ( (input_rsc_en_d_1 AND ((LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1 AND
          mux_208_nl) OR exitL_exit_LINEAR_FORWARD_NO_MUL_LOOP_5_3_lpi_2_mx0c2))
          = '1' ) THEN
        exitL_exit_LINEAR_FORWARD_NO_MUL_LOOP_5_3_lpi_2 <= MUX_s_1_2_2((z_out_19(2)),
            reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd, exitL_exit_LINEAR_FORWARD_NO_MUL_LOOP_5_3_lpi_2_mx0c2);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        strm_out_rsci_idat_31_2 <= STD_LOGIC_VECTOR'( "000000000000000000000000000000");
      ELSIF ( (input_rsc_en_d_1 AND (NOT(or_616_cse OR (NOT (fsm_output(8))) OR or_607_cse
          OR or_dcpl_105 OR nand_158_cse))) = '1' ) THEN
        strm_out_rsci_idat_31_2 <= output_rsci_data_out_d(29 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        reg_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_a_32_0_ftd <= '0';
        reg_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_a_32_0_ftd_1 <= '0';
        operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_29_15 <= STD_LOGIC_VECTOR'(
            "000000000000000");
        operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_14_0 <= STD_LOGIC_VECTOR'(
            "000000000000000");
        operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_39 <= '0';
        operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_38_30 <= STD_LOGIC_VECTOR'(
            "000000000");
        rms_norm_384_div_cmp_b_0 <= '0';
        rms_norm_384_div_cmp_b_4_1 <= STD_LOGIC_VECTOR'( "0000");
        rms_norm_384_div_cmp_b_15 <= '0';
        rms_norm_384_div_cmp_b_14_5 <= STD_LOGIC_VECTOR'( "0000000000");
        rms_norm_384_div_cmp_b_19_16 <= STD_LOGIC_VECTOR'( "0000");
        rms_norm_384_div_cmp_b_60 <= '0';
        rms_norm_384_div_cmp_b_59_39 <= STD_LOGIC_VECTOR'( "000000000000000000000");
        rms_norm_384_div_cmp_b_38_20 <= STD_LOGIC_VECTOR'( "0000000000000000000");
        rms_norm_384_div_cmp_a_71 <= '0';
        rms_norm_384_div_cmp_a_70_47 <= STD_LOGIC_VECTOR'( "000000000000000000000000");
        rms_norm_384_div_cmp_a_46_32 <= STD_LOGIC_VECTOR'( "000000000000000");
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_1_0
            <= STD_LOGIC_VECTOR'( "00");
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_15
            <= '0';
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_14_2
            <= STD_LOGIC_VECTOR'( "0000000000000");
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_17_16
            <= STD_LOGIC_VECTOR'( "00");
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_59_58
            <= STD_LOGIC_VECTOR'( "00");
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_57_39
            <= STD_LOGIC_VECTOR'( "0000000000000000000");
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_38_18
            <= STD_LOGIC_VECTOR'( "000000000000000000000");
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_a_71
            <= '0';
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_a_70_68
            <= STD_LOGIC_VECTOR'( "000");
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_a_67_47
            <= STD_LOGIC_VECTOR'( "000000000000000000000");
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_a_46_32
            <= STD_LOGIC_VECTOR'( "000000000000000");
        SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a_55 <= '0';
        SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a_54_31 <= STD_LOGIC_VECTOR'( "000000000000000000000000");
        SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a_30_16 <= STD_LOGIC_VECTOR'( "000000000000000");
        SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b_39 <= '0';
        SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b_38_36 <= STD_LOGIC_VECTOR'( "000");
        SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b_35_15 <= STD_LOGIC_VECTOR'( "000000000000000000000");
        SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b_14_0 <= STD_LOGIC_VECTOR'( "000000000000000");
        reg_strm_out_rsci_iswt0_cse <= '0';
        reg_strm_in_rsci_iswt0_cse <= '0';
        SF_LOOP_3_acc_38_itm_18 <= '0';
        reg_SF_LOOP_3_acc_38_1_ftd <= '0';
        reg_SF_LOOP_3_acc_38_1_ftd_1 <= STD_LOGIC_VECTOR'( "00000000");
        reg_SF_LOOP_3_acc_38_1_ftd_2 <= STD_LOGIC_VECTOR'( "000000000");
        attention_round_1_qr_39_16_3_lpi_3_dfm_23_20 <= STD_LOGIC_VECTOR'( "0000");
        SF_LOOP_3_acc_5_psp_sva_21 <= '0';
        SF_LOOP_3_acc_5_psp_sva_19_17 <= STD_LOGIC_VECTOR'( "000");
        SF_LOOP_3_acc_5_psp_sva_9 <= '0';
        LINEAR_FORWARD_NO_MUL_LOOP_3_stage_0_2 <= '0';
        SF_LOOP_3_acc_45_itm_13_9 <= STD_LOGIC_VECTOR'( "00000");
        SF_LOOP_3_acc_45_itm_8_0 <= STD_LOGIC_VECTOR'( "000000000");
        SF_LOOP_3_acc_53_itm_27_24 <= STD_LOGIC_VECTOR'( "0000");
        reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd <= STD_LOGIC_VECTOR'( "00");
        reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_1 <= STD_LOGIC_VECTOR'( "00");
        reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_2 <= STD_LOGIC_VECTOR'( "00");
        CACHE_UPDATE_LOOP_3_k_5_0_sva_5_4 <= STD_LOGIC_VECTOR'( "00");
        reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd <= STD_LOGIC_VECTOR'( "00");
        reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1 <= STD_LOGIC_VECTOR'( "00");
        SF_LOOP_3_acc_53_itm_14_9 <= STD_LOGIC_VECTOR'( "000000");
        operator_40_24_true_AC_TRN_AC_WRAP_acc_8_psp_60 <= '0';
        operator_40_24_true_AC_TRN_AC_WRAP_acc_8_psp_59_57 <= STD_LOGIC_VECTOR'(
            "000");
        attention_exp_exp_half_mul_3_cse_sva <= STD_LOGIC_VECTOR'( "00000000000000000000000000000000000000000000000000000000000000000000000000000000");
        INIT_2D_MEM_LOOP_2_3_INIT_2D_MEM_LOOP_2_3_nor_itm <= '0';
      ELSIF ( input_rsc_en_d_1 = '1' ) THEN
        reg_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_a_32_0_ftd <= mux_220_ssc;
        reg_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_a_32_0_ftd_1 <= NOT mux_220_ssc;
        operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_29_15 <= MUX1HOT_v_15_5_2((attention_sqrt_1_guess_sva_29_0(29
            DOWNTO 15)), (attention_abs_qif_acc_pmx_lpi_1_dfm_mx0_30_1(29 DOWNTO
            15)), (z_out_51_40_1(29 DOWNTO 15)), (attention_max_attn_fixed_t_attention_max_attn_fixed_t_and_mut_mx0w2_38_15(14
            DOWNTO 0)), (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(14
            DOWNTO 0)), STD_LOGIC_VECTOR'( not_tmp_199 & attention_sqrt_1_guess_or_1_cse
            & attention_sqrt_1_guess_or_2_cse & and_dcpl_136 & and_dcpl_142));
        operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_14_0 <= MUX1HOT_v_15_5_2((attention_sqrt_1_guess_sva_29_0(14
            DOWNTO 0)), (attention_abs_qif_acc_pmx_lpi_1_dfm_mx0_30_1(14 DOWNTO 0)),
            (z_out_51_40_1(14 DOWNTO 0)), attention_max_attn_fixed_t_attention_max_attn_fixed_t_and_mut_mx0w2_14_0,
            reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_2,
            STD_LOGIC_VECTOR'( not_tmp_199 & attention_sqrt_1_guess_or_1_cse & attention_sqrt_1_guess_or_2_cse
            & and_dcpl_136 & and_dcpl_142));
        operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_39 <= operator_40_24_true_AC_TRN_AC_WRAP_mux1h_nl
            AND mux_234_seb;
        operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_38_30 <= MUX_v_9_2_2(STD_LOGIC_VECTOR'("000000000"),
            operator_40_24_true_AC_TRN_AC_WRAP_mux1h_2_nl, mux_234_seb);
        rms_norm_384_div_cmp_b_0 <= rms_norm_384_mux1h_2_nl AND (NOT(mux_246_nl OR
            (fsm_output(7))));
        rms_norm_384_div_cmp_b_4_1 <= MUX1HOT_v_4_4_2((z_out_51_40_1(4 DOWNTO 1)),
            (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_2(4
            DOWNTO 1)), (operator_40_24_true_AC_TRN_AC_WRAP_acc_8_psp_56_0(4 DOWNTO
            1)), (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(3 DOWNTO 0)), STD_LOGIC_VECTOR'(
            and_dcpl_149 & and_dcpl_151 & and_dcpl_153 & and_dcpl_155));
        rms_norm_384_div_cmp_b_15 <= MUX1HOT_s_1_4_2((z_out_51_40_1(15)), (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(0)),
            (operator_40_24_true_AC_TRN_AC_WRAP_acc_8_psp_56_0(15)), (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_8_sdt_51_0(10)),
            STD_LOGIC_VECTOR'( and_dcpl_149 & and_dcpl_151 & and_dcpl_153 & and_dcpl_155));
        rms_norm_384_div_cmp_b_14_5 <= MUX1HOT_v_10_4_2((z_out_51_40_1(14 DOWNTO
            5)), (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_2(14
            DOWNTO 5)), (operator_40_24_true_AC_TRN_AC_WRAP_acc_8_psp_56_0(14 DOWNTO
            5)), (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_8_sdt_51_0(9 DOWNTO 0)), STD_LOGIC_VECTOR'(
            and_dcpl_149 & and_dcpl_151 & and_dcpl_153 & and_dcpl_155));
        rms_norm_384_div_cmp_b_19_16 <= MUX1HOT_v_4_4_2((z_out_51_40_1(19 DOWNTO
            16)), (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(4
            DOWNTO 1)), (LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_13_sdt_39_0(3 DOWNTO
            0)), (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_8_sdt_51_0(14 DOWNTO 11)), STD_LOGIC_VECTOR'(
            and_dcpl_149 & and_dcpl_151 & and_dcpl_153 & and_dcpl_155));
        rms_norm_384_div_cmp_b_60 <= MUX1HOT_s_1_4_2((z_out_51_40_1(39)), reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd,
            LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_12_sdt_40, (LINEAR_FORWARD_NO_MUL_LOOP_2_acc_13_psp(40)),
            STD_LOGIC_VECTOR'( and_dcpl_149 & and_dcpl_151 & and_dcpl_153 & and_dcpl_155));
        rms_norm_384_div_cmp_b_59_39 <= MUX1HOT_v_21_4_2(STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(z_out_51_40_1(39),
            1),21)), STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd,
            1),21)), (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_12_sdt_39_0(39 DOWNTO 19)),
            (LINEAR_FORWARD_NO_MUL_LOOP_2_acc_13_psp(39 DOWNTO 19)), STD_LOGIC_VECTOR'(
            and_dcpl_149 & and_dcpl_151 & and_dcpl_153 & and_dcpl_155));
        rms_norm_384_div_cmp_b_38_20 <= MUX1HOT_v_19_4_2((z_out_51_40_1(38 DOWNTO
            20)), (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(23
            DOWNTO 5)), (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_12_sdt_39_0(18 DOWNTO
            0)), (LINEAR_FORWARD_NO_MUL_LOOP_2_acc_13_psp(18 DOWNTO 0)), STD_LOGIC_VECTOR'(
            and_dcpl_149 & and_dcpl_151 & and_dcpl_153 & and_dcpl_155));
        rms_norm_384_div_cmp_a_71 <= rms_norm_384_mux1h_17_nl AND (NOT and_173_ssc);
        rms_norm_384_div_cmp_a_70_47 <= MUX_v_24_2_2(STD_LOGIC_VECTOR'("000000000000000000000000"),
            rms_norm_384_mux1h_21_nl, rms_norm_384_not_1_nl);
        rms_norm_384_div_cmp_a_46_32 <= MUX1HOT_v_15_4_2(STD_LOGIC_VECTOR'( "000000000000001"),
            (attention_5_1_384_384_8_48_k_proj_re_rsci_data_out_d(14 DOWNTO 0)),
            reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_2,
            (GEMM_3D_FLOAT_LOOP_4_acc_193_itm(14 DOWNTO 0)), STD_LOGIC_VECTOR'( and_173_ssc
            & and_dcpl_158 & and_dcpl_159 & and_dcpl_155));
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_1_0
            <= MUX1HOT_v_2_4_2((QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(1 DOWNTO 0)),
            (attention_max_attn_fixed_t_1_conc_psp_mx0w12_14_0(1 DOWNTO 0)), (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_2(1
            DOWNTO 0)), (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_8_sdt_51_0(1 DOWNTO 0)),
            STD_LOGIC_VECTOR'( and_dcpl_153 & and_dcpl_162 & and_dcpl_165 & and_dcpl_167));
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_15
            <= MUX1HOT_s_1_4_2((LINEAR_FORWARD_NO_MUL_LOOP_2_2_acc_12_sdt_15_0(13)),
            (attention_max_attn_fixed_t_1_conc_psp_mx0w12_38_15(0)), (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(0)),
            (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_8_sdt_51_0(15)), STD_LOGIC_VECTOR'(
            and_dcpl_153 & and_dcpl_162 & and_dcpl_165 & and_dcpl_167));
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_14_2
            <= MUX1HOT_v_13_4_2((LINEAR_FORWARD_NO_MUL_LOOP_2_2_acc_12_sdt_15_0(12
            DOWNTO 0)), (attention_max_attn_fixed_t_1_conc_psp_mx0w12_14_0(14 DOWNTO
            2)), (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_2(14
            DOWNTO 2)), (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_8_sdt_51_0(14 DOWNTO
            2)), STD_LOGIC_VECTOR'( and_dcpl_153 & and_dcpl_162 & and_dcpl_165 &
            and_dcpl_167));
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_17_16
            <= MUX1HOT_v_2_4_2((LINEAR_FORWARD_NO_MUL_LOOP_2_2_acc_12_sdt_15_0(15
            DOWNTO 14)), (attention_max_attn_fixed_t_1_conc_psp_mx0w12_38_15(2 DOWNTO
            1)), (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(2
            DOWNTO 1)), (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_12_sdt_39_0(1 DOWNTO
            0)), STD_LOGIC_VECTOR'( and_dcpl_153 & and_dcpl_162 & and_dcpl_165 &
            and_dcpl_167));
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_59_58
            <= MUX1HOT_v_2_4_2(LINEAR_FORWARD_NO_MUL_LOOP_2_2_acc_13_psp_41_40, STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_max_attn_fixed_t_1_conc_psp_mx0w12_39,
            1),2)), STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd,
            1),2)), LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_13_sdt_41_40, STD_LOGIC_VECTOR'(
            and_dcpl_153 & and_dcpl_162 & and_dcpl_165 & and_dcpl_167));
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_57_39
            <= MUX1HOT_v_19_4_2((LINEAR_FORWARD_NO_MUL_LOOP_2_2_acc_13_psp_39_0(39
            DOWNTO 21)), STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_max_attn_fixed_t_1_conc_psp_mx0w12_39,
            1),19)), STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd,
            1),19)), (LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_13_sdt_39_0(39 DOWNTO 21)),
            STD_LOGIC_VECTOR'( and_dcpl_153 & and_dcpl_162 & and_dcpl_165 & and_dcpl_167));
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_38_18
            <= MUX1HOT_v_21_4_2((LINEAR_FORWARD_NO_MUL_LOOP_2_2_acc_13_psp_39_0(20
            DOWNTO 0)), (attention_max_attn_fixed_t_1_conc_psp_mx0w12_38_15(23 DOWNTO
            3)), (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(23
            DOWNTO 3)), (LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_13_sdt_39_0(20 DOWNTO
            0)), STD_LOGIC_VECTOR'( and_dcpl_153 & and_dcpl_162 & and_dcpl_165 &
            and_dcpl_167));
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_a_71
            <= LINEAR_FORWARD_NO_MUL_LOOP_2_2_mux1h_9_nl AND (NOT or_436_ssc);
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_a_70_68
            <= MUX_v_3_2_2(STD_LOGIC_VECTOR'("000"), LINEAR_FORWARD_NO_MUL_LOOP_2_2_mux1h_13_nl,
            LINEAR_FORWARD_NO_MUL_LOOP_2_2_not_4_nl);
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_a_67_47
            <= MUX_v_21_2_2(STD_LOGIC_VECTOR'("000000000000000000000"), LINEAR_FORWARD_NO_MUL_LOOP_2_2_mux1h_16_nl,
            LINEAR_FORWARD_NO_MUL_LOOP_2_2_not_2_nl);
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_a_46_32
            <= MUX1HOT_v_15_5_2((attention_5_1_384_384_8_48_v_proj_re_rsci_data_out_d(14
            DOWNTO 0)), (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(14
            DOWNTO 0)), STD_LOGIC_VECTOR'( "000000001111111"), (output_rsci_data_out_d(14
            DOWNTO 0)), reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_2,
            STD_LOGIC_VECTOR'( and_dcpl_158 & and_dcpl_159 & or_436_ssc & and_dcpl_169
            & and_188_ssc));
        SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a_55 <= SOFTMAX_LOOP_5_mux_nl AND
            (NOT and_197_ssc);
        SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a_54_31 <= MUX1HOT_v_24_3_2((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(38
            DOWNTO 15)), reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1,
            STD_LOGIC_VECTOR'( "000000000000000000000010"), STD_LOGIC_VECTOR'( and_192_nl
            & and_195_ssc & and_197_ssc));
        SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a_30_16 <= MUX_v_15_2_2(STD_LOGIC_VECTOR'("000000000000000"),
            SOFTMAX_LOOP_5_mux_1_nl, SOFTMAX_LOOP_5_not_1_nl);
        SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b_39 <= MUX1HOT_s_1_3_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(3)),
            (z_out_51_40_1(39)), reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd,
            STD_LOGIC_VECTOR'( and_198_ssc & and_dcpl_183 & and_202_ssc));
        SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b_38_36 <= MUX1HOT_v_3_3_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(2
            DOWNTO 0)), (z_out_51_40_1(38 DOWNTO 36)), (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(23
            DOWNTO 21)), STD_LOGIC_VECTOR'( and_198_ssc & and_dcpl_183 & and_202_ssc));
        SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b_35_15 <= MUX1HOT_v_21_3_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(35
            DOWNTO 15)), (z_out_51_40_1(35 DOWNTO 15)), (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(20
            DOWNTO 0)), STD_LOGIC_VECTOR'( and_198_ssc & and_dcpl_183 & and_202_ssc));
        SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b_14_0 <= MUX1HOT_v_15_3_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(14
            DOWNTO 0)), (z_out_51_40_1(14 DOWNTO 0)), reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_2,
            STD_LOGIC_VECTOR'( and_198_ssc & and_dcpl_183 & and_202_ssc));
        reg_strm_out_rsci_iswt0_cse <= and_dcpl_128 AND and_dcpl_185;
        reg_strm_in_rsci_iswt0_cse <= NOT(or_dcpl_156 OR (fsm_output(2)) OR (fsm_output(6))
            OR or_629_cse OR (fsm_output(5)) OR ((fsm_output(1)) AND CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm));
        SF_LOOP_3_acc_38_itm_18 <= MUX_s_1_2_2((operator_40_24_true_AC_TRN_AC_WRAP_acc_40_sdt(18)),
            (SF_LOOP_3_acc_38_sdt(18)), and_dcpl_450);
        reg_SF_LOOP_3_acc_38_1_ftd <= MUX1HOT_s_1_4_2((operator_40_24_true_AC_TRN_AC_WRAP_acc_40_sdt(17)),
            (operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z(17)), (operator_40_24_true_AC_TRN_AC_WRAP_2_acc_39_itm(17)),
            (SF_LOOP_3_acc_38_sdt(17)), STD_LOGIC_VECTOR'( and_dcpl_474 & SF_LOOP_3_and_itm
            & and_dcpl_514 & and_dcpl_450));
        reg_SF_LOOP_3_acc_38_1_ftd_1 <= MUX1HOT_v_8_5_2((operator_40_24_true_AC_TRN_AC_WRAP_acc_40_sdt(16
            DOWNTO 9)), (operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z(16 DOWNTO
            9)), (operator_40_24_true_AC_TRN_AC_WRAP_2_acc_39_itm(16 DOWNTO 9)),
            (APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_itm(16
            DOWNTO 9)), (SF_LOOP_3_acc_38_sdt(16 DOWNTO 9)), STD_LOGIC_VECTOR'( and_dcpl_474
            & SF_LOOP_3_and_itm & and_dcpl_514 & and_dcpl_196 & and_dcpl_450));
        reg_SF_LOOP_3_acc_38_1_ftd_2 <= MUX1HOT_v_9_6_2(for_for_j_and_1_nl, (operator_40_24_true_AC_TRN_AC_WRAP_acc_40_sdt(8
            DOWNTO 0)), (operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z(8 DOWNTO
            0)), (operator_40_24_true_AC_TRN_AC_WRAP_2_acc_39_itm(8 DOWNTO 0)), (APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_itm(8
            DOWNTO 0)), (SF_LOOP_3_acc_38_sdt(8 DOWNTO 0)), STD_LOGIC_VECTOR'( (NOT
            mux_396_nl) & and_dcpl_474 & SF_LOOP_3_and_itm & and_dcpl_514 & and_dcpl_196
            & and_dcpl_450));
        attention_round_1_qr_39_16_3_lpi_3_dfm_23_20 <= MUX_v_4_2_2((z_out_50(23
            DOWNTO 20)), (z_out_8(23 DOWNTO 20)), attention_round_1_qelse_or_16_cse);
        SF_LOOP_3_acc_5_psp_sva_21 <= z_out_2(21);
        SF_LOOP_3_acc_5_psp_sva_19_17 <= z_out_2(19 DOWNTO 17);
        SF_LOOP_3_acc_5_psp_sva_9 <= MUX_s_1_2_2(operator_40_24_true_AC_TRN_AC_WRAP_or_nl,
            (z_out_2(9)), and_dcpl_450);
        LINEAR_FORWARD_NO_MUL_LOOP_3_stage_0_2 <= QUANTIZE_ACTIVATION_LOOP_2_mux1h_nl
            AND (NOT and_dcpl_545);
        SF_LOOP_3_acc_45_itm_13_9 <= SF_LOOP_3_acc_45_sdt(13 DOWNTO 9);
        SF_LOOP_3_acc_45_itm_8_0 <= MUX_v_9_2_2(LINEAR_FORWARD_NO_MUL_LOOP_2_1_j_asn_SF_LOOP_3_acc_45_itm_1_8_RMS_NORM_LOOP_2_and_nl,
            (SF_LOOP_3_acc_45_sdt(8 DOWNTO 0)), and_dcpl_450);
        SF_LOOP_3_acc_53_itm_27_24 <= SF_LOOP_3_acc_86_sdt(12 DOWNTO 9);
        reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"),
            APPLY_ROTARY_POS_EMB_LOOP_6_k_mux1h_6_nl, nand_245_itm);
        reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_1 <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"),
            APPLY_ROTARY_POS_EMB_LOOP_6_k_mux1h_8_nl, nand_245_itm);
        reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_2 <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"),
            mux1h_4_nl, nand_245_itm);
        CACHE_UPDATE_LOOP_3_k_5_0_sva_5_4 <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"),
            CACHE_UPDATE_LOOP_3_k_mux1h_5_nl, nand_246_seb);
        reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"),
            CACHE_UPDATE_LOOP_3_k_mux1h_10_nl, nand_246_seb);
        reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1 <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"),
            mux1h_5_nl, nand_246_seb);
        SF_LOOP_3_acc_53_itm_14_9 <= SF_LOOP_3_acc_87_sdt(14 DOWNTO 9);
        operator_40_24_true_AC_TRN_AC_WRAP_acc_8_psp_60 <= z_out_58(60);
        operator_40_24_true_AC_TRN_AC_WRAP_acc_8_psp_59_57 <= MUX_v_3_2_2((attention_exp_exp_half_mul_4_cse_sva_1(59
            DOWNTO 57)), (z_out_58(59 DOWNTO 57)), and_dcpl_662);
        attention_exp_exp_half_mul_3_cse_sva <= z_out_11(79 DOWNTO 0);
        INIT_2D_MEM_LOOP_2_3_INIT_2D_MEM_LOOP_2_3_nor_itm <= INIT_2D_MEM_LOOP_2_3_INIT_2D_MEM_LOOP_2_3_nor_tmp;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LINEAR_FORWARD_NO_MUL_LOOP_5_and_1_mdf_sva <= '0';
      ELSIF ( (input_rsc_en_d_1 AND (NOT(or_tmp_227 OR or_607_cse OR or_dcpl_114
          OR CONV_SL_1_1(fsm_output(6 DOWNTO 5)/=STD_LOGIC_VECTOR'("10")) OR (NOT
          LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1)))) = '1' ) THEN
        LINEAR_FORWARD_NO_MUL_LOOP_5_and_1_mdf_sva <= LINEAR_FORWARD_NO_MUL_LOOP_5_and_1_tmp;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd
            <= STD_LOGIC_VECTOR'( "0000");
        reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1
            <= STD_LOGIC_VECTOR'( "000000000000000000000000000000000000");
      ELSIF ( GEMM_3D_FLOAT_LOOP_4_and_ssc = '1' ) THEN
        reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd
            <= MUX_v_4_2_2(STD_LOGIC_VECTOR'("0000"), mux1h_1_nl, GEMM_3D_FLOAT_LOOP_4_nand_3_itm);
        reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1
            <= MUX_v_36_2_2(STD_LOGIC_VECTOR'("000000000000000000000000000000000000"),
            mux1h_2_nl, GEMM_3D_FLOAT_LOOP_4_nand_3_itm);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd <= STD_LOGIC_VECTOR'( "000");
        reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_1 <= STD_LOGIC_VECTOR'(
            "00000");
        reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_2 <= STD_LOGIC_VECTOR'(
            "000");
        reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3 <= STD_LOGIC_VECTOR'(
            "000000000");
      ELSIF ( attention_round_1_qelse_and_3_ssc = '1' ) THEN
        reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd <= MUX1HOT_v_3_4_2((z_out_8(19
            DOWNTO 17)), (z_out_50(19 DOWNTO 17)), (SF_LOOP_3_acc_47_itm(19 DOWNTO
            17)), (SOFTMAX_LOOP_4_x_lpi_3_dfm_1_20_1_mx0w1(19 DOWNTO 17)), STD_LOGIC_VECTOR'(
            attention_round_1_qelse_or_16_cse & attention_round_1_qelse_or_9_cse
            & and_dcpl_450 & and_dcpl_661));
        reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_1 <= MUX1HOT_v_5_5_2((z_out_8(16
            DOWNTO 12)), (z_out_50(16 DOWNTO 12)), (APPLY_ROTARY_POS_EMB_LOOP_6_cosval_read_rom_cos_tab_rom_map_1_itm(16
            DOWNTO 12)), (SF_LOOP_3_acc_47_itm(16 DOWNTO 12)), (SOFTMAX_LOOP_4_x_lpi_3_dfm_1_20_1_mx0w1(16
            DOWNTO 12)), STD_LOGIC_VECTOR'( attention_round_1_qelse_or_16_cse & attention_round_1_qelse_or_9_cse
            & and_dcpl_196 & and_dcpl_450 & and_dcpl_661));
        reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_2 <= MUX1HOT_v_3_6_2((z_out_7(11
            DOWNTO 9)), (z_out_8(11 DOWNTO 9)), (z_out_50(11 DOWNTO 9)), (APPLY_ROTARY_POS_EMB_LOOP_6_cosval_read_rom_cos_tab_rom_map_1_itm(11
            DOWNTO 9)), (SF_LOOP_3_acc_47_itm(11 DOWNTO 9)), (SOFTMAX_LOOP_4_x_lpi_3_dfm_1_20_1_mx0w1(11
            DOWNTO 9)), STD_LOGIC_VECTOR'( and_dcpl_474 & attention_round_1_qelse_or_16_cse
            & attention_round_1_qelse_or_9_cse & and_dcpl_196 & and_dcpl_450 & and_dcpl_661));
        reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3 <= MUX1HOT_v_9_7_2(for_for_j_and_nl,
            (z_out_7(8 DOWNTO 0)), (z_out_8(8 DOWNTO 0)), (z_out_50(8 DOWNTO 0)),
            (APPLY_ROTARY_POS_EMB_LOOP_6_cosval_read_rom_cos_tab_rom_map_1_itm(8
            DOWNTO 0)), (SF_LOOP_3_acc_47_itm(8 DOWNTO 0)), (SOFTMAX_LOOP_4_x_lpi_3_dfm_1_20_1_mx0w1(8
            DOWNTO 0)), STD_LOGIC_VECTOR'( (NOT mux_422_nl) & and_dcpl_474 & attention_round_1_qelse_or_16_cse
            & attention_round_1_qelse_or_9_cse & and_dcpl_196 & and_dcpl_450 & and_dcpl_661));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm <= '0';
      ELSIF ( (input_rsc_en_d_1 AND (((NOT((NOT((z_out_19(2)) AND (z_out_22(4))))
          OR (NOT LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1) OR (z_out_31(2)))) AND
          mux_456_nl) OR and_dcpl_440 OR and_dcpl_494 OR and_dcpl_445 OR and_dcpl_366
          OR and_dcpl_496 OR CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm_mx0c5
          OR and_dcpl_497 OR and_dcpl_387 OR and_dcpl_348 OR and_dcpl_337 OR and_dcpl_240))
          = '1' ) THEN
        CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm <= NOT((NOT((for_for_mux1h_4_nl
            AND (NOT and_dcpl_118)) OR and_dcpl_496)) OR CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm_mx0c5);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        attention_sqrt_1_for_i_4_0_sva_4_3 <= STD_LOGIC_VECTOR'( "00");
        attention_sqrt_1_for_i_4_0_sva_2_0 <= STD_LOGIC_VECTOR'( "000");
      ELSIF ( attention_sqrt_1_for_i_and_ssc = '1' ) THEN
        attention_sqrt_1_for_i_4_0_sva_4_3 <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"),
            attention_sqrt_for_i_attention_sqrt_for_i_mux_nl, attention_sqrt_1_for_i_not_2_nl);
        attention_sqrt_1_for_i_4_0_sva_2_0 <= MUX_v_3_2_2(STD_LOGIC_VECTOR'("000"),
            mux1h_nl, nor_629_nl);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        attention_abs_4_qif_acc_pmx_lpi_1_dfm <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000");
      ELSIF ( (input_rsc_en_d_1 AND mux_516_nl) = '1' ) THEN
        attention_abs_4_qif_acc_pmx_lpi_1_dfm <= MUX1HOT_v_31_3_2(z_out_57, (z_out_9(30
            DOWNTO 0)), STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_52_nl),
            31)), STD_LOGIC_VECTOR'( attention_abs_qif_or_nl & attention_abs_qif_or_1_nl
            & and_dcpl_514));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        attention_sqrt_1_guess_sva_29_0 <= STD_LOGIC_VECTOR'( "000000000000000000000000000000");
      ELSIF ( (input_rsc_en_d_1 AND (attention_sqrt_1_guess_sva_29_0_mx0c0 OR and_dcpl_147
          OR attention_sqrt_1_guess_sva_29_0_mx0c2 OR attention_sqrt_1_guess_sva_29_0_mx0c3))
          = '1' ) THEN
        attention_sqrt_1_guess_sva_29_0 <= MUX1HOT_v_30_3_2(attention_abs_qif_acc_pmx_lpi_1_dfm_mx0_30_1,
            (z_out_51_40_1(29 DOWNTO 0)), (operator_40_24_true_AC_TRN_AC_WRAP_acc_nl(77
            DOWNTO 48)), STD_LOGIC_VECTOR'( attention_sqrt_guess_or_nl & and_dcpl_147
            & attention_sqrt_1_guess_sva_29_0_mx0c2));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        SF_LOOP_3_acc_5_psp_sva_8_0 <= STD_LOGIC_VECTOR'( "000000000");
        SF_LOOP_3_acc_53_itm_8_0 <= STD_LOGIC_VECTOR'( "000000000");
      ELSIF ( SF_LOOP_3_and_4_cse = '1' ) THEN
        SF_LOOP_3_acc_5_psp_sva_8_0 <= MUX1HOT_v_9_3_2(operator_40_24_true_AC_TRN_AC_WRAP_or_1_nl,
            z_out_29, (z_out_2(8 DOWNTO 0)), STD_LOGIC_VECTOR'( (NOT mux_530_nl)
            & and_545_nl & and_dcpl_450));
        SF_LOOP_3_acc_53_itm_8_0 <= MUX_v_9_2_2(z_out_20, (SF_LOOP_3_acc_87_sdt(8
            DOWNTO 0)), and_dcpl_450);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm <=
            '0';
      ELSIF ( (input_rsc_en_d_1 AND (and_dcpl_500 OR APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c1
          OR APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c2
          OR and_dcpl_260 OR and_dcpl_263 OR APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c5
          OR and_dcpl_530)) = '1' ) THEN
        APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm <=
            MUX1HOT_s_1_4_2((attention_sqrt_for_acc_3_nl(3)), (z_out_31(2)), z_out_30_2,
            operator_40_24_true_AC_TRN_AC_WRAP_or_mx0w6, STD_LOGIC_VECTOR'( and_dcpl_500
            & attention_sqrt_for_or_nl & attention_sqrt_for_or_1_nl & and_dcpl_530));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd
            <= '0';
        reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1
            <= STD_LOGIC_VECTOR'( "000000000000000000000000");
        reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_2
            <= STD_LOGIC_VECTOR'( "000000000000000");
      ELSIF ( GEMM_3D_FLOAT_LOOP_4_1_and_ssc = '1' ) THEN
        reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd
            <= MUX1HOT_s_1_12_2((z_out_51_40_1(39)), (z_out_10(67)), attention_max_attn_fixed_t_attention_max_attn_fixed_t_and_mut_mx0w2_39,
            (attention_5_1_384_384_8_48_k_proj_re_rsci_data_out_d(39)), (attention_5_1_384_384_8_48_v_proj_re_rsci_data_out_d(39)),
            (CACHE_UPDATE_LOOP_3_1_qif_read_rom_v_cache_rom_map_1_sdt(39)), (z_out_11(55)),
            (GEMM_3D_FLOAT_LOOP_4_acc_212_mx0w8(39)), (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(39)),
            (RMS_NORM_LOOP_2_2_mul_itm_71_32_1(39)), attention_max_attn_fixed_t_1_conc_psp_mx0w12_39,
            (output_rsci_data_out_d(39)), STD_LOGIC_VECTOR'( and_dcpl_147 & and_dcpl_447
            & and_dcpl_136 & GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_itm_mx0c4
            & and_dcpl_388 & and_dcpl_337 & GEMM_3D_FLOAT_LOOP_4_1_or_13_cse & and_dcpl_324
            & GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_itm_mx0c9
            & and_dcpl_242 & and_dcpl_162 & and_dcpl_169));
        reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1
            <= MUX1HOT_v_24_13_2((z_out_51_40_1(38 DOWNTO 15)), (z_out_10(66 DOWNTO
            43)), attention_max_attn_fixed_t_attention_max_attn_fixed_t_and_mut_mx0w2_38_15,
            (z_out_10(54 DOWNTO 31)), (attention_5_1_384_384_8_48_k_proj_re_rsci_data_out_d(38
            DOWNTO 15)), (attention_5_1_384_384_8_48_v_proj_re_rsci_data_out_d(38
            DOWNTO 15)), (CACHE_UPDATE_LOOP_3_1_qif_read_rom_v_cache_rom_map_1_sdt(38
            DOWNTO 15)), (z_out_11(54 DOWNTO 31)), (GEMM_3D_FLOAT_LOOP_4_acc_212_mx0w8(38
            DOWNTO 15)), (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(38
            DOWNTO 15)), (RMS_NORM_LOOP_2_2_mul_itm_71_32_1(38 DOWNTO 15)), attention_max_attn_fixed_t_1_conc_psp_mx0w12_38_15,
            (output_rsci_data_out_d(38 DOWNTO 15)), STD_LOGIC_VECTOR'( and_dcpl_147
            & and_dcpl_447 & and_dcpl_136 & attention_round_1_qelse_or_8_cse & GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_itm_mx0c4
            & and_dcpl_388 & and_dcpl_337 & GEMM_3D_FLOAT_LOOP_4_1_or_13_cse & and_dcpl_324
            & GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_itm_mx0c9
            & and_dcpl_242 & and_dcpl_162 & and_dcpl_169));
        reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_2
            <= MUX1HOT_v_15_12_2((z_out_51_40_1(14 DOWNTO 0)), (z_out_10(42 DOWNTO
            28)), attention_max_attn_fixed_t_attention_max_attn_fixed_t_and_mut_mx0w2_14_0,
            (attention_5_1_384_384_8_48_k_proj_re_rsci_data_out_d(14 DOWNTO 0)),
            (attention_5_1_384_384_8_48_v_proj_re_rsci_data_out_d(14 DOWNTO 0)),
            (CACHE_UPDATE_LOOP_3_1_qif_read_rom_v_cache_rom_map_1_sdt(14 DOWNTO 0)),
            (z_out_11(30 DOWNTO 16)), (GEMM_3D_FLOAT_LOOP_4_acc_212_mx0w8(14 DOWNTO
            0)), (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(14 DOWNTO
            0)), (RMS_NORM_LOOP_2_2_mul_itm_71_32_1(14 DOWNTO 0)), attention_max_attn_fixed_t_1_conc_psp_mx0w12_14_0,
            (output_rsci_data_out_d(14 DOWNTO 0)), STD_LOGIC_VECTOR'( and_dcpl_147
            & and_dcpl_447 & and_dcpl_136 & GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_itm_mx0c4
            & and_dcpl_388 & and_dcpl_337 & GEMM_3D_FLOAT_LOOP_4_1_or_13_cse & and_dcpl_324
            & GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_itm_mx0c9
            & and_dcpl_242 & and_dcpl_162 & and_dcpl_169));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1 <= '0';
      ELSIF ( (input_rsc_en_d_1 AND mux_588_nl) = '1' ) THEN
        LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1 <= (RMS_NORM_LOOP_2_mux1h_nl AND
            (NOT(mux_590_nl AND and_dcpl_132 AND and_dcpl_171 AND and_dcpl))) OR
            and_dcpl_496;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        SF_LOOP_3_acc_53_itm_23_15 <= STD_LOGIC_VECTOR'( "000000000");
      ELSIF ( (input_rsc_en_d_1 AND (mux_613_nl OR (fsm_output(7)))) = '1' ) THEN
        SF_LOOP_3_acc_53_itm_23_15 <= MUX1HOT_v_9_3_2(z_out_20, z_out_32, (SF_LOOP_3_acc_86_sdt(8
            DOWNTO 0)), STD_LOGIC_VECTOR'( SF_LOOP_3_SF_LOOP_3_nor_nl & and_dcpl_497
            & and_dcpl_450));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_8_sdt_52 <= '0';
        LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_8_sdt_51_0 <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000000000000000");
      ELSIF ( LINEAR_FORWARD_NO_MUL_LOOP_2_3_and_ssc = '1' ) THEN
        LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_8_sdt_52 <= MUX1HOT_s_1_3_2((LINEAR_FORWARD_NO_MUL_LOOP_2_acc_12_sdt_mx0w1(52)),
            (z_out_10(52)), (z_out_41_52_8(44)), STD_LOGIC_VECTOR'( and_dcpl_497
            & LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_8_sdt_mx0c2 & and_dcpl_556));
        LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_8_sdt_51_0 <= MUX1HOT_v_52_3_2((LINEAR_FORWARD_NO_MUL_LOOP_2_acc_12_sdt_mx0w1(51
            DOWNTO 0)), ((z_out_41_52_8(43 DOWNTO 0)) & (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_sdt_1(1
            DOWNTO 0)) & (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_sdt(5 DOWNTO 0))), (z_out_10(51
            DOWNTO 0)), STD_LOGIC_VECTOR'( nor_911_nl & and_dcpl_556 & or_1563_tmp));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        QUANTIZE_ACTIVATION_LOOP_2_1_slc_40_1_svs <= '0';
      ELSIF ( (input_rsc_en_d_1 AND ((LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1 AND
          (mux_619_nl OR (fsm_output(7)))) OR and_dcpl_447 OR and_dcpl_496 OR and_dcpl_242))
          = '1' ) THEN
        QUANTIZE_ACTIVATION_LOOP_2_1_slc_40_1_svs <= QUANTIZE_ACTIVATION_LOOP_2_if_mux1h_nl
            AND (NOT and_dcpl_496);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        GEMM_3D_FLOAT_LOOP_4_acc_193_itm <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000");
      ELSIF ( (input_rsc_en_d_1 AND (GEMM_3D_FLOAT_LOOP_4_acc_193_itm_mx0c0 OR and_dcpl_158
          OR GEMM_3D_FLOAT_LOOP_4_acc_193_itm_mx0c2 OR and_dcpl_264)) = '1' ) THEN
        GEMM_3D_FLOAT_LOOP_4_acc_193_itm <= MUX1HOT_v_40_4_2(z_out_12, (attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d(39
            DOWNTO 0)), GEMM_3D_FLOAT_LOOP_4_acc_212_mx0w8, (z_out_11(55 DOWNTO 16)),
            STD_LOGIC_VECTOR'( GEMM_3D_FLOAT_LOOP_4_acc_193_itm_mx0c0 & and_dcpl_158
            & GEMM_3D_FLOAT_LOOP_4_acc_193_itm_mx0c2 & and_dcpl_264));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt <= STD_LOGIC_VECTOR'( "0000");
      ELSIF ( (input_rsc_en_d_1 AND ((APPLY_ROTARY_POS_EMB_LOOP_6_mux_2_nl AND mux_677_nl)
          OR APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt_mx0c0 OR APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt_mx0c1
          OR and_dcpl_581 OR and_dcpl_348 OR and_dcpl_584 OR and_dcpl_337 OR and_dcpl_328
          OR and_dcpl_587 OR and_dcpl_588 OR and_dcpl_260 OR and_dcpl_530)) = '1'
          ) THEN
        APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt <= MUX_v_4_2_2(STD_LOGIC_VECTOR'("0000"),
            (APPLY_ROTARY_POS_EMB_LOOP_6_mux1h_11_nl & APPLY_ROTARY_POS_EMB_LOOP_6_mux1h_17_nl
            & APPLY_ROTARY_POS_EMB_LOOP_6_mux1h_18_nl), nor_nl);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000");
      ELSIF ( (input_rsc_en_d_1 AND (NOT mux_691_nl)) = '1' ) THEN
        QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva <= MUX1HOT_v_40_4_2(operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z,
            z_out_59, (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(39
            DOWNTO 0)), (LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z(39
            DOWNTO 0)), STD_LOGIC_VECTOR'( and_612_nl & and_dcpl_293 & operator_40_24_true_AC_TRN_AC_WRAP_1_or_nl
            & and_622_nl));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_4_2 <= STD_LOGIC_VECTOR'( "000");
        APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_1 <= '0';
        APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_0 <= '0';
      ELSIF ( APPLY_ROTARY_POS_EMB_LOOP_3_and_ssc = '1' ) THEN
        APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_4_2 <= MUX1HOT_v_3_4_2((z_out_22(4
            DOWNTO 2)), (z_out_23(3 DOWNTO 1)), (z_out_32(4 DOWNTO 2)), (GEMM_3D_FLOAT_LOOP_4_1_acc_33_sdt_mx0w5(4
            DOWNTO 2)), STD_LOGIC_VECTOR'( APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_mx0c0
            & and_dcpl_348 & LINEAR_FORWARD_NO_MUL_LOOP_4_1_ki_or_cse & and_dcpl_263));
        APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_1 <= MUX1HOT_s_1_5_2((z_out_22(1)),
            z_out_55_1, (z_out_23(0)), (z_out_32(1)), (GEMM_3D_FLOAT_LOOP_4_1_acc_33_sdt_mx0w5(1)),
            STD_LOGIC_VECTOR'( APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_mx0c0 &
            APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_mx0c1 & and_dcpl_348 & LINEAR_FORWARD_NO_MUL_LOOP_4_1_ki_or_cse
            & and_dcpl_263));
        APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_0 <= MUX1HOT_s_1_5_2((z_out_22(0)),
            z_out_55_0, (z_out_14(0)), (z_out_32(0)), (GEMM_3D_FLOAT_LOOP_4_1_acc_33_sdt_mx0w5(0)),
            STD_LOGIC_VECTOR'( APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_mx0c0 &
            APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_mx0c1 & and_dcpl_348 & LINEAR_FORWARD_NO_MUL_LOOP_4_1_ki_or_cse
            & and_dcpl_263));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        reg_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_ftd <= STD_LOGIC_VECTOR'( "0000");
        reg_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_ftd_1 <= STD_LOGIC_VECTOR'(
            "00");
        reg_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_ftd_2 <= STD_LOGIC_VECTOR'(
            "00");
      ELSIF ( LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_and_ssc = '1' ) THEN
        reg_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_ftd <= MUX1HOT_v_4_7_2(STD_LOGIC_VECTOR'(
            "1000"), STD_LOGIC_VECTOR'( "0111"), (reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(7
            DOWNTO 4)), (attention_round_qr_39_16_lpi_3_dfm_mx0w0(7 DOWNTO 4)), reg_GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_ftd,
            (z_out_20(7 DOWNTO 4)), LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_lpi_3_mx2_7_4,
            STD_LOGIC_VECTOR'( QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_or_itm
            & QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_or_1_itm & QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_12_itm
            & QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_13_itm & and_dcpl_395
            & and_dcpl_274 & and_dcpl_118));
        reg_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_ftd_1 <= MUX_v_2_2_2(QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_nor_nl,
            STD_LOGIC_VECTOR'("11"), QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_or_1_itm);
        reg_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_ftd_2 <= MUX_v_2_2_2(QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_15_nl,
            STD_LOGIC_VECTOR'("11"), QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_or_1_itm);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        reg_GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_ftd <= STD_LOGIC_VECTOR'( "0000");
        reg_GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_ftd_1 <= STD_LOGIC_VECTOR'( "00");
        reg_GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_ftd_2 <= STD_LOGIC_VECTOR'( "00");
      ELSIF ( GEMM_3D_FLOAT_LOOP_4_and_2_ssc = '1' ) THEN
        reg_GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_ftd <= MUX1HOT_v_4_7_2(STD_LOGIC_VECTOR'(
            "1000"), STD_LOGIC_VECTOR'( "0111"), (reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(7
            DOWNTO 4)), (LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_read_rom_k_weights_rom_map_1_itm(7
            DOWNTO 4)), reg_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_ftd, (GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_mx0w2(7
            DOWNTO 4)), (operator_40_24_true_AC_TRN_AC_WRAP_acc_28_mx0w3(7 DOWNTO
            4)), STD_LOGIC_VECTOR'( QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_or_3_itm
            & QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_or_4_itm & QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_or_5_itm
            & QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_20_itm & QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_21_itm
            & and_dcpl_274 & and_dcpl_530));
        reg_GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_ftd_1 <= MUX_v_2_2_2(QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_23_nl,
            STD_LOGIC_VECTOR'("11"), QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_or_4_itm);
        reg_GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_ftd_2 <= MUX_v_2_2_2(QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_24_nl,
            STD_LOGIC_VECTOR'("11"), QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_or_4_itm);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_lpi_3_7 <= '0';
      ELSIF ( LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_and_ssc = '1' ) THEN
        LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_lpi_3_7 <= LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_lpi_3_mx1_7;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_lpi_3_6_0 <= STD_LOGIC_VECTOR'( "0000000");
      ELSIF ( (LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_and_ssc AND ((NOT LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_lpi_3_mx0c2)
          OR LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_and_1_rgt)) = '1' ) THEN
        LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_lpi_3_6_0 <= MUX_v_7_2_2(LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_lpi_3_mx1_6_0,
            STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_4_acc_192_nl),
            7)), LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_and_1_rgt);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LINEAR_FORWARD_NO_MUL_LOOP_5_1_l_2_0_lpi_3_1_0 <= STD_LOGIC_VECTOR'( "00");
      ELSIF ( (input_rsc_en_d_1 AND ((LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1 AND
          mux_720_nl) OR and_dcpl_274)) = '1' ) THEN
        LINEAR_FORWARD_NO_MUL_LOOP_5_1_l_2_0_lpi_3_1_0 <= MUX1HOT_v_2_3_2((z_out_20(1
            DOWNTO 0)), STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_4_acc_17_nl),
            2)), (z_out_19(1 DOWNTO 0)), STD_LOGIC_VECTOR'( and_dcpl_373 & and_dcpl_274
            & and_dcpl_118));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_7 <= '0';
      ELSIF ( LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_and_ssc = '1' ) THEN
        LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_7 <= LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_dfm_7;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_6_0 <= STD_LOGIC_VECTOR'(
            "0000000");
      ELSIF ( (LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_and_ssc AND ((NOT LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_mx0c2)
          OR LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_and_3_rgt)) = '1' ) THEN
        LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_6_0 <= MUX_v_7_2_2(LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_dfm_6_0,
            z_out_34, LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_and_3_rgt);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd <= '0';
        reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd_1 <= STD_LOGIC_VECTOR'(
            "00");
      ELSIF ( APPLY_ROTARY_POS_EMB_LOOP_1_i_and_5_ssc = '1' ) THEN
        reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd <= APPLY_ROTARY_POS_EMB_LOOP_1_i_mux1h_5_nl
            AND (NOT APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_mx0c0);
        reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd_1 <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"),
            APPLY_ROTARY_POS_EMB_LOOP_1_i_mux1h_8_nl, APPLY_ROTARY_POS_EMB_LOOP_1_i_not_2_nl);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd <= STD_LOGIC_VECTOR'( "00");
        reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1 <= '0';
      ELSIF ( CACHE_UPDATE_LOOP_2_1_j_and_ssc = '1' ) THEN
        reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd <= NOT(MUX_v_2_2_2(APPLY_ROTARY_POS_EMB_LOOP_1_i_nand_nl,
            STD_LOGIC_VECTOR'("11"), CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c0));
        reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1 <= NOT((NOT(APPLY_ROTARY_POS_EMB_LOOP_1_i_mux1h_9_nl
            OR CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c7)) OR CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c0);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        GEMM_3D_FLOAT_LOOP_4_1_acc_23_cse_sva <= STD_LOGIC_VECTOR'( "0000");
      ELSIF ( (input_rsc_en_d_1 AND ((LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1 AND
          (NOT(mux_789_nl AND (NOT (fsm_output(8)))))) OR and_dcpl_545 OR and_dcpl_387
          OR and_dcpl_274 OR and_dcpl_263)) = '1' ) THEN
        GEMM_3D_FLOAT_LOOP_4_1_acc_23_cse_sva <= MUX_v_4_2_2(STD_LOGIC_VECTOR'("0000"),
            APPLY_ROTARY_POS_EMB_LOOP_6_mux1h_12_nl, nor_908_nl);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp <= STD_LOGIC_VECTOR'( "0000");
      ELSIF ( (input_rsc_en_d_1 AND ((NOT(or_dcpl_202 OR (NOT(mux_798_nl OR (fsm_output(8))))))
          OR and_dcpl_545 OR and_dcpl_581 OR and_dcpl_348 OR and_dcpl_584 OR and_dcpl_337
          OR and_dcpl_587 OR and_dcpl_588 OR and_dcpl_260)) = '1' ) THEN
        APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp <= MUX_v_4_2_2(STD_LOGIC_VECTOR'("0000"),
            APPLY_ROTARY_POS_EMB_LOOP_6_mux1h_15_nl, not_2256_nl);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva_4_2 <= STD_LOGIC_VECTOR'( "000");
      ELSIF ( APPLY_ROTARY_POS_EMB_LOOP_3_and_1_ssc = '1' ) THEN
        APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva_4_2 <= MUX1HOT_v_3_3_2((APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva_2(4
            DOWNTO 2)), (z_out_22(4 DOWNTO 2)), (GEMM_3D_FLOAT_LOOP_4_1_mul_sdt_1_sva_mx0w5(4
            DOWNTO 2)), STD_LOGIC_VECTOR'( and_dcpl_348 & LINEAR_FORWARD_NO_MUL_LOOP_4_1_ki_or_cse
            & and_dcpl_263));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva_1_0 <= STD_LOGIC_VECTOR'( "00");
      ELSIF ( (APPLY_ROTARY_POS_EMB_LOOP_3_and_1_ssc AND (NOT and_dcpl_612)) = '1'
          ) THEN
        APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva_1_0 <= MUX1HOT_v_2_4_2((z_out_19(1
            DOWNTO 0)), (APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva_2(1 DOWNTO 0)),
            (z_out_22(1 DOWNTO 0)), (GEMM_3D_FLOAT_LOOP_4_1_mul_sdt_1_sva_mx0w5(1
            DOWNTO 0)), STD_LOGIC_VECTOR'( and_dcpl_630 & and_dcpl_348 & LINEAR_FORWARD_NO_MUL_LOOP_4_1_ki_or_cse
            & and_dcpl_263));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_5_2 <= STD_LOGIC_VECTOR'( "0000");
      ELSIF ( (input_rsc_en_d_1 AND (NOT and_667_ssc)) = '1' ) THEN
        APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_5_2 <= MUX1HOT_v_4_4_2((CACHE_UPDATE_LOOP_3_k_5_0_sva_1_mx0w8(5
            DOWNTO 2)), (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_3(5 DOWNTO 2)), (GEMM_3D_FLOAT_LOOP_4_acc_34_sdt(5
            DOWNTO 2)), (GEMM_3D_FLOAT_LOOP_4_1_acc_36_sdt_mx0w5(5 DOWNTO 2)), STD_LOGIC_VECTOR'(
            and_dcpl_387 & and_668_ssc & and_dcpl_274 & and_dcpl_263));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0 <= STD_LOGIC_VECTOR'( "00");
      ELSIF ( (input_rsc_en_d_1 AND (NOT and_dcpl_612) AND (NOT and_667_ssc)) = '1'
          ) THEN
        APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0 <= MUX1HOT_v_2_5_2((z_out_21(1
            DOWNTO 0)), (CACHE_UPDATE_LOOP_3_k_5_0_sva_1_mx0w8(1 DOWNTO 0)), (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_3(1
            DOWNTO 0)), (GEMM_3D_FLOAT_LOOP_4_acc_34_sdt(1 DOWNTO 0)), (GEMM_3D_FLOAT_LOOP_4_1_acc_36_sdt_mx0w5(1
            DOWNTO 0)), STD_LOGIC_VECTOR'( and_dcpl_630 & and_dcpl_387 & and_668_ssc
            & and_dcpl_274 & and_dcpl_263));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_dfm_7 <= '0';
      ELSIF ( LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_and_1_ssc = '1' ) THEN
        LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_dfm_7 <= MUX_s_1_2_2((LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_read_rom_v_weights_rom_map_1_sdt(7)),
            LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_7, and_dcpl_25);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_dfm_6_0 <= STD_LOGIC_VECTOR'(
            "0000000");
      ELSIF ( (LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_and_1_ssc AND ((NOT LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_dfm_mx1c2)
          OR LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_and_5_rgt)) = '1' ) THEN
        LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_dfm_6_0 <= MUX1HOT_v_7_3_2((LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_read_rom_v_weights_rom_map_1_sdt(6
            DOWNTO 0)), LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_6_0, GEMM_3D_FLOAT_LOOP_4_acc_191_sdt_1,
            STD_LOGIC_VECTOR'( LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_nor_1_nl
            & LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_and_10_nl & LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_and_5_rgt));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        CACHE_UPDATE_LOOP_3_1_qif_acc_3_ncse_2_0 <= STD_LOGIC_VECTOR'( "000");
      ELSIF ( (input_rsc_en_d_1 AND (and_dcpl_373 OR and_dcpl_337 OR and_dcpl_274
          OR and_dcpl_588)) = '1' ) THEN
        CACHE_UPDATE_LOOP_3_1_qif_acc_3_ncse_2_0 <= MUX1HOT_v_3_4_2(z_out_27, attention_sqrt_1_for_i_4_0_sva_2_0,
            z_out_28, z_out_19, STD_LOGIC_VECTOR'( CACHE_UPDATE_LOOP_3_1_qif_and_1_nl
            & CACHE_UPDATE_LOOP_3_1_qif_and_2_nl & CACHE_UPDATE_LOOP_3_1_qif_or_1_nl
            & and_dcpl_274));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        CACHE_UPDATE_LOOP_3_qif_acc_3_ncse_2_1 <= STD_LOGIC_VECTOR'( "00");
        CACHE_UPDATE_LOOP_3_qif_acc_3_ncse_0 <= '0';
      ELSIF ( CACHE_UPDATE_LOOP_3_qif_and_ssc = '1' ) THEN
        CACHE_UPDATE_LOOP_3_qif_acc_3_ncse_2_1 <= MUX1HOT_v_2_3_2((z_out_28(2 DOWNTO
            1)), reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd, (z_out_27(2 DOWNTO 1)), STD_LOGIC_VECTOR'(
            CACHE_UPDATE_LOOP_3_qif_CACHE_UPDATE_LOOP_3_qif_nor_ssc & CACHE_UPDATE_LOOP_3_qif_and_2_ssc
            & LINEAR_FORWARD_NO_MUL_LOOP_4_1_ki_or_cse));
        CACHE_UPDATE_LOOP_3_qif_acc_3_ncse_0 <= MUX1HOT_s_1_3_2((z_out_28(0)), reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1,
            (z_out_27(0)), STD_LOGIC_VECTOR'( CACHE_UPDATE_LOOP_3_qif_CACHE_UPDATE_LOOP_3_qif_nor_ssc
            & CACHE_UPDATE_LOOP_3_qif_and_2_ssc & LINEAR_FORWARD_NO_MUL_LOOP_4_1_ki_or_cse));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        GEMM_3D_FLOAT_LOOP_4_1_acc_28_cse_sva <= STD_LOGIC_VECTOR'( "0000");
      ELSIF ( (input_rsc_en_d_1 AND (and_dcpl_373 OR and_dcpl_387 OR and_dcpl_274
          OR and_dcpl_263)) = '1' ) THEN
        GEMM_3D_FLOAT_LOOP_4_1_acc_28_cse_sva <= MUX1HOT_v_4_4_2(LINEAR_FORWARD_NO_MUL_LOOP_4_LINEAR_FORWARD_NO_MUL_LOOP_4_and_1_nl,
            z_out_23, STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_4_acc_241_nl),
            4)), GEMM_3D_FLOAT_LOOP_4_1_acc_28_cse_sva_mx0w3, STD_LOGIC_VECTOR'(
            and_dcpl_373 & and_dcpl_387 & and_dcpl_274 & and_dcpl_263));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        GEMM_3D_FLOAT_LOOP_4_1_acc_20_itm <= STD_LOGIC_VECTOR'( "0000000");
      ELSIF ( (input_rsc_en_d_1 AND (and_dcpl_373 OR and_dcpl_274 OR and_dcpl_263))
          = '1' ) THEN
        GEMM_3D_FLOAT_LOOP_4_1_acc_20_itm <= MUX1HOT_v_7_3_2(LINEAR_FORWARD_NO_MUL_LOOP_5_1_weight_val_lshift_itm,
            GEMM_3D_FLOAT_LOOP_4_acc_183_sdt_mx0w1, z_out_39, STD_LOGIC_VECTOR'(
            and_dcpl_373 & and_dcpl_274 & and_dcpl_263));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        GEMM_3D_FLOAT_LOOP_4_acc_185_sdt <= STD_LOGIC_VECTOR'( "0000000");
      ELSIF ( (input_rsc_en_d_1 AND (mux_830_nl OR (fsm_output(8)))) = '1' ) THEN
        GEMM_3D_FLOAT_LOOP_4_acc_185_sdt <= MUX_v_7_2_2(LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_lshift_itm,
            GEMM_3D_FLOAT_LOOP_4_acc_185_sdt_mx0w2, and_dcpl_274);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        CACHE_UPDATE_LOOP_3_k_5_0_sva_1_5_4 <= STD_LOGIC_VECTOR'( "00");
      ELSIF ( (input_rsc_en_d_1 AND (NOT and_688_ssc)) = '1' ) THEN
        CACHE_UPDATE_LOOP_3_k_5_0_sva_1_5_4 <= MUX_v_2_2_2((APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_3(5
            DOWNTO 4)), (CACHE_UPDATE_LOOP_3_k_5_0_sva_1_mx0w8(5 DOWNTO 4)), and_dcpl_337);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        CACHE_UPDATE_LOOP_3_k_5_0_sva_1_3_0 <= STD_LOGIC_VECTOR'( "0000");
      ELSIF ( (input_rsc_en_d_1 AND (mux_822_nl OR (fsm_output(8))) AND (NOT and_688_ssc))
          = '1' ) THEN
        CACHE_UPDATE_LOOP_3_k_5_0_sva_1_3_0 <= MUX1HOT_v_4_5_2(LINEAR_FORWARD_NO_MUL_LOOP_4_LINEAR_FORWARD_NO_MUL_LOOP_4_and_2_nl,
            (z_out_31(3 DOWNTO 0)), z_out_14, (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_3(3
            DOWNTO 0)), (CACHE_UPDATE_LOOP_3_k_5_0_sva_1_mx0w8(3 DOWNTO 0)), STD_LOGIC_VECTOR'(
            and_dcpl_373 & and_dcpl_274 & and_dcpl_263 & and_dcpl_387 & and_dcpl_337));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LINEAR_FORWARD_NO_MUL_LOOP_2_acc_13_psp <= STD_LOGIC_VECTOR'( "00000000000000000000000000000000000000000");
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_acc_12_sdt_15_0 <= STD_LOGIC_VECTOR'( "0000000000000000");
      ELSIF ( LINEAR_FORWARD_NO_MUL_LOOP_2_and_cse = '1' ) THEN
        LINEAR_FORWARD_NO_MUL_LOOP_2_acc_13_psp <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED(LINEAR_FORWARD_NO_MUL_LOOP_2_acc_12_sdt_mx0w1(52
            DOWNTO 15)), 38), 41) + CONV_UNSIGNED(CONV_SIGNED(SIGNED(QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva),
            40), 41), 41));
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_acc_12_sdt_15_0 <= z_out_58(15 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_acc_13_psp_41_40 <= STD_LOGIC_VECTOR'( "00");
      ELSIF ( LINEAR_FORWARD_NO_MUL_LOOP_2_2_and_ssc = '1' ) THEN
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_acc_13_psp_41_40 <= z_out_40(41 DOWNTO 40);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_acc_13_psp_39_0 <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000");
      ELSIF ( (LINEAR_FORWARD_NO_MUL_LOOP_2_2_and_ssc AND ((NOT LINEAR_FORWARD_NO_MUL_LOOP_2_2_acc_13_psp_mx0c1)
          OR and_dcpl_285 OR and_dcpl_309)) = '1' ) THEN
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_acc_13_psp_39_0 <= MUX_v_40_2_2((z_out_40(39
            DOWNTO 0)), z_out_59, LINEAR_FORWARD_NO_MUL_LOOP_2_2_or_2_nl);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_13_sdt_41_40 <= STD_LOGIC_VECTOR'( "00");
      ELSIF ( LINEAR_FORWARD_NO_MUL_LOOP_2_1_and_ssc = '1' ) THEN
        LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_13_sdt_41_40 <= MUX_v_2_2_2((LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_13_sdt_mx0w0(41
            DOWNTO 40)), (z_out_40(41 DOWNTO 40)), and_dcpl_556);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_13_sdt_39_0 <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000");
      ELSIF ( (LINEAR_FORWARD_NO_MUL_LOOP_2_1_and_ssc AND (NOT(mux_953_nl AND LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_13_sdt_mx0c1)))
          = '1' ) THEN
        LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_13_sdt_39_0 <= MUX1HOT_v_40_4_2((LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_13_sdt_mx0w0(39
            DOWNTO 0)), GEMM_3D_FLOAT_LOOP_4_acc_212_mx0w8, z_out_62, (z_out_40(39
            DOWNTO 0)), STD_LOGIC_VECTOR'( and_dcpl_497 & and_710_nl & LINEAR_FORWARD_NO_MUL_LOOP_2_1_or_2_nl
            & and_dcpl_556));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_12_sdt_42_41 <= STD_LOGIC_VECTOR'( "00");
      ELSIF ( LINEAR_FORWARD_NO_MUL_LOOP_2_3_and_1_ssc = '1' ) THEN
        LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_12_sdt_42_41 <= z_out_9(42 DOWNTO 41);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_12_sdt_40 <= '0';
      ELSIF ( (LINEAR_FORWARD_NO_MUL_LOOP_2_3_and_1_ssc AND (NOT and_dcpl_655)) =
          '1' ) THEN
        LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_12_sdt_40 <= MUX_s_1_2_2((LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_14_sdt(40)),
            (z_out_9(40)), LINEAR_FORWARD_NO_MUL_LOOP_2_3_or_7_cse);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_12_sdt_39_0 <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000");
      ELSIF ( (LINEAR_FORWARD_NO_MUL_LOOP_2_3_and_1_ssc AND (NOT(and_dcpl_655 OR
          ((NOT mux_966_nl) AND LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_12_sdt_mx0c1))))
          = '1' ) THEN
        LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_12_sdt_39_0 <= MUX1HOT_v_40_4_2((LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_14_sdt(39
            DOWNTO 0)), z_out_61, (attention_5_1_384_384_8_48_v_cache_upd_rsci_data_out_d(39
            DOWNTO 0)), (z_out_9(39 DOWNTO 0)), STD_LOGIC_VECTOR'( LINEAR_FORWARD_NO_MUL_LOOP_2_3_and_2_cse
            & LINEAR_FORWARD_NO_MUL_LOOP_2_3_or_5_nl & and_dcpl_265 & LINEAR_FORWARD_NO_MUL_LOOP_2_3_or_7_cse));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        operator_40_24_true_AC_TRN_AC_WRAP_acc_8_psp_56_0 <= STD_LOGIC_VECTOR'( "000000000000000000000000000000000000000000000000000000000");
      ELSIF ( (input_rsc_en_d_1 AND (NOT and_dcpl_655)) = '1' ) THEN
        operator_40_24_true_AC_TRN_AC_WRAP_acc_8_psp_56_0 <= MUX1HOT_v_57_3_2(LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_11_sdt_1,
            (attention_exp_exp_half_mul_4_cse_sva_1(56 DOWNTO 0)), (z_out_58(56 DOWNTO
            0)), STD_LOGIC_VECTOR'( LINEAR_FORWARD_NO_MUL_LOOP_2_3_and_2_cse & and_dcpl_661
            & and_dcpl_662));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0 <= STD_LOGIC_VECTOR'( "000");
      ELSIF ( (input_rsc_en_d_1 AND ((mux_923_nl AND and_dcpl_19) OR GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0_mx0c1))
          = '1' ) THEN
        GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0 <= MUX_v_3_2_2(STD_LOGIC_VECTOR'("000"),
            (z_out_35(2 DOWNTO 0)), GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0_mx0c1);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        GEMM_3D_FLOAT_LOOP_4_mul_sdt_15_sva <= STD_LOGIC_VECTOR'( "00000");
      ELSIF ( (input_rsc_en_d_1 AND (NOT(mux_940_nl AND and_dcpl_606))) = '1' ) THEN
        GEMM_3D_FLOAT_LOOP_4_mul_sdt_15_sva <= MUX_v_5_2_2(attention_sqrt_for_i_4_0_sva_1_mx0w0,
            GEMM_3D_FLOAT_LOOP_4_1_mul_sdt_1_sva_mx0w5, and_dcpl_274);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        GEMM_3D_FLOAT_LOOP_4_acc_244_psp <= STD_LOGIC_VECTOR'( "0000");
        GEMM_3D_FLOAT_LOOP_4_acc_243_sdt_2_0 <= STD_LOGIC_VECTOR'( "000");
        GEMM_3D_FLOAT_LOOP_4_acc_245_psp <= STD_LOGIC_VECTOR'( "0000");
        GEMM_3D_FLOAT_LOOP_4_acc_40_cse_sva <= STD_LOGIC_VECTOR'( "0000");
        GEMM_3D_FLOAT_LOOP_4_acc_246_psp <= STD_LOGIC_VECTOR'( "0000");
        GEMM_3D_FLOAT_LOOP_4_acc_247_psp <= STD_LOGIC_VECTOR'( "0000");
        GEMM_3D_FLOAT_LOOP_4_acc_248_psp <= STD_LOGIC_VECTOR'( "0000");
        reg_GEMM_3D_FLOAT_LOOP_4_acc_96_cse <= STD_LOGIC_VECTOR'( "0000");
        GEMM_3D_FLOAT_LOOP_4_acc_251_psp <= STD_LOGIC_VECTOR'( "0000");
        GEMM_3D_FLOAT_LOOP_4_acc_250_sdt_2_0 <= STD_LOGIC_VECTOR'( "000");
        GEMM_3D_FLOAT_LOOP_4_acc_21_cse_sva <= STD_LOGIC_VECTOR'( "0000000");
        GEMM_3D_FLOAT_LOOP_4_acc_252_psp <= STD_LOGIC_VECTOR'( "0000");
      ELSIF ( GEMM_3D_FLOAT_LOOP_4_and_5_cse = '1' ) THEN
        GEMM_3D_FLOAT_LOOP_4_acc_244_psp <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(z_out_25(3),
            1), 1), 4) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0),
            3), 4), 4));
        GEMM_3D_FLOAT_LOOP_4_acc_243_sdt_2_0 <= z_out_25(2 DOWNTO 0);
        GEMM_3D_FLOAT_LOOP_4_acc_245_psp <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(z_out_34(6),
            1), 1), 4) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0),
            3), 4), 4));
        GEMM_3D_FLOAT_LOOP_4_acc_40_cse_sva <= z_out_16;
        GEMM_3D_FLOAT_LOOP_4_acc_246_psp <= z_out_36(3 DOWNTO 0);
        GEMM_3D_FLOAT_LOOP_4_acc_247_psp <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_mx0w2(7),
            1), 1), 4) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0),
            3), 4), 4));
        GEMM_3D_FLOAT_LOOP_4_acc_248_psp <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(GEMM_3D_FLOAT_LOOP_4_acc_191_sdt_1(6),
            1), 1), 4) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0),
            3), 4), 4));
        reg_GEMM_3D_FLOAT_LOOP_4_acc_96_cse <= z_out_17;
        GEMM_3D_FLOAT_LOOP_4_acc_251_psp <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(z_out_15(3),
            1), 1), 4) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0),
            3), 4), 4));
        GEMM_3D_FLOAT_LOOP_4_acc_250_sdt_2_0 <= z_out_15(2 DOWNTO 0);
        GEMM_3D_FLOAT_LOOP_4_acc_21_cse_sva <= z_out_39;
        GEMM_3D_FLOAT_LOOP_4_acc_252_psp <= z_out_33;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        GEMM_3D_FLOAT_LOOP_4_1_acc_34_sdt <= STD_LOGIC_VECTOR'( "0000");
        GEMM_3D_FLOAT_LOOP_4_1_acc_41_psp <= STD_LOGIC_VECTOR'( "0000");
        GEMM_3D_FLOAT_LOOP_4_1_acc_42_psp <= STD_LOGIC_VECTOR'( "0000");
        GEMM_3D_FLOAT_LOOP_4_1_acc_43_psp <= STD_LOGIC_VECTOR'( "0000");
        GEMM_3D_FLOAT_LOOP_4_1_acc_45_psp <= STD_LOGIC_VECTOR'( "0000");
      ELSIF ( GEMM_3D_FLOAT_LOOP_4_1_and_4_cse = '1' ) THEN
        GEMM_3D_FLOAT_LOOP_4_1_acc_34_sdt <= MUX_v_4_2_2(GEMM_3D_FLOAT_LOOP_4_1_acc_28_cse_sva_mx0w3,
            z_out_23, and_dcpl_263);
        GEMM_3D_FLOAT_LOOP_4_1_acc_41_psp <= MUX_v_4_2_2(z_out_14, z_out_35, and_dcpl_263);
        GEMM_3D_FLOAT_LOOP_4_1_acc_42_psp <= MUX_v_4_2_2(z_out_24, (z_out_37(3 DOWNTO
            0)), and_dcpl_263);
        GEMM_3D_FLOAT_LOOP_4_1_acc_43_psp <= MUX_v_4_2_2(z_out_23, z_out_33, and_dcpl_263);
        GEMM_3D_FLOAT_LOOP_4_1_acc_45_psp <= MUX_v_4_2_2((z_out_37(3 DOWNTO 0)),
            z_out_16, and_dcpl_263);
      END IF;
    END IF;
  END PROCESS;
  RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_mux1h_nl <= MUX1HOT_s_1_3_2((z_out_12(39)), QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_39,
      (GEMM_3D_FLOAT_LOOP_4_acc_193_itm(39)), STD_LOGIC_VECTOR'( RMS_NORM_LOOP_2_and_4_ssc_1
      & RMS_NORM_LOOP_2_2_and_1_ssc_1 & and_19_cse));
  RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_mux1h_nl <= MUX1HOT_s_1_3_2((z_out_12(39)),
      QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_39, (GEMM_3D_FLOAT_LOOP_4_acc_193_itm(39)),
      STD_LOGIC_VECTOR'( RMS_NORM_LOOP_2_2_and_4_ssc_1 & RMS_NORM_LOOP_2_2_and_1_ssc_1
      & and_19_cse));
  mux_205_nl <= MUX_s_1_2_2((NOT or_tmp_227), (fsm_output(8)), fsm_output(7));
  mux_206_nl <= MUX_s_1_2_2(mux_205_nl, and_849_cse, or_369_cse);
  mux_203_nl <= MUX_s_1_2_2(and_tmp_16, (fsm_output(8)), or_368_cse);
  or_366_nl <= (fsm_output(0)) OR (fsm_output(1)) OR (fsm_output(7));
  mux_202_nl <= MUX_s_1_2_2(and_tmp_16, (fsm_output(8)), or_366_nl);
  mux_204_nl <= MUX_s_1_2_2(mux_203_nl, mux_202_nl, fsm_output(2));
  mux_207_nl <= MUX_s_1_2_2(mux_206_nl, mux_204_nl, fsm_output(6));
  and_851_nl <= (CONV_SL_1_1(fsm_output(7 DOWNTO 6)/=STD_LOGIC_VECTOR'("00"))) AND
      (fsm_output(8));
  mux_208_nl <= MUX_s_1_2_2(mux_207_nl, and_851_nl, fsm_output(5));
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_nl <= MUX1HOT_s_1_4_2(SF_LOOP_3_acc_5_psp_sva_9,
      (z_out_51_40_1(39)), attention_max_attn_fixed_t_attention_max_attn_fixed_t_and_mut_mx0w2_39,
      reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd,
      STD_LOGIC_VECTOR'( not_tmp_199 & and_dcpl_147 & and_dcpl_136 & and_dcpl_142));
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_2_nl <= MUX1HOT_v_9_4_2(SF_LOOP_3_acc_5_psp_sva_8_0,
      (z_out_51_40_1(38 DOWNTO 30)), (attention_max_attn_fixed_t_attention_max_attn_fixed_t_and_mut_mx0w2_38_15(23
      DOWNTO 15)), (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(23
      DOWNTO 15)), STD_LOGIC_VECTOR'( not_tmp_199 & and_dcpl_147 & and_dcpl_136 &
      and_dcpl_142));
  rms_norm_384_mux1h_2_nl <= MUX1HOT_s_1_3_2((z_out_51_40_1(0)), (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_2(0)),
      (operator_40_24_true_AC_TRN_AC_WRAP_acc_8_psp_56_0(0)), STD_LOGIC_VECTOR'(
      and_dcpl_149 & and_dcpl_151 & and_dcpl_153));
  and_862_nl <= (fsm_output(0)) AND (fsm_output(1)) AND (fsm_output(2)) AND (NOT
      (fsm_output(8)));
  mux_244_nl <= MUX_s_1_2_2(and_862_nl, nor_372_cse, fsm_output(6));
  nand_14_nl <= NOT((fsm_output(3)) AND mux_244_nl);
  mux_240_nl <= MUX_s_1_2_2((fsm_output(8)), (NOT (fsm_output(8))), fsm_output(2));
  or_422_nl <= (fsm_output(2)) OR (fsm_output(8));
  mux_241_nl <= MUX_s_1_2_2(mux_240_nl, or_422_nl, or_1327_cse);
  mux_242_nl <= MUX_s_1_2_2((fsm_output(8)), mux_241_nl, fsm_output(6));
  or_420_nl <= (fsm_output(6)) OR (fsm_output(1)) OR (fsm_output(2)) OR (fsm_output(8));
  mux_243_nl <= MUX_s_1_2_2(mux_242_nl, or_420_nl, fsm_output(3));
  mux_245_nl <= MUX_s_1_2_2(nand_14_nl, mux_243_nl, fsm_output(5));
  or_419_nl <= (fsm_output(5)) OR (fsm_output(8));
  mux_246_nl <= MUX_s_1_2_2(mux_245_nl, or_419_nl, fsm_output(4));
  rms_norm_384_mux1h_17_nl <= MUX1HOT_s_1_3_2((attention_5_1_384_384_8_48_k_proj_re_rsci_data_out_d(39)),
      reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd,
      (GEMM_3D_FLOAT_LOOP_4_acc_193_itm(39)), STD_LOGIC_VECTOR'( and_dcpl_158 & and_dcpl_159
      & and_dcpl_155));
  rms_norm_384_mux1h_21_nl <= MUX1HOT_v_24_3_2((attention_5_1_384_384_8_48_k_proj_re_rsci_data_out_d(38
      DOWNTO 15)), reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1,
      (GEMM_3D_FLOAT_LOOP_4_acc_193_itm(38 DOWNTO 15)), STD_LOGIC_VECTOR'( and_dcpl_158
      & and_dcpl_159 & and_dcpl_155));
  rms_norm_384_not_1_nl <= NOT and_173_ssc;
  LINEAR_FORWARD_NO_MUL_LOOP_2_2_mux1h_9_nl <= MUX1HOT_s_1_4_2((attention_5_1_384_384_8_48_v_proj_re_rsci_data_out_d(39)),
      (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(3)),
      (output_rsci_data_out_d(39)), reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd,
      STD_LOGIC_VECTOR'( and_dcpl_158 & and_dcpl_159 & and_dcpl_169 & and_188_ssc));
  LINEAR_FORWARD_NO_MUL_LOOP_2_2_mux1h_13_nl <= MUX1HOT_v_3_4_2((attention_5_1_384_384_8_48_v_proj_re_rsci_data_out_d(38
      DOWNTO 36)), (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(2
      DOWNTO 0)), (output_rsci_data_out_d(38 DOWNTO 36)), (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(23
      DOWNTO 21)), STD_LOGIC_VECTOR'( and_dcpl_158 & and_dcpl_159 & and_dcpl_169
      & and_188_ssc));
  LINEAR_FORWARD_NO_MUL_LOOP_2_2_not_4_nl <= NOT or_436_ssc;
  LINEAR_FORWARD_NO_MUL_LOOP_2_2_mux1h_16_nl <= MUX1HOT_v_21_4_2((attention_5_1_384_384_8_48_v_proj_re_rsci_data_out_d(35
      DOWNTO 15)), (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(35
      DOWNTO 15)), (output_rsci_data_out_d(35 DOWNTO 15)), (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(20
      DOWNTO 0)), STD_LOGIC_VECTOR'( and_dcpl_158 & and_dcpl_159 & and_dcpl_169 &
      and_188_ssc));
  LINEAR_FORWARD_NO_MUL_LOOP_2_2_not_2_nl <= NOT or_436_ssc;
  SOFTMAX_LOOP_5_mux_nl <= MUX_s_1_2_2((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(39)),
      reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd,
      and_195_ssc);
  and_192_nl <= and_dcpl_173 AND and_dcpl_168;
  SOFTMAX_LOOP_5_mux_1_nl <= MUX_v_15_2_2((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(14
      DOWNTO 0)), reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_2,
      and_195_ssc);
  SOFTMAX_LOOP_5_not_1_nl <= NOT and_197_ssc;
  INIT_2D_MEM_LOOP_2_2_acc_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(reg_SF_LOOP_3_acc_38_1_ftd_2)
      + UNSIGNED'( "111111111"), 9));
  for_for_j_or_nl <= and_dcpl_440 OR (not_tmp_296 AND and_dcpl_468 AND (NOT (fsm_output(6)))
      AND RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_nand_tmp);
  nor_411_nl <= NOT((NOT (fsm_output(1))) OR (fsm_output(0)) OR (fsm_output(6)));
  nor_412_nl <= NOT(CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm OR (NOT (fsm_output(6))));
  mux_381_nl <= MUX_s_1_2_2(nor_412_nl, (fsm_output(6)), or_1328_cse);
  mux_382_nl <= MUX_s_1_2_2(nor_411_nl, mux_381_nl, fsm_output(2));
  mux_383_nl <= MUX_s_1_2_2(mux_382_nl, (fsm_output(6)), or_616_cse);
  nand_18_nl <= NOT((fsm_output(2)) AND (NOT(and_850_cse OR (fsm_output(6)))));
  mux_380_nl <= MUX_s_1_2_2(or_614_cse, nand_18_nl, fsm_output(3));
  nor_415_nl <= NOT((fsm_output(4)) OR mux_380_nl);
  mux_384_nl <= MUX_s_1_2_2(mux_383_nl, nor_415_nl, fsm_output(5));
  nor_416_nl <= NOT(CONV_SL_1_1(fsm_output(5 DOWNTO 2)/=STD_LOGIC_VECTOR'("0110"))
      OR nor_414_cse OR (fsm_output(6)));
  mux_385_nl <= MUX_s_1_2_2(mux_384_nl, nor_416_nl, fsm_output(8));
  and_487_nl <= mux_385_nl AND (NOT (fsm_output(7)));
  and_494_nl <= not_tmp_296 AND and_dcpl_468 AND (NOT((fsm_output(6)) OR RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_nand_tmp));
  for_for_j_mux1h_1_nl <= MUX1HOT_v_9_6_2(z_out_29, reg_SF_LOOP_3_acc_38_1_ftd_2,
      STD_LOGIC_VECTOR'( "000000001"), STD_LOGIC_VECTOR'( "101111111"), STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(INIT_2D_MEM_LOOP_2_2_acc_nl),
      9)), SF_LOOP_3_acc_5_psp_sva_8_0, STD_LOGIC_VECTOR'( for_for_j_or_nl & and_487_nl
      & and_494_nl & and_dcpl_461 & and_dcpl_366 & and_dcpl_386));
  mux_375_nl <= MUX_s_1_2_2((NOT (fsm_output(7))), (fsm_output(7)), fsm_output(1));
  mux_376_nl <= MUX_s_1_2_2(mux_375_nl, or_607_cse, fsm_output(0));
  or_608_nl <= CONV_SL_1_1(fsm_output(4 DOWNTO 2)/=STD_LOGIC_VECTOR'("000")) OR mux_376_nl;
  mux_374_nl <= MUX_s_1_2_2(or_604_cse, or_368_cse, fsm_output(2));
  or_605_nl <= CONV_SL_1_1(fsm_output(4 DOWNTO 3)/=STD_LOGIC_VECTOR'("01")) OR mux_374_nl;
  mux_377_nl <= MUX_s_1_2_2(or_608_nl, or_605_nl, fsm_output(5));
  or_600_nl <= (NOT((fsm_output(0)) OR (NOT CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm)
      OR (fsm_output(1)))) OR (fsm_output(7));
  mux_371_nl <= MUX_s_1_2_2(or_601_cse, or_600_nl, fsm_output(2));
  mux_372_nl <= MUX_s_1_2_2(mux_371_nl, (fsm_output(7)), or_616_cse);
  or_597_nl <= (fsm_output(3)) OR (fsm_output(4)) OR (fsm_output(2)) OR (fsm_output(7));
  mux_373_nl <= MUX_s_1_2_2(mux_372_nl, or_597_nl, fsm_output(5));
  mux_378_nl <= MUX_s_1_2_2(mux_377_nl, mux_373_nl, fsm_output(6));
  mux_379_nl <= MUX_s_1_2_2(mux_378_nl, or_1363_cse, fsm_output(8));
  INIT_2D_MEM_LOOP_2_2_not_nl <= NOT mux_379_nl;
  for_for_j_and_1_nl <= MUX_v_9_2_2(STD_LOGIC_VECTOR'("000000000"), for_for_j_mux1h_1_nl,
      INIT_2D_MEM_LOOP_2_2_not_nl);
  or_633_nl <= and_882_cse OR (fsm_output(8));
  or_632_nl <= (fsm_output(1)) OR (fsm_output(7)) OR (fsm_output(8));
  mux_391_nl <= MUX_s_1_2_2(or_633_nl, or_632_nl, fsm_output(0));
  or_631_nl <= (NOT (fsm_output(1))) OR (fsm_output(7)) OR (fsm_output(8));
  mux_392_nl <= MUX_s_1_2_2(mux_391_nl, or_631_nl, fsm_output(6));
  mux_393_nl <= MUX_s_1_2_2(mux_392_nl, or_tmp_55, fsm_output(3));
  mux_389_nl <= MUX_s_1_2_2(or_455_cse, or_629_cse, fsm_output(6));
  mux_390_nl <= MUX_s_1_2_2(or_tmp_55, mux_389_nl, fsm_output(3));
  mux_394_nl <= MUX_s_1_2_2(mux_393_nl, mux_390_nl, fsm_output(4));
  or_627_nl <= (fsm_output(6)) OR (NOT (fsm_output(0))) OR (NOT (fsm_output(1)))
      OR (fsm_output(7)) OR (fsm_output(8));
  mux_388_nl <= MUX_s_1_2_2(or_tmp_55, or_627_nl, fsm_output(3));
  or_628_nl <= (fsm_output(4)) OR mux_388_nl;
  mux_395_nl <= MUX_s_1_2_2(mux_394_nl, or_628_nl, fsm_output(5));
  or_625_nl <= (fsm_output(4)) OR (NOT (fsm_output(3))) OR (fsm_output(6)) OR and_850_cse
      OR CONV_SL_1_1(fsm_output(8 DOWNTO 7)/=STD_LOGIC_VECTOR'("00"));
  mux_387_nl <= MUX_s_1_2_2(or_tmp_55, or_625_nl, fsm_output(5));
  mux_396_nl <= MUX_s_1_2_2(mux_395_nl, mux_387_nl, fsm_output(2));
  operator_40_24_true_AC_TRN_AC_WRAP_mux_nl <= MUX_s_1_2_2(SF_LOOP_3_acc_5_psp_sva_9,
      (z_out_51_40_1(39)), and_dcpl_147);
  operator_40_24_true_AC_TRN_AC_WRAP_or_nl <= (operator_40_24_true_AC_TRN_AC_WRAP_mux_nl
      AND (NOT and_dcpl_460) AND (NOT mux_502_itm)) OR and_528_seb;
  RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_and_nl <= (NOT z_out_30_2) AND RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_nand_tmp;
  LINEAR_FORWARD_NO_MUL_LOOP_4_LINEAR_FORWARD_NO_MUL_LOOP_4_and_3_nl <= LINEAR_FORWARD_NO_MUL_LOOP_2_LINEAR_FORWARD_NO_MUL_LOOP_2_nor_tmp
      AND exit_LINEAR_FORWARD_NO_MUL_LOOP_4_lpi_3_dfm_2;
  RESHAPE_2D_TO_3D_LOOP_3_2_RESHAPE_2D_TO_3D_LOOP_3_2_or_nl <= (NOT (z_out_17(2)))
      OR LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1;
  mux_582_nl <= MUX_s_1_2_2(or_601_cse, or_607_cse, fsm_output(0));
  nor_465_nl <= NOT((NOT (fsm_output(4))) OR (NOT (fsm_output(8))) OR (fsm_output(5))
      OR (NOT (fsm_output(3))) OR (fsm_output(6)) OR mux_582_nl);
  nand_203_nl <= NOT((fsm_output(1)) AND (fsm_output(7)));
  or_829_nl <= (fsm_output(0)) OR (NOT (fsm_output(1))) OR (fsm_output(7));
  mux_580_nl <= MUX_s_1_2_2(nand_203_nl, or_829_nl, fsm_output(6));
  or_830_nl <= (fsm_output(3)) OR mux_580_nl;
  or_828_nl <= (NOT (fsm_output(3))) OR (fsm_output(6)) OR (fsm_output(1)) OR (fsm_output(7));
  mux_581_nl <= MUX_s_1_2_2(or_830_nl, or_828_nl, fsm_output(5));
  nor_466_nl <= NOT((fsm_output(4)) OR (fsm_output(8)) OR mux_581_nl);
  mux_583_nl <= MUX_s_1_2_2(nor_465_nl, nor_466_nl, fsm_output(2));
  QUANTIZE_ACTIVATION_LOOP_2_mux1h_nl <= MUX1HOT_s_1_5_2(RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_and_nl,
      LINEAR_FORWARD_NO_MUL_LOOP_4_LINEAR_FORWARD_NO_MUL_LOOP_4_and_3_nl, LINEAR_FORWARD_NO_MUL_LOOP_3_stage_0_2,
      LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1, RESHAPE_2D_TO_3D_LOOP_3_2_RESHAPE_2D_TO_3D_LOOP_3_2_or_nl,
      STD_LOGIC_VECTOR'( and_dcpl_494 & and_dcpl_373 & mux_583_nl & and_dcpl_388
      & and_dcpl_348));
  INIT_2D_MEM_LOOP_2_acc_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_45_itm_8_0)
      + UNSIGNED'( "111111111"), 9));
  nor_469_nl <= NOT((fsm_output(0)) OR (NOT and_864_cse));
  or_857_nl <= (fsm_output(1)) OR (NOT(CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm
      OR (fsm_output(8))));
  mux_593_nl <= MUX_s_1_2_2(or_857_nl, or_tmp_266, fsm_output(0));
  mux_594_nl <= MUX_s_1_2_2(nor_469_nl, mux_593_nl, fsm_output(2));
  nand_206_nl <= NOT((fsm_output(6)) AND ((fsm_output(3)) OR mux_594_nl));
  mux_592_nl <= MUX_s_1_2_2((NOT and_864_cse), or_tmp_266, fsm_output(0));
  nor_475_nl <= NOT((fsm_output(6)) OR (NOT(CONV_SL_1_1(fsm_output(3 DOWNTO 2)/=STD_LOGIC_VECTOR'("10"))
      OR mux_592_nl)));
  mux_595_nl <= MUX_s_1_2_2(nand_206_nl, nor_475_nl, fsm_output(4));
  or_850_nl <= (NOT (fsm_output(3))) OR (NOT (fsm_output(2))) OR (fsm_output(1))
      OR (fsm_output(8));
  or_849_nl <= CONV_SL_1_1(fsm_output(3 DOWNTO 2)/=STD_LOGIC_VECTOR'("00")) OR and_864_cse;
  mux_591_nl <= MUX_s_1_2_2(or_850_nl, or_849_nl, fsm_output(6));
  or_1343_nl <= (fsm_output(4)) OR mux_591_nl;
  mux_596_nl <= MUX_s_1_2_2(mux_595_nl, or_1343_nl, fsm_output(5));
  nor_474_nl <= NOT(mux_596_nl OR (fsm_output(7)));
  and_576_nl <= and_dcpl_553 AND and_dcpl_316;
  and_577_nl <= and_dcpl_553 AND and_dcpl_114;
  RMS_NORM_LOOP_2_mux1h_1_nl <= MUX1HOT_v_9_6_2(z_out_32, SF_LOOP_3_acc_45_itm_8_0,
      STD_LOGIC_VECTOR'( "101111111"), STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(INIT_2D_MEM_LOOP_2_acc_nl),
      9)), SF_LOOP_3_acc_53_itm_23_15, z_out_20, STD_LOGIC_VECTOR'( and_dcpl_494
      & nor_474_nl & and_576_nl & and_577_nl & and_dcpl_386 & and_dcpl_556));
  nor_614_nl <= NOT((NOT((fsm_output(3)) AND (fsm_output(4)) AND (fsm_output(8))
      AND (NOT (fsm_output(2))))) OR and_850_cse);
  mux_602_nl <= MUX_s_1_2_2((NOT and_850_cse), (fsm_output(1)), fsm_output(2));
  nor_615_nl <= NOT((NOT (fsm_output(3))) OR (fsm_output(4)) OR (fsm_output(8)) OR
      mux_602_nl);
  mux_603_nl <= MUX_s_1_2_2(nor_614_nl, nor_615_nl, fsm_output(5));
  or_867_nl <= CONV_SL_1_1(fsm_output(1 DOWNTO 0)/=STD_LOGIC_VECTOR'("00")) OR (NOT
      CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm);
  mux_599_nl <= MUX_s_1_2_2((fsm_output(1)), or_867_nl, fsm_output(2));
  mux_598_nl <= MUX_s_1_2_2((NOT and_850_cse), or_1328_cse, fsm_output(2));
  mux_600_nl <= MUX_s_1_2_2(mux_599_nl, mux_598_nl, fsm_output(8));
  or_1364_nl <= CONV_SL_1_1(fsm_output(4 DOWNTO 3)/=STD_LOGIC_VECTOR'("00")) OR mux_600_nl;
  mux_597_nl <= MUX_s_1_2_2((fsm_output(2)), or_1326_cse, fsm_output(8));
  nor_616_nl <= NOT(CONV_SL_1_1(fsm_output(4 DOWNTO 3)/=STD_LOGIC_VECTOR'("00"))
      OR mux_597_nl);
  mux_601_nl <= MUX_s_1_2_2(or_1364_nl, nor_616_nl, fsm_output(5));
  mux_604_nl <= MUX_s_1_2_2(mux_603_nl, mux_601_nl, fsm_output(6));
  nor_617_nl <= NOT((fsm_output(6)) OR (fsm_output(5)) OR (fsm_output(3)) OR (fsm_output(4))
      OR (fsm_output(8)) OR (fsm_output(2)) OR (fsm_output(0)) OR (fsm_output(1)));
  mux_605_nl <= MUX_s_1_2_2(mux_604_nl, nor_617_nl, fsm_output(7));
  LINEAR_FORWARD_NO_MUL_LOOP_2_1_j_asn_SF_LOOP_3_acc_45_itm_1_8_RMS_NORM_LOOP_2_and_nl
      <= MUX_v_9_2_2(STD_LOGIC_VECTOR'("000000000"), RMS_NORM_LOOP_2_mux1h_1_nl,
      mux_605_nl);
  APPLY_ROTARY_POS_EMB_LOOP_6_k_mux1h_6_nl <= MUX1HOT_v_2_7_2(CACHE_UPDATE_LOOP_3_k_5_0_sva_1_5_4,
      CACHE_UPDATE_LOOP_3_k_5_0_sva_5_4, (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_5_2(3
      DOWNTO 2)), (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_3(5 DOWNTO 4)), reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd,
      (CACHE_UPDATE_LOOP_3_k_5_0_sva_1_mx0w8(5 DOWNTO 4)), (operator_40_24_true_AC_TRN_AC_WRAP_acc_psp_sva_1(5
      DOWNTO 4)), STD_LOGIC_VECTOR'( and_dcpl_640 & and_dcpl_505 & and_677_itm &
      and_dcpl_328 & and_678_itm & and_dcpl_263 & and_dcpl_530));
  APPLY_ROTARY_POS_EMB_LOOP_6_k_or_nl <= and_678_itm OR APPLY_ROTARY_POS_EMB_LOOP_6_k_and_8_cse;
  APPLY_ROTARY_POS_EMB_LOOP_6_k_mux1h_8_nl <= MUX1HOT_v_2_8_2((CACHE_UPDATE_LOOP_3_k_5_0_sva_1_3_0(3
      DOWNTO 2)), reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd, (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_5_2(1
      DOWNTO 0)), (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_3(3 DOWNTO 2)), reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_1,
      (GEMM_3D_FLOAT_LOOP_4_acc_242_sdt(3 DOWNTO 2)), (CACHE_UPDATE_LOOP_3_k_5_0_sva_1_mx0w8(3
      DOWNTO 2)), (operator_40_24_true_AC_TRN_AC_WRAP_acc_psp_sva_1(3 DOWNTO 2)),
      STD_LOGIC_VECTOR'( and_dcpl_640 & and_dcpl_505 & and_677_itm & and_dcpl_328
      & APPLY_ROTARY_POS_EMB_LOOP_6_k_or_nl & APPLY_ROTARY_POS_EMB_LOOP_6_k_and_7_cse
      & and_dcpl_263 & and_dcpl_530));
  APPLY_ROTARY_POS_EMB_LOOP_6_k_and_2_nl <= and_dcpl_368 AND (NOT or_1566_tmp);
  or_1576_nl <= APPLY_ROTARY_POS_EMB_LOOP_6_k_and_8_cse OR or_1566_tmp;
  mux1h_4_nl <= MUX1HOT_v_2_9_2(LINEAR_FORWARD_NO_MUL_LOOP_5_2_l_2_0_lpi_3_dfm_1_0_1,
      (CACHE_UPDATE_LOOP_3_k_5_0_sva_1_3_0(1 DOWNTO 0)), reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1,
      APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0, (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_3(1
      DOWNTO 0)), (GEMM_3D_FLOAT_LOOP_4_acc_242_sdt(1 DOWNTO 0)), reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_2,
      (CACHE_UPDATE_LOOP_3_k_5_0_sva_1_mx0w8(1 DOWNTO 0)), (operator_40_24_true_AC_TRN_AC_WRAP_acc_psp_sva_1(1
      DOWNTO 0)), STD_LOGIC_VECTOR'( APPLY_ROTARY_POS_EMB_LOOP_6_k_and_2_nl & and_dcpl_640
      & and_dcpl_505 & and_677_itm & and_dcpl_328 & APPLY_ROTARY_POS_EMB_LOOP_6_k_and_7_cse
      & or_1576_nl & and_dcpl_263 & and_dcpl_530));
  CACHE_UPDATE_LOOP_3_k_mux1h_5_nl <= MUX1HOT_v_2_5_2((APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_5_2(3
      DOWNTO 2)), (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_3(5 DOWNTO 4)), CACHE_UPDATE_LOOP_3_k_5_0_sva_5_4,
      CACHE_UPDATE_LOOP_3_k_5_0_sva_1_5_4, reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd,
      STD_LOGIC_VECTOR'( and_dcpl_640 & and_dcpl_348 & and_682_itm & and_683_itm
      & and_684_itm));
  CACHE_UPDATE_LOOP_3_k_mux1h_10_nl <= MUX1HOT_v_2_5_2((APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_5_2(1
      DOWNTO 0)), (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_3(3 DOWNTO 2)), reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd,
      (CACHE_UPDATE_LOOP_3_k_5_0_sva_1_3_0(3 DOWNTO 2)), reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_1,
      STD_LOGIC_VECTOR'( and_dcpl_640 & and_dcpl_348 & and_682_itm & and_683_itm
      & and_684_itm));
  GEMM_3D_FLOAT_LOOP_4_acc_22_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd(1),
      1), 1), 2) + UNSIGNED'( "01"), 2));
  or_1575_nl <= (NOT not_tmp_512) OR (fsm_output(5));
  nor_910_nl <= NOT(or_tmp_907 OR (fsm_output(5)));
  mux_nl <= MUX_s_1_2_2(or_1575_nl, nor_910_nl, fsm_output(6));
  or_1569_nl <= (mux_nl AND and_dcpl_19) OR and_682_itm;
  mux1h_5_nl <= MUX1HOT_v_2_8_2(LINEAR_FORWARD_NO_MUL_LOOP_5_1_l_2_0_lpi_3_dfm_1_0_1,
      STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_4_acc_22_nl), 2)),
      operator_40_24_true_AC_TRN_AC_WRAP_acc_4_psp_sva_1, APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0,
      (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_3(1 DOWNTO 0)), (CACHE_UPDATE_LOOP_3_k_5_0_sva_1_3_0(1
      DOWNTO 0)), reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_2, reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1,
      STD_LOGIC_VECTOR'( and_dcpl_373 & and_dcpl_274 & and_dcpl_530 & and_dcpl_640
      & and_dcpl_348 & and_683_itm & and_684_itm & or_1569_nl));
  mux1h_1_nl <= MUX1HOT_v_4_8_2((rms_norm_384_div_cmp_z(39 DOWNTO 36)), (attention_5_1_384_384_8_48_v_proj_re_rsci_data_out_d(39
      DOWNTO 36)), (CACHE_UPDATE_LOOP_3_qif_read_rom_k_cache_rom_map_1_itm(39 DOWNTO
      36)), (z_out_61(39 DOWNTO 36)), (z_out_11(55 DOWNTO 52)), (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(39
      DOWNTO 36)), (SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_z(39 DOWNTO 36)), (z_out_59(39
      DOWNTO 36)), STD_LOGIC_VECTOR'( and_2271_cse & and_dcpl_158 & and_dcpl_337
      & and_dcpl_284 & and_dcpl_293 & and_dcpl_265 & and_2277_cse & or_dcpl));
  mux1h_2_nl <= MUX1HOT_v_36_9_2((rms_norm_384_div_cmp_z(35 DOWNTO 0)), (attention_5_1_384_384_8_48_v_proj_re_rsci_data_out_d(35
      DOWNTO 0)), (CACHE_UPDATE_LOOP_3_qif_read_rom_k_cache_rom_map_1_itm(35 DOWNTO
      0)), (z_out_61(35 DOWNTO 0)), (z_out_11(51 DOWNTO 16)), (z_out(35 DOWNTO 0)),
      (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(35 DOWNTO 0)), (SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_z(35
      DOWNTO 0)), (z_out_59(35 DOWNTO 0)), STD_LOGIC_VECTOR'( and_2271_cse & and_dcpl_158
      & and_dcpl_337 & and_dcpl_284 & and_dcpl_293 & and_dcpl_450 & and_dcpl_265
      & and_2277_cse & or_dcpl));
  INIT_2D_MEM_LOOP_2_1_acc_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3)
      + UNSIGNED'( "111111111"), 9));
  or_1332_nl <= (fsm_output(6)) OR (NOT (fsm_output(0))) OR (fsm_output(1)) OR (fsm_output(7))
      OR (fsm_output(8)) OR (fsm_output(4)) OR (fsm_output(3));
  nand_179_nl <= NOT((fsm_output(6)) AND (NOT mux_tmp_356));
  mux_357_nl <= MUX_s_1_2_2(or_1332_nl, nand_179_nl, fsm_output(5));
  nor_407_nl <= NOT(mux_357_nl OR (fsm_output(2)));
  or_593_nl <= (fsm_output(5)) OR (fsm_output(0)) OR (NOT (fsm_output(1))) OR (fsm_output(8))
      OR (fsm_output(4));
  or_592_nl <= CONV_SL_1_1(fsm_output(1 DOWNTO 0)/=STD_LOGIC_VECTOR'("00")) OR (NOT
      nor_tmp_109);
  or_590_nl <= (NOT (fsm_output(0))) OR (NOT (fsm_output(1))) OR (fsm_output(8))
      OR (fsm_output(4));
  mux_365_nl <= MUX_s_1_2_2(or_592_nl, or_590_nl, fsm_output(5));
  mux_366_nl <= MUX_s_1_2_2(or_593_nl, mux_365_nl, fsm_output(3));
  nor_408_nl <= NOT(((fsm_output(0)) AND (fsm_output(1)) AND (fsm_output(8))) OR
      (fsm_output(4)));
  mux_362_nl <= MUX_s_1_2_2(nor_tmp_109, (fsm_output(8)), or_1328_cse);
  mux_363_nl <= MUX_s_1_2_2(nor_408_nl, mux_362_nl, fsm_output(5));
  mux_364_nl <= MUX_s_1_2_2(mux_363_nl, and_878_cse, fsm_output(3));
  mux_367_nl <= MUX_s_1_2_2(mux_366_nl, mux_364_nl, fsm_output(6));
  nor_409_nl <= NOT(CONV_SL_1_1(fsm_output(1 DOWNTO 0)/=STD_LOGIC_VECTOR'("00"))
      OR (NOT CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm) OR (fsm_output(8))
      OR (fsm_output(4)));
  mux_359_nl <= MUX_s_1_2_2(nor_tmp_109, (fsm_output(8)), fsm_output(1));
  mux_360_nl <= MUX_s_1_2_2(nor_409_nl, mux_359_nl, fsm_output(5));
  mux_358_nl <= MUX_s_1_2_2((fsm_output(8)), or_586_cse, and_850_cse);
  and_477_nl <= (fsm_output(5)) AND mux_358_nl;
  mux_361_nl <= MUX_s_1_2_2(mux_360_nl, and_477_nl, fsm_output(3));
  nand_17_nl <= NOT((fsm_output(6)) AND (NOT mux_361_nl));
  mux_368_nl <= MUX_s_1_2_2(mux_367_nl, nand_17_nl, fsm_output(2));
  nand_181_nl <= NOT((NOT (fsm_output(2))) AND (fsm_output(6)) AND (fsm_output(3))
      AND (fsm_output(5)) AND (fsm_output(0)) AND (fsm_output(1)) AND (NOT (fsm_output(8)))
      AND (fsm_output(4)));
  mux_369_nl <= MUX_s_1_2_2(mux_368_nl, nand_181_nl, fsm_output(7));
  and_486_nl <= and_dcpl_117 AND nor_315_cse AND CONV_SL_1_1(fsm_output(6 DOWNTO
      5)=STD_LOGIC_VECTOR'("11")) AND APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  for_for_j_mux1h_nl <= MUX1HOT_v_9_8_2(z_out_20, reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3,
      SF_LOOP_3_acc_53_itm_23_15, STD_LOGIC_VECTOR'( "101111111"), STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(INIT_2D_MEM_LOOP_2_1_acc_nl),
      9)), SF_LOOP_3_acc_53_itm_8_0, TRANSPOSE_LAST_TWO_DIMS_LOOP_3_acc_17_sdt_mx0w7,
      SF_LOOP_3_acc_45_itm_8_0, STD_LOGIC_VECTOR'( nor_407_nl & (NOT mux_369_nl)
      & and_dcpl_460 & and_dcpl_461 & and_dcpl_366 & and_dcpl_386 & and_dcpl_328
      & and_486_nl));
  or_578_nl <= (NOT (fsm_output(6))) OR (NOT (fsm_output(8))) OR (fsm_output(7))
      OR (fsm_output(0)) OR (fsm_output(4));
  mux_353_nl <= MUX_s_1_2_2(or_tmp_373, or_578_nl, fsm_output(1));
  or_577_nl <= (NOT (fsm_output(6))) OR (NOT CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm)
      OR (fsm_output(8)) OR (fsm_output(7)) OR (fsm_output(0)) OR (fsm_output(4));
  or_576_nl <= (fsm_output(6)) OR (NOT (fsm_output(8))) OR (fsm_output(7)) OR (NOT((fsm_output(0))
      AND (fsm_output(4))));
  mux_352_nl <= MUX_s_1_2_2(or_577_nl, or_576_nl, fsm_output(1));
  mux_354_nl <= MUX_s_1_2_2(mux_353_nl, mux_352_nl, fsm_output(2));
  or_1359_nl <= (fsm_output(3)) OR mux_354_nl;
  or_1360_nl <= CONV_SL_1_1(fsm_output(2 DOWNTO 1)/=STD_LOGIC_VECTOR'("01")) OR APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm
      OR (NOT (fsm_output(6))) OR (NOT (fsm_output(8))) OR (fsm_output(7)) OR (fsm_output(0))
      OR (fsm_output(4));
  or_572_nl <= (NOT (fsm_output(6))) OR (fsm_output(8)) OR (NOT((fsm_output(7)) AND
      (fsm_output(0)) AND (fsm_output(4))));
  mux_350_nl <= MUX_s_1_2_2(or_572_nl, or_tmp_373, fsm_output(1));
  or_1361_nl <= (fsm_output(2)) OR mux_350_nl;
  mux_351_nl <= MUX_s_1_2_2(or_1360_nl, or_1361_nl, fsm_output(3));
  mux_355_nl <= MUX_s_1_2_2(or_1359_nl, mux_351_nl, fsm_output(5));
  for_for_j_and_nl <= MUX_v_9_2_2(STD_LOGIC_VECTOR'("000000000"), for_for_j_mux1h_nl,
      mux_355_nl);
  mux_416_nl <= MUX_s_1_2_2((NOT or_80_cse), (fsm_output(6)), fsm_output(5));
  or_651_nl <= nor_419_cse OR (fsm_output(6));
  mux_417_nl <= MUX_s_1_2_2(mux_416_nl, or_651_nl, fsm_output(1));
  mux_414_nl <= MUX_s_1_2_2(or_80_cse, or_1217_cse, fsm_output(5));
  mux_415_nl <= MUX_s_1_2_2((NOT mux_414_nl), (fsm_output(6)), fsm_output(1));
  mux_418_nl <= MUX_s_1_2_2(mux_417_nl, mux_415_nl, fsm_output(0));
  mux_419_nl <= MUX_s_1_2_2((NOT mux_418_nl), or_tmp_449, fsm_output(4));
  mux_412_nl <= MUX_s_1_2_2(or_tmp_449, mux_tmp_402, fsm_output(1));
  mux_410_nl <= MUX_s_1_2_2(mux_tmp_405, or_tmp_449, fsm_output(1));
  mux_409_nl <= MUX_s_1_2_2(or_tmp_449, mux_tmp_405, fsm_output(1));
  mux_411_nl <= MUX_s_1_2_2(mux_410_nl, mux_409_nl, fsm_output(0));
  mux_413_nl <= MUX_s_1_2_2(mux_412_nl, mux_411_nl, fsm_output(4));
  mux_420_nl <= MUX_s_1_2_2(mux_419_nl, mux_413_nl, fsm_output(3));
  nand_183_nl <= NOT((NOT((fsm_output(1)) AND (fsm_output(5)) AND (fsm_output(8))))
      AND (fsm_output(6)));
  mux_406_nl <= MUX_s_1_2_2(or_tmp_449, mux_tmp_405, and_850_cse);
  mux_407_nl <= MUX_s_1_2_2(nand_183_nl, mux_406_nl, fsm_output(4));
  mux_403_nl <= MUX_s_1_2_2(or_tmp_449, mux_tmp_402, nor_83_cse);
  mux_401_nl <= MUX_s_1_2_2(or_tmp_449, or_645_cse, and_850_cse);
  mux_404_nl <= MUX_s_1_2_2(mux_403_nl, mux_401_nl, fsm_output(4));
  mux_408_nl <= MUX_s_1_2_2(mux_407_nl, mux_404_nl, fsm_output(3));
  mux_421_nl <= MUX_s_1_2_2(mux_420_nl, mux_408_nl, fsm_output(2));
  or_643_nl <= (fsm_output(0)) OR (fsm_output(1)) OR (fsm_output(5)) OR (fsm_output(8))
      OR (fsm_output(6));
  or_642_nl <= (NOT (fsm_output(0))) OR (NOT (fsm_output(1))) OR (fsm_output(5))
      OR (fsm_output(8)) OR (fsm_output(6));
  mux_399_nl <= MUX_s_1_2_2(or_643_nl, or_642_nl, fsm_output(4));
  nand_19_nl <= NOT((fsm_output(4)) AND (NOT(nor_414_cse OR (NOT (fsm_output(5)))
      OR (fsm_output(8)) OR (NOT (fsm_output(6))))));
  mux_400_nl <= MUX_s_1_2_2(mux_399_nl, nand_19_nl, fsm_output(3));
  or_644_nl <= (fsm_output(2)) OR mux_400_nl;
  mux_422_nl <= MUX_s_1_2_2(mux_421_nl, or_644_nl, fsm_output(7));
  INIT_2D_MEM_LOOP_2_and_1_nl <= INIT_2D_MEM_LOOP_2_3_INIT_2D_MEM_LOOP_2_3_nor_tmp
      AND CONV_SL_1_1(reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3=STD_LOGIC_VECTOR'("000000000"))
      AND CONV_SL_1_1(reg_SF_LOOP_3_acc_38_1_ftd_2=STD_LOGIC_VECTOR'("000000000"));
  for_for_or_3_nl <= and_dcpl_440 OR and_dcpl_387 OR and_dcpl_337;
  for_for_or_6_nl <= and_dcpl_494 OR and_dcpl_348;
  for_for_mux1h_4_nl <= MUX1HOT_s_1_5_2(for_for_for_for_nor_tmp, (NOT (z_out_31(2))),
      z_out_53_40, INIT_2D_MEM_LOOP_2_and_1_nl, LINEAR_FORWARD_NO_MUL_LOOP_2_LINEAR_FORWARD_NO_MUL_LOOP_2_nor_tmp,
      STD_LOGIC_VECTOR'( for_for_or_3_nl & for_for_or_6_nl & attention_round_1_qelse_or_8_cse
      & and_dcpl_366 & and_dcpl_497));
  or_690_nl <= (fsm_output(3)) OR (fsm_output(0)) OR (NOT (fsm_output(1))) OR (fsm_output(8))
      OR (NOT (fsm_output(7)));
  nand_21_nl <= NOT((fsm_output(3)) AND (NOT(nor_414_cse OR CONV_SL_1_1(fsm_output(8
      DOWNTO 7)/=STD_LOGIC_VECTOR'("00")))));
  mux_453_nl <= MUX_s_1_2_2(or_690_nl, nand_21_nl, fsm_output(6));
  nor_429_nl <= NOT((fsm_output(1)) OR (NOT (fsm_output(8))) OR (fsm_output(7)));
  mux_451_nl <= MUX_s_1_2_2(nor_428_cse, nor_429_nl, fsm_output(0));
  nand_20_nl <= NOT((fsm_output(3)) AND mux_451_nl);
  mux_452_nl <= MUX_s_1_2_2(nand_20_nl, or_629_cse, fsm_output(6));
  mux_454_nl <= MUX_s_1_2_2(mux_453_nl, mux_452_nl, fsm_output(4));
  mux_455_nl <= MUX_s_1_2_2(mux_454_nl, or_tmp_55, fsm_output(5));
  or_684_nl <= (NOT((NOT (fsm_output(3))) OR (fsm_output(0)))) OR (NOT (fsm_output(1)))
      OR (fsm_output(8)) OR (NOT (fsm_output(7)));
  or_680_nl <= (LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1 AND LINEAR_FORWARD_NO_MUL_LOOP_2_LINEAR_FORWARD_NO_MUL_LOOP_2_nor_tmp
      AND (z_out_37(4)) AND (z_out_22(4)) AND (z_out_36(4)) AND LINEAR_FORWARD_NO_MUL_LOOP_5_and_1_tmp
      AND (NOT (fsm_output(1)))) OR CONV_SL_1_1(fsm_output(8 DOWNTO 7)/=STD_LOGIC_VECTOR'("00"));
  mux_446_nl <= MUX_s_1_2_2(mux_445_cse, or_680_nl, fsm_output(0));
  mux_447_nl <= MUX_s_1_2_2(mux_446_nl, or_629_cse, fsm_output(3));
  mux_448_nl <= MUX_s_1_2_2(or_684_nl, mux_447_nl, fsm_output(6));
  mux_449_nl <= MUX_s_1_2_2(mux_448_nl, or_tmp_55, fsm_output(4));
  or_678_nl <= (NOT (fsm_output(3))) OR (fsm_output(1)) OR (fsm_output(8)) OR (fsm_output(7));
  mux_443_nl <= MUX_s_1_2_2(or_678_nl, or_629_cse, fsm_output(6));
  mux_444_nl <= MUX_s_1_2_2(mux_443_nl, or_tmp_55, fsm_output(4));
  mux_450_nl <= MUX_s_1_2_2(mux_449_nl, mux_444_nl, fsm_output(5));
  mux_456_nl <= MUX_s_1_2_2(mux_455_nl, mux_450_nl, fsm_output(2));
  attention_sqrt_for_i_attention_sqrt_for_i_mux_nl <= MUX_v_2_2_2((attention_sqrt_for_i_4_0_sva_1_mx0w0(4
      DOWNTO 3)), (GEMM_3D_FLOAT_LOOP_4_mul_sdt_15_sva(4 DOWNTO 3)), and_dcpl_505);
  attention_sqrt_1_for_i_not_2_nl <= NOT attention_sqrt_1_for_i_4_0_sva_mx0c3;
  nor_156_nl <= NOT((fsm_output(2)) OR (NOT (fsm_output(0))));
  mux_646_nl <= MUX_s_1_2_2(or_tmp_726, or_935_cse, nor_156_nl);
  and_725_nl <= (fsm_output(4)) AND (NOT mux_646_nl);
  nor_217_nl <= NOT((NOT (fsm_output(2))) OR (NOT (fsm_output(1))) OR (fsm_output(8)));
  mux_645_nl <= MUX_s_1_2_2(nor_217_nl, nor_372_cse, fsm_output(4));
  mux_647_nl <= MUX_s_1_2_2(and_725_nl, mux_645_nl, fsm_output(3));
  nand_38_nl <= NOT((fsm_output(7)) AND mux_647_nl);
  nand_61_nl <= NOT(CONV_SL_1_1(fsm_output(4 DOWNTO 3)=STD_LOGIC_VECTOR'("11")) AND
      ((fsm_output(2)) OR (fsm_output(1)) OR (fsm_output(8))));
  mux_644_nl <= MUX_s_1_2_2(nand_61_nl, (fsm_output(8)), fsm_output(7));
  mux_648_nl <= MUX_s_1_2_2(nand_38_nl, mux_644_nl, fsm_output(5));
  nand_62_nl <= NOT((NOT((z_out_22(4)) AND (z_out_19(2)) AND LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1))
      AND (fsm_output(8)));
  mux_640_nl <= MUX_s_1_2_2((fsm_output(8)), nand_62_nl, fsm_output(1));
  mux_641_nl <= MUX_s_1_2_2(or_tmp_726, mux_640_nl, fsm_output(0));
  or_926_nl <= (NOT(LINEAR_FORWARD_NO_MUL_LOOP_3_stage_0_2 OR (NOT LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1)))
      OR (fsm_output(8));
  mux_638_nl <= MUX_s_1_2_2((NOT (fsm_output(8))), or_926_nl, fsm_output(1));
  mux_639_nl <= MUX_s_1_2_2(mux_638_nl, (fsm_output(8)), fsm_output(0));
  mux_642_nl <= MUX_s_1_2_2(mux_641_nl, mux_639_nl, fsm_output(2));
  or_929_nl <= CONV_SL_1_1(fsm_output(4 DOWNTO 3)/=STD_LOGIC_VECTOR'("00")) OR mux_642_nl;
  or_924_nl <= and_863_cse OR (fsm_output(8));
  nand_36_nl <= NOT((fsm_output(2)) AND (NOT(nor_414_cse OR (fsm_output(8)))));
  mux_636_nl <= MUX_s_1_2_2(or_924_nl, nand_36_nl, fsm_output(4));
  or_921_nl <= (NOT (fsm_output(4))) OR (fsm_output(2)) OR (fsm_output(0)) OR (fsm_output(1))
      OR (fsm_output(8));
  mux_637_nl <= MUX_s_1_2_2(mux_636_nl, or_921_nl, fsm_output(3));
  mux_643_nl <= MUX_s_1_2_2(or_929_nl, mux_637_nl, fsm_output(7));
  or_930_nl <= (fsm_output(5)) OR mux_643_nl;
  mux_649_nl <= MUX_s_1_2_2(mux_648_nl, or_930_nl, fsm_output(6));
  nor_492_nl <= NOT((NOT (fsm_output(0))) OR (fsm_output(1)) OR (NOT (fsm_output(7)))
      OR (fsm_output(8)) OR (NOT (fsm_output(4))));
  nor_493_nl <= NOT((fsm_output(0)) OR (NOT (fsm_output(1))) OR (NOT (fsm_output(7)))
      OR (fsm_output(8)) OR (NOT (fsm_output(4))));
  mux_651_nl <= MUX_s_1_2_2(nor_492_nl, nor_493_nl, fsm_output(2));
  or_937_nl <= (fsm_output(7)) OR (fsm_output(8)) OR (fsm_output(4));
  mux_650_nl <= MUX_s_1_2_2(or_dcpl_179, or_937_nl, fsm_output(1));
  nor_494_nl <= NOT((fsm_output(2)) OR (fsm_output(0)) OR mux_650_nl);
  mux_652_nl <= MUX_s_1_2_2(mux_651_nl, nor_494_nl, fsm_output(6));
  SF_LOOP_3_or_1_nl <= (mux_652_nl AND (NOT((fsm_output(3)) OR (fsm_output(5)))))
      OR (and_dcpl_208 AND and_dcpl_205 AND (z_out_19(2)) AND (z_out_22(4)) AND LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1);
  mux_486_nl <= MUX_s_1_2_2(or_tmp_511, or_tmp_502, fsm_output(1));
  mux_485_nl <= MUX_s_1_2_2(or_tmp_500, or_tmp_499, fsm_output(1));
  mux_487_nl <= MUX_s_1_2_2(mux_486_nl, mux_485_nl, fsm_output(3));
  mux_482_nl <= MUX_s_1_2_2(and_893_cse, (fsm_output(6)), fsm_output(4));
  or_713_nl <= CONV_SL_1_1(fsm_output(5 DOWNTO 4)/=STD_LOGIC_VECTOR'("00"));
  mux_480_nl <= MUX_s_1_2_2((NOT (fsm_output(6))), (fsm_output(6)), or_713_nl);
  mux_483_nl <= MUX_s_1_2_2(mux_482_nl, mux_480_nl, fsm_output(1));
  mux_479_nl <= MUX_s_1_2_2(or_709_cse, and_893_cse, fsm_output(4));
  mux_484_nl <= MUX_s_1_2_2(mux_483_nl, mux_479_nl, fsm_output(3));
  mux_488_nl <= MUX_s_1_2_2(mux_487_nl, mux_484_nl, fsm_output(7));
  mux_477_nl <= MUX_s_1_2_2(or_tmp_511, or_tmp_499, fsm_output(3));
  mux_471_nl <= MUX_s_1_2_2((NOT (fsm_output(6))), (fsm_output(6)), fsm_output(5));
  mux_474_nl <= MUX_s_1_2_2(mux_471_nl, and_893_cse, fsm_output(4));
  or_708_nl <= (NOT((fsm_output(1)) OR (fsm_output(4)) OR (fsm_output(5)))) OR (fsm_output(6));
  mux_476_nl <= MUX_s_1_2_2(mux_474_nl, or_708_nl, fsm_output(3));
  mux_478_nl <= MUX_s_1_2_2(mux_477_nl, mux_476_nl, fsm_output(7));
  mux_489_nl <= MUX_s_1_2_2(mux_488_nl, mux_478_nl, fsm_output(2));
  mux_468_nl <= MUX_s_1_2_2(or_tmp_502, or_705_cse, fsm_output(1));
  mux_469_nl <= MUX_s_1_2_2(mux_468_nl, or_tmp_499, fsm_output(3));
  or_706_nl <= (fsm_output(7)) OR mux_469_nl;
  mux_466_nl <= MUX_s_1_2_2(or_tmp_502, or_tmp_500, fsm_output(1));
  mux_467_nl <= MUX_s_1_2_2(mux_466_nl, or_tmp_499, fsm_output(3));
  or_703_nl <= (fsm_output(7)) OR mux_467_nl;
  mux_470_nl <= MUX_s_1_2_2(or_706_nl, or_703_nl, fsm_output(2));
  mux_490_nl <= MUX_s_1_2_2(mux_489_nl, mux_470_nl, fsm_output(8));
  and_595_nl <= and_dcpl_101 AND (NOT (fsm_output(0))) AND and_dcpl_399 AND (NOT
      LINEAR_FORWARD_NO_MUL_LOOP_3_stage_0_2) AND LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1
      AND (NOT mux_490_nl);
  and_596_nl <= and_dcpl_276 AND and_dcpl_316;
  mux1h_nl <= MUX1HOT_v_3_7_2((attention_sqrt_for_i_4_0_sva_1_mx0w0(2 DOWNTO 0)),
      attention_sqrt_1_for_i_4_0_sva_2_0, z_out_27, CACHE_UPDATE_LOOP_3_1_qif_acc_3_ncse_2_0,
      z_out_21, (reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd & reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd_1),
      (GEMM_3D_FLOAT_LOOP_4_mul_sdt_15_sva(2 DOWNTO 0)), STD_LOGIC_VECTOR'( and_dcpl_500
      & (NOT mux_649_nl) & SF_LOOP_3_or_1_nl & and_595_nl & and_dcpl_274 & and_596_nl
      & and_dcpl_505));
  mux_975_nl <= MUX_s_1_2_2((fsm_output(4)), (NOT (fsm_output(4))), fsm_output(7));
  or_1378_nl <= (fsm_output(8)) OR (NOT (fsm_output(6))) OR (fsm_output(5)) OR mux_975_nl;
  mux_976_nl <= MUX_s_1_2_2(or_tmp_712, or_1378_nl, fsm_output(2));
  or_1375_nl <= (NOT (fsm_output(6))) OR (fsm_output(7)) OR (fsm_output(4));
  mux_974_nl <= MUX_s_1_2_2(or_tmp_707, or_1375_nl, fsm_output(8));
  or_1376_nl <= (fsm_output(2)) OR mux_974_nl;
  mux_977_nl <= MUX_s_1_2_2(mux_976_nl, or_1376_nl, fsm_output(1));
  or_1374_nl <= CONV_SL_1_1(fsm_output(7 DOWNTO 4)/=STD_LOGIC_VECTOR'("0011"));
  mux_973_nl <= MUX_s_1_2_2(or_tmp_707, or_1374_nl, fsm_output(8));
  nand_249_nl <= NOT(CONV_SL_1_1(fsm_output(2 DOWNTO 1)=STD_LOGIC_VECTOR'("11"))
      AND (NOT mux_973_nl));
  mux_978_nl <= MUX_s_1_2_2(mux_977_nl, nand_249_nl, fsm_output(0));
  or_1371_nl <= CONV_SL_1_1(fsm_output(8 DOWNTO 4)/=STD_LOGIC_VECTOR'("00011"));
  mux_972_nl <= MUX_s_1_2_2(or_1371_nl, or_tmp_712, fsm_output(2));
  or_1372_nl <= CONV_SL_1_1(fsm_output(1 DOWNTO 0)/=STD_LOGIC_VECTOR'("01")) OR mux_972_nl;
  mux_979_nl <= MUX_s_1_2_2(mux_978_nl, or_1372_nl, fsm_output(3));
  nor_629_nl <= NOT((NOT mux_979_nl) OR attention_sqrt_1_for_i_4_0_sva_mx0c3);
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_52_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(2))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(2))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(2))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(2))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(2))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(2))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(2))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(2))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(2))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(2))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(2))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(2))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(2))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(2))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(34),
      1),2))), 30), 31) + CONV_SIGNED(CONV_SIGNED(SIGNED(z_out_9(28 DOWNTO 0)), 29),
      31), 31));
  attention_abs_qif_or_nl <= (and_dcpl_356 AND and_dcpl_477 AND (NOT (fsm_output(5)))
      AND (z_out_9(31))) OR (and_dcpl_276 AND and_dcpl_359 AND (fsm_output(5)) AND
      (z_out_9(31)));
  attention_abs_qif_or_1_nl <= (and_dcpl_356 AND and_dcpl_477 AND (NOT((fsm_output(5))
      OR (z_out_9(31))))) OR (and_dcpl_276 AND and_dcpl_359 AND (fsm_output(5)) AND
      (NOT (z_out_9(31))));
  nand_194_nl <= NOT((fsm_output(2)) AND (NOT(nor_414_cse OR CONV_SL_1_1(fsm_output(7
      DOWNTO 4)/=STD_LOGIC_VECTOR'("0000")))));
  mux_210_nl <= MUX_s_1_2_2(or_1325_cse, nand_160_cse, fsm_output(4));
  mux_514_nl <= MUX_s_1_2_2(or_tmp_230, mux_210_nl, and_863_cse);
  mux_515_nl <= MUX_s_1_2_2(nand_194_nl, mux_514_nl, fsm_output(3));
  or_746_nl <= (fsm_output(2)) OR (fsm_output(1)) OR (fsm_output(4)) OR (fsm_output(5))
      OR (fsm_output(6)) OR (fsm_output(7));
  mux_512_nl <= MUX_s_1_2_2(or_tmp_230, or_746_nl, fsm_output(3));
  mux_516_nl <= MUX_s_1_2_2(mux_515_nl, mux_512_nl, fsm_output(8));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_8_psp_60
      & operator_40_24_true_AC_TRN_AC_WRAP_acc_8_psp_59_57 & operator_40_24_true_AC_TRN_AC_WRAP_acc_8_psp_56_0
      & (attention_exp_exp_half_mul_3_cse_sva(19 DOWNTO 4))), 77), 78) + CONV_SIGNED(CONV_SIGNED(SIGNED(z_out_11(99
      DOWNTO 23)), 77), 78), 78));
  attention_sqrt_guess_or_nl <= attention_sqrt_1_guess_sva_29_0_mx0c0 OR attention_sqrt_1_guess_sva_29_0_mx0c3;
  or_742_nl <= (fsm_output(4)) OR (NOT((or_1328_cse AND (fsm_output(2))) OR (fsm_output(8))))
      OR CONV_SL_1_1(fsm_output(7 DOWNTO 5)/=STD_LOGIC_VECTOR'("000"));
  mux_506_nl <= MUX_s_1_2_2(or_1325_cse, or_tmp_523, fsm_output(2));
  mux_507_nl <= MUX_s_1_2_2(mux_506_nl, or_722_cse, fsm_output(1));
  mux_504_nl <= MUX_s_1_2_2(or_722_cse, or_tmp_523, fsm_output(2));
  or_735_nl <= (fsm_output(2)) OR (fsm_output(8)) OR (fsm_output(6)) OR (fsm_output(7));
  mux_505_nl <= MUX_s_1_2_2(mux_504_nl, or_735_nl, fsm_output(1));
  mux_508_nl <= MUX_s_1_2_2(mux_507_nl, mux_505_nl, fsm_output(0));
  or_734_nl <= (fsm_output(2)) OR (NOT (fsm_output(8))) OR (fsm_output(5)) OR (fsm_output(6))
      OR (fsm_output(7));
  or_733_nl <= (NOT (fsm_output(2))) OR (fsm_output(8)) OR nand_160_cse;
  mux_503_nl <= MUX_s_1_2_2(or_734_nl, or_733_nl, and_850_cse);
  mux_509_nl <= MUX_s_1_2_2(mux_508_nl, mux_503_nl, fsm_output(4));
  mux_510_nl <= MUX_s_1_2_2(or_742_nl, mux_509_nl, fsm_output(3));
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_1_nl <= MUX1HOT_v_9_3_2(SF_LOOP_3_acc_5_psp_sva_8_0,
      (z_out_51_40_1(38 DOWNTO 30)), SF_LOOP_3_acc_45_itm_8_0, STD_LOGIC_VECTOR'(
      (NOT mux_510_nl) & and_dcpl_147 & and_dcpl_460));
  not_2244_nl <= NOT mux_502_itm;
  operator_40_24_true_AC_TRN_AC_WRAP_and_1_nl <= MUX_v_9_2_2(STD_LOGIC_VECTOR'("000000000"),
      operator_40_24_true_AC_TRN_AC_WRAP_mux1h_1_nl, not_2244_nl);
  operator_40_24_true_AC_TRN_AC_WRAP_or_1_nl <= MUX_v_9_2_2(operator_40_24_true_AC_TRN_AC_WRAP_and_1_nl,
      STD_LOGIC_VECTOR'("111111111"), and_528_seb);
  mux_528_nl <= MUX_s_1_2_2(or_tmp_230, or_tmp_46, fsm_output(1));
  nand_197_nl <= NOT((fsm_output(3)) AND (NOT mux_528_nl));
  mux_524_nl <= MUX_s_1_2_2(nor_450_cse, nor_tmp_140, fsm_output(4));
  nor_451_nl <= NOT(CONV_SL_1_1(fsm_output(7 DOWNTO 5)/=STD_LOGIC_VECTOR'("000")));
  mux_523_nl <= MUX_s_1_2_2(nor_451_nl, nor_tmp_140, fsm_output(4));
  mux_525_nl <= MUX_s_1_2_2(mux_524_nl, mux_523_nl, fsm_output(0));
  mux_526_nl <= MUX_s_1_2_2(or_tmp_46, (NOT mux_525_nl), fsm_output(1));
  mux_527_nl <= MUX_s_1_2_2(or_tmp_230, mux_526_nl, fsm_output(3));
  mux_529_nl <= MUX_s_1_2_2(nand_197_nl, mux_527_nl, fsm_output(2));
  or_764_nl <= (NOT((NOT (fsm_output(1))) OR (fsm_output(4)))) OR CONV_SL_1_1(fsm_output(7
      DOWNTO 5)/=STD_LOGIC_VECTOR'("000"));
  mux_521_nl <= MUX_s_1_2_2(or_tmp_230, or_764_nl, fsm_output(3));
  or_762_nl <= (fsm_output(3)) OR (nand_175_cse AND (fsm_output(4))) OR CONV_SL_1_1(fsm_output(7
      DOWNTO 5)/=STD_LOGIC_VECTOR'("000"));
  mux_522_nl <= MUX_s_1_2_2(mux_521_nl, or_762_nl, fsm_output(2));
  mux_530_nl <= MUX_s_1_2_2(mux_529_nl, mux_522_nl, fsm_output(8));
  and_545_nl <= and_dcpl_152 AND (or_616_cse OR (fsm_output(5)));
  attention_sqrt_for_acc_3_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(attention_sqrt_for_i_4_0_sva_1_mx0w0(4
      DOWNTO 2)), 3), 4) + SIGNED'( "1011"), 4));
  attention_sqrt_for_or_nl <= APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c1
      OR and_dcpl_260 OR APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c5;
  attention_sqrt_for_or_1_nl <= APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c2
      OR and_dcpl_263;
  mux_589_nl <= MUX_s_1_2_2(or_tmp_266, or_935_cse, fsm_output(0));
  and_568_nl <= (NOT mux_589_nl) AND nor_581_cse AND and_dcpl_367;
  RMS_NORM_LOOP_2_mux1h_nl <= MUX1HOT_s_1_3_2(RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_nand_tmp,
      CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm, LINEAR_FORWARD_NO_MUL_LOOP_3_stage_0_2,
      STD_LOGIC_VECTOR'( and_dcpl_494 & and_568_nl & and_dcpl_505));
  mux_590_nl <= MUX_s_1_2_2(nor_tmp_145, (NOT or_tmp_646), fsm_output(2));
  or_845_nl <= (fsm_output(3)) OR (fsm_output(7)) OR (NOT((fsm_output(6)) AND (fsm_output(0))
      AND (fsm_output(1))));
  or_843_nl <= (NOT (fsm_output(3))) OR (fsm_output(7)) OR (fsm_output(6)) OR mux_tmp_584;
  mux_587_nl <= MUX_s_1_2_2(or_845_nl, or_843_nl, fsm_output(4));
  or_1366_nl <= (NOT (fsm_output(8))) OR (fsm_output(5)) OR mux_587_nl;
  nand_30_nl <= NOT((fsm_output(6)) AND (NOT mux_tmp_584));
  or_838_nl <= (fsm_output(6)) OR mux_tmp_584;
  mux_585_nl <= MUX_s_1_2_2(nand_30_nl, or_838_nl, fsm_output(7));
  or_839_nl <= CONV_SL_1_1(fsm_output(4 DOWNTO 3)/=STD_LOGIC_VECTOR'("00")) OR mux_585_nl;
  or_836_nl <= (fsm_output(4)) OR (NOT (fsm_output(3))) OR (fsm_output(7)) OR (fsm_output(6))
      OR (fsm_output(1));
  mux_586_nl <= MUX_s_1_2_2(or_839_nl, or_836_nl, fsm_output(5));
  or_1367_nl <= (fsm_output(8)) OR mux_586_nl;
  mux_588_nl <= MUX_s_1_2_2(or_1366_nl, or_1367_nl, fsm_output(2));
  SF_LOOP_3_SF_LOOP_3_nor_nl <= NOT(and_dcpl_497 OR and_dcpl_450);
  mux_608_nl <= MUX_s_1_2_2(or_1217_cse, mux_tmp_606, fsm_output(4));
  mux_609_nl <= MUX_s_1_2_2(or_tmp_676, mux_608_nl, fsm_output(1));
  nor_148_nl <= NOT((fsm_output(1)) OR (NOT (fsm_output(4))));
  mux_607_nl <= MUX_s_1_2_2(or_1217_cse, mux_tmp_606, nor_148_nl);
  mux_610_nl <= MUX_s_1_2_2(mux_609_nl, mux_607_nl, fsm_output(0));
  mux_611_nl <= MUX_s_1_2_2(mux_610_nl, or_1217_cse, fsm_output(2));
  mux_612_nl <= MUX_s_1_2_2(or_tmp_676, mux_611_nl, fsm_output(3));
  or_875_nl <= (NOT((NOT(CONV_SL_1_1(fsm_output(4 DOWNTO 1)/=STD_LOGIC_VECTOR'("0110"))))
      OR (fsm_output(6)))) OR (fsm_output(8));
  mux_613_nl <= MUX_s_1_2_2(mux_612_nl, or_875_nl, fsm_output(5));
  nor_911_nl <= NOT(and_dcpl_556 OR or_1563_tmp);
  QUANTIZE_ACTIVATION_LOOP_2_attention_abs_2_nand_nl <= NOT((z_out_12(39)) AND (z_out_10(67)));
  attention_abs_2_mux_2_nl <= MUX_v_39_2_2((z_out_10(66 DOWNTO 28)), (z_out_12(38
      DOWNTO 0)), z_out_10(67));
  QUANTIZE_ACTIVATION_LOOP_2_acc_4_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED(QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_39
      & QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_38_15 & QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_14_0),
      40), 41) + CONV_UNSIGNED(CONV_SIGNED(SIGNED(QUANTIZE_ACTIVATION_LOOP_2_attention_abs_2_nand_nl
      & (NOT attention_abs_2_mux_2_nl)), 40), 41) + UNSIGNED'( "00000000000000000000000000000000000000001"),
      41));
  QUANTIZE_ACTIVATION_LOOP_2_if_mux1h_nl <= MUX1HOT_s_1_4_2((QUANTIZE_ACTIVATION_LOOP_2_acc_4_nl(40)),
      lfst_exit_LINEAR_FORWARD_NO_MUL_LOOP_4_sva_dfm_mx1w0, (z_out_51_40_1(39)),
      lfst_exit_LINEAR_FORWARD_NO_MUL_LOOP_4_3_sva_dfm_mx2w0, STD_LOGIC_VECTOR'(
      and_dcpl_447 & and_dcpl_373 & and_dcpl_242 & and_dcpl_118));
  or_889_nl <= (fsm_output(0)) OR (NOT (fsm_output(8)));
  mux_618_nl <= MUX_s_1_2_2(or_889_nl, (fsm_output(8)), fsm_output(1));
  or_1344_nl <= (NOT (fsm_output(6))) OR (fsm_output(5)) OR (NOT (fsm_output(2)))
      OR (fsm_output(4)) OR mux_618_nl;
  or_886_nl <= (fsm_output(2)) OR (NOT (fsm_output(4))) OR (NOT (fsm_output(1)))
      OR (fsm_output(0)) OR (NOT (fsm_output(8)));
  or_884_nl <= (NOT (fsm_output(2))) OR (fsm_output(4)) OR (fsm_output(1)) OR (NOT
      (fsm_output(0))) OR (fsm_output(8));
  mux_617_nl <= MUX_s_1_2_2(or_886_nl, or_884_nl, fsm_output(5));
  or_1345_nl <= (fsm_output(6)) OR mux_617_nl;
  mux_619_nl <= MUX_s_1_2_2(or_1344_nl, or_1345_nl, fsm_output(3));
  APPLY_ROTARY_POS_EMB_LOOP_6_mux1h_11_nl <= MUX1HOT_v_2_8_2((APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_4_2(1
      DOWNTO 0)), (GEMM_3D_FLOAT_LOOP_4_1_acc_28_cse_sva(3 DOWNTO 2)), (z_out_18(3
      DOWNTO 2)), (z_out_14(3 DOWNTO 2)), (z_out_26(3 DOWNTO 2)), (operator_40_24_true_AC_TRN_AC_WRAP_acc_25_mx0w12(3
      DOWNTO 2)), (APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(3 DOWNTO 2)), (z_out_22(3
      DOWNTO 2)), STD_LOGIC_VECTOR'( APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt_mx0c0
      & and_dcpl_395 & APPLY_ROTARY_POS_EMB_LOOP_6_or_9_cse & APPLY_ROTARY_POS_EMB_LOOP_6_or_10_itm
      & and_dcpl_588 & and_dcpl_530 & APPLY_ROTARY_POS_EMB_LOOP_6_and_12_itm & APPLY_ROTARY_POS_EMB_LOOP_6_and_13_itm));
  APPLY_ROTARY_POS_EMB_LOOP_6_mux1h_17_nl <= MUX1HOT_s_1_8_2(APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_1,
      (GEMM_3D_FLOAT_LOOP_4_1_acc_28_cse_sva(1)), (z_out_18(1)), (z_out_14(1)), (z_out_26(1)),
      (operator_40_24_true_AC_TRN_AC_WRAP_acc_25_mx0w12(1)), (APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(1)),
      (z_out_22(1)), STD_LOGIC_VECTOR'( APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt_mx0c0
      & and_dcpl_395 & APPLY_ROTARY_POS_EMB_LOOP_6_or_9_cse & APPLY_ROTARY_POS_EMB_LOOP_6_or_10_itm
      & and_dcpl_588 & and_dcpl_530 & APPLY_ROTARY_POS_EMB_LOOP_6_and_12_itm & APPLY_ROTARY_POS_EMB_LOOP_6_and_13_itm));
  APPLY_ROTARY_POS_EMB_LOOP_6_mux1h_18_nl <= MUX1HOT_s_1_8_2(APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_0,
      (GEMM_3D_FLOAT_LOOP_4_1_acc_28_cse_sva(0)), (z_out_18(0)), (z_out_14(0)), (z_out_26(0)),
      (operator_40_24_true_AC_TRN_AC_WRAP_acc_25_mx0w12(0)), (APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(0)),
      (z_out_22(0)), STD_LOGIC_VECTOR'( APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt_mx0c0
      & and_dcpl_395 & APPLY_ROTARY_POS_EMB_LOOP_6_or_9_cse & APPLY_ROTARY_POS_EMB_LOOP_6_or_10_itm
      & and_dcpl_588 & and_dcpl_530 & APPLY_ROTARY_POS_EMB_LOOP_6_and_12_itm & APPLY_ROTARY_POS_EMB_LOOP_6_and_13_itm));
  nor_nl <= NOT((and_dcpl_118 AND (NOT lfst_exit_LINEAR_FORWARD_NO_MUL_LOOP_4_3_sva_dfm_mx2w0))
      OR APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt_mx0c1);
  APPLY_ROTARY_POS_EMB_LOOP_6_mux_2_nl <= MUX_s_1_2_2((NOT or_dcpl_202), LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1,
      and_dcpl_118);
  nand_40_nl <= NOT((fsm_output(4)) AND nor_501_cse);
  mux_672_nl <= MUX_s_1_2_2(mux_tmp_665, and_849_cse, fsm_output(1));
  and_921_nl <= or_607_cse AND (fsm_output(8));
  mux_673_nl <= MUX_s_1_2_2(mux_672_nl, and_921_nl, fsm_output(2));
  mux_674_nl <= MUX_s_1_2_2(or_454_cse, mux_673_nl, fsm_output(4));
  mux_675_nl <= MUX_s_1_2_2(nand_40_nl, mux_674_nl, fsm_output(5));
  mux_676_nl <= MUX_s_1_2_2(or_966_cse, mux_675_nl, fsm_output(3));
  mux_666_nl <= MUX_s_1_2_2(mux_tmp_665, or_454_cse, fsm_output(1));
  mux_667_nl <= MUX_s_1_2_2(mux_666_nl, (fsm_output(8)), fsm_output(0));
  mux_668_nl <= MUX_s_1_2_2(or_454_cse, mux_667_nl, fsm_output(2));
  nand_213_nl <= NOT((fsm_output(2)) AND (fsm_output(1)) AND (fsm_output(7)) AND
      (NOT (fsm_output(8))));
  mux_669_nl <= MUX_s_1_2_2(mux_668_nl, nand_213_nl, fsm_output(4));
  or_961_nl <= (fsm_output(2)) OR and_850_cse OR CONV_SL_1_1(fsm_output(8 DOWNTO
      7)/=STD_LOGIC_VECTOR'("01"));
  mux_664_nl <= MUX_s_1_2_2(or_454_cse, or_961_nl, fsm_output(4));
  mux_670_nl <= MUX_s_1_2_2(mux_669_nl, mux_664_nl, fsm_output(5));
  or_959_nl <= (NOT (fsm_output(0))) OR (fsm_output(1)) OR (NOT (fsm_output(7)))
      OR (fsm_output(8));
  mux_661_nl <= MUX_s_1_2_2(or_1017_cse, or_959_nl, fsm_output(2));
  mux_660_nl <= MUX_s_1_2_2(or_1017_cse, or_454_cse, fsm_output(2));
  mux_662_nl <= MUX_s_1_2_2(mux_661_nl, mux_660_nl, fsm_output(4));
  or_954_nl <= (NOT (fsm_output(1))) OR (NOT (fsm_output(7))) OR (fsm_output(8));
  mux_659_nl <= MUX_s_1_2_2(or_955_cse, or_954_nl, fsm_output(2));
  or_956_nl <= (fsm_output(4)) OR mux_659_nl;
  mux_663_nl <= MUX_s_1_2_2(mux_662_nl, or_956_nl, fsm_output(5));
  mux_671_nl <= MUX_s_1_2_2(mux_670_nl, mux_663_nl, fsm_output(3));
  mux_677_nl <= MUX_s_1_2_2(mux_676_nl, mux_671_nl, fsm_output(6));
  and_612_nl <= and_dcpl_403 AND and_dcpl_210;
  operator_40_24_true_AC_TRN_AC_WRAP_1_or_nl <= (and_dcpl_234 AND and_dcpl_316) OR
      (and_dcpl_257 AND and_dcpl_359 AND (z_out_51_40_1(39)) AND (NOT (fsm_output(5))));
  and_622_nl <= and_dcpl_454 AND and_dcpl_135;
  or_1347_nl <= (fsm_output(6)) OR (CONV_SL_1_1(fsm_output(5 DOWNTO 3)=STD_LOGIC_VECTOR'("111"))
      AND or_1326_cse);
  nor_504_nl <= NOT(CONV_SL_1_1(fsm_output(3 DOWNTO 0)/=STD_LOGIC_VECTOR'("0000")));
  and_616_nl <= (fsm_output(3)) AND or_1326_cse;
  mux_687_nl <= MUX_s_1_2_2(nor_504_nl, and_616_nl, fsm_output(5));
  mux_688_nl <= MUX_s_1_2_2(mux_687_nl, (fsm_output(5)), fsm_output(4));
  nor_505_nl <= NOT((fsm_output(5)) OR and_615_cse);
  and_614_nl <= (fsm_output(2)) AND ((NOT (z_out_51_40_1(39))) OR (fsm_output(1)));
  mux_684_nl <= MUX_s_1_2_2(and_614_nl, or_1326_cse, fsm_output(0));
  mux_685_nl <= MUX_s_1_2_2((NOT mux_684_nl), mux_tmp_681, fsm_output(3));
  nor_506_nl <= NOT((fsm_output(5)) OR mux_685_nl);
  mux_686_nl <= MUX_s_1_2_2(nor_505_nl, nor_506_nl, fsm_output(4));
  mux_689_nl <= MUX_s_1_2_2(mux_688_nl, mux_686_nl, fsm_output(6));
  mux_690_nl <= MUX_s_1_2_2(or_1347_nl, mux_689_nl, fsm_output(7));
  nand_214_nl <= NOT(CONV_SL_1_1(fsm_output(5 DOWNTO 3)=STD_LOGIC_VECTOR'("111")));
  and_613_nl <= (fsm_output(5)) AND ((fsm_output(3)) OR mux_tmp_681);
  mux_682_nl <= MUX_s_1_2_2(and_613_nl, (fsm_output(5)), fsm_output(4));
  mux_683_nl <= MUX_s_1_2_2(nand_214_nl, mux_682_nl, fsm_output(6));
  nor_507_nl <= NOT((fsm_output(7)) OR mux_683_nl);
  mux_691_nl <= MUX_s_1_2_2(mux_690_nl, nor_507_nl, fsm_output(8));
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux1h_6_nl <= MUX1HOT_v_2_4_2((reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(3
      DOWNTO 2)), (attention_round_qr_39_16_lpi_3_dfm_mx0w0(3 DOWNTO 2)), reg_GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_ftd_1,
      LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_lpi_3_mx2_3_2, STD_LOGIC_VECTOR'(
      QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_12_itm & QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_13_itm
      & and_dcpl_395 & and_dcpl_118));
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_nor_nl <= NOT(MUX_v_2_2_2(QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux1h_6_nl,
      STD_LOGIC_VECTOR'("11"), and_dcpl_274));
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_nor_nl
      <= NOT(MUX_v_2_2_2(QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_nor_nl,
      STD_LOGIC_VECTOR'("11"), QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_or_itm));
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux1h_7_nl <= MUX1HOT_v_2_5_2((reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(1
      DOWNTO 0)), (attention_round_qr_39_16_lpi_3_dfm_mx0w0(1 DOWNTO 0)), reg_GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_ftd_2,
      (z_out_20(1 DOWNTO 0)), LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_lpi_3_mx2_1_0,
      STD_LOGIC_VECTOR'( QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_12_itm
      & QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_13_itm & and_dcpl_395
      & and_dcpl_274 & and_dcpl_118));
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_not_1_nl <= NOT QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_or_itm;
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_15_nl <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"),
      QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux1h_7_nl, QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_not_1_nl);
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux1h_8_nl <= MUX1HOT_v_2_5_2((reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(3
      DOWNTO 2)), (LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_read_rom_k_weights_rom_map_1_itm(3
      DOWNTO 2)), reg_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_ftd_1, (GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_mx0w2(3
      DOWNTO 2)), (operator_40_24_true_AC_TRN_AC_WRAP_acc_28_mx0w3(3 DOWNTO 2)),
      STD_LOGIC_VECTOR'( QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_or_5_itm
      & QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_20_itm & QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_21_itm
      & and_dcpl_274 & and_dcpl_530));
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_not_nl <= NOT QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_or_3_itm;
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_23_nl <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"),
      QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux1h_8_nl, QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_not_nl);
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux1h_9_nl <= MUX1HOT_v_2_5_2((reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(1
      DOWNTO 0)), (LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_read_rom_k_weights_rom_map_1_itm(1
      DOWNTO 0)), reg_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_ftd_2, (GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_mx0w2(1
      DOWNTO 0)), (operator_40_24_true_AC_TRN_AC_WRAP_acc_28_mx0w3(1 DOWNTO 0)),
      STD_LOGIC_VECTOR'( QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_or_5_itm
      & QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_20_itm & QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_21_itm
      & and_dcpl_274 & and_dcpl_530));
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_not_2_nl <= NOT QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_or_3_itm;
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_24_nl <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"),
      QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux1h_9_nl, QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_not_2_nl);
  GEMM_3D_FLOAT_LOOP_4_acc_192_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0
      & STD_LOGIC_VECTOR'( "0000")) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(STD_LOGIC_VECTOR'(
      "11") & reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd), 4), 7) + UNSIGNED'( "0000001"),
      7));
  GEMM_3D_FLOAT_LOOP_4_acc_17_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd)
      + UNSIGNED'( "01"), 2));
  nand_43_nl <= NOT(CONV_SL_1_1(fsm_output(4 DOWNTO 3)=STD_LOGIC_VECTOR'("11")) AND
      nor_501_cse);
  mux_719_nl <= MUX_s_1_2_2(nand_43_nl, or_454_cse, fsm_output(5));
  or_1023_nl <= (fsm_output(0)) OR mux_716_cse;
  mux_717_nl <= MUX_s_1_2_2(or_1023_nl, or_629_cse, fsm_output(1));
  mux_718_nl <= MUX_s_1_2_2(or_454_cse, mux_717_nl, fsm_output(2));
  or_1025_nl <= CONV_SL_1_1(fsm_output(5 DOWNTO 3)/=STD_LOGIC_VECTOR'("000")) OR
      mux_718_nl;
  mux_720_nl <= MUX_s_1_2_2(mux_719_nl, or_1025_nl, fsm_output(6));
  APPLY_ROTARY_POS_EMB_LOOP_1_i_and_nl <= (NOT LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1)
      AND and_dcpl_118;
  APPLY_ROTARY_POS_EMB_LOOP_1_i_and_4_nl <= LINEAR_FORWARD_NO_MUL_LOOP_3_3_stage_0_1
      AND and_dcpl_118;
  APPLY_ROTARY_POS_EMB_LOOP_1_i_mux1h_5_nl <= MUX1HOT_s_1_8_2((z_out_32(2)), (z_out_37(2)),
      (z_out_28(2)), (z_out_21(2)), (z_out_27(2)), (operator_40_24_true_AC_TRN_AC_WRAP_acc_3_psp_sva_1(2)),
      reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd, (z_out_19(2)), STD_LOGIC_VECTOR'(
      and_dcpl_373 & APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_mx0c3 & and_dcpl_587
      & and_dcpl_450 & and_dcpl_260 & and_dcpl_530 & APPLY_ROTARY_POS_EMB_LOOP_1_i_and_nl
      & APPLY_ROTARY_POS_EMB_LOOP_1_i_and_4_nl));
  APPLY_ROTARY_POS_EMB_LOOP_1_i_mux1h_8_nl <= MUX1HOT_v_2_6_2((z_out_32(1 DOWNTO
      0)), (z_out_37(1 DOWNTO 0)), (z_out_28(1 DOWNTO 0)), (z_out_21(1 DOWNTO 0)),
      (z_out_27(1 DOWNTO 0)), (operator_40_24_true_AC_TRN_AC_WRAP_acc_3_psp_sva_1(1
      DOWNTO 0)), STD_LOGIC_VECTOR'( and_dcpl_373 & APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_mx0c3
      & and_dcpl_587 & and_dcpl_450 & and_dcpl_260 & and_dcpl_530));
  APPLY_ROTARY_POS_EMB_LOOP_1_i_not_2_nl <= NOT APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_mx0c0;
  APPLY_ROTARY_POS_EMB_LOOP_1_i_mux1h_6_nl <= MUX1HOT_v_2_4_2(CACHE_UPDATE_LOOP_3_qif_acc_3_ncse_2_1,
      (z_out_28(2 DOWNTO 1)), STD_LOGIC_VECTOR'( reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd
      & (reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd_1(1))), (CACHE_UPDATE_LOOP_3_1_qif_acc_3_ncse_2_0(2
      DOWNTO 1)), STD_LOGIC_VECTOR'( and_dcpl_388 & CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c4
      & CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c5 & CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c6));
  CACHE_UPDATE_LOOP_2_1_j_not_nl <= NOT CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c7;
  APPLY_ROTARY_POS_EMB_LOOP_1_i_nand_nl <= NOT(MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"),
      APPLY_ROTARY_POS_EMB_LOOP_1_i_mux1h_6_nl, CACHE_UPDATE_LOOP_2_1_j_not_nl));
  APPLY_ROTARY_POS_EMB_LOOP_1_i_mux1h_9_nl <= MUX1HOT_s_1_5_2(CACHE_UPDATE_LOOP_3_qif_acc_3_ncse_0,
      (z_out_21(0)), (z_out_28(0)), (reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd_1(0)),
      (CACHE_UPDATE_LOOP_3_1_qif_acc_3_ncse_2_0(0)), STD_LOGIC_VECTOR'( and_dcpl_388
      & and_dcpl_348 & CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c4 & CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c5
      & CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c6));
  GEMM_3D_FLOAT_LOOP_4_acc_240_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(z_out_24(3),
      1), 1), 4) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0),
      3), 4), 4));
  APPLY_ROTARY_POS_EMB_LOOP_6_and_14_nl <= (NOT LINEAR_FORWARD_NO_MUL_LOOP_5_and_1_tmp)
      AND and_dcpl_373;
  APPLY_ROTARY_POS_EMB_LOOP_6_and_15_nl <= LINEAR_FORWARD_NO_MUL_LOOP_5_and_1_tmp
      AND and_dcpl_373;
  APPLY_ROTARY_POS_EMB_LOOP_6_mux1h_12_nl <= MUX1HOT_v_4_5_2(GEMM_3D_FLOAT_LOOP_4_1_acc_23_cse_sva,
      (z_out_36(3 DOWNTO 0)), z_out_14, STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_4_acc_240_nl),
      4)), (z_out_31(3 DOWNTO 0)), STD_LOGIC_VECTOR'( APPLY_ROTARY_POS_EMB_LOOP_6_and_14_nl
      & APPLY_ROTARY_POS_EMB_LOOP_6_and_15_nl & and_dcpl_387 & and_dcpl_274 & and_dcpl_263));
  nor_908_nl <= NOT(((NOT lfst_exit_LINEAR_FORWARD_NO_MUL_LOOP_4_sva_dfm_mx1w0) AND
      and_dcpl_373) OR and_dcpl_545);
  and_947_nl <= (and_944_cse OR (fsm_output(5))) AND (fsm_output(7));
  and_948_nl <= ((fsm_output(3)) OR (fsm_output(5))) AND (fsm_output(7));
  nor_553_nl <= NOT((fsm_output(5)) OR (NOT (fsm_output(7))));
  mux_785_nl <= MUX_s_1_2_2(nor_tmp_182, nor_553_nl, fsm_output(3));
  mux_786_nl <= MUX_s_1_2_2(and_948_nl, mux_785_nl, fsm_output(2));
  mux_787_nl <= MUX_s_1_2_2(nor_tmp_182, mux_786_nl, fsm_output(4));
  mux_788_nl <= MUX_s_1_2_2(and_947_nl, mux_787_nl, or_1328_cse);
  mux_784_nl <= MUX_s_1_2_2(nor_552_cse, nor_tmp_182, fsm_output(3));
  nor_554_nl <= NOT((NOT (fsm_output(1))) OR (fsm_output(4)) OR (NOT((fsm_output(2))
      AND mux_784_nl)));
  mux_789_nl <= MUX_s_1_2_2(mux_788_nl, nor_554_nl, fsm_output(6));
  APPLY_ROTARY_POS_EMB_LOOP_6_mux1h_15_nl <= MUX1HOT_v_4_5_2(CACHE_UPDATE_LOOP_3_k_5_0_sva_1_3_0,
      z_out_26, z_out_23, z_out_16, z_out_18, STD_LOGIC_VECTOR'( and_dcpl_388 & APPLY_ROTARY_POS_EMB_LOOP_6_or_9_cse
      & and_dcpl_584 & and_dcpl_337 & and_dcpl_588));
  not_2256_nl <= NOT and_dcpl_545;
  nand_46_nl <= NOT((NOT(CONV_SL_1_1(fsm_output(6 DOWNTO 2)/=STD_LOGIC_VECTOR'("10001"))))
      AND mux_797_cse);
  nor_555_nl <= NOT((fsm_output(5)) OR (CONV_SL_1_1(fsm_output(4 DOWNTO 3)=STD_LOGIC_VECTOR'("11"))
      AND or_369_cse));
  and_951_nl <= (fsm_output(4)) AND (NOT(CONV_SL_1_1(fsm_output(2 DOWNTO 1)=STD_LOGIC_VECTOR'("11"))));
  mux_792_nl <= MUX_s_1_2_2(or_1328_cse, or_1327_cse, fsm_output(2));
  nor_556_nl <= NOT((fsm_output(2)) OR (NOT or_1328_cse));
  mux_793_nl <= MUX_s_1_2_2(mux_792_nl, nor_556_nl, fsm_output(4));
  mux_794_nl <= MUX_s_1_2_2(and_951_nl, mux_793_nl, fsm_output(3));
  and_659_nl <= (fsm_output(4)) AND ((fsm_output(2)) OR and_850_cse);
  mux_790_nl <= MUX_s_1_2_2((fsm_output(1)), (NOT (fsm_output(1))), fsm_output(2));
  or_1107_nl <= (fsm_output(4)) OR mux_790_nl;
  mux_791_nl <= MUX_s_1_2_2(and_659_nl, or_1107_nl, fsm_output(3));
  mux_795_nl <= MUX_s_1_2_2(mux_794_nl, mux_791_nl, fsm_output(5));
  mux_796_nl <= MUX_s_1_2_2(nor_555_nl, mux_795_nl, fsm_output(6));
  mux_798_nl <= MUX_s_1_2_2(nand_46_nl, mux_796_nl, fsm_output(7));
  LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_nor_1_nl
      <= NOT(and_dcpl_25 OR LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_and_5_rgt);
  LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_and_10_nl <= and_dcpl_25 AND (NOT LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_and_5_rgt);
  CACHE_UPDATE_LOOP_3_1_qif_and_1_nl <= (NOT or_dcpl_210) AND and_dcpl_373;
  CACHE_UPDATE_LOOP_3_1_qif_and_2_nl <= or_dcpl_210 AND and_dcpl_373;
  CACHE_UPDATE_LOOP_3_1_qif_or_1_nl <= and_dcpl_337 OR and_dcpl_588;
  LINEAR_FORWARD_NO_MUL_LOOP_4_1_ki_mux_nl <= MUX_v_4_2_2(APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt,
      (z_out_22(3 DOWNTO 0)), LINEAR_FORWARD_NO_MUL_LOOP_5_and_1_tmp);
  LINEAR_FORWARD_NO_MUL_LOOP_4_LINEAR_FORWARD_NO_MUL_LOOP_4_and_1_nl <= MUX_v_4_2_2(STD_LOGIC_VECTOR'("0000"),
      LINEAR_FORWARD_NO_MUL_LOOP_4_1_ki_mux_nl, lfst_exit_LINEAR_FORWARD_NO_MUL_LOOP_4_sva_dfm_mx1w0);
  GEMM_3D_FLOAT_LOOP_4_acc_241_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(z_out_27(2),
      1), 1), 4) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0),
      3), 4), 4));
  or_1155_nl <= and_850_cse OR (NOT (fsm_output(7))) OR (fsm_output(4)) OR (fsm_output(3));
  or_1154_nl <= (fsm_output(0)) OR (NOT (fsm_output(1))) OR (fsm_output(7)) OR (fsm_output(4))
      OR (fsm_output(3));
  mux_828_nl <= MUX_s_1_2_2(or_1155_nl, or_1154_nl, fsm_output(2));
  mux_829_nl <= MUX_s_1_2_2(not_tmp_504, mux_828_nl, fsm_output(6));
  or_1153_nl <= CONV_SL_1_1(fsm_output(7 DOWNTO 6)/=STD_LOGIC_VECTOR'("10"));
  mux_830_nl <= MUX_s_1_2_2(mux_829_nl, or_1153_nl, fsm_output(5));
  LINEAR_FORWARD_NO_MUL_LOOP_4_2_ki_mux_nl <= MUX_v_4_2_2(APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp,
      (z_out_37(3 DOWNTO 0)), LINEAR_FORWARD_NO_MUL_LOOP_5_and_1_tmp);
  LINEAR_FORWARD_NO_MUL_LOOP_4_LINEAR_FORWARD_NO_MUL_LOOP_4_and_2_nl <= MUX_v_4_2_2(STD_LOGIC_VECTOR'("0000"),
      LINEAR_FORWARD_NO_MUL_LOOP_4_2_ki_mux_nl, lfst_exit_LINEAR_FORWARD_NO_MUL_LOOP_4_sva_dfm_mx1w0);
  mux_818_nl <= MUX_s_1_2_2(nor_tmp_182, nor_552_cse, fsm_output(6));
  mux_819_nl <= MUX_s_1_2_2(mux_818_nl, (NOT or_tmp_927), fsm_output(0));
  mux_820_nl <= MUX_s_1_2_2(mux_819_nl, nor_tmp_182, fsm_output(3));
  mux_821_nl <= MUX_s_1_2_2(or_tmp_927, (NOT mux_820_nl), and_855_cse);
  or_1141_nl <= (NOT (fsm_output(0))) OR (fsm_output(6)) OR (NOT (fsm_output(7)))
      OR (fsm_output(5));
  mux_816_nl <= MUX_s_1_2_2((NOT nor_tmp_182), or_1141_nl, fsm_output(3));
  or_1139_nl <= CONV_SL_1_1(fsm_output(7 DOWNTO 5)/=STD_LOGIC_VECTOR'("100"));
  mux_815_nl <= MUX_s_1_2_2(or_tmp_927, or_1139_nl, fsm_output(3));
  mux_817_nl <= MUX_s_1_2_2(mux_816_nl, mux_815_nl, or_1326_cse);
  mux_822_nl <= MUX_s_1_2_2(mux_821_nl, mux_817_nl, fsm_output(4));
  LINEAR_FORWARD_NO_MUL_LOOP_2_2_or_2_nl <= and_dcpl_285 OR and_dcpl_309;
  and_710_nl <= (NOT mux_946_itm) AND (NOT((fsm_output(0)) OR (fsm_output(6)))) AND
      LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_13_sdt_mx0c1;
  LINEAR_FORWARD_NO_MUL_LOOP_2_1_or_2_nl <= (and_dcpl_171 AND and_dcpl_125 AND LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_13_sdt_mx0c1)
      OR and_dcpl_268;
  nor_597_nl <= NOT((NOT (fsm_output(5))) OR (fsm_output(0)) OR (fsm_output(2)) OR
      (NOT (fsm_output(4))));
  mux_950_nl <= MUX_s_1_2_2(and_745_cse, or_1283_cse, fsm_output(0));
  and_711_nl <= (fsm_output(5)) AND mux_950_nl;
  mux_949_nl <= MUX_s_1_2_2(and_971_cse, (fsm_output(2)), fsm_output(5));
  mux_951_nl <= MUX_s_1_2_2(and_711_nl, mux_949_nl, fsm_output(3));
  mux_952_nl <= MUX_s_1_2_2(nor_597_nl, mux_951_nl, fsm_output(1));
  nor_598_nl <= NOT((fsm_output(5)) OR (fsm_output(0)) OR (fsm_output(2)) OR (fsm_output(4)));
  or_1280_nl <= (NOT (fsm_output(2))) OR (fsm_output(4));
  or_1279_nl <= (fsm_output(0)) OR (fsm_output(2)) OR (NOT (fsm_output(4)));
  mux_947_nl <= MUX_s_1_2_2(or_1280_nl, or_1279_nl, fsm_output(5));
  nor_599_nl <= NOT((fsm_output(3)) OR mux_947_nl);
  mux_948_nl <= MUX_s_1_2_2(nor_598_nl, nor_599_nl, fsm_output(1));
  mux_953_nl <= MUX_s_1_2_2(mux_952_nl, mux_948_nl, fsm_output(6));
  LINEAR_FORWARD_NO_MUL_LOOP_2_3_or_5_nl <= ((NOT mux_946_itm) AND nor_414_cse AND
      and_dcpl_189 AND LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_12_sdt_mx0c1) OR ((NOT(mux_967_cse
      OR or_tmp_496)) AND and_dcpl_171 AND and_dcpl_107);
  mux_962_nl <= MUX_s_1_2_2((NOT (fsm_output(4))), (fsm_output(4)), fsm_output(6));
  nand_241_nl <= NOT((fsm_output(5)) AND mux_962_nl);
  mux_963_nl <= MUX_s_1_2_2(nand_241_nl, mux_967_cse, fsm_output(3));
  or_1293_nl <= (fsm_output(3)) OR nand_242_cse;
  mux_964_nl <= MUX_s_1_2_2(mux_963_nl, or_1293_nl, fsm_output(0));
  mux_961_nl <= MUX_s_1_2_2(or_tmp_1058, mux_tmp_956, fsm_output(0));
  mux_965_nl <= MUX_s_1_2_2(mux_964_nl, mux_961_nl, fsm_output(2));
  mux_958_nl <= MUX_s_1_2_2(or_705_cse, (NOT (fsm_output(4))), fsm_output(5));
  or_1292_nl <= (fsm_output(3)) OR mux_958_nl;
  mux_959_nl <= MUX_s_1_2_2(or_1292_nl, or_tmp_1058, fsm_output(0));
  mux_960_nl <= MUX_s_1_2_2(mux_959_nl, mux_tmp_956, fsm_output(2));
  mux_966_nl <= MUX_s_1_2_2(mux_965_nl, mux_960_nl, fsm_output(1));
  nor_582_nl <= NOT((NOT (z_out_35(3))) OR CONV_SL_1_1(fsm_output(4 DOWNTO 3)/=STD_LOGIC_VECTOR'("10")));
  mux_919_nl <= MUX_s_1_2_2(nor_581_cse, nor_582_nl, fsm_output(6));
  nor_583_nl <= NOT((fsm_output(6)) OR (NOT CACHE_UPDATE_LOOP_1_and_cse) OR CONV_SL_1_1(fsm_output(4
      DOWNTO 3)/=STD_LOGIC_VECTOR'("00")));
  mux_920_nl <= MUX_s_1_2_2(mux_919_nl, nor_583_nl, fsm_output(2));
  nor_584_nl <= NOT((fsm_output(2)) OR (fsm_output(6)) OR (NOT CACHE_UPDATE_LOOP_1_and_cse)
      OR CONV_SL_1_1(fsm_output(4 DOWNTO 3)/=STD_LOGIC_VECTOR'("10")));
  mux_921_nl <= MUX_s_1_2_2(mux_920_nl, nor_584_nl, fsm_output(1));
  nor_585_nl <= NOT((NOT (fsm_output(2))) OR (fsm_output(6)) OR (NOT (fsm_output(3)))
      OR (fsm_output(4)));
  and_969_nl <= (fsm_output(6)) AND (z_out_35(3)) AND CONV_SL_1_1(fsm_output(4 DOWNTO
      3)=STD_LOGIC_VECTOR'("01"));
  nor_586_nl <= NOT((fsm_output(6)) OR (NOT (z_out_35(3))) OR CONV_SL_1_1(fsm_output(4
      DOWNTO 3)/=STD_LOGIC_VECTOR'("10")));
  mux_917_nl <= MUX_s_1_2_2(and_969_nl, nor_586_nl, fsm_output(2));
  mux_918_nl <= MUX_s_1_2_2(nor_585_nl, mux_917_nl, fsm_output(1));
  mux_922_nl <= MUX_s_1_2_2(mux_921_nl, mux_918_nl, fsm_output(0));
  nor_587_nl <= NOT((fsm_output(0)) OR (fsm_output(1)) OR (NOT (fsm_output(2))) OR
      (NOT (fsm_output(6))) OR (NOT (z_out_35(3))) OR CONV_SL_1_1(fsm_output(4 DOWNTO
      3)/=STD_LOGIC_VECTOR'("01")));
  mux_923_nl <= MUX_s_1_2_2(mux_922_nl, nor_587_nl, fsm_output(5));
  mux_938_nl <= MUX_s_1_2_2(and_929_cse, mux_tmp_260, fsm_output(1));
  mux_939_nl <= MUX_s_1_2_2(nor_tmp_88, mux_938_nl, fsm_output(2));
  mux_940_nl <= MUX_s_1_2_2(mux_939_nl, (NOT and_929_cse), fsm_output(5));
  SF_LOOP_3_mux_70_nl <= MUX_v_2_2_2((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(38
      DOWNTO 37)), (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(35
      DOWNTO 34)), and_995_cse);
  SF_LOOP_3_mux_71_nl <= MUX_v_2_2_2((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(38
      DOWNTO 37)), STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd,
      1),2)), and_995_cse);
  SF_LOOP_3_mux_72_nl <= MUX_v_2_2_2((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(38
      DOWNTO 37)), (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(21
      DOWNTO 20)), and_995_cse);
  SF_LOOP_3_SF_LOOP_3_and_10_nl <= MUX_v_4_2_2(STD_LOGIC_VECTOR'("0000"), (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(19
      DOWNTO 16)), and_995_cse);
  SF_LOOP_3_mux_73_nl <= MUX_s_1_2_2((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(38)),
      (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(15)),
      and_995_cse);
  SF_LOOP_3_SF_LOOP_3_and_11_nl <= (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(37))
      AND (NOT and_995_cse);
  SF_LOOP_3_SF_LOOP_3_and_12_nl <= reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd
      AND and_995_cse;
  SF_LOOP_3_mux_74_nl <= MUX_v_2_2_2((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(38
      DOWNTO 37)), STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(20),
      1),2)), and_995_cse);
  SF_LOOP_3_mux_75_nl <= MUX_v_2_2_2((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(38
      DOWNTO 37)), (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(11
      DOWNTO 10)), and_995_cse);
  SF_LOOP_3_mux_76_nl <= MUX_v_2_2_2((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(38
      DOWNTO 37)), (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(15
      DOWNTO 14)), and_995_cse);
  SF_LOOP_3_mux_77_nl <= MUX_v_2_2_2((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(38
      DOWNTO 37)), (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(13
      DOWNTO 12)), and_995_cse);
  SF_LOOP_3_SF_LOOP_3_and_13_nl <= MUX_v_8_2_2(STD_LOGIC_VECTOR'("00000000"), (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(11
      DOWNTO 4)), and_995_cse);
  SF_LOOP_3_mux_78_nl <= MUX_v_2_2_2((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(38
      DOWNTO 37)), (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(3
      DOWNTO 2)), and_995_cse);
  SF_LOOP_3_mux_79_nl <= MUX_v_2_2_2(STD_LOGIC_VECTOR'( "01"), (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(1
      DOWNTO 0)), and_995_cse);
  not_3341_nl <= NOT and_995_cse;
  SF_LOOP_3_SF_LOOP_3_or_38_nl <= MUX_v_8_2_2((SF_LOOP_3_acc_56_itm(34 DOWNTO 27)),
      STD_LOGIC_VECTOR'("11111111"), not_3341_nl);
  SF_LOOP_3_mux_80_nl <= MUX_v_2_2_2((NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(38
      DOWNTO 37))), (SF_LOOP_3_acc_56_itm(26 DOWNTO 25)), and_995_cse);
  not_3342_nl <= NOT and_995_cse;
  SF_LOOP_3_SF_LOOP_3_or_39_nl <= MUX_v_2_2_2((SF_LOOP_3_acc_56_itm(24 DOWNTO 23)),
      STD_LOGIC_VECTOR'("11"), not_3342_nl);
  SF_LOOP_3_mux_81_nl <= MUX_v_2_2_2((NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(38
      DOWNTO 37))), (SF_LOOP_3_acc_56_itm(22 DOWNTO 21)), and_995_cse);
  not_3343_nl <= NOT and_995_cse;
  SF_LOOP_3_SF_LOOP_3_or_40_nl <= MUX_v_10_2_2((SF_LOOP_3_acc_56_itm(20 DOWNTO 11)),
      STD_LOGIC_VECTOR'("1111111111"), not_3343_nl);
  SF_LOOP_3_mux_82_nl <= MUX_v_2_2_2((NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(38
      DOWNTO 37))), (SF_LOOP_3_acc_56_itm(10 DOWNTO 9)), and_995_cse);
  SF_LOOP_3_mux_83_nl <= MUX_v_2_2_2((NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(38
      DOWNTO 37))), (SF_LOOP_3_acc_56_itm(8 DOWNTO 7)), and_995_cse);
  SF_LOOP_3_SF_LOOP_3_or_41_nl <= (SF_LOOP_3_acc_56_itm(6)) OR (NOT and_995_cse);
  SF_LOOP_3_mux_84_nl <= MUX_v_2_2_2((NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(38
      DOWNTO 37))), (SF_LOOP_3_acc_56_itm(5 DOWNTO 4)), and_995_cse);
  not_3345_nl <= NOT and_995_cse;
  SF_LOOP_3_SF_LOOP_3_or_42_nl <= MUX_v_2_2_2((SF_LOOP_3_acc_56_itm(3 DOWNTO 2)),
      STD_LOGIC_VECTOR'("11"), not_3345_nl);
  SF_LOOP_3_mux_85_nl <= MUX_v_2_2_2((NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(38
      DOWNTO 37))), (SF_LOOP_3_acc_56_itm(1 DOWNTO 0)), and_995_cse);
  z_out <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_mux_70_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_2_cse_1
      & SF_LOOP_3_mux_71_nl & SF_LOOP_3_mux_72_nl & SF_LOOP_3_SF_LOOP_3_and_10_nl
      & SF_LOOP_3_mux_73_nl & SF_LOOP_3_SF_LOOP_3_and_11_nl & SF_LOOP_3_SF_LOOP_3_and_12_nl
      & '0' & SF_LOOP_3_mux_74_nl & SF_LOOP_3_mux_75_nl & '0' & SF_LOOP_3_mux_76_nl
      & SF_LOOP_3_mux_77_nl & SF_LOOP_3_SF_LOOP_3_and_13_nl & SF_LOOP_3_mux_78_nl
      & SF_LOOP_3_mux_79_nl), 36), 38) + CONV_UNSIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_SF_LOOP_3_or_38_nl
      & SF_LOOP_3_mux_80_nl & SF_LOOP_3_SF_LOOP_3_or_39_nl & SF_LOOP_3_mux_81_nl
      & SF_LOOP_3_SF_LOOP_3_or_40_nl & SF_LOOP_3_mux_82_nl & SF_LOOP_3_mux_83_nl
      & SF_LOOP_3_SF_LOOP_3_or_41_nl & SF_LOOP_3_mux_84_nl & SF_LOOP_3_SF_LOOP_3_or_42_nl
      & SF_LOOP_3_mux_85_nl), 35), 38), 38));
  operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_18_nl
      <= MUX_v_8_2_2(STD_LOGIC_VECTOR'("00000000"), (SF_LOOP_3_acc_32_itm(21 DOWNTO
      14)), and_dcpl_728);
  operator_40_24_true_AC_TRN_AC_WRAP_mux_126_nl <= MUX_s_1_2_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(22)),
      (SF_LOOP_3_acc_32_itm(13)), and_dcpl_728);
  operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_19_nl
      <= (SF_LOOP_3_acc_32_itm(12)) AND and_dcpl_728;
  operator_40_24_true_AC_TRN_AC_WRAP_mux_127_nl <= MUX_s_1_2_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(22)),
      (SF_LOOP_3_acc_32_itm(11)), and_dcpl_728);
  operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_20_nl
      <= (SF_LOOP_3_acc_32_itm(10)) AND and_dcpl_728;
  operator_40_24_true_AC_TRN_AC_WRAP_mux_128_nl <= MUX_s_1_2_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(22)),
      (SF_LOOP_3_acc_32_itm(9)), and_dcpl_728);
  operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_21_nl
      <= (SF_LOOP_3_acc_32_itm(8)) AND and_dcpl_728;
  operator_40_24_true_AC_TRN_AC_WRAP_mux_129_nl <= MUX_s_1_2_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(22)),
      (SF_LOOP_3_acc_32_itm(7)), and_dcpl_728);
  operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_22_nl
      <= (SF_LOOP_3_acc_32_itm(6)) AND and_dcpl_728;
  operator_40_24_true_AC_TRN_AC_WRAP_mux_130_nl <= MUX_s_1_2_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(22)),
      (SF_LOOP_3_acc_32_itm(5)), and_dcpl_728);
  operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_23_nl
      <= (SF_LOOP_3_acc_32_itm(4)) AND and_dcpl_728;
  operator_40_24_true_AC_TRN_AC_WRAP_mux_131_nl <= MUX_s_1_2_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(22)),
      (SF_LOOP_3_acc_32_itm(3)), and_dcpl_728);
  operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_24_nl
      <= (SF_LOOP_3_acc_32_itm(2)) AND and_dcpl_728;
  operator_40_24_true_AC_TRN_AC_WRAP_mux_132_nl <= MUX_v_2_2_2(STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(18),
      1),2)), (SF_LOOP_3_acc_32_itm(1 DOWNTO 0)), and_dcpl_728);
  operator_40_24_true_AC_TRN_AC_WRAP_mux_133_nl <= MUX_v_21_2_2(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(exs_tmp_1_12_0(12
      DOWNTO 1)),21)), STD_LOGIC_VECTOR'( "100000000000000001100"), and_dcpl_728);
  operator_40_24_true_AC_TRN_AC_WRAP_mux_134_nl <= MUX_s_1_2_2((exs_tmp_1_12_0(0)),
      (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(22)), and_dcpl_728);
  z_out_2 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_18_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_mux_126_nl & operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_19_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_mux_127_nl & operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_20_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_mux_128_nl & operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_21_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_mux_129_nl & operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_22_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_mux_130_nl & operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_23_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_mux_131_nl & operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_24_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_mux_132_nl) + UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_mux_133_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_mux_134_nl), 22));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_99_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(28))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(28))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(28))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(28))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(28))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(28))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(28))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(28))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(28))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(24),
      1),2))), 20), 21) + CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_38_itm_18
      & reg_SF_LOOP_3_acc_38_1_ftd & reg_SF_LOOP_3_acc_38_1_ftd_1 & reg_SF_LOOP_3_acc_38_1_ftd_2),
      19), 21), 21));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_98_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(30))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(30))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(30))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(30))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(30))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(30))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(30))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(30))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(30))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(30))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(26),
      1),2))), 22), 23) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_99_nl),
      23), 23));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_97_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(32))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(32))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(32))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(32))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(32))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(32))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(32))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(32))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(32))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(32))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(32))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(28),
      1),2))), 24), 25) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_98_nl),
      25), 25));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_96_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(34))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(34))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(34))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(34))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(34))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(34))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(34))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(34))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(34))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(34))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(34))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(34))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(30),
      1),2))), 26), 27) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_97_nl),
      27), 27));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_95_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(0))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(0))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(0))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(0))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(0))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(0))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(0))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(0))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(0))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(0))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(0))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(0))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(0))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(32),
      1),2))), 28), 29) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_96_nl),
      29), 29));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_94_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(2))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(2))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(2))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(2))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(2))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(2))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(2))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(2))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(2))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(2))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(2))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(2))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(2))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(2))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(34),
      1),2))), 30), 31) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_95_nl),
      31), 31));
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_12_nl <= MUX1HOT_v_31_3_2(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(z_out_10(39
      DOWNTO 17)),31)), STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_94_nl),
      31)), attention_abs_4_qif_acc_pmx_lpi_1_dfm, STD_LOGIC_VECTOR'( and_1159_cse
      & and_1055_cse & and_dcpl_763));
  operator_40_24_true_AC_TRN_AC_WRAP_or_2_nl <= and_1055_cse OR and_dcpl_763;
  operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_mux_2_nl
      <= MUX_v_30_2_2(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(z_out_31 & (SOFTMAX_LOOP_4_x_lpi_3_dfm_1_20_1_mx0w1(15
      DOWNTO 0))),30)), z_out_56, operator_40_24_true_AC_TRN_AC_WRAP_or_2_nl);
  z_out_4 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_mux1h_12_nl),
      32) + CONV_UNSIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_mux_2_nl),
      32), 32));
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux_20_nl <= MUX_s_1_2_2((NOT reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd),
      (NOT (operator_40_24_true_AC_TRN_AC_WRAP_acc_3_psp_sva_1(2))), and_1076_cse);
  acc_5_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'(
      (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(15))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(15))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(15))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(15))
      & operator_40_24_true_AC_TRN_AC_WRAP_2_mux_20_nl), 8), 9) + CONV_UNSIGNED(CONV_SIGNED(SIGNED(z_out_22
      & '1'), 7), 9), 9));
  z_out_5 <= acc_5_nl(8 DOWNTO 1);
  operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_13_nl
      <= (attention_sqrt_1_for_i_4_0_sva_2_0(2)) AND operator_40_24_true_AC_TRN_AC_WRAP_2_nor_6_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_mux_13_nl
      <= MUX_s_1_2_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(17)),
      (attention_sqrt_1_for_i_4_0_sva_2_0(1)), operator_40_24_true_AC_TRN_AC_WRAP_2_or_36_cse);
  operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_14_nl
      <= (attention_sqrt_1_for_i_4_0_sva_2_0(0)) AND operator_40_24_true_AC_TRN_AC_WRAP_2_nor_6_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_mux_14_nl
      <= MUX_s_1_2_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(17)),
      (APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(3)), operator_40_24_true_AC_TRN_AC_WRAP_2_or_36_cse);
  operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_15_nl
      <= (APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(2)) AND operator_40_24_true_AC_TRN_AC_WRAP_2_nor_6_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_mux_15_nl
      <= MUX_s_1_2_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(17)),
      (APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(1)), operator_40_24_true_AC_TRN_AC_WRAP_2_or_36_cse);
  operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_16_nl
      <= (APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(0)) AND operator_40_24_true_AC_TRN_AC_WRAP_2_nor_6_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_2_and_39_nl <= (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(3))
      AND (NOT (reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1(1))) AND APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  operator_40_24_true_AC_TRN_AC_WRAP_and_18_nl <= (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(3))
      AND (NOT (operator_40_24_true_AC_TRN_AC_WRAP_acc_4_psp_sva_1(1))) AND operator_40_24_true_AC_TRN_AC_WRAP_or_mx0w6;
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux_21_nl <= MUX_s_1_2_2(operator_40_24_true_AC_TRN_AC_WRAP_2_and_39_nl,
      operator_40_24_true_AC_TRN_AC_WRAP_and_18_nl, and_dcpl_795);
  operator_40_24_true_AC_TRN_AC_WRAP_2_and_38_nl <= operator_40_24_true_AC_TRN_AC_WRAP_2_mux_21_nl
      AND operator_40_24_true_AC_TRN_AC_WRAP_2_nor_5_itm;
  operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_3_nl
      <= (z_out_5(7)) AND (NOT operator_40_24_true_AC_TRN_AC_WRAP_2_or_36_cse);
  LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_mux_4_nl <= MUX_v_2_2_2((SF_LOOP_3_acc_45_itm_8_0(8
      DOWNTO 7)), (reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(8 DOWNTO 7)),
      and_1425_cse);
  LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_acc_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(attention_sqrt_1_for_i_4_0_sva_2_0
      & APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt) + CONV_UNSIGNED(UNSIGNED(LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_mux_4_nl),
      7), 7));
  operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_mux_16_nl
      <= MUX_v_7_2_2((z_out_5(6 DOWNTO 0)), STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_acc_nl),
      7)), operator_40_24_true_AC_TRN_AC_WRAP_2_or_36_cse);
  acc_6_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'(
      operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_1_cse
      & operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_13_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_mux_13_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_14_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_mux_14_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_15_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_mux_15_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_16_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_1_cse
      & operator_40_24_true_AC_TRN_AC_WRAP_2_and_38_nl), 10), 11) + CONV_UNSIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_3_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_mux_16_nl
      & '1'), 9), 11), 11));
  z_out_6 <= acc_6_nl(10 DOWNTO 1);
  operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_mux_17_nl
      <= MUX_s_1_2_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(19)),
      (exu_tmp_5_6_0(6)), and_dcpl_800);
  operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_17_nl
      <= (exu_tmp_5_6_0(5)) AND operator_40_24_true_AC_TRN_AC_WRAP_2_nor_11_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_mux_18_nl
      <= MUX_s_1_2_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(19)),
      (exu_tmp_5_6_0(4)), and_dcpl_800);
  operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_18_nl
      <= (exu_tmp_5_6_0(3)) AND operator_40_24_true_AC_TRN_AC_WRAP_2_nor_11_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_mux_19_nl
      <= MUX_s_1_2_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(19)),
      (exu_tmp_5_6_0(2)), and_dcpl_800);
  operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_19_nl
      <= (exu_tmp_5_6_0(1)) AND operator_40_24_true_AC_TRN_AC_WRAP_2_nor_11_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_mux_20_nl
      <= MUX_s_1_2_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(19)),
      (exu_tmp_5_6_0(0)), and_dcpl_800);
  not_3348_nl <= NOT and_dcpl_800;
  operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_4_nl
      <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"), (z_out_6(9 DOWNTO 8)), not_3348_nl);
  operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_mux_21_nl
      <= MUX_v_3_2_2((z_out_6(7 DOWNTO 5)), (reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd
      & reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd_1), and_dcpl_800);
  operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_mux_22_nl
      <= MUX_v_4_2_2((z_out_6(4 DOWNTO 1)), GEMM_3D_FLOAT_LOOP_4_1_acc_23_cse_sva,
      and_dcpl_800);
  operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_5_nl
      <= (z_out_6(0)) AND (NOT and_dcpl_800);
  z_out_7 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'(
      operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_7_cse
      & '0' & operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_7_cse
      & '0' & operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_mux_17_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_17_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_mux_18_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_18_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_mux_19_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_19_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_mux_20_nl),
      11), 12) + CONV_UNSIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_4_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_mux_21_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_mux_22_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_5_nl),
      10), 12), 12));
  z_out_8 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(z_out_10(55 DOWNTO 32)) + CONV_UNSIGNED(CONV_SIGNED(CONV_SIGNED(NOT
      (z_out_10(31)), 1), 1), 24), 24));
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_89_nl <= MUX1HOT_v_14_3_2((attention_exp_exp_half_mul_4_cse_sva_1(59
      DOWNTO 46)), STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(z_out_4(31 DOWNTO 28)),14)),
      (NOT (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(39 DOWNTO 26))), STD_LOGIC_VECTOR'(
      and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc & and_dcpl_874));
  not_3350_nl <= NOT and_dcpl_856;
  operator_40_24_true_AC_TRN_AC_WRAP_2_and_40_nl <= MUX_v_14_2_2(STD_LOGIC_VECTOR'("00000000000000"),
      operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_89_nl, not_3350_nl);
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_90_nl <= MUX1HOT_s_1_4_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(0)),
      (attention_exp_exp_half_mul_4_cse_sva_1(45)), (z_out_4(27)), (NOT (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(25))),
      STD_LOGIC_VECTOR'( and_dcpl_856 & and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc
      & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_91_nl <= MUX1HOT_s_1_3_2((attention_exp_exp_half_mul_4_cse_sva_1(44)),
      (z_out_4(26)), (NOT (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(24))), STD_LOGIC_VECTOR'(
      and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_and_41_nl <= operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_91_nl
      AND (NOT and_dcpl_856);
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_92_nl <= MUX1HOT_s_1_4_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(0)),
      (attention_exp_exp_half_mul_4_cse_sva_1(43)), (z_out_4(25)), (NOT (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(23))),
      STD_LOGIC_VECTOR'( and_dcpl_856 & and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc
      & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_93_nl <= MUX1HOT_s_1_3_2((attention_exp_exp_half_mul_4_cse_sva_1(42)),
      (z_out_4(24)), (NOT (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(22))), STD_LOGIC_VECTOR'(
      and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_and_42_nl <= operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_93_nl
      AND (NOT and_dcpl_856);
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_94_nl <= MUX1HOT_s_1_4_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(0)),
      (attention_exp_exp_half_mul_4_cse_sva_1(41)), (z_out_4(23)), (NOT (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(21))),
      STD_LOGIC_VECTOR'( and_dcpl_856 & and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc
      & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_95_nl <= MUX1HOT_s_1_3_2((attention_exp_exp_half_mul_4_cse_sva_1(40)),
      (z_out_4(22)), (NOT (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(20))), STD_LOGIC_VECTOR'(
      and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_and_43_nl <= operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_95_nl
      AND (NOT and_dcpl_856);
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_96_nl <= MUX1HOT_s_1_4_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(0)),
      (attention_exp_exp_half_mul_4_cse_sva_1(39)), (z_out_4(21)), (NOT (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(19))),
      STD_LOGIC_VECTOR'( and_dcpl_856 & and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc
      & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_97_nl <= MUX1HOT_s_1_3_2((attention_exp_exp_half_mul_4_cse_sva_1(38)),
      (z_out_4(20)), (NOT (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(18))), STD_LOGIC_VECTOR'(
      and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_and_44_nl <= operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_97_nl
      AND (NOT and_dcpl_856);
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_98_nl <= MUX1HOT_s_1_4_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(0)),
      (attention_exp_exp_half_mul_4_cse_sva_1(37)), (z_out_4(19)), (NOT (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(17))),
      STD_LOGIC_VECTOR'( and_dcpl_856 & and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc
      & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_99_nl <= MUX1HOT_s_1_3_2((attention_exp_exp_half_mul_4_cse_sva_1(36)),
      (z_out_4(18)), (NOT (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(16))), STD_LOGIC_VECTOR'(
      and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_and_45_nl <= operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_99_nl
      AND (NOT and_dcpl_856);
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_100_nl <= MUX1HOT_s_1_4_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(0)),
      (attention_exp_exp_half_mul_4_cse_sva_1(35)), (z_out_4(17)), (NOT (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(15))),
      STD_LOGIC_VECTOR'( and_dcpl_856 & and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc
      & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_101_nl <= MUX1HOT_s_1_3_2((attention_exp_exp_half_mul_4_cse_sva_1(34)),
      (z_out_4(16)), (NOT (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(14))), STD_LOGIC_VECTOR'(
      and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_and_46_nl <= operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_101_nl
      AND (NOT and_dcpl_856);
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_102_nl <= MUX1HOT_s_1_4_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(0)),
      (attention_exp_exp_half_mul_4_cse_sva_1(33)), (z_out_4(15)), (NOT (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(13))),
      STD_LOGIC_VECTOR'( and_dcpl_856 & and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc
      & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_103_nl <= MUX1HOT_s_1_3_2((attention_exp_exp_half_mul_4_cse_sva_1(32)),
      (z_out_4(14)), (NOT (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(12))), STD_LOGIC_VECTOR'(
      and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_and_47_nl <= operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_103_nl
      AND (NOT and_dcpl_856);
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_104_nl <= MUX1HOT_s_1_4_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(0)),
      (attention_exp_exp_half_mul_4_cse_sva_1(31)), (z_out_4(13)), (NOT (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(11))),
      STD_LOGIC_VECTOR'( and_dcpl_856 & and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc
      & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_105_nl <= MUX1HOT_s_1_3_2((attention_exp_exp_half_mul_4_cse_sva_1(30)),
      (z_out_4(12)), (NOT (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(10))), STD_LOGIC_VECTOR'(
      and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_and_48_nl <= operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_105_nl
      AND (NOT and_dcpl_856);
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_106_nl <= MUX1HOT_s_1_4_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(0)),
      (attention_exp_exp_half_mul_4_cse_sva_1(29)), (z_out_4(11)), (NOT (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(9))),
      STD_LOGIC_VECTOR'( and_dcpl_856 & and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc
      & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_107_nl <= MUX1HOT_s_1_3_2((attention_exp_exp_half_mul_4_cse_sva_1(28)),
      (z_out_4(10)), (NOT (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(8))), STD_LOGIC_VECTOR'(
      and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_and_49_nl <= operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_107_nl
      AND (NOT and_dcpl_856);
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_108_nl <= MUX1HOT_s_1_4_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(0)),
      (attention_exp_exp_half_mul_4_cse_sva_1(27)), (z_out_4(9)), (NOT (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(7))),
      STD_LOGIC_VECTOR'( and_dcpl_856 & and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc
      & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_109_nl <= MUX1HOT_s_1_3_2((attention_exp_exp_half_mul_4_cse_sva_1(26)),
      (z_out_4(8)), (NOT (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(6))), STD_LOGIC_VECTOR'(
      and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_and_50_nl <= operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_109_nl
      AND (NOT and_dcpl_856);
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_110_nl <= MUX1HOT_s_1_4_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(0)),
      (attention_exp_exp_half_mul_4_cse_sva_1(25)), (z_out_4(7)), (NOT (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(5))),
      STD_LOGIC_VECTOR'( and_dcpl_856 & and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc
      & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_111_nl <= MUX1HOT_s_1_3_2((attention_exp_exp_half_mul_4_cse_sva_1(24)),
      (z_out_4(6)), (NOT (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(4))), STD_LOGIC_VECTOR'(
      and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_and_51_nl <= operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_111_nl
      AND (NOT and_dcpl_856);
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_112_nl <= MUX1HOT_s_1_4_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(0)),
      (attention_exp_exp_half_mul_4_cse_sva_1(23)), (z_out_4(5)), (NOT (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(3))),
      STD_LOGIC_VECTOR'( and_dcpl_856 & and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc
      & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_113_nl <= MUX1HOT_s_1_3_2((attention_exp_exp_half_mul_4_cse_sva_1(22)),
      (z_out_4(4)), (NOT (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(2))), STD_LOGIC_VECTOR'(
      and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_and_52_nl <= operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_113_nl
      AND (NOT and_dcpl_856);
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_114_nl <= MUX1HOT_s_1_4_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(0)),
      (attention_exp_exp_half_mul_4_cse_sva_1(21)), (z_out_4(3)), (NOT (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(1))),
      STD_LOGIC_VECTOR'( and_dcpl_856 & and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc
      & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_115_nl <= MUX1HOT_s_1_3_2((attention_exp_exp_half_mul_4_cse_sva_1(20)),
      (z_out_4(2)), (NOT (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(0))), STD_LOGIC_VECTOR'(
      and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_and_53_nl <= operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_115_nl
      AND (NOT and_dcpl_856);
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_116_nl <= MUX1HOT_v_2_4_2(STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(32),
      1),2)), (attention_exp_exp_half_mul_4_cse_sva_1(19 DOWNTO 18)), (z_out_4(1
      DOWNTO 0)), STD_LOGIC_VECTOR'( "01"), STD_LOGIC_VECTOR'( and_dcpl_856 & and_1159_cse
      & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_117_nl <= MUX1HOT_v_9_4_2(STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(exs_tmp_4_26_0(26),
      1),9)), (z_out_4(23 DOWNTO 15)), STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(3),
      1),9)), (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_11_itm(39 DOWNTO 31)), STD_LOGIC_VECTOR'(
      and_dcpl_856 & and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc
      & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_118_nl <= MUX1HOT_s_1_3_2((exs_tmp_4_26_0(26)),
      (z_out_4(14)), (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_11_itm(30)), STD_LOGIC_VECTOR'(
      and_dcpl_856 & and_1159_cse & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_and_54_nl <= operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_118_nl
      AND operator_40_24_true_AC_TRN_AC_WRAP_2_nor_14_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_119_nl <= MUX1HOT_s_1_4_2((exs_tmp_4_26_0(26)),
      (z_out_4(13)), (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(3)),
      (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_11_itm(29)), STD_LOGIC_VECTOR'( and_dcpl_856
      & and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_120_nl <= MUX1HOT_s_1_3_2((exs_tmp_4_26_0(26)),
      (z_out_4(12)), (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_11_itm(28)), STD_LOGIC_VECTOR'(
      and_dcpl_856 & and_1159_cse & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_and_55_nl <= operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_120_nl
      AND operator_40_24_true_AC_TRN_AC_WRAP_2_nor_14_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_121_nl <= MUX1HOT_s_1_4_2((exs_tmp_4_26_0(26)),
      (z_out_4(11)), (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(3)),
      (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_11_itm(27)), STD_LOGIC_VECTOR'( and_dcpl_856
      & and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_122_nl <= MUX1HOT_s_1_3_2((exs_tmp_4_26_0(26)),
      (z_out_4(10)), (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_11_itm(26)), STD_LOGIC_VECTOR'(
      and_dcpl_856 & and_1159_cse & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_and_56_nl <= operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_122_nl
      AND operator_40_24_true_AC_TRN_AC_WRAP_2_nor_14_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_123_nl <= MUX1HOT_s_1_4_2((exs_tmp_4_26_0(25)),
      (z_out_4(9)), (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(3)),
      (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_11_itm(25)), STD_LOGIC_VECTOR'( and_dcpl_856
      & and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_124_nl <= MUX1HOT_s_1_3_2((exs_tmp_4_26_0(24)),
      (z_out_4(8)), (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_11_itm(24)), STD_LOGIC_VECTOR'(
      and_dcpl_856 & and_1159_cse & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_and_57_nl <= operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_124_nl
      AND operator_40_24_true_AC_TRN_AC_WRAP_2_nor_14_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_125_nl <= MUX1HOT_s_1_4_2((exs_tmp_4_26_0(23)),
      (z_out_4(7)), (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(3)),
      (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_11_itm(23)), STD_LOGIC_VECTOR'( and_dcpl_856
      & and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_126_nl <= MUX1HOT_s_1_3_2((exs_tmp_4_26_0(22)),
      (z_out_4(6)), (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_11_itm(22)), STD_LOGIC_VECTOR'(
      and_dcpl_856 & and_1159_cse & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_and_58_nl <= operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_126_nl
      AND operator_40_24_true_AC_TRN_AC_WRAP_2_nor_14_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_127_nl <= MUX1HOT_s_1_4_2((exs_tmp_4_26_0(21)),
      (z_out_4(5)), (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(3)),
      (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_11_itm(21)), STD_LOGIC_VECTOR'( and_dcpl_856
      & and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_128_nl <= MUX1HOT_s_1_3_2((exs_tmp_4_26_0(20)),
      (z_out_4(4)), (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_11_itm(20)), STD_LOGIC_VECTOR'(
      and_dcpl_856 & and_1159_cse & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_and_59_nl <= operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_128_nl
      AND operator_40_24_true_AC_TRN_AC_WRAP_2_nor_14_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_129_nl <= MUX1HOT_s_1_4_2((exs_tmp_4_26_0(19)),
      (z_out_4(3)), (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(3)),
      (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_11_itm(19)), STD_LOGIC_VECTOR'( and_dcpl_856
      & and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_130_nl <= MUX1HOT_s_1_3_2((exs_tmp_4_26_0(18)),
      (z_out_4(2)), (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_11_itm(18)), STD_LOGIC_VECTOR'(
      and_dcpl_856 & and_1159_cse & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_and_60_nl <= operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_130_nl
      AND operator_40_24_true_AC_TRN_AC_WRAP_2_nor_14_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_131_nl <= MUX1HOT_s_1_4_2((exs_tmp_4_26_0(17)),
      (z_out_4(1)), (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(3)),
      (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_11_itm(17)), STD_LOGIC_VECTOR'( and_dcpl_856
      & and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_132_nl <= MUX1HOT_s_1_3_2((exs_tmp_4_26_0(16)),
      (z_out_4(0)), (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_11_itm(16)), STD_LOGIC_VECTOR'(
      and_dcpl_856 & and_1159_cse & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_and_61_nl <= operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_132_nl
      AND operator_40_24_true_AC_TRN_AC_WRAP_2_nor_14_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_133_nl <= MUX1HOT_s_1_4_2((exs_tmp_4_26_0(15)),
      (z_out_10(16)), (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(3)),
      (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_11_itm(15)), STD_LOGIC_VECTOR'( and_dcpl_856
      & and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_134_nl <= MUX1HOT_s_1_3_2((exs_tmp_4_26_0(14)),
      (z_out_10(15)), (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_11_itm(14)), STD_LOGIC_VECTOR'(
      and_dcpl_856 & and_1159_cse & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_and_62_nl <= operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_134_nl
      AND operator_40_24_true_AC_TRN_AC_WRAP_2_nor_14_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_135_nl <= MUX1HOT_s_1_4_2((exs_tmp_4_26_0(13)),
      (z_out_10(14)), (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(3)),
      (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_11_itm(13)), STD_LOGIC_VECTOR'( and_dcpl_856
      & and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_136_nl <= MUX1HOT_s_1_3_2((exs_tmp_4_26_0(12)),
      (z_out_10(13)), (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_11_itm(12)), STD_LOGIC_VECTOR'(
      and_dcpl_856 & and_1159_cse & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_and_63_nl <= operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_136_nl
      AND operator_40_24_true_AC_TRN_AC_WRAP_2_nor_14_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_137_nl <= MUX1HOT_s_1_4_2((exs_tmp_4_26_0(11)),
      (z_out_10(12)), (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(3)),
      (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_11_itm(11)), STD_LOGIC_VECTOR'( and_dcpl_856
      & and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_138_nl <= MUX1HOT_s_1_3_2((exs_tmp_4_26_0(10)),
      (z_out_10(11)), (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_11_itm(10)), STD_LOGIC_VECTOR'(
      and_dcpl_856 & and_1159_cse & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_and_64_nl <= operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_138_nl
      AND operator_40_24_true_AC_TRN_AC_WRAP_2_nor_14_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_139_nl <= MUX1HOT_s_1_4_2((exs_tmp_4_26_0(9)),
      (z_out_10(10)), (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(3)),
      (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_11_itm(9)), STD_LOGIC_VECTOR'( and_dcpl_856
      & and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_140_nl <= MUX1HOT_s_1_3_2((exs_tmp_4_26_0(8)),
      (z_out_10(9)), (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_11_itm(8)), STD_LOGIC_VECTOR'(
      and_dcpl_856 & and_1159_cse & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_and_65_nl <= operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_140_nl
      AND operator_40_24_true_AC_TRN_AC_WRAP_2_nor_14_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_141_nl <= MUX1HOT_s_1_4_2((exs_tmp_4_26_0(7)),
      (z_out_10(8)), (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(3)),
      (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_11_itm(7)), STD_LOGIC_VECTOR'( and_dcpl_856
      & and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_142_nl <= MUX1HOT_s_1_3_2((exs_tmp_4_26_0(6)),
      (z_out_10(7)), (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_11_itm(6)), STD_LOGIC_VECTOR'(
      and_dcpl_856 & and_1159_cse & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_and_66_nl <= operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_142_nl
      AND operator_40_24_true_AC_TRN_AC_WRAP_2_nor_14_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_143_nl <= MUX1HOT_s_1_4_2((exs_tmp_4_26_0(5)),
      (z_out_10(6)), (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(3)),
      (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_11_itm(5)), STD_LOGIC_VECTOR'( and_dcpl_856
      & and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_144_nl <= MUX1HOT_s_1_3_2((exs_tmp_4_26_0(4)),
      (z_out_10(5)), (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_11_itm(4)), STD_LOGIC_VECTOR'(
      and_dcpl_856 & and_1159_cse & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_and_67_nl <= operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_144_nl
      AND operator_40_24_true_AC_TRN_AC_WRAP_2_nor_14_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_145_nl <= MUX1HOT_s_1_4_2((exs_tmp_4_26_0(3)),
      (z_out_10(4)), (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(3)),
      (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_11_itm(3)), STD_LOGIC_VECTOR'( and_dcpl_856
      & and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_146_nl <= MUX1HOT_s_1_3_2((exs_tmp_4_26_0(2)),
      (z_out_10(3)), (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_11_itm(2)), STD_LOGIC_VECTOR'(
      and_dcpl_856 & and_1159_cse & and_dcpl_874));
  operator_40_24_true_AC_TRN_AC_WRAP_2_and_68_nl <= operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_146_nl
      AND operator_40_24_true_AC_TRN_AC_WRAP_2_nor_14_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_147_nl <= MUX1HOT_v_2_4_2((exs_tmp_4_26_0(1
      DOWNTO 0)), (z_out_10(2 DOWNTO 1)), STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(0),
      1),2)), (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_11_itm(1 DOWNTO 0)), STD_LOGIC_VECTOR'(
      and_dcpl_856 & and_1159_cse & operator_40_24_true_AC_TRN_AC_WRAP_2_or_4_ssc
      & and_dcpl_874));
  z_out_9 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_and_40_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_90_nl & operator_40_24_true_AC_TRN_AC_WRAP_2_and_41_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_92_nl & operator_40_24_true_AC_TRN_AC_WRAP_2_and_42_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_94_nl & operator_40_24_true_AC_TRN_AC_WRAP_2_and_43_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_96_nl & operator_40_24_true_AC_TRN_AC_WRAP_2_and_44_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_98_nl & operator_40_24_true_AC_TRN_AC_WRAP_2_and_45_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_100_nl & operator_40_24_true_AC_TRN_AC_WRAP_2_and_46_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_102_nl & operator_40_24_true_AC_TRN_AC_WRAP_2_and_47_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_104_nl & operator_40_24_true_AC_TRN_AC_WRAP_2_and_48_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_106_nl & operator_40_24_true_AC_TRN_AC_WRAP_2_and_49_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_108_nl & operator_40_24_true_AC_TRN_AC_WRAP_2_and_50_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_110_nl & operator_40_24_true_AC_TRN_AC_WRAP_2_and_51_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_112_nl & operator_40_24_true_AC_TRN_AC_WRAP_2_and_52_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_114_nl & operator_40_24_true_AC_TRN_AC_WRAP_2_and_53_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_116_nl), 42), 43) + CONV_UNSIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_117_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_and_54_nl & operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_119_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_and_55_nl & operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_121_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_and_56_nl & operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_123_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_and_57_nl & operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_125_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_and_58_nl & operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_127_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_and_59_nl & operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_129_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_and_60_nl & operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_131_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_and_61_nl & operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_133_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_and_62_nl & operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_135_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_and_63_nl & operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_137_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_and_64_nl & operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_139_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_and_65_nl & operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_141_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_and_66_nl & operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_143_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_and_67_nl & operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_145_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_and_68_nl & operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_147_nl),
      40), 43), 43));
  RMS_NORM_LOOP_1_2_mux1h_8_nl <= MUX1HOT_v_9_5_2((attention_5_1_384_384_8_48_attn_output_2D_rsci_data_out_d(39
      DOWNTO 31)), (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd
      & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(35
      DOWNTO 31))), (input_rsci_data_out_d(39 DOWNTO 31)), STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SOFTMAX_LOOP_4_x_lpi_3_dfm_1_20_1_mx0w1(19),
      1),9)), (attention_5_1_384_384_8_48_q_proj_rsci_data_out_d(39 DOWNTO 31)),
      STD_LOGIC_VECTOR'( RMS_NORM_LOOP_1_2_or_itm & RMS_NORM_LOOP_1_2_or_1_itm &
      RMS_NORM_LOOP_1_2_or_2_itm & and_dcpl_905 & and_dcpl_922));
  not_3364_nl <= NOT and_1208_cse;
  RMS_NORM_LOOP_1_2_and_5_nl <= MUX_v_9_2_2(STD_LOGIC_VECTOR'("000000000"), RMS_NORM_LOOP_1_2_mux1h_8_nl,
      not_3364_nl);
  RMS_NORM_LOOP_1_2_mux1h_9_nl <= MUX1HOT_v_31_6_2((attention_5_1_384_384_8_48_attn_output_2D_rsci_data_out_d(30
      DOWNTO 0)), (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(30
      DOWNTO 0)), (input_rsci_data_out_d(30 DOWNTO 0)), STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(SOFTMAX_LOOP_4_x_lpi_3_dfm_1_20_1_mx0w1),31)),
      attention_abs_4_qif_acc_pmx_lpi_1_dfm, (attention_5_1_384_384_8_48_q_proj_rsci_data_out_d(30
      DOWNTO 0)), STD_LOGIC_VECTOR'( RMS_NORM_LOOP_1_2_or_itm & RMS_NORM_LOOP_1_2_or_1_itm
      & RMS_NORM_LOOP_1_2_or_2_itm & and_dcpl_905 & and_1208_cse & and_dcpl_922));
  RMS_NORM_LOOP_1_2_mux1h_10_nl <= MUX1HOT_v_35_7_2(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(attention_5_1_384_384_8_48_attn_output_2D_rsci_data_out_d(39
      DOWNTO 17)),35)), (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_8_sdt_51_0(51 DOWNTO
      17)), STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(SOFTMAX_LOOP_4_x_lpi_3_dfm_1_20_1_mx0w1(19
      DOWNTO 17)),35)), STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_SF_LOOP_3_acc_38_1_ftd,
      1),35)), STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(39
      DOWNTO 17)),35)), STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_1(4),
      1),35)), STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_12_sdt_39_0(39
      DOWNTO 17)),35)), STD_LOGIC_VECTOR'( and_dcpl_885 & and_dcpl_901 & and_dcpl_905
      & and_1208_cse & attention_max_attn_fixed_t_or_cse_1 & and_dcpl_922 & and_dcpl_924));
  RMS_NORM_LOOP_1_2_and_6_nl <= MUX_v_35_2_2(STD_LOGIC_VECTOR'("00000000000000000000000000000000000"),
      RMS_NORM_LOOP_1_2_mux1h_10_nl, RMS_NORM_LOOP_1_2_nor_seb);
  RMS_NORM_LOOP_1_2_mux1h_11_nl <= MUX1HOT_s_1_7_2((attention_5_1_384_384_8_48_attn_output_2D_rsci_data_out_d(16)),
      (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_8_sdt_51_0(16)), (SOFTMAX_LOOP_4_x_lpi_3_dfm_1_20_1_mx0w1(16)),
      (reg_SF_LOOP_3_acc_38_1_ftd_1(7)), (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(16)),
      (reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_1(4)), (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_12_sdt_39_0(16)),
      STD_LOGIC_VECTOR'( and_dcpl_885 & and_dcpl_901 & and_dcpl_905 & and_1208_cse
      & attention_max_attn_fixed_t_or_cse_1 & and_dcpl_922 & and_dcpl_924));
  RMS_NORM_LOOP_1_2_and_7_nl <= RMS_NORM_LOOP_1_2_mux1h_11_nl AND RMS_NORM_LOOP_1_2_nor_seb;
  RMS_NORM_LOOP_1_2_mux1h_12_nl <= MUX1HOT_v_3_7_2((attention_5_1_384_384_8_48_attn_output_2D_rsci_data_out_d(15
      DOWNTO 13)), (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_8_sdt_51_0(15 DOWNTO 13)),
      (SOFTMAX_LOOP_4_x_lpi_3_dfm_1_20_1_mx0w1(15 DOWNTO 13)), (reg_SF_LOOP_3_acc_38_1_ftd_1(6
      DOWNTO 4)), (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(15 DOWNTO 13)), (reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_1(3
      DOWNTO 1)), (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_12_sdt_39_0(15 DOWNTO 13)),
      STD_LOGIC_VECTOR'( and_dcpl_885 & and_dcpl_901 & and_dcpl_905 & and_1208_cse
      & attention_max_attn_fixed_t_or_cse_1 & and_dcpl_922 & and_dcpl_924));
  RMS_NORM_LOOP_1_2_and_8_nl <= MUX_v_3_2_2(STD_LOGIC_VECTOR'("000"), RMS_NORM_LOOP_1_2_mux1h_12_nl,
      RMS_NORM_LOOP_1_2_nor_seb);
  RMS_NORM_LOOP_1_2_mux1h_13_nl <= MUX1HOT_s_1_8_2((attention_5_1_384_384_8_48_attn_output_2D_rsci_data_out_d(12)),
      (RMS_NORM_LOOP_2_2_read_rom_ln_weight_rom_map_1_itm(12)), (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_8_sdt_51_0(12)),
      (SOFTMAX_LOOP_4_x_lpi_3_dfm_1_20_1_mx0w1(12)), (reg_SF_LOOP_3_acc_38_1_ftd_1(3)),
      (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(12)), (reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_1(0)),
      (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_12_sdt_39_0(12)), STD_LOGIC_VECTOR'( and_dcpl_885
      & and_dcpl_893 & and_dcpl_901 & and_dcpl_905 & and_1208_cse & attention_max_attn_fixed_t_or_cse_1
      & and_dcpl_922 & and_dcpl_924));
  RMS_NORM_LOOP_1_2_and_9_nl <= RMS_NORM_LOOP_1_2_mux1h_13_nl AND (NOT and_dcpl_898);
  RMS_NORM_LOOP_1_2_mux1h_14_nl <= MUX1HOT_v_3_9_2((attention_5_1_384_384_8_48_attn_output_2D_rsci_data_out_d(11
      DOWNTO 9)), (RMS_NORM_LOOP_2_2_read_rom_ln_weight_rom_map_1_itm(11 DOWNTO 9)),
      (RMS_NORM_LOOP_2_read_rom_ln_weight_in_rom_map_1_itm(11 DOWNTO 9)), (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_8_sdt_51_0(11
      DOWNTO 9)), (SOFTMAX_LOOP_4_x_lpi_3_dfm_1_20_1_mx0w1(11 DOWNTO 9)), (reg_SF_LOOP_3_acc_38_1_ftd_1(2
      DOWNTO 0)), (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(11 DOWNTO 9)), reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_2,
      (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_12_sdt_39_0(11 DOWNTO 9)), STD_LOGIC_VECTOR'(
      and_dcpl_885 & and_dcpl_893 & and_dcpl_898 & and_dcpl_901 & and_dcpl_905 &
      and_1208_cse & attention_max_attn_fixed_t_or_cse_1 & and_dcpl_922 & and_dcpl_924));
  RMS_NORM_LOOP_1_2_mux1h_15_nl <= MUX1HOT_v_9_9_2((attention_5_1_384_384_8_48_attn_output_2D_rsci_data_out_d(8
      DOWNTO 0)), (RMS_NORM_LOOP_2_2_read_rom_ln_weight_rom_map_1_itm(8 DOWNTO 0)),
      (RMS_NORM_LOOP_2_read_rom_ln_weight_in_rom_map_1_itm(8 DOWNTO 0)), (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_8_sdt_51_0(8
      DOWNTO 0)), (SOFTMAX_LOOP_4_x_lpi_3_dfm_1_20_1_mx0w1(8 DOWNTO 0)), reg_SF_LOOP_3_acc_38_1_ftd_2,
      (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(8 DOWNTO 0)), reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3,
      (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_12_sdt_39_0(8 DOWNTO 0)), STD_LOGIC_VECTOR'(
      and_dcpl_885 & and_dcpl_893 & and_dcpl_898 & and_dcpl_901 & and_dcpl_905 &
      and_1208_cse & attention_max_attn_fixed_t_or_cse_1 & and_dcpl_922 & and_dcpl_924));
  z_out_10 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(SIGNED'( SIGNED(RMS_NORM_LOOP_1_2_and_5_nl
      & RMS_NORM_LOOP_1_2_mux1h_9_nl) * SIGNED(RMS_NORM_LOOP_1_2_and_6_nl & RMS_NORM_LOOP_1_2_and_7_nl
      & RMS_NORM_LOOP_1_2_and_8_nl & RMS_NORM_LOOP_1_2_and_9_nl & RMS_NORM_LOOP_1_2_mux1h_14_nl
      & RMS_NORM_LOOP_1_2_mux1h_15_nl)), 68));
  RMS_NORM_LOOP_1_1_or_10_nl <= and_dcpl_940 OR and_dcpl_944;
  RMS_NORM_LOOP_1_1_mux1h_10_nl <= MUX1HOT_v_40_6_2(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(strm_in_rsci_idat_mxwt),40)),
      STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd
      & reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_1 & reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_2
      & reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3),40)), STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(attention_sqrt_1_guess_sva_29_0),40)),
      (attention_5_1_384_384_8_48_q_embed_rsci_data_out_d(39 DOWNTO 0)), (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(39
      DOWNTO 0)), (attention_5_1_384_384_8_48_k_proj_rsci_data_out_d(39 DOWNTO 0)),
      STD_LOGIC_VECTOR'( and_dcpl_932 & RMS_NORM_LOOP_1_1_or_10_nl & and_dcpl_946
      & and_dcpl_947 & and_dcpl_950 & and_dcpl_955));
  RMS_NORM_LOOP_1_1_mux1h_11_nl <= MUX1HOT_v_80_7_2(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(strm_in_rsci_idat_mxwt),80)),
      attention_exp_exp_half_mul_3_cse_sva, STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_8_psp_59_57
      & operator_40_24_true_AC_TRN_AC_WRAP_acc_8_psp_56_0),80)), STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(attention_sqrt_1_guess_sva_29_0),80)),
      STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(attention_5_1_384_384_8_48_k_proj_transposed_rsci_data_out_d(39
      DOWNTO 0)),80)), STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(attention_5_1_384_384_8_48_v_cache_upd_rsci_data_out_d(39
      DOWNTO 0)),80)), STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_1
      & reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_2 & reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3),80)),
      STD_LOGIC_VECTOR'( and_dcpl_932 & and_dcpl_940 & and_dcpl_944 & and_dcpl_946
      & and_dcpl_947 & and_dcpl_950 & and_dcpl_955));
  z_out_11 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(SIGNED'( SIGNED(RMS_NORM_LOOP_1_1_mux1h_10_nl)
      * SIGNED(RMS_NORM_LOOP_1_1_mux1h_11_nl)), 100));
  attention_abs_2_qif_mux1h_2_nl <= MUX1HOT_v_24_5_2((NOT (z_out_10(66 DOWNTO 43))),
      (NOT (RMS_NORM_LOOP_2_2_mul_itm_71_32_1(38 DOWNTO 15))), (NOT reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1),
      (NOT (input_rsci_data_out_d(38 DOWNTO 15))), (NOT (attention_5_1_384_384_8_48_attn_output_2D_rsci_data_out_d(38
      DOWNTO 15))), STD_LOGIC_VECTOR'( and_dcpl_963 & and_dcpl_970 & and_dcpl_973
      & and_dcpl_976 & and_dcpl_978));
  attention_abs_2_qif_mux1h_3_nl <= MUX1HOT_v_15_5_2((NOT (z_out_10(42 DOWNTO 28))),
      (NOT (RMS_NORM_LOOP_2_2_mul_itm_71_32_1(14 DOWNTO 0))), (NOT reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_2),
      (NOT (input_rsci_data_out_d(14 DOWNTO 0))), (NOT (attention_5_1_384_384_8_48_attn_output_2D_rsci_data_out_d(14
      DOWNTO 0))), STD_LOGIC_VECTOR'( and_dcpl_963 & and_dcpl_970 & and_dcpl_973
      & and_dcpl_976 & and_dcpl_978));
  z_out_12 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(attention_abs_2_qif_mux1h_2_nl
      & attention_abs_2_qif_mux1h_3_nl), 39), 40) + UNSIGNED'( "0000000000000000000000000000000000000001"),
      40));
  CACHE_UPDATE_LOOP_3_1_CACHE_UPDATE_LOOP_3_1_mux_3_nl <= MUX_v_3_2_2(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0,
      (reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd & reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd_1),
      CACHE_UPDATE_LOOP_3_1_or_6_cse_1);
  CACHE_UPDATE_LOOP_3_1_or_7_nl <= (NOT(and_1298_cse OR and_1304_cse OR and_1305_cse
      OR and_1315_cse OR and_1318_cse)) OR and_1312_cse;
  CACHE_UPDATE_LOOP_3_1_mux1h_9_nl <= MUX1HOT_s_1_4_2((z_out_32(4)), (TRANSPOSE_LAST_TWO_DIMS_LOOP_3_acc_17_sdt_mx0w7(8)),
      (reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd(1)), (z_out_21(2)), STD_LOGIC_VECTOR'(
      and_1298_cse & and_1304_cse & and_1305_cse & and_1315_cse));
  CACHE_UPDATE_LOOP_3_1_or_8_nl <= CACHE_UPDATE_LOOP_3_1_mux1h_9_nl OR and_1312_cse
      OR and_1318_cse;
  CACHE_UPDATE_LOOP_3_1_mux1h_10_nl <= MUX1HOT_s_1_5_2((z_out_32(3)), (TRANSPOSE_LAST_TWO_DIMS_LOOP_3_acc_17_sdt_mx0w7(7)),
      (reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd(0)), (CACHE_UPDATE_LOOP_3_k_5_0_sva_5_4(1)),
      (z_out_21(1)), STD_LOGIC_VECTOR'( and_1298_cse & and_1304_cse & and_1305_cse
      & and_1312_cse & and_1315_cse));
  CACHE_UPDATE_LOOP_3_1_or_9_nl <= CACHE_UPDATE_LOOP_3_1_mux1h_10_nl OR and_1318_cse;
  acc_12_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CACHE_UPDATE_LOOP_3_1_CACHE_UPDATE_LOOP_3_1_mux_3_nl
      & CACHE_UPDATE_LOOP_3_1_or_7_nl), 4), 5) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'(
      CACHE_UPDATE_LOOP_3_1_or_8_nl & CACHE_UPDATE_LOOP_3_1_or_9_nl & '1'), 3), 5),
      5));
  z_out_14 <= acc_12_nl(4 DOWNTO 1);
  GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mux_6_nl <= MUX_v_3_2_2(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0,
      (reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd & reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd_1),
      and_1333_cse);
  GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_and_2_nl <= (CACHE_UPDATE_LOOP_3_k_5_0_sva_5_4(1))
      AND (NOT(and_dcpl_1029 OR and_1338_cse));
  GEMM_3D_FLOAT_LOOP_4_1_mux1h_30_nl <= MUX1HOT_s_1_3_2((CACHE_UPDATE_LOOP_3_k_5_0_sva_5_4(1)),
      (CACHE_UPDATE_LOOP_3_k_5_0_sva_5_4(0)), (z_out_32(4)), STD_LOGIC_VECTOR'( and_dcpl_1029
      & and_1333_cse & and_1338_cse));
  z_out_15 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mux_6_nl),
      4) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'( GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_and_2_nl
      & GEMM_3D_FLOAT_LOOP_4_1_mux1h_30_nl), 2), 4), 4));
  CACHE_UPDATE_LOOP_3_or_4_nl <= and_1358_cse OR and_1304_cse;
  CACHE_UPDATE_LOOP_3_mux1h_7_nl <= MUX1HOT_v_3_3_2((reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd
      & reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd_1), GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0,
      STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(z_out_2(21), 1),3)), STD_LOGIC_VECTOR'(
      and_1333_cse & CACHE_UPDATE_LOOP_3_or_4_nl & and_1360_cse));
  CACHE_UPDATE_LOOP_3_or_3_nl <= MUX_v_3_2_2(CACHE_UPDATE_LOOP_3_mux1h_7_nl, STD_LOGIC_VECTOR'("111"),
      and_1318_cse);
  CACHE_UPDATE_LOOP_3_mux1h_8_nl <= MUX1HOT_v_2_5_2((z_out_22(4 DOWNTO 3)), reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd,
      (GEMM_3D_FLOAT_LOOP_4_1_acc_36_sdt_mx0w5(5 DOWNTO 4)), (z_out_2(19 DOWNTO 18)),
      (z_out_32(4 DOWNTO 3)), STD_LOGIC_VECTOR'( and_1333_cse & and_1318_cse & and_1358_cse
      & and_1360_cse & and_1304_cse));
  z_out_16 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CACHE_UPDATE_LOOP_3_or_3_nl),
      4) + CONV_UNSIGNED(UNSIGNED(CACHE_UPDATE_LOOP_3_mux1h_8_nl), 4), 4));
  GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_or_2_nl <= (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(2))
      OR and_dcpl_1080 OR and_dcpl_1084 OR and_1388_cse;
  GEMM_3D_FLOAT_LOOP_4_or_25_nl <= and_dcpl_1075 OR and_1312_cse;
  GEMM_3D_FLOAT_LOOP_4_mux1h_42_nl <= MUX1HOT_v_2_4_2((GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(1
      DOWNTO 0)), (z_out_32(8 DOWNTO 7)), (z_out_32(2 DOWNTO 1)), (attention_sqrt_for_i_4_0_sva_1_mx0w0(4
      DOWNTO 3)), STD_LOGIC_VECTOR'( GEMM_3D_FLOAT_LOOP_4_or_25_nl & and_dcpl_1080
      & and_dcpl_1084 & and_1388_cse));
  or_1577_nl <= and_1388_cse OR and_dcpl_1084 OR and_dcpl_1080 OR and_dcpl_1075;
  mux_1087_nl <= MUX_v_2_2_2((z_out_27(2 DOWNTO 1)), STD_LOGIC_VECTOR'( "01"), or_1577_nl);
  z_out_17 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_or_2_nl
      & GEMM_3D_FLOAT_LOOP_4_mux1h_42_nl), 3), 4) + CONV_UNSIGNED(UNSIGNED(mux_1087_nl),
      4), 4));
  operator_40_24_true_AC_TRN_AC_WRAP_or_22_nl <= and_dcpl_1097 OR and_dcpl_1103 OR
      and_dcpl_1105 OR and_dcpl_1112;
  operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_mux_4_nl
      <= MUX_v_3_2_2(z_out_19, GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0, operator_40_24_true_AC_TRN_AC_WRAP_or_22_nl);
  operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_nor_2_nl
      <= NOT((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(0))
      OR and_dcpl_1097 OR and_dcpl_1103 OR and_dcpl_1105 OR and_dcpl_1112);
  operator_40_24_true_AC_TRN_AC_WRAP_acc_104_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(9),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(10)),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(31),
      1), 1), 2), 2));
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_33_nl <= MUX1HOT_v_2_5_2(STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_104_nl),
      2)), CACHE_UPDATE_LOOP_3_k_5_0_sva_5_4, reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd,
      reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd, (attention_sqrt_1_for_i_4_0_sva_2_0(2
      DOWNTO 1)), STD_LOGIC_VECTOR'( nor_721_cse & and_dcpl_1097 & and_dcpl_1103
      & and_dcpl_1105 & and_dcpl_1112));
  acc_16_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_mux_4_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_nor_2_nl),
      4), 5) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_mux1h_33_nl
      & '1'), 3), 5), 5));
  z_out_18 <= acc_16_nl(4 DOWNTO 1);
  GEMM_3D_FLOAT_LOOP_4_mux1h_43_nl <= MUX1HOT_s_1_3_2((LINEAR_FORWARD_NO_MUL_LOOP_5_3_l_2_0_lpi_3_dfm_1_0_1(1)),
      (operator_40_24_true_AC_TRN_AC_WRAP_acc_56_itm(1)), (LINEAR_FORWARD_NO_MUL_LOOP_5_2_l_2_0_lpi_3_dfm_1_0_1(1)),
      STD_LOGIC_VECTOR'( and_1425_cse & nor_721_cse & and_dcpl_1136));
  GEMM_3D_FLOAT_LOOP_4_or_26_nl <= GEMM_3D_FLOAT_LOOP_4_mux1h_43_nl OR and_1417_cse;
  GEMM_3D_FLOAT_LOOP_4_mux1h_44_nl <= MUX1HOT_s_1_4_2((reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd(1)),
      (LINEAR_FORWARD_NO_MUL_LOOP_5_3_l_2_0_lpi_3_dfm_1_0_1(0)), (operator_40_24_true_AC_TRN_AC_WRAP_acc_56_itm(0)),
      (LINEAR_FORWARD_NO_MUL_LOOP_5_2_l_2_0_lpi_3_dfm_1_0_1(0)), STD_LOGIC_VECTOR'(
      and_1417_cse & and_1425_cse & nor_721_cse & and_dcpl_1136));
  GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_nor_1_nl <= NOT((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(32))
      OR and_1417_cse OR and_1425_cse OR and_dcpl_1136);
  GEMM_3D_FLOAT_LOOP_4_or_27_nl <= (NOT (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(8)))
      OR and_1417_cse OR and_1425_cse OR and_dcpl_1136;
  acc_17_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'(
      GEMM_3D_FLOAT_LOOP_4_or_26_nl & GEMM_3D_FLOAT_LOOP_4_mux1h_44_nl & GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_nor_1_nl),
      3), 4) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'( GEMM_3D_FLOAT_LOOP_4_or_27_nl
      & '1'), 2), 4), 4));
  z_out_19 <= acc_17_nl(3 DOWNTO 1);
  RMS_NORM_LOOP_1_1_nor_5_nl <= NOT(and_1441_cse OR and_1447_cse OR and_dcpl_800);
  RMS_NORM_LOOP_1_1_RMS_NORM_LOOP_1_1_and_5_nl <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"),
      (reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(8 DOWNTO 7)), RMS_NORM_LOOP_1_1_nor_5_nl);
  RMS_NORM_LOOP_1_1_mux1h_12_nl <= MUX1HOT_v_4_3_2((reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(6
      DOWNTO 3)), (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(11 DOWNTO
      8)), STD_LOGIC_VECTOR'( "1011"), STD_LOGIC_VECTOR'( not_tmp_754 & and_1441_cse
      & and_1447_cse));
  not_3368_nl <= NOT and_dcpl_800;
  RMS_NORM_LOOP_1_1_and_2_nl <= MUX_v_4_2_2(STD_LOGIC_VECTOR'("0000"), RMS_NORM_LOOP_1_1_mux1h_12_nl,
      not_3368_nl);
  RMS_NORM_LOOP_1_1_mux_6_nl <= MUX_s_1_2_2((reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(2)),
      (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(36)), and_1441_cse);
  RMS_NORM_LOOP_1_1_RMS_NORM_LOOP_1_1_or_1_nl <= (RMS_NORM_LOOP_1_1_mux_6_nl AND
      (NOT and_dcpl_800)) OR and_1447_cse;
  RMS_NORM_LOOP_1_1_mux1h_13_nl <= MUX1HOT_v_2_4_2((reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(1
      DOWNTO 0)), (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(26 DOWNTO
      25)), reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd, LINEAR_FORWARD_NO_MUL_LOOP_5_1_l_2_0_lpi_3_dfm_1_0_1,
      STD_LOGIC_VECTOR'( not_tmp_754 & and_1441_cse & and_1447_cse & and_dcpl_800));
  RMS_NORM_LOOP_1_1_or_11_nl <= (NOT(not_tmp_754 OR and_1441_cse OR and_dcpl_800))
      OR and_1447_cse;
  RMS_NORM_LOOP_1_1_mux_7_nl <= MUX_v_2_2_2((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(7
      DOWNTO 6)), (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(2 DOWNTO 1)), and_1447_cse);
  RMS_NORM_LOOP_1_1_RMS_NORM_LOOP_1_1_and_6_nl <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"),
      RMS_NORM_LOOP_1_1_mux_7_nl, RMS_NORM_LOOP_1_1_nor_1_cse);
  RMS_NORM_LOOP_1_1_mux_8_nl <= MUX_s_1_2_2((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(2)),
      (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(0)), and_1447_cse);
  RMS_NORM_LOOP_1_1_RMS_NORM_LOOP_1_1_and_7_nl <= RMS_NORM_LOOP_1_1_mux_8_nl AND
      RMS_NORM_LOOP_1_1_nor_1_cse;
  RMS_NORM_LOOP_1_1_nor_7_nl <= NOT(not_tmp_754 OR and_dcpl_800 OR and_1447_cse);
  RMS_NORM_LOOP_1_1_RMS_NORM_LOOP_1_1_and_8_nl <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"),
      (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(15 DOWNTO 14)), RMS_NORM_LOOP_1_1_nor_7_nl);
  RMS_NORM_LOOP_1_1_mux_9_nl <= MUX_v_2_2_2(STD_LOGIC_VECTOR'( "01"), STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(16),
      1),2)), and_1441_cse);
  not_3370_nl <= NOT and_1447_cse;
  RMS_NORM_LOOP_1_1_RMS_NORM_LOOP_1_1_and_9_nl <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"),
      RMS_NORM_LOOP_1_1_mux_9_nl, not_3370_nl);
  acc_18_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(RMS_NORM_LOOP_1_1_RMS_NORM_LOOP_1_1_and_5_nl
      & RMS_NORM_LOOP_1_1_and_2_nl & RMS_NORM_LOOP_1_1_RMS_NORM_LOOP_1_1_or_1_nl
      & RMS_NORM_LOOP_1_1_mux1h_13_nl & RMS_NORM_LOOP_1_1_or_11_nl) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(RMS_NORM_LOOP_1_1_RMS_NORM_LOOP_1_1_and_6_nl
      & RMS_NORM_LOOP_1_1_RMS_NORM_LOOP_1_1_and_7_nl & RMS_NORM_LOOP_1_1_RMS_NORM_LOOP_1_1_and_8_nl
      & RMS_NORM_LOOP_1_1_RMS_NORM_LOOP_1_1_and_9_nl & '1'), 8), 10), 10));
  z_out_20 <= acc_18_nl(9 DOWNTO 1);
  GEMM_3D_FLOAT_LOOP_4_mux1h_45_nl <= MUX1HOT_s_1_4_2((reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd(1)),
      (NOT (z_out_2(17))), (attention_sqrt_1_for_i_4_0_sva_4_3(1)), (LINEAR_FORWARD_NO_MUL_LOOP_5_l_2_0_lpi_3_dfm_1_0_1(1)),
      STD_LOGIC_VECTOR'( and_1338_cse & and_1441_cse & and_1388_cse & and_dcpl_1178));
  GEMM_3D_FLOAT_LOOP_4_mux1h_46_nl <= MUX1HOT_s_1_4_2((reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd(0)),
      (NOT (z_out_2(21))), (attention_sqrt_1_for_i_4_0_sva_4_3(0)), (LINEAR_FORWARD_NO_MUL_LOOP_5_l_2_0_lpi_3_dfm_1_0_1(0)),
      STD_LOGIC_VECTOR'( and_1338_cse & and_1441_cse & and_1388_cse & and_dcpl_1178));
  GEMM_3D_FLOAT_LOOP_4_or_28_nl <= (NOT((z_out_2(20)) OR and_dcpl_1178)) OR and_1338_cse
      OR and_1388_cse;
  z_out_21 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'(
      GEMM_3D_FLOAT_LOOP_4_mux1h_45_nl & GEMM_3D_FLOAT_LOOP_4_mux1h_46_nl), 2), 3)
      + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'( GEMM_3D_FLOAT_LOOP_4_or_28_nl & '1'),
      2), 3), 3));
  operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_20_nl
      <= (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(13))
      AND (NOT(and_1338_cse OR and_dcpl_1201 OR and_dcpl_1206 OR and_dcpl_1208));
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_148_nl <= MUX1HOT_s_1_3_2((GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(2)),
      (APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(3)), (z_out_25(3)), STD_LOGIC_VECTOR'(
      and_1338_cse & and_dcpl_1201 & and_dcpl_1206));
  operator_40_24_true_AC_TRN_AC_WRAP_2_or_49_nl <= (operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_148_nl
      AND operator_40_24_true_AC_TRN_AC_WRAP_2_nor_3_cse) OR and_dcpl_1208;
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_149_nl <= MUX1HOT_s_1_4_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(13)),
      (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(1)), (APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(2)),
      (z_out_25(2)), STD_LOGIC_VECTOR'( operator_40_24_true_AC_TRN_AC_WRAP_2_or_45_cse
      & and_1338_cse & and_dcpl_1201 & and_dcpl_1206));
  operator_40_24_true_AC_TRN_AC_WRAP_2_or_50_nl <= operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_149_nl
      OR and_dcpl_1208;
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_150_nl <= MUX1HOT_s_1_3_2((GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(0)),
      (APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(1)), (z_out_25(1)), STD_LOGIC_VECTOR'(
      and_1338_cse & and_dcpl_1201 & and_dcpl_1206));
  operator_40_24_true_AC_TRN_AC_WRAP_2_or_51_nl <= (operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_150_nl
      AND operator_40_24_true_AC_TRN_AC_WRAP_2_nor_3_cse) OR and_dcpl_1208;
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_151_nl <= MUX1HOT_s_1_4_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(13)),
      (APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(0)), (z_out_25(0)), (reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd(1)),
      STD_LOGIC_VECTOR'( operator_40_24_true_AC_TRN_AC_WRAP_2_or_45_cse & and_dcpl_1201
      & and_dcpl_1206 & and_dcpl_1208));
  operator_40_24_true_AC_TRN_AC_WRAP_2_and_71_nl <= operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_151_nl
      AND (NOT and_1338_cse);
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux_22_nl <= MUX_s_1_2_2((reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_1(1)),
      (operator_40_24_true_AC_TRN_AC_WRAP_acc_psp_sva_1(3)), and_1076_cse);
  operator_40_24_true_AC_TRN_AC_WRAP_2_or_52_nl <= (operator_40_24_true_AC_TRN_AC_WRAP_2_mux_22_nl
      AND (NOT(and_dcpl_1201 OR and_dcpl_1206 OR and_dcpl_1208))) OR and_1338_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux_23_nl <= MUX_v_2_2_2((APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(3
      DOWNTO 2)), (operator_40_24_true_AC_TRN_AC_WRAP_acc_25_mx0w12(3 DOWNTO 2)),
      and_1076_cse);
  operator_40_24_true_AC_TRN_AC_WRAP_2_nor_31_nl <= NOT(and_1338_cse OR and_dcpl_1206);
  operator_40_24_true_AC_TRN_AC_WRAP_2_and_73_nl <= operator_40_24_true_AC_TRN_AC_WRAP_2_mux_23_nl
      AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_nor_31_nl,
      1),2)) AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT operator_40_24_true_AC_TRN_AC_WRAP_2_or_18_itm,
      1),2));
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_152_nl <= MUX1HOT_s_1_3_2((APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(1)),
      (operator_40_24_true_AC_TRN_AC_WRAP_acc_25_mx0w12(1)), (z_out_27(2)), STD_LOGIC_VECTOR'(
      and_dcpl_1186 & and_1076_cse & and_dcpl_1206));
  operator_40_24_true_AC_TRN_AC_WRAP_2_and_74_nl <= operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_152_nl
      AND (NOT and_1338_cse) AND (NOT operator_40_24_true_AC_TRN_AC_WRAP_2_or_18_itm);
  operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_153_nl <= MUX1HOT_s_1_4_2((APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(0)),
      (operator_40_24_true_AC_TRN_AC_WRAP_acc_25_mx0w12(0)), (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(2)),
      (z_out_27(1)), STD_LOGIC_VECTOR'( and_dcpl_1186 & and_1076_cse & and_1338_cse
      & and_dcpl_1206));
  operator_40_24_true_AC_TRN_AC_WRAP_2_or_53_nl <= operator_40_24_true_AC_TRN_AC_WRAP_2_mux1h_153_nl
      OR operator_40_24_true_AC_TRN_AC_WRAP_2_or_18_itm;
  acc_20_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'(
      operator_40_24_true_AC_TRN_AC_WRAP_2_operator_40_24_true_AC_TRN_AC_WRAP_2_and_20_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_or_49_nl & operator_40_24_true_AC_TRN_AC_WRAP_2_or_50_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_or_51_nl & operator_40_24_true_AC_TRN_AC_WRAP_2_and_71_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_or_52_nl), 6), 7) + CONV_UNSIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_and_73_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_2_and_74_nl & operator_40_24_true_AC_TRN_AC_WRAP_2_or_53_nl
      & '1'), 5), 7), 7));
  z_out_22 <= acc_20_nl(6 DOWNTO 1);
  mux_1088_nl <= MUX_v_2_2_2((z_out_15(3 DOWNTO 2)), (z_out_14(3 DOWNTO 2)), CACHE_UPDATE_LOOP_3_1_or_6_cse_1);
  APPLY_ROTARY_POS_EMB_LOOP_3_or_12_nl <= mux_1088_nl OR STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(and_1312_cse,
      1),2)) OR STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(and_1338_cse, 1),2));
  APPLY_ROTARY_POS_EMB_LOOP_3_mux1h_24_nl <= MUX1HOT_s_1_3_2((z_out_14(1)), (CACHE_UPDATE_LOOP_3_k_5_0_sva_5_4(1)),
      (z_out_15(1)), STD_LOGIC_VECTOR'( CACHE_UPDATE_LOOP_3_1_or_6_cse_1 & and_1312_cse
      & and_1298_cse));
  APPLY_ROTARY_POS_EMB_LOOP_3_or_13_nl <= APPLY_ROTARY_POS_EMB_LOOP_3_mux1h_24_nl
      OR and_1338_cse;
  APPLY_ROTARY_POS_EMB_LOOP_3_or_14_nl <= and_1338_cse OR and_1312_cse;
  APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_5_nl <= MUX_v_3_2_2((reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd
      & reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd_1), GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0,
      APPLY_ROTARY_POS_EMB_LOOP_3_or_14_nl);
  z_out_23 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(APPLY_ROTARY_POS_EMB_LOOP_3_or_12_nl
      & APPLY_ROTARY_POS_EMB_LOOP_3_or_13_nl), 3), 4) + CONV_UNSIGNED(UNSIGNED(APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_5_nl),
      4), 4));
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_15_nl <= MUX1HOT_v_2_4_2((GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(2
      DOWNTO 1)), (z_out_28(2 DOWNTO 1)), (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(13
      DOWNTO 12)), STD_LOGIC_VECTOR'( "10"), STD_LOGIC_VECTOR'( TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_60_cse
      & nor_721_cse & and_dcpl_1249 & and_dcpl_1257));
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_16_nl <= MUX1HOT_s_1_3_2((GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(0)),
      (z_out_28(0)), (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(17)),
      STD_LOGIC_VECTOR'( TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_60_cse & nor_721_cse &
      and_dcpl_1249));
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_61_nl <= TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_16_nl
      OR and_dcpl_1257;
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_and_4_nl <= (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(1))
      AND (NOT(and_dcpl_1240 OR and_dcpl_1249 OR and_dcpl_1254 OR and_dcpl_1257));
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_17_nl <= MUX1HOT_v_2_5_2(reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd,
      (operator_40_24_true_AC_TRN_AC_WRAP_acc_82_itm(2 DOWNTO 1)), (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(24
      DOWNTO 23)), reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd, (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(2
      DOWNTO 1)), STD_LOGIC_VECTOR'( and_dcpl_1240 & nor_721_cse & and_dcpl_1249
      & and_dcpl_1254 & and_dcpl_1257));
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_18_nl <= MUX1HOT_s_1_5_2((reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd_1(1)),
      (operator_40_24_true_AC_TRN_AC_WRAP_acc_82_itm(0)), (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(2)),
      reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1, (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(0)),
      STD_LOGIC_VECTOR'( and_dcpl_1240 & nor_721_cse & and_dcpl_1249 & and_dcpl_1254
      & and_dcpl_1257));
  acc_22_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_15_nl
      & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_61_nl & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_and_4_nl),
      4), 5) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_17_nl
      & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_18_nl & '1'), 4), 5), 5));
  z_out_24 <= acc_22_nl(4 DOWNTO 1);
  SF_LOOP_3_mux1h_31_nl <= MUX1HOT_s_1_4_2((NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(17))),
      reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd, (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(2)),
      (GEMM_3D_FLOAT_LOOP_4_acc_185_sdt_mx0w2(6)), STD_LOGIC_VECTOR'( and_1562_cse
      & and_1333_cse & and_1304_cse & and_1318_cse));
  SF_LOOP_3_mux1h_32_nl <= MUX1HOT_v_2_4_2((NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(38
      DOWNTO 37))), reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd_1, (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(1
      DOWNTO 0)), STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_acc_185_sdt_mx0w2(4),
      1),2)), STD_LOGIC_VECTOR'( and_1562_cse & and_1333_cse & and_1304_cse & and_1318_cse));
  SF_LOOP_3_or_15_nl <= (NOT(and_1333_cse OR and_1304_cse OR and_1318_cse)) OR and_1562_cse;
  SF_LOOP_3_mux1h_33_nl <= MUX1HOT_s_1_3_2((NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(19))),
      (attention_sqrt_1_for_i_4_0_sva_2_0(2)), (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(2)),
      STD_LOGIC_VECTOR'( and_1562_cse & SF_LOOP_3_or_9_cse & and_1318_cse));
  SF_LOOP_3_mux1h_34_nl <= MUX1HOT_s_1_3_2((NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(28))),
      (attention_sqrt_1_for_i_4_0_sva_2_0(1)), (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(1)),
      STD_LOGIC_VECTOR'( and_1562_cse & SF_LOOP_3_or_9_cse & and_1318_cse));
  SF_LOOP_3_mux1h_35_nl <= MUX1HOT_s_1_3_2((NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(13))),
      (attention_sqrt_1_for_i_4_0_sva_2_0(0)), (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(0)),
      STD_LOGIC_VECTOR'( and_1562_cse & SF_LOOP_3_or_9_cse & and_1318_cse));
  acc_23_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_mux1h_31_nl
      & SF_LOOP_3_mux1h_32_nl & SF_LOOP_3_or_15_nl), 4), 5) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'(
      SF_LOOP_3_mux1h_33_nl & SF_LOOP_3_mux1h_34_nl & SF_LOOP_3_mux1h_35_nl & '1'),
      4), 5), 5));
  z_out_25 <= acc_23_nl(4 DOWNTO 1);
  SF_LOOP_3_SF_LOOP_3_SF_LOOP_3_and_2_nl <= (z_out_18(3)) AND SF_LOOP_3_or_11_cse;
  SF_LOOP_3_SF_LOOP_3_mux_6_nl <= MUX_v_2_2_2((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(7
      DOWNTO 6)), (z_out_18(2 DOWNTO 1)), SF_LOOP_3_or_11_cse);
  SF_LOOP_3_and_10_nl <= (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(35))
      AND (NOT(and_dcpl_1291 OR and_dcpl_1295 OR and_dcpl_1301 OR and_dcpl_1306));
  SF_LOOP_3_SF_LOOP_3_SF_LOOP_3_and_3_nl <= (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(2))
      AND SF_LOOP_3_or_11_cse;
  SF_LOOP_3_SF_LOOP_3_mux_7_nl <= MUX_v_2_2_2((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(4
      DOWNTO 3)), (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(1 DOWNTO 0)), SF_LOOP_3_or_11_cse);
  acc_24_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_SF_LOOP_3_SF_LOOP_3_and_2_nl
      & SF_LOOP_3_SF_LOOP_3_mux_6_nl & SF_LOOP_3_and_10_nl), 4), 5) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_SF_LOOP_3_SF_LOOP_3_and_3_nl
      & SF_LOOP_3_SF_LOOP_3_mux_7_nl & '1'), 4), 5), 5));
  z_out_26 <= acc_24_nl(4 DOWNTO 1);
  SF_LOOP_3_SF_LOOP_3_and_14_nl <= (attention_sqrt_1_for_i_4_0_sva_2_0(2)) AND SF_LOOP_3_or_4_itm
      AND (NOT SF_LOOP_3_or_13_itm);
  SF_LOOP_3_mux_86_nl <= MUX_v_2_2_2((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(1
      DOWNTO 0)), (attention_sqrt_1_for_i_4_0_sva_2_0(1 DOWNTO 0)), SF_LOOP_3_or_4_itm);
  SF_LOOP_3_SF_LOOP_3_or_43_nl <= MUX_v_2_2_2(SF_LOOP_3_mux_86_nl, STD_LOGIC_VECTOR'("11"),
      SF_LOOP_3_or_13_itm);
  SF_LOOP_3_or_16_nl <= and_1333_cse OR and_1358_cse;
  SF_LOOP_3_mux1h_36_nl <= MUX1HOT_v_2_5_2((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(4
      DOWNTO 3)), STD_LOGIC_VECTOR'( "01"), CACHE_UPDATE_LOOP_3_k_5_0_sva_5_4, (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(2
      DOWNTO 1)), reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd, STD_LOGIC_VECTOR'(
      and_1360_cse & nor_779_cse & SF_LOOP_3_or_16_nl & and_1318_cse & and_1304_cse));
  z_out_27 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_SF_LOOP_3_and_14_nl
      & SF_LOOP_3_SF_LOOP_3_or_43_nl) + CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_mux1h_36_nl),
      3), 3));
  operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_25_nl
      <= (reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd(1)) AND operator_40_24_true_AC_TRN_AC_WRAP_or_itm;
  operator_40_24_true_AC_TRN_AC_WRAP_acc_105_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(15),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(16)),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(28)),
      1), 1), 2), 2));
  operator_40_24_true_AC_TRN_AC_WRAP_mux_136_nl <= MUX_v_2_2_2(STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_105_nl),
      2)), STD_LOGIC_VECTOR'( (reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd(0)) & reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1),
      operator_40_24_true_AC_TRN_AC_WRAP_or_itm);
  operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_nor_3_nl
      <= NOT((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(34))
      OR and_dcpl_1337 OR and_dcpl_1344);
  operator_40_24_true_AC_TRN_AC_WRAP_acc_106_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(17),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(18)),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(27),
      1), 1), 2), 2));
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_34_nl <= MUX1HOT_v_2_3_2(STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_106_nl),
      2)), STD_LOGIC_VECTOR'( "01"), reg_APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_1_ftd,
      STD_LOGIC_VECTOR'( nor_721_cse & and_dcpl_1337 & and_dcpl_1344));
  acc_26_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_25_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_mux_136_nl & operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_nor_3_nl)
      + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_mux1h_34_nl
      & '1'), 3), 4), 4));
  z_out_28 <= acc_26_nl(3 DOWNTO 1);
  for_for_nor_5_nl <= NOT(and_1562_cse OR and_1447_cse);
  for_for_for_for_and_6_nl <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"), (reg_SF_LOOP_3_acc_38_1_ftd_2(8
      DOWNTO 7)), for_for_nor_5_nl);
  for_for_mux1h_10_nl <= MUX1HOT_v_2_3_2((reg_SF_LOOP_3_acc_38_1_ftd_2(6 DOWNTO 5)),
      (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(21 DOWNTO 20)), (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(2
      DOWNTO 1)), STD_LOGIC_VECTOR'( and_dcpl_1346 & and_1562_cse & and_1447_cse));
  for_for_mux_5_nl <= MUX_s_1_2_2((reg_SF_LOOP_3_acc_38_1_ftd_2(4)), (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(0)),
      and_1447_cse);
  for_for_for_for_and_7_nl <= for_for_mux_5_nl AND (NOT and_1562_cse);
  for_for_mux_6_nl <= MUX_v_2_2_2((reg_SF_LOOP_3_acc_38_1_ftd_2(3 DOWNTO 2)), (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(26
      DOWNTO 25)), and_1562_cse);
  not_3376_nl <= NOT and_1447_cse;
  for_for_for_for_and_8_nl <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"), for_for_mux_6_nl,
      not_3376_nl);
  for_for_mux_7_nl <= MUX_v_2_2_2((reg_SF_LOOP_3_acc_38_1_ftd_2(1 DOWNTO 0)), STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(19),
      1),2)), and_1562_cse);
  not_3377_nl <= NOT and_1447_cse;
  for_for_for_for_and_9_nl <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"), for_for_mux_7_nl,
      not_3377_nl);
  for_for_or_8_nl <= for_for_nor_3_cse OR and_1447_cse;
  for_for_mux_8_nl <= MUX_v_4_2_2(STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(18),
      1),4)), STD_LOGIC_VECTOR'( "1011"), and_1447_cse);
  not_3378_nl <= NOT and_dcpl_1346;
  for_for_for_for_and_10_nl <= MUX_v_4_2_2(STD_LOGIC_VECTOR'("0000"), for_for_mux_8_nl,
      not_3378_nl);
  for_for_for_for_and_11_nl <= (reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd(1)) AND for_for_nor_3_cse;
  for_for_mux_9_nl <= MUX_s_1_2_2((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(18)),
      (reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd(0)), and_1447_cse);
  for_for_for_for_or_1_nl <= for_for_mux_9_nl OR and_dcpl_1346;
  acc_27_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(for_for_for_for_and_6_nl &
      for_for_mux1h_10_nl & for_for_for_for_and_7_nl & for_for_for_for_and_8_nl &
      for_for_for_for_and_9_nl & for_for_or_8_nl) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(for_for_for_for_and_10_nl
      & for_for_for_for_and_11_nl & for_for_for_for_or_1_nl & '1'), 7), 10), 10));
  z_out_29 <= acc_27_nl(9 DOWNTO 1);
  nor_913_nl <= NOT((NOT (fsm_output(0))) OR (fsm_output(1)) OR (fsm_output(3)) OR
      (fsm_output(5)) OR (fsm_output(6)));
  nor_914_nl <= NOT((NOT (fsm_output(1))) OR (NOT (fsm_output(3))) OR (fsm_output(5))
      OR (fsm_output(6)));
  nor_915_nl <= NOT((fsm_output(1)) OR nand_258_cse);
  mux_1091_nl <= MUX_s_1_2_2(nor_914_nl, nor_915_nl, fsm_output(0));
  mux_1090_nl <= MUX_s_1_2_2(nor_913_nl, mux_1091_nl, fsm_output(2));
  and_2309_nl <= mux_1090_nl AND (NOT (fsm_output(8))) AND (fsm_output(7)) AND (NOT
      (fsm_output(4)));
  LINEAR_FORWARD_NO_MUL_LOOP_3_2_mux1h_2_nl <= MUX1HOT_v_2_3_2((z_out_28(2 DOWNTO
      1)), (CACHE_UPDATE_LOOP_3_k_5_0_sva_1_mx0w8(5 DOWNTO 4)), (z_out_29(8 DOWNTO
      7)), STD_LOGIC_VECTOR'( and_dcpl_1337 & and_2309_nl & and_dcpl_1346));
  LINEAR_FORWARD_NO_MUL_LOOP_3_2_acc_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED('1'
      & LINEAR_FORWARD_NO_MUL_LOOP_3_2_mux1h_2_nl) + UNSIGNED'( "001"), 3));
  z_out_30_2 <= LINEAR_FORWARD_NO_MUL_LOOP_3_2_acc_nl(2);
  operator_40_24_true_AC_TRN_AC_WRAP_mux_5_nl <= MUX_v_2_2_2((SOFTMAX_LOOP_4_x_lpi_3_dfm_1_20_1_mx0w1(19
      DOWNTO 18)), (GEMM_3D_FLOAT_LOOP_4_1_mul_sdt_1_sva_mx0w5(4 DOWNTO 3)), and_1675_ssc);
  operator_40_24_true_AC_TRN_AC_WRAP_or_3_nl <= and_1676_ssc OR not_tmp_754 OR nor_779_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_or_1_nl <=
      MUX_v_2_2_2(operator_40_24_true_AC_TRN_AC_WRAP_mux_5_nl, STD_LOGIC_VECTOR'("11"),
      operator_40_24_true_AC_TRN_AC_WRAP_or_3_nl);
  and_2310_nl <= and_dcpl_19 AND CONV_SL_1_1(fsm_output(6 DOWNTO 0)=STD_LOGIC_VECTOR'("1010110"));
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_13_nl <= MUX1HOT_v_2_5_2((SOFTMAX_LOOP_4_x_lpi_3_dfm_1_20_1_mx0w1(17
      DOWNTO 16)), (GEMM_3D_FLOAT_LOOP_4_1_mul_sdt_1_sva_mx0w5(2 DOWNTO 1)), (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_3(5
      DOWNTO 4)), (z_out_20(8 DOWNTO 7)), (z_out_27(2 DOWNTO 1)), STD_LOGIC_VECTOR'(
      and_2310_nl & and_1675_ssc & and_1676_ssc & not_tmp_754 & nor_779_cse));
  z_out_31 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_or_1_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_mux1h_13_nl), 4), 5) + UNSIGNED'( "00001"),
      5));
  RMS_NORM_LOOP_2_mux1h_5_nl <= MUX1HOT_v_5_3_2((SF_LOOP_3_acc_5_psp_sva_8_0(8 DOWNTO
      4)), (SF_LOOP_3_acc_45_itm_8_0(8 DOWNTO 4)), STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd,
      1),5)), STD_LOGIC_VECTOR'( and_dcpl_1385 & and_dcpl_1393 & and_dcpl_1407));
  RMS_NORM_LOOP_2_nor_2_nl <= NOT(and_dcpl_1400 OR and_dcpl_1403 OR and_dcpl_1411);
  RMS_NORM_LOOP_2_and_9_nl <= MUX_v_5_2_2(STD_LOGIC_VECTOR'("00000"), RMS_NORM_LOOP_2_mux1h_5_nl,
      RMS_NORM_LOOP_2_nor_2_nl);
  RMS_NORM_LOOP_2_mux1h_6_nl <= MUX1HOT_v_4_5_2((SF_LOOP_3_acc_5_psp_sva_8_0(3 DOWNTO
      0)), (SF_LOOP_3_acc_45_itm_8_0(3 DOWNTO 0)), z_out_24, STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd
      & reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd_1),4)), z_out_25, STD_LOGIC_VECTOR'(
      and_dcpl_1385 & and_dcpl_1393 & and_dcpl_1400 & and_dcpl_1407 & and_dcpl_1411));
  RMS_NORM_LOOP_2_or_3_nl <= MUX_v_4_2_2(RMS_NORM_LOOP_2_mux1h_6_nl, STD_LOGIC_VECTOR'("1111"),
      and_dcpl_1403);
  RMS_NORM_LOOP_2_or_4_nl <= and_dcpl_1385 OR and_dcpl_1393 OR and_dcpl_1407;
  RMS_NORM_LOOP_2_mux1h_7_nl <= MUX1HOT_v_2_4_2(STD_LOGIC_VECTOR'( "01"), (z_out_28(2
      DOWNTO 1)), reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd, (z_out_27(2 DOWNTO 1)), STD_LOGIC_VECTOR'(
      RMS_NORM_LOOP_2_or_4_nl & and_dcpl_1400 & and_dcpl_1403 & and_dcpl_1411));
  z_out_32 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(RMS_NORM_LOOP_2_and_9_nl &
      RMS_NORM_LOOP_2_or_3_nl) + CONV_UNSIGNED(UNSIGNED(RMS_NORM_LOOP_2_mux1h_7_nl),
      9), 9));
  and_2311_nl <= CONV_SL_1_1(fsm_output=STD_LOGIC_VECTOR'("011101101"));
  GEMM_3D_FLOAT_LOOP_4_mux_26_nl <= MUX_s_1_2_2((GEMM_3D_FLOAT_LOOP_4_acc_183_sdt_mx0w1(6)),
      (z_out_23(3)), and_2311_nl);
  z_out_33 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0),
      3), 4) + CONV_UNSIGNED(CONV_UNSIGNED(GEMM_3D_FLOAT_LOOP_4_mux_26_nl, 1), 4),
      4));
  SF_LOOP_3_mux_87_nl <= MUX_v_4_2_2((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(11
      DOWNTO 8)), STD_LOGIC_VECTOR'( "1001"), and_dcpl_1440);
  SF_LOOP_3_SF_LOOP_3_or_44_nl <= (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(21))
      OR and_dcpl_1440;
  SF_LOOP_3_mux_88_nl <= MUX_s_1_2_2((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(20)),
      (reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd(1)), and_dcpl_1440);
  SF_LOOP_3_or_17_nl <= (NOT(CONV_SL_1_1(fsm_output(8 DOWNTO 6)=STD_LOGIC_VECTOR'("011"))
      AND nor_525_cse AND and_dcpl_887 AND (fsm_output(0)) AND (fsm_output(2))))
      OR and_dcpl_1440;
  SF_LOOP_3_mux_89_nl <= MUX_v_2_2_2((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(26
      DOWNTO 25)), (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(2 DOWNTO 1)), and_dcpl_1440);
  SF_LOOP_3_SF_LOOP_3_and_15_nl <= (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(0)) AND
      and_dcpl_1440;
  SF_LOOP_3_SF_LOOP_3_and_16_nl <= (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(5))
      AND (NOT and_dcpl_1440);
  not_3392_nl <= NOT and_dcpl_1440;
  SF_LOOP_3_SF_LOOP_3_and_17_nl <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"), (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(24
      DOWNTO 23)), not_3392_nl);
  acc_32_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_mux_87_nl
      & SF_LOOP_3_SF_LOOP_3_or_44_nl & SF_LOOP_3_mux_88_nl & SF_LOOP_3_or_17_nl),
      7), 8) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_mux_89_nl & SF_LOOP_3_SF_LOOP_3_and_15_nl
      & SF_LOOP_3_SF_LOOP_3_and_16_nl & SF_LOOP_3_SF_LOOP_3_and_17_nl & '1'), 7),
      8), 8));
  z_out_34 <= acc_32_nl(7 DOWNTO 1);
  GEMM_3D_FLOAT_LOOP_4_1_mux_7_nl <= MUX_s_1_2_2((z_out_14(3)), (z_out_29(7)), and_1447_cse);
  nor_917_nl <= NOT((fsm_output(1)) OR (fsm_output(0)) OR (fsm_output(6)) OR (fsm_output(5))
      OR (NOT (fsm_output(2))));
  mux_1095_nl <= MUX_s_1_2_2(nor_tmp_241, (NOT or_tmp_1208), fsm_output(0));
  nor_918_nl <= NOT((NOT (fsm_output(0))) OR (NOT (fsm_output(6))) OR (fsm_output(5))
      OR (fsm_output(2)));
  mux_1094_nl <= MUX_s_1_2_2(mux_1095_nl, nor_918_nl, fsm_output(1));
  mux_1093_nl <= MUX_s_1_2_2(nor_917_nl, mux_1094_nl, fsm_output(3));
  nor_920_nl <= NOT((NOT (fsm_output(6))) OR (fsm_output(5)) OR (fsm_output(2)));
  mux_1097_nl <= MUX_s_1_2_2(nor_920_nl, nor_tmp_241, fsm_output(0));
  or_1580_nl <= (fsm_output(6)) OR (fsm_output(5)) OR (NOT (fsm_output(2)));
  mux_1098_nl <= MUX_s_1_2_2(or_tmp_1208, or_1580_nl, fsm_output(0));
  mux_1096_nl <= MUX_s_1_2_2((NOT mux_1097_nl), mux_1098_nl, fsm_output(1));
  nor_919_nl <= NOT((fsm_output(3)) OR mux_1096_nl);
  mux_1092_nl <= MUX_s_1_2_2(mux_1093_nl, nor_919_nl, fsm_output(4));
  GEMM_3D_FLOAT_LOOP_4_1_or_19_nl <= GEMM_3D_FLOAT_LOOP_4_1_mux_7_nl OR (mux_1092_nl
      AND and_dcpl_19);
  z_out_35 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0),
      3), 4) + CONV_UNSIGNED(CONV_UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_or_19_nl, 1), 4),
      4));
  GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_and_2_nl <= (GEMM_3D_FLOAT_LOOP_4_1_acc_23_cse_sva(3))
      AND (NOT(and_dcpl_1440 OR and_dcpl_1476));
  GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mux_8_nl <= MUX_v_3_2_2(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0,
      (GEMM_3D_FLOAT_LOOP_4_1_acc_23_cse_sva(2 DOWNTO 0)), and_dcpl_1471);
  GEMM_3D_FLOAT_LOOP_4_mux_27_nl <= MUX_s_1_2_2((z_out_20(7)), (z_out_17(3)), and_dcpl_1476);
  GEMM_3D_FLOAT_LOOP_4_or_29_nl <= GEMM_3D_FLOAT_LOOP_4_mux_27_nl OR and_dcpl_1471;
  z_out_36 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_and_2_nl
      & GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mux_8_nl), 4), 5) + CONV_UNSIGNED(CONV_UNSIGNED(GEMM_3D_FLOAT_LOOP_4_or_29_nl,
      1), 5), 5));
  GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_and_3_nl <= (APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp(3))
      AND (NOT(and_1312_cse OR and_1447_cse OR and_dcpl_1498));
  GEMM_3D_FLOAT_LOOP_4_1_or_20_nl <= and_1312_cse OR and_1447_cse;
  GEMM_3D_FLOAT_LOOP_4_1_mux1h_31_nl <= MUX1HOT_v_3_3_2(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0,
      (APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp(2 DOWNTO 0)), (reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd
      & reg_APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0_ftd_1), STD_LOGIC_VECTOR'(
      GEMM_3D_FLOAT_LOOP_4_1_or_20_nl & and_dcpl_800 & and_dcpl_1498));
  GEMM_3D_FLOAT_LOOP_4_1_mux_8_nl <= MUX_s_1_2_2((GEMM_3D_FLOAT_LOOP_4_1_acc_33_sdt_mx0w5(4)),
      (z_out_14(3)), and_1447_cse);
  GEMM_3D_FLOAT_LOOP_4_1_or_21_nl <= GEMM_3D_FLOAT_LOOP_4_1_mux_8_nl OR and_dcpl_800
      OR and_dcpl_1498;
  z_out_37 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_and_3_nl
      & GEMM_3D_FLOAT_LOOP_4_1_mux1h_31_nl), 4), 5) + CONV_UNSIGNED(CONV_UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_or_21_nl,
      1), 5), 5));
  GEMM_3D_FLOAT_LOOP_4_1_or_22_nl <= (CACHE_UPDATE_LOOP_3_k_5_0_sva_5_4(1)) OR and_1417_cse;
  acc_37_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0
      & STD_LOGIC_VECTOR'( "000") & GEMM_3D_FLOAT_LOOP_4_1_or_22_nl), 7), 8) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0
      & '1'), 4), 8), 8));
  z_out_39 <= acc_37_nl(7 DOWNTO 1);
  and_2314_nl <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)=STD_LOGIC_VECTOR'("101")) AND
      nor_525_cse AND not_tmp_21 AND (fsm_output(0)) AND (fsm_output(2));
  LINEAR_FORWARD_NO_MUL_LOOP_2_2_mux_3_nl <= MUX_v_41_2_2((z_out_58(56 DOWNTO 16)),
      (z_out_9(42 DOWNTO 2)), and_2314_nl);
  z_out_40 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva
      & STD_LOGIC_VECTOR'( "01")) + CONV_UNSIGNED(SIGNED(LINEAR_FORWARD_NO_MUL_LOOP_2_2_mux_3_nl),
      42), 42));
  LINEAR_FORWARD_NO_MUL_LOOP_2_3_mux_13_nl <= MUX_v_40_2_2(QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva,
      STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(NOT (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(39
      DOWNTO 3))),40)), and_dcpl_1557);
  LINEAR_FORWARD_NO_MUL_LOOP_2_3_mux_14_nl <= MUX_v_3_2_2(STD_LOGIC_VECTOR'( "001"),
      (NOT (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(2 DOWNTO 0))), and_dcpl_1557);
  LINEAR_FORWARD_NO_MUL_LOOP_2_3_mux_15_nl <= MUX_v_2_2_2((z_out_42_49_8(41 DOWNTO
      40)), STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(z_out_42_49_8(39), 1),2)), and_dcpl_1557);
  z_out_41_52_8 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(LINEAR_FORWARD_NO_MUL_LOOP_2_3_mux_13_nl
      & LINEAR_FORWARD_NO_MUL_LOOP_2_3_mux_14_nl & '0' & and_dcpl_1557) + CONV_UNSIGNED(CONV_SIGNED(SIGNED(LINEAR_FORWARD_NO_MUL_LOOP_2_3_mux_15_nl
      & (z_out_42_49_8(39 DOWNTO 0))), 42), 45), 45));
  LINEAR_FORWARD_NO_MUL_LOOP_2_2_acc_14_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(NOT
      QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva) + CONV_SIGNED(CONV_SIGNED(SIGNED(QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(39
      DOWNTO 2)), 38), 40), 40));
  LINEAR_FORWARD_NO_MUL_LOOP_2_3_mux_17_nl <= MUX_v_40_2_2((NOT QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva),
      STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(LINEAR_FORWARD_NO_MUL_LOOP_2_2_acc_14_nl),
      40)), and_dcpl_1557);
  LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_sdt <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva
      & STD_LOGIC_VECTOR'( "001")) + CONV_UNSIGNED(SIGNED(LINEAR_FORWARD_NO_MUL_LOOP_2_3_mux_17_nl),
      43), 43));
  LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_sdt_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED(QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva),
      40), 41) + CONV_UNSIGNED(CONV_SIGNED(SIGNED(LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_sdt(42
      DOWNTO 6)), 37), 41), 41));
  LINEAR_FORWARD_NO_MUL_LOOP_2_3_mux_16_nl <= MUX_v_40_2_2((NOT QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva),
      STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(NOT (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(39
      DOWNTO 2))),40)), and_dcpl_1572);
  QUANTIZE_ACTIVATION_LOOP_1_scale_not_101_nl <= NOT (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(1
      DOWNTO 0));
  LINEAR_FORWARD_NO_MUL_LOOP_2_3_LINEAR_FORWARD_NO_MUL_LOOP_2_3_and_1_nl <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"),
      QUANTIZE_ACTIVATION_LOOP_1_scale_not_101_nl, and_dcpl_1572);
  z_out_42_49_8 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(LINEAR_FORWARD_NO_MUL_LOOP_2_3_mux_16_nl
      & LINEAR_FORWARD_NO_MUL_LOOP_2_3_LINEAR_FORWARD_NO_MUL_LOOP_2_3_and_1_nl) +
      CONV_UNSIGNED(CONV_SIGNED(SIGNED(LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_sdt_1(40
      DOWNTO 2)), 39), 42), 42));
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(
      -CONV_SIGNED(CONV_SIGNED(SIGNED(attention_round_qelse_mux_2_cse), 17), 18),
      18));
  z_out_44_17 <= QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_nl(17);
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux_5_nl <= MUX_v_4_2_2(attention_round_1_qr_39_16_3_lpi_3_dfm_23_20,
      (attention_round_qr_39_16_lpi_3_dfm_mx0w0(23 DOWNTO 20)), QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_16_cse);
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux_6_nl <= MUX_v_3_2_2(reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd,
      (attention_round_qr_39_16_lpi_3_dfm_mx0w0(19 DOWNTO 17)), QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_16_cse);
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux_7_nl <= MUX_v_5_2_2(reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_1,
      (attention_round_qr_39_16_lpi_3_dfm_mx0w0(16 DOWNTO 12)), QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_16_cse);
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux_8_nl <= MUX_v_3_2_2(reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_2,
      (attention_round_qr_39_16_lpi_3_dfm_mx0w0(11 DOWNTO 9)), QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_16_cse);
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux_9_nl <= MUX_v_2_2_2((reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(8
      DOWNTO 7)), (attention_round_qr_39_16_lpi_3_dfm_mx0w0(8 DOWNTO 7)), QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_16_cse);
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_acc_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED(QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux_5_nl
      & QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux_6_nl & QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux_7_nl
      & QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux_8_nl & QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux_9_nl),
      17), 18) + UNSIGNED'( "000000000000000001"), 18));
  z_out_45_17 <= QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_acc_nl(17);
  attention_round_qelse_mux_13_nl <= MUX_v_4_2_2(attention_round_1_qr_39_16_3_lpi_3_dfm_23_20,
      (attention_round_qr_39_16_lpi_3_dfm_mx0w0(23 DOWNTO 20)), CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm);
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_mux_8_nl <= MUX_v_4_2_2((NOT
      attention_round_1_qr_39_16_3_lpi_3_dfm_23_20), (NOT attention_round_qelse_mux_13_nl),
      and_1914_cse);
  attention_round_qelse_mux_14_nl <= MUX_v_3_2_2(reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd,
      (attention_round_qr_39_16_lpi_3_dfm_mx0w0(19 DOWNTO 17)), CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm);
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_mux_9_nl <= MUX_v_3_2_2((NOT
      reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd), (NOT attention_round_qelse_mux_14_nl),
      and_1914_cse);
  attention_round_qelse_mux_15_nl <= MUX_v_5_2_2(reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_1,
      (attention_round_qr_39_16_lpi_3_dfm_mx0w0(16 DOWNTO 12)), CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm);
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_mux_10_nl <= MUX_v_5_2_2((NOT
      reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_1), (NOT attention_round_qelse_mux_15_nl),
      and_1914_cse);
  attention_round_qelse_mux_16_nl <= MUX_v_3_2_2(reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_2,
      (attention_round_qr_39_16_lpi_3_dfm_mx0w0(11 DOWNTO 9)), CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm);
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_mux_11_nl <= MUX_v_3_2_2((NOT
      reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_2), (NOT attention_round_qelse_mux_16_nl),
      and_1914_cse);
  attention_round_qelse_mux_17_nl <= MUX_v_2_2_2((reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(8
      DOWNTO 7)), (attention_round_qr_39_16_lpi_3_dfm_mx0w0(8 DOWNTO 7)), CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm);
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_mux_12_nl <= MUX_v_2_2_2((NOT
      (reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3(8 DOWNTO 7))), (NOT attention_round_qelse_mux_17_nl),
      and_1914_cse);
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_1_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED(QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_mux_8_nl
      & QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_mux_9_nl & QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_mux_10_nl
      & QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_mux_11_nl & QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_mux_12_nl),
      17), 18) + UNSIGNED'( "000000000000000001"), 18));
  z_out_46_17 <= QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_1_nl(17);
  QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED(attention_round_qelse_mux_2_cse),
      17), 18) + UNSIGNED'( "000000000000000001"), 18));
  QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_cse_17 <= QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_nl(17);
  operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_26_nl
      <= MUX_v_6_2_2(STD_LOGIC_VECTOR'("000000"), (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(13
      DOWNTO 8)), and_995_cse);
  operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_27_nl
      <= (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(24))
      AND (NOT and_995_cse);
  operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_28_nl
      <= (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(17))
      AND and_995_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_mux_137_nl <= MUX_s_1_2_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(24)),
      (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(16)),
      and_995_cse);
  operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_29_nl
      <= (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(15))
      AND and_995_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_mux_138_nl <= MUX_s_1_2_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(24)),
      reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd,
      and_995_cse);
  operator_40_24_true_AC_TRN_AC_WRAP_mux_139_nl <= MUX_s_1_2_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(24)),
      (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(21)),
      and_995_cse);
  operator_40_24_true_AC_TRN_AC_WRAP_mux_140_nl <= MUX_s_1_2_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(24)),
      (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(17)),
      and_995_cse);
  operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_30_nl
      <= (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(16))
      AND and_995_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_mux_141_nl <= MUX_s_1_2_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(24)),
      (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(15)),
      and_995_cse);
  operator_40_24_true_AC_TRN_AC_WRAP_mux_142_nl <= MUX_s_1_2_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(24)),
      (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(3)),
      and_995_cse);
  operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_31_nl
      <= (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(3))
      AND and_995_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_mux_143_nl <= MUX_v_2_2_2(STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(20),
      1),2)), (SF_LOOP_3_acc_5_psp_sva_19_17(2 DOWNTO 1)), and_995_cse);
  SF_LOOP_3_SF_LOOP_3_nand_2_nl <= NOT((SF_LOOP_3_acc_7_psp_sva_1(17)) AND (NOT reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd));
  SF_LOOP_3_acc_93_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((NOT
      (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(19
      DOWNTO 15))) & '1' & (NOT (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(17
      DOWNTO 15))) & '1' & (NOT (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(9
      DOWNTO 8))) & '1' & (NOT (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(6
      DOWNTO 5))) & '1' & (NOT (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(19
      DOWNTO 15))) & '1' & (NOT SF_LOOP_3_acc_5_psp_sva_21)), 23), 24) + CONV_UNSIGNED(CONV_UNSIGNED(SF_LOOP_3_SF_LOOP_3_nand_2_nl,
      1), 24) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd
      & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(13),
      1),4)) & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd,
      1),2)) & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(13),
      1),2)) & (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(19
      DOWNTO 18)) & (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(19
      DOWNTO 18)) & (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(0))
      & (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_2(14))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(20),
      1),3)) & (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(11
      DOWNTO 10))), 21), 24) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (SF_LOOP_3_acc_90_psp_1(14)),
      1), 1), 24) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd
      & reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_1 & reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_2
      & reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3), 20), 24) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(SF_LOOP_3_acc_90_psp_1(13),
      1), 1), 24) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(21
      DOWNTO 20)) & (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(9
      DOWNTO 8)) & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(14),
      1),2)) & (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(11
      DOWNTO 10)) & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(4),
      1),4)) & (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(20))
      & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd,
      1),2)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(13),
      1),3))), 19), 24) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_45_itm_13_9
      & SF_LOOP_3_acc_45_itm_8_0), 14), 24) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(SF_LOOP_3_acc_5_psp_sva_19_17(0),
      1), 1), 24), 24));
  SF_LOOP_3_and_11_nl <= reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd
      AND (NOT (SF_LOOP_3_acc_7_psp_sva_1(17))) AND (CONV_SL_1_1(SF_LOOP_3_acc_7_psp_sva_1(16
      DOWNTO 0)/=STD_LOGIC_VECTOR'("00000000000000000")));
  SF_LOOP_3_acc_92_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(STD_LOGIC_VECTOR'( "101110111111111111101001")
      & (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_2(5)))
      + CONV_SIGNED(UNSIGNED(SF_LOOP_3_acc_93_nl), 25) + CONV_SIGNED(CONV_UNSIGNED(SF_LOOP_3_and_11_nl,
      1), 25), 25));
  SF_LOOP_3_acc_91_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(14
      DOWNTO 10)) & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(19
      DOWNTO 18)) & (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(6
      DOWNTO 5)) & (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(7))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(2
      DOWNTO 0)) & (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_2(14))
      & (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(9
      DOWNTO 8)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(1),
      1),4)) & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_2(5))
      & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(12),
      1),2))), 27), 28) + CONV_SIGNED(SIGNED(SF_LOOP_3_acc_92_nl), 28), 28));
  operator_40_24_true_AC_TRN_AC_WRAP_mux_144_nl <= MUX_v_28_2_2(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(z_out_2(14
      DOWNTO 0)),28)), STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_91_nl),
      28)), and_995_cse);
  z_out_49 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_2_cse_1
      & '0' & operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_26_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_2_cse_1
      & operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_27_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_28_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_mux_137_nl & operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_29_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_mux_138_nl & operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_2_cse_1
      & operator_40_24_true_AC_TRN_AC_WRAP_mux_139_nl & '0' & operator_40_24_true_AC_TRN_AC_WRAP_mux_140_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_30_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_mux_141_nl & '0' & operator_40_24_true_AC_TRN_AC_WRAP_mux_142_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_31_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_mux_143_nl),28)), 28), 30) + CONV_UNSIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_mux_144_nl),
      30), 30));
  z_out_50 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(z_out_10(54
      DOWNTO 32)), 23), 24) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(z_out_10(31),
      1), 1), 24), 24));
  QUANTIZE_ACTIVATION_LOOP_2_1_if_mux1h_8_nl <= MUX1HOT_s_1_3_2(QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_39,
      SF_LOOP_3_acc_5_psp_sva_9, (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(39)), STD_LOGIC_VECTOR'(
      and_dcpl_1685 & and_1208_cse & and_dcpl_1698));
  QUANTIZE_ACTIVATION_LOOP_2_1_if_mux1h_9_nl <= MUX1HOT_v_9_3_2((QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_38_15(23
      DOWNTO 15)), SF_LOOP_3_acc_5_psp_sva_8_0, (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(38
      DOWNTO 30)), STD_LOGIC_VECTOR'( and_dcpl_1685 & and_1208_cse & and_dcpl_1698));
  QUANTIZE_ACTIVATION_LOOP_2_1_if_mux1h_10_nl <= MUX1HOT_v_15_3_2((QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_38_15(14
      DOWNTO 0)), (attention_sqrt_1_guess_sva_29_0(29 DOWNTO 15)), (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(29
      DOWNTO 15)), STD_LOGIC_VECTOR'( and_dcpl_1685 & and_1208_cse & and_dcpl_1698));
  QUANTIZE_ACTIVATION_LOOP_2_1_if_mux1h_11_nl <= MUX1HOT_v_15_3_2(QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_14_0,
      (attention_sqrt_1_guess_sva_29_0(14 DOWNTO 0)), (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(14
      DOWNTO 0)), STD_LOGIC_VECTOR'( and_dcpl_1685 & and_1208_cse & and_dcpl_1698));
  QUANTIZE_ACTIVATION_LOOP_2_1_if_or_3_nl <= (NOT and_1208_cse) OR and_dcpl_1685
      OR and_dcpl_1698;
  QUANTIZE_ACTIVATION_LOOP_2_1_attention_abs_6_nand_1_nl <= NOT((z_out_12(39)) AND
      (RMS_NORM_LOOP_2_2_mul_itm_71_32_1(39)));
  attention_abs_6_mux_3_nl <= MUX_v_39_2_2((RMS_NORM_LOOP_2_2_mul_itm_71_32_1(38
      DOWNTO 0)), (z_out_12(38 DOWNTO 0)), RMS_NORM_LOOP_2_2_mul_itm_71_32_1(39));
  QUANTIZE_ACTIVATION_LOOP_2_1_if_mux1h_12_nl <= MUX1HOT_v_40_3_2((QUANTIZE_ACTIVATION_LOOP_2_1_attention_abs_6_nand_1_nl
      & (NOT attention_abs_6_mux_3_nl)), (z_out_10(39 DOWNTO 0)), (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(39
      DOWNTO 0))), STD_LOGIC_VECTOR'( and_dcpl_1685 & and_1208_cse & and_dcpl_1698));
  acc_49_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED(QUANTIZE_ACTIVATION_LOOP_2_1_if_mux1h_8_nl
      & QUANTIZE_ACTIVATION_LOOP_2_1_if_mux1h_9_nl & QUANTIZE_ACTIVATION_LOOP_2_1_if_mux1h_10_nl
      & QUANTIZE_ACTIVATION_LOOP_2_1_if_mux1h_11_nl & QUANTIZE_ACTIVATION_LOOP_2_1_if_or_3_nl),
      41), 42) + CONV_UNSIGNED(CONV_SIGNED(SIGNED(QUANTIZE_ACTIVATION_LOOP_2_1_if_mux1h_12_nl
      & '1'), 41), 42), 42));
  z_out_51_40_1 <= acc_49_nl(41 DOWNTO 2);
  attention_max_attn_fixed_t_mux1h_3_nl <= MUX1HOT_s_1_3_2((NOT QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_39),
      (NOT QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_39), (NOT (z_out_10(55))),
      STD_LOGIC_VECTOR'( and_dcpl_1721 & and_dcpl_1729 & attention_max_attn_fixed_t_or_cse_1));
  attention_max_attn_fixed_t_mux1h_4_nl <= MUX1HOT_v_24_3_2((NOT QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_38_15),
      (NOT QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_38_15), (NOT (z_out_10(54 DOWNTO
      31))), STD_LOGIC_VECTOR'( and_dcpl_1721 & and_dcpl_1729 & attention_max_attn_fixed_t_or_cse_1));
  attention_max_attn_fixed_t_mux1h_5_nl <= MUX1HOT_v_15_3_2((NOT QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_14_0),
      (NOT QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_14_0), (NOT (z_out_10(30 DOWNTO
      16))), STD_LOGIC_VECTOR'( and_dcpl_1721 & and_dcpl_1729 & attention_max_attn_fixed_t_or_cse_1));
  attention_max_attn_fixed_t_acc_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED(attention_max_attn_fixed_t_mux1h_3_nl
      & attention_max_attn_fixed_t_mux1h_4_nl & attention_max_attn_fixed_t_mux1h_5_nl),
      40), 41) + UNSIGNED'( "00000000000000000000000000000000000000001"), 41));
  z_out_53_40 <= attention_max_attn_fixed_t_acc_nl(40);
  mgc_div_8_7_0_4_b0_line_26 : PROCESS (LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_lpi_3_mx1_7,
      reg_GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_ftd, LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_dfm_7,
      LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_lpi_3_mx2_7_4, and_dcpl_1760, and_dcpl_1764,
      and_dcpl_1766, and_dcpl_1772, LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_lpi_3_mx1_6_0,
      LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_dfm_6_0, reg_GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_ftd_1,
      LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_lpi_3_mx2_3_2, reg_GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_ftd_2,
      LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_lpi_3_mx2_1_0, LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_lshift_itm,
      GEMM_3D_FLOAT_LOOP_4_1_acc_20_itm, GEMM_3D_FLOAT_LOOP_4_acc_185_sdt, LINEAR_FORWARD_NO_MUL_LOOP_5_3_weight_val_lshift_itm)
    -- Interconnect Declarations
    VARIABLE divmod6448_2_diff_1 : STD_LOGIC_VECTOR (7 DOWNTO 0);
    VARIABLE divmod6448_2_diff_2 : STD_LOGIC_VECTOR (7 DOWNTO 0);
    VARIABLE divmod6448_2_diff_3 : STD_LOGIC_VECTOR (7 DOWNTO 0);
    VARIABLE divmod6448_2_diff_4 : STD_LOGIC_VECTOR (7 DOWNTO 0);
    VARIABLE divmod6448_2_diff_5 : STD_LOGIC_VECTOR (7 DOWNTO 0);
    VARIABLE divmod6448_2_diff_6 : STD_LOGIC_VECTOR (7 DOWNTO 0);
    VARIABLE divmod6448_2_diff_7 : STD_LOGIC_VECTOR (7 DOWNTO 0);
    VARIABLE divmod6448_2_lbuf_13_7 : STD_LOGIC;
    VARIABLE divmod6448_2_lbuf_12_6 : STD_LOGIC;
    VARIABLE divmod6448_2_lbuf_12_7 : STD_LOGIC;
    VARIABLE divmod6448_2_lbuf_11_5 : STD_LOGIC;
    VARIABLE divmod6448_2_lbuf_11_6 : STD_LOGIC;
    VARIABLE divmod6448_2_lbuf_11_7 : STD_LOGIC;
    VARIABLE divmod6448_2_lbuf_10_4 : STD_LOGIC;
    VARIABLE divmod6448_2_lbuf_10_5 : STD_LOGIC;
    VARIABLE divmod6448_2_lbuf_10_6 : STD_LOGIC;
    VARIABLE divmod6448_2_lbuf_10_7 : STD_LOGIC;
    VARIABLE divmod6448_2_lbuf_9_3 : STD_LOGIC;
    VARIABLE divmod6448_2_lbuf_9_4 : STD_LOGIC;
    VARIABLE divmod6448_2_lbuf_9_5 : STD_LOGIC;
    VARIABLE divmod6448_2_lbuf_9_6 : STD_LOGIC;
    VARIABLE divmod6448_2_lbuf_9_7 : STD_LOGIC;
    VARIABLE divmod6448_2_lbuf_8_2 : STD_LOGIC;
    VARIABLE divmod6448_2_lbuf_8_3 : STD_LOGIC;
    VARIABLE divmod6448_2_lbuf_8_4 : STD_LOGIC;
    VARIABLE divmod6448_2_lbuf_8_5 : STD_LOGIC;
    VARIABLE divmod6448_2_lbuf_8_6 : STD_LOGIC;
    VARIABLE divmod6448_2_lbuf_8_7 : STD_LOGIC;
    VARIABLE divmod6448_2_lbuf_7 : STD_LOGIC;
    VARIABLE divmod6448_2_lbuf_7_1 : STD_LOGIC;
    VARIABLE divmod6448_2_lbuf_7_2 : STD_LOGIC;
    VARIABLE divmod6448_2_lbuf_7_3 : STD_LOGIC;
    VARIABLE divmod6448_2_lbuf_7_4 : STD_LOGIC;
    VARIABLE divmod6448_2_lbuf_7_5 : STD_LOGIC;
    VARIABLE divmod6448_2_lbuf_7_6 : STD_LOGIC;
    VARIABLE divmod6448_2_lbuf_6_4 : STD_LOGIC_VECTOR (2 DOWNTO 0);
    VARIABLE divmod6448_2_lbuf_3_2 : STD_LOGIC_VECTOR (1 DOWNTO 0);
    VARIABLE divmod6448_2_lbuf_1_0 : STD_LOGIC_VECTOR (1 DOWNTO 0);
    VARIABLE LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_mux1h_1_cse : STD_LOGIC_VECTOR
        (6 DOWNTO 0);

    VARIABLE divmod6448_2_loop951_8_acc_1_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  BEGIN
    divmod6448_2_lbuf_3_2 := MUX1HOT_v_2_4_2((LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_lpi_3_mx1_6_0(3
        DOWNTO 2)), reg_GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_ftd_1, (LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_dfm_6_0(3
        DOWNTO 2)), LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_lpi_3_mx2_3_2, STD_LOGIC_VECTOR'(
        and_dcpl_1760 & and_dcpl_1764 & and_dcpl_1766 & and_dcpl_1772));
    divmod6448_2_lbuf_6_4 := MUX1HOT_v_3_4_2((LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_lpi_3_mx1_6_0(6
        DOWNTO 4)), (reg_GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_ftd(2 DOWNTO 0)), (LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_dfm_6_0(6
        DOWNTO 4)), (LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_lpi_3_mx2_7_4(2 DOWNTO
        0)), STD_LOGIC_VECTOR'( and_dcpl_1760 & and_dcpl_1764 & and_dcpl_1766 & and_dcpl_1772));
    divmod6448_2_lbuf_1_0 := MUX1HOT_v_2_4_2((LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_lpi_3_mx1_6_0(1
        DOWNTO 0)), reg_GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_ftd_2, (LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_dfm_6_0(1
        DOWNTO 0)), LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_lpi_3_mx2_1_0, STD_LOGIC_VECTOR'(
        and_dcpl_1760 & and_dcpl_1764 & and_dcpl_1766 & and_dcpl_1772));
    divmod6448_2_lbuf_7_6 := MUX1HOT_s_1_4_2(LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_lpi_3_mx1_7,
        (reg_GEMM_3D_FLOAT_LOOP_4_acc_190_sdt_ftd(3)), LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_lpi_3_dfm_7,
        (LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_lpi_3_mx2_7_4(3)), STD_LOGIC_VECTOR'(
        and_dcpl_1760 & and_dcpl_1764 & and_dcpl_1766 & and_dcpl_1772));
    LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_mux1h_1_cse := MUX1HOT_v_7_4_2(LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_lshift_itm,
        GEMM_3D_FLOAT_LOOP_4_1_acc_20_itm, GEMM_3D_FLOAT_LOOP_4_acc_185_sdt, LINEAR_FORWARD_NO_MUL_LOOP_5_3_weight_val_lshift_itm,
        STD_LOGIC_VECTOR'( and_dcpl_1760 & and_dcpl_1764 & and_dcpl_1766 & and_dcpl_1772));
    divmod6448_2_diff_1 := STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(divmod6448_2_lbuf_7_6,
        1), 1), 8) + UNSIGNED('1' & (NOT LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_mux1h_1_cse))
        + UNSIGNED'( "00000001"), 8));
    IF ( (divmod6448_2_diff_1(7)) = '1' ) THEN
    ELSE
      divmod6448_2_lbuf_7_6 := divmod6448_2_diff_1(0);
    END IF;
    divmod6448_2_lbuf_8_2 := divmod6448_2_lbuf_7_6;
    divmod6448_2_lbuf_7 := divmod6448_2_lbuf_6_4(2);
    divmod6448_2_diff_2 := STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'(
        divmod6448_2_lbuf_7_6 & (divmod6448_2_lbuf_6_4(2))), 2), 8) + UNSIGNED('1'
        & (NOT LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_mux1h_1_cse)) + UNSIGNED'(
        "00000001"), 8));
    IF ( (divmod6448_2_diff_2(7)) = '1' ) THEN
    ELSE
      divmod6448_2_lbuf_8_2 := divmod6448_2_diff_2(1);
      divmod6448_2_lbuf_7 := divmod6448_2_diff_2(0);
    END IF;
    divmod6448_2_lbuf_9_3 := divmod6448_2_lbuf_8_2;
    divmod6448_2_lbuf_8_3 := divmod6448_2_lbuf_7;
    divmod6448_2_lbuf_7_1 := divmod6448_2_lbuf_6_4(1);
    divmod6448_2_diff_3 := STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'(
        divmod6448_2_lbuf_8_2 & divmod6448_2_lbuf_7 & (divmod6448_2_lbuf_6_4(1))),
        3), 8) + UNSIGNED('1' & (NOT LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_mux1h_1_cse))
        + UNSIGNED'( "00000001"), 8));
    IF ( (divmod6448_2_diff_3(7)) = '1' ) THEN
    ELSE
      divmod6448_2_lbuf_9_3 := divmod6448_2_diff_3(2);
      divmod6448_2_lbuf_8_3 := divmod6448_2_diff_3(1);
      divmod6448_2_lbuf_7_1 := divmod6448_2_diff_3(0);
    END IF;
    divmod6448_2_lbuf_10_4 := divmod6448_2_lbuf_9_3;
    divmod6448_2_lbuf_9_4 := divmod6448_2_lbuf_8_3;
    divmod6448_2_lbuf_8_4 := divmod6448_2_lbuf_7_1;
    divmod6448_2_lbuf_7_2 := divmod6448_2_lbuf_6_4(0);
    divmod6448_2_diff_4 := STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'(
        divmod6448_2_lbuf_9_3 & divmod6448_2_lbuf_8_3 & divmod6448_2_lbuf_7_1 & (divmod6448_2_lbuf_6_4(0))),
        4), 8) + UNSIGNED('1' & (NOT LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_mux1h_1_cse))
        + UNSIGNED'( "00000001"), 8));
    IF ( (divmod6448_2_diff_4(7)) = '1' ) THEN
    ELSE
      divmod6448_2_lbuf_10_4 := divmod6448_2_diff_4(3);
      divmod6448_2_lbuf_9_4 := divmod6448_2_diff_4(2);
      divmod6448_2_lbuf_8_4 := divmod6448_2_diff_4(1);
      divmod6448_2_lbuf_7_2 := divmod6448_2_diff_4(0);
    END IF;
    divmod6448_2_lbuf_11_5 := divmod6448_2_lbuf_10_4;
    divmod6448_2_lbuf_10_5 := divmod6448_2_lbuf_9_4;
    divmod6448_2_lbuf_9_5 := divmod6448_2_lbuf_8_4;
    divmod6448_2_lbuf_8_5 := divmod6448_2_lbuf_7_2;
    divmod6448_2_lbuf_7_3 := divmod6448_2_lbuf_3_2(1);
    divmod6448_2_diff_5 := STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'(
        divmod6448_2_lbuf_10_4 & divmod6448_2_lbuf_9_4 & divmod6448_2_lbuf_8_4 &
        divmod6448_2_lbuf_7_2 & (divmod6448_2_lbuf_3_2(1))), 5), 8) + UNSIGNED('1'
        & (NOT LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_mux1h_1_cse)) + UNSIGNED'(
        "00000001"), 8));
    IF ( (divmod6448_2_diff_5(7)) = '1' ) THEN
    ELSE
      divmod6448_2_lbuf_10_5 := divmod6448_2_diff_5(3);
      divmod6448_2_lbuf_11_5 := divmod6448_2_diff_5(4);
      divmod6448_2_lbuf_9_5 := divmod6448_2_diff_5(2);
      divmod6448_2_lbuf_8_5 := divmod6448_2_diff_5(1);
      divmod6448_2_lbuf_7_3 := divmod6448_2_diff_5(0);
    END IF;
    divmod6448_2_lbuf_12_6 := divmod6448_2_lbuf_11_5;
    divmod6448_2_lbuf_11_6 := divmod6448_2_lbuf_10_5;
    divmod6448_2_lbuf_10_6 := divmod6448_2_lbuf_9_5;
    divmod6448_2_lbuf_9_6 := divmod6448_2_lbuf_8_5;
    divmod6448_2_lbuf_8_6 := divmod6448_2_lbuf_7_3;
    divmod6448_2_lbuf_7_4 := divmod6448_2_lbuf_3_2(0);
    divmod6448_2_diff_6 := STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'(
        divmod6448_2_lbuf_11_5 & divmod6448_2_lbuf_10_5 & divmod6448_2_lbuf_9_5 &
        divmod6448_2_lbuf_8_5 & divmod6448_2_lbuf_7_3 & (divmod6448_2_lbuf_3_2(0))),
        6), 8) + UNSIGNED('1' & (NOT LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_mux1h_1_cse))
        + UNSIGNED'( "00000001"), 8));
    IF ( (divmod6448_2_diff_6(7)) = '1' ) THEN
    ELSE
      divmod6448_2_lbuf_10_6 := divmod6448_2_diff_6(3);
      divmod6448_2_lbuf_11_6 := divmod6448_2_diff_6(4);
      divmod6448_2_lbuf_9_6 := divmod6448_2_diff_6(2);
      divmod6448_2_lbuf_12_6 := divmod6448_2_diff_6(5);
      divmod6448_2_lbuf_8_6 := divmod6448_2_diff_6(1);
      divmod6448_2_lbuf_7_4 := divmod6448_2_diff_6(0);
    END IF;
    divmod6448_2_lbuf_13_7 := divmod6448_2_lbuf_12_6;
    divmod6448_2_lbuf_12_7 := divmod6448_2_lbuf_11_6;
    divmod6448_2_lbuf_11_7 := divmod6448_2_lbuf_10_6;
    divmod6448_2_lbuf_10_7 := divmod6448_2_lbuf_9_6;
    divmod6448_2_lbuf_9_7 := divmod6448_2_lbuf_8_6;
    divmod6448_2_lbuf_8_7 := divmod6448_2_lbuf_7_4;
    divmod6448_2_lbuf_7_5 := divmod6448_2_lbuf_1_0(1);
    divmod6448_2_diff_7 := STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'(
        divmod6448_2_lbuf_12_6 & divmod6448_2_lbuf_11_6 & divmod6448_2_lbuf_10_6
        & divmod6448_2_lbuf_9_6 & divmod6448_2_lbuf_8_6 & divmod6448_2_lbuf_7_4 &
        (divmod6448_2_lbuf_1_0(1))), 7), 8) + UNSIGNED('1' & (NOT LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_mux1h_1_cse))
        + UNSIGNED'( "00000001"), 8));
    IF ( (divmod6448_2_diff_7(7)) = '1' ) THEN
    ELSE
      divmod6448_2_lbuf_10_7 := divmod6448_2_diff_7(3);
      divmod6448_2_lbuf_11_7 := divmod6448_2_diff_7(4);
      divmod6448_2_lbuf_9_7 := divmod6448_2_diff_7(2);
      divmod6448_2_lbuf_12_7 := divmod6448_2_diff_7(5);
      divmod6448_2_lbuf_8_7 := divmod6448_2_diff_7(1);
      divmod6448_2_lbuf_13_7 := divmod6448_2_diff_7(6);
      divmod6448_2_lbuf_7_5 := divmod6448_2_diff_7(0);
    END IF;
    divmod6448_2_loop951_8_acc_1_nl := STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED'(
        divmod6448_2_lbuf_13_7 & divmod6448_2_lbuf_12_7 & divmod6448_2_lbuf_11_7
        & divmod6448_2_lbuf_10_7 & divmod6448_2_lbuf_9_7 & divmod6448_2_lbuf_8_7
        & divmod6448_2_lbuf_7_5 & (divmod6448_2_lbuf_1_0(0))) + UNSIGNED('1' & (NOT
        LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_mux1h_1_cse)) + UNSIGNED'( "00000001"),
        8));
    z_out_55_0 <= NOT (divmod6448_2_loop951_8_acc_1_nl(7));
    z_out_55_1 <= NOT (divmod6448_2_diff_7(7));
  END PROCESS mgc_div_8_7_0_4_b0_line_26;

  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_35_nl <= MUX1HOT_s_1_3_2(reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd,
      (output_rsci_data_out_d(39)), (attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d(39)),
      STD_LOGIC_VECTOR'( and_dcpl_1793 & and_dcpl_1797 & and_dcpl_1802));
  operator_40_24_true_AC_TRN_AC_WRAP_and_19_nl <= operator_40_24_true_AC_TRN_AC_WRAP_mux1h_35_nl
      AND operator_40_24_true_AC_TRN_AC_WRAP_nor_13_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_36_nl <= MUX1HOT_s_1_4_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(1)),
      (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(23)),
      (output_rsci_data_out_d(38)), (attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d(38)),
      STD_LOGIC_VECTOR'( operator_40_24_true_AC_TRN_AC_WRAP_or_10_cse & and_dcpl_1793
      & and_dcpl_1797 & and_dcpl_1802));
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_37_nl <= MUX1HOT_s_1_3_2((reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(22)),
      (output_rsci_data_out_d(37)), (attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d(37)),
      STD_LOGIC_VECTOR'( and_dcpl_1793 & and_dcpl_1797 & and_dcpl_1802));
  operator_40_24_true_AC_TRN_AC_WRAP_and_20_nl <= operator_40_24_true_AC_TRN_AC_WRAP_mux1h_37_nl
      AND operator_40_24_true_AC_TRN_AC_WRAP_nor_13_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_38_nl <= MUX1HOT_s_1_4_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(1)),
      (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(21)),
      (output_rsci_data_out_d(36)), (attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d(36)),
      STD_LOGIC_VECTOR'( operator_40_24_true_AC_TRN_AC_WRAP_or_10_cse & and_dcpl_1793
      & and_dcpl_1797 & and_dcpl_1802));
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_39_nl <= MUX1HOT_s_1_3_2((reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(20)),
      (output_rsci_data_out_d(35)), (attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d(35)),
      STD_LOGIC_VECTOR'( and_dcpl_1793 & and_dcpl_1797 & and_dcpl_1802));
  operator_40_24_true_AC_TRN_AC_WRAP_and_21_nl <= operator_40_24_true_AC_TRN_AC_WRAP_mux1h_39_nl
      AND operator_40_24_true_AC_TRN_AC_WRAP_nor_13_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_40_nl <= MUX1HOT_s_1_4_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(1)),
      (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(19)),
      (output_rsci_data_out_d(34)), (attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d(34)),
      STD_LOGIC_VECTOR'( operator_40_24_true_AC_TRN_AC_WRAP_or_10_cse & and_dcpl_1793
      & and_dcpl_1797 & and_dcpl_1802));
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_41_nl <= MUX1HOT_s_1_3_2((reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(18)),
      (output_rsci_data_out_d(33)), (attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d(33)),
      STD_LOGIC_VECTOR'( and_dcpl_1793 & and_dcpl_1797 & and_dcpl_1802));
  operator_40_24_true_AC_TRN_AC_WRAP_and_22_nl <= operator_40_24_true_AC_TRN_AC_WRAP_mux1h_41_nl
      AND operator_40_24_true_AC_TRN_AC_WRAP_nor_13_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_42_nl <= MUX1HOT_s_1_4_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(1)),
      (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(17)),
      (output_rsci_data_out_d(32)), (attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d(32)),
      STD_LOGIC_VECTOR'( operator_40_24_true_AC_TRN_AC_WRAP_or_10_cse & and_dcpl_1793
      & and_dcpl_1797 & and_dcpl_1802));
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_43_nl <= MUX1HOT_s_1_3_2((reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(16)),
      (output_rsci_data_out_d(31)), (attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d(31)),
      STD_LOGIC_VECTOR'( and_dcpl_1793 & and_dcpl_1797 & and_dcpl_1802));
  operator_40_24_true_AC_TRN_AC_WRAP_and_23_nl <= operator_40_24_true_AC_TRN_AC_WRAP_mux1h_43_nl
      AND operator_40_24_true_AC_TRN_AC_WRAP_nor_13_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_44_nl <= MUX1HOT_s_1_4_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(1)),
      (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(15)),
      (output_rsci_data_out_d(30)), (attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d(30)),
      STD_LOGIC_VECTOR'( operator_40_24_true_AC_TRN_AC_WRAP_or_10_cse & and_dcpl_1793
      & and_dcpl_1797 & and_dcpl_1802));
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_45_nl <= MUX1HOT_s_1_3_2((reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(14)),
      (output_rsci_data_out_d(29)), (attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d(29)),
      STD_LOGIC_VECTOR'( and_dcpl_1793 & and_dcpl_1797 & and_dcpl_1802));
  operator_40_24_true_AC_TRN_AC_WRAP_and_24_nl <= operator_40_24_true_AC_TRN_AC_WRAP_mux1h_45_nl
      AND operator_40_24_true_AC_TRN_AC_WRAP_nor_13_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_46_nl <= MUX1HOT_s_1_4_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(1)),
      (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(13)),
      (output_rsci_data_out_d(28)), (attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d(28)),
      STD_LOGIC_VECTOR'( operator_40_24_true_AC_TRN_AC_WRAP_or_10_cse & and_dcpl_1793
      & and_dcpl_1797 & and_dcpl_1802));
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_47_nl <= MUX1HOT_s_1_3_2((reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(12)),
      (output_rsci_data_out_d(27)), (attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d(27)),
      STD_LOGIC_VECTOR'( and_dcpl_1793 & and_dcpl_1797 & and_dcpl_1802));
  operator_40_24_true_AC_TRN_AC_WRAP_and_25_nl <= operator_40_24_true_AC_TRN_AC_WRAP_mux1h_47_nl
      AND operator_40_24_true_AC_TRN_AC_WRAP_nor_13_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_48_nl <= MUX1HOT_s_1_4_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(1)),
      (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(11)),
      (output_rsci_data_out_d(26)), (attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d(26)),
      STD_LOGIC_VECTOR'( operator_40_24_true_AC_TRN_AC_WRAP_or_10_cse & and_dcpl_1793
      & and_dcpl_1797 & and_dcpl_1802));
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_49_nl <= MUX1HOT_s_1_3_2((reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(10)),
      (output_rsci_data_out_d(25)), (attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d(25)),
      STD_LOGIC_VECTOR'( and_dcpl_1793 & and_dcpl_1797 & and_dcpl_1802));
  operator_40_24_true_AC_TRN_AC_WRAP_and_26_nl <= operator_40_24_true_AC_TRN_AC_WRAP_mux1h_49_nl
      AND operator_40_24_true_AC_TRN_AC_WRAP_nor_13_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_50_nl <= MUX1HOT_s_1_4_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(1)),
      (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(9)),
      (output_rsci_data_out_d(24)), (attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d(24)),
      STD_LOGIC_VECTOR'( operator_40_24_true_AC_TRN_AC_WRAP_or_10_cse & and_dcpl_1793
      & and_dcpl_1797 & and_dcpl_1802));
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_51_nl <= MUX1HOT_s_1_3_2((reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(8)),
      (output_rsci_data_out_d(23)), (attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d(23)),
      STD_LOGIC_VECTOR'( and_dcpl_1793 & and_dcpl_1797 & and_dcpl_1802));
  operator_40_24_true_AC_TRN_AC_WRAP_and_27_nl <= operator_40_24_true_AC_TRN_AC_WRAP_mux1h_51_nl
      AND operator_40_24_true_AC_TRN_AC_WRAP_nor_13_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_52_nl <= MUX1HOT_s_1_4_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(1)),
      (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(7)),
      (output_rsci_data_out_d(22)), (attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d(22)),
      STD_LOGIC_VECTOR'( operator_40_24_true_AC_TRN_AC_WRAP_or_10_cse & and_dcpl_1793
      & and_dcpl_1797 & and_dcpl_1802));
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_53_nl <= MUX1HOT_s_1_3_2((reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(6)),
      (output_rsci_data_out_d(21)), (attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d(21)),
      STD_LOGIC_VECTOR'( and_dcpl_1793 & and_dcpl_1797 & and_dcpl_1802));
  operator_40_24_true_AC_TRN_AC_WRAP_and_28_nl <= operator_40_24_true_AC_TRN_AC_WRAP_mux1h_53_nl
      AND operator_40_24_true_AC_TRN_AC_WRAP_nor_13_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_54_nl <= MUX1HOT_s_1_4_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(1)),
      (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(5)),
      (output_rsci_data_out_d(20)), (attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d(20)),
      STD_LOGIC_VECTOR'( operator_40_24_true_AC_TRN_AC_WRAP_or_10_cse & and_dcpl_1793
      & and_dcpl_1797 & and_dcpl_1802));
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_55_nl <= MUX1HOT_s_1_3_2((reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(4)),
      (output_rsci_data_out_d(19)), (attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d(19)),
      STD_LOGIC_VECTOR'( and_dcpl_1793 & and_dcpl_1797 & and_dcpl_1802));
  operator_40_24_true_AC_TRN_AC_WRAP_and_29_nl <= operator_40_24_true_AC_TRN_AC_WRAP_mux1h_55_nl
      AND operator_40_24_true_AC_TRN_AC_WRAP_nor_13_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_56_nl <= MUX1HOT_s_1_4_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(1)),
      (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(3)),
      (output_rsci_data_out_d(18)), (attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d(18)),
      STD_LOGIC_VECTOR'( operator_40_24_true_AC_TRN_AC_WRAP_or_10_cse & and_dcpl_1793
      & and_dcpl_1797 & and_dcpl_1802));
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_57_nl <= MUX1HOT_s_1_3_2((reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(2)),
      (output_rsci_data_out_d(17)), (attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d(17)),
      STD_LOGIC_VECTOR'( and_dcpl_1793 & and_dcpl_1797 & and_dcpl_1802));
  operator_40_24_true_AC_TRN_AC_WRAP_and_30_nl <= operator_40_24_true_AC_TRN_AC_WRAP_mux1h_57_nl
      AND operator_40_24_true_AC_TRN_AC_WRAP_nor_13_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_58_nl <= MUX1HOT_s_1_4_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd(1)),
      (reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1(1)),
      (output_rsci_data_out_d(16)), (attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d(16)),
      STD_LOGIC_VECTOR'( operator_40_24_true_AC_TRN_AC_WRAP_or_10_cse & and_dcpl_1793
      & and_dcpl_1797 & and_dcpl_1802));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_103_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(21))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(21))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(21))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(21))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(21))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(21))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(21))),
      13), 14) + CONV_SIGNED(CONV_SIGNED(SIGNED(reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_2
      & reg_attention_round_1_qr_39_16_3_lpi_3_dfm_1_ftd_3), 12), 14), 14));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_102_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(23))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(23))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(23))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(23))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(23))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(23))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(23))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(23))),
      15), 16) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_103_nl),
      16), 16));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_101_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(25))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(25))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(25))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(25))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(25))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(25))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(25))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(25))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(25))),
      17), 18) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_102_nl),
      18), 18));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_100_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(27))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(27))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(27))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(27))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(27))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(27))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(27))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(27))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(27))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(27))),
      19), 20) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_101_nl),
      20), 20));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_54_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(27))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(27))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(27))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(27))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(27))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(27))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(27))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(27))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(27))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(27))),
      19), 20) + CONV_SIGNED(CONV_SIGNED(SIGNED(reg_SF_LOOP_3_acc_38_1_ftd & reg_SF_LOOP_3_acc_38_1_ftd_1
      & reg_SF_LOOP_3_acc_38_1_ftd_2), 18), 20), 20));
  and_2308_nl <= CONV_SL_1_1(fsm_output=STD_LOGIC_VECTOR'("011111110"));
  operator_40_24_true_AC_TRN_AC_WRAP_mux_135_nl <= MUX_v_20_2_2(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_100_nl),
      20)), STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_54_nl),
      20)), and_2308_nl);
  operator_40_24_true_AC_TRN_AC_WRAP_acc_114_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_mux_135_nl),
      28) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'( (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(35))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(29))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(29))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(29))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(29))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(29))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(29))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(29))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(29))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(29))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(29))),
      21), 28) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'( (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(35))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(29))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(31))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(31))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(31))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(31))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(31))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(31))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(31))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(31))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(31))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(31))),
      23), 28) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'( (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(35))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(31))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(31))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(33))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(33))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(33))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(33))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(33))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(33))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(33))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(33))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(33))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(33))),
      25), 28) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'( (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(35))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(33))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(33))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(33))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(35))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(35))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(35))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(35))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(35))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(35))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(35))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(35))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(35))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1(35))),
      27), 28), 28));
  LINEAR_FORWARD_NO_MUL_LOOP_5_2_else_if_acc_3_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(
      -SIGNED(attention_5_1_384_384_8_48_quantized_hidden_states_rsci_data_out_d(7
      DOWNTO 0)), 8));
  LINEAR_FORWARD_NO_MUL_LOOP_5_2_mux_3_nl <= MUX_v_8_2_2((attention_5_1_384_384_8_48_quantized_hidden_states_rsci_data_out_d(7
      DOWNTO 0)), STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(LINEAR_FORWARD_NO_MUL_LOOP_5_2_else_if_acc_3_nl),
      8)), LINEAR_FORWARD_NO_MUL_LOOP_5_1_LINEAR_FORWARD_NO_MUL_LOOP_5_1_and_1_cse_1);
  LINEAR_FORWARD_NO_MUL_LOOP_5_2_LINEAR_FORWARD_NO_MUL_LOOP_5_2_and_7_nl <= MUX_v_8_2_2(STD_LOGIC_VECTOR'("00000000"),
      LINEAR_FORWARD_NO_MUL_LOOP_5_2_mux_3_nl, LINEAR_FORWARD_NO_MUL_LOOP_5_2_exs_2_0);
  LINEAR_FORWARD_NO_MUL_LOOP_5_3_else_if_acc_3_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(
      -SIGNED(attention_5_1_384_384_8_48_quantized_final_output_rsci_data_out_d(7
      DOWNTO 0)), 8));
  LINEAR_FORWARD_NO_MUL_LOOP_5_3_mux_8_nl <= MUX_v_8_2_2((attention_5_1_384_384_8_48_quantized_final_output_rsci_data_out_d(7
      DOWNTO 0)), STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(LINEAR_FORWARD_NO_MUL_LOOP_5_3_else_if_acc_3_nl),
      8)), LINEAR_FORWARD_NO_MUL_LOOP_5_1_LINEAR_FORWARD_NO_MUL_LOOP_5_1_and_1_cse_1);
  LINEAR_FORWARD_NO_MUL_LOOP_5_3_LINEAR_FORWARD_NO_MUL_LOOP_5_3_and_6_nl <= MUX_v_8_2_2(STD_LOGIC_VECTOR'("00000000"),
      LINEAR_FORWARD_NO_MUL_LOOP_5_3_mux_8_nl, LINEAR_FORWARD_NO_MUL_LOOP_5_2_exs_2_0);
  operator_40_24_true_AC_TRN_AC_WRAP_or_23_nl <= and_dcpl_1793 OR and_dcpl_1802;
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_59_nl <= MUX1HOT_v_28_3_2(STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_114_nl),
      28)), STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(LINEAR_FORWARD_NO_MUL_LOOP_5_2_LINEAR_FORWARD_NO_MUL_LOOP_5_2_and_7_nl),28)),
      STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(LINEAR_FORWARD_NO_MUL_LOOP_5_3_LINEAR_FORWARD_NO_MUL_LOOP_5_3_and_6_nl),28)),
      STD_LOGIC_VECTOR'( operator_40_24_true_AC_TRN_AC_WRAP_or_10_cse & operator_40_24_true_AC_TRN_AC_WRAP_or_23_nl
      & and_dcpl_1797));
  z_out_56 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'(
      operator_40_24_true_AC_TRN_AC_WRAP_and_17_cse & operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_1_cse
      & operator_40_24_true_AC_TRN_AC_WRAP_and_17_cse & operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_1_cse
      & operator_40_24_true_AC_TRN_AC_WRAP_and_17_cse & operator_40_24_true_AC_TRN_AC_WRAP_and_19_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_mux1h_36_nl & operator_40_24_true_AC_TRN_AC_WRAP_and_20_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_mux1h_38_nl & operator_40_24_true_AC_TRN_AC_WRAP_and_21_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_mux1h_40_nl & operator_40_24_true_AC_TRN_AC_WRAP_and_22_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_mux1h_42_nl & operator_40_24_true_AC_TRN_AC_WRAP_and_23_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_mux1h_44_nl & operator_40_24_true_AC_TRN_AC_WRAP_and_24_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_mux1h_46_nl & operator_40_24_true_AC_TRN_AC_WRAP_and_25_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_mux1h_48_nl & operator_40_24_true_AC_TRN_AC_WRAP_and_26_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_mux1h_50_nl & operator_40_24_true_AC_TRN_AC_WRAP_and_27_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_mux1h_52_nl & operator_40_24_true_AC_TRN_AC_WRAP_and_28_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_mux1h_54_nl & operator_40_24_true_AC_TRN_AC_WRAP_and_29_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_mux1h_56_nl & operator_40_24_true_AC_TRN_AC_WRAP_and_30_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_mux1h_58_nl), 29), 30) + CONV_UNSIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_mux1h_59_nl),
      30), 30));
  z_out_57 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(NOT (z_out_9(30 DOWNTO 0)))
      + UNSIGNED'( "0000000000000000000000000000001"), 31));
  operator_40_24_true_AC_TRN_AC_WRAP_mux_6_nl <= MUX_v_20_2_2((z_out_11(79 DOWNTO
      60)), STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(NOT (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(39
      DOWNTO 24))),20)), and_dcpl_1832);
  not_3405_nl <= NOT and_dcpl_1837;
  operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_4_nl
      <= MUX_v_20_2_2(STD_LOGIC_VECTOR'("00000000000000000000"), operator_40_24_true_AC_TRN_AC_WRAP_mux_6_nl,
      not_3405_nl);
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_14_nl <= MUX1HOT_v_24_3_2((z_out_11(59
      DOWNTO 36)), (NOT (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(23 DOWNTO 0))), (z_out_10(55
      DOWNTO 32)), STD_LOGIC_VECTOR'( and_dcpl_1825 & and_dcpl_1832 & and_dcpl_1837));
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_15_nl <= MUX1HOT_v_16_3_2((z_out_11(35
      DOWNTO 20)), STD_LOGIC_VECTOR'( "0100000000000000"), (z_out_10(31 DOWNTO 16)),
      STD_LOGIC_VECTOR'( and_dcpl_1825 & and_dcpl_1832 & and_dcpl_1837));
  operator_40_24_true_AC_TRN_AC_WRAP_mux_7_nl <= MUX_v_2_2_2(LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_12_sdt_42_41,
      STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(exs_tmp_40_54_10(44), 1),2)), and_dcpl_1832);
  not_3406_nl <= NOT and_dcpl_1837;
  operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_5_nl
      <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"), operator_40_24_true_AC_TRN_AC_WRAP_mux_7_nl,
      not_3406_nl);
  operator_40_24_true_AC_TRN_AC_WRAP_mux_8_nl <= MUX_s_1_2_2(LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_12_sdt_40,
      (exs_tmp_40_54_10(44)), and_dcpl_1832);
  operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_6_nl
      <= operator_40_24_true_AC_TRN_AC_WRAP_mux_8_nl AND (NOT and_dcpl_1837);
  operator_40_24_true_AC_TRN_AC_WRAP_mux_9_nl <= MUX_v_16_2_2((LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_12_sdt_39_0(39
      DOWNTO 24)), STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(exs_tmp_40_54_10(44 DOWNTO
      30)),16)), and_dcpl_1832);
  not_3408_nl <= NOT and_dcpl_1837;
  operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_7_nl
      <= MUX_v_16_2_2(STD_LOGIC_VECTOR'("0000000000000000"), operator_40_24_true_AC_TRN_AC_WRAP_mux_9_nl,
      not_3408_nl);
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_16_nl <= MUX1HOT_v_24_3_2((LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_12_sdt_39_0(23
      DOWNTO 0)), (exs_tmp_40_54_10(29 DOWNTO 6)), (GEMM_3D_FLOAT_LOOP_4_acc_193_itm(39
      DOWNTO 16)), STD_LOGIC_VECTOR'( and_dcpl_1825 & and_dcpl_1832 & and_dcpl_1837));
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_17_nl <= MUX1HOT_v_6_3_2((operator_40_24_true_AC_TRN_AC_WRAP_acc_8_psp_56_0(17
      DOWNTO 12)), (exs_tmp_40_54_10(5 DOWNTO 0)), (GEMM_3D_FLOAT_LOOP_4_acc_193_itm(15
      DOWNTO 10)), STD_LOGIC_VECTOR'( and_dcpl_1825 & and_dcpl_1832 & and_dcpl_1837));
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_18_nl <= MUX1HOT_v_10_3_2((operator_40_24_true_AC_TRN_AC_WRAP_acc_8_psp_56_0(11
      DOWNTO 2)), ((z_out_41_52_8(1 DOWNTO 0)) & (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_sdt_1(1
      DOWNTO 0)) & (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_sdt(5 DOWNTO 0))), (GEMM_3D_FLOAT_LOOP_4_acc_193_itm(9
      DOWNTO 0)), STD_LOGIC_VECTOR'( and_dcpl_1825 & and_dcpl_1832 & and_dcpl_1837));
  z_out_58 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_4_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_mux1h_14_nl & operator_40_24_true_AC_TRN_AC_WRAP_mux1h_15_nl),
      60), 61) + CONV_UNSIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_5_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_6_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_and_7_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_mux1h_16_nl & operator_40_24_true_AC_TRN_AC_WRAP_mux1h_17_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_mux1h_18_nl), 59), 61), 61));
  RMS_NORM_LOOP_1_1_or_12_nl <= and_dcpl_1853 OR and_dcpl_1869 OR and_dcpl_1870;
  RMS_NORM_LOOP_1_1_RMS_NORM_LOOP_1_1_mux_1_nl <= MUX_v_40_2_2((reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd
      & reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1),
      z_out_61, RMS_NORM_LOOP_1_1_or_12_nl);
  RMS_NORM_LOOP_1_1_or_13_nl <= (nor_609_cse AND nor_525_cse AND and_dcpl_1840) OR
      (and_dcpl_1855 AND and_dcpl_1070) OR (and_dcpl_176 AND CONV_SL_1_1(fsm_output(5
      DOWNTO 4)=STD_LOGIC_VECTOR'("01")) AND and_dcpl_1857);
  RMS_NORM_LOOP_1_1_or_14_nl <= and_dcpl_1853 OR (and_dcpl_1852 AND and_dcpl_1840)
      OR and_dcpl_1869;
  and_2319_nl <= and_dcpl_176 AND and_dcpl_829 AND (fsm_output(3)) AND (fsm_output(1))
      AND and_dcpl_107;
  and_2320_nl <= and_dcpl_1852 AND and_dcpl_1857;
  RMS_NORM_LOOP_1_1_mux1h_14_nl <= MUX1HOT_v_40_5_2((z_out_11(55 DOWNTO 16)), LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_12_sdt_39_0,
      (z_out_10(55 DOWNTO 16)), LINEAR_FORWARD_NO_MUL_LOOP_2_2_acc_13_psp_39_0, QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva,
      STD_LOGIC_VECTOR'( RMS_NORM_LOOP_1_1_or_13_nl & RMS_NORM_LOOP_1_1_or_14_nl
      & and_2319_nl & and_2320_nl & and_dcpl_1870));
  z_out_59 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(RMS_NORM_LOOP_1_1_RMS_NORM_LOOP_1_1_mux_1_nl)
      + UNSIGNED(RMS_NORM_LOOP_1_1_mux1h_14_nl), 40));
  SOFTMAX_LOOP_4_x_mux_4_nl <= MUX_v_40_2_2((attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d(39
      DOWNTO 0)), (reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd
      & reg_GEMM_3D_FLOAT_LOOP_4_17_slc_GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mul_55_16_ftd_1),
      and_dcpl_1884);
  SOFTMAX_LOOP_4_x_SOFTMAX_LOOP_4_x_nand_1_nl <= NOT(and_dcpl_1884 AND (NOT(and_dcpl_749
      AND CONV_SL_1_1(fsm_output(5 DOWNTO 0)=STD_LOGIC_VECTOR'("010110")))));
  SOFTMAX_LOOP_4_x_mux_5_nl <= MUX_s_1_2_2((NOT (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(39))),
      reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd,
      and_dcpl_1884);
  SOFTMAX_LOOP_4_x_mux_6_nl <= MUX_v_24_2_2((NOT (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(38
      DOWNTO 15))), reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1,
      and_dcpl_1884);
  SOFTMAX_LOOP_4_x_mux_7_nl <= MUX_v_15_2_2((NOT (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(14
      DOWNTO 0))), reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_2,
      and_dcpl_1884);
  acc_57_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SOFTMAX_LOOP_4_x_mux_4_nl
      & SOFTMAX_LOOP_4_x_SOFTMAX_LOOP_4_x_nand_1_nl) + UNSIGNED(SOFTMAX_LOOP_4_x_mux_5_nl
      & SOFTMAX_LOOP_4_x_mux_6_nl & SOFTMAX_LOOP_4_x_mux_7_nl & '1'), 41));
  z_out_60 <= acc_57_nl(40 DOWNTO 1);
  nor_921_nl <= NOT(CONV_SL_1_1(fsm_output(6 DOWNTO 5)/=STD_LOGIC_VECTOR'("10")));
  mux_1100_nl <= MUX_s_1_2_2(nor_921_nl, nor_696_cse, fsm_output(4));
  nor_923_nl <= NOT(CONV_SL_1_1(fsm_output(6 DOWNTO 4)/=STD_LOGIC_VECTOR'("011")));
  mux_1099_nl <= MUX_s_1_2_2(mux_1100_nl, nor_923_nl, fsm_output(3));
  GEMM_3D_FLOAT_LOOP_4_or_30_nl <= (mux_1099_nl AND (fsm_output(7)) AND nor_439_cse
      AND and_dcpl_107) OR and_dcpl_1901 OR (and_dcpl_749 AND (fsm_output(5)) AND
      (fsm_output(4)) AND (NOT (fsm_output(3))) AND (fsm_output(1)) AND and_dcpl_107);
  GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mux_9_nl <= MUX_v_40_2_2(GEMM_3D_FLOAT_LOOP_4_acc_212_mx0w8,
      z_out_62, GEMM_3D_FLOAT_LOOP_4_or_30_nl);
  GEMM_3D_FLOAT_LOOP_4_mux_28_nl <= MUX_v_40_2_2(LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_13_sdt_39_0,
      LINEAR_FORWARD_NO_MUL_LOOP_2_2_acc_13_psp_39_0, and_dcpl_1901);
  z_out_61 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_4_GEMM_3D_FLOAT_LOOP_4_mux_9_nl)
      + UNSIGNED(GEMM_3D_FLOAT_LOOP_4_mux_28_nl), 40));
  GEMM_3D_FLOAT_LOOP_4_acc_255_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(z_out_60)
      + UNSIGNED(LINEAR_FORWARD_NO_MUL_LOOP_2_1_acc_13_sdt_39_0), 40));
  GEMM_3D_FLOAT_LOOP_4_mux1h_47_nl <= MUX1HOT_v_40_3_2(GEMM_3D_FLOAT_LOOP_4_acc_212_mx0w8,
      (z_out_11(55 DOWNTO 16)), STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_4_acc_255_nl),
      40)), STD_LOGIC_VECTOR'( and_dcpl_1910 & and_dcpl_1917 & and_dcpl_1923));
  GEMM_3D_FLOAT_LOOP_4_mux1h_48_nl <= MUX1HOT_s_1_3_2((GEMM_3D_FLOAT_LOOP_4_acc_193_itm(39)),
      reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd,
      (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_12_sdt_39_0(39)), STD_LOGIC_VECTOR'( and_dcpl_1910
      & and_dcpl_1917 & and_dcpl_1923));
  GEMM_3D_FLOAT_LOOP_4_mux1h_49_nl <= MUX1HOT_v_24_3_2((GEMM_3D_FLOAT_LOOP_4_acc_193_itm(38
      DOWNTO 15)), reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_1,
      (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_12_sdt_39_0(38 DOWNTO 15)), STD_LOGIC_VECTOR'(
      and_dcpl_1910 & and_dcpl_1917 & and_dcpl_1923));
  GEMM_3D_FLOAT_LOOP_4_mux1h_50_nl <= MUX1HOT_v_15_3_2((GEMM_3D_FLOAT_LOOP_4_acc_193_itm(14
      DOWNTO 0)), reg_GEMM_3D_FLOAT_LOOP_4_1_4_slc_GEMM_3D_FLOAT_LOOP_4_1_GEMM_3D_FLOAT_LOOP_4_1_mul_55_16_ftd_2,
      (LINEAR_FORWARD_NO_MUL_LOOP_2_3_acc_12_sdt_39_0(14 DOWNTO 0)), STD_LOGIC_VECTOR'(
      and_dcpl_1910 & and_dcpl_1917 & and_dcpl_1923));
  z_out_62 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_4_mux1h_47_nl)
      + UNSIGNED(GEMM_3D_FLOAT_LOOP_4_mux1h_48_nl & GEMM_3D_FLOAT_LOOP_4_mux1h_49_nl
      & GEMM_3D_FLOAT_LOOP_4_mux1h_50_nl), 40));
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    dut
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.mgc_shift_comps_v5.ALL;
USE mgc_hls.ram_sync_dualRW_be_pkg.ALL;


ENTITY dut IS
  PORT(
    clk : IN STD_LOGIC;
    en : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    strm_in_rsc_dat : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
    strm_in_rsc_vld : IN STD_LOGIC;
    strm_in_rsc_rdy : OUT STD_LOGIC;
    strm_out_rsc_dat : OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
    strm_out_rsc_vld : OUT STD_LOGIC;
    strm_out_rsc_rdy : IN STD_LOGIC
  );
END dut;

ARCHITECTURE v1 OF dut IS
  -- Default Constants
  CONSTANT PWR : STD_LOGIC := '1';

  -- Interconnect Declarations
  SIGNAL input_rsci_data_in_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL input_rsci_addr_d : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL input_rsci_re_d : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL input_rsci_we_d : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL input_rsci_data_out_d : STD_LOGIC_VECTOR (79 DOWNTO 0);
  SIGNAL input_rsci_en_d : STD_LOGIC;
  SIGNAL output_rsci_data_in_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL output_rsci_addr_d : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL output_rsci_re_d : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL output_rsci_we_d : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL output_rsci_data_out_d : STD_LOGIC_VECTOR (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_data_in_d : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_addr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_re_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_we_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_data_out_d : STD_LOGIC_VECTOR
      (15 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_data_in_d : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_addr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_re_d : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_we_d : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_data_in_d : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_addr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_re_d : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_we_d : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_data_out_d : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_data_in_d : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_addr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_re_d : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_we_d : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_data_out_d : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_data_in_d : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_addr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_re_d : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_we_d : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_data_out_d : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_data_in_d : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_addr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_re_d : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_we_d : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_data_out_d : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_data_in_d : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_addr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_re_d : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_we_d : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_data_out_d : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_data_in_d : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_addr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_re_d : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_we_d : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_data_out_d : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_data_in_d : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_addr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_re_d : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_we_d : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_data_out_d : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_data_in_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_addr_d : STD_LOGIC_VECTOR (11
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_re_d : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_we_d : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_data_out_d : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_data_in_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_addr_d : STD_LOGIC_VECTOR (11
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_re_d : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_we_d : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_data_out_d : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_data_in_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_addr_d : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_re_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_we_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_data_out_d : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_data_in_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_addr_d : STD_LOGIC_VECTOR (5
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_re_d : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_we_d : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_data_in_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_addr_d : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_re_d : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_we_d : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_data_out_d : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_data_in_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_addr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_re_d : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_we_d : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_data_out_d : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_data_in_d : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_addr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_re_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_we_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_data_out_d : STD_LOGIC_VECTOR
      (15 DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_data_in_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_addr_d : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_re_d : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_we_d : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_data_out_d : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_data_in_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_addr_d : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_re_d : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_we_d : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_data_out_d : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL input_rsc_en : STD_LOGIC;
  SIGNAL input_rsc_data_out : STD_LOGIC_VECTOR (79 DOWNTO 0);
  SIGNAL input_rsc_we : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL input_rsc_re : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL input_rsc_addr : STD_LOGIC_VECTOR (17 DOWNTO 0);
  SIGNAL input_rsc_data_in : STD_LOGIC_VECTOR (79 DOWNTO 0);
  SIGNAL output_rsc_en : STD_LOGIC;
  SIGNAL output_rsc_data_out : STD_LOGIC_VECTOR (79 DOWNTO 0);
  SIGNAL output_rsc_we : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL output_rsc_re : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL output_rsc_addr : STD_LOGIC_VECTOR (17 DOWNTO 0);
  SIGNAL output_rsc_data_in : STD_LOGIC_VECTOR (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsc_en : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsc_data_out : STD_LOGIC_VECTOR
      (15 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsc_we : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsc_re : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsc_addr : STD_LOGIC_VECTOR
      (17 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsc_data_in : STD_LOGIC_VECTOR
      (15 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsc_en : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsc_data_out : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsc_we : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsc_re : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsc_addr : STD_LOGIC_VECTOR (17 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsc_data_in : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsc_en : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsc_data_out : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsc_we : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsc_re : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsc_addr : STD_LOGIC_VECTOR (17 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsc_data_in : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsc_en : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsc_data_out : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsc_we : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsc_re : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsc_addr : STD_LOGIC_VECTOR (17 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsc_data_in : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsc_en : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsc_data_out : STD_LOGIC_VECTOR (79 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsc_we : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsc_re : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsc_addr : STD_LOGIC_VECTOR (17 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsc_data_in : STD_LOGIC_VECTOR (79 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsc_en : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsc_data_out : STD_LOGIC_VECTOR (79 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsc_we : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsc_re : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsc_addr : STD_LOGIC_VECTOR (17 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsc_data_in : STD_LOGIC_VECTOR (79 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsc_en : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsc_data_out : STD_LOGIC_VECTOR (79 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsc_we : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsc_re : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsc_addr : STD_LOGIC_VECTOR (17 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsc_data_in : STD_LOGIC_VECTOR (79 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsc_en : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsc_data_out : STD_LOGIC_VECTOR (79 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsc_we : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsc_re : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsc_addr : STD_LOGIC_VECTOR (17 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsc_data_in : STD_LOGIC_VECTOR (79 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsc_en : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsc_data_out : STD_LOGIC_VECTOR (79 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsc_we : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsc_re : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsc_addr : STD_LOGIC_VECTOR (17 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsc_data_in : STD_LOGIC_VECTOR (79 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsc_en : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsc_data_out : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsc_we : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsc_re : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsc_addr : STD_LOGIC_VECTOR (23 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsc_data_in : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsc_en : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsc_data_out : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsc_we : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsc_re : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsc_addr : STD_LOGIC_VECTOR (23 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsc_data_in : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsc_en : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsc_data_out : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsc_we : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsc_re : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsc_addr : STD_LOGIC_VECTOR
      (23 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsc_data_in : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsc_en : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsc_data_out : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsc_we : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsc_re : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsc_addr : STD_LOGIC_VECTOR (11
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsc_data_in : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsc_en : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsc_data_out : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsc_we : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsc_re : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsc_addr : STD_LOGIC_VECTOR (17 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsc_data_in : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsc_en : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsc_data_out : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsc_we : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsc_re : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsc_addr : STD_LOGIC_VECTOR (17
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsc_data_in : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsc_en : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsc_data_out : STD_LOGIC_VECTOR
      (15 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsc_we : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsc_re : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsc_addr : STD_LOGIC_VECTOR
      (17 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsc_data_in : STD_LOGIC_VECTOR
      (15 DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsc_en : STD_LOGIC;
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsc_data_out : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsc_we : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsc_re : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsc_addr : STD_LOGIC_VECTOR (17 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsc_data_in : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsc_en : STD_LOGIC;
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsc_data_out : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsc_we : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsc_re : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsc_addr : STD_LOGIC_VECTOR (17 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsc_data_in : STD_LOGIC_VECTOR (79
      DOWNTO 0);

  SIGNAL input_rsc_comp_data_in : STD_LOGIC_VECTOR (79 DOWNTO 0);
  SIGNAL input_rsc_comp_addr : STD_LOGIC_VECTOR (17 DOWNTO 0);
  SIGNAL input_rsc_comp_re : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL input_rsc_comp_we : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL input_rsc_comp_data_out : STD_LOGIC_VECTOR (79 DOWNTO 0);

  SIGNAL output_rsc_comp_data_in : STD_LOGIC_VECTOR (79 DOWNTO 0);
  SIGNAL output_rsc_comp_addr : STD_LOGIC_VECTOR (17 DOWNTO 0);
  SIGNAL output_rsc_comp_re : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL output_rsc_comp_we : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL output_rsc_comp_data_out : STD_LOGIC_VECTOR (79 DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_data_in : STD_LOGIC_VECTOR
      (15 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_addr : STD_LOGIC_VECTOR
      (17 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_re : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_we : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_data_out : STD_LOGIC_VECTOR
      (15 DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsc_comp_data_in : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsc_comp_addr : STD_LOGIC_VECTOR (17
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsc_comp_re : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsc_comp_we : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsc_comp_data_out : STD_LOGIC_VECTOR
      (79 DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsc_comp_data_in : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsc_comp_addr : STD_LOGIC_VECTOR (17
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsc_comp_re : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsc_comp_we : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsc_comp_data_out : STD_LOGIC_VECTOR
      (79 DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsc_comp_data_in : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsc_comp_addr : STD_LOGIC_VECTOR (17
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsc_comp_re : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsc_comp_we : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsc_comp_data_out : STD_LOGIC_VECTOR
      (79 DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_q_proj_rsc_comp_data_in : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsc_comp_addr : STD_LOGIC_VECTOR (17 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsc_comp_re : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsc_comp_we : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsc_comp_data_out : STD_LOGIC_VECTOR (79
      DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_k_proj_rsc_comp_data_in : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsc_comp_addr : STD_LOGIC_VECTOR (17 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsc_comp_re : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsc_comp_we : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsc_comp_data_out : STD_LOGIC_VECTOR (79
      DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_v_proj_rsc_comp_data_in : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsc_comp_addr : STD_LOGIC_VECTOR (17 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsc_comp_re : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsc_comp_we : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsc_comp_data_out : STD_LOGIC_VECTOR (79
      DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_q_embed_rsc_comp_data_in : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsc_comp_addr : STD_LOGIC_VECTOR (17
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsc_comp_re : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsc_comp_we : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsc_comp_data_out : STD_LOGIC_VECTOR
      (79 DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_k_embed_rsc_comp_data_in : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsc_comp_addr : STD_LOGIC_VECTOR (17
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsc_comp_re : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsc_comp_we : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsc_comp_data_out : STD_LOGIC_VECTOR
      (79 DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_data_in : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_addr : STD_LOGIC_VECTOR
      (23 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_re : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_we : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_data_out : STD_LOGIC_VECTOR
      (79 DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_data_in : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_addr : STD_LOGIC_VECTOR
      (23 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_re : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_we : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_data_out : STD_LOGIC_VECTOR
      (79 DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_data_in : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_addr : STD_LOGIC_VECTOR
      (23 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_re : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_we : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_data_out : STD_LOGIC_VECTOR
      (79 DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsc_comp_data_in : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsc_comp_addr : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsc_comp_re : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsc_comp_we : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsc_comp_data_out : STD_LOGIC_VECTOR
      (79 DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_attn_output_rsc_comp_data_in : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsc_comp_addr : STD_LOGIC_VECTOR
      (17 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsc_comp_re : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsc_comp_we : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsc_comp_data_out : STD_LOGIC_VECTOR
      (79 DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_data_in : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_addr : STD_LOGIC_VECTOR
      (17 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_re : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_we : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_data_out : STD_LOGIC_VECTOR
      (79 DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_data_in : STD_LOGIC_VECTOR
      (15 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_addr : STD_LOGIC_VECTOR
      (17 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_re : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_we : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_data_out : STD_LOGIC_VECTOR
      (15 DOWNTO 0);

  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_data_in : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_addr : STD_LOGIC_VECTOR (17
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_re : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_we : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_data_out : STD_LOGIC_VECTOR
      (79 DOWNTO 0);

  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_data_in : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_addr : STD_LOGIC_VECTOR (17
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_re : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_we : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_data_out : STD_LOGIC_VECTOR
      (79 DOWNTO 0);

  COMPONENT dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_3_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    PORT(
      en : OUT STD_LOGIC;
      data_out : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
      data_in : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
      data_in_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      addr_d : IN STD_LOGIC_VECTOR (17 DOWNTO 0);
      re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      data_out_d : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
      en_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL input_rsci_data_out : STD_LOGIC_VECTOR (79 DOWNTO 0);
  SIGNAL input_rsci_we : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL input_rsci_re : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL input_rsci_addr : STD_LOGIC_VECTOR (17 DOWNTO 0);
  SIGNAL input_rsci_data_in : STD_LOGIC_VECTOR (79 DOWNTO 0);
  SIGNAL input_rsci_data_in_d_1 : STD_LOGIC_VECTOR (79 DOWNTO 0);
  SIGNAL input_rsci_addr_d_1 : STD_LOGIC_VECTOR (17 DOWNTO 0);
  SIGNAL input_rsci_re_d_1 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL input_rsci_we_d_1 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL input_rsci_data_out_d_1 : STD_LOGIC_VECTOR (79 DOWNTO 0);

  COMPONENT dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_4_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    PORT(
      en : OUT STD_LOGIC;
      data_out : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
      data_in : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
      data_in_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      addr_d : IN STD_LOGIC_VECTOR (17 DOWNTO 0);
      re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      data_out_d : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
      en_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL output_rsci_data_out : STD_LOGIC_VECTOR (79 DOWNTO 0);
  SIGNAL output_rsci_we : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL output_rsci_re : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL output_rsci_addr : STD_LOGIC_VECTOR (17 DOWNTO 0);
  SIGNAL output_rsci_data_in : STD_LOGIC_VECTOR (79 DOWNTO 0);
  SIGNAL output_rsci_data_in_d_1 : STD_LOGIC_VECTOR (79 DOWNTO 0);
  SIGNAL output_rsci_addr_d_1 : STD_LOGIC_VECTOR (17 DOWNTO 0);
  SIGNAL output_rsci_re_d_1 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL output_rsci_we_d_1 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL output_rsci_data_out_d_1 : STD_LOGIC_VECTOR (79 DOWNTO 0);

  COMPONENT dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_5_384_8_9_0_1_1_0_0_1_1_8_384_2_gen
    PORT(
      en : OUT STD_LOGIC;
      data_out : IN STD_LOGIC_VECTOR (15 DOWNTO 0);
      we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
      data_in : OUT STD_LOGIC_VECTOR (15 DOWNTO 0);
      data_in_d : IN STD_LOGIC_VECTOR (15 DOWNTO 0);
      addr_d : IN STD_LOGIC_VECTOR (17 DOWNTO 0);
      re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      data_out_d : OUT STD_LOGIC_VECTOR (15 DOWNTO 0);
      en_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_data_out : STD_LOGIC_VECTOR
      (15 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_we : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_re : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_addr : STD_LOGIC_VECTOR
      (17 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_data_in : STD_LOGIC_VECTOR
      (15 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_data_in_d_1 : STD_LOGIC_VECTOR
      (15 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_addr_d_1 : STD_LOGIC_VECTOR
      (17 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_re_d_1 : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_we_d_1 : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_data_out_d_1 : STD_LOGIC_VECTOR
      (15 DOWNTO 0);

  COMPONENT dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_6_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    PORT(
      en : OUT STD_LOGIC;
      data_out : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
      data_in : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
      data_in_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      addr_d : IN STD_LOGIC_VECTOR (17 DOWNTO 0);
      re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      data_out_d : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
      en_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_data_out : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_we : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_re : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_addr : STD_LOGIC_VECTOR (17 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_data_in : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_data_in_d_1 : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_addr_d_1 : STD_LOGIC_VECTOR (17
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_re_d_1 : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_we_d_1 : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d_1 : STD_LOGIC_VECTOR
      (79 DOWNTO 0);

  COMPONENT dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_7_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    PORT(
      en : OUT STD_LOGIC;
      data_out : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
      data_in : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
      data_in_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      addr_d : IN STD_LOGIC_VECTOR (17 DOWNTO 0);
      re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      data_out_d : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
      en_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_data_out : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_we : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_re : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_addr : STD_LOGIC_VECTOR (17 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_data_in : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_data_in_d_1 : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_addr_d_1 : STD_LOGIC_VECTOR (17
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_re_d_1 : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_we_d_1 : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_data_out_d_1 : STD_LOGIC_VECTOR
      (79 DOWNTO 0);

  COMPONENT dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_8_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    PORT(
      en : OUT STD_LOGIC;
      data_out : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
      data_in : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
      data_in_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      addr_d : IN STD_LOGIC_VECTOR (17 DOWNTO 0);
      re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      data_out_d : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
      en_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_data_out : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_we : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_re : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_addr : STD_LOGIC_VECTOR (17 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_data_in : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_data_in_d_1 : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_addr_d_1 : STD_LOGIC_VECTOR (17
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_re_d_1 : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_we_d_1 : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_data_out_d_1 : STD_LOGIC_VECTOR
      (79 DOWNTO 0);

  COMPONENT dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_9_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    PORT(
      en : OUT STD_LOGIC;
      data_out : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
      data_in : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
      data_in_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      addr_d : IN STD_LOGIC_VECTOR (17 DOWNTO 0);
      re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      data_out_d : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
      en_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_data_out : STD_LOGIC_VECTOR (79 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_we : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_re : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_addr : STD_LOGIC_VECTOR (17 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_data_in : STD_LOGIC_VECTOR (79 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_data_in_d_1 : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_addr_d_1 : STD_LOGIC_VECTOR (17 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_re_d_1 : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_we_d_1 : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_data_out_d_1 : STD_LOGIC_VECTOR (79
      DOWNTO 0);

  COMPONENT dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_10_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    PORT(
      en : OUT STD_LOGIC;
      data_out : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
      data_in : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
      data_in_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      addr_d : IN STD_LOGIC_VECTOR (17 DOWNTO 0);
      re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      data_out_d : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
      en_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_data_out : STD_LOGIC_VECTOR (79 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_we : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_re : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_addr : STD_LOGIC_VECTOR (17 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_data_in : STD_LOGIC_VECTOR (79 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_data_in_d_1 : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_addr_d_1 : STD_LOGIC_VECTOR (17 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_re_d_1 : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_we_d_1 : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_data_out_d_1 : STD_LOGIC_VECTOR (79
      DOWNTO 0);

  COMPONENT dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_11_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    PORT(
      en : OUT STD_LOGIC;
      data_out : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
      data_in : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
      data_in_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      addr_d : IN STD_LOGIC_VECTOR (17 DOWNTO 0);
      re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      data_out_d : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
      en_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_data_out : STD_LOGIC_VECTOR (79 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_we : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_re : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_addr : STD_LOGIC_VECTOR (17 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_data_in : STD_LOGIC_VECTOR (79 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_data_in_d_1 : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_addr_d_1 : STD_LOGIC_VECTOR (17 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_re_d_1 : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_we_d_1 : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_data_out_d_1 : STD_LOGIC_VECTOR (79
      DOWNTO 0);

  COMPONENT dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_12_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    PORT(
      en : OUT STD_LOGIC;
      data_out : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
      data_in : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
      data_in_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      addr_d : IN STD_LOGIC_VECTOR (17 DOWNTO 0);
      re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      data_out_d : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
      en_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_data_out : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_we : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_re : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_addr : STD_LOGIC_VECTOR (17 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_data_in : STD_LOGIC_VECTOR (79 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_data_in_d_1 : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_addr_d_1 : STD_LOGIC_VECTOR (17
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_re_d_1 : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_we_d_1 : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_data_out_d_1 : STD_LOGIC_VECTOR
      (79 DOWNTO 0);

  COMPONENT dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_13_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    PORT(
      en : OUT STD_LOGIC;
      data_out : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
      data_in : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
      data_in_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      addr_d : IN STD_LOGIC_VECTOR (17 DOWNTO 0);
      re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      data_out_d : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
      en_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_data_out : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_we : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_re : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_addr : STD_LOGIC_VECTOR (17 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_data_in : STD_LOGIC_VECTOR (79 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_data_in_d_1 : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_addr_d_1 : STD_LOGIC_VECTOR (17
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_re_d_1 : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_we_d_1 : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_data_out_d_1 : STD_LOGIC_VECTOR
      (79 DOWNTO 0);

  COMPONENT dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_14_2304_40_12_0_1_1_0_0_1_1_40_2304_2_gen
    PORT(
      en : OUT STD_LOGIC;
      data_out : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      addr : OUT STD_LOGIC_VECTOR (23 DOWNTO 0);
      data_in : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
      data_in_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      addr_d : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
      re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      data_out_d : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
      en_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_data_out : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_we : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_re : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_addr : STD_LOGIC_VECTOR (23
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_data_in : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_data_in_d_1 : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_addr_d_1 : STD_LOGIC_VECTOR
      (23 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_re_d_1 : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_we_d_1 : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_data_out_d_1 : STD_LOGIC_VECTOR
      (79 DOWNTO 0);

  COMPONENT dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_15_2304_40_12_0_1_1_0_0_1_1_40_2304_2_gen
    PORT(
      en : OUT STD_LOGIC;
      data_out : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      addr : OUT STD_LOGIC_VECTOR (23 DOWNTO 0);
      data_in : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
      data_in_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      addr_d : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
      re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      data_out_d : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
      en_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_data_out : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_we : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_re : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_addr : STD_LOGIC_VECTOR (23
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_data_in : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_data_in_d_1 : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_addr_d_1 : STD_LOGIC_VECTOR
      (23 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_re_d_1 : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_we_d_1 : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_data_out_d_1 : STD_LOGIC_VECTOR
      (79 DOWNTO 0);

  COMPONENT dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_16_2304_40_12_0_1_1_0_0_1_1_40_2304_2_gen
    PORT(
      en : OUT STD_LOGIC;
      data_out : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      addr : OUT STD_LOGIC_VECTOR (23 DOWNTO 0);
      data_in : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
      data_in_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      addr_d : IN STD_LOGIC_VECTOR (23 DOWNTO 0);
      re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      data_out_d : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
      en_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_data_out : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_we : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_re : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_addr : STD_LOGIC_VECTOR
      (23 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_data_in : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_data_in_d_1 : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_addr_d_1 : STD_LOGIC_VECTOR
      (23 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_re_d_1 : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_we_d_1 : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_data_out_d_1 : STD_LOGIC_VECTOR
      (79 DOWNTO 0);

  COMPONENT dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_17_48_40_6_0_1_1_0_0_1_1_40_48_2_gen
    PORT(
      en : OUT STD_LOGIC;
      data_out : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      addr : OUT STD_LOGIC_VECTOR (11 DOWNTO 0);
      data_in : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
      data_in_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      addr_d : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
      re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      data_out_d : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
      en_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_data_out : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_we : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_re : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_addr : STD_LOGIC_VECTOR (11
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_data_in : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_data_in_d_1 : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_addr_d_1 : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_re_d_1 : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_we_d_1 : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d_1 : STD_LOGIC_VECTOR
      (79 DOWNTO 0);

  COMPONENT dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_18_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    PORT(
      en : OUT STD_LOGIC;
      data_out : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
      data_in : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
      data_in_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      addr_d : IN STD_LOGIC_VECTOR (17 DOWNTO 0);
      re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      data_out_d : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
      en_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_data_out : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_we : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_re : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_addr : STD_LOGIC_VECTOR (17
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_data_in : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_data_in_d_1 : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_addr_d_1 : STD_LOGIC_VECTOR
      (17 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_re_d_1 : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_we_d_1 : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_data_out_d_1 : STD_LOGIC_VECTOR
      (79 DOWNTO 0);

  COMPONENT dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_19_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    PORT(
      en : OUT STD_LOGIC;
      data_out : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
      data_in : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
      data_in_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      addr_d : IN STD_LOGIC_VECTOR (17 DOWNTO 0);
      re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      data_out_d : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
      en_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_data_out : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_we : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_re : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_addr : STD_LOGIC_VECTOR (17
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_data_in : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_data_in_d_1 : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_addr_d_1 : STD_LOGIC_VECTOR
      (17 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_re_d_1 : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_we_d_1 : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_data_out_d_1 : STD_LOGIC_VECTOR
      (79 DOWNTO 0);

  COMPONENT dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_20_384_8_9_0_1_1_0_0_1_1_8_384_2_gen
    PORT(
      en : OUT STD_LOGIC;
      data_out : IN STD_LOGIC_VECTOR (15 DOWNTO 0);
      we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
      data_in : OUT STD_LOGIC_VECTOR (15 DOWNTO 0);
      data_in_d : IN STD_LOGIC_VECTOR (15 DOWNTO 0);
      addr_d : IN STD_LOGIC_VECTOR (17 DOWNTO 0);
      re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      data_out_d : OUT STD_LOGIC_VECTOR (15 DOWNTO 0);
      en_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_data_out : STD_LOGIC_VECTOR
      (15 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_we : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_re : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_addr : STD_LOGIC_VECTOR
      (17 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_data_in : STD_LOGIC_VECTOR
      (15 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_data_in_d_1 : STD_LOGIC_VECTOR
      (15 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_addr_d_1 : STD_LOGIC_VECTOR
      (17 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_re_d_1 : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_we_d_1 : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_data_out_d_1 : STD_LOGIC_VECTOR
      (15 DOWNTO 0);

  COMPONENT dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_21_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    PORT(
      en : OUT STD_LOGIC;
      data_out : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
      data_in : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
      data_in_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      addr_d : IN STD_LOGIC_VECTOR (17 DOWNTO 0);
      re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      data_out_d : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
      en_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_data_out : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_we : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_re : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_addr : STD_LOGIC_VECTOR (17 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_data_in : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_data_in_d_1 : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_addr_d_1 : STD_LOGIC_VECTOR (17
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_re_d_1 : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_we_d_1 : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_data_out_d_1 : STD_LOGIC_VECTOR
      (79 DOWNTO 0);

  COMPONENT dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_22_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    PORT(
      en : OUT STD_LOGIC;
      data_out : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      we : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      re : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      addr : OUT STD_LOGIC_VECTOR (17 DOWNTO 0);
      data_in : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
      data_in_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      addr_d : IN STD_LOGIC_VECTOR (17 DOWNTO 0);
      re_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      we_d : IN STD_LOGIC_VECTOR (1 DOWNTO 0);
      data_out_d : OUT STD_LOGIC_VECTOR (79 DOWNTO 0);
      en_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_data_out : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_we : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_re : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_addr : STD_LOGIC_VECTOR (17 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_data_in : STD_LOGIC_VECTOR (79
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_data_in_d_1 : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_addr_d_1 : STD_LOGIC_VECTOR (17
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_re_d_1 : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_we_d_1 : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_data_out_d_1 : STD_LOGIC_VECTOR
      (79 DOWNTO 0);

  COMPONENT dut_core
    PORT(
      clk : IN STD_LOGIC;
      en : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      strm_in_rsc_dat : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
      strm_in_rsc_vld : IN STD_LOGIC;
      strm_in_rsc_rdy : OUT STD_LOGIC;
      strm_out_rsc_dat : OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
      strm_out_rsc_vld : OUT STD_LOGIC;
      strm_out_rsc_rdy : IN STD_LOGIC;
      input_rsci_data_in_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      input_rsci_addr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      input_rsci_re_d : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      input_rsci_we_d : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      input_rsci_data_out_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      input_rsci_en_d : OUT STD_LOGIC;
      output_rsci_data_in_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      output_rsci_addr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      output_rsci_re_d : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      output_rsci_we_d : OUT STD_LOGIC_VECTOR (1 DOWNTO 0);
      output_rsci_data_out_d : IN STD_LOGIC_VECTOR (79 DOWNTO 0);
      attention_5_1_384_384_8_48_quantized_hidden_states_rsci_data_in_d : OUT STD_LOGIC_VECTOR
          (7 DOWNTO 0);
      attention_5_1_384_384_8_48_quantized_hidden_states_rsci_addr_d : OUT STD_LOGIC_VECTOR
          (8 DOWNTO 0);
      attention_5_1_384_384_8_48_quantized_hidden_states_rsci_re_d : OUT STD_LOGIC_VECTOR
          (1 DOWNTO 0);
      attention_5_1_384_384_8_48_quantized_hidden_states_rsci_we_d : OUT STD_LOGIC_VECTOR
          (1 DOWNTO 0);
      attention_5_1_384_384_8_48_quantized_hidden_states_rsci_data_out_d : IN STD_LOGIC_VECTOR
          (15 DOWNTO 0);
      attention_5_1_384_384_8_48_q_proj_re_rsci_data_in_d : OUT STD_LOGIC_VECTOR
          (39 DOWNTO 0);
      attention_5_1_384_384_8_48_q_proj_re_rsci_addr_d : OUT STD_LOGIC_VECTOR (8
          DOWNTO 0);
      attention_5_1_384_384_8_48_q_proj_re_rsci_re_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
          0);
      attention_5_1_384_384_8_48_q_proj_re_rsci_we_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
          0);
      attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d : IN STD_LOGIC_VECTOR
          (79 DOWNTO 0);
      attention_5_1_384_384_8_48_k_proj_re_rsci_data_in_d : OUT STD_LOGIC_VECTOR
          (39 DOWNTO 0);
      attention_5_1_384_384_8_48_k_proj_re_rsci_addr_d : OUT STD_LOGIC_VECTOR (8
          DOWNTO 0);
      attention_5_1_384_384_8_48_k_proj_re_rsci_re_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
          0);
      attention_5_1_384_384_8_48_k_proj_re_rsci_we_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
          0);
      attention_5_1_384_384_8_48_k_proj_re_rsci_data_out_d : IN STD_LOGIC_VECTOR
          (79 DOWNTO 0);
      attention_5_1_384_384_8_48_v_proj_re_rsci_data_in_d : OUT STD_LOGIC_VECTOR
          (39 DOWNTO 0);
      attention_5_1_384_384_8_48_v_proj_re_rsci_addr_d : OUT STD_LOGIC_VECTOR (8
          DOWNTO 0);
      attention_5_1_384_384_8_48_v_proj_re_rsci_re_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
          0);
      attention_5_1_384_384_8_48_v_proj_re_rsci_we_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
          0);
      attention_5_1_384_384_8_48_v_proj_re_rsci_data_out_d : IN STD_LOGIC_VECTOR
          (79 DOWNTO 0);
      attention_5_1_384_384_8_48_q_proj_rsci_data_in_d : OUT STD_LOGIC_VECTOR (39
          DOWNTO 0);
      attention_5_1_384_384_8_48_q_proj_rsci_addr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
          0);
      attention_5_1_384_384_8_48_q_proj_rsci_re_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
          0);
      attention_5_1_384_384_8_48_q_proj_rsci_we_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
          0);
      attention_5_1_384_384_8_48_q_proj_rsci_data_out_d : IN STD_LOGIC_VECTOR (79
          DOWNTO 0);
      attention_5_1_384_384_8_48_k_proj_rsci_data_in_d : OUT STD_LOGIC_VECTOR (39
          DOWNTO 0);
      attention_5_1_384_384_8_48_k_proj_rsci_addr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
          0);
      attention_5_1_384_384_8_48_k_proj_rsci_re_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
          0);
      attention_5_1_384_384_8_48_k_proj_rsci_we_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
          0);
      attention_5_1_384_384_8_48_k_proj_rsci_data_out_d : IN STD_LOGIC_VECTOR (79
          DOWNTO 0);
      attention_5_1_384_384_8_48_v_proj_rsci_data_in_d : OUT STD_LOGIC_VECTOR (39
          DOWNTO 0);
      attention_5_1_384_384_8_48_v_proj_rsci_addr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
          0);
      attention_5_1_384_384_8_48_v_proj_rsci_re_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
          0);
      attention_5_1_384_384_8_48_v_proj_rsci_we_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
          0);
      attention_5_1_384_384_8_48_v_proj_rsci_data_out_d : IN STD_LOGIC_VECTOR (79
          DOWNTO 0);
      attention_5_1_384_384_8_48_q_embed_rsci_data_in_d : OUT STD_LOGIC_VECTOR (39
          DOWNTO 0);
      attention_5_1_384_384_8_48_q_embed_rsci_addr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
          0);
      attention_5_1_384_384_8_48_q_embed_rsci_re_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
          0);
      attention_5_1_384_384_8_48_q_embed_rsci_we_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
          0);
      attention_5_1_384_384_8_48_q_embed_rsci_data_out_d : IN STD_LOGIC_VECTOR (79
          DOWNTO 0);
      attention_5_1_384_384_8_48_k_embed_rsci_data_in_d : OUT STD_LOGIC_VECTOR (39
          DOWNTO 0);
      attention_5_1_384_384_8_48_k_embed_rsci_addr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
          0);
      attention_5_1_384_384_8_48_k_embed_rsci_re_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
          0);
      attention_5_1_384_384_8_48_k_embed_rsci_we_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
          0);
      attention_5_1_384_384_8_48_k_embed_rsci_data_out_d : IN STD_LOGIC_VECTOR (79
          DOWNTO 0);
      attention_5_1_384_384_8_48_k_cache_upd_rsci_data_in_d : OUT STD_LOGIC_VECTOR
          (39 DOWNTO 0);
      attention_5_1_384_384_8_48_k_cache_upd_rsci_addr_d : OUT STD_LOGIC_VECTOR (11
          DOWNTO 0);
      attention_5_1_384_384_8_48_k_cache_upd_rsci_re_d : OUT STD_LOGIC_VECTOR (1
          DOWNTO 0);
      attention_5_1_384_384_8_48_k_cache_upd_rsci_we_d : OUT STD_LOGIC_VECTOR (1
          DOWNTO 0);
      attention_5_1_384_384_8_48_k_cache_upd_rsci_data_out_d : IN STD_LOGIC_VECTOR
          (79 DOWNTO 0);
      attention_5_1_384_384_8_48_v_cache_upd_rsci_data_in_d : OUT STD_LOGIC_VECTOR
          (39 DOWNTO 0);
      attention_5_1_384_384_8_48_v_cache_upd_rsci_addr_d : OUT STD_LOGIC_VECTOR (11
          DOWNTO 0);
      attention_5_1_384_384_8_48_v_cache_upd_rsci_re_d : OUT STD_LOGIC_VECTOR (1
          DOWNTO 0);
      attention_5_1_384_384_8_48_v_cache_upd_rsci_we_d : OUT STD_LOGIC_VECTOR (1
          DOWNTO 0);
      attention_5_1_384_384_8_48_v_cache_upd_rsci_data_out_d : IN STD_LOGIC_VECTOR
          (79 DOWNTO 0);
      attention_5_1_384_384_8_48_k_proj_transposed_rsci_data_in_d : OUT STD_LOGIC_VECTOR
          (39 DOWNTO 0);
      attention_5_1_384_384_8_48_k_proj_transposed_rsci_addr_d : OUT STD_LOGIC_VECTOR
          (11 DOWNTO 0);
      attention_5_1_384_384_8_48_k_proj_transposed_rsci_re_d : OUT STD_LOGIC_VECTOR
          (1 DOWNTO 0);
      attention_5_1_384_384_8_48_k_proj_transposed_rsci_we_d : OUT STD_LOGIC_VECTOR
          (1 DOWNTO 0);
      attention_5_1_384_384_8_48_k_proj_transposed_rsci_data_out_d : IN STD_LOGIC_VECTOR
          (79 DOWNTO 0);
      attention_5_1_384_384_8_48_attn_weights_rsci_data_in_d : OUT STD_LOGIC_VECTOR
          (39 DOWNTO 0);
      attention_5_1_384_384_8_48_attn_weights_rsci_addr_d : OUT STD_LOGIC_VECTOR
          (5 DOWNTO 0);
      attention_5_1_384_384_8_48_attn_weights_rsci_re_d : OUT STD_LOGIC_VECTOR (1
          DOWNTO 0);
      attention_5_1_384_384_8_48_attn_weights_rsci_we_d : OUT STD_LOGIC_VECTOR (1
          DOWNTO 0);
      attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d : IN STD_LOGIC_VECTOR
          (79 DOWNTO 0);
      attention_5_1_384_384_8_48_attn_output_rsci_data_in_d : OUT STD_LOGIC_VECTOR
          (39 DOWNTO 0);
      attention_5_1_384_384_8_48_attn_output_rsci_addr_d : OUT STD_LOGIC_VECTOR (8
          DOWNTO 0);
      attention_5_1_384_384_8_48_attn_output_rsci_re_d : OUT STD_LOGIC_VECTOR (1
          DOWNTO 0);
      attention_5_1_384_384_8_48_attn_output_rsci_we_d : OUT STD_LOGIC_VECTOR (1
          DOWNTO 0);
      attention_5_1_384_384_8_48_attn_output_rsci_data_out_d : IN STD_LOGIC_VECTOR
          (79 DOWNTO 0);
      attention_5_1_384_384_8_48_attn_output_2D_rsci_data_in_d : OUT STD_LOGIC_VECTOR
          (39 DOWNTO 0);
      attention_5_1_384_384_8_48_attn_output_2D_rsci_addr_d : OUT STD_LOGIC_VECTOR
          (8 DOWNTO 0);
      attention_5_1_384_384_8_48_attn_output_2D_rsci_re_d : OUT STD_LOGIC_VECTOR
          (1 DOWNTO 0);
      attention_5_1_384_384_8_48_attn_output_2D_rsci_we_d : OUT STD_LOGIC_VECTOR
          (1 DOWNTO 0);
      attention_5_1_384_384_8_48_attn_output_2D_rsci_data_out_d : IN STD_LOGIC_VECTOR
          (79 DOWNTO 0);
      attention_5_1_384_384_8_48_quantized_final_output_rsci_data_in_d : OUT STD_LOGIC_VECTOR
          (7 DOWNTO 0);
      attention_5_1_384_384_8_48_quantized_final_output_rsci_addr_d : OUT STD_LOGIC_VECTOR
          (8 DOWNTO 0);
      attention_5_1_384_384_8_48_quantized_final_output_rsci_re_d : OUT STD_LOGIC_VECTOR
          (1 DOWNTO 0);
      attention_5_1_384_384_8_48_quantized_final_output_rsci_we_d : OUT STD_LOGIC_VECTOR
          (1 DOWNTO 0);
      attention_5_1_384_384_8_48_quantized_final_output_rsci_data_out_d : IN STD_LOGIC_VECTOR
          (15 DOWNTO 0);
      apply_rotary_pos_emb_1_8_48_rotated_q_rsci_data_in_d : OUT STD_LOGIC_VECTOR
          (39 DOWNTO 0);
      apply_rotary_pos_emb_1_8_48_rotated_q_rsci_addr_d : OUT STD_LOGIC_VECTOR (8
          DOWNTO 0);
      apply_rotary_pos_emb_1_8_48_rotated_q_rsci_re_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
          0);
      apply_rotary_pos_emb_1_8_48_rotated_q_rsci_we_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
          0);
      apply_rotary_pos_emb_1_8_48_rotated_q_rsci_data_out_d : IN STD_LOGIC_VECTOR
          (79 DOWNTO 0);
      apply_rotary_pos_emb_1_8_48_rotated_k_rsci_data_in_d : OUT STD_LOGIC_VECTOR
          (39 DOWNTO 0);
      apply_rotary_pos_emb_1_8_48_rotated_k_rsci_addr_d : OUT STD_LOGIC_VECTOR (8
          DOWNTO 0);
      apply_rotary_pos_emb_1_8_48_rotated_k_rsci_re_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
          0);
      apply_rotary_pos_emb_1_8_48_rotated_k_rsci_we_d : OUT STD_LOGIC_VECTOR (1 DOWNTO
          0);
      apply_rotary_pos_emb_1_8_48_rotated_k_rsci_data_out_d : IN STD_LOGIC_VECTOR
          (79 DOWNTO 0)
    );
  END COMPONENT;
  SIGNAL dut_core_inst_strm_in_rsc_dat : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL dut_core_inst_strm_out_rsc_dat : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL dut_core_inst_input_rsci_data_in_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL dut_core_inst_input_rsci_addr_d : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL dut_core_inst_input_rsci_re_d : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL dut_core_inst_input_rsci_we_d : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL dut_core_inst_input_rsci_data_out_d : STD_LOGIC_VECTOR (79 DOWNTO 0);
  SIGNAL dut_core_inst_output_rsci_data_in_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL dut_core_inst_output_rsci_addr_d : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL dut_core_inst_output_rsci_re_d : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL dut_core_inst_output_rsci_we_d : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL dut_core_inst_output_rsci_data_out_d : STD_LOGIC_VECTOR (79 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_data_in_d
      : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_addr_d
      : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_re_d
      : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_we_d
      : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_data_out_d
      : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_data_in_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_addr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_re_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_we_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_data_in_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_addr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_re_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_we_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_data_out_d : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_data_in_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_addr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_re_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_we_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_data_out_d : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_proj_rsci_data_in_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_proj_rsci_addr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_proj_rsci_re_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_proj_rsci_we_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_proj_rsci_data_out_d : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_proj_rsci_data_in_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_proj_rsci_addr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_proj_rsci_re_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_proj_rsci_we_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_proj_rsci_data_out_d : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_proj_rsci_data_in_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_proj_rsci_addr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_proj_rsci_re_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_proj_rsci_we_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_proj_rsci_data_out_d : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_data_in_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_addr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_re_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_we_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_data_out_d : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_data_in_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_addr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_re_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_we_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_data_out_d : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_cache_upd_rsci_data_in_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_cache_upd_rsci_addr_d : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_cache_upd_rsci_re_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_cache_upd_rsci_we_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_cache_upd_rsci_data_out_d : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_data_in_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_addr_d : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_re_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_we_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_data_out_d : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_proj_transposed_rsci_data_in_d
      : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_proj_transposed_rsci_addr_d :
      STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_proj_transposed_rsci_re_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_proj_transposed_rsci_we_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_proj_transposed_rsci_data_out_d
      : STD_LOGIC_VECTOR (79 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_data_in_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_addr_d : STD_LOGIC_VECTOR
      (5 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_re_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_we_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d :
      STD_LOGIC_VECTOR (79 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_data_in_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_addr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_re_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_we_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_data_out_d : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_data_in_d :
      STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_addr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_re_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_we_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_data_out_d
      : STD_LOGIC_VECTOR (79 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_quantized_final_output_rsci_data_in_d
      : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_quantized_final_output_rsci_addr_d
      : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_quantized_final_output_rsci_re_d
      : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_quantized_final_output_rsci_we_d
      : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_quantized_final_output_rsci_data_out_d
      : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_data_in_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_addr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_re_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_we_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_data_out_d : STD_LOGIC_VECTOR
      (79 DOWNTO 0);
  SIGNAL dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_data_in_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_addr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_re_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_we_d : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_data_out_d : STD_LOGIC_VECTOR
      (79 DOWNTO 0);

BEGIN
  input_rsc_comp : mgc_hls.ram_sync_dualrw_be_pkg.ram_sync_dualRW_be
    GENERIC MAP(
      ram_id => 3,
      words => 384,
      width => 40,
      addr_width => 9,
      a_reset_active => 0,
      s_reset_active => 1,
      enable_active => 1,
      re_active => 0,
      we_active => 0,
      num_byte_enables => 1,
      clock_edge => 1,
      no_of_RAM_dualRW_readwrite_port => 2
      )
    PORT MAP(
      data_in => input_rsc_comp_data_in,
      addr => input_rsc_comp_addr,
      re => input_rsc_comp_re,
      we => input_rsc_comp_we,
      data_out => input_rsc_comp_data_out,
      clk => clk,
      a_rst => '1',
      s_rst => rst,
      en => input_rsc_en
    );
  input_rsc_comp_data_in <= input_rsc_data_in;
  input_rsc_comp_addr <= input_rsc_addr;
  input_rsc_comp_re <= input_rsc_re;
  input_rsc_comp_we <= input_rsc_we;
  input_rsc_data_out <= input_rsc_comp_data_out;

  output_rsc_comp : mgc_hls.ram_sync_dualrw_be_pkg.ram_sync_dualRW_be
    GENERIC MAP(
      ram_id => 4,
      words => 384,
      width => 40,
      addr_width => 9,
      a_reset_active => 0,
      s_reset_active => 1,
      enable_active => 1,
      re_active => 0,
      we_active => 0,
      num_byte_enables => 1,
      clock_edge => 1,
      no_of_RAM_dualRW_readwrite_port => 2
      )
    PORT MAP(
      data_in => output_rsc_comp_data_in,
      addr => output_rsc_comp_addr,
      re => output_rsc_comp_re,
      we => output_rsc_comp_we,
      data_out => output_rsc_comp_data_out,
      clk => clk,
      a_rst => '1',
      s_rst => rst,
      en => output_rsc_en
    );
  output_rsc_comp_data_in <= output_rsc_data_in;
  output_rsc_comp_addr <= output_rsc_addr;
  output_rsc_comp_re <= output_rsc_re;
  output_rsc_comp_we <= output_rsc_we;
  output_rsc_data_out <= output_rsc_comp_data_out;

  attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp : mgc_hls.ram_sync_dualrw_be_pkg.ram_sync_dualRW_be
    GENERIC MAP(
      ram_id => 5,
      words => 384,
      width => 8,
      addr_width => 9,
      a_reset_active => 0,
      s_reset_active => 1,
      enable_active => 1,
      re_active => 0,
      we_active => 0,
      num_byte_enables => 1,
      clock_edge => 1,
      no_of_RAM_dualRW_readwrite_port => 2
      )
    PORT MAP(
      data_in => attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_data_in,
      addr => attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_addr,
      re => attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_re,
      we => attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_we,
      data_out => attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_data_out,
      clk => clk,
      a_rst => '1',
      s_rst => rst,
      en => attention_5_1_384_384_8_48_quantized_hidden_states_rsc_en
    );
  attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_data_in <= attention_5_1_384_384_8_48_quantized_hidden_states_rsc_data_in;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_addr <= attention_5_1_384_384_8_48_quantized_hidden_states_rsc_addr;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_re <= attention_5_1_384_384_8_48_quantized_hidden_states_rsc_re;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_we <= attention_5_1_384_384_8_48_quantized_hidden_states_rsc_we;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsc_data_out <= attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_data_out;

  attention_5_1_384_384_8_48_q_proj_re_rsc_comp : mgc_hls.ram_sync_dualrw_be_pkg.ram_sync_dualRW_be
    GENERIC MAP(
      ram_id => 6,
      words => 384,
      width => 40,
      addr_width => 9,
      a_reset_active => 0,
      s_reset_active => 1,
      enable_active => 1,
      re_active => 0,
      we_active => 0,
      num_byte_enables => 1,
      clock_edge => 1,
      no_of_RAM_dualRW_readwrite_port => 2
      )
    PORT MAP(
      data_in => attention_5_1_384_384_8_48_q_proj_re_rsc_comp_data_in,
      addr => attention_5_1_384_384_8_48_q_proj_re_rsc_comp_addr,
      re => attention_5_1_384_384_8_48_q_proj_re_rsc_comp_re,
      we => attention_5_1_384_384_8_48_q_proj_re_rsc_comp_we,
      data_out => attention_5_1_384_384_8_48_q_proj_re_rsc_comp_data_out,
      clk => clk,
      a_rst => '1',
      s_rst => rst,
      en => attention_5_1_384_384_8_48_q_proj_re_rsc_en
    );
  attention_5_1_384_384_8_48_q_proj_re_rsc_comp_data_in <= attention_5_1_384_384_8_48_q_proj_re_rsc_data_in;
  attention_5_1_384_384_8_48_q_proj_re_rsc_comp_addr <= attention_5_1_384_384_8_48_q_proj_re_rsc_addr;
  attention_5_1_384_384_8_48_q_proj_re_rsc_comp_re <= attention_5_1_384_384_8_48_q_proj_re_rsc_re;
  attention_5_1_384_384_8_48_q_proj_re_rsc_comp_we <= attention_5_1_384_384_8_48_q_proj_re_rsc_we;
  attention_5_1_384_384_8_48_q_proj_re_rsc_data_out <= attention_5_1_384_384_8_48_q_proj_re_rsc_comp_data_out;

  attention_5_1_384_384_8_48_k_proj_re_rsc_comp : mgc_hls.ram_sync_dualrw_be_pkg.ram_sync_dualRW_be
    GENERIC MAP(
      ram_id => 7,
      words => 384,
      width => 40,
      addr_width => 9,
      a_reset_active => 0,
      s_reset_active => 1,
      enable_active => 1,
      re_active => 0,
      we_active => 0,
      num_byte_enables => 1,
      clock_edge => 1,
      no_of_RAM_dualRW_readwrite_port => 2
      )
    PORT MAP(
      data_in => attention_5_1_384_384_8_48_k_proj_re_rsc_comp_data_in,
      addr => attention_5_1_384_384_8_48_k_proj_re_rsc_comp_addr,
      re => attention_5_1_384_384_8_48_k_proj_re_rsc_comp_re,
      we => attention_5_1_384_384_8_48_k_proj_re_rsc_comp_we,
      data_out => attention_5_1_384_384_8_48_k_proj_re_rsc_comp_data_out,
      clk => clk,
      a_rst => '1',
      s_rst => rst,
      en => attention_5_1_384_384_8_48_k_proj_re_rsc_en
    );
  attention_5_1_384_384_8_48_k_proj_re_rsc_comp_data_in <= attention_5_1_384_384_8_48_k_proj_re_rsc_data_in;
  attention_5_1_384_384_8_48_k_proj_re_rsc_comp_addr <= attention_5_1_384_384_8_48_k_proj_re_rsc_addr;
  attention_5_1_384_384_8_48_k_proj_re_rsc_comp_re <= attention_5_1_384_384_8_48_k_proj_re_rsc_re;
  attention_5_1_384_384_8_48_k_proj_re_rsc_comp_we <= attention_5_1_384_384_8_48_k_proj_re_rsc_we;
  attention_5_1_384_384_8_48_k_proj_re_rsc_data_out <= attention_5_1_384_384_8_48_k_proj_re_rsc_comp_data_out;

  attention_5_1_384_384_8_48_v_proj_re_rsc_comp : mgc_hls.ram_sync_dualrw_be_pkg.ram_sync_dualRW_be
    GENERIC MAP(
      ram_id => 8,
      words => 384,
      width => 40,
      addr_width => 9,
      a_reset_active => 0,
      s_reset_active => 1,
      enable_active => 1,
      re_active => 0,
      we_active => 0,
      num_byte_enables => 1,
      clock_edge => 1,
      no_of_RAM_dualRW_readwrite_port => 2
      )
    PORT MAP(
      data_in => attention_5_1_384_384_8_48_v_proj_re_rsc_comp_data_in,
      addr => attention_5_1_384_384_8_48_v_proj_re_rsc_comp_addr,
      re => attention_5_1_384_384_8_48_v_proj_re_rsc_comp_re,
      we => attention_5_1_384_384_8_48_v_proj_re_rsc_comp_we,
      data_out => attention_5_1_384_384_8_48_v_proj_re_rsc_comp_data_out,
      clk => clk,
      a_rst => '1',
      s_rst => rst,
      en => attention_5_1_384_384_8_48_v_proj_re_rsc_en
    );
  attention_5_1_384_384_8_48_v_proj_re_rsc_comp_data_in <= attention_5_1_384_384_8_48_v_proj_re_rsc_data_in;
  attention_5_1_384_384_8_48_v_proj_re_rsc_comp_addr <= attention_5_1_384_384_8_48_v_proj_re_rsc_addr;
  attention_5_1_384_384_8_48_v_proj_re_rsc_comp_re <= attention_5_1_384_384_8_48_v_proj_re_rsc_re;
  attention_5_1_384_384_8_48_v_proj_re_rsc_comp_we <= attention_5_1_384_384_8_48_v_proj_re_rsc_we;
  attention_5_1_384_384_8_48_v_proj_re_rsc_data_out <= attention_5_1_384_384_8_48_v_proj_re_rsc_comp_data_out;

  attention_5_1_384_384_8_48_q_proj_rsc_comp : mgc_hls.ram_sync_dualrw_be_pkg.ram_sync_dualRW_be
    GENERIC MAP(
      ram_id => 9,
      words => 384,
      width => 40,
      addr_width => 9,
      a_reset_active => 0,
      s_reset_active => 1,
      enable_active => 1,
      re_active => 0,
      we_active => 0,
      num_byte_enables => 1,
      clock_edge => 1,
      no_of_RAM_dualRW_readwrite_port => 2
      )
    PORT MAP(
      data_in => attention_5_1_384_384_8_48_q_proj_rsc_comp_data_in,
      addr => attention_5_1_384_384_8_48_q_proj_rsc_comp_addr,
      re => attention_5_1_384_384_8_48_q_proj_rsc_comp_re,
      we => attention_5_1_384_384_8_48_q_proj_rsc_comp_we,
      data_out => attention_5_1_384_384_8_48_q_proj_rsc_comp_data_out,
      clk => clk,
      a_rst => '1',
      s_rst => rst,
      en => attention_5_1_384_384_8_48_q_proj_rsc_en
    );
  attention_5_1_384_384_8_48_q_proj_rsc_comp_data_in <= attention_5_1_384_384_8_48_q_proj_rsc_data_in;
  attention_5_1_384_384_8_48_q_proj_rsc_comp_addr <= attention_5_1_384_384_8_48_q_proj_rsc_addr;
  attention_5_1_384_384_8_48_q_proj_rsc_comp_re <= attention_5_1_384_384_8_48_q_proj_rsc_re;
  attention_5_1_384_384_8_48_q_proj_rsc_comp_we <= attention_5_1_384_384_8_48_q_proj_rsc_we;
  attention_5_1_384_384_8_48_q_proj_rsc_data_out <= attention_5_1_384_384_8_48_q_proj_rsc_comp_data_out;

  attention_5_1_384_384_8_48_k_proj_rsc_comp : mgc_hls.ram_sync_dualrw_be_pkg.ram_sync_dualRW_be
    GENERIC MAP(
      ram_id => 10,
      words => 384,
      width => 40,
      addr_width => 9,
      a_reset_active => 0,
      s_reset_active => 1,
      enable_active => 1,
      re_active => 0,
      we_active => 0,
      num_byte_enables => 1,
      clock_edge => 1,
      no_of_RAM_dualRW_readwrite_port => 2
      )
    PORT MAP(
      data_in => attention_5_1_384_384_8_48_k_proj_rsc_comp_data_in,
      addr => attention_5_1_384_384_8_48_k_proj_rsc_comp_addr,
      re => attention_5_1_384_384_8_48_k_proj_rsc_comp_re,
      we => attention_5_1_384_384_8_48_k_proj_rsc_comp_we,
      data_out => attention_5_1_384_384_8_48_k_proj_rsc_comp_data_out,
      clk => clk,
      a_rst => '1',
      s_rst => rst,
      en => attention_5_1_384_384_8_48_k_proj_rsc_en
    );
  attention_5_1_384_384_8_48_k_proj_rsc_comp_data_in <= attention_5_1_384_384_8_48_k_proj_rsc_data_in;
  attention_5_1_384_384_8_48_k_proj_rsc_comp_addr <= attention_5_1_384_384_8_48_k_proj_rsc_addr;
  attention_5_1_384_384_8_48_k_proj_rsc_comp_re <= attention_5_1_384_384_8_48_k_proj_rsc_re;
  attention_5_1_384_384_8_48_k_proj_rsc_comp_we <= attention_5_1_384_384_8_48_k_proj_rsc_we;
  attention_5_1_384_384_8_48_k_proj_rsc_data_out <= attention_5_1_384_384_8_48_k_proj_rsc_comp_data_out;

  attention_5_1_384_384_8_48_v_proj_rsc_comp : mgc_hls.ram_sync_dualrw_be_pkg.ram_sync_dualRW_be
    GENERIC MAP(
      ram_id => 11,
      words => 384,
      width => 40,
      addr_width => 9,
      a_reset_active => 0,
      s_reset_active => 1,
      enable_active => 1,
      re_active => 0,
      we_active => 0,
      num_byte_enables => 1,
      clock_edge => 1,
      no_of_RAM_dualRW_readwrite_port => 2
      )
    PORT MAP(
      data_in => attention_5_1_384_384_8_48_v_proj_rsc_comp_data_in,
      addr => attention_5_1_384_384_8_48_v_proj_rsc_comp_addr,
      re => attention_5_1_384_384_8_48_v_proj_rsc_comp_re,
      we => attention_5_1_384_384_8_48_v_proj_rsc_comp_we,
      data_out => attention_5_1_384_384_8_48_v_proj_rsc_comp_data_out,
      clk => clk,
      a_rst => '1',
      s_rst => rst,
      en => attention_5_1_384_384_8_48_v_proj_rsc_en
    );
  attention_5_1_384_384_8_48_v_proj_rsc_comp_data_in <= attention_5_1_384_384_8_48_v_proj_rsc_data_in;
  attention_5_1_384_384_8_48_v_proj_rsc_comp_addr <= attention_5_1_384_384_8_48_v_proj_rsc_addr;
  attention_5_1_384_384_8_48_v_proj_rsc_comp_re <= attention_5_1_384_384_8_48_v_proj_rsc_re;
  attention_5_1_384_384_8_48_v_proj_rsc_comp_we <= attention_5_1_384_384_8_48_v_proj_rsc_we;
  attention_5_1_384_384_8_48_v_proj_rsc_data_out <= attention_5_1_384_384_8_48_v_proj_rsc_comp_data_out;

  attention_5_1_384_384_8_48_q_embed_rsc_comp : mgc_hls.ram_sync_dualrw_be_pkg.ram_sync_dualRW_be
    GENERIC MAP(
      ram_id => 12,
      words => 384,
      width => 40,
      addr_width => 9,
      a_reset_active => 0,
      s_reset_active => 1,
      enable_active => 1,
      re_active => 0,
      we_active => 0,
      num_byte_enables => 1,
      clock_edge => 1,
      no_of_RAM_dualRW_readwrite_port => 2
      )
    PORT MAP(
      data_in => attention_5_1_384_384_8_48_q_embed_rsc_comp_data_in,
      addr => attention_5_1_384_384_8_48_q_embed_rsc_comp_addr,
      re => attention_5_1_384_384_8_48_q_embed_rsc_comp_re,
      we => attention_5_1_384_384_8_48_q_embed_rsc_comp_we,
      data_out => attention_5_1_384_384_8_48_q_embed_rsc_comp_data_out,
      clk => clk,
      a_rst => '1',
      s_rst => rst,
      en => attention_5_1_384_384_8_48_q_embed_rsc_en
    );
  attention_5_1_384_384_8_48_q_embed_rsc_comp_data_in <= attention_5_1_384_384_8_48_q_embed_rsc_data_in;
  attention_5_1_384_384_8_48_q_embed_rsc_comp_addr <= attention_5_1_384_384_8_48_q_embed_rsc_addr;
  attention_5_1_384_384_8_48_q_embed_rsc_comp_re <= attention_5_1_384_384_8_48_q_embed_rsc_re;
  attention_5_1_384_384_8_48_q_embed_rsc_comp_we <= attention_5_1_384_384_8_48_q_embed_rsc_we;
  attention_5_1_384_384_8_48_q_embed_rsc_data_out <= attention_5_1_384_384_8_48_q_embed_rsc_comp_data_out;

  attention_5_1_384_384_8_48_k_embed_rsc_comp : mgc_hls.ram_sync_dualrw_be_pkg.ram_sync_dualRW_be
    GENERIC MAP(
      ram_id => 13,
      words => 384,
      width => 40,
      addr_width => 9,
      a_reset_active => 0,
      s_reset_active => 1,
      enable_active => 1,
      re_active => 0,
      we_active => 0,
      num_byte_enables => 1,
      clock_edge => 1,
      no_of_RAM_dualRW_readwrite_port => 2
      )
    PORT MAP(
      data_in => attention_5_1_384_384_8_48_k_embed_rsc_comp_data_in,
      addr => attention_5_1_384_384_8_48_k_embed_rsc_comp_addr,
      re => attention_5_1_384_384_8_48_k_embed_rsc_comp_re,
      we => attention_5_1_384_384_8_48_k_embed_rsc_comp_we,
      data_out => attention_5_1_384_384_8_48_k_embed_rsc_comp_data_out,
      clk => clk,
      a_rst => '1',
      s_rst => rst,
      en => attention_5_1_384_384_8_48_k_embed_rsc_en
    );
  attention_5_1_384_384_8_48_k_embed_rsc_comp_data_in <= attention_5_1_384_384_8_48_k_embed_rsc_data_in;
  attention_5_1_384_384_8_48_k_embed_rsc_comp_addr <= attention_5_1_384_384_8_48_k_embed_rsc_addr;
  attention_5_1_384_384_8_48_k_embed_rsc_comp_re <= attention_5_1_384_384_8_48_k_embed_rsc_re;
  attention_5_1_384_384_8_48_k_embed_rsc_comp_we <= attention_5_1_384_384_8_48_k_embed_rsc_we;
  attention_5_1_384_384_8_48_k_embed_rsc_data_out <= attention_5_1_384_384_8_48_k_embed_rsc_comp_data_out;

  attention_5_1_384_384_8_48_k_cache_upd_rsc_comp : mgc_hls.ram_sync_dualrw_be_pkg.ram_sync_dualRW_be
    GENERIC MAP(
      ram_id => 14,
      words => 2304,
      width => 40,
      addr_width => 12,
      a_reset_active => 0,
      s_reset_active => 1,
      enable_active => 1,
      re_active => 0,
      we_active => 0,
      num_byte_enables => 1,
      clock_edge => 1,
      no_of_RAM_dualRW_readwrite_port => 2
      )
    PORT MAP(
      data_in => attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_data_in,
      addr => attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_addr,
      re => attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_re,
      we => attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_we,
      data_out => attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_data_out,
      clk => clk,
      a_rst => '1',
      s_rst => rst,
      en => attention_5_1_384_384_8_48_k_cache_upd_rsc_en
    );
  attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_data_in <= attention_5_1_384_384_8_48_k_cache_upd_rsc_data_in;
  attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_addr <= attention_5_1_384_384_8_48_k_cache_upd_rsc_addr;
  attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_re <= attention_5_1_384_384_8_48_k_cache_upd_rsc_re;
  attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_we <= attention_5_1_384_384_8_48_k_cache_upd_rsc_we;
  attention_5_1_384_384_8_48_k_cache_upd_rsc_data_out <= attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_data_out;

  attention_5_1_384_384_8_48_v_cache_upd_rsc_comp : mgc_hls.ram_sync_dualrw_be_pkg.ram_sync_dualRW_be
    GENERIC MAP(
      ram_id => 15,
      words => 2304,
      width => 40,
      addr_width => 12,
      a_reset_active => 0,
      s_reset_active => 1,
      enable_active => 1,
      re_active => 0,
      we_active => 0,
      num_byte_enables => 1,
      clock_edge => 1,
      no_of_RAM_dualRW_readwrite_port => 2
      )
    PORT MAP(
      data_in => attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_data_in,
      addr => attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_addr,
      re => attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_re,
      we => attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_we,
      data_out => attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_data_out,
      clk => clk,
      a_rst => '1',
      s_rst => rst,
      en => attention_5_1_384_384_8_48_v_cache_upd_rsc_en
    );
  attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_data_in <= attention_5_1_384_384_8_48_v_cache_upd_rsc_data_in;
  attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_addr <= attention_5_1_384_384_8_48_v_cache_upd_rsc_addr;
  attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_re <= attention_5_1_384_384_8_48_v_cache_upd_rsc_re;
  attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_we <= attention_5_1_384_384_8_48_v_cache_upd_rsc_we;
  attention_5_1_384_384_8_48_v_cache_upd_rsc_data_out <= attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_data_out;

  attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp : mgc_hls.ram_sync_dualrw_be_pkg.ram_sync_dualRW_be
    GENERIC MAP(
      ram_id => 16,
      words => 2304,
      width => 40,
      addr_width => 12,
      a_reset_active => 0,
      s_reset_active => 1,
      enable_active => 1,
      re_active => 0,
      we_active => 0,
      num_byte_enables => 1,
      clock_edge => 1,
      no_of_RAM_dualRW_readwrite_port => 2
      )
    PORT MAP(
      data_in => attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_data_in,
      addr => attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_addr,
      re => attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_re,
      we => attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_we,
      data_out => attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_data_out,
      clk => clk,
      a_rst => '1',
      s_rst => rst,
      en => attention_5_1_384_384_8_48_k_proj_transposed_rsc_en
    );
  attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_data_in <= attention_5_1_384_384_8_48_k_proj_transposed_rsc_data_in;
  attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_addr <= attention_5_1_384_384_8_48_k_proj_transposed_rsc_addr;
  attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_re <= attention_5_1_384_384_8_48_k_proj_transposed_rsc_re;
  attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_we <= attention_5_1_384_384_8_48_k_proj_transposed_rsc_we;
  attention_5_1_384_384_8_48_k_proj_transposed_rsc_data_out <= attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_data_out;

  attention_5_1_384_384_8_48_attn_weights_rsc_comp : mgc_hls.ram_sync_dualrw_be_pkg.ram_sync_dualRW_be
    GENERIC MAP(
      ram_id => 17,
      words => 48,
      width => 40,
      addr_width => 6,
      a_reset_active => 0,
      s_reset_active => 1,
      enable_active => 1,
      re_active => 0,
      we_active => 0,
      num_byte_enables => 1,
      clock_edge => 1,
      no_of_RAM_dualRW_readwrite_port => 2
      )
    PORT MAP(
      data_in => attention_5_1_384_384_8_48_attn_weights_rsc_comp_data_in,
      addr => attention_5_1_384_384_8_48_attn_weights_rsc_comp_addr,
      re => attention_5_1_384_384_8_48_attn_weights_rsc_comp_re,
      we => attention_5_1_384_384_8_48_attn_weights_rsc_comp_we,
      data_out => attention_5_1_384_384_8_48_attn_weights_rsc_comp_data_out,
      clk => clk,
      a_rst => '1',
      s_rst => rst,
      en => attention_5_1_384_384_8_48_attn_weights_rsc_en
    );
  attention_5_1_384_384_8_48_attn_weights_rsc_comp_data_in <= attention_5_1_384_384_8_48_attn_weights_rsc_data_in;
  attention_5_1_384_384_8_48_attn_weights_rsc_comp_addr <= attention_5_1_384_384_8_48_attn_weights_rsc_addr;
  attention_5_1_384_384_8_48_attn_weights_rsc_comp_re <= attention_5_1_384_384_8_48_attn_weights_rsc_re;
  attention_5_1_384_384_8_48_attn_weights_rsc_comp_we <= attention_5_1_384_384_8_48_attn_weights_rsc_we;
  attention_5_1_384_384_8_48_attn_weights_rsc_data_out <= attention_5_1_384_384_8_48_attn_weights_rsc_comp_data_out;

  attention_5_1_384_384_8_48_attn_output_rsc_comp : mgc_hls.ram_sync_dualrw_be_pkg.ram_sync_dualRW_be
    GENERIC MAP(
      ram_id => 18,
      words => 384,
      width => 40,
      addr_width => 9,
      a_reset_active => 0,
      s_reset_active => 1,
      enable_active => 1,
      re_active => 0,
      we_active => 0,
      num_byte_enables => 1,
      clock_edge => 1,
      no_of_RAM_dualRW_readwrite_port => 2
      )
    PORT MAP(
      data_in => attention_5_1_384_384_8_48_attn_output_rsc_comp_data_in,
      addr => attention_5_1_384_384_8_48_attn_output_rsc_comp_addr,
      re => attention_5_1_384_384_8_48_attn_output_rsc_comp_re,
      we => attention_5_1_384_384_8_48_attn_output_rsc_comp_we,
      data_out => attention_5_1_384_384_8_48_attn_output_rsc_comp_data_out,
      clk => clk,
      a_rst => '1',
      s_rst => rst,
      en => attention_5_1_384_384_8_48_attn_output_rsc_en
    );
  attention_5_1_384_384_8_48_attn_output_rsc_comp_data_in <= attention_5_1_384_384_8_48_attn_output_rsc_data_in;
  attention_5_1_384_384_8_48_attn_output_rsc_comp_addr <= attention_5_1_384_384_8_48_attn_output_rsc_addr;
  attention_5_1_384_384_8_48_attn_output_rsc_comp_re <= attention_5_1_384_384_8_48_attn_output_rsc_re;
  attention_5_1_384_384_8_48_attn_output_rsc_comp_we <= attention_5_1_384_384_8_48_attn_output_rsc_we;
  attention_5_1_384_384_8_48_attn_output_rsc_data_out <= attention_5_1_384_384_8_48_attn_output_rsc_comp_data_out;

  attention_5_1_384_384_8_48_attn_output_2D_rsc_comp : mgc_hls.ram_sync_dualrw_be_pkg.ram_sync_dualRW_be
    GENERIC MAP(
      ram_id => 19,
      words => 384,
      width => 40,
      addr_width => 9,
      a_reset_active => 0,
      s_reset_active => 1,
      enable_active => 1,
      re_active => 0,
      we_active => 0,
      num_byte_enables => 1,
      clock_edge => 1,
      no_of_RAM_dualRW_readwrite_port => 2
      )
    PORT MAP(
      data_in => attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_data_in,
      addr => attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_addr,
      re => attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_re,
      we => attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_we,
      data_out => attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_data_out,
      clk => clk,
      a_rst => '1',
      s_rst => rst,
      en => attention_5_1_384_384_8_48_attn_output_2D_rsc_en
    );
  attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_data_in <= attention_5_1_384_384_8_48_attn_output_2D_rsc_data_in;
  attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_addr <= attention_5_1_384_384_8_48_attn_output_2D_rsc_addr;
  attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_re <= attention_5_1_384_384_8_48_attn_output_2D_rsc_re;
  attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_we <= attention_5_1_384_384_8_48_attn_output_2D_rsc_we;
  attention_5_1_384_384_8_48_attn_output_2D_rsc_data_out <= attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_data_out;

  attention_5_1_384_384_8_48_quantized_final_output_rsc_comp : mgc_hls.ram_sync_dualrw_be_pkg.ram_sync_dualRW_be
    GENERIC MAP(
      ram_id => 20,
      words => 384,
      width => 8,
      addr_width => 9,
      a_reset_active => 0,
      s_reset_active => 1,
      enable_active => 1,
      re_active => 0,
      we_active => 0,
      num_byte_enables => 1,
      clock_edge => 1,
      no_of_RAM_dualRW_readwrite_port => 2
      )
    PORT MAP(
      data_in => attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_data_in,
      addr => attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_addr,
      re => attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_re,
      we => attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_we,
      data_out => attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_data_out,
      clk => clk,
      a_rst => '1',
      s_rst => rst,
      en => attention_5_1_384_384_8_48_quantized_final_output_rsc_en
    );
  attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_data_in <= attention_5_1_384_384_8_48_quantized_final_output_rsc_data_in;
  attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_addr <= attention_5_1_384_384_8_48_quantized_final_output_rsc_addr;
  attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_re <= attention_5_1_384_384_8_48_quantized_final_output_rsc_re;
  attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_we <= attention_5_1_384_384_8_48_quantized_final_output_rsc_we;
  attention_5_1_384_384_8_48_quantized_final_output_rsc_data_out <= attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_data_out;

  apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp : mgc_hls.ram_sync_dualrw_be_pkg.ram_sync_dualRW_be
    GENERIC MAP(
      ram_id => 21,
      words => 384,
      width => 40,
      addr_width => 9,
      a_reset_active => 0,
      s_reset_active => 1,
      enable_active => 1,
      re_active => 0,
      we_active => 0,
      num_byte_enables => 1,
      clock_edge => 1,
      no_of_RAM_dualRW_readwrite_port => 2
      )
    PORT MAP(
      data_in => apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_data_in,
      addr => apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_addr,
      re => apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_re,
      we => apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_we,
      data_out => apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_data_out,
      clk => clk,
      a_rst => '1',
      s_rst => rst,
      en => apply_rotary_pos_emb_1_8_48_rotated_q_rsc_en
    );
  apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_data_in <= apply_rotary_pos_emb_1_8_48_rotated_q_rsc_data_in;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_addr <= apply_rotary_pos_emb_1_8_48_rotated_q_rsc_addr;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_re <= apply_rotary_pos_emb_1_8_48_rotated_q_rsc_re;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_we <= apply_rotary_pos_emb_1_8_48_rotated_q_rsc_we;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsc_data_out <= apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_data_out;

  apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp : mgc_hls.ram_sync_dualrw_be_pkg.ram_sync_dualRW_be
    GENERIC MAP(
      ram_id => 22,
      words => 384,
      width => 40,
      addr_width => 9,
      a_reset_active => 0,
      s_reset_active => 1,
      enable_active => 1,
      re_active => 0,
      we_active => 0,
      num_byte_enables => 1,
      clock_edge => 1,
      no_of_RAM_dualRW_readwrite_port => 2
      )
    PORT MAP(
      data_in => apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_data_in,
      addr => apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_addr,
      re => apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_re,
      we => apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_we,
      data_out => apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_data_out,
      clk => clk,
      a_rst => '1',
      s_rst => rst,
      en => apply_rotary_pos_emb_1_8_48_rotated_k_rsc_en
    );
  apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_data_in <= apply_rotary_pos_emb_1_8_48_rotated_k_rsc_data_in;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_addr <= apply_rotary_pos_emb_1_8_48_rotated_k_rsc_addr;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_re <= apply_rotary_pos_emb_1_8_48_rotated_k_rsc_re;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_we <= apply_rotary_pos_emb_1_8_48_rotated_k_rsc_we;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsc_data_out <= apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_data_out;

  input_rsci : dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_3_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    PORT MAP(
      en => input_rsc_en,
      data_out => input_rsci_data_out,
      we => input_rsci_we,
      re => input_rsci_re,
      addr => input_rsci_addr,
      data_in => input_rsci_data_in,
      data_in_d => input_rsci_data_in_d_1,
      addr_d => input_rsci_addr_d_1,
      re_d => input_rsci_re_d_1,
      we_d => input_rsci_we_d_1,
      data_out_d => input_rsci_data_out_d_1,
      en_d => input_rsci_en_d
    );
  input_rsci_data_out <= input_rsc_data_out;
  input_rsc_we <= input_rsci_we;
  input_rsc_re <= input_rsci_re;
  input_rsc_addr <= input_rsci_addr;
  input_rsc_data_in <= input_rsci_data_in;
  input_rsci_data_in_d_1 <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000")
      & input_rsci_data_in_d;
  input_rsci_addr_d_1 <= STD_LOGIC_VECTOR'( "000000000") & input_rsci_addr_d;
  input_rsci_re_d_1 <= input_rsci_re_d;
  input_rsci_we_d_1 <= input_rsci_we_d;
  input_rsci_data_out_d <= input_rsci_data_out_d_1;

  output_rsci : dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_4_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    PORT MAP(
      en => output_rsc_en,
      data_out => output_rsci_data_out,
      we => output_rsci_we,
      re => output_rsci_re,
      addr => output_rsci_addr,
      data_in => output_rsci_data_in,
      data_in_d => output_rsci_data_in_d_1,
      addr_d => output_rsci_addr_d_1,
      re_d => output_rsci_re_d_1,
      we_d => output_rsci_we_d_1,
      data_out_d => output_rsci_data_out_d_1,
      en_d => input_rsci_en_d
    );
  output_rsci_data_out <= output_rsc_data_out;
  output_rsc_we <= output_rsci_we;
  output_rsc_re <= output_rsci_re;
  output_rsc_addr <= output_rsci_addr;
  output_rsc_data_in <= output_rsci_data_in;
  output_rsci_data_in_d_1 <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000")
      & output_rsci_data_in_d;
  output_rsci_addr_d_1 <= STD_LOGIC_VECTOR'( "000000000") & output_rsci_addr_d;
  output_rsci_re_d_1 <= output_rsci_re_d;
  output_rsci_we_d_1 <= output_rsci_we_d;
  output_rsci_data_out_d <= output_rsci_data_out_d_1;

  attention_5_1_384_384_8_48_quantized_hidden_states_rsci : dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_5_384_8_9_0_1_1_0_0_1_1_8_384_2_gen
    PORT MAP(
      en => attention_5_1_384_384_8_48_quantized_hidden_states_rsc_en,
      data_out => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_data_out,
      we => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_we,
      re => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_re,
      addr => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_addr,
      data_in => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_data_in,
      data_in_d => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_data_in_d_1,
      addr_d => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_addr_d_1,
      re_d => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_re_d_1,
      we_d => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_we_d_1,
      data_out_d => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_data_out_d_1,
      en_d => input_rsci_en_d
    );
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_data_out <= attention_5_1_384_384_8_48_quantized_hidden_states_rsc_data_out;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsc_we <= attention_5_1_384_384_8_48_quantized_hidden_states_rsci_we;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsc_re <= attention_5_1_384_384_8_48_quantized_hidden_states_rsci_re;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsc_addr <= attention_5_1_384_384_8_48_quantized_hidden_states_rsci_addr;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsc_data_in <= attention_5_1_384_384_8_48_quantized_hidden_states_rsci_data_in;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_data_in_d_1 <= STD_LOGIC_VECTOR'(
      "00000000") & attention_5_1_384_384_8_48_quantized_hidden_states_rsci_data_in_d;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_addr_d_1 <= STD_LOGIC_VECTOR'(
      "000000000") & attention_5_1_384_384_8_48_quantized_hidden_states_rsci_addr_d;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_re_d_1 <= attention_5_1_384_384_8_48_quantized_hidden_states_rsci_re_d;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_we_d_1 <= attention_5_1_384_384_8_48_quantized_hidden_states_rsci_we_d;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_data_out_d <= attention_5_1_384_384_8_48_quantized_hidden_states_rsci_data_out_d_1;

  attention_5_1_384_384_8_48_q_proj_re_rsci : dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_6_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    PORT MAP(
      en => attention_5_1_384_384_8_48_q_proj_re_rsc_en,
      data_out => attention_5_1_384_384_8_48_q_proj_re_rsci_data_out,
      we => attention_5_1_384_384_8_48_q_proj_re_rsci_we,
      re => attention_5_1_384_384_8_48_q_proj_re_rsci_re,
      addr => attention_5_1_384_384_8_48_q_proj_re_rsci_addr,
      data_in => attention_5_1_384_384_8_48_q_proj_re_rsci_data_in,
      data_in_d => attention_5_1_384_384_8_48_q_proj_re_rsci_data_in_d_1,
      addr_d => attention_5_1_384_384_8_48_q_proj_re_rsci_addr_d_1,
      re_d => attention_5_1_384_384_8_48_q_proj_re_rsci_re_d_1,
      we_d => attention_5_1_384_384_8_48_q_proj_re_rsci_we_d_1,
      data_out_d => attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d_1,
      en_d => input_rsci_en_d
    );
  attention_5_1_384_384_8_48_q_proj_re_rsci_data_out <= attention_5_1_384_384_8_48_q_proj_re_rsc_data_out;
  attention_5_1_384_384_8_48_q_proj_re_rsc_we <= attention_5_1_384_384_8_48_q_proj_re_rsci_we;
  attention_5_1_384_384_8_48_q_proj_re_rsc_re <= attention_5_1_384_384_8_48_q_proj_re_rsci_re;
  attention_5_1_384_384_8_48_q_proj_re_rsc_addr <= attention_5_1_384_384_8_48_q_proj_re_rsci_addr;
  attention_5_1_384_384_8_48_q_proj_re_rsc_data_in <= attention_5_1_384_384_8_48_q_proj_re_rsci_data_in;
  attention_5_1_384_384_8_48_q_proj_re_rsci_data_in_d_1 <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000")
      & attention_5_1_384_384_8_48_q_proj_re_rsci_data_in_d;
  attention_5_1_384_384_8_48_q_proj_re_rsci_addr_d_1 <= STD_LOGIC_VECTOR'( "000000000")
      & attention_5_1_384_384_8_48_q_proj_re_rsci_addr_d;
  attention_5_1_384_384_8_48_q_proj_re_rsci_re_d_1 <= attention_5_1_384_384_8_48_q_proj_re_rsci_re_d;
  attention_5_1_384_384_8_48_q_proj_re_rsci_we_d_1 <= attention_5_1_384_384_8_48_q_proj_re_rsci_we_d;
  attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d <= attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d_1;

  attention_5_1_384_384_8_48_k_proj_re_rsci : dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_7_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    PORT MAP(
      en => attention_5_1_384_384_8_48_k_proj_re_rsc_en,
      data_out => attention_5_1_384_384_8_48_k_proj_re_rsci_data_out,
      we => attention_5_1_384_384_8_48_k_proj_re_rsci_we,
      re => attention_5_1_384_384_8_48_k_proj_re_rsci_re,
      addr => attention_5_1_384_384_8_48_k_proj_re_rsci_addr,
      data_in => attention_5_1_384_384_8_48_k_proj_re_rsci_data_in,
      data_in_d => attention_5_1_384_384_8_48_k_proj_re_rsci_data_in_d_1,
      addr_d => attention_5_1_384_384_8_48_k_proj_re_rsci_addr_d_1,
      re_d => attention_5_1_384_384_8_48_k_proj_re_rsci_re_d_1,
      we_d => attention_5_1_384_384_8_48_k_proj_re_rsci_we_d_1,
      data_out_d => attention_5_1_384_384_8_48_k_proj_re_rsci_data_out_d_1,
      en_d => input_rsci_en_d
    );
  attention_5_1_384_384_8_48_k_proj_re_rsci_data_out <= attention_5_1_384_384_8_48_k_proj_re_rsc_data_out;
  attention_5_1_384_384_8_48_k_proj_re_rsc_we <= attention_5_1_384_384_8_48_k_proj_re_rsci_we;
  attention_5_1_384_384_8_48_k_proj_re_rsc_re <= attention_5_1_384_384_8_48_k_proj_re_rsci_re;
  attention_5_1_384_384_8_48_k_proj_re_rsc_addr <= attention_5_1_384_384_8_48_k_proj_re_rsci_addr;
  attention_5_1_384_384_8_48_k_proj_re_rsc_data_in <= attention_5_1_384_384_8_48_k_proj_re_rsci_data_in;
  attention_5_1_384_384_8_48_k_proj_re_rsci_data_in_d_1 <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000")
      & attention_5_1_384_384_8_48_k_proj_re_rsci_data_in_d;
  attention_5_1_384_384_8_48_k_proj_re_rsci_addr_d_1 <= STD_LOGIC_VECTOR'( "000000000")
      & attention_5_1_384_384_8_48_k_proj_re_rsci_addr_d;
  attention_5_1_384_384_8_48_k_proj_re_rsci_re_d_1 <= attention_5_1_384_384_8_48_k_proj_re_rsci_re_d;
  attention_5_1_384_384_8_48_k_proj_re_rsci_we_d_1 <= attention_5_1_384_384_8_48_k_proj_re_rsci_we_d;
  attention_5_1_384_384_8_48_k_proj_re_rsci_data_out_d <= attention_5_1_384_384_8_48_k_proj_re_rsci_data_out_d_1;

  attention_5_1_384_384_8_48_v_proj_re_rsci : dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_8_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    PORT MAP(
      en => attention_5_1_384_384_8_48_v_proj_re_rsc_en,
      data_out => attention_5_1_384_384_8_48_v_proj_re_rsci_data_out,
      we => attention_5_1_384_384_8_48_v_proj_re_rsci_we,
      re => attention_5_1_384_384_8_48_v_proj_re_rsci_re,
      addr => attention_5_1_384_384_8_48_v_proj_re_rsci_addr,
      data_in => attention_5_1_384_384_8_48_v_proj_re_rsci_data_in,
      data_in_d => attention_5_1_384_384_8_48_v_proj_re_rsci_data_in_d_1,
      addr_d => attention_5_1_384_384_8_48_v_proj_re_rsci_addr_d_1,
      re_d => attention_5_1_384_384_8_48_v_proj_re_rsci_re_d_1,
      we_d => attention_5_1_384_384_8_48_v_proj_re_rsci_we_d_1,
      data_out_d => attention_5_1_384_384_8_48_v_proj_re_rsci_data_out_d_1,
      en_d => input_rsci_en_d
    );
  attention_5_1_384_384_8_48_v_proj_re_rsci_data_out <= attention_5_1_384_384_8_48_v_proj_re_rsc_data_out;
  attention_5_1_384_384_8_48_v_proj_re_rsc_we <= attention_5_1_384_384_8_48_v_proj_re_rsci_we;
  attention_5_1_384_384_8_48_v_proj_re_rsc_re <= attention_5_1_384_384_8_48_v_proj_re_rsci_re;
  attention_5_1_384_384_8_48_v_proj_re_rsc_addr <= attention_5_1_384_384_8_48_v_proj_re_rsci_addr;
  attention_5_1_384_384_8_48_v_proj_re_rsc_data_in <= attention_5_1_384_384_8_48_v_proj_re_rsci_data_in;
  attention_5_1_384_384_8_48_v_proj_re_rsci_data_in_d_1 <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000")
      & attention_5_1_384_384_8_48_v_proj_re_rsci_data_in_d;
  attention_5_1_384_384_8_48_v_proj_re_rsci_addr_d_1 <= STD_LOGIC_VECTOR'( "000000000")
      & attention_5_1_384_384_8_48_v_proj_re_rsci_addr_d;
  attention_5_1_384_384_8_48_v_proj_re_rsci_re_d_1 <= attention_5_1_384_384_8_48_v_proj_re_rsci_re_d;
  attention_5_1_384_384_8_48_v_proj_re_rsci_we_d_1 <= attention_5_1_384_384_8_48_v_proj_re_rsci_we_d;
  attention_5_1_384_384_8_48_v_proj_re_rsci_data_out_d <= attention_5_1_384_384_8_48_v_proj_re_rsci_data_out_d_1;

  attention_5_1_384_384_8_48_q_proj_rsci : dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_9_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    PORT MAP(
      en => attention_5_1_384_384_8_48_q_proj_rsc_en,
      data_out => attention_5_1_384_384_8_48_q_proj_rsci_data_out,
      we => attention_5_1_384_384_8_48_q_proj_rsci_we,
      re => attention_5_1_384_384_8_48_q_proj_rsci_re,
      addr => attention_5_1_384_384_8_48_q_proj_rsci_addr,
      data_in => attention_5_1_384_384_8_48_q_proj_rsci_data_in,
      data_in_d => attention_5_1_384_384_8_48_q_proj_rsci_data_in_d_1,
      addr_d => attention_5_1_384_384_8_48_q_proj_rsci_addr_d_1,
      re_d => attention_5_1_384_384_8_48_q_proj_rsci_re_d_1,
      we_d => attention_5_1_384_384_8_48_q_proj_rsci_we_d_1,
      data_out_d => attention_5_1_384_384_8_48_q_proj_rsci_data_out_d_1,
      en_d => input_rsci_en_d
    );
  attention_5_1_384_384_8_48_q_proj_rsci_data_out <= attention_5_1_384_384_8_48_q_proj_rsc_data_out;
  attention_5_1_384_384_8_48_q_proj_rsc_we <= attention_5_1_384_384_8_48_q_proj_rsci_we;
  attention_5_1_384_384_8_48_q_proj_rsc_re <= attention_5_1_384_384_8_48_q_proj_rsci_re;
  attention_5_1_384_384_8_48_q_proj_rsc_addr <= attention_5_1_384_384_8_48_q_proj_rsci_addr;
  attention_5_1_384_384_8_48_q_proj_rsc_data_in <= attention_5_1_384_384_8_48_q_proj_rsci_data_in;
  attention_5_1_384_384_8_48_q_proj_rsci_data_in_d_1 <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000")
      & attention_5_1_384_384_8_48_q_proj_rsci_data_in_d;
  attention_5_1_384_384_8_48_q_proj_rsci_addr_d_1 <= STD_LOGIC_VECTOR'( "000000000")
      & attention_5_1_384_384_8_48_q_proj_rsci_addr_d;
  attention_5_1_384_384_8_48_q_proj_rsci_re_d_1 <= attention_5_1_384_384_8_48_q_proj_rsci_re_d;
  attention_5_1_384_384_8_48_q_proj_rsci_we_d_1 <= attention_5_1_384_384_8_48_q_proj_rsci_we_d;
  attention_5_1_384_384_8_48_q_proj_rsci_data_out_d <= attention_5_1_384_384_8_48_q_proj_rsci_data_out_d_1;

  attention_5_1_384_384_8_48_k_proj_rsci : dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_10_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    PORT MAP(
      en => attention_5_1_384_384_8_48_k_proj_rsc_en,
      data_out => attention_5_1_384_384_8_48_k_proj_rsci_data_out,
      we => attention_5_1_384_384_8_48_k_proj_rsci_we,
      re => attention_5_1_384_384_8_48_k_proj_rsci_re,
      addr => attention_5_1_384_384_8_48_k_proj_rsci_addr,
      data_in => attention_5_1_384_384_8_48_k_proj_rsci_data_in,
      data_in_d => attention_5_1_384_384_8_48_k_proj_rsci_data_in_d_1,
      addr_d => attention_5_1_384_384_8_48_k_proj_rsci_addr_d_1,
      re_d => attention_5_1_384_384_8_48_k_proj_rsci_re_d_1,
      we_d => attention_5_1_384_384_8_48_k_proj_rsci_we_d_1,
      data_out_d => attention_5_1_384_384_8_48_k_proj_rsci_data_out_d_1,
      en_d => input_rsci_en_d
    );
  attention_5_1_384_384_8_48_k_proj_rsci_data_out <= attention_5_1_384_384_8_48_k_proj_rsc_data_out;
  attention_5_1_384_384_8_48_k_proj_rsc_we <= attention_5_1_384_384_8_48_k_proj_rsci_we;
  attention_5_1_384_384_8_48_k_proj_rsc_re <= attention_5_1_384_384_8_48_k_proj_rsci_re;
  attention_5_1_384_384_8_48_k_proj_rsc_addr <= attention_5_1_384_384_8_48_k_proj_rsci_addr;
  attention_5_1_384_384_8_48_k_proj_rsc_data_in <= attention_5_1_384_384_8_48_k_proj_rsci_data_in;
  attention_5_1_384_384_8_48_k_proj_rsci_data_in_d_1 <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000")
      & attention_5_1_384_384_8_48_k_proj_rsci_data_in_d;
  attention_5_1_384_384_8_48_k_proj_rsci_addr_d_1 <= STD_LOGIC_VECTOR'( "000000000")
      & attention_5_1_384_384_8_48_k_proj_rsci_addr_d;
  attention_5_1_384_384_8_48_k_proj_rsci_re_d_1 <= attention_5_1_384_384_8_48_k_proj_rsci_re_d;
  attention_5_1_384_384_8_48_k_proj_rsci_we_d_1 <= attention_5_1_384_384_8_48_k_proj_rsci_we_d;
  attention_5_1_384_384_8_48_k_proj_rsci_data_out_d <= attention_5_1_384_384_8_48_k_proj_rsci_data_out_d_1;

  attention_5_1_384_384_8_48_v_proj_rsci : dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_11_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    PORT MAP(
      en => attention_5_1_384_384_8_48_v_proj_rsc_en,
      data_out => attention_5_1_384_384_8_48_v_proj_rsci_data_out,
      we => attention_5_1_384_384_8_48_v_proj_rsci_we,
      re => attention_5_1_384_384_8_48_v_proj_rsci_re,
      addr => attention_5_1_384_384_8_48_v_proj_rsci_addr,
      data_in => attention_5_1_384_384_8_48_v_proj_rsci_data_in,
      data_in_d => attention_5_1_384_384_8_48_v_proj_rsci_data_in_d_1,
      addr_d => attention_5_1_384_384_8_48_v_proj_rsci_addr_d_1,
      re_d => attention_5_1_384_384_8_48_v_proj_rsci_re_d_1,
      we_d => attention_5_1_384_384_8_48_v_proj_rsci_we_d_1,
      data_out_d => attention_5_1_384_384_8_48_v_proj_rsci_data_out_d_1,
      en_d => input_rsci_en_d
    );
  attention_5_1_384_384_8_48_v_proj_rsci_data_out <= attention_5_1_384_384_8_48_v_proj_rsc_data_out;
  attention_5_1_384_384_8_48_v_proj_rsc_we <= attention_5_1_384_384_8_48_v_proj_rsci_we;
  attention_5_1_384_384_8_48_v_proj_rsc_re <= attention_5_1_384_384_8_48_v_proj_rsci_re;
  attention_5_1_384_384_8_48_v_proj_rsc_addr <= attention_5_1_384_384_8_48_v_proj_rsci_addr;
  attention_5_1_384_384_8_48_v_proj_rsc_data_in <= attention_5_1_384_384_8_48_v_proj_rsci_data_in;
  attention_5_1_384_384_8_48_v_proj_rsci_data_in_d_1 <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000")
      & attention_5_1_384_384_8_48_v_proj_rsci_data_in_d;
  attention_5_1_384_384_8_48_v_proj_rsci_addr_d_1 <= STD_LOGIC_VECTOR'( "000000000")
      & attention_5_1_384_384_8_48_v_proj_rsci_addr_d;
  attention_5_1_384_384_8_48_v_proj_rsci_re_d_1 <= attention_5_1_384_384_8_48_v_proj_rsci_re_d;
  attention_5_1_384_384_8_48_v_proj_rsci_we_d_1 <= attention_5_1_384_384_8_48_v_proj_rsci_we_d;
  attention_5_1_384_384_8_48_v_proj_rsci_data_out_d <= attention_5_1_384_384_8_48_v_proj_rsci_data_out_d_1;

  attention_5_1_384_384_8_48_q_embed_rsci : dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_12_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    PORT MAP(
      en => attention_5_1_384_384_8_48_q_embed_rsc_en,
      data_out => attention_5_1_384_384_8_48_q_embed_rsci_data_out,
      we => attention_5_1_384_384_8_48_q_embed_rsci_we,
      re => attention_5_1_384_384_8_48_q_embed_rsci_re,
      addr => attention_5_1_384_384_8_48_q_embed_rsci_addr,
      data_in => attention_5_1_384_384_8_48_q_embed_rsci_data_in,
      data_in_d => attention_5_1_384_384_8_48_q_embed_rsci_data_in_d_1,
      addr_d => attention_5_1_384_384_8_48_q_embed_rsci_addr_d_1,
      re_d => attention_5_1_384_384_8_48_q_embed_rsci_re_d_1,
      we_d => attention_5_1_384_384_8_48_q_embed_rsci_we_d_1,
      data_out_d => attention_5_1_384_384_8_48_q_embed_rsci_data_out_d_1,
      en_d => input_rsci_en_d
    );
  attention_5_1_384_384_8_48_q_embed_rsci_data_out <= attention_5_1_384_384_8_48_q_embed_rsc_data_out;
  attention_5_1_384_384_8_48_q_embed_rsc_we <= attention_5_1_384_384_8_48_q_embed_rsci_we;
  attention_5_1_384_384_8_48_q_embed_rsc_re <= attention_5_1_384_384_8_48_q_embed_rsci_re;
  attention_5_1_384_384_8_48_q_embed_rsc_addr <= attention_5_1_384_384_8_48_q_embed_rsci_addr;
  attention_5_1_384_384_8_48_q_embed_rsc_data_in <= attention_5_1_384_384_8_48_q_embed_rsci_data_in;
  attention_5_1_384_384_8_48_q_embed_rsci_data_in_d_1 <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000")
      & attention_5_1_384_384_8_48_q_embed_rsci_data_in_d;
  attention_5_1_384_384_8_48_q_embed_rsci_addr_d_1 <= STD_LOGIC_VECTOR'( "000000000")
      & attention_5_1_384_384_8_48_q_embed_rsci_addr_d;
  attention_5_1_384_384_8_48_q_embed_rsci_re_d_1 <= attention_5_1_384_384_8_48_q_embed_rsci_re_d;
  attention_5_1_384_384_8_48_q_embed_rsci_we_d_1 <= attention_5_1_384_384_8_48_q_embed_rsci_we_d;
  attention_5_1_384_384_8_48_q_embed_rsci_data_out_d <= attention_5_1_384_384_8_48_q_embed_rsci_data_out_d_1;

  attention_5_1_384_384_8_48_k_embed_rsci : dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_13_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    PORT MAP(
      en => attention_5_1_384_384_8_48_k_embed_rsc_en,
      data_out => attention_5_1_384_384_8_48_k_embed_rsci_data_out,
      we => attention_5_1_384_384_8_48_k_embed_rsci_we,
      re => attention_5_1_384_384_8_48_k_embed_rsci_re,
      addr => attention_5_1_384_384_8_48_k_embed_rsci_addr,
      data_in => attention_5_1_384_384_8_48_k_embed_rsci_data_in,
      data_in_d => attention_5_1_384_384_8_48_k_embed_rsci_data_in_d_1,
      addr_d => attention_5_1_384_384_8_48_k_embed_rsci_addr_d_1,
      re_d => attention_5_1_384_384_8_48_k_embed_rsci_re_d_1,
      we_d => attention_5_1_384_384_8_48_k_embed_rsci_we_d_1,
      data_out_d => attention_5_1_384_384_8_48_k_embed_rsci_data_out_d_1,
      en_d => input_rsci_en_d
    );
  attention_5_1_384_384_8_48_k_embed_rsci_data_out <= attention_5_1_384_384_8_48_k_embed_rsc_data_out;
  attention_5_1_384_384_8_48_k_embed_rsc_we <= attention_5_1_384_384_8_48_k_embed_rsci_we;
  attention_5_1_384_384_8_48_k_embed_rsc_re <= attention_5_1_384_384_8_48_k_embed_rsci_re;
  attention_5_1_384_384_8_48_k_embed_rsc_addr <= attention_5_1_384_384_8_48_k_embed_rsci_addr;
  attention_5_1_384_384_8_48_k_embed_rsc_data_in <= attention_5_1_384_384_8_48_k_embed_rsci_data_in;
  attention_5_1_384_384_8_48_k_embed_rsci_data_in_d_1 <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000")
      & attention_5_1_384_384_8_48_k_embed_rsci_data_in_d;
  attention_5_1_384_384_8_48_k_embed_rsci_addr_d_1 <= STD_LOGIC_VECTOR'( "000000000")
      & attention_5_1_384_384_8_48_k_embed_rsci_addr_d;
  attention_5_1_384_384_8_48_k_embed_rsci_re_d_1 <= attention_5_1_384_384_8_48_k_embed_rsci_re_d;
  attention_5_1_384_384_8_48_k_embed_rsci_we_d_1 <= attention_5_1_384_384_8_48_k_embed_rsci_we_d;
  attention_5_1_384_384_8_48_k_embed_rsci_data_out_d <= attention_5_1_384_384_8_48_k_embed_rsci_data_out_d_1;

  attention_5_1_384_384_8_48_k_cache_upd_rsci : dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_14_2304_40_12_0_1_1_0_0_1_1_40_2304_2_gen
    PORT MAP(
      en => attention_5_1_384_384_8_48_k_cache_upd_rsc_en,
      data_out => attention_5_1_384_384_8_48_k_cache_upd_rsci_data_out,
      we => attention_5_1_384_384_8_48_k_cache_upd_rsci_we,
      re => attention_5_1_384_384_8_48_k_cache_upd_rsci_re,
      addr => attention_5_1_384_384_8_48_k_cache_upd_rsci_addr,
      data_in => attention_5_1_384_384_8_48_k_cache_upd_rsci_data_in,
      data_in_d => attention_5_1_384_384_8_48_k_cache_upd_rsci_data_in_d_1,
      addr_d => attention_5_1_384_384_8_48_k_cache_upd_rsci_addr_d_1,
      re_d => attention_5_1_384_384_8_48_k_cache_upd_rsci_re_d_1,
      we_d => attention_5_1_384_384_8_48_k_cache_upd_rsci_we_d_1,
      data_out_d => attention_5_1_384_384_8_48_k_cache_upd_rsci_data_out_d_1,
      en_d => input_rsci_en_d
    );
  attention_5_1_384_384_8_48_k_cache_upd_rsci_data_out <= attention_5_1_384_384_8_48_k_cache_upd_rsc_data_out;
  attention_5_1_384_384_8_48_k_cache_upd_rsc_we <= attention_5_1_384_384_8_48_k_cache_upd_rsci_we;
  attention_5_1_384_384_8_48_k_cache_upd_rsc_re <= attention_5_1_384_384_8_48_k_cache_upd_rsci_re;
  attention_5_1_384_384_8_48_k_cache_upd_rsc_addr <= attention_5_1_384_384_8_48_k_cache_upd_rsci_addr;
  attention_5_1_384_384_8_48_k_cache_upd_rsc_data_in <= attention_5_1_384_384_8_48_k_cache_upd_rsci_data_in;
  attention_5_1_384_384_8_48_k_cache_upd_rsci_data_in_d_1 <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000")
      & attention_5_1_384_384_8_48_k_cache_upd_rsci_data_in_d;
  attention_5_1_384_384_8_48_k_cache_upd_rsci_addr_d_1 <= STD_LOGIC_VECTOR'( "000000000000")
      & attention_5_1_384_384_8_48_k_cache_upd_rsci_addr_d;
  attention_5_1_384_384_8_48_k_cache_upd_rsci_re_d_1 <= attention_5_1_384_384_8_48_k_cache_upd_rsci_re_d;
  attention_5_1_384_384_8_48_k_cache_upd_rsci_we_d_1 <= attention_5_1_384_384_8_48_k_cache_upd_rsci_we_d;
  attention_5_1_384_384_8_48_k_cache_upd_rsci_data_out_d <= attention_5_1_384_384_8_48_k_cache_upd_rsci_data_out_d_1;

  attention_5_1_384_384_8_48_v_cache_upd_rsci : dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_15_2304_40_12_0_1_1_0_0_1_1_40_2304_2_gen
    PORT MAP(
      en => attention_5_1_384_384_8_48_v_cache_upd_rsc_en,
      data_out => attention_5_1_384_384_8_48_v_cache_upd_rsci_data_out,
      we => attention_5_1_384_384_8_48_v_cache_upd_rsci_we,
      re => attention_5_1_384_384_8_48_v_cache_upd_rsci_re,
      addr => attention_5_1_384_384_8_48_v_cache_upd_rsci_addr,
      data_in => attention_5_1_384_384_8_48_v_cache_upd_rsci_data_in,
      data_in_d => attention_5_1_384_384_8_48_v_cache_upd_rsci_data_in_d_1,
      addr_d => attention_5_1_384_384_8_48_v_cache_upd_rsci_addr_d_1,
      re_d => attention_5_1_384_384_8_48_v_cache_upd_rsci_re_d_1,
      we_d => attention_5_1_384_384_8_48_v_cache_upd_rsci_we_d_1,
      data_out_d => attention_5_1_384_384_8_48_v_cache_upd_rsci_data_out_d_1,
      en_d => input_rsci_en_d
    );
  attention_5_1_384_384_8_48_v_cache_upd_rsci_data_out <= attention_5_1_384_384_8_48_v_cache_upd_rsc_data_out;
  attention_5_1_384_384_8_48_v_cache_upd_rsc_we <= attention_5_1_384_384_8_48_v_cache_upd_rsci_we;
  attention_5_1_384_384_8_48_v_cache_upd_rsc_re <= attention_5_1_384_384_8_48_v_cache_upd_rsci_re;
  attention_5_1_384_384_8_48_v_cache_upd_rsc_addr <= attention_5_1_384_384_8_48_v_cache_upd_rsci_addr;
  attention_5_1_384_384_8_48_v_cache_upd_rsc_data_in <= attention_5_1_384_384_8_48_v_cache_upd_rsci_data_in;
  attention_5_1_384_384_8_48_v_cache_upd_rsci_data_in_d_1 <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000")
      & attention_5_1_384_384_8_48_v_cache_upd_rsci_data_in_d;
  attention_5_1_384_384_8_48_v_cache_upd_rsci_addr_d_1 <= STD_LOGIC_VECTOR'( "000000000000")
      & attention_5_1_384_384_8_48_v_cache_upd_rsci_addr_d;
  attention_5_1_384_384_8_48_v_cache_upd_rsci_re_d_1 <= attention_5_1_384_384_8_48_v_cache_upd_rsci_re_d;
  attention_5_1_384_384_8_48_v_cache_upd_rsci_we_d_1 <= attention_5_1_384_384_8_48_v_cache_upd_rsci_we_d;
  attention_5_1_384_384_8_48_v_cache_upd_rsci_data_out_d <= attention_5_1_384_384_8_48_v_cache_upd_rsci_data_out_d_1;

  attention_5_1_384_384_8_48_k_proj_transposed_rsci : dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_16_2304_40_12_0_1_1_0_0_1_1_40_2304_2_gen
    PORT MAP(
      en => attention_5_1_384_384_8_48_k_proj_transposed_rsc_en,
      data_out => attention_5_1_384_384_8_48_k_proj_transposed_rsci_data_out,
      we => attention_5_1_384_384_8_48_k_proj_transposed_rsci_we,
      re => attention_5_1_384_384_8_48_k_proj_transposed_rsci_re,
      addr => attention_5_1_384_384_8_48_k_proj_transposed_rsci_addr,
      data_in => attention_5_1_384_384_8_48_k_proj_transposed_rsci_data_in,
      data_in_d => attention_5_1_384_384_8_48_k_proj_transposed_rsci_data_in_d_1,
      addr_d => attention_5_1_384_384_8_48_k_proj_transposed_rsci_addr_d_1,
      re_d => attention_5_1_384_384_8_48_k_proj_transposed_rsci_re_d_1,
      we_d => attention_5_1_384_384_8_48_k_proj_transposed_rsci_we_d_1,
      data_out_d => attention_5_1_384_384_8_48_k_proj_transposed_rsci_data_out_d_1,
      en_d => input_rsci_en_d
    );
  attention_5_1_384_384_8_48_k_proj_transposed_rsci_data_out <= attention_5_1_384_384_8_48_k_proj_transposed_rsc_data_out;
  attention_5_1_384_384_8_48_k_proj_transposed_rsc_we <= attention_5_1_384_384_8_48_k_proj_transposed_rsci_we;
  attention_5_1_384_384_8_48_k_proj_transposed_rsc_re <= attention_5_1_384_384_8_48_k_proj_transposed_rsci_re;
  attention_5_1_384_384_8_48_k_proj_transposed_rsc_addr <= attention_5_1_384_384_8_48_k_proj_transposed_rsci_addr;
  attention_5_1_384_384_8_48_k_proj_transposed_rsc_data_in <= attention_5_1_384_384_8_48_k_proj_transposed_rsci_data_in;
  attention_5_1_384_384_8_48_k_proj_transposed_rsci_data_in_d_1 <= STD_LOGIC_VECTOR'(
      "0000000000000000000000000000000000000000") & attention_5_1_384_384_8_48_k_proj_transposed_rsci_data_in_d;
  attention_5_1_384_384_8_48_k_proj_transposed_rsci_addr_d_1 <= STD_LOGIC_VECTOR'(
      "000000000000") & attention_5_1_384_384_8_48_k_proj_transposed_rsci_addr_d;
  attention_5_1_384_384_8_48_k_proj_transposed_rsci_re_d_1 <= attention_5_1_384_384_8_48_k_proj_transposed_rsci_re_d;
  attention_5_1_384_384_8_48_k_proj_transposed_rsci_we_d_1 <= attention_5_1_384_384_8_48_k_proj_transposed_rsci_we_d;
  attention_5_1_384_384_8_48_k_proj_transposed_rsci_data_out_d <= attention_5_1_384_384_8_48_k_proj_transposed_rsci_data_out_d_1;

  attention_5_1_384_384_8_48_attn_weights_rsci : dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_17_48_40_6_0_1_1_0_0_1_1_40_48_2_gen
    PORT MAP(
      en => attention_5_1_384_384_8_48_attn_weights_rsc_en,
      data_out => attention_5_1_384_384_8_48_attn_weights_rsci_data_out,
      we => attention_5_1_384_384_8_48_attn_weights_rsci_we,
      re => attention_5_1_384_384_8_48_attn_weights_rsci_re,
      addr => attention_5_1_384_384_8_48_attn_weights_rsci_addr,
      data_in => attention_5_1_384_384_8_48_attn_weights_rsci_data_in,
      data_in_d => attention_5_1_384_384_8_48_attn_weights_rsci_data_in_d_1,
      addr_d => attention_5_1_384_384_8_48_attn_weights_rsci_addr_d_1,
      re_d => attention_5_1_384_384_8_48_attn_weights_rsci_re_d_1,
      we_d => attention_5_1_384_384_8_48_attn_weights_rsci_we_d_1,
      data_out_d => attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d_1,
      en_d => input_rsci_en_d
    );
  attention_5_1_384_384_8_48_attn_weights_rsci_data_out <= attention_5_1_384_384_8_48_attn_weights_rsc_data_out;
  attention_5_1_384_384_8_48_attn_weights_rsc_we <= attention_5_1_384_384_8_48_attn_weights_rsci_we;
  attention_5_1_384_384_8_48_attn_weights_rsc_re <= attention_5_1_384_384_8_48_attn_weights_rsci_re;
  attention_5_1_384_384_8_48_attn_weights_rsc_addr <= attention_5_1_384_384_8_48_attn_weights_rsci_addr;
  attention_5_1_384_384_8_48_attn_weights_rsc_data_in <= attention_5_1_384_384_8_48_attn_weights_rsci_data_in;
  attention_5_1_384_384_8_48_attn_weights_rsci_data_in_d_1 <= STD_LOGIC_VECTOR'(
      "0000000000000000000000000000000000000000") & attention_5_1_384_384_8_48_attn_weights_rsci_data_in_d;
  attention_5_1_384_384_8_48_attn_weights_rsci_addr_d_1 <= STD_LOGIC_VECTOR'( "000000")
      & attention_5_1_384_384_8_48_attn_weights_rsci_addr_d;
  attention_5_1_384_384_8_48_attn_weights_rsci_re_d_1 <= attention_5_1_384_384_8_48_attn_weights_rsci_re_d;
  attention_5_1_384_384_8_48_attn_weights_rsci_we_d_1 <= attention_5_1_384_384_8_48_attn_weights_rsci_we_d;
  attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d <= attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d_1;

  attention_5_1_384_384_8_48_attn_output_rsci : dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_18_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    PORT MAP(
      en => attention_5_1_384_384_8_48_attn_output_rsc_en,
      data_out => attention_5_1_384_384_8_48_attn_output_rsci_data_out,
      we => attention_5_1_384_384_8_48_attn_output_rsci_we,
      re => attention_5_1_384_384_8_48_attn_output_rsci_re,
      addr => attention_5_1_384_384_8_48_attn_output_rsci_addr,
      data_in => attention_5_1_384_384_8_48_attn_output_rsci_data_in,
      data_in_d => attention_5_1_384_384_8_48_attn_output_rsci_data_in_d_1,
      addr_d => attention_5_1_384_384_8_48_attn_output_rsci_addr_d_1,
      re_d => attention_5_1_384_384_8_48_attn_output_rsci_re_d_1,
      we_d => attention_5_1_384_384_8_48_attn_output_rsci_we_d_1,
      data_out_d => attention_5_1_384_384_8_48_attn_output_rsci_data_out_d_1,
      en_d => input_rsci_en_d
    );
  attention_5_1_384_384_8_48_attn_output_rsci_data_out <= attention_5_1_384_384_8_48_attn_output_rsc_data_out;
  attention_5_1_384_384_8_48_attn_output_rsc_we <= attention_5_1_384_384_8_48_attn_output_rsci_we;
  attention_5_1_384_384_8_48_attn_output_rsc_re <= attention_5_1_384_384_8_48_attn_output_rsci_re;
  attention_5_1_384_384_8_48_attn_output_rsc_addr <= attention_5_1_384_384_8_48_attn_output_rsci_addr;
  attention_5_1_384_384_8_48_attn_output_rsc_data_in <= attention_5_1_384_384_8_48_attn_output_rsci_data_in;
  attention_5_1_384_384_8_48_attn_output_rsci_data_in_d_1 <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000")
      & attention_5_1_384_384_8_48_attn_output_rsci_data_in_d;
  attention_5_1_384_384_8_48_attn_output_rsci_addr_d_1 <= STD_LOGIC_VECTOR'( "000000000")
      & attention_5_1_384_384_8_48_attn_output_rsci_addr_d;
  attention_5_1_384_384_8_48_attn_output_rsci_re_d_1 <= attention_5_1_384_384_8_48_attn_output_rsci_re_d;
  attention_5_1_384_384_8_48_attn_output_rsci_we_d_1 <= attention_5_1_384_384_8_48_attn_output_rsci_we_d;
  attention_5_1_384_384_8_48_attn_output_rsci_data_out_d <= attention_5_1_384_384_8_48_attn_output_rsci_data_out_d_1;

  attention_5_1_384_384_8_48_attn_output_2D_rsci : dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_19_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    PORT MAP(
      en => attention_5_1_384_384_8_48_attn_output_2D_rsc_en,
      data_out => attention_5_1_384_384_8_48_attn_output_2D_rsci_data_out,
      we => attention_5_1_384_384_8_48_attn_output_2D_rsci_we,
      re => attention_5_1_384_384_8_48_attn_output_2D_rsci_re,
      addr => attention_5_1_384_384_8_48_attn_output_2D_rsci_addr,
      data_in => attention_5_1_384_384_8_48_attn_output_2D_rsci_data_in,
      data_in_d => attention_5_1_384_384_8_48_attn_output_2D_rsci_data_in_d_1,
      addr_d => attention_5_1_384_384_8_48_attn_output_2D_rsci_addr_d_1,
      re_d => attention_5_1_384_384_8_48_attn_output_2D_rsci_re_d_1,
      we_d => attention_5_1_384_384_8_48_attn_output_2D_rsci_we_d_1,
      data_out_d => attention_5_1_384_384_8_48_attn_output_2D_rsci_data_out_d_1,
      en_d => input_rsci_en_d
    );
  attention_5_1_384_384_8_48_attn_output_2D_rsci_data_out <= attention_5_1_384_384_8_48_attn_output_2D_rsc_data_out;
  attention_5_1_384_384_8_48_attn_output_2D_rsc_we <= attention_5_1_384_384_8_48_attn_output_2D_rsci_we;
  attention_5_1_384_384_8_48_attn_output_2D_rsc_re <= attention_5_1_384_384_8_48_attn_output_2D_rsci_re;
  attention_5_1_384_384_8_48_attn_output_2D_rsc_addr <= attention_5_1_384_384_8_48_attn_output_2D_rsci_addr;
  attention_5_1_384_384_8_48_attn_output_2D_rsc_data_in <= attention_5_1_384_384_8_48_attn_output_2D_rsci_data_in;
  attention_5_1_384_384_8_48_attn_output_2D_rsci_data_in_d_1 <= STD_LOGIC_VECTOR'(
      "0000000000000000000000000000000000000000") & attention_5_1_384_384_8_48_attn_output_2D_rsci_data_in_d;
  attention_5_1_384_384_8_48_attn_output_2D_rsci_addr_d_1 <= STD_LOGIC_VECTOR'( "000000000")
      & attention_5_1_384_384_8_48_attn_output_2D_rsci_addr_d;
  attention_5_1_384_384_8_48_attn_output_2D_rsci_re_d_1 <= attention_5_1_384_384_8_48_attn_output_2D_rsci_re_d;
  attention_5_1_384_384_8_48_attn_output_2D_rsci_we_d_1 <= attention_5_1_384_384_8_48_attn_output_2D_rsci_we_d;
  attention_5_1_384_384_8_48_attn_output_2D_rsci_data_out_d <= attention_5_1_384_384_8_48_attn_output_2D_rsci_data_out_d_1;

  attention_5_1_384_384_8_48_quantized_final_output_rsci : dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_20_384_8_9_0_1_1_0_0_1_1_8_384_2_gen
    PORT MAP(
      en => attention_5_1_384_384_8_48_quantized_final_output_rsc_en,
      data_out => attention_5_1_384_384_8_48_quantized_final_output_rsci_data_out,
      we => attention_5_1_384_384_8_48_quantized_final_output_rsci_we,
      re => attention_5_1_384_384_8_48_quantized_final_output_rsci_re,
      addr => attention_5_1_384_384_8_48_quantized_final_output_rsci_addr,
      data_in => attention_5_1_384_384_8_48_quantized_final_output_rsci_data_in,
      data_in_d => attention_5_1_384_384_8_48_quantized_final_output_rsci_data_in_d_1,
      addr_d => attention_5_1_384_384_8_48_quantized_final_output_rsci_addr_d_1,
      re_d => attention_5_1_384_384_8_48_quantized_final_output_rsci_re_d_1,
      we_d => attention_5_1_384_384_8_48_quantized_final_output_rsci_we_d_1,
      data_out_d => attention_5_1_384_384_8_48_quantized_final_output_rsci_data_out_d_1,
      en_d => input_rsci_en_d
    );
  attention_5_1_384_384_8_48_quantized_final_output_rsci_data_out <= attention_5_1_384_384_8_48_quantized_final_output_rsc_data_out;
  attention_5_1_384_384_8_48_quantized_final_output_rsc_we <= attention_5_1_384_384_8_48_quantized_final_output_rsci_we;
  attention_5_1_384_384_8_48_quantized_final_output_rsc_re <= attention_5_1_384_384_8_48_quantized_final_output_rsci_re;
  attention_5_1_384_384_8_48_quantized_final_output_rsc_addr <= attention_5_1_384_384_8_48_quantized_final_output_rsci_addr;
  attention_5_1_384_384_8_48_quantized_final_output_rsc_data_in <= attention_5_1_384_384_8_48_quantized_final_output_rsci_data_in;
  attention_5_1_384_384_8_48_quantized_final_output_rsci_data_in_d_1 <= STD_LOGIC_VECTOR'(
      "00000000") & attention_5_1_384_384_8_48_quantized_final_output_rsci_data_in_d;
  attention_5_1_384_384_8_48_quantized_final_output_rsci_addr_d_1 <= STD_LOGIC_VECTOR'(
      "000000000") & attention_5_1_384_384_8_48_quantized_final_output_rsci_addr_d;
  attention_5_1_384_384_8_48_quantized_final_output_rsci_re_d_1 <= attention_5_1_384_384_8_48_quantized_final_output_rsci_re_d;
  attention_5_1_384_384_8_48_quantized_final_output_rsci_we_d_1 <= attention_5_1_384_384_8_48_quantized_final_output_rsci_we_d;
  attention_5_1_384_384_8_48_quantized_final_output_rsci_data_out_d <= attention_5_1_384_384_8_48_quantized_final_output_rsci_data_out_d_1;

  apply_rotary_pos_emb_1_8_48_rotated_q_rsci : dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_21_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    PORT MAP(
      en => apply_rotary_pos_emb_1_8_48_rotated_q_rsc_en,
      data_out => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_data_out,
      we => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_we,
      re => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_re,
      addr => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_addr,
      data_in => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_data_in,
      data_in_d => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_data_in_d_1,
      addr_d => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_addr_d_1,
      re_d => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_re_d_1,
      we_d => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_we_d_1,
      data_out_d => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_data_out_d_1,
      en_d => input_rsci_en_d
    );
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_data_out <= apply_rotary_pos_emb_1_8_48_rotated_q_rsc_data_out;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsc_we <= apply_rotary_pos_emb_1_8_48_rotated_q_rsci_we;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsc_re <= apply_rotary_pos_emb_1_8_48_rotated_q_rsci_re;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsc_addr <= apply_rotary_pos_emb_1_8_48_rotated_q_rsci_addr;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsc_data_in <= apply_rotary_pos_emb_1_8_48_rotated_q_rsci_data_in;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_data_in_d_1 <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000")
      & apply_rotary_pos_emb_1_8_48_rotated_q_rsci_data_in_d;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_addr_d_1 <= STD_LOGIC_VECTOR'( "000000000")
      & apply_rotary_pos_emb_1_8_48_rotated_q_rsci_addr_d;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_re_d_1 <= apply_rotary_pos_emb_1_8_48_rotated_q_rsci_re_d;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_we_d_1 <= apply_rotary_pos_emb_1_8_48_rotated_q_rsci_we_d;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_data_out_d <= apply_rotary_pos_emb_1_8_48_rotated_q_rsci_data_out_d_1;

  apply_rotary_pos_emb_1_8_48_rotated_k_rsci : dut_ram_nangate_45nm_dualport_beh_RAM_dualRW_rwport_en_22_384_40_9_0_1_1_0_0_1_1_40_384_2_gen
    PORT MAP(
      en => apply_rotary_pos_emb_1_8_48_rotated_k_rsc_en,
      data_out => apply_rotary_pos_emb_1_8_48_rotated_k_rsci_data_out,
      we => apply_rotary_pos_emb_1_8_48_rotated_k_rsci_we,
      re => apply_rotary_pos_emb_1_8_48_rotated_k_rsci_re,
      addr => apply_rotary_pos_emb_1_8_48_rotated_k_rsci_addr,
      data_in => apply_rotary_pos_emb_1_8_48_rotated_k_rsci_data_in,
      data_in_d => apply_rotary_pos_emb_1_8_48_rotated_k_rsci_data_in_d_1,
      addr_d => apply_rotary_pos_emb_1_8_48_rotated_k_rsci_addr_d_1,
      re_d => apply_rotary_pos_emb_1_8_48_rotated_k_rsci_re_d_1,
      we_d => apply_rotary_pos_emb_1_8_48_rotated_k_rsci_we_d_1,
      data_out_d => apply_rotary_pos_emb_1_8_48_rotated_k_rsci_data_out_d_1,
      en_d => input_rsci_en_d
    );
  apply_rotary_pos_emb_1_8_48_rotated_k_rsci_data_out <= apply_rotary_pos_emb_1_8_48_rotated_k_rsc_data_out;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsc_we <= apply_rotary_pos_emb_1_8_48_rotated_k_rsci_we;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsc_re <= apply_rotary_pos_emb_1_8_48_rotated_k_rsci_re;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsc_addr <= apply_rotary_pos_emb_1_8_48_rotated_k_rsci_addr;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsc_data_in <= apply_rotary_pos_emb_1_8_48_rotated_k_rsci_data_in;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsci_data_in_d_1 <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000")
      & apply_rotary_pos_emb_1_8_48_rotated_k_rsci_data_in_d;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsci_addr_d_1 <= STD_LOGIC_VECTOR'( "000000000")
      & apply_rotary_pos_emb_1_8_48_rotated_k_rsci_addr_d;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsci_re_d_1 <= apply_rotary_pos_emb_1_8_48_rotated_k_rsci_re_d;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsci_we_d_1 <= apply_rotary_pos_emb_1_8_48_rotated_k_rsci_we_d;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsci_data_out_d <= apply_rotary_pos_emb_1_8_48_rotated_k_rsci_data_out_d_1;

  dut_core_inst : dut_core
    PORT MAP(
      clk => clk,
      en => en,
      rst => rst,
      strm_in_rsc_dat => dut_core_inst_strm_in_rsc_dat,
      strm_in_rsc_vld => strm_in_rsc_vld,
      strm_in_rsc_rdy => strm_in_rsc_rdy,
      strm_out_rsc_dat => dut_core_inst_strm_out_rsc_dat,
      strm_out_rsc_vld => strm_out_rsc_vld,
      strm_out_rsc_rdy => strm_out_rsc_rdy,
      input_rsci_data_in_d => dut_core_inst_input_rsci_data_in_d,
      input_rsci_addr_d => dut_core_inst_input_rsci_addr_d,
      input_rsci_re_d => dut_core_inst_input_rsci_re_d,
      input_rsci_we_d => dut_core_inst_input_rsci_we_d,
      input_rsci_data_out_d => dut_core_inst_input_rsci_data_out_d,
      input_rsci_en_d => input_rsci_en_d,
      output_rsci_data_in_d => dut_core_inst_output_rsci_data_in_d,
      output_rsci_addr_d => dut_core_inst_output_rsci_addr_d,
      output_rsci_re_d => dut_core_inst_output_rsci_re_d,
      output_rsci_we_d => dut_core_inst_output_rsci_we_d,
      output_rsci_data_out_d => dut_core_inst_output_rsci_data_out_d,
      attention_5_1_384_384_8_48_quantized_hidden_states_rsci_data_in_d => dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_data_in_d,
      attention_5_1_384_384_8_48_quantized_hidden_states_rsci_addr_d => dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_addr_d,
      attention_5_1_384_384_8_48_quantized_hidden_states_rsci_re_d => dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_re_d,
      attention_5_1_384_384_8_48_quantized_hidden_states_rsci_we_d => dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_we_d,
      attention_5_1_384_384_8_48_quantized_hidden_states_rsci_data_out_d => dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_data_out_d,
      attention_5_1_384_384_8_48_q_proj_re_rsci_data_in_d => dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_data_in_d,
      attention_5_1_384_384_8_48_q_proj_re_rsci_addr_d => dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_addr_d,
      attention_5_1_384_384_8_48_q_proj_re_rsci_re_d => dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_re_d,
      attention_5_1_384_384_8_48_q_proj_re_rsci_we_d => dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_we_d,
      attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d => dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d,
      attention_5_1_384_384_8_48_k_proj_re_rsci_data_in_d => dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_data_in_d,
      attention_5_1_384_384_8_48_k_proj_re_rsci_addr_d => dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_addr_d,
      attention_5_1_384_384_8_48_k_proj_re_rsci_re_d => dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_re_d,
      attention_5_1_384_384_8_48_k_proj_re_rsci_we_d => dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_we_d,
      attention_5_1_384_384_8_48_k_proj_re_rsci_data_out_d => dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_data_out_d,
      attention_5_1_384_384_8_48_v_proj_re_rsci_data_in_d => dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_data_in_d,
      attention_5_1_384_384_8_48_v_proj_re_rsci_addr_d => dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_addr_d,
      attention_5_1_384_384_8_48_v_proj_re_rsci_re_d => dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_re_d,
      attention_5_1_384_384_8_48_v_proj_re_rsci_we_d => dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_we_d,
      attention_5_1_384_384_8_48_v_proj_re_rsci_data_out_d => dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_data_out_d,
      attention_5_1_384_384_8_48_q_proj_rsci_data_in_d => dut_core_inst_attention_5_1_384_384_8_48_q_proj_rsci_data_in_d,
      attention_5_1_384_384_8_48_q_proj_rsci_addr_d => dut_core_inst_attention_5_1_384_384_8_48_q_proj_rsci_addr_d,
      attention_5_1_384_384_8_48_q_proj_rsci_re_d => dut_core_inst_attention_5_1_384_384_8_48_q_proj_rsci_re_d,
      attention_5_1_384_384_8_48_q_proj_rsci_we_d => dut_core_inst_attention_5_1_384_384_8_48_q_proj_rsci_we_d,
      attention_5_1_384_384_8_48_q_proj_rsci_data_out_d => dut_core_inst_attention_5_1_384_384_8_48_q_proj_rsci_data_out_d,
      attention_5_1_384_384_8_48_k_proj_rsci_data_in_d => dut_core_inst_attention_5_1_384_384_8_48_k_proj_rsci_data_in_d,
      attention_5_1_384_384_8_48_k_proj_rsci_addr_d => dut_core_inst_attention_5_1_384_384_8_48_k_proj_rsci_addr_d,
      attention_5_1_384_384_8_48_k_proj_rsci_re_d => dut_core_inst_attention_5_1_384_384_8_48_k_proj_rsci_re_d,
      attention_5_1_384_384_8_48_k_proj_rsci_we_d => dut_core_inst_attention_5_1_384_384_8_48_k_proj_rsci_we_d,
      attention_5_1_384_384_8_48_k_proj_rsci_data_out_d => dut_core_inst_attention_5_1_384_384_8_48_k_proj_rsci_data_out_d,
      attention_5_1_384_384_8_48_v_proj_rsci_data_in_d => dut_core_inst_attention_5_1_384_384_8_48_v_proj_rsci_data_in_d,
      attention_5_1_384_384_8_48_v_proj_rsci_addr_d => dut_core_inst_attention_5_1_384_384_8_48_v_proj_rsci_addr_d,
      attention_5_1_384_384_8_48_v_proj_rsci_re_d => dut_core_inst_attention_5_1_384_384_8_48_v_proj_rsci_re_d,
      attention_5_1_384_384_8_48_v_proj_rsci_we_d => dut_core_inst_attention_5_1_384_384_8_48_v_proj_rsci_we_d,
      attention_5_1_384_384_8_48_v_proj_rsci_data_out_d => dut_core_inst_attention_5_1_384_384_8_48_v_proj_rsci_data_out_d,
      attention_5_1_384_384_8_48_q_embed_rsci_data_in_d => dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_data_in_d,
      attention_5_1_384_384_8_48_q_embed_rsci_addr_d => dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_addr_d,
      attention_5_1_384_384_8_48_q_embed_rsci_re_d => dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_re_d,
      attention_5_1_384_384_8_48_q_embed_rsci_we_d => dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_we_d,
      attention_5_1_384_384_8_48_q_embed_rsci_data_out_d => dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_data_out_d,
      attention_5_1_384_384_8_48_k_embed_rsci_data_in_d => dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_data_in_d,
      attention_5_1_384_384_8_48_k_embed_rsci_addr_d => dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_addr_d,
      attention_5_1_384_384_8_48_k_embed_rsci_re_d => dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_re_d,
      attention_5_1_384_384_8_48_k_embed_rsci_we_d => dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_we_d,
      attention_5_1_384_384_8_48_k_embed_rsci_data_out_d => dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_data_out_d,
      attention_5_1_384_384_8_48_k_cache_upd_rsci_data_in_d => dut_core_inst_attention_5_1_384_384_8_48_k_cache_upd_rsci_data_in_d,
      attention_5_1_384_384_8_48_k_cache_upd_rsci_addr_d => dut_core_inst_attention_5_1_384_384_8_48_k_cache_upd_rsci_addr_d,
      attention_5_1_384_384_8_48_k_cache_upd_rsci_re_d => dut_core_inst_attention_5_1_384_384_8_48_k_cache_upd_rsci_re_d,
      attention_5_1_384_384_8_48_k_cache_upd_rsci_we_d => dut_core_inst_attention_5_1_384_384_8_48_k_cache_upd_rsci_we_d,
      attention_5_1_384_384_8_48_k_cache_upd_rsci_data_out_d => dut_core_inst_attention_5_1_384_384_8_48_k_cache_upd_rsci_data_out_d,
      attention_5_1_384_384_8_48_v_cache_upd_rsci_data_in_d => dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_data_in_d,
      attention_5_1_384_384_8_48_v_cache_upd_rsci_addr_d => dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_addr_d,
      attention_5_1_384_384_8_48_v_cache_upd_rsci_re_d => dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_re_d,
      attention_5_1_384_384_8_48_v_cache_upd_rsci_we_d => dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_we_d,
      attention_5_1_384_384_8_48_v_cache_upd_rsci_data_out_d => dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_data_out_d,
      attention_5_1_384_384_8_48_k_proj_transposed_rsci_data_in_d => dut_core_inst_attention_5_1_384_384_8_48_k_proj_transposed_rsci_data_in_d,
      attention_5_1_384_384_8_48_k_proj_transposed_rsci_addr_d => dut_core_inst_attention_5_1_384_384_8_48_k_proj_transposed_rsci_addr_d,
      attention_5_1_384_384_8_48_k_proj_transposed_rsci_re_d => dut_core_inst_attention_5_1_384_384_8_48_k_proj_transposed_rsci_re_d,
      attention_5_1_384_384_8_48_k_proj_transposed_rsci_we_d => dut_core_inst_attention_5_1_384_384_8_48_k_proj_transposed_rsci_we_d,
      attention_5_1_384_384_8_48_k_proj_transposed_rsci_data_out_d => dut_core_inst_attention_5_1_384_384_8_48_k_proj_transposed_rsci_data_out_d,
      attention_5_1_384_384_8_48_attn_weights_rsci_data_in_d => dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_data_in_d,
      attention_5_1_384_384_8_48_attn_weights_rsci_addr_d => dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_addr_d,
      attention_5_1_384_384_8_48_attn_weights_rsci_re_d => dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_re_d,
      attention_5_1_384_384_8_48_attn_weights_rsci_we_d => dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_we_d,
      attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d => dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d,
      attention_5_1_384_384_8_48_attn_output_rsci_data_in_d => dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_data_in_d,
      attention_5_1_384_384_8_48_attn_output_rsci_addr_d => dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_addr_d,
      attention_5_1_384_384_8_48_attn_output_rsci_re_d => dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_re_d,
      attention_5_1_384_384_8_48_attn_output_rsci_we_d => dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_we_d,
      attention_5_1_384_384_8_48_attn_output_rsci_data_out_d => dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_data_out_d,
      attention_5_1_384_384_8_48_attn_output_2D_rsci_data_in_d => dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_data_in_d,
      attention_5_1_384_384_8_48_attn_output_2D_rsci_addr_d => dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_addr_d,
      attention_5_1_384_384_8_48_attn_output_2D_rsci_re_d => dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_re_d,
      attention_5_1_384_384_8_48_attn_output_2D_rsci_we_d => dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_we_d,
      attention_5_1_384_384_8_48_attn_output_2D_rsci_data_out_d => dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_data_out_d,
      attention_5_1_384_384_8_48_quantized_final_output_rsci_data_in_d => dut_core_inst_attention_5_1_384_384_8_48_quantized_final_output_rsci_data_in_d,
      attention_5_1_384_384_8_48_quantized_final_output_rsci_addr_d => dut_core_inst_attention_5_1_384_384_8_48_quantized_final_output_rsci_addr_d,
      attention_5_1_384_384_8_48_quantized_final_output_rsci_re_d => dut_core_inst_attention_5_1_384_384_8_48_quantized_final_output_rsci_re_d,
      attention_5_1_384_384_8_48_quantized_final_output_rsci_we_d => dut_core_inst_attention_5_1_384_384_8_48_quantized_final_output_rsci_we_d,
      attention_5_1_384_384_8_48_quantized_final_output_rsci_data_out_d => dut_core_inst_attention_5_1_384_384_8_48_quantized_final_output_rsci_data_out_d,
      apply_rotary_pos_emb_1_8_48_rotated_q_rsci_data_in_d => dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_data_in_d,
      apply_rotary_pos_emb_1_8_48_rotated_q_rsci_addr_d => dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_addr_d,
      apply_rotary_pos_emb_1_8_48_rotated_q_rsci_re_d => dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_re_d,
      apply_rotary_pos_emb_1_8_48_rotated_q_rsci_we_d => dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_we_d,
      apply_rotary_pos_emb_1_8_48_rotated_q_rsci_data_out_d => dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_data_out_d,
      apply_rotary_pos_emb_1_8_48_rotated_k_rsci_data_in_d => dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_data_in_d,
      apply_rotary_pos_emb_1_8_48_rotated_k_rsci_addr_d => dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_addr_d,
      apply_rotary_pos_emb_1_8_48_rotated_k_rsci_re_d => dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_re_d,
      apply_rotary_pos_emb_1_8_48_rotated_k_rsci_we_d => dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_we_d,
      apply_rotary_pos_emb_1_8_48_rotated_k_rsci_data_out_d => dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_data_out_d
    );
  dut_core_inst_strm_in_rsc_dat <= strm_in_rsc_dat;
  strm_out_rsc_dat <= dut_core_inst_strm_out_rsc_dat;
  input_rsci_data_in_d <= dut_core_inst_input_rsci_data_in_d;
  input_rsci_addr_d <= dut_core_inst_input_rsci_addr_d;
  input_rsci_re_d <= dut_core_inst_input_rsci_re_d;
  input_rsci_we_d <= dut_core_inst_input_rsci_we_d;
  dut_core_inst_input_rsci_data_out_d <= input_rsci_data_out_d;
  output_rsci_data_in_d <= dut_core_inst_output_rsci_data_in_d;
  output_rsci_addr_d <= dut_core_inst_output_rsci_addr_d;
  output_rsci_re_d <= dut_core_inst_output_rsci_re_d;
  output_rsci_we_d <= dut_core_inst_output_rsci_we_d;
  dut_core_inst_output_rsci_data_out_d <= output_rsci_data_out_d;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_data_in_d <= dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_data_in_d;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_addr_d <= dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_addr_d;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_re_d <= dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_re_d;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_we_d <= dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_we_d;
  dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_data_out_d
      <= attention_5_1_384_384_8_48_quantized_hidden_states_rsci_data_out_d;
  attention_5_1_384_384_8_48_q_proj_re_rsci_data_in_d <= dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_data_in_d;
  attention_5_1_384_384_8_48_q_proj_re_rsci_addr_d <= dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_addr_d;
  attention_5_1_384_384_8_48_q_proj_re_rsci_re_d <= dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_re_d;
  attention_5_1_384_384_8_48_q_proj_re_rsci_we_d <= dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_we_d;
  dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d <= attention_5_1_384_384_8_48_q_proj_re_rsci_data_out_d;
  attention_5_1_384_384_8_48_k_proj_re_rsci_data_in_d <= dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_data_in_d;
  attention_5_1_384_384_8_48_k_proj_re_rsci_addr_d <= dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_addr_d;
  attention_5_1_384_384_8_48_k_proj_re_rsci_re_d <= dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_re_d;
  attention_5_1_384_384_8_48_k_proj_re_rsci_we_d <= dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_we_d;
  dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_data_out_d <= attention_5_1_384_384_8_48_k_proj_re_rsci_data_out_d;
  attention_5_1_384_384_8_48_v_proj_re_rsci_data_in_d <= dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_data_in_d;
  attention_5_1_384_384_8_48_v_proj_re_rsci_addr_d <= dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_addr_d;
  attention_5_1_384_384_8_48_v_proj_re_rsci_re_d <= dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_re_d;
  attention_5_1_384_384_8_48_v_proj_re_rsci_we_d <= dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_we_d;
  dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_data_out_d <= attention_5_1_384_384_8_48_v_proj_re_rsci_data_out_d;
  attention_5_1_384_384_8_48_q_proj_rsci_data_in_d <= dut_core_inst_attention_5_1_384_384_8_48_q_proj_rsci_data_in_d;
  attention_5_1_384_384_8_48_q_proj_rsci_addr_d <= dut_core_inst_attention_5_1_384_384_8_48_q_proj_rsci_addr_d;
  attention_5_1_384_384_8_48_q_proj_rsci_re_d <= dut_core_inst_attention_5_1_384_384_8_48_q_proj_rsci_re_d;
  attention_5_1_384_384_8_48_q_proj_rsci_we_d <= dut_core_inst_attention_5_1_384_384_8_48_q_proj_rsci_we_d;
  dut_core_inst_attention_5_1_384_384_8_48_q_proj_rsci_data_out_d <= attention_5_1_384_384_8_48_q_proj_rsci_data_out_d;
  attention_5_1_384_384_8_48_k_proj_rsci_data_in_d <= dut_core_inst_attention_5_1_384_384_8_48_k_proj_rsci_data_in_d;
  attention_5_1_384_384_8_48_k_proj_rsci_addr_d <= dut_core_inst_attention_5_1_384_384_8_48_k_proj_rsci_addr_d;
  attention_5_1_384_384_8_48_k_proj_rsci_re_d <= dut_core_inst_attention_5_1_384_384_8_48_k_proj_rsci_re_d;
  attention_5_1_384_384_8_48_k_proj_rsci_we_d <= dut_core_inst_attention_5_1_384_384_8_48_k_proj_rsci_we_d;
  dut_core_inst_attention_5_1_384_384_8_48_k_proj_rsci_data_out_d <= attention_5_1_384_384_8_48_k_proj_rsci_data_out_d;
  attention_5_1_384_384_8_48_v_proj_rsci_data_in_d <= dut_core_inst_attention_5_1_384_384_8_48_v_proj_rsci_data_in_d;
  attention_5_1_384_384_8_48_v_proj_rsci_addr_d <= dut_core_inst_attention_5_1_384_384_8_48_v_proj_rsci_addr_d;
  attention_5_1_384_384_8_48_v_proj_rsci_re_d <= dut_core_inst_attention_5_1_384_384_8_48_v_proj_rsci_re_d;
  attention_5_1_384_384_8_48_v_proj_rsci_we_d <= dut_core_inst_attention_5_1_384_384_8_48_v_proj_rsci_we_d;
  dut_core_inst_attention_5_1_384_384_8_48_v_proj_rsci_data_out_d <= attention_5_1_384_384_8_48_v_proj_rsci_data_out_d;
  attention_5_1_384_384_8_48_q_embed_rsci_data_in_d <= dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_data_in_d;
  attention_5_1_384_384_8_48_q_embed_rsci_addr_d <= dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_addr_d;
  attention_5_1_384_384_8_48_q_embed_rsci_re_d <= dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_re_d;
  attention_5_1_384_384_8_48_q_embed_rsci_we_d <= dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_we_d;
  dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_data_out_d <= attention_5_1_384_384_8_48_q_embed_rsci_data_out_d;
  attention_5_1_384_384_8_48_k_embed_rsci_data_in_d <= dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_data_in_d;
  attention_5_1_384_384_8_48_k_embed_rsci_addr_d <= dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_addr_d;
  attention_5_1_384_384_8_48_k_embed_rsci_re_d <= dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_re_d;
  attention_5_1_384_384_8_48_k_embed_rsci_we_d <= dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_we_d;
  dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_data_out_d <= attention_5_1_384_384_8_48_k_embed_rsci_data_out_d;
  attention_5_1_384_384_8_48_k_cache_upd_rsci_data_in_d <= dut_core_inst_attention_5_1_384_384_8_48_k_cache_upd_rsci_data_in_d;
  attention_5_1_384_384_8_48_k_cache_upd_rsci_addr_d <= dut_core_inst_attention_5_1_384_384_8_48_k_cache_upd_rsci_addr_d;
  attention_5_1_384_384_8_48_k_cache_upd_rsci_re_d <= dut_core_inst_attention_5_1_384_384_8_48_k_cache_upd_rsci_re_d;
  attention_5_1_384_384_8_48_k_cache_upd_rsci_we_d <= dut_core_inst_attention_5_1_384_384_8_48_k_cache_upd_rsci_we_d;
  dut_core_inst_attention_5_1_384_384_8_48_k_cache_upd_rsci_data_out_d <= attention_5_1_384_384_8_48_k_cache_upd_rsci_data_out_d;
  attention_5_1_384_384_8_48_v_cache_upd_rsci_data_in_d <= dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_data_in_d;
  attention_5_1_384_384_8_48_v_cache_upd_rsci_addr_d <= dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_addr_d;
  attention_5_1_384_384_8_48_v_cache_upd_rsci_re_d <= dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_re_d;
  attention_5_1_384_384_8_48_v_cache_upd_rsci_we_d <= dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_we_d;
  dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_data_out_d <= attention_5_1_384_384_8_48_v_cache_upd_rsci_data_out_d;
  attention_5_1_384_384_8_48_k_proj_transposed_rsci_data_in_d <= dut_core_inst_attention_5_1_384_384_8_48_k_proj_transposed_rsci_data_in_d;
  attention_5_1_384_384_8_48_k_proj_transposed_rsci_addr_d <= dut_core_inst_attention_5_1_384_384_8_48_k_proj_transposed_rsci_addr_d;
  attention_5_1_384_384_8_48_k_proj_transposed_rsci_re_d <= dut_core_inst_attention_5_1_384_384_8_48_k_proj_transposed_rsci_re_d;
  attention_5_1_384_384_8_48_k_proj_transposed_rsci_we_d <= dut_core_inst_attention_5_1_384_384_8_48_k_proj_transposed_rsci_we_d;
  dut_core_inst_attention_5_1_384_384_8_48_k_proj_transposed_rsci_data_out_d <= attention_5_1_384_384_8_48_k_proj_transposed_rsci_data_out_d;
  attention_5_1_384_384_8_48_attn_weights_rsci_data_in_d <= dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_data_in_d;
  attention_5_1_384_384_8_48_attn_weights_rsci_addr_d <= dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_addr_d;
  attention_5_1_384_384_8_48_attn_weights_rsci_re_d <= dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_re_d;
  attention_5_1_384_384_8_48_attn_weights_rsci_we_d <= dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_we_d;
  dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d <= attention_5_1_384_384_8_48_attn_weights_rsci_data_out_d;
  attention_5_1_384_384_8_48_attn_output_rsci_data_in_d <= dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_data_in_d;
  attention_5_1_384_384_8_48_attn_output_rsci_addr_d <= dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_addr_d;
  attention_5_1_384_384_8_48_attn_output_rsci_re_d <= dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_re_d;
  attention_5_1_384_384_8_48_attn_output_rsci_we_d <= dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_we_d;
  dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_data_out_d <= attention_5_1_384_384_8_48_attn_output_rsci_data_out_d;
  attention_5_1_384_384_8_48_attn_output_2D_rsci_data_in_d <= dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_data_in_d;
  attention_5_1_384_384_8_48_attn_output_2D_rsci_addr_d <= dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_addr_d;
  attention_5_1_384_384_8_48_attn_output_2D_rsci_re_d <= dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_re_d;
  attention_5_1_384_384_8_48_attn_output_2D_rsci_we_d <= dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_we_d;
  dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_data_out_d <= attention_5_1_384_384_8_48_attn_output_2D_rsci_data_out_d;
  attention_5_1_384_384_8_48_quantized_final_output_rsci_data_in_d <= dut_core_inst_attention_5_1_384_384_8_48_quantized_final_output_rsci_data_in_d;
  attention_5_1_384_384_8_48_quantized_final_output_rsci_addr_d <= dut_core_inst_attention_5_1_384_384_8_48_quantized_final_output_rsci_addr_d;
  attention_5_1_384_384_8_48_quantized_final_output_rsci_re_d <= dut_core_inst_attention_5_1_384_384_8_48_quantized_final_output_rsci_re_d;
  attention_5_1_384_384_8_48_quantized_final_output_rsci_we_d <= dut_core_inst_attention_5_1_384_384_8_48_quantized_final_output_rsci_we_d;
  dut_core_inst_attention_5_1_384_384_8_48_quantized_final_output_rsci_data_out_d
      <= attention_5_1_384_384_8_48_quantized_final_output_rsci_data_out_d;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_data_in_d <= dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_data_in_d;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_addr_d <= dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_addr_d;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_re_d <= dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_re_d;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_we_d <= dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_we_d;
  dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_data_out_d <= apply_rotary_pos_emb_1_8_48_rotated_q_rsci_data_out_d;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsci_data_in_d <= dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_data_in_d;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsci_addr_d <= dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_addr_d;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsci_re_d <= dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_re_d;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsci_we_d <= dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_we_d;
  dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_data_out_d <= apply_rotary_pos_emb_1_8_48_rotated_k_rsci_data_out_d;

END v1;



