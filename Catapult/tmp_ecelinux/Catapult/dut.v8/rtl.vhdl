-- ----------------------------------------------------------------------
--  HLS HDL:        VHDL Netlister
--  HLS Version:    2024.1_2/1117371 Production Release
--  HLS Date:       Fri Jun 28 23:58:31 PDT 2024
-- 
--  Generated by:   as4329@ecelinux-16.ece.cornell.edu
--  Generated date: Mon Dec  2 18:05:03 2024
-- ----------------------------------------------------------------------

-- 
-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_22_9_40_384_1_384_40_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_22_9_40_384_1_384_40_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_22_9_40_384_1_384_40_1_gen;

ARCHITECTURE v8 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_22_9_40_384_1_384_40_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v8;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_21_9_40_384_1_384_40_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_21_9_40_384_1_384_40_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_21_9_40_384_1_384_40_1_gen;

ARCHITECTURE v8 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_21_9_40_384_1_384_40_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v8;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_20_9_8_384_1_384_8_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_20_9_8_384_1_384_8_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_20_9_8_384_1_384_8_1_gen;

ARCHITECTURE v8 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_20_9_8_384_1_384_8_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v8;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_19_9_40_384_1_384_40_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_19_9_40_384_1_384_40_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_19_9_40_384_1_384_40_1_gen;

ARCHITECTURE v8 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_19_9_40_384_1_384_40_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v8;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_18_9_40_384_1_384_40_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_18_9_40_384_1_384_40_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_18_9_40_384_1_384_40_1_gen;

ARCHITECTURE v8 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_18_9_40_384_1_384_40_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v8;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_17_6_40_48_1_48_40_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_17_6_40_48_1_48_40_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (5 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (5 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (5 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (5 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_17_6_40_48_1_48_40_1_gen;

ARCHITECTURE v8 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_17_6_40_48_1_48_40_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v8;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_16_12_40_2304_1_2304_40_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_16_12_40_2304_1_2304_40_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (11 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (11 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_16_12_40_2304_1_2304_40_1_gen;

ARCHITECTURE v8 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_16_12_40_2304_1_2304_40_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v8;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_15_12_40_2304_1_2304_40_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_15_12_40_2304_1_2304_40_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (11 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (11 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_15_12_40_2304_1_2304_40_1_gen;

ARCHITECTURE v8 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_15_12_40_2304_1_2304_40_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v8;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_14_12_40_2304_1_2304_40_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_14_12_40_2304_1_2304_40_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (11 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (11 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_14_12_40_2304_1_2304_40_1_gen;

ARCHITECTURE v8 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_14_12_40_2304_1_2304_40_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v8;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_13_9_40_384_1_384_40_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_13_9_40_384_1_384_40_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_13_9_40_384_1_384_40_1_gen;

ARCHITECTURE v8 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_13_9_40_384_1_384_40_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v8;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_12_9_40_384_1_384_40_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_12_9_40_384_1_384_40_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_12_9_40_384_1_384_40_1_gen;

ARCHITECTURE v8 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_12_9_40_384_1_384_40_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v8;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_11_9_40_384_1_384_40_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_11_9_40_384_1_384_40_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_11_9_40_384_1_384_40_1_gen;

ARCHITECTURE v8 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_11_9_40_384_1_384_40_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v8;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_10_9_40_384_1_384_40_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_10_9_40_384_1_384_40_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_10_9_40_384_1_384_40_1_gen;

ARCHITECTURE v8 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_10_9_40_384_1_384_40_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v8;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_9_9_40_384_1_384_40_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_9_9_40_384_1_384_40_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_9_9_40_384_1_384_40_1_gen;

ARCHITECTURE v8 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_9_9_40_384_1_384_40_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v8;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_8_9_40_384_1_384_40_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_8_9_40_384_1_384_40_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_8_9_40_384_1_384_40_1_gen;

ARCHITECTURE v8 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_8_9_40_384_1_384_40_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v8;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_7_9_40_384_1_384_40_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_7_9_40_384_1_384_40_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_7_9_40_384_1_384_40_1_gen;

ARCHITECTURE v8 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_7_9_40_384_1_384_40_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v8;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_6_9_40_384_1_384_40_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_6_9_40_384_1_384_40_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_6_9_40_384_1_384_40_1_gen;

ARCHITECTURE v8 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_6_9_40_384_1_384_40_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v8;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_5_9_8_384_1_384_8_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_5_9_8_384_1_384_8_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_5_9_8_384_1_384_8_1_gen;

ARCHITECTURE v8 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_5_9_8_384_1_384_8_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v8;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_4_9_40_384_1_384_40_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_4_9_40_384_1_384_40_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_4_9_40_384_1_384_40_1_gen;

ARCHITECTURE v8 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_4_9_40_384_1_384_40_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v8;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_3_9_40_384_1_384_40_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_3_9_40_384_1_384_40_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_3_9_40_384_1_384_40_1_gen;

ARCHITECTURE v8 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_3_9_40_384_1_384_40_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v8;

-- ------------------------------------------------------------------
--  Design Unit:    dut_core_core_fsm
--  FSM Module
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_core_core_fsm IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    input_rsc_clken_d_1 : IN STD_LOGIC;
    fsm_output : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    for_for_C_2_tr0 : IN STD_LOGIC;
    compute_sqrt_for_C_15_tr0 : IN STD_LOGIC;
    RMS_NORM_LOOP_2_C_5_tr0 : IN STD_LOGIC;
    QUANTIZE_ACTIVATION_LOOP_5_C_4_tr0 : IN STD_LOGIC;
    QUANTIZE_ACTIVATION_LOOP_4_C_0_tr0 : IN STD_LOGIC;
    QUANTIZE_ACTIVATION_LOOP_3_C_0_tr0 : IN STD_LOGIC;
    attention_5_1_384_384_8_48_q_proj_re_vinit_C_1_tr0 : IN STD_LOGIC;
    LINEAR_FORWARD_NO_MUL_LOOP_5_C_5_tr0 : IN STD_LOGIC;
    LINEAR_FORWARD_NO_MUL_LOOP_4_C_1_tr0 : IN STD_LOGIC;
    LINEAR_FORWARD_NO_MUL_LOOP_3_C_0_tr0 : IN STD_LOGIC;
    LINEAR_FORWARD_NO_MUL_LOOP_2_C_65_tr0 : IN STD_LOGIC;
    RESHAPE_2D_TO_3D_LOOP_3_C_2_tr0 : IN STD_LOGIC;
    RESHAPE_2D_TO_3D_LOOP_2_C_0_tr0 : IN STD_LOGIC;
    RESHAPE_2D_TO_3D_LOOP_3_2_C_3_tr0 : IN STD_LOGIC;
    RESHAPE_2D_TO_3D_LOOP_2_2_C_0_tr0 : IN STD_LOGIC;
    APPLY_ROTARY_POS_EMB_LOOP_6_C_4_tr0 : IN STD_LOGIC;
    APPLY_ROTARY_POS_EMB_LOOP_4_C_0_tr0 : IN STD_LOGIC;
    CACHE_UPDATE_LOOP_3_C_2_tr0 : IN STD_LOGIC;
    CACHE_UPDATE_LOOP_2_C_0_tr0 : IN STD_LOGIC;
    CACHE_UPDATE_LOOP_1_C_0_tr0 : IN STD_LOGIC;
    TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_2_tr0 : IN STD_LOGIC;
    TRANSPOSE_LAST_TWO_DIMS_LOOP_2_C_0_tr0 : IN STD_LOGIC;
    TRANSPOSE_LAST_TWO_DIMS_LOOP_1_C_0_tr0 : IN STD_LOGIC;
    GEMM_3D_FLOAT_LOOP_4_C_4_tr0 : IN STD_LOGIC;
    GEMM_3D_FLOAT_LOOP_3_C_2_tr0 : IN STD_LOGIC;
    GEMM_3D_FLOAT_LOOP_1_C_0_tr0 : IN STD_LOGIC;
    SF_LOOP_3_C_12_tr0 : IN STD_LOGIC;
    SF_LOOP_1_C_0_tr0 : IN STD_LOGIC;
    SOFTMAX_LOOP_3_C_1_tr0 : IN STD_LOGIC;
    SOFTMAX_LOOP_4_C_4_tr0 : IN STD_LOGIC;
    SOFTMAX_LOOP_5_C_21_tr0 : IN STD_LOGIC;
    SOFTMAX_LOOP_1_C_2_tr0 : IN STD_LOGIC;
    GEMM_3D_FLOAT_LOOP_4_1_C_4_tr0 : IN STD_LOGIC;
    GEMM_3D_FLOAT_LOOP_3_1_C_2_tr0 : IN STD_LOGIC;
    GEMM_3D_FLOAT_LOOP_1_1_C_0_tr0 : IN STD_LOGIC;
    ATTN_2D_LOOP_3_C_2_tr0 : IN STD_LOGIC;
    ATTN_2D_LOOP_2_C_0_tr0 : IN STD_LOGIC;
    RMS_NORM_LOOP_1_2_C_3_tr0 : IN STD_LOGIC;
    compute_sqrt_1_for_C_15_tr0 : IN STD_LOGIC;
    RMS_NORM_LOOP_2_2_C_5_tr0 : IN STD_LOGIC;
    QUANTIZE_ACTIVATION_LOOP_5_1_C_4_tr0 : IN STD_LOGIC;
    QUANTIZE_ACTIVATION_LOOP_4_1_C_0_tr0 : IN STD_LOGIC;
    QUANTIZE_ACTIVATION_LOOP_3_1_C_0_tr0 : IN STD_LOGIC;
    output_vinit_C_1_tr0 : IN STD_LOGIC;
    LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_3_tr0 : IN STD_LOGIC;
    LINEAR_FORWARD_NO_MUL_LOOP_4_3_C_1_tr0 : IN STD_LOGIC;
    LINEAR_FORWARD_NO_MUL_LOOP_3_3_C_0_tr0 : IN STD_LOGIC;
    LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_33_tr0 : IN STD_LOGIC;
    for_1_for_C_2_tr0 : IN STD_LOGIC
  );
END dut_core_core_fsm;

ARCHITECTURE v8 OF dut_core_core_fsm IS
  -- FSM State Type Declaration for dut_core_core_fsm_1
  TYPE dut_core_core_fsm_1_ST IS (main_C_0, for_for_C_0, for_for_C_1, for_for_C_2,
      main_C_1, main_C_2, main_C_3, main_C_4, main_C_5, main_C_6, compute_sqrt_for_C_0,
      compute_sqrt_for_C_1, compute_sqrt_for_C_2, compute_sqrt_for_C_3, compute_sqrt_for_C_4,
      compute_sqrt_for_C_5, compute_sqrt_for_C_6, compute_sqrt_for_C_7, compute_sqrt_for_C_8,
      compute_sqrt_for_C_9, compute_sqrt_for_C_10, compute_sqrt_for_C_11, compute_sqrt_for_C_12,
      compute_sqrt_for_C_13, compute_sqrt_for_C_14, compute_sqrt_for_C_15, main_C_7,
      main_C_8, main_C_9, main_C_10, main_C_11, main_C_12, main_C_13, main_C_14,
      main_C_15, main_C_16, main_C_17, main_C_18, main_C_19, main_C_20, main_C_21,
      main_C_22, main_C_23, main_C_24, main_C_25, main_C_26, main_C_27, main_C_28,
      main_C_29, main_C_30, main_C_31, main_C_32, main_C_33, main_C_34, main_C_35,
      main_C_36, main_C_37, main_C_38, RMS_NORM_LOOP_2_C_0, RMS_NORM_LOOP_2_C_1,
      RMS_NORM_LOOP_2_C_2, RMS_NORM_LOOP_2_C_3, RMS_NORM_LOOP_2_C_4, RMS_NORM_LOOP_2_C_5,
      main_C_39, main_C_40, main_C_41, main_C_42, main_C_43, main_C_44, main_C_45,
      main_C_46, main_C_47, main_C_48, main_C_49, main_C_50, main_C_51, main_C_52,
      main_C_53, QUANTIZE_ACTIVATION_LOOP_5_C_0, QUANTIZE_ACTIVATION_LOOP_5_C_1,
      QUANTIZE_ACTIVATION_LOOP_5_C_2, QUANTIZE_ACTIVATION_LOOP_5_C_3, QUANTIZE_ACTIVATION_LOOP_5_C_4,
      QUANTIZE_ACTIVATION_LOOP_4_C_0, QUANTIZE_ACTIVATION_LOOP_3_C_0, attention_5_1_384_384_8_48_q_proj_re_vinit_C_0,
      attention_5_1_384_384_8_48_q_proj_re_vinit_C_1, LINEAR_FORWARD_NO_MUL_LOOP_4_C_0,
      LINEAR_FORWARD_NO_MUL_LOOP_5_C_0, LINEAR_FORWARD_NO_MUL_LOOP_5_C_1, LINEAR_FORWARD_NO_MUL_LOOP_5_C_2,
      LINEAR_FORWARD_NO_MUL_LOOP_5_C_3, LINEAR_FORWARD_NO_MUL_LOOP_5_C_4, LINEAR_FORWARD_NO_MUL_LOOP_5_C_5,
      LINEAR_FORWARD_NO_MUL_LOOP_4_C_1, LINEAR_FORWARD_NO_MUL_LOOP_3_C_0, LINEAR_FORWARD_NO_MUL_LOOP_2_C_0,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_1, LINEAR_FORWARD_NO_MUL_LOOP_2_C_2, LINEAR_FORWARD_NO_MUL_LOOP_2_C_3,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_4, LINEAR_FORWARD_NO_MUL_LOOP_2_C_5, LINEAR_FORWARD_NO_MUL_LOOP_2_C_6,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_7, LINEAR_FORWARD_NO_MUL_LOOP_2_C_8, LINEAR_FORWARD_NO_MUL_LOOP_2_C_9,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_10, LINEAR_FORWARD_NO_MUL_LOOP_2_C_11, LINEAR_FORWARD_NO_MUL_LOOP_2_C_12,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_13, LINEAR_FORWARD_NO_MUL_LOOP_2_C_14, LINEAR_FORWARD_NO_MUL_LOOP_2_C_15,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_16, LINEAR_FORWARD_NO_MUL_LOOP_2_C_17, LINEAR_FORWARD_NO_MUL_LOOP_2_C_18,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_19, LINEAR_FORWARD_NO_MUL_LOOP_2_C_20, LINEAR_FORWARD_NO_MUL_LOOP_2_C_21,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_22, LINEAR_FORWARD_NO_MUL_LOOP_2_C_23, LINEAR_FORWARD_NO_MUL_LOOP_2_C_24,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_25, LINEAR_FORWARD_NO_MUL_LOOP_2_C_26, LINEAR_FORWARD_NO_MUL_LOOP_2_C_27,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_28, LINEAR_FORWARD_NO_MUL_LOOP_2_C_29, LINEAR_FORWARD_NO_MUL_LOOP_2_C_30,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_31, LINEAR_FORWARD_NO_MUL_LOOP_2_C_32, LINEAR_FORWARD_NO_MUL_LOOP_2_C_33,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_34, LINEAR_FORWARD_NO_MUL_LOOP_2_C_35, LINEAR_FORWARD_NO_MUL_LOOP_2_C_36,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_37, LINEAR_FORWARD_NO_MUL_LOOP_2_C_38, LINEAR_FORWARD_NO_MUL_LOOP_2_C_39,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_40, LINEAR_FORWARD_NO_MUL_LOOP_2_C_41, LINEAR_FORWARD_NO_MUL_LOOP_2_C_42,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_43, LINEAR_FORWARD_NO_MUL_LOOP_2_C_44, LINEAR_FORWARD_NO_MUL_LOOP_2_C_45,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_46, LINEAR_FORWARD_NO_MUL_LOOP_2_C_47, LINEAR_FORWARD_NO_MUL_LOOP_2_C_48,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_49, LINEAR_FORWARD_NO_MUL_LOOP_2_C_50, LINEAR_FORWARD_NO_MUL_LOOP_2_C_51,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_52, LINEAR_FORWARD_NO_MUL_LOOP_2_C_53, LINEAR_FORWARD_NO_MUL_LOOP_2_C_54,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_55, LINEAR_FORWARD_NO_MUL_LOOP_2_C_56, LINEAR_FORWARD_NO_MUL_LOOP_2_C_57,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_58, LINEAR_FORWARD_NO_MUL_LOOP_2_C_59, LINEAR_FORWARD_NO_MUL_LOOP_2_C_60,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_61, LINEAR_FORWARD_NO_MUL_LOOP_2_C_62, LINEAR_FORWARD_NO_MUL_LOOP_2_C_63,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_64, LINEAR_FORWARD_NO_MUL_LOOP_2_C_65, RESHAPE_2D_TO_3D_LOOP_3_C_0,
      RESHAPE_2D_TO_3D_LOOP_3_C_1, RESHAPE_2D_TO_3D_LOOP_3_C_2, RESHAPE_2D_TO_3D_LOOP_2_C_0,
      RESHAPE_2D_TO_3D_LOOP_3_2_C_0, RESHAPE_2D_TO_3D_LOOP_3_2_C_1, RESHAPE_2D_TO_3D_LOOP_3_2_C_2,
      RESHAPE_2D_TO_3D_LOOP_3_2_C_3, RESHAPE_2D_TO_3D_LOOP_2_2_C_0, APPLY_ROTARY_POS_EMB_LOOP_6_C_0,
      APPLY_ROTARY_POS_EMB_LOOP_6_C_1, APPLY_ROTARY_POS_EMB_LOOP_6_C_2, APPLY_ROTARY_POS_EMB_LOOP_6_C_3,
      APPLY_ROTARY_POS_EMB_LOOP_6_C_4, APPLY_ROTARY_POS_EMB_LOOP_4_C_0, CACHE_UPDATE_LOOP_3_C_0,
      CACHE_UPDATE_LOOP_3_C_1, CACHE_UPDATE_LOOP_3_C_2, CACHE_UPDATE_LOOP_2_C_0,
      CACHE_UPDATE_LOOP_1_C_0, TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_0, TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_1,
      TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_2, TRANSPOSE_LAST_TWO_DIMS_LOOP_2_C_0, TRANSPOSE_LAST_TWO_DIMS_LOOP_1_C_0,
      GEMM_3D_FLOAT_LOOP_3_C_0, GEMM_3D_FLOAT_LOOP_3_C_1, GEMM_3D_FLOAT_LOOP_4_C_0,
      GEMM_3D_FLOAT_LOOP_4_C_1, GEMM_3D_FLOAT_LOOP_4_C_2, GEMM_3D_FLOAT_LOOP_4_C_3,
      GEMM_3D_FLOAT_LOOP_4_C_4, GEMM_3D_FLOAT_LOOP_3_C_2, GEMM_3D_FLOAT_LOOP_1_C_0,
      SF_LOOP_3_C_0, SF_LOOP_3_C_1, SF_LOOP_3_C_2, SF_LOOP_3_C_3, SF_LOOP_3_C_4,
      SF_LOOP_3_C_5, SF_LOOP_3_C_6, SF_LOOP_3_C_7, SF_LOOP_3_C_8, SF_LOOP_3_C_9,
      SF_LOOP_3_C_10, SF_LOOP_3_C_11, SF_LOOP_3_C_12, SF_LOOP_1_C_0, SOFTMAX_LOOP_1_C_0,
      SOFTMAX_LOOP_1_C_1, SOFTMAX_LOOP_3_C_0, SOFTMAX_LOOP_3_C_1, SOFTMAX_LOOP_4_C_0,
      SOFTMAX_LOOP_4_C_1, SOFTMAX_LOOP_4_C_2, SOFTMAX_LOOP_4_C_3, SOFTMAX_LOOP_4_C_4,
      SOFTMAX_LOOP_5_C_0, SOFTMAX_LOOP_5_C_1, SOFTMAX_LOOP_5_C_2, SOFTMAX_LOOP_5_C_3,
      SOFTMAX_LOOP_5_C_4, SOFTMAX_LOOP_5_C_5, SOFTMAX_LOOP_5_C_6, SOFTMAX_LOOP_5_C_7,
      SOFTMAX_LOOP_5_C_8, SOFTMAX_LOOP_5_C_9, SOFTMAX_LOOP_5_C_10, SOFTMAX_LOOP_5_C_11,
      SOFTMAX_LOOP_5_C_12, SOFTMAX_LOOP_5_C_13, SOFTMAX_LOOP_5_C_14, SOFTMAX_LOOP_5_C_15,
      SOFTMAX_LOOP_5_C_16, SOFTMAX_LOOP_5_C_17, SOFTMAX_LOOP_5_C_18, SOFTMAX_LOOP_5_C_19,
      SOFTMAX_LOOP_5_C_20, SOFTMAX_LOOP_5_C_21, SOFTMAX_LOOP_1_C_2, GEMM_3D_FLOAT_LOOP_3_1_C_0,
      GEMM_3D_FLOAT_LOOP_3_1_C_1, GEMM_3D_FLOAT_LOOP_4_1_C_0, GEMM_3D_FLOAT_LOOP_4_1_C_1,
      GEMM_3D_FLOAT_LOOP_4_1_C_2, GEMM_3D_FLOAT_LOOP_4_1_C_3, GEMM_3D_FLOAT_LOOP_4_1_C_4,
      GEMM_3D_FLOAT_LOOP_3_1_C_2, GEMM_3D_FLOAT_LOOP_1_1_C_0, ATTN_2D_LOOP_3_C_0,
      ATTN_2D_LOOP_3_C_1, ATTN_2D_LOOP_3_C_2, ATTN_2D_LOOP_2_C_0, RMS_NORM_LOOP_1_2_C_0,
      RMS_NORM_LOOP_1_2_C_1, RMS_NORM_LOOP_1_2_C_2, RMS_NORM_LOOP_1_2_C_3, main_C_54,
      main_C_55, main_C_56, main_C_57, main_C_58, main_C_59, compute_sqrt_1_for_C_0,
      compute_sqrt_1_for_C_1, compute_sqrt_1_for_C_2, compute_sqrt_1_for_C_3, compute_sqrt_1_for_C_4,
      compute_sqrt_1_for_C_5, compute_sqrt_1_for_C_6, compute_sqrt_1_for_C_7, compute_sqrt_1_for_C_8,
      compute_sqrt_1_for_C_9, compute_sqrt_1_for_C_10, compute_sqrt_1_for_C_11, compute_sqrt_1_for_C_12,
      compute_sqrt_1_for_C_13, compute_sqrt_1_for_C_14, compute_sqrt_1_for_C_15,
      main_C_60, main_C_61, main_C_62, main_C_63, main_C_64, main_C_65, main_C_66,
      main_C_67, main_C_68, main_C_69, main_C_70, main_C_71, main_C_72, main_C_73,
      main_C_74, main_C_75, main_C_76, main_C_77, main_C_78, RMS_NORM_LOOP_2_2_C_0,
      RMS_NORM_LOOP_2_2_C_1, RMS_NORM_LOOP_2_2_C_2, RMS_NORM_LOOP_2_2_C_3, RMS_NORM_LOOP_2_2_C_4,
      RMS_NORM_LOOP_2_2_C_5, main_C_79, main_C_80, main_C_81, main_C_82, main_C_83,
      main_C_84, main_C_85, main_C_86, main_C_87, main_C_88, main_C_89, main_C_90,
      main_C_91, main_C_92, main_C_93, main_C_94, main_C_95, main_C_96, main_C_97,
      main_C_98, main_C_99, main_C_100, main_C_101, main_C_102, main_C_103, main_C_104,
      main_C_105, main_C_106, main_C_107, main_C_108, main_C_109, main_C_110, QUANTIZE_ACTIVATION_LOOP_5_1_C_0,
      QUANTIZE_ACTIVATION_LOOP_5_1_C_1, QUANTIZE_ACTIVATION_LOOP_5_1_C_2, QUANTIZE_ACTIVATION_LOOP_5_1_C_3,
      QUANTIZE_ACTIVATION_LOOP_5_1_C_4, QUANTIZE_ACTIVATION_LOOP_4_1_C_0, QUANTIZE_ACTIVATION_LOOP_3_1_C_0,
      output_vinit_C_0, output_vinit_C_1, LINEAR_FORWARD_NO_MUL_LOOP_4_3_C_0, LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_0,
      LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_1, LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_2, LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_3,
      LINEAR_FORWARD_NO_MUL_LOOP_4_3_C_1, LINEAR_FORWARD_NO_MUL_LOOP_3_3_C_0, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_0,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_1, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_2, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_3,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_4, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_5, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_6,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_7, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_8, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_9,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_10, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_11, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_12,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_13, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_14, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_15,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_16, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_17, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_18,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_19, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_20, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_21,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_22, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_23, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_24,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_25, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_26, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_27,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_28, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_29, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_30,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_31, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_32, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_33,
      for_1_for_C_0, for_1_for_C_1, for_1_for_C_2);

  SIGNAL state_var : dut_core_core_fsm_1_ST;
  SIGNAL state_var_NS : dut_core_core_fsm_1_ST;

BEGIN
  dut_core_core_fsm_1 : PROCESS (for_for_C_2_tr0, compute_sqrt_for_C_15_tr0, RMS_NORM_LOOP_2_C_5_tr0,
      QUANTIZE_ACTIVATION_LOOP_5_C_4_tr0, QUANTIZE_ACTIVATION_LOOP_4_C_0_tr0, QUANTIZE_ACTIVATION_LOOP_3_C_0_tr0,
      attention_5_1_384_384_8_48_q_proj_re_vinit_C_1_tr0, LINEAR_FORWARD_NO_MUL_LOOP_5_C_5_tr0,
      LINEAR_FORWARD_NO_MUL_LOOP_4_C_1_tr0, LINEAR_FORWARD_NO_MUL_LOOP_3_C_0_tr0,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_65_tr0, RESHAPE_2D_TO_3D_LOOP_3_C_2_tr0, RESHAPE_2D_TO_3D_LOOP_2_C_0_tr0,
      RESHAPE_2D_TO_3D_LOOP_3_2_C_3_tr0, RESHAPE_2D_TO_3D_LOOP_2_2_C_0_tr0, APPLY_ROTARY_POS_EMB_LOOP_6_C_4_tr0,
      APPLY_ROTARY_POS_EMB_LOOP_4_C_0_tr0, CACHE_UPDATE_LOOP_3_C_2_tr0, CACHE_UPDATE_LOOP_2_C_0_tr0,
      CACHE_UPDATE_LOOP_1_C_0_tr0, TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_2_tr0, TRANSPOSE_LAST_TWO_DIMS_LOOP_2_C_0_tr0,
      TRANSPOSE_LAST_TWO_DIMS_LOOP_1_C_0_tr0, GEMM_3D_FLOAT_LOOP_4_C_4_tr0, GEMM_3D_FLOAT_LOOP_3_C_2_tr0,
      GEMM_3D_FLOAT_LOOP_1_C_0_tr0, SF_LOOP_3_C_12_tr0, SF_LOOP_1_C_0_tr0, SOFTMAX_LOOP_3_C_1_tr0,
      SOFTMAX_LOOP_4_C_4_tr0, SOFTMAX_LOOP_5_C_21_tr0, SOFTMAX_LOOP_1_C_2_tr0, GEMM_3D_FLOAT_LOOP_4_1_C_4_tr0,
      GEMM_3D_FLOAT_LOOP_3_1_C_2_tr0, GEMM_3D_FLOAT_LOOP_1_1_C_0_tr0, ATTN_2D_LOOP_3_C_2_tr0,
      ATTN_2D_LOOP_2_C_0_tr0, RMS_NORM_LOOP_1_2_C_3_tr0, compute_sqrt_1_for_C_15_tr0,
      RMS_NORM_LOOP_2_2_C_5_tr0, QUANTIZE_ACTIVATION_LOOP_5_1_C_4_tr0, QUANTIZE_ACTIVATION_LOOP_4_1_C_0_tr0,
      QUANTIZE_ACTIVATION_LOOP_3_1_C_0_tr0, output_vinit_C_1_tr0, LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_3_tr0,
      LINEAR_FORWARD_NO_MUL_LOOP_4_3_C_1_tr0, LINEAR_FORWARD_NO_MUL_LOOP_3_3_C_0_tr0,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_33_tr0, for_1_for_C_2_tr0, state_var)
  BEGIN
    CASE state_var IS
      WHEN for_for_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000001");
        state_var_NS <= for_for_C_1;
      WHEN for_for_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000010");
        state_var_NS <= for_for_C_2;
      WHEN for_for_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000011");
        IF ( for_for_C_2_tr0 = '1' ) THEN
          state_var_NS <= main_C_1;
        ELSE
          state_var_NS <= for_for_C_0;
        END IF;
      WHEN main_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000100");
        state_var_NS <= main_C_2;
      WHEN main_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000101");
        state_var_NS <= main_C_3;
      WHEN main_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000110");
        state_var_NS <= main_C_4;
      WHEN main_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000111");
        state_var_NS <= main_C_5;
      WHEN main_C_5 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000001000");
        state_var_NS <= main_C_6;
      WHEN main_C_6 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000001001");
        state_var_NS <= compute_sqrt_for_C_0;
      WHEN compute_sqrt_for_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000001010");
        state_var_NS <= compute_sqrt_for_C_1;
      WHEN compute_sqrt_for_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000001011");
        state_var_NS <= compute_sqrt_for_C_2;
      WHEN compute_sqrt_for_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000001100");
        state_var_NS <= compute_sqrt_for_C_3;
      WHEN compute_sqrt_for_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000001101");
        state_var_NS <= compute_sqrt_for_C_4;
      WHEN compute_sqrt_for_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000001110");
        state_var_NS <= compute_sqrt_for_C_5;
      WHEN compute_sqrt_for_C_5 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000001111");
        state_var_NS <= compute_sqrt_for_C_6;
      WHEN compute_sqrt_for_C_6 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000010000");
        state_var_NS <= compute_sqrt_for_C_7;
      WHEN compute_sqrt_for_C_7 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000010001");
        state_var_NS <= compute_sqrt_for_C_8;
      WHEN compute_sqrt_for_C_8 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000010010");
        state_var_NS <= compute_sqrt_for_C_9;
      WHEN compute_sqrt_for_C_9 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000010011");
        state_var_NS <= compute_sqrt_for_C_10;
      WHEN compute_sqrt_for_C_10 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000010100");
        state_var_NS <= compute_sqrt_for_C_11;
      WHEN compute_sqrt_for_C_11 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000010101");
        state_var_NS <= compute_sqrt_for_C_12;
      WHEN compute_sqrt_for_C_12 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000010110");
        state_var_NS <= compute_sqrt_for_C_13;
      WHEN compute_sqrt_for_C_13 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000010111");
        state_var_NS <= compute_sqrt_for_C_14;
      WHEN compute_sqrt_for_C_14 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000011000");
        state_var_NS <= compute_sqrt_for_C_15;
      WHEN compute_sqrt_for_C_15 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000011001");
        IF ( compute_sqrt_for_C_15_tr0 = '1' ) THEN
          state_var_NS <= main_C_7;
        ELSE
          state_var_NS <= compute_sqrt_for_C_0;
        END IF;
      WHEN main_C_7 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000011010");
        state_var_NS <= main_C_8;
      WHEN main_C_8 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000011011");
        state_var_NS <= main_C_9;
      WHEN main_C_9 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000011100");
        state_var_NS <= main_C_10;
      WHEN main_C_10 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000011101");
        state_var_NS <= main_C_11;
      WHEN main_C_11 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000011110");
        state_var_NS <= main_C_12;
      WHEN main_C_12 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000011111");
        state_var_NS <= main_C_13;
      WHEN main_C_13 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000100000");
        state_var_NS <= main_C_14;
      WHEN main_C_14 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000100001");
        state_var_NS <= main_C_15;
      WHEN main_C_15 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000100010");
        state_var_NS <= main_C_16;
      WHEN main_C_16 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000100011");
        state_var_NS <= main_C_17;
      WHEN main_C_17 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000100100");
        state_var_NS <= main_C_18;
      WHEN main_C_18 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000100101");
        state_var_NS <= main_C_19;
      WHEN main_C_19 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000100110");
        state_var_NS <= main_C_20;
      WHEN main_C_20 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000100111");
        state_var_NS <= main_C_21;
      WHEN main_C_21 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000101000");
        state_var_NS <= main_C_22;
      WHEN main_C_22 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000101001");
        state_var_NS <= main_C_23;
      WHEN main_C_23 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000101010");
        state_var_NS <= main_C_24;
      WHEN main_C_24 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000101011");
        state_var_NS <= main_C_25;
      WHEN main_C_25 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000101100");
        state_var_NS <= main_C_26;
      WHEN main_C_26 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000101101");
        state_var_NS <= main_C_27;
      WHEN main_C_27 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000101110");
        state_var_NS <= main_C_28;
      WHEN main_C_28 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000101111");
        state_var_NS <= main_C_29;
      WHEN main_C_29 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000110000");
        state_var_NS <= main_C_30;
      WHEN main_C_30 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000110001");
        state_var_NS <= main_C_31;
      WHEN main_C_31 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000110010");
        state_var_NS <= main_C_32;
      WHEN main_C_32 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000110011");
        state_var_NS <= main_C_33;
      WHEN main_C_33 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000110100");
        state_var_NS <= main_C_34;
      WHEN main_C_34 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000110101");
        state_var_NS <= main_C_35;
      WHEN main_C_35 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000110110");
        state_var_NS <= main_C_36;
      WHEN main_C_36 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000110111");
        state_var_NS <= main_C_37;
      WHEN main_C_37 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000111000");
        state_var_NS <= main_C_38;
      WHEN main_C_38 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000111001");
        state_var_NS <= RMS_NORM_LOOP_2_C_0;
      WHEN RMS_NORM_LOOP_2_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000111010");
        state_var_NS <= RMS_NORM_LOOP_2_C_1;
      WHEN RMS_NORM_LOOP_2_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000111011");
        state_var_NS <= RMS_NORM_LOOP_2_C_2;
      WHEN RMS_NORM_LOOP_2_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000111100");
        state_var_NS <= RMS_NORM_LOOP_2_C_3;
      WHEN RMS_NORM_LOOP_2_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000111101");
        state_var_NS <= RMS_NORM_LOOP_2_C_4;
      WHEN RMS_NORM_LOOP_2_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000111110");
        state_var_NS <= RMS_NORM_LOOP_2_C_5;
      WHEN RMS_NORM_LOOP_2_C_5 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000111111");
        IF ( RMS_NORM_LOOP_2_C_5_tr0 = '1' ) THEN
          state_var_NS <= main_C_39;
        ELSE
          state_var_NS <= RMS_NORM_LOOP_2_C_0;
        END IF;
      WHEN main_C_39 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001000000");
        state_var_NS <= main_C_40;
      WHEN main_C_40 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001000001");
        state_var_NS <= main_C_41;
      WHEN main_C_41 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001000010");
        state_var_NS <= main_C_42;
      WHEN main_C_42 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001000011");
        state_var_NS <= main_C_43;
      WHEN main_C_43 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001000100");
        state_var_NS <= main_C_44;
      WHEN main_C_44 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001000101");
        state_var_NS <= main_C_45;
      WHEN main_C_45 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001000110");
        state_var_NS <= main_C_46;
      WHEN main_C_46 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001000111");
        state_var_NS <= main_C_47;
      WHEN main_C_47 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001001000");
        state_var_NS <= main_C_48;
      WHEN main_C_48 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001001001");
        state_var_NS <= main_C_49;
      WHEN main_C_49 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001001010");
        state_var_NS <= main_C_50;
      WHEN main_C_50 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001001011");
        state_var_NS <= main_C_51;
      WHEN main_C_51 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001001100");
        state_var_NS <= main_C_52;
      WHEN main_C_52 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001001101");
        state_var_NS <= main_C_53;
      WHEN main_C_53 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001001110");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_5_C_0;
      WHEN QUANTIZE_ACTIVATION_LOOP_5_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001001111");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_5_C_1;
      WHEN QUANTIZE_ACTIVATION_LOOP_5_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001010000");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_5_C_2;
      WHEN QUANTIZE_ACTIVATION_LOOP_5_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001010001");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_5_C_3;
      WHEN QUANTIZE_ACTIVATION_LOOP_5_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001010010");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_5_C_4;
      WHEN QUANTIZE_ACTIVATION_LOOP_5_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001010011");
        IF ( QUANTIZE_ACTIVATION_LOOP_5_C_4_tr0 = '1' ) THEN
          state_var_NS <= QUANTIZE_ACTIVATION_LOOP_4_C_0;
        ELSE
          state_var_NS <= QUANTIZE_ACTIVATION_LOOP_5_C_0;
        END IF;
      WHEN QUANTIZE_ACTIVATION_LOOP_4_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001010100");
        IF ( QUANTIZE_ACTIVATION_LOOP_4_C_0_tr0 = '1' ) THEN
          state_var_NS <= QUANTIZE_ACTIVATION_LOOP_3_C_0;
        ELSE
          state_var_NS <= QUANTIZE_ACTIVATION_LOOP_5_C_0;
        END IF;
      WHEN QUANTIZE_ACTIVATION_LOOP_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001010101");
        IF ( QUANTIZE_ACTIVATION_LOOP_3_C_0_tr0 = '1' ) THEN
          state_var_NS <= attention_5_1_384_384_8_48_q_proj_re_vinit_C_0;
        ELSE
          state_var_NS <= QUANTIZE_ACTIVATION_LOOP_5_C_0;
        END IF;
      WHEN attention_5_1_384_384_8_48_q_proj_re_vinit_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001010110");
        state_var_NS <= attention_5_1_384_384_8_48_q_proj_re_vinit_C_1;
      WHEN attention_5_1_384_384_8_48_q_proj_re_vinit_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001010111");
        IF ( attention_5_1_384_384_8_48_q_proj_re_vinit_C_1_tr0 = '1' ) THEN
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_4_C_0;
        ELSE
          state_var_NS <= attention_5_1_384_384_8_48_q_proj_re_vinit_C_0;
        END IF;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_4_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001011000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_5_C_0;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_5_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001011001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_5_C_1;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_5_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001011010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_5_C_2;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_5_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001011011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_5_C_3;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_5_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001011100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_5_C_4;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_5_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001011101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_5_C_5;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_5_C_5 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001011110");
        IF ( LINEAR_FORWARD_NO_MUL_LOOP_5_C_5_tr0 = '1' ) THEN
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_4_C_1;
        ELSE
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_5_C_0;
        END IF;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_4_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001011111");
        IF ( LINEAR_FORWARD_NO_MUL_LOOP_4_C_1_tr0 = '1' ) THEN
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_3_C_0;
        ELSE
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_4_C_0;
        END IF;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001100000");
        IF ( LINEAR_FORWARD_NO_MUL_LOOP_3_C_0_tr0 = '1' ) THEN
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_0;
        ELSE
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_4_C_0;
        END IF;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001100001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_1;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001100010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_2;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001100011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_3;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001100100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_4;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001100101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_5;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_5 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001100110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_6;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_6 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001100111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_7;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_7 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001101000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_8;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_8 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001101001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_9;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_9 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001101010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_10;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_10 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001101011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_11;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_11 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001101100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_12;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_12 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001101101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_13;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_13 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001101110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_14;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_14 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001101111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_15;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_15 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001110000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_16;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_16 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001110001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_17;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_17 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001110010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_18;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_18 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001110011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_19;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_19 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001110100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_20;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_20 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001110101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_21;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_21 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001110110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_22;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_22 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001110111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_23;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_23 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001111000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_24;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_24 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001111001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_25;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_25 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001111010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_26;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_26 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001111011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_27;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_27 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001111100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_28;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_28 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001111101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_29;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_29 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001111110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_30;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_30 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001111111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_31;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_31 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010000000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_32;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_32 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010000001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_33;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_33 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010000010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_34;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_34 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010000011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_35;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_35 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010000100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_36;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_36 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010000101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_37;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_37 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010000110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_38;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_38 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010000111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_39;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_39 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010001000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_40;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_40 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010001001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_41;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_41 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010001010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_42;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_42 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010001011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_43;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_43 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010001100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_44;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_44 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010001101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_45;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_45 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010001110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_46;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_46 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010001111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_47;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_47 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010010000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_48;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_48 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010010001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_49;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_49 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010010010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_50;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_50 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010010011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_51;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_51 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010010100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_52;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_52 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010010101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_53;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_53 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010010110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_54;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_54 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010010111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_55;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_55 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010011000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_56;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_56 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010011001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_57;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_57 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010011010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_58;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_58 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010011011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_59;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_59 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010011100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_60;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_60 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010011101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_61;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_61 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010011110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_62;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_62 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010011111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_63;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_63 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010100000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_64;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_64 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010100001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_65;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_65 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010100010");
        IF ( LINEAR_FORWARD_NO_MUL_LOOP_2_C_65_tr0 = '1' ) THEN
          state_var_NS <= RESHAPE_2D_TO_3D_LOOP_3_C_0;
        ELSE
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_4_C_0;
        END IF;
      WHEN RESHAPE_2D_TO_3D_LOOP_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010100011");
        state_var_NS <= RESHAPE_2D_TO_3D_LOOP_3_C_1;
      WHEN RESHAPE_2D_TO_3D_LOOP_3_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010100100");
        state_var_NS <= RESHAPE_2D_TO_3D_LOOP_3_C_2;
      WHEN RESHAPE_2D_TO_3D_LOOP_3_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010100101");
        IF ( RESHAPE_2D_TO_3D_LOOP_3_C_2_tr0 = '1' ) THEN
          state_var_NS <= RESHAPE_2D_TO_3D_LOOP_2_C_0;
        ELSE
          state_var_NS <= RESHAPE_2D_TO_3D_LOOP_3_C_0;
        END IF;
      WHEN RESHAPE_2D_TO_3D_LOOP_2_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010100110");
        IF ( RESHAPE_2D_TO_3D_LOOP_2_C_0_tr0 = '1' ) THEN
          state_var_NS <= RESHAPE_2D_TO_3D_LOOP_3_2_C_0;
        ELSE
          state_var_NS <= RESHAPE_2D_TO_3D_LOOP_3_C_0;
        END IF;
      WHEN RESHAPE_2D_TO_3D_LOOP_3_2_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010100111");
        state_var_NS <= RESHAPE_2D_TO_3D_LOOP_3_2_C_1;
      WHEN RESHAPE_2D_TO_3D_LOOP_3_2_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010101000");
        state_var_NS <= RESHAPE_2D_TO_3D_LOOP_3_2_C_2;
      WHEN RESHAPE_2D_TO_3D_LOOP_3_2_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010101001");
        state_var_NS <= RESHAPE_2D_TO_3D_LOOP_3_2_C_3;
      WHEN RESHAPE_2D_TO_3D_LOOP_3_2_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010101010");
        IF ( RESHAPE_2D_TO_3D_LOOP_3_2_C_3_tr0 = '1' ) THEN
          state_var_NS <= RESHAPE_2D_TO_3D_LOOP_2_2_C_0;
        ELSE
          state_var_NS <= RESHAPE_2D_TO_3D_LOOP_3_2_C_0;
        END IF;
      WHEN RESHAPE_2D_TO_3D_LOOP_2_2_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010101011");
        IF ( RESHAPE_2D_TO_3D_LOOP_2_2_C_0_tr0 = '1' ) THEN
          state_var_NS <= APPLY_ROTARY_POS_EMB_LOOP_6_C_0;
        ELSE
          state_var_NS <= RESHAPE_2D_TO_3D_LOOP_3_2_C_0;
        END IF;
      WHEN APPLY_ROTARY_POS_EMB_LOOP_6_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010101100");
        state_var_NS <= APPLY_ROTARY_POS_EMB_LOOP_6_C_1;
      WHEN APPLY_ROTARY_POS_EMB_LOOP_6_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010101101");
        state_var_NS <= APPLY_ROTARY_POS_EMB_LOOP_6_C_2;
      WHEN APPLY_ROTARY_POS_EMB_LOOP_6_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010101110");
        state_var_NS <= APPLY_ROTARY_POS_EMB_LOOP_6_C_3;
      WHEN APPLY_ROTARY_POS_EMB_LOOP_6_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010101111");
        state_var_NS <= APPLY_ROTARY_POS_EMB_LOOP_6_C_4;
      WHEN APPLY_ROTARY_POS_EMB_LOOP_6_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010110000");
        IF ( APPLY_ROTARY_POS_EMB_LOOP_6_C_4_tr0 = '1' ) THEN
          state_var_NS <= APPLY_ROTARY_POS_EMB_LOOP_4_C_0;
        ELSE
          state_var_NS <= APPLY_ROTARY_POS_EMB_LOOP_6_C_0;
        END IF;
      WHEN APPLY_ROTARY_POS_EMB_LOOP_4_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010110001");
        IF ( APPLY_ROTARY_POS_EMB_LOOP_4_C_0_tr0 = '1' ) THEN
          state_var_NS <= CACHE_UPDATE_LOOP_3_C_0;
        ELSE
          state_var_NS <= APPLY_ROTARY_POS_EMB_LOOP_6_C_0;
        END IF;
      WHEN CACHE_UPDATE_LOOP_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010110010");
        state_var_NS <= CACHE_UPDATE_LOOP_3_C_1;
      WHEN CACHE_UPDATE_LOOP_3_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010110011");
        state_var_NS <= CACHE_UPDATE_LOOP_3_C_2;
      WHEN CACHE_UPDATE_LOOP_3_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010110100");
        IF ( CACHE_UPDATE_LOOP_3_C_2_tr0 = '1' ) THEN
          state_var_NS <= CACHE_UPDATE_LOOP_2_C_0;
        ELSE
          state_var_NS <= CACHE_UPDATE_LOOP_3_C_0;
        END IF;
      WHEN CACHE_UPDATE_LOOP_2_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010110101");
        IF ( CACHE_UPDATE_LOOP_2_C_0_tr0 = '1' ) THEN
          state_var_NS <= CACHE_UPDATE_LOOP_1_C_0;
        ELSE
          state_var_NS <= CACHE_UPDATE_LOOP_3_C_0;
        END IF;
      WHEN CACHE_UPDATE_LOOP_1_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010110110");
        IF ( CACHE_UPDATE_LOOP_1_C_0_tr0 = '1' ) THEN
          state_var_NS <= TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_0;
        ELSE
          state_var_NS <= CACHE_UPDATE_LOOP_3_C_0;
        END IF;
      WHEN TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010110111");
        state_var_NS <= TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_1;
      WHEN TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010111000");
        state_var_NS <= TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_2;
      WHEN TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010111001");
        IF ( TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_2_tr0 = '1' ) THEN
          state_var_NS <= TRANSPOSE_LAST_TWO_DIMS_LOOP_2_C_0;
        ELSE
          state_var_NS <= TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_0;
        END IF;
      WHEN TRANSPOSE_LAST_TWO_DIMS_LOOP_2_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010111010");
        IF ( TRANSPOSE_LAST_TWO_DIMS_LOOP_2_C_0_tr0 = '1' ) THEN
          state_var_NS <= TRANSPOSE_LAST_TWO_DIMS_LOOP_1_C_0;
        ELSE
          state_var_NS <= TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_0;
        END IF;
      WHEN TRANSPOSE_LAST_TWO_DIMS_LOOP_1_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010111011");
        IF ( TRANSPOSE_LAST_TWO_DIMS_LOOP_1_C_0_tr0 = '1' ) THEN
          state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_0;
        ELSE
          state_var_NS <= TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_0;
        END IF;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010111100");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_1;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010111101");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_4_C_0;
      WHEN GEMM_3D_FLOAT_LOOP_4_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010111110");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_4_C_1;
      WHEN GEMM_3D_FLOAT_LOOP_4_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010111111");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_4_C_2;
      WHEN GEMM_3D_FLOAT_LOOP_4_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011000000");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_4_C_3;
      WHEN GEMM_3D_FLOAT_LOOP_4_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011000001");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_4_C_4;
      WHEN GEMM_3D_FLOAT_LOOP_4_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011000010");
        IF ( GEMM_3D_FLOAT_LOOP_4_C_4_tr0 = '1' ) THEN
          state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_2;
        ELSE
          state_var_NS <= GEMM_3D_FLOAT_LOOP_4_C_0;
        END IF;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011000011");
        IF ( GEMM_3D_FLOAT_LOOP_3_C_2_tr0 = '1' ) THEN
          state_var_NS <= GEMM_3D_FLOAT_LOOP_1_C_0;
        ELSE
          state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_0;
        END IF;
      WHEN GEMM_3D_FLOAT_LOOP_1_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011000100");
        IF ( GEMM_3D_FLOAT_LOOP_1_C_0_tr0 = '1' ) THEN
          state_var_NS <= SF_LOOP_3_C_0;
        ELSE
          state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_0;
        END IF;
      WHEN SF_LOOP_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011000101");
        state_var_NS <= SF_LOOP_3_C_1;
      WHEN SF_LOOP_3_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011000110");
        state_var_NS <= SF_LOOP_3_C_2;
      WHEN SF_LOOP_3_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011000111");
        state_var_NS <= SF_LOOP_3_C_3;
      WHEN SF_LOOP_3_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011001000");
        state_var_NS <= SF_LOOP_3_C_4;
      WHEN SF_LOOP_3_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011001001");
        state_var_NS <= SF_LOOP_3_C_5;
      WHEN SF_LOOP_3_C_5 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011001010");
        state_var_NS <= SF_LOOP_3_C_6;
      WHEN SF_LOOP_3_C_6 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011001011");
        state_var_NS <= SF_LOOP_3_C_7;
      WHEN SF_LOOP_3_C_7 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011001100");
        state_var_NS <= SF_LOOP_3_C_8;
      WHEN SF_LOOP_3_C_8 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011001101");
        state_var_NS <= SF_LOOP_3_C_9;
      WHEN SF_LOOP_3_C_9 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011001110");
        state_var_NS <= SF_LOOP_3_C_10;
      WHEN SF_LOOP_3_C_10 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011001111");
        state_var_NS <= SF_LOOP_3_C_11;
      WHEN SF_LOOP_3_C_11 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011010000");
        state_var_NS <= SF_LOOP_3_C_12;
      WHEN SF_LOOP_3_C_12 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011010001");
        IF ( SF_LOOP_3_C_12_tr0 = '1' ) THEN
          state_var_NS <= SF_LOOP_1_C_0;
        ELSE
          state_var_NS <= SF_LOOP_3_C_0;
        END IF;
      WHEN SF_LOOP_1_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011010010");
        IF ( SF_LOOP_1_C_0_tr0 = '1' ) THEN
          state_var_NS <= SOFTMAX_LOOP_1_C_0;
        ELSE
          state_var_NS <= SF_LOOP_3_C_0;
        END IF;
      WHEN SOFTMAX_LOOP_1_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011010011");
        state_var_NS <= SOFTMAX_LOOP_1_C_1;
      WHEN SOFTMAX_LOOP_1_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011010100");
        state_var_NS <= SOFTMAX_LOOP_3_C_0;
      WHEN SOFTMAX_LOOP_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011010101");
        state_var_NS <= SOFTMAX_LOOP_3_C_1;
      WHEN SOFTMAX_LOOP_3_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011010110");
        IF ( SOFTMAX_LOOP_3_C_1_tr0 = '1' ) THEN
          state_var_NS <= SOFTMAX_LOOP_4_C_0;
        ELSE
          state_var_NS <= SOFTMAX_LOOP_3_C_0;
        END IF;
      WHEN SOFTMAX_LOOP_4_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011010111");
        state_var_NS <= SOFTMAX_LOOP_4_C_1;
      WHEN SOFTMAX_LOOP_4_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011011000");
        state_var_NS <= SOFTMAX_LOOP_4_C_2;
      WHEN SOFTMAX_LOOP_4_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011011001");
        state_var_NS <= SOFTMAX_LOOP_4_C_3;
      WHEN SOFTMAX_LOOP_4_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011011010");
        state_var_NS <= SOFTMAX_LOOP_4_C_4;
      WHEN SOFTMAX_LOOP_4_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011011011");
        IF ( SOFTMAX_LOOP_4_C_4_tr0 = '1' ) THEN
          state_var_NS <= SOFTMAX_LOOP_5_C_0;
        ELSE
          state_var_NS <= SOFTMAX_LOOP_4_C_0;
        END IF;
      WHEN SOFTMAX_LOOP_5_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011011100");
        state_var_NS <= SOFTMAX_LOOP_5_C_1;
      WHEN SOFTMAX_LOOP_5_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011011101");
        state_var_NS <= SOFTMAX_LOOP_5_C_2;
      WHEN SOFTMAX_LOOP_5_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011011110");
        state_var_NS <= SOFTMAX_LOOP_5_C_3;
      WHEN SOFTMAX_LOOP_5_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011011111");
        state_var_NS <= SOFTMAX_LOOP_5_C_4;
      WHEN SOFTMAX_LOOP_5_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011100000");
        state_var_NS <= SOFTMAX_LOOP_5_C_5;
      WHEN SOFTMAX_LOOP_5_C_5 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011100001");
        state_var_NS <= SOFTMAX_LOOP_5_C_6;
      WHEN SOFTMAX_LOOP_5_C_6 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011100010");
        state_var_NS <= SOFTMAX_LOOP_5_C_7;
      WHEN SOFTMAX_LOOP_5_C_7 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011100011");
        state_var_NS <= SOFTMAX_LOOP_5_C_8;
      WHEN SOFTMAX_LOOP_5_C_8 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011100100");
        state_var_NS <= SOFTMAX_LOOP_5_C_9;
      WHEN SOFTMAX_LOOP_5_C_9 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011100101");
        state_var_NS <= SOFTMAX_LOOP_5_C_10;
      WHEN SOFTMAX_LOOP_5_C_10 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011100110");
        state_var_NS <= SOFTMAX_LOOP_5_C_11;
      WHEN SOFTMAX_LOOP_5_C_11 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011100111");
        state_var_NS <= SOFTMAX_LOOP_5_C_12;
      WHEN SOFTMAX_LOOP_5_C_12 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011101000");
        state_var_NS <= SOFTMAX_LOOP_5_C_13;
      WHEN SOFTMAX_LOOP_5_C_13 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011101001");
        state_var_NS <= SOFTMAX_LOOP_5_C_14;
      WHEN SOFTMAX_LOOP_5_C_14 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011101010");
        state_var_NS <= SOFTMAX_LOOP_5_C_15;
      WHEN SOFTMAX_LOOP_5_C_15 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011101011");
        state_var_NS <= SOFTMAX_LOOP_5_C_16;
      WHEN SOFTMAX_LOOP_5_C_16 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011101100");
        state_var_NS <= SOFTMAX_LOOP_5_C_17;
      WHEN SOFTMAX_LOOP_5_C_17 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011101101");
        state_var_NS <= SOFTMAX_LOOP_5_C_18;
      WHEN SOFTMAX_LOOP_5_C_18 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011101110");
        state_var_NS <= SOFTMAX_LOOP_5_C_19;
      WHEN SOFTMAX_LOOP_5_C_19 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011101111");
        state_var_NS <= SOFTMAX_LOOP_5_C_20;
      WHEN SOFTMAX_LOOP_5_C_20 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011110000");
        state_var_NS <= SOFTMAX_LOOP_5_C_21;
      WHEN SOFTMAX_LOOP_5_C_21 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011110001");
        IF ( SOFTMAX_LOOP_5_C_21_tr0 = '1' ) THEN
          state_var_NS <= SOFTMAX_LOOP_1_C_2;
        ELSE
          state_var_NS <= SOFTMAX_LOOP_5_C_0;
        END IF;
      WHEN SOFTMAX_LOOP_1_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011110010");
        IF ( SOFTMAX_LOOP_1_C_2_tr0 = '1' ) THEN
          state_var_NS <= GEMM_3D_FLOAT_LOOP_3_1_C_0;
        ELSE
          state_var_NS <= SOFTMAX_LOOP_1_C_0;
        END IF;
      WHEN GEMM_3D_FLOAT_LOOP_3_1_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011110011");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_1_C_1;
      WHEN GEMM_3D_FLOAT_LOOP_3_1_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011110100");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_4_1_C_0;
      WHEN GEMM_3D_FLOAT_LOOP_4_1_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011110101");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_4_1_C_1;
      WHEN GEMM_3D_FLOAT_LOOP_4_1_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011110110");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_4_1_C_2;
      WHEN GEMM_3D_FLOAT_LOOP_4_1_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011110111");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_4_1_C_3;
      WHEN GEMM_3D_FLOAT_LOOP_4_1_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011111000");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_4_1_C_4;
      WHEN GEMM_3D_FLOAT_LOOP_4_1_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011111001");
        IF ( GEMM_3D_FLOAT_LOOP_4_1_C_4_tr0 = '1' ) THEN
          state_var_NS <= GEMM_3D_FLOAT_LOOP_3_1_C_2;
        ELSE
          state_var_NS <= GEMM_3D_FLOAT_LOOP_4_1_C_0;
        END IF;
      WHEN GEMM_3D_FLOAT_LOOP_3_1_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011111010");
        IF ( GEMM_3D_FLOAT_LOOP_3_1_C_2_tr0 = '1' ) THEN
          state_var_NS <= GEMM_3D_FLOAT_LOOP_1_1_C_0;
        ELSE
          state_var_NS <= GEMM_3D_FLOAT_LOOP_3_1_C_0;
        END IF;
      WHEN GEMM_3D_FLOAT_LOOP_1_1_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011111011");
        IF ( GEMM_3D_FLOAT_LOOP_1_1_C_0_tr0 = '1' ) THEN
          state_var_NS <= ATTN_2D_LOOP_3_C_0;
        ELSE
          state_var_NS <= GEMM_3D_FLOAT_LOOP_3_1_C_0;
        END IF;
      WHEN ATTN_2D_LOOP_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011111100");
        state_var_NS <= ATTN_2D_LOOP_3_C_1;
      WHEN ATTN_2D_LOOP_3_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011111101");
        state_var_NS <= ATTN_2D_LOOP_3_C_2;
      WHEN ATTN_2D_LOOP_3_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011111110");
        IF ( ATTN_2D_LOOP_3_C_2_tr0 = '1' ) THEN
          state_var_NS <= ATTN_2D_LOOP_2_C_0;
        ELSE
          state_var_NS <= ATTN_2D_LOOP_3_C_0;
        END IF;
      WHEN ATTN_2D_LOOP_2_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011111111");
        IF ( ATTN_2D_LOOP_2_C_0_tr0 = '1' ) THEN
          state_var_NS <= RMS_NORM_LOOP_1_2_C_0;
        ELSE
          state_var_NS <= ATTN_2D_LOOP_3_C_0;
        END IF;
      WHEN RMS_NORM_LOOP_1_2_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100000000");
        state_var_NS <= RMS_NORM_LOOP_1_2_C_1;
      WHEN RMS_NORM_LOOP_1_2_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100000001");
        state_var_NS <= RMS_NORM_LOOP_1_2_C_2;
      WHEN RMS_NORM_LOOP_1_2_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100000010");
        state_var_NS <= RMS_NORM_LOOP_1_2_C_3;
      WHEN RMS_NORM_LOOP_1_2_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100000011");
        IF ( RMS_NORM_LOOP_1_2_C_3_tr0 = '1' ) THEN
          state_var_NS <= main_C_54;
        ELSE
          state_var_NS <= RMS_NORM_LOOP_1_2_C_0;
        END IF;
      WHEN main_C_54 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100000100");
        state_var_NS <= main_C_55;
      WHEN main_C_55 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100000101");
        state_var_NS <= main_C_56;
      WHEN main_C_56 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100000110");
        state_var_NS <= main_C_57;
      WHEN main_C_57 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100000111");
        state_var_NS <= main_C_58;
      WHEN main_C_58 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100001000");
        state_var_NS <= main_C_59;
      WHEN main_C_59 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100001001");
        state_var_NS <= compute_sqrt_1_for_C_0;
      WHEN compute_sqrt_1_for_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100001010");
        state_var_NS <= compute_sqrt_1_for_C_1;
      WHEN compute_sqrt_1_for_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100001011");
        state_var_NS <= compute_sqrt_1_for_C_2;
      WHEN compute_sqrt_1_for_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100001100");
        state_var_NS <= compute_sqrt_1_for_C_3;
      WHEN compute_sqrt_1_for_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100001101");
        state_var_NS <= compute_sqrt_1_for_C_4;
      WHEN compute_sqrt_1_for_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100001110");
        state_var_NS <= compute_sqrt_1_for_C_5;
      WHEN compute_sqrt_1_for_C_5 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100001111");
        state_var_NS <= compute_sqrt_1_for_C_6;
      WHEN compute_sqrt_1_for_C_6 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100010000");
        state_var_NS <= compute_sqrt_1_for_C_7;
      WHEN compute_sqrt_1_for_C_7 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100010001");
        state_var_NS <= compute_sqrt_1_for_C_8;
      WHEN compute_sqrt_1_for_C_8 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100010010");
        state_var_NS <= compute_sqrt_1_for_C_9;
      WHEN compute_sqrt_1_for_C_9 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100010011");
        state_var_NS <= compute_sqrt_1_for_C_10;
      WHEN compute_sqrt_1_for_C_10 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100010100");
        state_var_NS <= compute_sqrt_1_for_C_11;
      WHEN compute_sqrt_1_for_C_11 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100010101");
        state_var_NS <= compute_sqrt_1_for_C_12;
      WHEN compute_sqrt_1_for_C_12 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100010110");
        state_var_NS <= compute_sqrt_1_for_C_13;
      WHEN compute_sqrt_1_for_C_13 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100010111");
        state_var_NS <= compute_sqrt_1_for_C_14;
      WHEN compute_sqrt_1_for_C_14 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100011000");
        state_var_NS <= compute_sqrt_1_for_C_15;
      WHEN compute_sqrt_1_for_C_15 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100011001");
        IF ( compute_sqrt_1_for_C_15_tr0 = '1' ) THEN
          state_var_NS <= main_C_60;
        ELSE
          state_var_NS <= compute_sqrt_1_for_C_0;
        END IF;
      WHEN main_C_60 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100011010");
        state_var_NS <= main_C_61;
      WHEN main_C_61 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100011011");
        state_var_NS <= main_C_62;
      WHEN main_C_62 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100011100");
        state_var_NS <= main_C_63;
      WHEN main_C_63 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100011101");
        state_var_NS <= main_C_64;
      WHEN main_C_64 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100011110");
        state_var_NS <= main_C_65;
      WHEN main_C_65 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100011111");
        state_var_NS <= main_C_66;
      WHEN main_C_66 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100100000");
        state_var_NS <= main_C_67;
      WHEN main_C_67 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100100001");
        state_var_NS <= main_C_68;
      WHEN main_C_68 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100100010");
        state_var_NS <= main_C_69;
      WHEN main_C_69 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100100011");
        state_var_NS <= main_C_70;
      WHEN main_C_70 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100100100");
        state_var_NS <= main_C_71;
      WHEN main_C_71 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100100101");
        state_var_NS <= main_C_72;
      WHEN main_C_72 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100100110");
        state_var_NS <= main_C_73;
      WHEN main_C_73 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100100111");
        state_var_NS <= main_C_74;
      WHEN main_C_74 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100101000");
        state_var_NS <= main_C_75;
      WHEN main_C_75 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100101001");
        state_var_NS <= main_C_76;
      WHEN main_C_76 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100101010");
        state_var_NS <= main_C_77;
      WHEN main_C_77 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100101011");
        state_var_NS <= main_C_78;
      WHEN main_C_78 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100101100");
        state_var_NS <= RMS_NORM_LOOP_2_2_C_0;
      WHEN RMS_NORM_LOOP_2_2_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100101101");
        state_var_NS <= RMS_NORM_LOOP_2_2_C_1;
      WHEN RMS_NORM_LOOP_2_2_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100101110");
        state_var_NS <= RMS_NORM_LOOP_2_2_C_2;
      WHEN RMS_NORM_LOOP_2_2_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100101111");
        state_var_NS <= RMS_NORM_LOOP_2_2_C_3;
      WHEN RMS_NORM_LOOP_2_2_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100110000");
        state_var_NS <= RMS_NORM_LOOP_2_2_C_4;
      WHEN RMS_NORM_LOOP_2_2_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100110001");
        state_var_NS <= RMS_NORM_LOOP_2_2_C_5;
      WHEN RMS_NORM_LOOP_2_2_C_5 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100110010");
        IF ( RMS_NORM_LOOP_2_2_C_5_tr0 = '1' ) THEN
          state_var_NS <= main_C_79;
        ELSE
          state_var_NS <= RMS_NORM_LOOP_2_2_C_0;
        END IF;
      WHEN main_C_79 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100110011");
        state_var_NS <= main_C_80;
      WHEN main_C_80 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100110100");
        state_var_NS <= main_C_81;
      WHEN main_C_81 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100110101");
        state_var_NS <= main_C_82;
      WHEN main_C_82 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100110110");
        state_var_NS <= main_C_83;
      WHEN main_C_83 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100110111");
        state_var_NS <= main_C_84;
      WHEN main_C_84 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100111000");
        state_var_NS <= main_C_85;
      WHEN main_C_85 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100111001");
        state_var_NS <= main_C_86;
      WHEN main_C_86 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100111010");
        state_var_NS <= main_C_87;
      WHEN main_C_87 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100111011");
        state_var_NS <= main_C_88;
      WHEN main_C_88 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100111100");
        state_var_NS <= main_C_89;
      WHEN main_C_89 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100111101");
        state_var_NS <= main_C_90;
      WHEN main_C_90 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100111110");
        state_var_NS <= main_C_91;
      WHEN main_C_91 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100111111");
        state_var_NS <= main_C_92;
      WHEN main_C_92 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101000000");
        state_var_NS <= main_C_93;
      WHEN main_C_93 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101000001");
        state_var_NS <= main_C_94;
      WHEN main_C_94 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101000010");
        state_var_NS <= main_C_95;
      WHEN main_C_95 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101000011");
        state_var_NS <= main_C_96;
      WHEN main_C_96 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101000100");
        state_var_NS <= main_C_97;
      WHEN main_C_97 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101000101");
        state_var_NS <= main_C_98;
      WHEN main_C_98 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101000110");
        state_var_NS <= main_C_99;
      WHEN main_C_99 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101000111");
        state_var_NS <= main_C_100;
      WHEN main_C_100 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101001000");
        state_var_NS <= main_C_101;
      WHEN main_C_101 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101001001");
        state_var_NS <= main_C_102;
      WHEN main_C_102 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101001010");
        state_var_NS <= main_C_103;
      WHEN main_C_103 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101001011");
        state_var_NS <= main_C_104;
      WHEN main_C_104 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101001100");
        state_var_NS <= main_C_105;
      WHEN main_C_105 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101001101");
        state_var_NS <= main_C_106;
      WHEN main_C_106 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101001110");
        state_var_NS <= main_C_107;
      WHEN main_C_107 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101001111");
        state_var_NS <= main_C_108;
      WHEN main_C_108 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101010000");
        state_var_NS <= main_C_109;
      WHEN main_C_109 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101010001");
        state_var_NS <= main_C_110;
      WHEN main_C_110 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101010010");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_5_1_C_0;
      WHEN QUANTIZE_ACTIVATION_LOOP_5_1_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101010011");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_5_1_C_1;
      WHEN QUANTIZE_ACTIVATION_LOOP_5_1_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101010100");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_5_1_C_2;
      WHEN QUANTIZE_ACTIVATION_LOOP_5_1_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101010101");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_5_1_C_3;
      WHEN QUANTIZE_ACTIVATION_LOOP_5_1_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101010110");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_5_1_C_4;
      WHEN QUANTIZE_ACTIVATION_LOOP_5_1_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101010111");
        IF ( QUANTIZE_ACTIVATION_LOOP_5_1_C_4_tr0 = '1' ) THEN
          state_var_NS <= QUANTIZE_ACTIVATION_LOOP_4_1_C_0;
        ELSE
          state_var_NS <= QUANTIZE_ACTIVATION_LOOP_5_1_C_0;
        END IF;
      WHEN QUANTIZE_ACTIVATION_LOOP_4_1_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101011000");
        IF ( QUANTIZE_ACTIVATION_LOOP_4_1_C_0_tr0 = '1' ) THEN
          state_var_NS <= QUANTIZE_ACTIVATION_LOOP_3_1_C_0;
        ELSE
          state_var_NS <= QUANTIZE_ACTIVATION_LOOP_5_1_C_0;
        END IF;
      WHEN QUANTIZE_ACTIVATION_LOOP_3_1_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101011001");
        IF ( QUANTIZE_ACTIVATION_LOOP_3_1_C_0_tr0 = '1' ) THEN
          state_var_NS <= output_vinit_C_0;
        ELSE
          state_var_NS <= QUANTIZE_ACTIVATION_LOOP_5_1_C_0;
        END IF;
      WHEN output_vinit_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101011010");
        state_var_NS <= output_vinit_C_1;
      WHEN output_vinit_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101011011");
        IF ( output_vinit_C_1_tr0 = '1' ) THEN
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_4_3_C_0;
        ELSE
          state_var_NS <= output_vinit_C_0;
        END IF;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_4_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101011100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_0;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101011101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_1;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101011110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_2;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101011111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_3;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101100000");
        IF ( LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_3_tr0 = '1' ) THEN
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_4_3_C_1;
        ELSE
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_0;
        END IF;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_4_3_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101100001");
        IF ( LINEAR_FORWARD_NO_MUL_LOOP_4_3_C_1_tr0 = '1' ) THEN
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_3_3_C_0;
        ELSE
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_4_3_C_0;
        END IF;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_3_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101100010");
        IF ( LINEAR_FORWARD_NO_MUL_LOOP_3_3_C_0_tr0 = '1' ) THEN
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_0;
        ELSE
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_4_3_C_0;
        END IF;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101100011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_1;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101100100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_2;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101100101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_3;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101100110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_4;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101100111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_5;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_5 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101101000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_6;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_6 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101101001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_7;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_7 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101101010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_8;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_8 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101101011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_9;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_9 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101101100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_10;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_10 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101101101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_11;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_11 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101101110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_12;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_12 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101101111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_13;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_13 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101110000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_14;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_14 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101110001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_15;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_15 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101110010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_16;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_16 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101110011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_17;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_17 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101110100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_18;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_18 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101110101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_19;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_19 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101110110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_20;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_20 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101110111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_21;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_21 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101111000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_22;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_22 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101111001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_23;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_23 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101111010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_24;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_24 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101111011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_25;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_25 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101111100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_26;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_26 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101111101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_27;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_27 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101111110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_28;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_28 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101111111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_29;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_29 =>
        fsm_output <= STD_LOGIC_VECTOR'( "110000000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_30;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_30 =>
        fsm_output <= STD_LOGIC_VECTOR'( "110000001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_31;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_31 =>
        fsm_output <= STD_LOGIC_VECTOR'( "110000010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_32;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_32 =>
        fsm_output <= STD_LOGIC_VECTOR'( "110000011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_33;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_33 =>
        fsm_output <= STD_LOGIC_VECTOR'( "110000100");
        IF ( LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_33_tr0 = '1' ) THEN
          state_var_NS <= for_1_for_C_0;
        ELSE
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_4_3_C_0;
        END IF;
      WHEN for_1_for_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "110000101");
        state_var_NS <= for_1_for_C_1;
      WHEN for_1_for_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "110000110");
        state_var_NS <= for_1_for_C_2;
      WHEN for_1_for_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "110000111");
        IF ( for_1_for_C_2_tr0 = '1' ) THEN
          state_var_NS <= main_C_0;
        ELSE
          state_var_NS <= for_1_for_C_0;
        END IF;
      -- main_C_0
      WHEN OTHERS =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000000");
        state_var_NS <= for_for_C_0;
    END CASE;
  END PROCESS dut_core_core_fsm_1;

  dut_core_core_fsm_1_REG : PROCESS (clk)
  BEGIN
    IF clk'event AND ( clk = '1' ) THEN
      IF ( rst = '1' ) THEN
        state_var <= main_C_0;
      ELSE
        IF ( input_rsc_clken_d_1 = '1' ) THEN
          state_var <= state_var_NS;
        END IF;
      END IF;
    END IF;
  END PROCESS dut_core_core_fsm_1_REG;

END v8;

-- ------------------------------------------------------------------
--  Design Unit:    dut_core_wait_dp
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_core_wait_dp IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    rms_norm_384_div_cmp_z : IN STD_LOGIC_VECTOR (71 DOWNTO 0);
    core_wen1 : IN STD_LOGIC;
    rms_norm_384_div_cmp_z_oreg : OUT STD_LOGIC_VECTOR (39 DOWNTO 0)
  );
END dut_core_wait_dp;

ARCHITECTURE v8 OF dut_core_wait_dp IS
  -- Interconnect Declarations
  SIGNAL rms_norm_384_div_cmp_z_oreg_pconst_39_0 : STD_LOGIC_VECTOR (39 DOWNTO 0);

BEGIN
  rms_norm_384_div_cmp_z_oreg <= rms_norm_384_div_cmp_z_oreg_pconst_39_0;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        rms_norm_384_div_cmp_z_oreg_pconst_39_0 <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000");
      ELSIF ( core_wen1 = '1' ) THEN
        rms_norm_384_div_cmp_z_oreg_pconst_39_0 <= rms_norm_384_div_cmp_z(39 DOWNTO
            0);
      END IF;
    END IF;
  END PROCESS;
END v8;

-- ------------------------------------------------------------------
--  Design Unit:    dut_core_staller
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_core_staller IS
  PORT(
    en : IN STD_LOGIC;
    core_wen1 : OUT STD_LOGIC;
    strm_in_rsci_wen_comp : IN STD_LOGIC;
    strm_out_rsci_wen_comp : IN STD_LOGIC;
    input_rsc_clken_d_1 : OUT STD_LOGIC
  );
END dut_core_staller;

ARCHITECTURE v8 OF dut_core_staller IS
  -- Output Reader Declarations
  SIGNAL core_wen1_drv : STD_LOGIC;

BEGIN
  -- Output Reader Assignments
  core_wen1 <= core_wen1_drv;

  input_rsc_clken_d_1 <= core_wen1_drv AND en;
  core_wen1_drv <= strm_in_rsci_wen_comp AND strm_out_rsci_wen_comp;
END v8;

-- ------------------------------------------------------------------
--  Design Unit:    dut_core_strm_out_rsci_strm_out_wait_ctrl
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_core_strm_out_rsci_strm_out_wait_ctrl IS
  PORT(
    strm_out_rsci_iswt0 : IN STD_LOGIC;
    strm_out_rsci_biwt : OUT STD_LOGIC;
    strm_out_rsci_irdy : IN STD_LOGIC
  );
END dut_core_strm_out_rsci_strm_out_wait_ctrl;

ARCHITECTURE v8 OF dut_core_strm_out_rsci_strm_out_wait_ctrl IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  strm_out_rsci_biwt <= strm_out_rsci_iswt0 AND strm_out_rsci_irdy;
END v8;

-- ------------------------------------------------------------------
--  Design Unit:    dut_core_strm_in_rsci_strm_in_wait_ctrl
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_core_strm_in_rsci_strm_in_wait_ctrl IS
  PORT(
    strm_in_rsci_iswt0 : IN STD_LOGIC;
    strm_in_rsci_biwt : OUT STD_LOGIC;
    strm_in_rsci_ivld : IN STD_LOGIC
  );
END dut_core_strm_in_rsci_strm_in_wait_ctrl;

ARCHITECTURE v8 OF dut_core_strm_in_rsci_strm_in_wait_ctrl IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  strm_in_rsci_biwt <= strm_in_rsci_iswt0 AND strm_in_rsci_ivld;
END v8;

-- ------------------------------------------------------------------
--  Design Unit:    dut_core_strm_out_rsci
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_core_strm_out_rsci IS
  PORT(
    strm_out_rsc_dat : OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
    strm_out_rsc_vld : OUT STD_LOGIC;
    strm_out_rsc_rdy : IN STD_LOGIC;
    strm_out_rsci_oswt : IN STD_LOGIC;
    strm_out_rsci_wen_comp : OUT STD_LOGIC;
    strm_out_rsci_idat : IN STD_LOGIC_VECTOR (31 DOWNTO 0)
  );
END dut_core_strm_out_rsci;

ARCHITECTURE v8 OF dut_core_strm_out_rsci IS
  -- Interconnect Declarations
  SIGNAL strm_out_rsci_biwt : STD_LOGIC;
  SIGNAL strm_out_rsci_irdy : STD_LOGIC;

  SIGNAL strm_out_rsci_idat_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL strm_out_rsci_dat : STD_LOGIC_VECTOR (31 DOWNTO 0);

  COMPONENT dut_core_strm_out_rsci_strm_out_wait_ctrl
    PORT(
      strm_out_rsci_iswt0 : IN STD_LOGIC;
      strm_out_rsci_biwt : OUT STD_LOGIC;
      strm_out_rsci_irdy : IN STD_LOGIC
    );
  END COMPONENT;
BEGIN
  strm_out_rsci : mgc_hls.ccs_out_wait_pkg_v1.ccs_out_wait_v1
    GENERIC MAP(
      rscid => 2,
      width => 32
      )
    PORT MAP(
      irdy => strm_out_rsci_irdy,
      ivld => strm_out_rsci_oswt,
      idat => strm_out_rsci_idat_1,
      rdy => strm_out_rsc_rdy,
      vld => strm_out_rsc_vld,
      dat => strm_out_rsci_dat
    );
  strm_out_rsci_idat_1 <= (strm_out_rsci_idat(31 DOWNTO 2)) & STD_LOGIC_VECTOR'(
      "00");
  strm_out_rsc_dat <= strm_out_rsci_dat;

  dut_core_strm_out_rsci_strm_out_wait_ctrl_inst : dut_core_strm_out_rsci_strm_out_wait_ctrl
    PORT MAP(
      strm_out_rsci_iswt0 => strm_out_rsci_oswt,
      strm_out_rsci_biwt => strm_out_rsci_biwt,
      strm_out_rsci_irdy => strm_out_rsci_irdy
    );
  strm_out_rsci_wen_comp <= (NOT strm_out_rsci_oswt) OR strm_out_rsci_biwt;
END v8;

-- ------------------------------------------------------------------
--  Design Unit:    dut_core_strm_in_rsci
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_core_strm_in_rsci IS
  PORT(
    strm_in_rsc_dat : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
    strm_in_rsc_vld : IN STD_LOGIC;
    strm_in_rsc_rdy : OUT STD_LOGIC;
    strm_in_rsci_oswt : IN STD_LOGIC;
    strm_in_rsci_wen_comp : OUT STD_LOGIC;
    strm_in_rsci_idat_mxwt : OUT STD_LOGIC_VECTOR (29 DOWNTO 0)
  );
END dut_core_strm_in_rsci;

ARCHITECTURE v8 OF dut_core_strm_in_rsci IS
  -- Interconnect Declarations
  SIGNAL strm_in_rsci_biwt : STD_LOGIC;
  SIGNAL strm_in_rsci_ivld : STD_LOGIC;
  SIGNAL strm_in_rsci_idat : STD_LOGIC_VECTOR (31 DOWNTO 0);

  SIGNAL strm_in_rsci_dat : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL strm_in_rsci_idat_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);

  COMPONENT dut_core_strm_in_rsci_strm_in_wait_ctrl
    PORT(
      strm_in_rsci_iswt0 : IN STD_LOGIC;
      strm_in_rsci_biwt : OUT STD_LOGIC;
      strm_in_rsci_ivld : IN STD_LOGIC
    );
  END COMPONENT;
BEGIN
  strm_in_rsci : mgc_hls.ccs_in_wait_pkg_v1.ccs_in_wait_v1
    GENERIC MAP(
      rscid => 1,
      width => 32
      )
    PORT MAP(
      rdy => strm_in_rsc_rdy,
      vld => strm_in_rsc_vld,
      dat => strm_in_rsci_dat,
      irdy => strm_in_rsci_oswt,
      ivld => strm_in_rsci_ivld,
      idat => strm_in_rsci_idat_1
    );
  strm_in_rsci_dat <= strm_in_rsc_dat;
  strm_in_rsci_idat <= strm_in_rsci_idat_1;

  dut_core_strm_in_rsci_strm_in_wait_ctrl_inst : dut_core_strm_in_rsci_strm_in_wait_ctrl
    PORT MAP(
      strm_in_rsci_iswt0 => strm_in_rsci_oswt,
      strm_in_rsci_biwt => strm_in_rsci_biwt,
      strm_in_rsci_ivld => strm_in_rsci_ivld
    );
  strm_in_rsci_idat_mxwt <= strm_in_rsci_idat(31 DOWNTO 2);
  strm_in_rsci_wen_comp <= (NOT strm_in_rsci_oswt) OR strm_in_rsci_biwt;
END v8;

-- ------------------------------------------------------------------
--  Design Unit:    dut_core
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_core IS
  PORT(
    clk : IN STD_LOGIC;
    en : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    strm_in_rsc_dat : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
    strm_in_rsc_vld : IN STD_LOGIC;
    strm_in_rsc_rdy : OUT STD_LOGIC;
    strm_out_rsc_dat : OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
    strm_out_rsc_vld : OUT STD_LOGIC;
    strm_out_rsc_rdy : IN STD_LOGIC;
    input_rsci_clken_d : OUT STD_LOGIC;
    input_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    input_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    input_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    input_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    output_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    output_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    output_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    output_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    attention_5_1_384_384_8_48_quantized_hidden_states_rsci_d_d : OUT STD_LOGIC_VECTOR
        (7 DOWNTO 0);
    attention_5_1_384_384_8_48_quantized_hidden_states_rsci_q_d : IN STD_LOGIC_VECTOR
        (7 DOWNTO 0);
    attention_5_1_384_384_8_48_quantized_hidden_states_rsci_radr_d : OUT STD_LOGIC_VECTOR
        (8 DOWNTO 0);
    attention_5_1_384_384_8_48_quantized_hidden_states_rsci_wadr_d : OUT STD_LOGIC_VECTOR
        (8 DOWNTO 0);
    attention_5_1_384_384_8_48_q_proj_re_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_q_proj_re_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_q_proj_re_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_q_proj_re_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_proj_re_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_proj_re_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_proj_re_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_proj_re_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_v_proj_re_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_v_proj_re_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_v_proj_re_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_v_proj_re_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_q_proj_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    attention_5_1_384_384_8_48_q_proj_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_q_proj_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_proj_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    attention_5_1_384_384_8_48_k_proj_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_proj_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_v_proj_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    attention_5_1_384_384_8_48_v_proj_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_v_proj_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_q_embed_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_q_embed_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_q_embed_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_q_embed_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_embed_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_embed_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_embed_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_embed_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_cache_upd_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_cache_upd_rsci_radr_d : OUT STD_LOGIC_VECTOR (11
        DOWNTO 0);
    attention_5_1_384_384_8_48_k_cache_upd_rsci_wadr_d : OUT STD_LOGIC_VECTOR (11
        DOWNTO 0);
    attention_5_1_384_384_8_48_v_cache_upd_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_v_cache_upd_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_v_cache_upd_rsci_radr_d : OUT STD_LOGIC_VECTOR (11
        DOWNTO 0);
    attention_5_1_384_384_8_48_v_cache_upd_rsci_wadr_d : OUT STD_LOGIC_VECTOR (11
        DOWNTO 0);
    attention_5_1_384_384_8_48_k_proj_transposed_rsci_q_d : IN STD_LOGIC_VECTOR (39
        DOWNTO 0);
    attention_5_1_384_384_8_48_k_proj_transposed_rsci_radr_d : OUT STD_LOGIC_VECTOR
        (11 DOWNTO 0);
    attention_5_1_384_384_8_48_k_proj_transposed_rsci_wadr_d : OUT STD_LOGIC_VECTOR
        (11 DOWNTO 0);
    attention_5_1_384_384_8_48_attn_weights_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_attn_weights_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_attn_weights_rsci_radr_d : OUT STD_LOGIC_VECTOR (5
        DOWNTO 0);
    attention_5_1_384_384_8_48_attn_weights_rsci_wadr_d : OUT STD_LOGIC_VECTOR (5
        DOWNTO 0);
    attention_5_1_384_384_8_48_attn_output_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_attn_output_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_attn_output_rsci_radr_d : OUT STD_LOGIC_VECTOR (8
        DOWNTO 0);
    attention_5_1_384_384_8_48_attn_output_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8
        DOWNTO 0);
    attention_5_1_384_384_8_48_attn_output_2D_rsci_d_d : OUT STD_LOGIC_VECTOR (39
        DOWNTO 0);
    attention_5_1_384_384_8_48_attn_output_2D_rsci_q_d : IN STD_LOGIC_VECTOR (39
        DOWNTO 0);
    attention_5_1_384_384_8_48_attn_output_2D_rsci_radr_d : OUT STD_LOGIC_VECTOR
        (8 DOWNTO 0);
    attention_5_1_384_384_8_48_attn_output_2D_rsci_wadr_d : OUT STD_LOGIC_VECTOR
        (8 DOWNTO 0);
    attention_5_1_384_384_8_48_quantized_final_output_rsci_d_d : OUT STD_LOGIC_VECTOR
        (7 DOWNTO 0);
    attention_5_1_384_384_8_48_quantized_final_output_rsci_q_d : IN STD_LOGIC_VECTOR
        (7 DOWNTO 0);
    attention_5_1_384_384_8_48_quantized_final_output_rsci_radr_d : OUT STD_LOGIC_VECTOR
        (8 DOWNTO 0);
    attention_5_1_384_384_8_48_quantized_final_output_rsci_wadr_d : OUT STD_LOGIC_VECTOR
        (8 DOWNTO 0);
    apply_rotary_pos_emb_1_8_48_rotated_q_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
        0);
    apply_rotary_pos_emb_1_8_48_rotated_q_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
        0);
    apply_rotary_pos_emb_1_8_48_rotated_q_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    apply_rotary_pos_emb_1_8_48_rotated_q_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    apply_rotary_pos_emb_1_8_48_rotated_k_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
        0);
    apply_rotary_pos_emb_1_8_48_rotated_k_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
        0);
    apply_rotary_pos_emb_1_8_48_rotated_k_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    apply_rotary_pos_emb_1_8_48_rotated_k_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    rms_norm_384_div_cmp_a : OUT STD_LOGIC_VECTOR (71 DOWNTO 0);
    rms_norm_384_div_cmp_b : OUT STD_LOGIC_VECTOR (60 DOWNTO 0);
    rms_norm_384_div_cmp_z : IN STD_LOGIC_VECTOR (71 DOWNTO 0);
    input_rsci_re_d_pff : OUT STD_LOGIC;
    input_rsci_we_d_pff : OUT STD_LOGIC;
    output_rsci_re_d_pff : OUT STD_LOGIC;
    output_rsci_we_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_quantized_hidden_states_rsci_re_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_quantized_hidden_states_rsci_we_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_q_proj_re_rsci_re_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_q_proj_re_rsci_we_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_k_proj_re_rsci_we_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_v_proj_re_rsci_re_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_v_proj_re_rsci_we_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_q_proj_rsci_re_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_q_proj_rsci_we_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_v_proj_rsci_re_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_v_proj_rsci_we_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_q_embed_rsci_re_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_q_embed_rsci_we_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_k_embed_rsci_re_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_k_cache_upd_rsci_re_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_k_cache_upd_rsci_we_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_v_cache_upd_rsci_re_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_k_proj_transposed_rsci_we_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_attn_weights_rsci_re_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_attn_weights_rsci_we_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_attn_output_rsci_re_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_attn_output_rsci_we_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_attn_output_2D_rsci_re_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_attn_output_2D_rsci_we_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_quantized_final_output_rsci_re_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_quantized_final_output_rsci_we_d_pff : OUT STD_LOGIC;
    apply_rotary_pos_emb_1_8_48_rotated_q_rsci_re_d_pff : OUT STD_LOGIC;
    apply_rotary_pos_emb_1_8_48_rotated_q_rsci_we_d_pff : OUT STD_LOGIC
  );
END dut_core;

ARCHITECTURE v8 OF dut_core IS
  -- Interconnect Declarations
  SIGNAL core_wen1 : STD_LOGIC;
  SIGNAL strm_in_rsci_wen_comp : STD_LOGIC;
  SIGNAL strm_in_rsci_idat_mxwt : STD_LOGIC_VECTOR (29 DOWNTO 0);
  SIGNAL strm_out_rsci_wen_comp : STD_LOGIC;
  SIGNAL input_rsc_clken_d_1 : STD_LOGIC;
  SIGNAL SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_z : STD_LOGIC_VECTOR (55 DOWNTO
      0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z
      : STD_LOGIC_VECTOR (71 DOWNTO 0);
  SIGNAL rms_norm_384_div_cmp_z_oreg : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL strm_out_rsci_idat_31_2 : STD_LOGIC_VECTOR (29 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_a_71_32
      : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_29_0 : STD_LOGIC_VECTOR (29
      DOWNTO 0);
  SIGNAL fsm_output : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_3_weight_val_mux_tmp : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_2_and_2_tmp : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_LINEAR_FORWARD_NO_MUL_LOOP_5_and_1_tmp : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_mux_tmp : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_and_2_tmp : STD_LOGIC;
  SIGNAL nor_tmp : STD_LOGIC;
  SIGNAL or_tmp_28 : STD_LOGIC;
  SIGNAL and_dcpl_7 : STD_LOGIC;
  SIGNAL and_dcpl_8 : STD_LOGIC;
  SIGNAL nor_tmp_11 : STD_LOGIC;
  SIGNAL or_tmp_62 : STD_LOGIC;
  SIGNAL or_tmp_63 : STD_LOGIC;
  SIGNAL and_dcpl_26 : STD_LOGIC;
  SIGNAL and_dcpl_27 : STD_LOGIC;
  SIGNAL and_dcpl_36 : STD_LOGIC;
  SIGNAL not_tmp_125 : STD_LOGIC;
  SIGNAL or_tmp_130 : STD_LOGIC;
  SIGNAL mux_tmp_220 : STD_LOGIC;
  SIGNAL or_tmp_178 : STD_LOGIC;
  SIGNAL and_dcpl_80 : STD_LOGIC;
  SIGNAL mux_tmp_241 : STD_LOGIC;
  SIGNAL and_dcpl_100 : STD_LOGIC;
  SIGNAL and_dcpl_101 : STD_LOGIC;
  SIGNAL and_dcpl_103 : STD_LOGIC;
  SIGNAL and_dcpl_104 : STD_LOGIC;
  SIGNAL and_dcpl_106 : STD_LOGIC;
  SIGNAL and_dcpl_107 : STD_LOGIC;
  SIGNAL and_dcpl_111 : STD_LOGIC;
  SIGNAL and_dcpl_112 : STD_LOGIC;
  SIGNAL and_dcpl_113 : STD_LOGIC;
  SIGNAL and_dcpl_114 : STD_LOGIC;
  SIGNAL and_dcpl_115 : STD_LOGIC;
  SIGNAL or_tmp_210 : STD_LOGIC;
  SIGNAL and_tmp_15 : STD_LOGIC;
  SIGNAL or_tmp_211 : STD_LOGIC;
  SIGNAL and_tmp_16 : STD_LOGIC;
  SIGNAL mux_tmp_266 : STD_LOGIC;
  SIGNAL and_dcpl_117 : STD_LOGIC;
  SIGNAL and_dcpl_118 : STD_LOGIC;
  SIGNAL and_dcpl_119 : STD_LOGIC;
  SIGNAL and_dcpl_120 : STD_LOGIC;
  SIGNAL and_dcpl_121 : STD_LOGIC;
  SIGNAL or_dcpl_85 : STD_LOGIC;
  SIGNAL or_dcpl_87 : STD_LOGIC;
  SIGNAL or_dcpl_88 : STD_LOGIC;
  SIGNAL or_dcpl_89 : STD_LOGIC;
  SIGNAL or_dcpl_90 : STD_LOGIC;
  SIGNAL or_dcpl_91 : STD_LOGIC;
  SIGNAL mux_tmp_283 : STD_LOGIC;
  SIGNAL and_dcpl_125 : STD_LOGIC;
  SIGNAL and_dcpl_126 : STD_LOGIC;
  SIGNAL and_dcpl_127 : STD_LOGIC;
  SIGNAL and_dcpl_128 : STD_LOGIC;
  SIGNAL and_dcpl_131 : STD_LOGIC;
  SIGNAL and_dcpl_134 : STD_LOGIC;
  SIGNAL and_dcpl_137 : STD_LOGIC;
  SIGNAL and_dcpl_138 : STD_LOGIC;
  SIGNAL and_dcpl_139 : STD_LOGIC;
  SIGNAL and_dcpl_140 : STD_LOGIC;
  SIGNAL and_dcpl_144 : STD_LOGIC;
  SIGNAL and_dcpl_145 : STD_LOGIC;
  SIGNAL and_dcpl_146 : STD_LOGIC;
  SIGNAL or_tmp_225 : STD_LOGIC;
  SIGNAL mux_tmp_298 : STD_LOGIC;
  SIGNAL and_dcpl_152 : STD_LOGIC;
  SIGNAL and_dcpl_154 : STD_LOGIC;
  SIGNAL and_dcpl_155 : STD_LOGIC;
  SIGNAL or_tmp_231 : STD_LOGIC;
  SIGNAL nor_tmp_79 : STD_LOGIC;
  SIGNAL or_tmp_233 : STD_LOGIC;
  SIGNAL mux_tmp_303 : STD_LOGIC;
  SIGNAL nand_tmp_14 : STD_LOGIC;
  SIGNAL mux_tmp_305 : STD_LOGIC;
  SIGNAL or_tmp_234 : STD_LOGIC;
  SIGNAL mux_tmp_306 : STD_LOGIC;
  SIGNAL mux_tmp_307 : STD_LOGIC;
  SIGNAL mux_tmp_308 : STD_LOGIC;
  SIGNAL and_dcpl_156 : STD_LOGIC;
  SIGNAL or_tmp_236 : STD_LOGIC;
  SIGNAL and_dcpl_157 : STD_LOGIC;
  SIGNAL and_dcpl_161 : STD_LOGIC;
  SIGNAL and_dcpl_162 : STD_LOGIC;
  SIGNAL and_dcpl_163 : STD_LOGIC;
  SIGNAL and_dcpl_165 : STD_LOGIC;
  SIGNAL and_dcpl_166 : STD_LOGIC;
  SIGNAL and_dcpl_168 : STD_LOGIC;
  SIGNAL mux_tmp_319 : STD_LOGIC;
  SIGNAL mux_tmp_320 : STD_LOGIC;
  SIGNAL and_dcpl_170 : STD_LOGIC;
  SIGNAL and_dcpl_171 : STD_LOGIC;
  SIGNAL and_dcpl_172 : STD_LOGIC;
  SIGNAL or_tmp_242 : STD_LOGIC;
  SIGNAL or_tmp_243 : STD_LOGIC;
  SIGNAL mux_tmp_323 : STD_LOGIC;
  SIGNAL or_tmp_244 : STD_LOGIC;
  SIGNAL and_dcpl_178 : STD_LOGIC;
  SIGNAL or_dcpl_96 : STD_LOGIC;
  SIGNAL mux_tmp_334 : STD_LOGIC;
  SIGNAL and_dcpl_181 : STD_LOGIC;
  SIGNAL and_dcpl_183 : STD_LOGIC;
  SIGNAL and_dcpl_185 : STD_LOGIC;
  SIGNAL and_dcpl_186 : STD_LOGIC;
  SIGNAL and_dcpl_190 : STD_LOGIC;
  SIGNAL and_dcpl_191 : STD_LOGIC;
  SIGNAL and_dcpl_192 : STD_LOGIC;
  SIGNAL and_dcpl_193 : STD_LOGIC;
  SIGNAL and_dcpl_198 : STD_LOGIC;
  SIGNAL and_dcpl_201 : STD_LOGIC;
  SIGNAL and_dcpl_204 : STD_LOGIC;
  SIGNAL and_dcpl_207 : STD_LOGIC;
  SIGNAL and_dcpl_209 : STD_LOGIC;
  SIGNAL and_dcpl_210 : STD_LOGIC;
  SIGNAL and_dcpl_211 : STD_LOGIC;
  SIGNAL and_dcpl_212 : STD_LOGIC;
  SIGNAL and_dcpl_213 : STD_LOGIC;
  SIGNAL and_dcpl_214 : STD_LOGIC;
  SIGNAL and_dcpl_216 : STD_LOGIC;
  SIGNAL and_dcpl_217 : STD_LOGIC;
  SIGNAL and_dcpl_222 : STD_LOGIC;
  SIGNAL or_tmp_265 : STD_LOGIC;
  SIGNAL and_dcpl_225 : STD_LOGIC;
  SIGNAL and_dcpl_227 : STD_LOGIC;
  SIGNAL and_dcpl_228 : STD_LOGIC;
  SIGNAL or_tmp_272 : STD_LOGIC;
  SIGNAL nor_tmp_90 : STD_LOGIC;
  SIGNAL and_dcpl_232 : STD_LOGIC;
  SIGNAL and_dcpl_233 : STD_LOGIC;
  SIGNAL and_dcpl_234 : STD_LOGIC;
  SIGNAL and_dcpl_239 : STD_LOGIC;
  SIGNAL and_dcpl_240 : STD_LOGIC;
  SIGNAL and_dcpl_241 : STD_LOGIC;
  SIGNAL and_dcpl_242 : STD_LOGIC;
  SIGNAL and_dcpl_243 : STD_LOGIC;
  SIGNAL and_dcpl_244 : STD_LOGIC;
  SIGNAL and_dcpl_245 : STD_LOGIC;
  SIGNAL and_dcpl_246 : STD_LOGIC;
  SIGNAL and_dcpl_248 : STD_LOGIC;
  SIGNAL and_dcpl_249 : STD_LOGIC;
  SIGNAL and_dcpl_250 : STD_LOGIC;
  SIGNAL and_dcpl_251 : STD_LOGIC;
  SIGNAL and_dcpl_255 : STD_LOGIC;
  SIGNAL and_dcpl_257 : STD_LOGIC;
  SIGNAL and_dcpl_258 : STD_LOGIC;
  SIGNAL and_dcpl_261 : STD_LOGIC;
  SIGNAL and_dcpl_267 : STD_LOGIC;
  SIGNAL and_dcpl_275 : STD_LOGIC;
  SIGNAL and_dcpl_283 : STD_LOGIC;
  SIGNAL and_dcpl_285 : STD_LOGIC;
  SIGNAL or_tmp_296 : STD_LOGIC;
  SIGNAL mux_tmp_359 : STD_LOGIC;
  SIGNAL or_tmp_299 : STD_LOGIC;
  SIGNAL and_dcpl_289 : STD_LOGIC;
  SIGNAL and_dcpl_290 : STD_LOGIC;
  SIGNAL and_dcpl_295 : STD_LOGIC;
  SIGNAL or_tmp_304 : STD_LOGIC;
  SIGNAL or_tmp_305 : STD_LOGIC;
  SIGNAL and_dcpl_298 : STD_LOGIC;
  SIGNAL and_dcpl_299 : STD_LOGIC;
  SIGNAL or_tmp_306 : STD_LOGIC;
  SIGNAL and_dcpl_303 : STD_LOGIC;
  SIGNAL or_tmp_310 : STD_LOGIC;
  SIGNAL and_dcpl_306 : STD_LOGIC;
  SIGNAL and_dcpl_310 : STD_LOGIC;
  SIGNAL mux_tmp_376 : STD_LOGIC;
  SIGNAL mux_tmp_377 : STD_LOGIC;
  SIGNAL mux_tmp_378 : STD_LOGIC;
  SIGNAL mux_tmp_379 : STD_LOGIC;
  SIGNAL and_dcpl_319 : STD_LOGIC;
  SIGNAL and_dcpl_320 : STD_LOGIC;
  SIGNAL mux_tmp_383 : STD_LOGIC;
  SIGNAL mux_tmp_385 : STD_LOGIC;
  SIGNAL and_dcpl_325 : STD_LOGIC;
  SIGNAL and_dcpl_331 : STD_LOGIC;
  SIGNAL and_dcpl_341 : STD_LOGIC;
  SIGNAL and_dcpl_343 : STD_LOGIC;
  SIGNAL or_tmp_350 : STD_LOGIC;
  SIGNAL mux_tmp_402 : STD_LOGIC;
  SIGNAL mux_tmp_404 : STD_LOGIC;
  SIGNAL mux_tmp_405 : STD_LOGIC;
  SIGNAL mux_tmp_408 : STD_LOGIC;
  SIGNAL or_tmp_353 : STD_LOGIC;
  SIGNAL mux_tmp_409 : STD_LOGIC;
  SIGNAL mux_tmp_410 : STD_LOGIC;
  SIGNAL mux_tmp_414 : STD_LOGIC;
  SIGNAL mux_tmp_416 : STD_LOGIC;
  SIGNAL mux_tmp_418 : STD_LOGIC;
  SIGNAL mux_tmp_422 : STD_LOGIC;
  SIGNAL and_dcpl_350 : STD_LOGIC;
  SIGNAL and_dcpl_351 : STD_LOGIC;
  SIGNAL and_dcpl_352 : STD_LOGIC;
  SIGNAL and_dcpl_354 : STD_LOGIC;
  SIGNAL and_dcpl_355 : STD_LOGIC;
  SIGNAL mux_tmp_448 : STD_LOGIC;
  SIGNAL and_dcpl_359 : STD_LOGIC;
  SIGNAL and_dcpl_360 : STD_LOGIC;
  SIGNAL not_tmp_307 : STD_LOGIC;
  SIGNAL and_dcpl_368 : STD_LOGIC;
  SIGNAL and_dcpl_369 : STD_LOGIC;
  SIGNAL or_tmp_422 : STD_LOGIC;
  SIGNAL mux_tmp_482 : STD_LOGIC;
  SIGNAL and_dcpl_374 : STD_LOGIC;
  SIGNAL and_dcpl_375 : STD_LOGIC;
  SIGNAL and_dcpl_378 : STD_LOGIC;
  SIGNAL and_dcpl_381 : STD_LOGIC;
  SIGNAL and_dcpl_382 : STD_LOGIC;
  SIGNAL and_dcpl_384 : STD_LOGIC;
  SIGNAL and_dcpl_386 : STD_LOGIC;
  SIGNAL xor_dcpl_7 : STD_LOGIC;
  SIGNAL or_dcpl_120 : STD_LOGIC;
  SIGNAL or_dcpl_121 : STD_LOGIC;
  SIGNAL and_dcpl_394 : STD_LOGIC;
  SIGNAL and_dcpl_395 : STD_LOGIC;
  SIGNAL and_dcpl_396 : STD_LOGIC;
  SIGNAL not_tmp_316 : STD_LOGIC;
  SIGNAL or_tmp_446 : STD_LOGIC;
  SIGNAL mux_tmp_505 : STD_LOGIC;
  SIGNAL or_tmp_449 : STD_LOGIC;
  SIGNAL mux_tmp_509 : STD_LOGIC;
  SIGNAL mux_tmp_512 : STD_LOGIC;
  SIGNAL mux_tmp_514 : STD_LOGIC;
  SIGNAL or_tmp_454 : STD_LOGIC;
  SIGNAL or_tmp_456 : STD_LOGIC;
  SIGNAL or_tmp_463 : STD_LOGIC;
  SIGNAL nor_tmp_118 : STD_LOGIC;
  SIGNAL and_dcpl_400 : STD_LOGIC;
  SIGNAL and_dcpl_403 : STD_LOGIC;
  SIGNAL and_dcpl_409 : STD_LOGIC;
  SIGNAL mux_tmp_547 : STD_LOGIC;
  SIGNAL mux_tmp_550 : STD_LOGIC;
  SIGNAL mux_tmp_552 : STD_LOGIC;
  SIGNAL and_dcpl_414 : STD_LOGIC;
  SIGNAL and_dcpl_417 : STD_LOGIC;
  SIGNAL or_tmp_529 : STD_LOGIC;
  SIGNAL mux_tmp_592 : STD_LOGIC;
  SIGNAL nor_tmp_128 : STD_LOGIC;
  SIGNAL and_dcpl_435 : STD_LOGIC;
  SIGNAL and_dcpl_443 : STD_LOGIC;
  SIGNAL and_dcpl_447 : STD_LOGIC;
  SIGNAL and_dcpl_448 : STD_LOGIC;
  SIGNAL or_dcpl_125 : STD_LOGIC;
  SIGNAL or_dcpl_127 : STD_LOGIC;
  SIGNAL or_dcpl_128 : STD_LOGIC;
  SIGNAL or_tmp_598 : STD_LOGIC;
  SIGNAL or_tmp_599 : STD_LOGIC;
  SIGNAL or_dcpl_130 : STD_LOGIC;
  SIGNAL or_dcpl_133 : STD_LOGIC;
  SIGNAL or_tmp_652 : STD_LOGIC;
  SIGNAL or_tmp_656 : STD_LOGIC;
  SIGNAL not_tmp_405 : STD_LOGIC;
  SIGNAL and_dcpl_458 : STD_LOGIC;
  SIGNAL and_dcpl_460 : STD_LOGIC;
  SIGNAL or_tmp_697 : STD_LOGIC;
  SIGNAL or_tmp_700 : STD_LOGIC;
  SIGNAL or_tmp_701 : STD_LOGIC;
  SIGNAL and_tmp_26 : STD_LOGIC;
  SIGNAL or_tmp_716 : STD_LOGIC;
  SIGNAL and_dcpl_468 : STD_LOGIC;
  SIGNAL and_dcpl_469 : STD_LOGIC;
  SIGNAL nor_tmp_174 : STD_LOGIC;
  SIGNAL or_tmp_768 : STD_LOGIC;
  SIGNAL or_tmp_776 : STD_LOGIC;
  SIGNAL not_tmp_447 : STD_LOGIC;
  SIGNAL mux_tmp_785 : STD_LOGIC;
  SIGNAL mux_tmp_786 : STD_LOGIC;
  SIGNAL or_tmp_792 : STD_LOGIC;
  SIGNAL nor_tmp_191 : STD_LOGIC;
  SIGNAL and_dcpl_484 : STD_LOGIC;
  SIGNAL or_tmp_831 : STD_LOGIC;
  SIGNAL mux_tmp_853 : STD_LOGIC;
  SIGNAL or_tmp_834 : STD_LOGIC;
  SIGNAL and_dcpl_487 : STD_LOGIC;
  SIGNAL or_tmp_835 : STD_LOGIC;
  SIGNAL nand_tmp_55 : STD_LOGIC;
  SIGNAL mux_tmp_861 : STD_LOGIC;
  SIGNAL and_dcpl_493 : STD_LOGIC;
  SIGNAL and_dcpl_506 : STD_LOGIC;
  SIGNAL or_dcpl_150 : STD_LOGIC;
  SIGNAL and_dcpl_513 : STD_LOGIC;
  SIGNAL and_dcpl_526 : STD_LOGIC;
  SIGNAL mux_tmp_928 : STD_LOGIC;
  SIGNAL mux_tmp_933 : STD_LOGIC;
  SIGNAL or_dcpl_154 : STD_LOGIC;
  SIGNAL or_dcpl_157 : STD_LOGIC;
  SIGNAL or_dcpl_158 : STD_LOGIC;
  SIGNAL or_dcpl_163 : STD_LOGIC;
  SIGNAL or_dcpl_170 : STD_LOGIC;
  SIGNAL mux_tmp_950 : STD_LOGIC;
  SIGNAL mux_tmp_952 : STD_LOGIC;
  SIGNAL mux_tmp_954 : STD_LOGIC;
  SIGNAL mux_tmp_955 : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_1_LINEAR_FORWARD_NO_MUL_LOOP_5_1_and_3_cse
      : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_1_and_cse : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_3_INIT_2D_MEM_LOOP_2_3_nor_itm : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_2_1_slc_40_1_svs : STD_LOGIC;
  SIGNAL rms_norm_384_1_val_acc_psp_sva_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm :
      STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_or_itm : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_2_slc_40_1_svs : STD_LOGIC;
  SIGNAL rms_norm_384_val_acc_psp_sva_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_slc_RMS_NORM_LOOP_2_mul_67_28_ncse_sva : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL exit_QUANTIZE_ACTIVATION_LOOP_2_1_sva_dfm : STD_LOGIC;
  SIGNAL exit_QUANTIZE_ACTIVATION_LOOP_2_sva_dfm : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_slc_LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_conc_1_1_1_0_svs
      : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL exit_APPLY_ROTARY_POS_EMB_LOOP_3_sva_dfm : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_slc_71_32_1_ncse_sva : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_dfm_1_39 : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_dfm_1_38_0 : STD_LOGIC_VECTOR
      (38 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_2_mul_1_itm : STD_LOGIC_VECTOR (52 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_dfm_1_39 : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_dfm_1_38_0 : STD_LOGIC_VECTOR (38
      DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_mul_1_itm : STD_LOGIC_VECTOR (51 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_slc_LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_conc_1_1_1_0_svs
      : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL and_191_ssc : STD_LOGIC;
  SIGNAL and_192_ssc : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_59_39
      : STD_LOGIC_VECTOR (20 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_38_0
      : STD_LOGIC_VECTOR (38 DOWNTO 0);
  SIGNAL and_168_ssc : STD_LOGIC;
  SIGNAL nor_512_seb : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_39 : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_38_30 : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_2_and_ssc : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_dfr_sva_9 : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_dfr_sva_8_0 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_itm_17
      : STD_LOGIC;
  SIGNAL SF_LOOP_3_acc_17_sdt : STD_LOGIC_VECTOR (18 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_17_itm_18_9 : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_17_itm_8_0 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL SF_LOOP_3_and_11_ssc : STD_LOGIC;
  SIGNAL SF_LOOP_3_and_12_ssc : STD_LOGIC;
  SIGNAL SF_LOOP_3_and_14_ssc : STD_LOGIC;
  SIGNAL SF_LOOP_3_and_4_ssc : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_max_val_and_cse : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_1_max_val_and_cse : STD_LOGIC;
  SIGNAL and_610_cse : STD_LOGIC;
  SIGNAL or_272_cse : STD_LOGIC;
  SIGNAL reg_strm_out_rsci_iswt0_cse : STD_LOGIC;
  SIGNAL reg_strm_in_rsci_iswt0_cse : STD_LOGIC;
  SIGNAL or_349_cse : STD_LOGIC;
  SIGNAL and_706_cse : STD_LOGIC;
  SIGNAL or_531_cse : STD_LOGIC;
  SIGNAL or_550_cse : STD_LOGIC;
  SIGNAL nand_181_cse : STD_LOGIC;
  SIGNAL nor_360_cse : STD_LOGIC;
  SIGNAL nor_412_cse : STD_LOGIC;
  SIGNAL nor_413_cse : STD_LOGIC;
  SIGNAL or_701_cse : STD_LOGIC;
  SIGNAL or_318_cse : STD_LOGIC;
  SIGNAL or_551_cse : STD_LOGIC;
  SIGNAL or_1114_cse : STD_LOGIC;
  SIGNAL and_745_cse : STD_LOGIC;
  SIGNAL or_518_cse : STD_LOGIC;
  SIGNAL nor_78_cse : STD_LOGIC;
  SIGNAL or_814_cse : STD_LOGIC;
  SIGNAL or_800_cse : STD_LOGIC;
  SIGNAL or_798_cse : STD_LOGIC;
  SIGNAL nor_444_cse : STD_LOGIC;
  SIGNAL or_746_cse : STD_LOGIC;
  SIGNAL and_732_cse : STD_LOGIC;
  SIGNAL and_704_cse : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_and_cse : STD_LOGIC;
  SIGNAL and_729_cse : STD_LOGIC;
  SIGNAL nor_143_cse : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_and_cse : STD_LOGIC;
  SIGNAL or_44_cse : STD_LOGIC;
  SIGNAL SF_LOOP_3_and_2_cse : STD_LOGIC;
  SIGNAL reg_operator_40_24_true_AC_TRN_AC_WRAP_acc_20_cse : STD_LOGIC_VECTOR (5
      DOWNTO 0);
  SIGNAL nand_170_cse : STD_LOGIC;
  SIGNAL mux_883_cse : STD_LOGIC;
  SIGNAL nor_387_cse : STD_LOGIC;
  SIGNAL and_584_cse : STD_LOGIC;
  SIGNAL or_831_cse : STD_LOGIC;
  SIGNAL and_602_cse : STD_LOGIC;
  SIGNAL mux_834_cse : STD_LOGIC;
  SIGNAL or_197_cse : STD_LOGIC;
  SIGNAL or_196_cse : STD_LOGIC;
  SIGNAL or_319_cse : STD_LOGIC;
  SIGNAL nor_226_cse : STD_LOGIC;
  SIGNAL nor_252_cse : STD_LOGIC;
  SIGNAL or_59_cse : STD_LOGIC;
  SIGNAL nor_434_cse : STD_LOGIC;
  SIGNAL and_582_cse : STD_LOGIC;
  SIGNAL nor_456_cse : STD_LOGIC;
  SIGNAL and_768_cse : STD_LOGIC;
  SIGNAL nor_411_cse : STD_LOGIC;
  SIGNAL and_73_cse : STD_LOGIC;
  SIGNAL and_71_cse : STD_LOGIC;
  SIGNAL nor_206_cse : STD_LOGIC;
  SIGNAL nor_500_cse : STD_LOGIC;
  SIGNAL or_173_cse : STD_LOGIC;
  SIGNAL and_731_cse : STD_LOGIC;
  SIGNAL or_213_cse : STD_LOGIC;
  SIGNAL or_577_cse : STD_LOGIC;
  SIGNAL or_722_cse : STD_LOGIC;
  SIGNAL or_677_cse : STD_LOGIC;
  SIGNAL or_471_cse : STD_LOGIC;
  SIGNAL or_177_cse : STD_LOGIC;
  SIGNAL nor_342_cse : STD_LOGIC;
  SIGNAL nand_2_cse : STD_LOGIC;
  SIGNAL or_194_cse : STD_LOGIC;
  SIGNAL or_490_cse : STD_LOGIC;
  SIGNAL nor_419_cse : STD_LOGIC;
  SIGNAL nor_507_cse : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_3_or_3_cse : STD_LOGIC;
  SIGNAL or_314_ssc : STD_LOGIC;
  SIGNAL reg_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_a_32_0_ftd : STD_LOGIC;
  SIGNAL reg_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_a_32_0_ftd_1 : STD_LOGIC;
  SIGNAL reg_rms_norm_384_div_cmp_a_ftd : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_k_5_0_sva_1_5_2 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_k_5_0_sva_1_1_0 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_5_2 : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0 : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_2_and_ssc : STD_LOGIC;
  SIGNAL SF_LOOP_3_acc_26_sdt : STD_LOGIC_VECTOR (19 DOWNTO 0);
  SIGNAL SF_LOOP_3_and_ssc : STD_LOGIC;
  SIGNAL or_529_cse : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_1_or_cse : STD_LOGIC;
  SIGNAL nor_414_cse : STD_LOGIC;
  SIGNAL nand_1_cse : STD_LOGIC;
  SIGNAL and_743_cse : STD_LOGIC;
  SIGNAL or_475_cse : STD_LOGIC;
  SIGNAL and_707_cse : STD_LOGIC;
  SIGNAL mux_158_cse : STD_LOGIC;
  SIGNAL or_199_cse : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_dfr_sva_mx0c0 : STD_LOGIC;
  SIGNAL mux_159_cse : STD_LOGIC;
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_9_rmff : STD_LOGIC;
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_7_rmff : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_1_rmff : STD_LOGIC;
  SIGNAL and_359_ssc : STD_LOGIC;
  SIGNAL for_for_and_seb : STD_LOGIC;
  SIGNAL and_350_ssc : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_3_nor_seb : STD_LOGIC;
  SIGNAL and_328_ssc : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_and_3_seb : STD_LOGIC;
  SIGNAL and_325_ssc : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_1_nor_seb : STD_LOGIC;
  SIGNAL and_317_ssc : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_2_nor_seb : STD_LOGIC;
  SIGNAL and_232_ssc : STD_LOGIC;
  SIGNAL ATTN_2D_LOOP_3_and_seb : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_2_acc_itm : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_acc_17_sdt_1 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_1_acc_18_psp_1 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_2_mux_3_itm_2_0 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_acc_18_psp_1 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva : STD_LOGIC_VECTOR (4 DOWNTO
      0);
  SIGNAL CACHE_UPDATE_LOOP_3_qif_acc_3_psp : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_acc_11_psp_1_mx0w0 : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_acc_11_psp_1 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_ki_4_0_sva_3_0 : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp_4 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_radr_d_mx0c2 : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_radr_d_mx0c1 : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mul_3_itm : STD_LOGIC_VECTOR (55 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mul_4_itm : STD_LOGIC_VECTOR (55 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mul_8_itm : STD_LOGIC_VECTOR (55 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mul_9_itm : STD_LOGIC_VECTOR (55 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_qr_sva_1 : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_1_qr_sva_1 : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_asn_itm : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_58_itm : STD_LOGIC_VECTOR (37 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_1_asn_psp : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_asn_psp : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL and_197_itm : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_cosval_read_rom_cos_tab_rom_map_1_itm : STD_LOGIC_VECTOR
      (16 DOWNTO 0);
  SIGNAL and_392_itm : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_1_and_itm : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_66_itm : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL and_447_itm : STD_LOGIC;
  SIGNAL and_448_itm : STD_LOGIC;
  SIGNAL and_451_itm : STD_LOGIC;
  SIGNAL and_452_itm : STD_LOGIC;
  SIGNAL and_453_itm : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_read_rom_ln_weight_in_rom_map_1_itm : STD_LOGIC_VECTOR (11
      DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_itm : STD_LOGIC_VECTOR
      (16 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_2_read_rom_ln_weight_rom_map_1_itm : STD_LOGIC_VECTOR (12
      DOWNTO 0);
  SIGNAL and_357_itm : STD_LOGIC;
  SIGNAL and_475_itm : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_read_rom_v_weights_rom_map_1_itm
      : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_read_rom_k_weights_rom_map_1_itm
      : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_read_rom_q_weights_rom_map_1_itm
      : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_87_itm : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL and_564_itm : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_qif_read_rom_k_cache_rom_map_1_itm : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_1_qif_read_rom_v_cache_rom_map_1_itm : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_read_rom_o_weights_rom_map_1_itm
      : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL mux_290_itm : STD_LOGIC;
  SIGNAL and_dcpl_549 : STD_LOGIC;
  SIGNAL and_dcpl_550 : STD_LOGIC;
  SIGNAL and_dcpl_551 : STD_LOGIC;
  SIGNAL and_dcpl_554 : STD_LOGIC;
  SIGNAL z_out : STD_LOGIC_VECTOR (17 DOWNTO 0);
  SIGNAL and_dcpl_565 : STD_LOGIC;
  SIGNAL and_dcpl_566 : STD_LOGIC;
  SIGNAL and_dcpl_567 : STD_LOGIC;
  SIGNAL and_dcpl_568 : STD_LOGIC;
  SIGNAL and_dcpl_572 : STD_LOGIC;
  SIGNAL and_dcpl_576 : STD_LOGIC;
  SIGNAL and_dcpl_578 : STD_LOGIC;
  SIGNAL and_dcpl_583 : STD_LOGIC;
  SIGNAL and_dcpl_586 : STD_LOGIC;
  SIGNAL and_dcpl_588 : STD_LOGIC;
  SIGNAL and_dcpl_592 : STD_LOGIC;
  SIGNAL and_dcpl_596 : STD_LOGIC;
  SIGNAL and_dcpl_600 : STD_LOGIC;
  SIGNAL and_dcpl_603 : STD_LOGIC;
  SIGNAL and_dcpl_607 : STD_LOGIC;
  SIGNAL z_out_1 : STD_LOGIC_VECTOR (60 DOWNTO 0);
  SIGNAL and_dcpl_615 : STD_LOGIC;
  SIGNAL and_dcpl_622 : STD_LOGIC;
  SIGNAL z_out_2 : STD_LOGIC_VECTOR (59 DOWNTO 0);
  SIGNAL and_dcpl_641 : STD_LOGIC;
  SIGNAL z_out_3 : STD_LOGIC_VECTOR (59 DOWNTO 0);
  SIGNAL and_dcpl_650 : STD_LOGIC;
  SIGNAL and_dcpl_654 : STD_LOGIC;
  SIGNAL and_dcpl_658 : STD_LOGIC;
  SIGNAL z_out_4 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL and_dcpl_669 : STD_LOGIC;
  SIGNAL and_dcpl_676 : STD_LOGIC;
  SIGNAL and_dcpl_683 : STD_LOGIC;
  SIGNAL and_dcpl_686 : STD_LOGIC;
  SIGNAL and_dcpl_687 : STD_LOGIC;
  SIGNAL and_dcpl_689 : STD_LOGIC;
  SIGNAL and_dcpl_692 : STD_LOGIC;
  SIGNAL and_dcpl_693 : STD_LOGIC;
  SIGNAL and_dcpl_694 : STD_LOGIC;
  SIGNAL and_dcpl_695 : STD_LOGIC;
  SIGNAL and_dcpl_699 : STD_LOGIC;
  SIGNAL z_out_6 : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL and_dcpl_705 : STD_LOGIC;
  SIGNAL and_dcpl_707 : STD_LOGIC;
  SIGNAL and_dcpl_712 : STD_LOGIC;
  SIGNAL and_dcpl_718 : STD_LOGIC;
  SIGNAL z_out_7 : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL z_out_8 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL z_out_9 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL z_out_10 : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL and_dcpl_787 : STD_LOGIC;
  SIGNAL and_dcpl_788 : STD_LOGIC;
  SIGNAL and_dcpl_791 : STD_LOGIC;
  SIGNAL and_dcpl_795 : STD_LOGIC;
  SIGNAL and_dcpl_800 : STD_LOGIC;
  SIGNAL z_out_13 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL and_dcpl_821 : STD_LOGIC;
  SIGNAL z_out_14 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL z_out_15 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL and_dcpl_858 : STD_LOGIC;
  SIGNAL z_out_17 : STD_LOGIC_VECTOR (71 DOWNTO 0);
  SIGNAL and_dcpl_874 : STD_LOGIC;
  SIGNAL z_out_19 : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL and_dcpl_888 : STD_LOGIC;
  SIGNAL and_dcpl_889 : STD_LOGIC;
  SIGNAL and_dcpl_893 : STD_LOGIC;
  SIGNAL and_dcpl_896 : STD_LOGIC;
  SIGNAL and_dcpl_902 : STD_LOGIC;
  SIGNAL and_dcpl_903 : STD_LOGIC;
  SIGNAL and_dcpl_906 : STD_LOGIC;
  SIGNAL and_dcpl_913 : STD_LOGIC;
  SIGNAL and_dcpl_916 : STD_LOGIC;
  SIGNAL z_out_20 : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL and_dcpl_930 : STD_LOGIC;
  SIGNAL z_out_21 : STD_LOGIC_VECTOR (16 DOWNTO 0);
  SIGNAL and_dcpl_944 : STD_LOGIC;
  SIGNAL z_out_22 : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL and_dcpl_958 : STD_LOGIC;
  SIGNAL z_out_23 : STD_LOGIC_VECTOR (17 DOWNTO 0);
  SIGNAL z_out_25 : STD_LOGIC_VECTOR (55 DOWNTO 0);
  SIGNAL and_dcpl_998 : STD_LOGIC;
  SIGNAL z_out_26 : STD_LOGIC_VECTOR (55 DOWNTO 0);
  SIGNAL z_out_27 : STD_LOGIC_VECTOR (55 DOWNTO 0);
  SIGNAL not_tmp_774 : STD_LOGIC;
  SIGNAL or_tmp_962 : STD_LOGIC;
  SIGNAL and_dcpl_1046 : STD_LOGIC;
  SIGNAL and_dcpl_1051 : STD_LOGIC;
  SIGNAL and_dcpl_1064 : STD_LOGIC;
  SIGNAL and_dcpl_1072 : STD_LOGIC;
  SIGNAL z_out_31 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL and_dcpl_1078 : STD_LOGIC;
  SIGNAL z_out_32 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL z_out_33 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL z_out_35 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL z_out_37 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL z_out_38 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL attention_abs_qif_acc_pmx_lpi_1_dfm : STD_LOGIC_VECTOR (30 DOWNTO 0);
  SIGNAL attention_abs_3_qr_sva : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_sva : STD_LOGIC_VECTOR (7 DOWNTO
      0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_sva : STD_LOGIC_VECTOR (7 DOWNTO
      0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_sva : STD_LOGIC_VECTOR (7 DOWNTO
      0);
  SIGNAL SF_LOOP_3_acc_5_psp_sva : STD_LOGIC_VECTOR (21 DOWNTO 0);
  SIGNAL softmax_1_8_6_sum_sva_1 : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_abs_4_qif_acc_pmx_lpi_1_dfm : STD_LOGIC_VECTOR (30 DOWNTO 0);
  SIGNAL attention_abs_7_qr_sva : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_sva : STD_LOGIC_VECTOR (7 DOWNTO
      0);
  SIGNAL RMS_NORM_LOOP_1_1_slc_RMS_NORM_LOOP_1_1_RMS_NORM_LOOP_1_1_mul_55_16_itm
      : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_mul_1_itm : STD_LOGIC_VECTOR (59 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_1_mul_1_itm : STD_LOGIC_VECTOR (60 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_mul_1_itm : STD_LOGIC_VECTOR (59 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_16_itm : STD_LOGIC_VECTOR (18 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_15_itm : STD_LOGIC_VECTOR (18 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_17_itm : STD_LOGIC_VECTOR (18 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_28_itm : STD_LOGIC_VECTOR (19 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_35_itm : STD_LOGIC_VECTOR (17 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_6_itm : STD_LOGIC_VECTOR (30 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_7_itm : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_39_itm : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_40_itm : STD_LOGIC_VECTOR (10 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_46_itm : STD_LOGIC_VECTOR (18 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_50_itm : STD_LOGIC_VECTOR (25 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_54_itm : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_3_mul_1_itm : STD_LOGIC_VECTOR (59 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_30_itm : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_38_itm : STD_LOGIC_VECTOR (16 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_46_itm : STD_LOGIC_VECTOR (24 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_52_itm : STD_LOGIC_VECTOR (30 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_29_itm : STD_LOGIC_VECTOR (7 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_and_1_itm : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_37_itm : STD_LOGIC_VECTOR (15 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_45_itm : STD_LOGIC_VECTOR (23 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_51_itm : STD_LOGIC_VECTOR (29 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_30_itm : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_38_itm : STD_LOGIC_VECTOR (16 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_46_itm : STD_LOGIC_VECTOR (24 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_52_itm : STD_LOGIC_VECTOR (30 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_29_itm : STD_LOGIC_VECTOR (7 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_37_itm : STD_LOGIC_VECTOR (15 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_45_itm : STD_LOGIC_VECTOR (23 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_51_itm : STD_LOGIC_VECTOR (29 DOWNTO
      0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_39 : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_38_0 : STD_LOGIC_VECTOR (38 DOWNTO
      0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_39 : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_38_0 : STD_LOGIC_VECTOR (38 DOWNTO
      0);
  SIGNAL for_for_strm_in_tmp_sva_31_2 : STD_LOGIC_VECTOR (29 DOWNTO 0);
  SIGNAL compute_sqrt_guess_sva_29_0 : STD_LOGIC_VECTOR (29 DOWNTO 0);
  SIGNAL compute_sqrt_1_guess_sva_29_0 : STD_LOGIC_VECTOR (29 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_93_psp : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_96_psp : STD_LOGIC_VECTOR (10 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_30_psp : STD_LOGIC_VECTOR (19 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_39_mx0w2 : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_38_0_mx0w2 : STD_LOGIC_VECTOR (38
      DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_39_mx0w2 : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_38_0_mx0w2 : STD_LOGIC_VECTOR
      (38 DOWNTO 0);
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_acc_17_sdt_mx0w5 : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm_mx0c6 : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_3_psp_sva_1 : STD_LOGIC_VECTOR (2
      DOWNTO 0);
  SIGNAL attention_abs_qif_acc_pmx_lpi_1_dfm_mx0w0 : STD_LOGIC_VECTOR (30 DOWNTO
      0);
  SIGNAL RMS_NORM_LOOP_2_2_dfr_sva_mx0c2 : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_dfr_sva_mx0c3 : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c1
      : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c2
      : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c4
      : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c6
      : STD_LOGIC;
  SIGNAL exit_QUANTIZE_ACTIVATION_LOOP_2_1_sva_dfm_mx0w0 : STD_LOGIC;
  SIGNAL attention_abs_2_mux_2 : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_abs_1_qr_sva_1 : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_and_4_ssc_1 : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_and_1_ssc_1 : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_and_6_ssc_1 : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_nor_ssc_1 : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_and_5_ssc_1 : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_3_2_ko_2_0_sva_1_mx0w2 : STD_LOGIC_VECTOR (2
      DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_3_jo_2_0_sva_3 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_1_k_5_0_sva_2 : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_61_cse_mx0w4 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0_mx0c0 : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0_mx0c1 : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0_mx0c2 : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0_mx0c3 : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_3_ko_2_0_sva_2 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c0 : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c1 : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c3 : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c5 : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_acc_30_psp_sva_1 : STD_LOGIC_VECTOR (2 DOWNTO
      0);
  SIGNAL SF_LOOP_3_acc_63_cse_mx0w6 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_mx0c0 : STD_LOGIC;
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_k_5_0_sva_2 : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_k_4_0_sva_2 : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_or_itm_mx0c1 : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_2_LINEAR_FORWARD_NO_MUL_LOOP_5_2_and_1_cse_1
      : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_ki_4_0_sva_2 : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_2_ki_4_0_sva_2 : STD_LOGIC_VECTOR (4 DOWNTO
      0);
  SIGNAL CACHE_UPDATE_LOOP_3_qif_acc_5_sdt_1 : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_1_qif_acc_5_sdt_1 : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_64_ncse_1 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_11_itm_1 : STD_LOGIC_VECTOR (17 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_15_itm_1 : STD_LOGIC_VECTOR (16 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_6_psp_sva_1 : STD_LOGIC_VECTOR (18 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_7_psp_sva_1 : STD_LOGIC_VECTOR (17 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_3_psp_sva_1 : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL attention_abs_4_qif_acc_pmx_lpi_1_dfm_mx0w0 : STD_LOGIC_VECTOR (30 DOWNTO
      0);
  SIGNAL attention_abs_6_mux_2 : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_abs_5_qr_sva_1 : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_2_and_4_ssc_1 : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_and_1_ssc_1 : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_and_6_ssc_1 : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_nor_ssc_1 : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_and_5_ssc_1 : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_3_INIT_2D_MEM_LOOP_2_3_nor_itm_1 : STD_LOGIC;
  SIGNAL SF_LOOP_3_acc_6_psp_sva_18_17 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_11_itm_17_15 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_11_itm_13_0 : STD_LOGIC_VECTOR (13 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_12_itm_16_15 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_12_itm_3_0 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_15_itm_16_10 : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_15_itm_6_0 : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_19_itm_12_11 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_19_itm_9_4 : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL attention_abs_qif_acc_pmx_lpi_1_dfm_mx1_30_1 : STD_LOGIC_VECTOR (29 DOWNTO
      0);
  SIGNAL attention_max_attn_fixed_t_attention_max_attn_fixed_t_and_mut_mx0w2_39 :
      STD_LOGIC;
  SIGNAL attention_max_attn_fixed_t_attention_max_attn_fixed_t_and_mut_mx0w2_38_0
      : STD_LOGIC_VECTOR (38 DOWNTO 0);
  SIGNAL attention_max_attn_fixed_t_1_conc_psp_mx0w11_39 : STD_LOGIC;
  SIGNAL attention_max_attn_fixed_t_1_conc_psp_mx0w11_38_0 : STD_LOGIC_VECTOR (38
      DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_cosval_APPLY_ROTARY_POS_EMB_LOOP_6_cosval_conc_2_9_5
      : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL attention_abs_4_qif_acc_pmx_lpi_1_dfm_mx1_30_1 : STD_LOGIC_VECTOR (29 DOWNTO
      0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_conc_2_15_7
      : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_sdt_sva_35_34 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_sdt_sva_32_17 : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_sdt_sva_15_0 : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_itm_10_9 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_itm_7_0 : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_1_itm_12_11 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_1_itm_9_0 : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_2_itm_18_17 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_2_itm_15_0 : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_3_itm_21_20 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_3_itm_18_3 : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_3_itm_1_0 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_4_itm_23_22 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_4_itm_20_5 : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_4_itm_3_0 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_5_itm_31_30 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_5_itm_28_13 : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_5_itm_11_0 : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_2_mux_3_itm_4_3 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_26_itm_19_9 : STD_LOGIC_VECTOR (10 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_26_itm_8_0 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_conc_2_itm_19_0 : STD_LOGIC_VECTOR
      (19 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_1_1_or_ssc : STD_LOGIC;
  SIGNAL reg_rms_norm_384_div_cmp_b_ftd_1 : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_1_and_2_ssc : STD_LOGIC;
  SIGNAL reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd
      : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1
      : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_3_and_ssc : STD_LOGIC;
  SIGNAL reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd : STD_LOGIC;
  SIGNAL reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1 : STD_LOGIC_VECTOR (38 DOWNTO 0);
  SIGNAL reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_1 : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_2 : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_3 : STD_LOGIC;
  SIGNAL reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_4 : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_5 : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_and_ssc : STD_LOGIC;
  SIGNAL reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_ftd : STD_LOGIC_VECTOR (2 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_or_3_cse : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_nand_cse
      : STD_LOGIC;
  SIGNAL nor_cse : STD_LOGIC;
  SIGNAL compute_sqrt_for_or_2_cse : STD_LOGIC;
  SIGNAL or_544_cse : STD_LOGIC;
  SIGNAL nor_562_cse : STD_LOGIC;
  SIGNAL and_1253_cse : STD_LOGIC;
  SIGNAL nand_216_cse : STD_LOGIC;
  SIGNAL nor_470_cse : STD_LOGIC;
  SIGNAL nor_571_cse : STD_LOGIC;
  SIGNAL mux_988_cse : STD_LOGIC;
  SIGNAL nor_573_cse : STD_LOGIC;
  SIGNAL xor_6_cse : STD_LOGIC;
  SIGNAL compute_sqrt_for_guess_inv_or_cse : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_or_cse : STD_LOGIC;
  SIGNAL and_193_ssc : STD_LOGIC;
  SIGNAL and_194_ssc : STD_LOGIC;
  SIGNAL SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b_39 : STD_LOGIC;
  SIGNAL SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b_38_0 : STD_LOGIC_VECTOR (38 DOWNTO
      0);
  SIGNAL and_184_ssc : STD_LOGIC;
  SIGNAL and_186_ssc : STD_LOGIC;
  SIGNAL SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a_55 : STD_LOGIC;
  SIGNAL SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a_54_16 : STD_LOGIC_VECTOR (38 DOWNTO
      0);
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_4_rmff_3_1 : STD_LOGIC_VECTOR (2 DOWNTO
      0);
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_4_rmff_0 : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_rmff_4_2 : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL reg_rms_norm_384_div_cmp_b_ftd_59_38 : STD_LOGIC_VECTOR (21 DOWNTO 0);
  SIGNAL reg_rms_norm_384_div_cmp_b_ftd_37_0 : STD_LOGIC_VECTOR (37 DOWNTO 0);
  SIGNAL attention_round_1_qelse_attention_round_1_qelse_nor_cse : STD_LOGIC;
  SIGNAL attention_round_1_qif_and_cse : STD_LOGIC;
  SIGNAL and_841_cse : STD_LOGIC;
  SIGNAL and_1275_cse : STD_LOGIC;
  SIGNAL and_1019_cse : STD_LOGIC;
  SIGNAL mux_973_cse : STD_LOGIC;
  SIGNAL and_1280_cse : STD_LOGIC;
  SIGNAL and_1283_cse : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_nor_cse : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_mux1h_7_itm_4_1 : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_or_2_cse : STD_LOGIC;
  SIGNAL operator_80_48_true_AC_TRN_AC_WRAP_operator_80_48_true_AC_TRN_AC_WRAP_slc_SOFTMAX_LOOP_4_sqr_56_1_itm_slc
      : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_12_itm_12_9_slc : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL reg_attention_round_a_cse_slc : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_88_itm : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL and_548_itm : STD_LOGIC;
  SIGNAL and_554_itm : STD_LOGIC;
  SIGNAL nor_529_itm : STD_LOGIC;
  SIGNAL and_558_itm : STD_LOGIC;
  SIGNAL and_561_itm : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_k_nand_1_itm : STD_LOGIC;
  SIGNAL compute_sqrt_for_guess_inv_or_2_itm : STD_LOGIC;
  SIGNAL compute_sqrt_for_guess_inv_or_4_itm : STD_LOGIC;
  SIGNAL compute_sqrt_for_guess_inv_or_3_itm : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_1_1_or_1_itm : STD_LOGIC;
  SIGNAL compute_sqrt_1_for_acc_1_itm_40_1_1 : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_itm_25_1 : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_acc_itm_25_1 : STD_LOGIC;
  SIGNAL compute_sqrt_for_acc_1_itm_40_1_1 : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_max_attn_fixed_t_acc_itm_40_1 : STD_LOGIC;
  SIGNAL attention_max_attn_fixed_t_1_acc_itm_40_1 : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_1_1_acc_3_itm_2_1 : STD_LOGIC;
  SIGNAL SOFTMAX_LOOP_3_acc_3_itm_40_1 : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_or_2_cse_1 : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_2_1_j_and_ssc : STD_LOGIC;
  SIGNAL reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1 : STD_LOGIC;
  SIGNAL reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd : STD_LOGIC;
  SIGNAL reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd_1 : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_k_and_ssc : STD_LOGIC;
  SIGNAL reg_CACHE_UPDATE_LOOP_3_k_5_0_1_ftd : STD_LOGIC;
  SIGNAL compute_sqrt_for_guess_inv_nor_seb : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_k_and_3_cse : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_k_and_1_cse : STD_LOGIC;
  SIGNAL reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_rmff_1 : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_rmff_0 : STD_LOGIC;
  SIGNAL nor_527_seb : STD_LOGIC;
  SIGNAL reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_0 : STD_LOGIC;
  SIGNAL or_1134_ssc : STD_LOGIC;
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_8_rmff_2 : STD_LOGIC;
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_8_rmff_1_0 : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL z_out_5_1_0 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL z_out_11_4_0 : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL z_out_12_23_0 : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL z_out_18_67_16 : STD_LOGIC_VECTOR (51 DOWNTO 0);
  SIGNAL z_out_28_2 : STD_LOGIC;
  SIGNAL z_out_29_2 : STD_LOGIC;
  SIGNAL z_out_30_2 : STD_LOGIC;
  SIGNAL z_out_34_2_0 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL z_out_36_2_0 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL and_1342_cse : STD_LOGIC;
  SIGNAL mux_1008_cse : STD_LOGIC;
  SIGNAL or_1239_tmp : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_2_mux1h_1_tmp : STD_LOGIC;

  SIGNAL mux_265_nl : STD_LOGIC;
  SIGNAL or_1088_nl : STD_LOGIC;
  SIGNAL nand_142_nl : STD_LOGIC;
  SIGNAL mux_275_nl : STD_LOGIC;
  SIGNAL mux_274_nl : STD_LOGIC;
  SIGNAL mux_273_nl : STD_LOGIC;
  SIGNAL mux_272_nl : STD_LOGIC;
  SIGNAL mux_271_nl : STD_LOGIC;
  SIGNAL mux_270_nl : STD_LOGIC;
  SIGNAL mux_269_nl : STD_LOGIC;
  SIGNAL mux_268_nl : STD_LOGIC;
  SIGNAL mux_267_nl : STD_LOGIC;
  SIGNAL mux_289_nl : STD_LOGIC;
  SIGNAL mux_288_nl : STD_LOGIC;
  SIGNAL mux_287_nl : STD_LOGIC;
  SIGNAL or_313_nl : STD_LOGIC;
  SIGNAL mux_286_nl : STD_LOGIC;
  SIGNAL mux_285_nl : STD_LOGIC;
  SIGNAL mux_284_nl : STD_LOGIC;
  SIGNAL mux_282_nl : STD_LOGIC;
  SIGNAL or_310_nl : STD_LOGIC;
  SIGNAL and_149_nl : STD_LOGIC;
  SIGNAL compute_sqrt_guess_and_1_nl : STD_LOGIC;
  SIGNAL and_164_nl : STD_LOGIC;
  SIGNAL compute_sqrt_guess_and_3_nl : STD_LOGIC;
  SIGNAL mux_302_nl : STD_LOGIC;
  SIGNAL mux_301_nl : STD_LOGIC;
  SIGNAL mux_300_nl : STD_LOGIC;
  SIGNAL or_323_nl : STD_LOGIC;
  SIGNAL mux_299_nl : STD_LOGIC;
  SIGNAL mux_296_nl : STD_LOGIC;
  SIGNAL mux_295_nl : STD_LOGIC;
  SIGNAL mux_294_nl : STD_LOGIC;
  SIGNAL mux_293_nl : STD_LOGIC;
  SIGNAL mux_292_nl : STD_LOGIC;
  SIGNAL or_316_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_2_nl : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL mux_312_nl : STD_LOGIC;
  SIGNAL or_1091_nl : STD_LOGIC;
  SIGNAL mux_311_nl : STD_LOGIC;
  SIGNAL nand_15_nl : STD_LOGIC;
  SIGNAL mux_310_nl : STD_LOGIC;
  SIGNAL nor_309_nl : STD_LOGIC;
  SIGNAL nor_310_nl : STD_LOGIC;
  SIGNAL or_333_nl : STD_LOGIC;
  SIGNAL and_176_nl : STD_LOGIC;
  SIGNAL and_177_nl : STD_LOGIC;
  SIGNAL mux_315_nl : STD_LOGIC;
  SIGNAL mux_314_nl : STD_LOGIC;
  SIGNAL mux_313_nl : STD_LOGIC;
  SIGNAL mux_317_nl : STD_LOGIC;
  SIGNAL mux_321_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_3_mux_nl : STD_LOGIC;
  SIGNAL and_181_nl : STD_LOGIC;
  SIGNAL mux_328_nl : STD_LOGIC;
  SIGNAL mux_327_nl : STD_LOGIC;
  SIGNAL mux_326_nl : STD_LOGIC;
  SIGNAL nand_156_nl : STD_LOGIC;
  SIGNAL mux_325_nl : STD_LOGIC;
  SIGNAL mux_324_nl : STD_LOGIC;
  SIGNAL mux_329_nl : STD_LOGIC;
  SIGNAL mux_330_nl : STD_LOGIC;
  SIGNAL mux_331_nl : STD_LOGIC;
  SIGNAL mux_333_nl : STD_LOGIC;
  SIGNAL mux_332_nl : STD_LOGIC;
  SIGNAL mux_335_nl : STD_LOGIC;
  SIGNAL rms_norm_384_mux1h_7_nl : STD_LOGIC;
  SIGNAL and_201_nl : STD_LOGIC;
  SIGNAL mux_336_nl : STD_LOGIC;
  SIGNAL or_166_nl : STD_LOGIC;
  SIGNAL mux_343_nl : STD_LOGIC;
  SIGNAL nor_317_nl : STD_LOGIC;
  SIGNAL mux_342_nl : STD_LOGIC;
  SIGNAL or_365_nl : STD_LOGIC;
  SIGNAL mux_341_nl : STD_LOGIC;
  SIGNAL or_364_nl : STD_LOGIC;
  SIGNAL or_363_nl : STD_LOGIC;
  SIGNAL nor_318_nl : STD_LOGIC;
  SIGNAL mux_365_nl : STD_LOGIC;
  SIGNAL mux_364_nl : STD_LOGIC;
  SIGNAL mux_371_nl : STD_LOGIC;
  SIGNAL or_426_nl : STD_LOGIC;
  SIGNAL mux_370_nl : STD_LOGIC;
  SIGNAL or_424_nl : STD_LOGIC;
  SIGNAL mux_375_nl : STD_LOGIC;
  SIGNAL mux_374_nl : STD_LOGIC;
  SIGNAL nor_331_nl : STD_LOGIC;
  SIGNAL nor_332_nl : STD_LOGIC;
  SIGNAL nor_333_nl : STD_LOGIC;
  SIGNAL mux_388_nl : STD_LOGIC;
  SIGNAL mux_392_nl : STD_LOGIC;
  SIGNAL nor_340_nl : STD_LOGIC;
  SIGNAL nor_341_nl : STD_LOGIC;
  SIGNAL mux_391_nl : STD_LOGIC;
  SIGNAL or_460_nl : STD_LOGIC;
  SIGNAL or_459_nl : STD_LOGIC;
  SIGNAL rms_norm_384_variance_mux1h_nl : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL rms_norm_384_variance_or_nl : STD_LOGIC;
  SIGNAL and_365_nl : STD_LOGIC;
  SIGNAL and_366_nl : STD_LOGIC;
  SIGNAL and_375_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_or_nl : STD_LOGIC;
  SIGNAL mux_437_nl : STD_LOGIC;
  SIGNAL or_1096_nl : STD_LOGIC;
  SIGNAL mux_436_nl : STD_LOGIC;
  SIGNAL or_1097_nl : STD_LOGIC;
  SIGNAL nand_174_nl : STD_LOGIC;
  SIGNAL mux_435_nl : STD_LOGIC;
  SIGNAL mux_434_nl : STD_LOGIC;
  SIGNAL mux_433_nl : STD_LOGIC;
  SIGNAL mux_432_nl : STD_LOGIC;
  SIGNAL mux_431_nl : STD_LOGIC;
  SIGNAL mux_430_nl : STD_LOGIC;
  SIGNAL or_478_nl : STD_LOGIC;
  SIGNAL mux_429_nl : STD_LOGIC;
  SIGNAL mux_428_nl : STD_LOGIC;
  SIGNAL mux_427_nl : STD_LOGIC;
  SIGNAL mux_426_nl : STD_LOGIC;
  SIGNAL mux_425_nl : STD_LOGIC;
  SIGNAL mux_424_nl : STD_LOGIC;
  SIGNAL mux_423_nl : STD_LOGIC;
  SIGNAL mux_421_nl : STD_LOGIC;
  SIGNAL mux_420_nl : STD_LOGIC;
  SIGNAL mux_419_nl : STD_LOGIC;
  SIGNAL mux_417_nl : STD_LOGIC;
  SIGNAL mux_415_nl : STD_LOGIC;
  SIGNAL mux_413_nl : STD_LOGIC;
  SIGNAL mux_412_nl : STD_LOGIC;
  SIGNAL or_474_nl : STD_LOGIC;
  SIGNAL mux_411_nl : STD_LOGIC;
  SIGNAL mux_406_nl : STD_LOGIC;
  SIGNAL mux_403_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_2_mux1h_15_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_82_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_or_4_nl : STD_LOGIC;
  SIGNAL nor_355_nl : STD_LOGIC;
  SIGNAL mux_450_nl : STD_LOGIC;
  SIGNAL or_1099_nl : STD_LOGIC;
  SIGNAL mux_449_nl : STD_LOGIC;
  SIGNAL or_1100_nl : STD_LOGIC;
  SIGNAL or_1101_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_2_or_nl : STD_LOGIC;
  SIGNAL mux_454_nl : STD_LOGIC;
  SIGNAL or_1103_nl : STD_LOGIC;
  SIGNAL mux_453_nl : STD_LOGIC;
  SIGNAL or_511_nl : STD_LOGIC;
  SIGNAL mux_452_nl : STD_LOGIC;
  SIGNAL or_1102_nl : STD_LOGIC;
  SIGNAL nand_176_nl : STD_LOGIC;
  SIGNAL or_509_nl : STD_LOGIC;
  SIGNAL or_1104_nl : STD_LOGIC;
  SIGNAL mux_451_nl : STD_LOGIC;
  SIGNAL or_507_nl : STD_LOGIC;
  SIGNAL mux_447_nl : STD_LOGIC;
  SIGNAL mux_446_nl : STD_LOGIC;
  SIGNAL mux_445_nl : STD_LOGIC;
  SIGNAL mux_444_nl : STD_LOGIC;
  SIGNAL nor_347_nl : STD_LOGIC;
  SIGNAL and_722_nl : STD_LOGIC;
  SIGNAL nor_348_nl : STD_LOGIC;
  SIGNAL mux_443_nl : STD_LOGIC;
  SIGNAL mux_442_nl : STD_LOGIC;
  SIGNAL or_493_nl : STD_LOGIC;
  SIGNAL mux_441_nl : STD_LOGIC;
  SIGNAL nor_349_nl : STD_LOGIC;
  SIGNAL mux_440_nl : STD_LOGIC;
  SIGNAL nor_350_nl : STD_LOGIC;
  SIGNAL mux_439_nl : STD_LOGIC;
  SIGNAL or_487_nl : STD_LOGIC;
  SIGNAL nor_351_nl : STD_LOGIC;
  SIGNAL mux_438_nl : STD_LOGIC;
  SIGNAL or_484_nl : STD_LOGIC;
  SIGNAL or_483_nl : STD_LOGIC;
  SIGNAL for_for_j_and_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL for_for_j_mux1h_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL for_for_j_or_nl : STD_LOGIC;
  SIGNAL mux_473_nl : STD_LOGIC;
  SIGNAL mux_472_nl : STD_LOGIC;
  SIGNAL mux_471_nl : STD_LOGIC;
  SIGNAL or_534_nl : STD_LOGIC;
  SIGNAL mux_470_nl : STD_LOGIC;
  SIGNAL nand_179_nl : STD_LOGIC;
  SIGNAL mux_469_nl : STD_LOGIC;
  SIGNAL mux_468_nl : STD_LOGIC;
  SIGNAL or_530_nl : STD_LOGIC;
  SIGNAL mux_467_nl : STD_LOGIC;
  SIGNAL nand_23_nl : STD_LOGIC;
  SIGNAL mux_466_nl : STD_LOGIC;
  SIGNAL or_528_nl : STD_LOGIC;
  SIGNAL or_526_nl : STD_LOGIC;
  SIGNAL mux_465_nl : STD_LOGIC;
  SIGNAL or_525_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_not_1_nl : STD_LOGIC;
  SIGNAL mux_464_nl : STD_LOGIC;
  SIGNAL mux_463_nl : STD_LOGIC;
  SIGNAL mux_462_nl : STD_LOGIC;
  SIGNAL or_524_nl : STD_LOGIC;
  SIGNAL mux_461_nl : STD_LOGIC;
  SIGNAL nand_178_nl : STD_LOGIC;
  SIGNAL mux_460_nl : STD_LOGIC;
  SIGNAL mux_459_nl : STD_LOGIC;
  SIGNAL mux_458_nl : STD_LOGIC;
  SIGNAL nand_22_nl : STD_LOGIC;
  SIGNAL mux_457_nl : STD_LOGIC;
  SIGNAL nand_21_nl : STD_LOGIC;
  SIGNAL mux_456_nl : STD_LOGIC;
  SIGNAL nor_362_nl : STD_LOGIC;
  SIGNAL nor_363_nl : STD_LOGIC;
  SIGNAL or_514_nl : STD_LOGIC;
  SIGNAL mux_455_nl : STD_LOGIC;
  SIGNAL or_513_nl : STD_LOGIC;
  SIGNAL mux_493_nl : STD_LOGIC;
  SIGNAL mux_492_nl : STD_LOGIC;
  SIGNAL mux_491_nl : STD_LOGIC;
  SIGNAL mux_490_nl : STD_LOGIC;
  SIGNAL or_547_nl : STD_LOGIC;
  SIGNAL mux_489_nl : STD_LOGIC;
  SIGNAL mux_488_nl : STD_LOGIC;
  SIGNAL mux_487_nl : STD_LOGIC;
  SIGNAL mux_486_nl : STD_LOGIC;
  SIGNAL mux_485_nl : STD_LOGIC;
  SIGNAL mux_484_nl : STD_LOGIC;
  SIGNAL mux_483_nl : STD_LOGIC;
  SIGNAL mux_481_nl : STD_LOGIC;
  SIGNAL mux_480_nl : STD_LOGIC;
  SIGNAL mux_479_nl : STD_LOGIC;
  SIGNAL mux_478_nl : STD_LOGIC;
  SIGNAL mux_477_nl : STD_LOGIC;
  SIGNAL mux_475_nl : STD_LOGIC;
  SIGNAL for_for_for_for_nor_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_and_1_nl : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_and_1_nl : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_LINEAR_FORWARD_NO_MUL_LOOP_2_nor_nl : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_82_nl : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_62_nl : STD_LOGIC_VECTOR (2 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_56_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_58_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_80_nl : STD_LOGIC_VECTOR (2 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_60_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_78_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_74_nl : STD_LOGIC_VECTOR (2 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_72_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_54_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_64_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_27_nl : STD_LOGIC_VECTOR (5 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_25_nl : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_28_nl : STD_LOGIC_VECTOR (7 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_35_nl : STD_LOGIC_VECTOR (13 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_33_nl : STD_LOGIC_VECTOR (11 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_31_nl : STD_LOGIC_VECTOR (9 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_36_nl : STD_LOGIC_VECTOR (14 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_34_nl : STD_LOGIC_VECTOR (12 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_32_nl : STD_LOGIC_VECTOR (10 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_43_nl : STD_LOGIC_VECTOR (21 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_41_nl : STD_LOGIC_VECTOR (19 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_39_nl : STD_LOGIC_VECTOR (17 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_44_nl : STD_LOGIC_VECTOR (22 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_42_nl : STD_LOGIC_VECTOR (20 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_40_nl : STD_LOGIC_VECTOR (18 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_50_nl : STD_LOGIC_VECTOR (28 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_48_nl : STD_LOGIC_VECTOR (26 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_49_nl : STD_LOGIC_VECTOR (27 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_47_nl : STD_LOGIC_VECTOR (25 DOWNTO
      0);
  SIGNAL and_410_nl : STD_LOGIC;
  SIGNAL compute_sqrt_for_i_mux1h_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL compute_sqrt_for_i_or_1_nl : STD_LOGIC;
  SIGNAL mux_534_nl : STD_LOGIC;
  SIGNAL mux_533_nl : STD_LOGIC;
  SIGNAL mux_532_nl : STD_LOGIC;
  SIGNAL or_589_nl : STD_LOGIC;
  SIGNAL or_586_nl : STD_LOGIC;
  SIGNAL or_585_nl : STD_LOGIC;
  SIGNAL compute_sqrt_for_i_or_nl : STD_LOGIC;
  SIGNAL mux_542_nl : STD_LOGIC;
  SIGNAL mux_541_nl : STD_LOGIC;
  SIGNAL mux_540_nl : STD_LOGIC;
  SIGNAL mux_539_nl : STD_LOGIC;
  SIGNAL or_1216_nl : STD_LOGIC;
  SIGNAL or_1217_nl : STD_LOGIC;
  SIGNAL or_1218_nl : STD_LOGIC;
  SIGNAL or_1219_nl : STD_LOGIC;
  SIGNAL mux_538_nl : STD_LOGIC;
  SIGNAL or_601_nl : STD_LOGIC;
  SIGNAL mux_537_nl : STD_LOGIC;
  SIGNAL or_599_nl : STD_LOGIC;
  SIGNAL or_598_nl : STD_LOGIC;
  SIGNAL or_1220_nl : STD_LOGIC;
  SIGNAL mux_536_nl : STD_LOGIC;
  SIGNAL or_594_nl : STD_LOGIC;
  SIGNAL mux_535_nl : STD_LOGIC;
  SIGNAL or_593_nl : STD_LOGIC;
  SIGNAL or_591_nl : STD_LOGIC;
  SIGNAL mux_531_nl : STD_LOGIC;
  SIGNAL mux_530_nl : STD_LOGIC;
  SIGNAL mux_529_nl : STD_LOGIC;
  SIGNAL mux_528_nl : STD_LOGIC;
  SIGNAL mux_527_nl : STD_LOGIC;
  SIGNAL nand_27_nl : STD_LOGIC;
  SIGNAL mux_526_nl : STD_LOGIC;
  SIGNAL mux_525_nl : STD_LOGIC;
  SIGNAL or_583_nl : STD_LOGIC;
  SIGNAL mux_524_nl : STD_LOGIC;
  SIGNAL mux_523_nl : STD_LOGIC;
  SIGNAL mux_522_nl : STD_LOGIC;
  SIGNAL or_582_nl : STD_LOGIC;
  SIGNAL mux_521_nl : STD_LOGIC;
  SIGNAL mux_520_nl : STD_LOGIC;
  SIGNAL mux_519_nl : STD_LOGIC;
  SIGNAL mux_518_nl : STD_LOGIC;
  SIGNAL mux_517_nl : STD_LOGIC;
  SIGNAL mux_516_nl : STD_LOGIC;
  SIGNAL mux_515_nl : STD_LOGIC;
  SIGNAL mux_513_nl : STD_LOGIC;
  SIGNAL mux_508_nl : STD_LOGIC;
  SIGNAL mux_507_nl : STD_LOGIC;
  SIGNAL or_573_nl : STD_LOGIC;
  SIGNAL mux_506_nl : STD_LOGIC;
  SIGNAL mux_504_nl : STD_LOGIC;
  SIGNAL mux_503_nl : STD_LOGIC;
  SIGNAL or_570_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_and_1_nl : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_1_nl : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_and_2_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_not_5_nl : STD_LOGIC;
  SIGNAL compute_sqrt_for_or_3_nl : STD_LOGIC;
  SIGNAL compute_sqrt_for_or_4_nl : STD_LOGIC;
  SIGNAL compute_sqrt_for_or_5_nl : STD_LOGIC;
  SIGNAL mux_606_nl : STD_LOGIC;
  SIGNAL nor_397_nl : STD_LOGIC;
  SIGNAL nor_398_nl : STD_LOGIC;
  SIGNAL mux_605_nl : STD_LOGIC;
  SIGNAL mux_608_nl : STD_LOGIC;
  SIGNAL mux_607_nl : STD_LOGIC;
  SIGNAL nor_399_nl : STD_LOGIC;
  SIGNAL nor_400_nl : STD_LOGIC;
  SIGNAL nor_401_nl : STD_LOGIC;
  SIGNAL mux_604_nl : STD_LOGIC;
  SIGNAL mux_603_nl : STD_LOGIC;
  SIGNAL mux_602_nl : STD_LOGIC;
  SIGNAL mux_601_nl : STD_LOGIC;
  SIGNAL mux_600_nl : STD_LOGIC;
  SIGNAL and_740_nl : STD_LOGIC;
  SIGNAL mux_599_nl : STD_LOGIC;
  SIGNAL mux_598_nl : STD_LOGIC;
  SIGNAL mux_597_nl : STD_LOGIC;
  SIGNAL mux_596_nl : STD_LOGIC;
  SIGNAL mux_595_nl : STD_LOGIC;
  SIGNAL mux_594_nl : STD_LOGIC;
  SIGNAL mux_593_nl : STD_LOGIC;
  SIGNAL mux_591_nl : STD_LOGIC;
  SIGNAL and_742_nl : STD_LOGIC;
  SIGNAL mux_590_nl : STD_LOGIC;
  SIGNAL mux_589_nl : STD_LOGIC;
  SIGNAL mux_588_nl : STD_LOGIC;
  SIGNAL mux_587_nl : STD_LOGIC;
  SIGNAL mux_586_nl : STD_LOGIC;
  SIGNAL or_657_nl : STD_LOGIC;
  SIGNAL mux_585_nl : STD_LOGIC;
  SIGNAL mux_584_nl : STD_LOGIC;
  SIGNAL mux_583_nl : STD_LOGIC;
  SIGNAL mux_582_nl : STD_LOGIC;
  SIGNAL mux_581_nl : STD_LOGIC;
  SIGNAL mux_580_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_asn_SF_LOOP_3_acc_17_itm_1_8_RMS_NORM_LOOP_2_and_nl :
      STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_mux1h_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_or_nl : STD_LOGIC;
  SIGNAL and_460_nl : STD_LOGIC;
  SIGNAL mux_622_nl : STD_LOGIC;
  SIGNAL mux_621_nl : STD_LOGIC;
  SIGNAL mux_620_nl : STD_LOGIC;
  SIGNAL or_685_nl : STD_LOGIC;
  SIGNAL mux_619_nl : STD_LOGIC;
  SIGNAL or_684_nl : STD_LOGIC;
  SIGNAL mux_618_nl : STD_LOGIC;
  SIGNAL nand_29_nl : STD_LOGIC;
  SIGNAL mux_617_nl : STD_LOGIC;
  SIGNAL nor_402_nl : STD_LOGIC;
  SIGNAL nor_403_nl : STD_LOGIC;
  SIGNAL mux_616_nl : STD_LOGIC;
  SIGNAL mux_615_nl : STD_LOGIC;
  SIGNAL mux_614_nl : STD_LOGIC;
  SIGNAL mux_613_nl : STD_LOGIC;
  SIGNAL mux_612_nl : STD_LOGIC;
  SIGNAL mux_611_nl : STD_LOGIC;
  SIGNAL mux_610_nl : STD_LOGIC;
  SIGNAL mux_609_nl : STD_LOGIC;
  SIGNAL or_673_nl : STD_LOGIC;
  SIGNAL and_464_nl : STD_LOGIC;
  SIGNAL not_1934_nl : STD_LOGIC;
  SIGNAL mux_633_nl : STD_LOGIC;
  SIGNAL mux_632_nl : STD_LOGIC;
  SIGNAL mux_631_nl : STD_LOGIC;
  SIGNAL nand_32_nl : STD_LOGIC;
  SIGNAL nand_31_nl : STD_LOGIC;
  SIGNAL mux_630_nl : STD_LOGIC;
  SIGNAL and_750_nl : STD_LOGIC;
  SIGNAL mux_629_nl : STD_LOGIC;
  SIGNAL mux_628_nl : STD_LOGIC;
  SIGNAL or_696_nl : STD_LOGIC;
  SIGNAL mux_627_nl : STD_LOGIC;
  SIGNAL nand_185_nl : STD_LOGIC;
  SIGNAL nand_186_nl : STD_LOGIC;
  SIGNAL mux_626_nl : STD_LOGIC;
  SIGNAL nand_30_nl : STD_LOGIC;
  SIGNAL or_691_nl : STD_LOGIC;
  SIGNAL mux_625_nl : STD_LOGIC;
  SIGNAL or_690_nl : STD_LOGIC;
  SIGNAL mux_624_nl : STD_LOGIC;
  SIGNAL nor_409_nl : STD_LOGIC;
  SIGNAL mux_643_nl : STD_LOGIC;
  SIGNAL mux_642_nl : STD_LOGIC;
  SIGNAL mux_641_nl : STD_LOGIC;
  SIGNAL or_714_nl : STD_LOGIC;
  SIGNAL nand_35_nl : STD_LOGIC;
  SIGNAL mux_640_nl : STD_LOGIC;
  SIGNAL and_755_nl : STD_LOGIC;
  SIGNAL mux_639_nl : STD_LOGIC;
  SIGNAL mux_638_nl : STD_LOGIC;
  SIGNAL nand_34_nl : STD_LOGIC;
  SIGNAL mux_637_nl : STD_LOGIC;
  SIGNAL nand_33_nl : STD_LOGIC;
  SIGNAL mux_636_nl : STD_LOGIC;
  SIGNAL nor_415_nl : STD_LOGIC;
  SIGNAL or_704_nl : STD_LOGIC;
  SIGNAL mux_635_nl : STD_LOGIC;
  SIGNAL or_703_nl : STD_LOGIC;
  SIGNAL mux_634_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_acc_22_nl : STD_LOGIC_VECTOR (19 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_60_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_65_nl : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_24_nl : STD_LOGIC_VECTOR (19 DOWNTO 0);
  SIGNAL mux_657_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_acc_71_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_72_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_73_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_74_nl : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_75_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_76_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_77_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_78_nl : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_79_nl : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL mux_665_nl : STD_LOGIC;
  SIGNAL mux_664_nl : STD_LOGIC;
  SIGNAL and_769_nl : STD_LOGIC;
  SIGNAL mux_663_nl : STD_LOGIC;
  SIGNAL and_764_nl : STD_LOGIC;
  SIGNAL mux_662_nl : STD_LOGIC;
  SIGNAL mux_661_nl : STD_LOGIC;
  SIGNAL and_765_nl : STD_LOGIC;
  SIGNAL nor_421_nl : STD_LOGIC;
  SIGNAL and_770_nl : STD_LOGIC;
  SIGNAL mux_660_nl : STD_LOGIC;
  SIGNAL or_735_nl : STD_LOGIC;
  SIGNAL or_734_nl : STD_LOGIC;
  SIGNAL nor_422_nl : STD_LOGIC;
  SIGNAL mux_659_nl : STD_LOGIC;
  SIGNAL mux_658_nl : STD_LOGIC;
  SIGNAL or_170_nl : STD_LOGIC;
  SIGNAL or_730_nl : STD_LOGIC;
  SIGNAL mux_656_nl : STD_LOGIC;
  SIGNAL mux_655_nl : STD_LOGIC;
  SIGNAL or_727_nl : STD_LOGIC;
  SIGNAL mux_654_nl : STD_LOGIC;
  SIGNAL mux_653_nl : STD_LOGIC;
  SIGNAL or_725_nl : STD_LOGIC;
  SIGNAL mux_652_nl : STD_LOGIC;
  SIGNAL mux_651_nl : STD_LOGIC;
  SIGNAL mux_650_nl : STD_LOGIC;
  SIGNAL or_723_nl : STD_LOGIC;
  SIGNAL mux_649_nl : STD_LOGIC;
  SIGNAL mux_648_nl : STD_LOGIC;
  SIGNAL mux_647_nl : STD_LOGIC;
  SIGNAL mux_646_nl : STD_LOGIC;
  SIGNAL and_758_nl : STD_LOGIC;
  SIGNAL mux_645_nl : STD_LOGIC;
  SIGNAL mux_644_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_2_acc_4_nl : STD_LOGIC_VECTOR (40 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_2_attention_abs_2_nand_nl : STD_LOGIC;
  SIGNAL attention_abs_2_mux_3_nl : STD_LOGIC_VECTOR (38 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_l_mux1h_4_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL mux_680_nl : STD_LOGIC;
  SIGNAL nor_429_nl : STD_LOGIC;
  SIGNAL mux_679_nl : STD_LOGIC;
  SIGNAL or_766_nl : STD_LOGIC;
  SIGNAL or_765_nl : STD_LOGIC;
  SIGNAL nor_430_nl : STD_LOGIC;
  SIGNAL mux_678_nl : STD_LOGIC;
  SIGNAL nand_41_nl : STD_LOGIC;
  SIGNAL mux_677_nl : STD_LOGIC;
  SIGNAL nor_427_nl : STD_LOGIC;
  SIGNAL nor_428_nl : STD_LOGIC;
  SIGNAL or_761_nl : STD_LOGIC;
  SIGNAL mux_702_nl : STD_LOGIC;
  SIGNAL nand_45_nl : STD_LOGIC;
  SIGNAL mux_701_nl : STD_LOGIC;
  SIGNAL mux_700_nl : STD_LOGIC;
  SIGNAL mux_699_nl : STD_LOGIC;
  SIGNAL mux_698_nl : STD_LOGIC;
  SIGNAL mux_697_nl : STD_LOGIC;
  SIGNAL mux_696_nl : STD_LOGIC;
  SIGNAL and_777_nl : STD_LOGIC;
  SIGNAL mux_695_nl : STD_LOGIC;
  SIGNAL or_790_nl : STD_LOGIC;
  SIGNAL mux_694_nl : STD_LOGIC;
  SIGNAL or_789_nl : STD_LOGIC;
  SIGNAL mux_693_nl : STD_LOGIC;
  SIGNAL mux_692_nl : STD_LOGIC;
  SIGNAL mux_691_nl : STD_LOGIC;
  SIGNAL nand_203_nl : STD_LOGIC;
  SIGNAL mux_690_nl : STD_LOGIC;
  SIGNAL nor_443_nl : STD_LOGIC;
  SIGNAL or_783_nl : STD_LOGIC;
  SIGNAL or_782_nl : STD_LOGIC;
  SIGNAL mux_689_nl : STD_LOGIC;
  SIGNAL mux_688_nl : STD_LOGIC;
  SIGNAL mux_687_nl : STD_LOGIC;
  SIGNAL nand_nl : STD_LOGIC;
  SIGNAL mux_686_nl : STD_LOGIC;
  SIGNAL nor_431_nl : STD_LOGIC;
  SIGNAL nor_432_nl : STD_LOGIC;
  SIGNAL or_nl : STD_LOGIC;
  SIGNAL or_1132_nl : STD_LOGIC;
  SIGNAL mux_685_nl : STD_LOGIC;
  SIGNAL or_776_nl : STD_LOGIC;
  SIGNAL mux_684_nl : STD_LOGIC;
  SIGNAL nand_200_nl : STD_LOGIC;
  SIGNAL nand_43_nl : STD_LOGIC;
  SIGNAL mux_683_nl : STD_LOGIC;
  SIGNAL nor_433_nl : STD_LOGIC;
  SIGNAL nand_240_nl : STD_LOGIC;
  SIGNAL mux_682_nl : STD_LOGIC;
  SIGNAL mux_681_nl : STD_LOGIC;
  SIGNAL nor_435_nl : STD_LOGIC;
  SIGNAL nor_436_nl : STD_LOGIC;
  SIGNAL nor_437_nl : STD_LOGIC;
  SIGNAL mux_740_nl : STD_LOGIC;
  SIGNAL mux_739_nl : STD_LOGIC;
  SIGNAL mux_738_nl : STD_LOGIC;
  SIGNAL mux_737_nl : STD_LOGIC;
  SIGNAL mux_736_nl : STD_LOGIC;
  SIGNAL or_838_nl : STD_LOGIC;
  SIGNAL mux_735_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_nl : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_mux1h_nl : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_70_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_89_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL and_481_nl : STD_LOGIC;
  SIGNAL mux_717_nl : STD_LOGIC;
  SIGNAL mux_716_nl : STD_LOGIC;
  SIGNAL mux_715_nl : STD_LOGIC;
  SIGNAL or_816_nl : STD_LOGIC;
  SIGNAL mux_714_nl : STD_LOGIC;
  SIGNAL nand_47_nl : STD_LOGIC;
  SIGNAL mux_713_nl : STD_LOGIC;
  SIGNAL mux_712_nl : STD_LOGIC;
  SIGNAL or_809_nl : STD_LOGIC;
  SIGNAL and_482_nl : STD_LOGIC;
  SIGNAL mux_720_nl : STD_LOGIC;
  SIGNAL or_821_nl : STD_LOGIC;
  SIGNAL mux_719_nl : STD_LOGIC;
  SIGNAL or_820_nl : STD_LOGIC;
  SIGNAL mux_718_nl : STD_LOGIC;
  SIGNAL or_818_nl : STD_LOGIC;
  SIGNAL and_825_nl : STD_LOGIC;
  SIGNAL mux_711_nl : STD_LOGIC;
  SIGNAL mux_710_nl : STD_LOGIC;
  SIGNAL mux_709_nl : STD_LOGIC;
  SIGNAL mux_708_nl : STD_LOGIC;
  SIGNAL nor_445_nl : STD_LOGIC;
  SIGNAL mux_707_nl : STD_LOGIC;
  SIGNAL nor_446_nl : STD_LOGIC;
  SIGNAL nor_447_nl : STD_LOGIC;
  SIGNAL nor_448_nl : STD_LOGIC;
  SIGNAL nor_449_nl : STD_LOGIC;
  SIGNAL nor_450_nl : STD_LOGIC;
  SIGNAL mux_706_nl : STD_LOGIC;
  SIGNAL nand_46_nl : STD_LOGIC;
  SIGNAL mux_705_nl : STD_LOGIC;
  SIGNAL mux_704_nl : STD_LOGIC;
  SIGNAL mux_722_nl : STD_LOGIC;
  SIGNAL or_797_nl : STD_LOGIC;
  SIGNAL and_487_nl : STD_LOGIC;
  SIGNAL mux_734_nl : STD_LOGIC;
  SIGNAL or_835_nl : STD_LOGIC;
  SIGNAL mux_733_nl : STD_LOGIC;
  SIGNAL or_834_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_k_mux1h_1_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_acc_3_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL and_492_nl : STD_LOGIC;
  SIGNAL mux_743_nl : STD_LOGIC;
  SIGNAL mux_742_nl : STD_LOGIC;
  SIGNAL nor_451_nl : STD_LOGIC;
  SIGNAL mux_741_nl : STD_LOGIC;
  SIGNAL nor_452_nl : STD_LOGIC;
  SIGNAL nor_453_nl : STD_LOGIC;
  SIGNAL and_496_nl : STD_LOGIC;
  SIGNAL mux_767_nl : STD_LOGIC;
  SIGNAL mux_766_nl : STD_LOGIC;
  SIGNAL nor_461_nl : STD_LOGIC;
  SIGNAL nor_462_nl : STD_LOGIC;
  SIGNAL mux_765_nl : STD_LOGIC;
  SIGNAL or_869_nl : STD_LOGIC;
  SIGNAL and_495_nl : STD_LOGIC;
  SIGNAL mux_764_nl : STD_LOGIC;
  SIGNAL nor_464_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_1_i_nand_nl : STD_LOGIC;
  SIGNAL mux_763_nl : STD_LOGIC;
  SIGNAL mux_762_nl : STD_LOGIC;
  SIGNAL mux_761_nl : STD_LOGIC;
  SIGNAL and_789_nl : STD_LOGIC;
  SIGNAL nor_458_nl : STD_LOGIC;
  SIGNAL mux_760_nl : STD_LOGIC;
  SIGNAL or_81_nl : STD_LOGIC;
  SIGNAL or_862_nl : STD_LOGIC;
  SIGNAL nor_459_nl : STD_LOGIC;
  SIGNAL nor_460_nl : STD_LOGIC;
  SIGNAL mux_759_nl : STD_LOGIC;
  SIGNAL nor_457_nl : STD_LOGIC;
  SIGNAL mux_758_nl : STD_LOGIC;
  SIGNAL mux_757_nl : STD_LOGIC;
  SIGNAL nand_50_nl : STD_LOGIC;
  SIGNAL mux_756_nl : STD_LOGIC;
  SIGNAL mux_755_nl : STD_LOGIC;
  SIGNAL or_856_nl : STD_LOGIC;
  SIGNAL or_855_nl : STD_LOGIC;
  SIGNAL nand_49_nl : STD_LOGIC;
  SIGNAL mux_754_nl : STD_LOGIC;
  SIGNAL or_854_nl : STD_LOGIC;
  SIGNAL mux_753_nl : STD_LOGIC;
  SIGNAL mux_752_nl : STD_LOGIC;
  SIGNAL mux_751_nl : STD_LOGIC;
  SIGNAL mux_750_nl : STD_LOGIC;
  SIGNAL mux_749_nl : STD_LOGIC;
  SIGNAL or_850_nl : STD_LOGIC;
  SIGNAL mux_748_nl : STD_LOGIC;
  SIGNAL mux_747_nl : STD_LOGIC;
  SIGNAL or_848_nl : STD_LOGIC;
  SIGNAL mux_746_nl : STD_LOGIC;
  SIGNAL or_846_nl : STD_LOGIC;
  SIGNAL mux_744_nl : STD_LOGIC;
  SIGNAL or_843_nl : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_ki_mux1h_2_nl : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL not_1935_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_l_mux1h_5_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_1_1_i_not_1_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_l_mux1h_6_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_2_1_j_not_1_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_l_mux1h_7_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mux1h_15_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_or_nl : STD_LOGIC;
  SIGNAL not_1936_nl : STD_LOGIC;
  SIGNAL mux_849_nl : STD_LOGIC;
  SIGNAL mux_848_nl : STD_LOGIC;
  SIGNAL or_967_nl : STD_LOGIC;
  SIGNAL or_965_nl : STD_LOGIC;
  SIGNAL mux_847_nl : STD_LOGIC;
  SIGNAL mux_846_nl : STD_LOGIC;
  SIGNAL mux_845_nl : STD_LOGIC;
  SIGNAL mux_844_nl : STD_LOGIC;
  SIGNAL mux_843_nl : STD_LOGIC;
  SIGNAL mux_842_nl : STD_LOGIC;
  SIGNAL mux_841_nl : STD_LOGIC;
  SIGNAL or_963_nl : STD_LOGIC;
  SIGNAL mux_840_nl : STD_LOGIC;
  SIGNAL mux_839_nl : STD_LOGIC;
  SIGNAL mux_838_nl : STD_LOGIC;
  SIGNAL mux_837_nl : STD_LOGIC;
  SIGNAL mux_836_nl : STD_LOGIC;
  SIGNAL mux_835_nl : STD_LOGIC;
  SIGNAL mux_851_nl : STD_LOGIC;
  SIGNAL mux_850_nl : STD_LOGIC;
  SIGNAL or_968_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_nl
      : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_mux_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_4_nl
      : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_mux_1_nl : STD_LOGIC;
  SIGNAL mux_872_nl : STD_LOGIC;
  SIGNAL or_1127_nl : STD_LOGIC;
  SIGNAL or_1128_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_1_nl : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_mux1h_2_nl : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_83_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_2_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_3_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_4_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_5_nl : STD_LOGIC;
  SIGNAL and_518_nl : STD_LOGIC;
  SIGNAL mux_863_nl : STD_LOGIC;
  SIGNAL mux_862_nl : STD_LOGIC;
  SIGNAL mux_860_nl : STD_LOGIC;
  SIGNAL and_519_nl : STD_LOGIC;
  SIGNAL nor_528_nl : STD_LOGIC;
  SIGNAL mux_859_nl : STD_LOGIC;
  SIGNAL mux_858_nl : STD_LOGIC;
  SIGNAL mux_857_nl : STD_LOGIC;
  SIGNAL nand_54_nl : STD_LOGIC;
  SIGNAL mux_856_nl : STD_LOGIC;
  SIGNAL mux_855_nl : STD_LOGIC;
  SIGNAL mux_854_nl : STD_LOGIC;
  SIGNAL or_974_nl : STD_LOGIC;
  SIGNAL mux_852_nl : STD_LOGIC;
  SIGNAL or_972_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_acc_90_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_acc_2_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_81_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL mux_882_nl : STD_LOGIC;
  SIGNAL mux_881_nl : STD_LOGIC;
  SIGNAL mux_880_nl : STD_LOGIC;
  SIGNAL mux_879_nl : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_2_acc_2_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_69_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_91_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL mux_878_nl : STD_LOGIC;
  SIGNAL mux_877_nl : STD_LOGIC;
  SIGNAL and_811_nl : STD_LOGIC;
  SIGNAL mux_876_nl : STD_LOGIC;
  SIGNAL nor_493_nl : STD_LOGIC;
  SIGNAL and_812_nl : STD_LOGIC;
  SIGNAL mux_875_nl : STD_LOGIC;
  SIGNAL or_993_nl : STD_LOGIC;
  SIGNAL mux_874_nl : STD_LOGIC;
  SIGNAL mux_873_nl : STD_LOGIC;
  SIGNAL nor_494_nl : STD_LOGIC;
  SIGNAL nor_495_nl : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_mux_1_nl : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_or_nl : STD_LOGIC;
  SIGNAL and_541_nl : STD_LOGIC;
  SIGNAL and_545_nl : STD_LOGIC;
  SIGNAL mux_903_nl : STD_LOGIC;
  SIGNAL nor_502_nl : STD_LOGIC;
  SIGNAL nor_503_nl : STD_LOGIC;
  SIGNAL mux_902_nl : STD_LOGIC;
  SIGNAL nand_241_nl : STD_LOGIC;
  SIGNAL mux_901_nl : STD_LOGIC;
  SIGNAL nor_498_nl : STD_LOGIC;
  SIGNAL or_1014_nl : STD_LOGIC;
  SIGNAL mux_900_nl : STD_LOGIC;
  SIGNAL or_1012_nl : STD_LOGIC;
  SIGNAL mux_899_nl : STD_LOGIC;
  SIGNAL or_1133_nl : STD_LOGIC;
  SIGNAL nand_242_nl : STD_LOGIC;
  SIGNAL mux_898_nl : STD_LOGIC;
  SIGNAL and_813_nl : STD_LOGIC;
  SIGNAL mux_897_nl : STD_LOGIC;
  SIGNAL or_1007_nl : STD_LOGIC;
  SIGNAL mux_912_nl : STD_LOGIC;
  SIGNAL mux_911_nl : STD_LOGIC;
  SIGNAL or_1031_nl : STD_LOGIC;
  SIGNAL or_1030_nl : STD_LOGIC;
  SIGNAL mux_910_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_k_mux1h_10_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_k_mux1h_13_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_k_nand_1_nl : STD_LOGIC;
  SIGNAL mux_909_nl : STD_LOGIC;
  SIGNAL and_816_nl : STD_LOGIC;
  SIGNAL mux_908_nl : STD_LOGIC;
  SIGNAL mux_907_nl : STD_LOGIC;
  SIGNAL or_1028_nl : STD_LOGIC;
  SIGNAL mux_906_nl : STD_LOGIC;
  SIGNAL mux_922_nl : STD_LOGIC;
  SIGNAL and_821_nl : STD_LOGIC;
  SIGNAL mux_921_nl : STD_LOGIC;
  SIGNAL mux_920_nl : STD_LOGIC;
  SIGNAL nand_238_nl : STD_LOGIC;
  SIGNAL mux_919_nl : STD_LOGIC;
  SIGNAL nor_505_nl : STD_LOGIC;
  SIGNAL and_819_nl : STD_LOGIC;
  SIGNAL mux_918_nl : STD_LOGIC;
  SIGNAL nor_508_nl : STD_LOGIC;
  SIGNAL mux_917_nl : STD_LOGIC;
  SIGNAL mux_916_nl : STD_LOGIC;
  SIGNAL and_822_nl : STD_LOGIC;
  SIGNAL mux_915_nl : STD_LOGIC;
  SIGNAL mux_914_nl : STD_LOGIC;
  SIGNAL or_137_nl : STD_LOGIC;
  SIGNAL mux_913_nl : STD_LOGIC;
  SIGNAL mux_942_nl : STD_LOGIC;
  SIGNAL mux_941_nl : STD_LOGIC;
  SIGNAL mux_940_nl : STD_LOGIC;
  SIGNAL mux_939_nl : STD_LOGIC;
  SIGNAL mux_938_nl : STD_LOGIC;
  SIGNAL mux_934_nl : STD_LOGIC;
  SIGNAL mux_932_nl : STD_LOGIC;
  SIGNAL mux_931_nl : STD_LOGIC;
  SIGNAL mux_930_nl : STD_LOGIC;
  SIGNAL mux_929_nl : STD_LOGIC;
  SIGNAL mux_926_nl : STD_LOGIC;
  SIGNAL nor_509_nl : STD_LOGIC;
  SIGNAL mux_925_nl : STD_LOGIC;
  SIGNAL mux_924_nl : STD_LOGIC;
  SIGNAL mux_923_nl : STD_LOGIC;
  SIGNAL nor_510_nl : STD_LOGIC;
  SIGNAL mux_936_nl : STD_LOGIC;
  SIGNAL mux_935_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_k_APPLY_ROTARY_POS_EMB_LOOP_6_k_mux_1_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_k_mux1h_12_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SOFTMAX_LOOP_2_and_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SOFTMAX_LOOP_2_mux1h_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_k_mux1h_15_nl : STD_LOGIC;
  SIGNAL SOFTMAX_LOOP_2_and_1_nl : STD_LOGIC;
  SIGNAL SOFTMAX_LOOP_2_mux1h_1_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_k_mux1h_14_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SOFTMAX_LOOP_2_and_2_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SOFTMAX_LOOP_2_mux1h_2_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_92_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL mux_946_nl : STD_LOGIC;
  SIGNAL mux_945_nl : STD_LOGIC;
  SIGNAL mux_944_nl : STD_LOGIC;
  SIGNAL mux_157_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mux_29_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_or_2_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mux_30_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mux_31_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_8_nl : STD_LOGIC_VECTOR
      (37 DOWNTO 0);
  SIGNAL not_2462_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mux_32_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_102_nl : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_97_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_98_nl : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_27_nl : STD_LOGIC_VECTOR (19 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_21_nl : STD_LOGIC_VECTOR (19 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_99_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_100_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_31_nl : STD_LOGIC_VECTOR (20 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_29_nl : STD_LOGIC_VECTOR (19 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_38_nl : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_44_nl : STD_LOGIC_VECTOR (16 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_95_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL SF_LOOP_3_and_1_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_acc_42_nl : STD_LOGIC_VECTOR (14 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_41_nl : STD_LOGIC_VECTOR (12 DOWNTO 0);
  SIGNAL SF_LOOP_3_SF_LOOP_3_nand_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_acc_49_nl : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_48_nl : STD_LOGIC_VECTOR (21 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_47_nl : STD_LOGIC_VECTOR (20 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_53_nl : STD_LOGIC_VECTOR (28 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_52_nl : STD_LOGIC_VECTOR (27 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_57_nl : STD_LOGIC_VECTOR (35 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_55_nl : STD_LOGIC_VECTOR (33 DOWNTO 0);
  SIGNAL mux_949_nl : STD_LOGIC;
  SIGNAL mux_948_nl : STD_LOGIC;
  SIGNAL mux_947_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_27_nl : STD_LOGIC_VECTOR (5 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_25_nl : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_28_nl : STD_LOGIC_VECTOR (7 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_35_nl : STD_LOGIC_VECTOR (13 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_33_nl : STD_LOGIC_VECTOR (11 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_31_nl : STD_LOGIC_VECTOR (9 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_36_nl : STD_LOGIC_VECTOR (14 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_34_nl : STD_LOGIC_VECTOR (12 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_32_nl : STD_LOGIC_VECTOR (10 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_43_nl : STD_LOGIC_VECTOR (21 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_41_nl : STD_LOGIC_VECTOR (19 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_39_nl : STD_LOGIC_VECTOR (17 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_44_nl : STD_LOGIC_VECTOR (22 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_42_nl : STD_LOGIC_VECTOR (20 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_40_nl : STD_LOGIC_VECTOR (18 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_50_nl : STD_LOGIC_VECTOR (28 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_48_nl : STD_LOGIC_VECTOR (26 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_49_nl : STD_LOGIC_VECTOR (27 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_47_nl : STD_LOGIC_VECTOR (25 DOWNTO
      0);
  SIGNAL and_572_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_2_1_acc_4_nl : STD_LOGIC_VECTOR (40 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_2_1_attention_abs_6_nand_nl : STD_LOGIC;
  SIGNAL attention_abs_6_mux_3_nl : STD_LOGIC_VECTOR (38 DOWNTO 0);
  SIGNAL mux_959_nl : STD_LOGIC;
  SIGNAL mux_958_nl : STD_LOGIC;
  SIGNAL mux_957_nl : STD_LOGIC;
  SIGNAL mux_956_nl : STD_LOGIC;
  SIGNAL mux_953_nl : STD_LOGIC;
  SIGNAL mux_960_nl : STD_LOGIC;
  SIGNAL nor_530_nl : STD_LOGIC;
  SIGNAL nor_531_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_mux1h_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_mux1h_nl : STD_LOGIC;
  SIGNAL compute_sqrt_1_for_acc_1_nl : STD_LOGIC_VECTOR (40 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_nl : STD_LOGIC_VECTOR
      (25 DOWNTO 0);
  SIGNAL attention_round_1_mux_nl : STD_LOGIC_VECTOR (16 DOWNTO 0);
  SIGNAL attention_round_1_qelse_acc_nl : STD_LOGIC_VECTOR (16 DOWNTO 0);
  SIGNAL attention_round_1_qif_acc_nl : STD_LOGIC_VECTOR (16 DOWNTO 0);
  SIGNAL attention_round_1_acc_nl : STD_LOGIC_VECTOR (40 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_acc_nl : STD_LOGIC_VECTOR
      (25 DOWNTO 0);
  SIGNAL attention_round_mux_nl : STD_LOGIC_VECTOR (16 DOWNTO 0);
  SIGNAL attention_round_qelse_acc_nl : STD_LOGIC_VECTOR (16 DOWNTO 0);
  SIGNAL attention_round_qif_acc_nl : STD_LOGIC_VECTOR (16 DOWNTO 0);
  SIGNAL attention_round_acc_nl : STD_LOGIC_VECTOR (40 DOWNTO 0);
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_acc_22_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_acc_15_nl : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL compute_sqrt_for_acc_1_nl : STD_LOGIC_VECTOR (40 DOWNTO 0);
  SIGNAL attention_max_attn_fixed_t_acc_nl : STD_LOGIC_VECTOR (40 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_qif_acc_4_nl : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_1_qif_acc_4_nl : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_acc_19_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_acc_15_nl : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_8_nl : STD_LOGIC_VECTOR (16 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_34_nl : STD_LOGIC_VECTOR (18 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_32_nl : STD_LOGIC_VECTOR (17 DOWNTO 0);
  SIGNAL attention_max_attn_fixed_t_1_acc_nl : STD_LOGIC_VECTOR (40 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_acc_2_nl : STD_LOGIC_VECTOR (6
      DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_1_1_acc_3_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL SOFTMAX_LOOP_3_acc_3_nl : STD_LOGIC_VECTOR (40 DOWNTO 0);
  SIGNAL mux_95_nl : STD_LOGIC;
  SIGNAL mux_279_nl : STD_LOGIC;
  SIGNAL mux_277_nl : STD_LOGIC;
  SIGNAL or_43_nl : STD_LOGIC;
  SIGNAL mux_291_nl : STD_LOGIC;
  SIGNAL nor_290_nl : STD_LOGIC;
  SIGNAL mux_297_nl : STD_LOGIC;
  SIGNAL or_322_nl : STD_LOGIC;
  SIGNAL or_321_nl : STD_LOGIC;
  SIGNAL mux_309_nl : STD_LOGIC;
  SIGNAL mux_304_nl : STD_LOGIC;
  SIGNAL mux_322_nl : STD_LOGIC;
  SIGNAL or_404_nl : STD_LOGIC;
  SIGNAL nand_144_nl : STD_LOGIC;
  SIGNAL or_438_nl : STD_LOGIC;
  SIGNAL or_437_nl : STD_LOGIC;
  SIGNAL or_439_nl : STD_LOGIC;
  SIGNAL or_86_nl : STD_LOGIC;
  SIGNAL mux_407_nl : STD_LOGIC;
  SIGNAL or_477_nl : STD_LOGIC;
  SIGNAL and_682_nl : STD_LOGIC;
  SIGNAL nor_298_nl : STD_LOGIC;
  SIGNAL mux_476_nl : STD_LOGIC;
  SIGNAL or_575_nl : STD_LOGIC;
  SIGNAL mux_511_nl : STD_LOGIC;
  SIGNAL mux_510_nl : STD_LOGIC;
  SIGNAL mux_544_nl : STD_LOGIC;
  SIGNAL mux_551_nl : STD_LOGIC;
  SIGNAL mux_555_nl : STD_LOGIC;
  SIGNAL mux_554_nl : STD_LOGIC;
  SIGNAL mux_553_nl : STD_LOGIC;
  SIGNAL mux_549_nl : STD_LOGIC;
  SIGNAL mux_548_nl : STD_LOGIC;
  SIGNAL mux_397_nl : STD_LOGIC;
  SIGNAL mux_396_nl : STD_LOGIC;
  SIGNAL mux_623_nl : STD_LOGIC;
  SIGNAL mux_769_nl : STD_LOGIC;
  SIGNAL nor_303_nl : STD_LOGIC;
  SIGNAL mux_768_nl : STD_LOGIC;
  SIGNAL nor_304_nl : STD_LOGIC;
  SIGNAL nor_305_nl : STD_LOGIC;
  SIGNAL mux_905_nl : STD_LOGIC;
  SIGNAL or_1040_nl : STD_LOGIC;
  SIGNAL or_1045_nl : STD_LOGIC;
  SIGNAL mux_951_nl : STD_LOGIC;
  SIGNAL mux_545_nl : STD_LOGIC;
  SIGNAL or_1106_nl : STD_LOGIC;
  SIGNAL or_1107_nl : STD_LOGIC;
  SIGNAL mux_546_nl : STD_LOGIC;
  SIGNAL or_1108_nl : STD_LOGIC;
  SIGNAL or_1109_nl : STD_LOGIC;
  SIGNAL mux_566_nl : STD_LOGIC;
  SIGNAL nor_388_nl : STD_LOGIC;
  SIGNAL mux_565_nl : STD_LOGIC;
  SIGNAL nor_389_nl : STD_LOGIC;
  SIGNAL nor_390_nl : STD_LOGIC;
  SIGNAL mux_567_nl : STD_LOGIC;
  SIGNAL mux_568_nl : STD_LOGIC;
  SIGNAL mux_778_nl : STD_LOGIC;
  SIGNAL or_1119_nl : STD_LOGIC;
  SIGNAL mux_777_nl : STD_LOGIC;
  SIGNAL or_898_nl : STD_LOGIC;
  SIGNAL or_896_nl : STD_LOGIC;
  SIGNAL mux_776_nl : STD_LOGIC;
  SIGNAL mux_775_nl : STD_LOGIC;
  SIGNAL nand_214_nl : STD_LOGIC;
  SIGNAL or_1120_nl : STD_LOGIC;
  SIGNAL mux_774_nl : STD_LOGIC;
  SIGNAL or_892_nl : STD_LOGIC;
  SIGNAL mux_773_nl : STD_LOGIC;
  SIGNAL nor_465_nl : STD_LOGIC;
  SIGNAL or_890_nl : STD_LOGIC;
  SIGNAL or_1121_nl : STD_LOGIC;
  SIGNAL mux_779_nl : STD_LOGIC;
  SIGNAL nor_471_nl : STD_LOGIC;
  SIGNAL mux_784_nl : STD_LOGIC;
  SIGNAL nor_473_nl : STD_LOGIC;
  SIGNAL mux_783_nl : STD_LOGIC;
  SIGNAL nand_215_nl : STD_LOGIC;
  SIGNAL mux_782_nl : STD_LOGIC;
  SIGNAL mux_781_nl : STD_LOGIC;
  SIGNAL or_909_nl : STD_LOGIC;
  SIGNAL or_908_nl : STD_LOGIC;
  SIGNAL nor_474_nl : STD_LOGIC;
  SIGNAL mux_780_nl : STD_LOGIC;
  SIGNAL mux_800_nl : STD_LOGIC;
  SIGNAL mux_799_nl : STD_LOGIC;
  SIGNAL mux_798_nl : STD_LOGIC;
  SIGNAL and_798_nl : STD_LOGIC;
  SIGNAL mux_797_nl : STD_LOGIC;
  SIGNAL mux_796_nl : STD_LOGIC;
  SIGNAL nor_475_nl : STD_LOGIC;
  SIGNAL mux_795_nl : STD_LOGIC;
  SIGNAL and_797_nl : STD_LOGIC;
  SIGNAL mux_794_nl : STD_LOGIC;
  SIGNAL mux_793_nl : STD_LOGIC;
  SIGNAL mux_792_nl : STD_LOGIC;
  SIGNAL or_916_nl : STD_LOGIC;
  SIGNAL mux_791_nl : STD_LOGIC;
  SIGNAL mux_790_nl : STD_LOGIC;
  SIGNAL mux_789_nl : STD_LOGIC;
  SIGNAL mux_788_nl : STD_LOGIC;
  SIGNAL mux_787_nl : STD_LOGIC;
  SIGNAL mux_819_nl : STD_LOGIC;
  SIGNAL nand_228_nl : STD_LOGIC;
  SIGNAL mux_818_nl : STD_LOGIC;
  SIGNAL nand_226_nl : STD_LOGIC;
  SIGNAL mux_817_nl : STD_LOGIC;
  SIGNAL mux_816_nl : STD_LOGIC;
  SIGNAL or_935_nl : STD_LOGIC;
  SIGNAL nand_227_nl : STD_LOGIC;
  SIGNAL or_1123_nl : STD_LOGIC;
  SIGNAL mux_815_nl : STD_LOGIC;
  SIGNAL nand_51_nl : STD_LOGIC;
  SIGNAL mux_814_nl : STD_LOGIC;
  SIGNAL nor_478_nl : STD_LOGIC;
  SIGNAL mux_813_nl : STD_LOGIC;
  SIGNAL or_929_nl : STD_LOGIC;
  SIGNAL mux_822_nl : STD_LOGIC;
  SIGNAL or_1124_nl : STD_LOGIC;
  SIGNAL mux_821_nl : STD_LOGIC;
  SIGNAL or_946_nl : STD_LOGIC;
  SIGNAL or_944_nl : STD_LOGIC;
  SIGNAL or_1125_nl : STD_LOGIC;
  SIGNAL mux_820_nl : STD_LOGIC;
  SIGNAL nand_230_nl : STD_LOGIC;
  SIGNAL or_939_nl : STD_LOGIC;
  SIGNAL mux_864_nl : STD_LOGIC;
  SIGNAL mux_893_nl : STD_LOGIC;
  SIGNAL mux_353_nl : STD_LOGIC;
  SIGNAL nor_209_nl : STD_LOGIC;
  SIGNAL and_361_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_2_and_3_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_5_nl : STD_LOGIC_VECTOR (2
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_and_5_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_6_nl : STD_LOGIC_VECTOR (3
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_and_6_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_7_nl : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL mux_389_nl : STD_LOGIC;
  SIGNAL nor_336_nl : STD_LOGIC;
  SIGNAL nor_337_nl : STD_LOGIC;
  SIGNAL mux_390_nl : STD_LOGIC;
  SIGNAL or_1095_nl : STD_LOGIC;
  SIGNAL nand_172_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_1_and_2_nl : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_3_nl : STD_LOGIC_VECTOR (3
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_6_nl : STD_LOGIC_VECTOR (2
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_7_nl : STD_LOGIC_VECTOR (3
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_8_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_9_nl : STD_LOGIC_VECTOR (2
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_10_nl : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_1_and_3_nl : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_4_nl : STD_LOGIC_VECTOR (15
      DOWNTO 0);
  SIGNAL mux_384_nl : STD_LOGIC;
  SIGNAL nor_334_nl : STD_LOGIC;
  SIGNAL nor_335_nl : STD_LOGIC;
  SIGNAL and_345_nl : STD_LOGIC;
  SIGNAL mux_386_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_mux1h_1_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_mux1h_2_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_mux1h_3_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL mux_382_nl : STD_LOGIC;
  SIGNAL mux_381_nl : STD_LOGIC;
  SIGNAL mux_380_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_and_2_nl : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_1_nl : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_5_nl : STD_LOGIC_VECTOR (2 DOWNTO
      0);
  SIGNAL INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_6_nl : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_7_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_8_nl : STD_LOGIC_VECTOR (2 DOWNTO
      0);
  SIGNAL INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_9_nl : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL INIT_2D_MEM_LOOP_2_and_4_nl : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_2_nl : STD_LOGIC_VECTOR (15 DOWNTO
      0);
  SIGNAL INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_nl : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_3_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_4_nl : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL mux_366_nl : STD_LOGIC;
  SIGNAL mux_373_nl : STD_LOGIC;
  SIGNAL nand_167_nl : STD_LOGIC;
  SIGNAL mux_372_nl : STD_LOGIC;
  SIGNAL or_431_nl : STD_LOGIC;
  SIGNAL or_1094_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_1_and_1_nl : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_2_nl : STD_LOGIC_VECTOR (3
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_11_nl : STD_LOGIC_VECTOR (2
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_12_nl : STD_LOGIC_VECTOR (3
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_13_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_14_nl : STD_LOGIC_VECTOR (2
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_15_nl : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_1_and_4_nl : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_5_nl : STD_LOGIC_VECTOR (15
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_3_nl : STD_LOGIC_VECTOR (3
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_8_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_9_nl : STD_LOGIC_VECTOR (3
      DOWNTO 0);
  SIGNAL and_322_nl : STD_LOGIC;
  SIGNAL mux_369_nl : STD_LOGIC;
  SIGNAL or_423_nl : STD_LOGIC;
  SIGNAL mux_368_nl : STD_LOGIC;
  SIGNAL mux_367_nl : STD_LOGIC;
  SIGNAL or_420_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_2_and_2_nl : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_2_nl : STD_LOGIC_VECTOR (3
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_11_nl : STD_LOGIC_VECTOR (2
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_12_nl : STD_LOGIC_VECTOR (3
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_13_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_14_nl : STD_LOGIC_VECTOR (2
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_15_nl : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_and_7_nl : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_10_nl : STD_LOGIC_VECTOR (15
      DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_mux_nl : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_mux_3_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_mux_4_nl : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL mux_360_nl : STD_LOGIC;
  SIGNAL nor_327_nl : STD_LOGIC;
  SIGNAL nor_328_nl : STD_LOGIC;
  SIGNAL and_309_nl : STD_LOGIC;
  SIGNAL mux_363_nl : STD_LOGIC;
  SIGNAL mux_362_nl : STD_LOGIC;
  SIGNAL or_412_nl : STD_LOGIC;
  SIGNAL mux_361_nl : STD_LOGIC;
  SIGNAL or_411_nl : STD_LOGIC;
  SIGNAL mux_358_nl : STD_LOGIC;
  SIGNAL mux_357_nl : STD_LOGIC;
  SIGNAL or_401_nl : STD_LOGIC;
  SIGNAL or_400_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_acc_7_nl : STD_LOGIC_VECTOR (55 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_acc_14_nl : STD_LOGIC_VECTOR (55 DOWNTO 0);
  SIGNAL and_290_nl : STD_LOGIC;
  SIGNAL and_283_nl : STD_LOGIC;
  SIGNAL FIXED32_MIN_mux1h_1_nl : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL SF_LOOP_3_SF_LOOP_3_SF_LOOP_3_acc_nl : STD_LOGIC_VECTOR (37 DOWNTO 0);
  SIGNAL FIXED32_MIN_or_nl : STD_LOGIC;
  SIGNAL and_270_nl : STD_LOGIC;
  SIGNAL and_824_nl : STD_LOGIC;
  SIGNAL mux_356_nl : STD_LOGIC;
  SIGNAL and_714_nl : STD_LOGIC;
  SIGNAL mux_355_nl : STD_LOGIC;
  SIGNAL nor_324_nl : STD_LOGIC;
  SIGNAL nor_325_nl : STD_LOGIC;
  SIGNAL nor_326_nl : STD_LOGIC;
  SIGNAL mux_354_nl : STD_LOGIC;
  SIGNAL or_390_nl : STD_LOGIC;
  SIGNAL or_389_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_3_mux1h_4_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_3_or_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_3_mux1h_12_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_3_or_5_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_3_and_1_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_3_mux1h_13_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_3_or_1_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_3_or_2_nl : STD_LOGIC;
  SIGNAL mux_349_nl : STD_LOGIC;
  SIGNAL mux_348_nl : STD_LOGIC;
  SIGNAL nor_321_nl : STD_LOGIC;
  SIGNAL and_712_nl : STD_LOGIC;
  SIGNAL mux_347_nl : STD_LOGIC;
  SIGNAL mux_346_nl : STD_LOGIC;
  SIGNAL and_713_nl : STD_LOGIC;
  SIGNAL nor_322_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_3_mux1h_2_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_3_mux1h_10_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_3_GEMM_3D_FLOAT_LOOP_3_mux_nl : STD_LOGIC;
  SIGNAL mux_352_nl : STD_LOGIC;
  SIGNAL mux_351_nl : STD_LOGIC;
  SIGNAL mux_350_nl : STD_LOGIC;
  SIGNAL nand_165_nl : STD_LOGIC;
  SIGNAL or_384_nl : STD_LOGIC;
  SIGNAL or_382_nl : STD_LOGIC;
  SIGNAL and_nl : STD_LOGIC;
  SIGNAL mux_345_nl : STD_LOGIC;
  SIGNAL nor_319_nl : STD_LOGIC;
  SIGNAL nor_320_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_3_1_GEMM_3D_FLOAT_LOOP_3_1_mux_nl : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_3_1_GEMM_3D_FLOAT_LOOP_3_1_mux_1_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_nl : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_1_nl : STD_LOGIC;
  SIGNAL mux_344_nl : STD_LOGIC;
  SIGNAL or_368_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_and_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_mux1h_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_and_5_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_mux1h_6_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_and_6_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_mux1h_7_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL mux_339_nl : STD_LOGIC;
  SIGNAL nor_314_nl : STD_LOGIC;
  SIGNAL mux_338_nl : STD_LOGIC;
  SIGNAL or_357_nl : STD_LOGIC;
  SIGNAL mux_337_nl : STD_LOGIC;
  SIGNAL or_1093_nl : STD_LOGIC;
  SIGNAL nand_158_nl : STD_LOGIC;
  SIGNAL or_355_nl : STD_LOGIC;
  SIGNAL nor_315_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_3_1_GEMM_3D_FLOAT_LOOP_3_1_mux_2_nl : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_3_1_GEMM_3D_FLOAT_LOOP_3_1_mux_4_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_3_1_GEMM_3D_FLOAT_LOOP_3_1_mux_5_nl : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL mux_340_nl : STD_LOGIC;
  SIGNAL nor_316_nl : STD_LOGIC;
  SIGNAL and_710_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_acc_6_nl : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_acc_12_nl : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL mux_1011_nl : STD_LOGIC;
  SIGNAL nor_550_nl : STD_LOGIC;
  SIGNAL and_1460_nl : STD_LOGIC;
  SIGNAL and_1477_nl : STD_LOGIC;
  SIGNAL mux_997_nl : STD_LOGIC;
  SIGNAL nor_618_nl : STD_LOGIC;
  SIGNAL and_1476_nl : STD_LOGIC;
  SIGNAL mux_996_nl : STD_LOGIC;
  SIGNAL nor_616_nl : STD_LOGIC;
  SIGNAL nor_617_nl : STD_LOGIC;
  SIGNAL nor_619_nl : STD_LOGIC;
  SIGNAL nor_570_nl : STD_LOGIC;
  SIGNAL mux_1009_nl : STD_LOGIC;
  SIGNAL mux_1007_nl : STD_LOGIC;
  SIGNAL nor_628_nl : STD_LOGIC;
  SIGNAL mux_963_nl : STD_LOGIC;
  SIGNAL and_1472_nl : STD_LOGIC;
  SIGNAL nor_569_nl : STD_LOGIC;
  SIGNAL nand_265_nl : STD_LOGIC;
  SIGNAL mux_972_nl : STD_LOGIC;
  SIGNAL nor_641_nl : STD_LOGIC;
  SIGNAL mux_971_nl : STD_LOGIC;
  SIGNAL or_1229_nl : STD_LOGIC;
  SIGNAL mux_970_nl : STD_LOGIC;
  SIGNAL nor_606_nl : STD_LOGIC;
  SIGNAL or_1225_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_mux1h_10_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_mux1h_11_nl : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL SF_LOOP_3_mux1h_12_nl : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL compute_sqrt_for_guess_inv_compute_sqrt_for_guess_inv_and_2_nl : STD_LOGIC;
  SIGNAL compute_sqrt_for_guess_inv_mux_2_nl : STD_LOGIC;
  SIGNAL compute_sqrt_for_guess_inv_compute_sqrt_for_guess_inv_and_3_nl : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL compute_sqrt_for_guess_inv_mux_3_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL compute_sqrt_for_guess_inv_and_6_nl : STD_LOGIC_VECTOR (28 DOWNTO 0);
  SIGNAL compute_sqrt_for_guess_inv_mux1h_7_nl : STD_LOGIC_VECTOR (28 DOWNTO 0);
  SIGNAL not_2446_nl : STD_LOGIC;
  SIGNAL compute_sqrt_for_guess_inv_mux1h_8_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL compute_sqrt_for_guess_inv_and_7_nl : STD_LOGIC;
  SIGNAL compute_sqrt_for_guess_inv_mux1h_9_nl : STD_LOGIC;
  SIGNAL compute_sqrt_for_guess_inv_and_8_nl : STD_LOGIC_VECTOR (21 DOWNTO 0);
  SIGNAL compute_sqrt_for_guess_inv_mux1h_10_nl : STD_LOGIC_VECTOR (21 DOWNTO 0);
  SIGNAL compute_sqrt_for_guess_inv_and_9_nl : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL compute_sqrt_for_guess_inv_mux1h_11_nl : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL compute_sqrt_for_guess_inv_mux1h_12_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL compute_sqrt_for_guess_inv_mux1h_13_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_or_11_nl :
      STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_mux1h_5_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_and_1_nl :
      STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_mux1h_6_nl : STD_LOGIC_VECTOR (38 DOWNTO
      0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_mux_3_nl : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_mux_4_nl : STD_LOGIC_VECTOR (38 DOWNTO 0);
  SIGNAL acc_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_or_5_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_mux_3_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_mux_4_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_mux_5_nl
      : STD_LOGIC;
  SIGNAL acc_1_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux_16_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux_17_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux_18_nl : STD_LOGIC;
  SIGNAL acc_2_nl : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL compute_sqrt_for_mux1h_4_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL compute_sqrt_for_or_7_nl : STD_LOGIC;
  SIGNAL compute_sqrt_for_mux1h_5_nl : STD_LOGIC;
  SIGNAL compute_sqrt_for_and_3_nl : STD_LOGIC;
  SIGNAL compute_sqrt_for_mux1h_6_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL compute_sqrt_for_or_8_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_mux1h_13_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL SF_LOOP_3_mux1h_14_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_mux_2_nl : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL and_1493_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_mux_3_nl : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_or_7_nl : STD_LOGIC;
  SIGNAL mux_1014_nl : STD_LOGIC;
  SIGNAL mux_1016_nl : STD_LOGIC;
  SIGNAL nor_653_nl : STD_LOGIC;
  SIGNAL acc_5_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL acc_6_nl : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL and_1525_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_mux1h_2_nl : STD_LOGIC_VECTOR
      (23 DOWNTO 0);
  SIGNAL and_1497_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL mux1h_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_or_1_nl
      : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_mux_1_nl : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_3_else_if_acc_3_nl : STD_LOGIC_VECTOR (7 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_and_2_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_or_1_nl : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_2_else_if_acc_3_nl : STD_LOGIC_VECTOR (7 DOWNTO
      0);
  SIGNAL and_1526_nl : STD_LOGIC;
  SIGNAL and_1527_nl : STD_LOGIC;
  SIGNAL nor_654_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_2_or_5_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_mux_1_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_or_3_nl : STD_LOGIC;
  SIGNAL mux_1018_nl : STD_LOGIC;
  SIGNAL or_1242_nl : STD_LOGIC;
  SIGNAL mux_1019_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_mux_6_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_mux_7_nl : STD_LOGIC_VECTOR (38 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_and_2_nl : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL RMS_NORM_LOOP_2_2_mux_8_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_mux_9_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_2_mux_10_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL mul_5_nl : STD_LOGIC_VECTOR (67 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_1_1_mux_36_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_1_1_mux_37_nl : STD_LOGIC_VECTOR (38 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_1_1_mux_38_nl : STD_LOGIC_VECTOR (51 DOWNTO 0);
  SIGNAL acc_13_nl : STD_LOGIC_VECTOR (40 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_1_1_mux1h_5_nl : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_1_nl : STD_LOGIC_VECTOR (23 DOWNTO
      0);
  SIGNAL RMS_NORM_LOOP_1_1_mux1h_6_nl : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_1_1_or_3_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_1_1_mux1h_7_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_1_1_mux1h_8_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_1_1_mux1h_9_nl : STD_LOGIC_VECTOR (35 DOWNTO 0);
  SIGNAL SF_LOOP_3_mux_22_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_mux_23_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL SF_LOOP_3_mux_24_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_mux_25_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL SF_LOOP_3_mux_26_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_9_nl : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL not_2463_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_10_nl : STD_LOGIC_VECTOR
      (6 DOWNTO 0);
  SIGNAL not_2464_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mux_33_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mux_34_nl : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_11_nl : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mux_35_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL not_2465_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_12_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_13_nl : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mux_36_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL not_2466_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_14_nl : STD_LOGIC_VECTOR
      (6 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mux_37_nl : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL not_2467_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_or_3_nl : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mux_38_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_15_nl : STD_LOGIC_VECTOR
      (36 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mux_39_nl : STD_LOGIC_VECTOR (36 DOWNTO 0);
  SIGNAL not_2468_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mux1h_20_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL SF_LOOP_3_SF_LOOP_3_and_4_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL SF_LOOP_3_mux_27_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL not_2469_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_SF_LOOP_3_and_5_nl : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL SF_LOOP_3_mux_28_nl : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL not_2470_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_mux1h_15_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_SF_LOOP_3_and_6_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_SF_LOOP_3_and_7_nl : STD_LOGIC_VECTOR (34 DOWNTO 0);
  SIGNAL SF_LOOP_3_mux_29_nl : STD_LOGIC_VECTOR (34 DOWNTO 0);
  SIGNAL not_2471_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_mux1h_16_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL for_for_acc_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL for_for_mux1h_7_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL nor_656_nl : STD_LOGIC;
  SIGNAL and_1507_nl : STD_LOGIC;
  SIGNAL mux_1020_nl : STD_LOGIC;
  SIGNAL nor_657_nl : STD_LOGIC;
  SIGNAL and_1508_nl : STD_LOGIC;
  SIGNAL mux_1021_nl : STD_LOGIC;
  SIGNAL mux_1022_nl : STD_LOGIC;
  SIGNAL and_1509_nl : STD_LOGIC;
  SIGNAL mux_1023_nl : STD_LOGIC;
  SIGNAL mux_1024_nl : STD_LOGIC;
  SIGNAL nor_658_nl : STD_LOGIC;
  SIGNAL nor_659_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_3_acc_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_3_mux_3_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_3_2_acc_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_3_2_mux1h_3_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL nor_660_nl : STD_LOGIC;
  SIGNAL mux_1025_nl : STD_LOGIC;
  SIGNAL or_1243_nl : STD_LOGIC;
  SIGNAL mux_1026_nl : STD_LOGIC;
  SIGNAL nand_268_nl : STD_LOGIC;
  SIGNAL mux_1027_nl : STD_LOGIC;
  SIGNAL or_1244_nl : STD_LOGIC;
  SIGNAL or_1245_nl : STD_LOGIC;
  SIGNAL mux_1028_nl : STD_LOGIC;
  SIGNAL mux_1029_nl : STD_LOGIC;
  SIGNAL or_1246_nl : STD_LOGIC;
  SIGNAL or_1247_nl : STD_LOGIC;
  SIGNAL and_1510_nl : STD_LOGIC;
  SIGNAL mux_1030_nl : STD_LOGIC;
  SIGNAL nor_661_nl : STD_LOGIC;
  SIGNAL mux_1031_nl : STD_LOGIC;
  SIGNAL and_1511_nl : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux_1_nl :
      STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_4_nl : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_7_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL and_1512_nl : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_5_nl : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_6_nl : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_7_nl : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_1_mux1h_9_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL and_1516_nl : STD_LOGIC;
  SIGNAL and_1517_nl : STD_LOGIC;
  SIGNAL and_1518_nl : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_qif_mux_1_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL and_1519_nl : STD_LOGIC;
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_mux1h_6_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL and_1520_nl : STD_LOGIC;
  SIGNAL and_1521_nl : STD_LOGIC;
  SIGNAL and_1522_nl : STD_LOGIC;
  SIGNAL and_1523_nl : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_1_qif_mux_1_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL and_1524_nl : STD_LOGIC;
  SIGNAL SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a : STD_LOGIC_VECTOR (55 DOWNTO
      0);
  SIGNAL SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_z_1 : STD_LOGIC_VECTOR (55 DOWNTO
      0);

  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_a
      : STD_LOGIC_VECTOR (71 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b
      : STD_LOGIC_VECTOR (59 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z_1
      : STD_LOGIC_VECTOR (71 DOWNTO 0);

  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_a : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_1 : STD_LOGIC_VECTOR (39
      DOWNTO 0);

  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_cosval_read_rom_cos_tab_rom_map_1_rg_addr :
      STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_cosval_read_rom_cos_tab_rom_map_1_rg_data_out
      : STD_LOGIC_VECTOR (16 DOWNTO 0);

  SIGNAL RMS_NORM_LOOP_2_read_rom_ln_weight_in_rom_map_1_rg_addr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_read_rom_ln_weight_in_rom_map_1_rg_data_out : STD_LOGIC_VECTOR
      (11 DOWNTO 0);

  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_rg_addr :
      STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_rg_data_out
      : STD_LOGIC_VECTOR (16 DOWNTO 0);

  SIGNAL RMS_NORM_LOOP_2_2_read_rom_ln_weight_rom_map_1_rg_addr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_2_read_rom_ln_weight_rom_map_1_rg_data_out : STD_LOGIC_VECTOR
      (12 DOWNTO 0);

  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_read_rom_v_weights_rom_map_1_rg_addr
      : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_read_rom_v_weights_rom_map_1_rg_data_out
      : STD_LOGIC_VECTOR (7 DOWNTO 0);

  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_read_rom_k_weights_rom_map_1_rg_addr
      : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_read_rom_k_weights_rom_map_1_rg_data_out
      : STD_LOGIC_VECTOR (7 DOWNTO 0);

  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_read_rom_q_weights_rom_map_1_rg_addr
      : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_read_rom_q_weights_rom_map_1_rg_data_out
      : STD_LOGIC_VECTOR (7 DOWNTO 0);

  SIGNAL CACHE_UPDATE_LOOP_3_qif_read_rom_k_cache_rom_map_1_rg_addr : STD_LOGIC_VECTOR
      (10 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_qif_read_rom_k_cache_rom_map_1_rg_data_out : STD_LOGIC_VECTOR
      (39 DOWNTO 0);

  SIGNAL CACHE_UPDATE_LOOP_3_1_qif_read_rom_v_cache_rom_map_1_rg_addr : STD_LOGIC_VECTOR
      (10 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_1_qif_read_rom_v_cache_rom_map_1_rg_data_out : STD_LOGIC_VECTOR
      (39 DOWNTO 0);

  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_read_rom_o_weights_rom_map_1_rg_addr
      : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_read_rom_o_weights_rom_map_1_rg_data_out
      : STD_LOGIC_VECTOR (7 DOWNTO 0);

  COMPONENT dut_core_strm_in_rsci
    PORT(
      strm_in_rsc_dat : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
      strm_in_rsc_vld : IN STD_LOGIC;
      strm_in_rsc_rdy : OUT STD_LOGIC;
      strm_in_rsci_oswt : IN STD_LOGIC;
      strm_in_rsci_wen_comp : OUT STD_LOGIC;
      strm_in_rsci_idat_mxwt : OUT STD_LOGIC_VECTOR (29 DOWNTO 0)
    );
  END COMPONENT;
  SIGNAL dut_core_strm_in_rsci_inst_strm_in_rsc_dat : STD_LOGIC_VECTOR (31 DOWNTO
      0);
  SIGNAL dut_core_strm_in_rsci_inst_strm_in_rsci_idat_mxwt : STD_LOGIC_VECTOR (29
      DOWNTO 0);

  COMPONENT dut_core_strm_out_rsci
    PORT(
      strm_out_rsc_dat : OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
      strm_out_rsc_vld : OUT STD_LOGIC;
      strm_out_rsc_rdy : IN STD_LOGIC;
      strm_out_rsci_oswt : IN STD_LOGIC;
      strm_out_rsci_wen_comp : OUT STD_LOGIC;
      strm_out_rsci_idat : IN STD_LOGIC_VECTOR (31 DOWNTO 0)
    );
  END COMPONENT;
  SIGNAL dut_core_strm_out_rsci_inst_strm_out_rsc_dat : STD_LOGIC_VECTOR (31 DOWNTO
      0);
  SIGNAL dut_core_strm_out_rsci_inst_strm_out_rsci_idat : STD_LOGIC_VECTOR (31 DOWNTO
      0);

  COMPONENT dut_core_staller
    PORT(
      en : IN STD_LOGIC;
      core_wen1 : OUT STD_LOGIC;
      strm_in_rsci_wen_comp : IN STD_LOGIC;
      strm_out_rsci_wen_comp : IN STD_LOGIC;
      input_rsc_clken_d_1 : OUT STD_LOGIC
    );
  END COMPONENT;
  COMPONENT dut_core_wait_dp
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      rms_norm_384_div_cmp_z : IN STD_LOGIC_VECTOR (71 DOWNTO 0);
      core_wen1 : IN STD_LOGIC;
      rms_norm_384_div_cmp_z_oreg : OUT STD_LOGIC_VECTOR (39 DOWNTO 0)
    );
  END COMPONENT;
  SIGNAL dut_core_wait_dp_inst_rms_norm_384_div_cmp_z : STD_LOGIC_VECTOR (71 DOWNTO
      0);
  SIGNAL dut_core_wait_dp_inst_rms_norm_384_div_cmp_z_oreg : STD_LOGIC_VECTOR (39
      DOWNTO 0);

  COMPONENT dut_core_core_fsm
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      input_rsc_clken_d_1 : IN STD_LOGIC;
      fsm_output : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      for_for_C_2_tr0 : IN STD_LOGIC;
      compute_sqrt_for_C_15_tr0 : IN STD_LOGIC;
      RMS_NORM_LOOP_2_C_5_tr0 : IN STD_LOGIC;
      QUANTIZE_ACTIVATION_LOOP_5_C_4_tr0 : IN STD_LOGIC;
      QUANTIZE_ACTIVATION_LOOP_4_C_0_tr0 : IN STD_LOGIC;
      QUANTIZE_ACTIVATION_LOOP_3_C_0_tr0 : IN STD_LOGIC;
      attention_5_1_384_384_8_48_q_proj_re_vinit_C_1_tr0 : IN STD_LOGIC;
      LINEAR_FORWARD_NO_MUL_LOOP_5_C_5_tr0 : IN STD_LOGIC;
      LINEAR_FORWARD_NO_MUL_LOOP_4_C_1_tr0 : IN STD_LOGIC;
      LINEAR_FORWARD_NO_MUL_LOOP_3_C_0_tr0 : IN STD_LOGIC;
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_65_tr0 : IN STD_LOGIC;
      RESHAPE_2D_TO_3D_LOOP_3_C_2_tr0 : IN STD_LOGIC;
      RESHAPE_2D_TO_3D_LOOP_2_C_0_tr0 : IN STD_LOGIC;
      RESHAPE_2D_TO_3D_LOOP_3_2_C_3_tr0 : IN STD_LOGIC;
      RESHAPE_2D_TO_3D_LOOP_2_2_C_0_tr0 : IN STD_LOGIC;
      APPLY_ROTARY_POS_EMB_LOOP_6_C_4_tr0 : IN STD_LOGIC;
      APPLY_ROTARY_POS_EMB_LOOP_4_C_0_tr0 : IN STD_LOGIC;
      CACHE_UPDATE_LOOP_3_C_2_tr0 : IN STD_LOGIC;
      CACHE_UPDATE_LOOP_2_C_0_tr0 : IN STD_LOGIC;
      CACHE_UPDATE_LOOP_1_C_0_tr0 : IN STD_LOGIC;
      TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_2_tr0 : IN STD_LOGIC;
      TRANSPOSE_LAST_TWO_DIMS_LOOP_2_C_0_tr0 : IN STD_LOGIC;
      TRANSPOSE_LAST_TWO_DIMS_LOOP_1_C_0_tr0 : IN STD_LOGIC;
      GEMM_3D_FLOAT_LOOP_4_C_4_tr0 : IN STD_LOGIC;
      GEMM_3D_FLOAT_LOOP_3_C_2_tr0 : IN STD_LOGIC;
      GEMM_3D_FLOAT_LOOP_1_C_0_tr0 : IN STD_LOGIC;
      SF_LOOP_3_C_12_tr0 : IN STD_LOGIC;
      SF_LOOP_1_C_0_tr0 : IN STD_LOGIC;
      SOFTMAX_LOOP_3_C_1_tr0 : IN STD_LOGIC;
      SOFTMAX_LOOP_4_C_4_tr0 : IN STD_LOGIC;
      SOFTMAX_LOOP_5_C_21_tr0 : IN STD_LOGIC;
      SOFTMAX_LOOP_1_C_2_tr0 : IN STD_LOGIC;
      GEMM_3D_FLOAT_LOOP_4_1_C_4_tr0 : IN STD_LOGIC;
      GEMM_3D_FLOAT_LOOP_3_1_C_2_tr0 : IN STD_LOGIC;
      GEMM_3D_FLOAT_LOOP_1_1_C_0_tr0 : IN STD_LOGIC;
      ATTN_2D_LOOP_3_C_2_tr0 : IN STD_LOGIC;
      ATTN_2D_LOOP_2_C_0_tr0 : IN STD_LOGIC;
      RMS_NORM_LOOP_1_2_C_3_tr0 : IN STD_LOGIC;
      compute_sqrt_1_for_C_15_tr0 : IN STD_LOGIC;
      RMS_NORM_LOOP_2_2_C_5_tr0 : IN STD_LOGIC;
      QUANTIZE_ACTIVATION_LOOP_5_1_C_4_tr0 : IN STD_LOGIC;
      QUANTIZE_ACTIVATION_LOOP_4_1_C_0_tr0 : IN STD_LOGIC;
      QUANTIZE_ACTIVATION_LOOP_3_1_C_0_tr0 : IN STD_LOGIC;
      output_vinit_C_1_tr0 : IN STD_LOGIC;
      LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_3_tr0 : IN STD_LOGIC;
      LINEAR_FORWARD_NO_MUL_LOOP_4_3_C_1_tr0 : IN STD_LOGIC;
      LINEAR_FORWARD_NO_MUL_LOOP_3_3_C_0_tr0 : IN STD_LOGIC;
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_33_tr0 : IN STD_LOGIC;
      for_1_for_C_2_tr0 : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL dut_core_core_fsm_inst_fsm_output : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL dut_core_core_fsm_inst_compute_sqrt_for_C_15_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_RMS_NORM_LOOP_2_C_5_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_5_C_4_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_4_C_0_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_3_C_0_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_LINEAR_FORWARD_NO_MUL_LOOP_4_C_1_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_LINEAR_FORWARD_NO_MUL_LOOP_3_C_0_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_RESHAPE_2D_TO_3D_LOOP_3_2_C_3_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_APPLY_ROTARY_POS_EMB_LOOP_6_C_4_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_APPLY_ROTARY_POS_EMB_LOOP_4_C_0_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_CACHE_UPDATE_LOOP_2_C_0_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_2_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_TRANSPOSE_LAST_TWO_DIMS_LOOP_2_C_0_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_TRANSPOSE_LAST_TWO_DIMS_LOOP_1_C_0_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_4_C_4_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_3_C_2_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_1_C_0_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_SF_LOOP_3_C_12_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_SF_LOOP_1_C_0_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_SOFTMAX_LOOP_3_C_1_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_SOFTMAX_LOOP_4_C_4_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_SOFTMAX_LOOP_5_C_21_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_SOFTMAX_LOOP_1_C_2_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_4_1_C_4_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_3_1_C_2_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_1_1_C_0_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_ATTN_2D_LOOP_3_C_2_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_ATTN_2D_LOOP_2_C_0_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_RMS_NORM_LOOP_1_2_C_3_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_compute_sqrt_1_for_C_15_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_RMS_NORM_LOOP_2_2_C_5_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_5_1_C_4_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_4_1_C_0_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_3_1_C_0_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_3_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_LINEAR_FORWARD_NO_MUL_LOOP_4_3_C_1_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_LINEAR_FORWARD_NO_MUL_LOOP_3_3_C_0_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_33_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_for_1_for_C_2_tr0 : STD_LOGIC;

  FUNCTION CONV_SL_1_1(input_val:BOOLEAN)
  RETURN STD_LOGIC IS
  BEGIN
    IF input_val THEN RETURN '1';ELSE RETURN '0';END IF;
  END;

  FUNCTION MUX1HOT_s_1_11_2(input_10 : STD_LOGIC;
  input_9 : STD_LOGIC;
  input_8 : STD_LOGIC;
  input_7 : STD_LOGIC;
  input_6 : STD_LOGIC;
  input_5 : STD_LOGIC;
  input_4 : STD_LOGIC;
  input_3 : STD_LOGIC;
  input_2 : STD_LOGIC;
  input_1 : STD_LOGIC;
  input_0 : STD_LOGIC;
  sel : STD_LOGIC_VECTOR(10 DOWNTO 0))
  RETURN STD_LOGIC IS
    VARIABLE result : STD_LOGIC;
    VARIABLE tmp : STD_LOGIC;

    BEGIN
      tmp := sel(0);
      result := input_0 and tmp;
      tmp := sel(1);
      result := result or ( input_1 and tmp);
      tmp := sel(2);
      result := result or ( input_2 and tmp);
      tmp := sel(3);
      result := result or ( input_3 and tmp);
      tmp := sel(4);
      result := result or ( input_4 and tmp);
      tmp := sel(5);
      result := result or ( input_5 and tmp);
      tmp := sel(6);
      result := result or ( input_6 and tmp);
      tmp := sel(7);
      result := result or ( input_7 and tmp);
      tmp := sel(8);
      result := result or ( input_8 and tmp);
      tmp := sel(9);
      result := result or ( input_9 and tmp);
      tmp := sel(10);
      result := result or ( input_10 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_s_1_3_2(input_2 : STD_LOGIC;
  input_1 : STD_LOGIC;
  input_0 : STD_LOGIC;
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC IS
    VARIABLE result : STD_LOGIC;
    VARIABLE tmp : STD_LOGIC;

    BEGIN
      tmp := sel(0);
      result := input_0 and tmp;
      tmp := sel(1);
      result := result or ( input_1 and tmp);
      tmp := sel(2);
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_s_1_4_2(input_3 : STD_LOGIC;
  input_2 : STD_LOGIC;
  input_1 : STD_LOGIC;
  input_0 : STD_LOGIC;
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC IS
    VARIABLE result : STD_LOGIC;
    VARIABLE tmp : STD_LOGIC;

    BEGIN
      tmp := sel(0);
      result := input_0 and tmp;
      tmp := sel(1);
      result := result or ( input_1 and tmp);
      tmp := sel(2);
      result := result or ( input_2 and tmp);
      tmp := sel(3);
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_s_1_5_2(input_4 : STD_LOGIC;
  input_3 : STD_LOGIC;
  input_2 : STD_LOGIC;
  input_1 : STD_LOGIC;
  input_0 : STD_LOGIC;
  sel : STD_LOGIC_VECTOR(4 DOWNTO 0))
  RETURN STD_LOGIC IS
    VARIABLE result : STD_LOGIC;
    VARIABLE tmp : STD_LOGIC;

    BEGIN
      tmp := sel(0);
      result := input_0 and tmp;
      tmp := sel(1);
      result := result or ( input_1 and tmp);
      tmp := sel(2);
      result := result or ( input_2 and tmp);
      tmp := sel(3);
      result := result or ( input_3 and tmp);
      tmp := sel(4);
      result := result or ( input_4 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_s_1_9_2(input_8 : STD_LOGIC;
  input_7 : STD_LOGIC;
  input_6 : STD_LOGIC;
  input_5 : STD_LOGIC;
  input_4 : STD_LOGIC;
  input_3 : STD_LOGIC;
  input_2 : STD_LOGIC;
  input_1 : STD_LOGIC;
  input_0 : STD_LOGIC;
  sel : STD_LOGIC_VECTOR(8 DOWNTO 0))
  RETURN STD_LOGIC IS
    VARIABLE result : STD_LOGIC;
    VARIABLE tmp : STD_LOGIC;

    BEGIN
      tmp := sel(0);
      result := input_0 and tmp;
      tmp := sel(1);
      result := result or ( input_1 and tmp);
      tmp := sel(2);
      result := result or ( input_2 and tmp);
      tmp := sel(3);
      result := result or ( input_3 and tmp);
      tmp := sel(4);
      result := result or ( input_4 and tmp);
      tmp := sel(5);
      result := result or ( input_5 and tmp);
      tmp := sel(6);
      result := result or ( input_6 and tmp);
      tmp := sel(7);
      result := result or ( input_7 and tmp);
      tmp := sel(8);
      result := result or ( input_8 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_16_3_2(input_2 : STD_LOGIC_VECTOR(15 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(15 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(15 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(15 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(15 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_21_4_2(input_3 : STD_LOGIC_VECTOR(20 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(20 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(20 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(20 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(20 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(20 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_22_4_2(input_3 : STD_LOGIC_VECTOR(21 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(21 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(21 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(21 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(21 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(21 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_22_5_2(input_4 : STD_LOGIC_VECTOR(21 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(21 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(21 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(21 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(21 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(4 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(21 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(21 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_24_3_2(input_2 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(23 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(23 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_24_4_2(input_3 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(23 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(23 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_29_4_2(input_3 : STD_LOGIC_VECTOR(28 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(28 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(28 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(28 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(28 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(28 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_2_3_2(input_2 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(1 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(1 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_2_4_2(input_3 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(1 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(1 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_2_5_2(input_4 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(4 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(1 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(1 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_2_8_2(input_7 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_6 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_5 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(7 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(1 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(1 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
      tmp := (OTHERS=>sel( 6));
      result := result or ( input_6 and tmp);
      tmp := (OTHERS=>sel( 7));
      result := result or ( input_7 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_30_8_2(input_7 : STD_LOGIC_VECTOR(29 DOWNTO 0);
  input_6 : STD_LOGIC_VECTOR(29 DOWNTO 0);
  input_5 : STD_LOGIC_VECTOR(29 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(29 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(29 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(29 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(29 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(29 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(7 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(29 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(29 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
      tmp := (OTHERS=>sel( 6));
      result := result or ( input_6 and tmp);
      tmp := (OTHERS=>sel( 7));
      result := result or ( input_7 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_36_4_2(input_3 : STD_LOGIC_VECTOR(35 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(35 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(35 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(35 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(35 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(35 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_38_4_2(input_3 : STD_LOGIC_VECTOR(37 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(37 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(37 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(37 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(37 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(37 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_39_11_2(input_10 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_9 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_8 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_7 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_6 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_5 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(10 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(38 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(38 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
      tmp := (OTHERS=>sel( 6));
      result := result or ( input_6 and tmp);
      tmp := (OTHERS=>sel( 7));
      result := result or ( input_7 and tmp);
      tmp := (OTHERS=>sel( 8));
      result := result or ( input_8 and tmp);
      tmp := (OTHERS=>sel( 9));
      result := result or ( input_9 and tmp);
      tmp := (OTHERS=>sel( 10));
      result := result or ( input_10 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_39_3_2(input_2 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(38 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(38 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_39_4_2(input_3 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(38 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(38 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_39_5_2(input_4 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(4 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(38 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(38 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_3_3_2(input_2 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(2 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(2 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_3_4_2(input_3 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(2 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(2 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_3_5_2(input_4 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(4 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(2 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(2 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_3_6_2(input_5 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(5 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(2 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(2 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_3_7_2(input_6 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_5 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(6 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(2 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(2 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
      tmp := (OTHERS=>sel( 6));
      result := result or ( input_6 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_40_3_2(input_2 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(39 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(39 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_40_4_2(input_3 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(39 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(39 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_40_5_2(input_4 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(4 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(39 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(39 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_40_6_2(input_5 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(5 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(39 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(39 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_40_9_2(input_8 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_7 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_6 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_5 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(8 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(39 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(39 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
      tmp := (OTHERS=>sel( 6));
      result := result or ( input_6 and tmp);
      tmp := (OTHERS=>sel( 7));
      result := result or ( input_7 and tmp);
      tmp := (OTHERS=>sel( 8));
      result := result or ( input_8 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_4_3_2(input_2 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(3 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(3 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_5_3_2(input_2 : STD_LOGIC_VECTOR(4 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(4 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(4 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(4 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(4 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_5_5_2(input_4 : STD_LOGIC_VECTOR(4 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(4 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(4 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(4 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(4 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(4 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(4 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(4 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_7_3_2(input_2 : STD_LOGIC_VECTOR(6 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(6 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(6 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(6 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(6 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_8_3_2(input_2 : STD_LOGIC_VECTOR(7 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(7 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(7 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(7 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(7 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_9_3_2(input_2 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(8 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(8 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_9_4_2(input_3 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(8 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(8 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_9_5_2(input_4 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(4 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(8 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(8 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_9_6_2(input_5 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(5 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(8 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(8 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_9_7_2(input_6 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_5 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(6 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(8 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(8 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
      tmp := (OTHERS=>sel( 6));
      result := result or ( input_6 and tmp);
    RETURN result;
  END;

  FUNCTION MUX_s_1_2_2(input_0 : STD_LOGIC;
  input_1 : STD_LOGIC;
  sel : STD_LOGIC)
  RETURN STD_LOGIC IS
    VARIABLE result : STD_LOGIC;

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_10_2_2(input_0 : STD_LOGIC_VECTOR(9 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(9 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(9 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_16_2_2(input_0 : STD_LOGIC_VECTOR(15 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(15 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(15 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_17_2_2(input_0 : STD_LOGIC_VECTOR(16 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(16 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(16 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_20_2_2(input_0 : STD_LOGIC_VECTOR(19 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(19 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(19 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_24_2_2(input_0 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(23 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_29_2_2(input_0 : STD_LOGIC_VECTOR(28 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(28 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(28 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_2_2_2(input_0 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(1 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_2_4_2(input_0 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(1 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(1 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN "00" =>
          result := input_0;
        WHEN "01" =>
          result := input_1;
        WHEN "10" =>
          result := input_2;
        WHEN others =>
          result := input_3;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_30_2_2(input_0 : STD_LOGIC_VECTOR(29 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(29 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(29 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_31_2_2(input_0 : STD_LOGIC_VECTOR(30 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(30 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(30 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_35_2_2(input_0 : STD_LOGIC_VECTOR(34 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(34 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(34 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_37_2_2(input_0 : STD_LOGIC_VECTOR(36 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(36 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(36 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_38_2_2(input_0 : STD_LOGIC_VECTOR(37 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(37 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(37 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_39_2_2(input_0 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(38 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_3_2_2(input_0 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(2 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_40_2_2(input_0 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(39 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_4_2_2(input_0 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(3 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_52_2_2(input_0 : STD_LOGIC_VECTOR(51 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(51 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(51 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_6_2_2(input_0 : STD_LOGIC_VECTOR(5 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(5 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(5 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_7_2_2(input_0 : STD_LOGIC_VECTOR(6 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(6 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(6 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_8_2_2(input_0 : STD_LOGIC_VECTOR(7 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(7 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(7 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_9_2_2(input_0 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(8 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

BEGIN
  SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp : mgc_hls.mgc_comps.mgc_div
    GENERIC MAP(
      width_a => 56,
      width_b => 40,
      signd => 1
      )
    PORT MAP(
      a => SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a,
      b => SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b,
      z => SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_z_1
    );
  SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a <= SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a_55
      & SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a_54_16 & STD_LOGIC_VECTOR'( "0000000000000000");
  SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b <= SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b_39
      & SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b_38_0;
  SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_z <= SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_z_1;

  LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp : mgc_hls.mgc_comps.mgc_div
    GENERIC MAP(
      width_a => 72,
      width_b => 60,
      signd => 1
      )
    PORT MAP(
      a => LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_a,
      b => LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b,
      z => LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z_1
    );
  LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_a <= LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_a_71_32
      & STD_LOGIC_VECTOR'( "00000000000000000000000000000000");
  LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b <= LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_59_39
      & LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_38_0;
  LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z <= LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z_1;

  operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp : mgc_hls.mgc_comps.mgc_div
    GENERIC MAP(
      width_a => 40,
      width_b => 40,
      signd => 1
      )
    PORT MAP(
      a => operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_a,
      b => operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b,
      z => operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_1
    );
  operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_a <= STD_LOGIC_VECTOR(UNSIGNED'( "0")
      & UNSIGNED(CONV_SIGNED(SIGNED(reg_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_a_32_0_ftd
      & STD_LOGIC_VECTOR'( "000000000000000") & reg_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_a_32_0_ftd_1
      & STD_LOGIC_VECTOR'( "0000000000000000")),39)));
  operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b <= operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_39
      & operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_38_30 & operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_29_0;
  operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z <= operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_1;

  APPLY_ROTARY_POS_EMB_LOOP_6_cosval_read_rom_cos_tab_rom_map_1_rg : mgc_hls.dutmgc_rom_33_960_17_1_pkg.dutmgc_rom_33_960_17_1
    PORT MAP(
      addr => APPLY_ROTARY_POS_EMB_LOOP_6_cosval_read_rom_cos_tab_rom_map_1_rg_addr,
      data_out => APPLY_ROTARY_POS_EMB_LOOP_6_cosval_read_rom_cos_tab_rom_map_1_rg_data_out
    );
  APPLY_ROTARY_POS_EMB_LOOP_6_cosval_read_rom_cos_tab_rom_map_1_rg_addr <= APPLY_ROTARY_POS_EMB_LOOP_6_cosval_APPLY_ROTARY_POS_EMB_LOOP_6_cosval_conc_2_9_5
      & (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(4 DOWNTO 0));
  APPLY_ROTARY_POS_EMB_LOOP_6_cosval_read_rom_cos_tab_rom_map_1_itm <= APPLY_ROTARY_POS_EMB_LOOP_6_cosval_read_rom_cos_tab_rom_map_1_rg_data_out;

  RMS_NORM_LOOP_2_read_rom_ln_weight_in_rom_map_1_rg : mgc_hls.dutmgc_rom_34_384_12_1_pkg.dutmgc_rom_34_384_12_1
    PORT MAP(
      addr => RMS_NORM_LOOP_2_read_rom_ln_weight_in_rom_map_1_rg_addr,
      data_out => RMS_NORM_LOOP_2_read_rom_ln_weight_in_rom_map_1_rg_data_out
    );
  RMS_NORM_LOOP_2_read_rom_ln_weight_in_rom_map_1_rg_addr <= INIT_2D_MEM_LOOP_2_2_acc_itm;
  RMS_NORM_LOOP_2_read_rom_ln_weight_in_rom_map_1_itm <= RMS_NORM_LOOP_2_read_rom_ln_weight_in_rom_map_1_rg_data_out;

  APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_rg : mgc_hls.dutmgc_rom_35_960_17_1_pkg.dutmgc_rom_35_960_17_1
    PORT MAP(
      addr => APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_rg_addr,
      data_out => APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_rg_data_out
    );
  APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_rg_addr <= APPLY_ROTARY_POS_EMB_LOOP_6_cosval_APPLY_ROTARY_POS_EMB_LOOP_6_cosval_conc_2_9_5
      & (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(4 DOWNTO 0));
  APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_itm <= APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_rg_data_out;

  RMS_NORM_LOOP_2_2_read_rom_ln_weight_rom_map_1_rg : mgc_hls.dutmgc_rom_36_384_13_1_pkg.dutmgc_rom_36_384_13_1
    PORT MAP(
      addr => RMS_NORM_LOOP_2_2_read_rom_ln_weight_rom_map_1_rg_addr,
      data_out => RMS_NORM_LOOP_2_2_read_rom_ln_weight_rom_map_1_rg_data_out
    );
  RMS_NORM_LOOP_2_2_read_rom_ln_weight_rom_map_1_rg_addr <= INIT_2D_MEM_LOOP_2_2_acc_itm;
  RMS_NORM_LOOP_2_2_read_rom_ln_weight_rom_map_1_itm <= RMS_NORM_LOOP_2_2_read_rom_ln_weight_rom_map_1_rg_data_out;

  LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_read_rom_v_weights_rom_map_1_rg : mgc_hls.dutmgc_rom_37_36864_8_1_pkg.dutmgc_rom_37_36864_8_1
    PORT MAP(
      addr => LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_read_rom_v_weights_rom_map_1_rg_addr,
      data_out => LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_read_rom_v_weights_rom_map_1_rg_data_out
    );
  LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_read_rom_v_weights_rom_map_1_rg_addr
      <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd
      & reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1 & APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp_4)
      + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_17_itm_8_0(8 DOWNTO 7)),
      2), 7), 7), 9) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd
      & reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1 & APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp_4
      & '0'), 8), 9), 9)) & (SF_LOOP_3_acc_17_itm_8_0(6 DOWNTO 0));
  LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_read_rom_v_weights_rom_map_1_itm <= LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_read_rom_v_weights_rom_map_1_rg_data_out;

  LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_read_rom_k_weights_rom_map_1_rg : mgc_hls.dutmgc_rom_38_36864_8_1_pkg.dutmgc_rom_38_36864_8_1
    PORT MAP(
      addr => LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_read_rom_k_weights_rom_map_1_rg_addr,
      data_out => LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_read_rom_k_weights_rom_map_1_rg_data_out
    );
  LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_read_rom_k_weights_rom_map_1_rg_addr
      <= LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_conc_2_15_7
      & (INIT_2D_MEM_LOOP_2_2_acc_itm(6 DOWNTO 0));
  LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_read_rom_k_weights_rom_map_1_itm <= LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_read_rom_k_weights_rom_map_1_rg_data_out;

  LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_read_rom_q_weights_rom_map_1_rg : mgc_hls.dutmgc_rom_39_36864_8_1_pkg.dutmgc_rom_39_36864_8_1
    PORT MAP(
      addr => LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_read_rom_q_weights_rom_map_1_rg_addr,
      data_out => LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_read_rom_q_weights_rom_map_1_rg_data_out
    );
  LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_read_rom_q_weights_rom_map_1_rg_addr <=
      STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0
      & LINEAR_FORWARD_NO_MUL_LOOP_4_ki_4_0_sva_3_0) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1(8
      DOWNTO 7)), 2), 7), 7), 9) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0
      & LINEAR_FORWARD_NO_MUL_LOOP_4_ki_4_0_sva_3_0 & '0'), 8), 9), 9)) & (reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1(6
      DOWNTO 0));
  LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_read_rom_q_weights_rom_map_1_itm <= LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_read_rom_q_weights_rom_map_1_rg_data_out;

  CACHE_UPDATE_LOOP_3_qif_read_rom_k_cache_rom_map_1_rg : mgc_hls.dutmgc_rom_40_1920_40_1_pkg.dutmgc_rom_40_1920_40_1
    PORT MAP(
      addr => CACHE_UPDATE_LOOP_3_qif_read_rom_k_cache_rom_map_1_rg_addr,
      data_out => CACHE_UPDATE_LOOP_3_qif_read_rom_k_cache_rom_map_1_rg_data_out
    );
  CACHE_UPDATE_LOOP_3_qif_read_rom_k_cache_rom_map_1_rg_addr <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED(CACHE_UPDATE_LOOP_3_qif_acc_5_sdt_1(5
      DOWNTO 4)), 2), 3) + UNSIGNED(APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0), 3))
      & (CACHE_UPDATE_LOOP_3_qif_acc_5_sdt_1(3 DOWNTO 0)) & (reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1(0))
      & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_0 & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1;
  CACHE_UPDATE_LOOP_3_qif_read_rom_k_cache_rom_map_1_itm <= CACHE_UPDATE_LOOP_3_qif_read_rom_k_cache_rom_map_1_rg_data_out;

  CACHE_UPDATE_LOOP_3_1_qif_read_rom_v_cache_rom_map_1_rg : mgc_hls.dutmgc_rom_41_1920_40_1_pkg.dutmgc_rom_41_1920_40_1
    PORT MAP(
      addr => CACHE_UPDATE_LOOP_3_1_qif_read_rom_v_cache_rom_map_1_rg_addr,
      data_out => CACHE_UPDATE_LOOP_3_1_qif_read_rom_v_cache_rom_map_1_rg_data_out
    );
  CACHE_UPDATE_LOOP_3_1_qif_read_rom_v_cache_rom_map_1_rg_addr <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED(CACHE_UPDATE_LOOP_3_1_qif_acc_5_sdt_1(5
      DOWNTO 4)), 2), 3) + UNSIGNED(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0), 3)) &
      (CACHE_UPDATE_LOOP_3_1_qif_acc_5_sdt_1(3 DOWNTO 0)) & (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(3
      DOWNTO 0));
  CACHE_UPDATE_LOOP_3_1_qif_read_rom_v_cache_rom_map_1_itm <= CACHE_UPDATE_LOOP_3_1_qif_read_rom_v_cache_rom_map_1_rg_data_out;

  LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_read_rom_o_weights_rom_map_1_rg : mgc_hls.dutmgc_rom_42_36864_8_1_pkg.dutmgc_rom_42_36864_8_1
    PORT MAP(
      addr => LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_read_rom_o_weights_rom_map_1_rg_addr,
      data_out => LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_read_rom_o_weights_rom_map_1_rg_data_out
    );
  LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_read_rom_o_weights_rom_map_1_rg_addr
      <= LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_conc_2_15_7
      & (INIT_2D_MEM_LOOP_2_2_acc_itm(6 DOWNTO 0));
  LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_read_rom_o_weights_rom_map_1_itm <= LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_read_rom_o_weights_rom_map_1_rg_data_out;

  dut_core_strm_in_rsci_inst : dut_core_strm_in_rsci
    PORT MAP(
      strm_in_rsc_dat => dut_core_strm_in_rsci_inst_strm_in_rsc_dat,
      strm_in_rsc_vld => strm_in_rsc_vld,
      strm_in_rsc_rdy => strm_in_rsc_rdy,
      strm_in_rsci_oswt => reg_strm_in_rsci_iswt0_cse,
      strm_in_rsci_wen_comp => strm_in_rsci_wen_comp,
      strm_in_rsci_idat_mxwt => dut_core_strm_in_rsci_inst_strm_in_rsci_idat_mxwt
    );
  dut_core_strm_in_rsci_inst_strm_in_rsc_dat <= strm_in_rsc_dat;
  strm_in_rsci_idat_mxwt <= dut_core_strm_in_rsci_inst_strm_in_rsci_idat_mxwt;

  dut_core_strm_out_rsci_inst : dut_core_strm_out_rsci
    PORT MAP(
      strm_out_rsc_dat => dut_core_strm_out_rsci_inst_strm_out_rsc_dat,
      strm_out_rsc_vld => strm_out_rsc_vld,
      strm_out_rsc_rdy => strm_out_rsc_rdy,
      strm_out_rsci_oswt => reg_strm_out_rsci_iswt0_cse,
      strm_out_rsci_wen_comp => strm_out_rsci_wen_comp,
      strm_out_rsci_idat => dut_core_strm_out_rsci_inst_strm_out_rsci_idat
    );
  strm_out_rsc_dat <= dut_core_strm_out_rsci_inst_strm_out_rsc_dat;
  dut_core_strm_out_rsci_inst_strm_out_rsci_idat <= strm_out_rsci_idat_31_2 & STD_LOGIC_VECTOR'(
      "00");

  dut_core_staller_inst : dut_core_staller
    PORT MAP(
      en => en,
      core_wen1 => core_wen1,
      strm_in_rsci_wen_comp => strm_in_rsci_wen_comp,
      strm_out_rsci_wen_comp => strm_out_rsci_wen_comp,
      input_rsc_clken_d_1 => input_rsc_clken_d_1
    );
  dut_core_wait_dp_inst : dut_core_wait_dp
    PORT MAP(
      clk => clk,
      rst => rst,
      rms_norm_384_div_cmp_z => dut_core_wait_dp_inst_rms_norm_384_div_cmp_z,
      core_wen1 => core_wen1,
      rms_norm_384_div_cmp_z_oreg => dut_core_wait_dp_inst_rms_norm_384_div_cmp_z_oreg
    );
  dut_core_wait_dp_inst_rms_norm_384_div_cmp_z <= rms_norm_384_div_cmp_z;
  rms_norm_384_div_cmp_z_oreg <= dut_core_wait_dp_inst_rms_norm_384_div_cmp_z_oreg;

  dut_core_core_fsm_inst : dut_core_core_fsm
    PORT MAP(
      clk => clk,
      rst => rst,
      input_rsc_clken_d_1 => input_rsc_clken_d_1,
      fsm_output => dut_core_core_fsm_inst_fsm_output,
      for_for_C_2_tr0 => CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm,
      compute_sqrt_for_C_15_tr0 => dut_core_core_fsm_inst_compute_sqrt_for_C_15_tr0,
      RMS_NORM_LOOP_2_C_5_tr0 => dut_core_core_fsm_inst_RMS_NORM_LOOP_2_C_5_tr0,
      QUANTIZE_ACTIVATION_LOOP_5_C_4_tr0 => dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_5_C_4_tr0,
      QUANTIZE_ACTIVATION_LOOP_4_C_0_tr0 => dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_4_C_0_tr0,
      QUANTIZE_ACTIVATION_LOOP_3_C_0_tr0 => dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_3_C_0_tr0,
      attention_5_1_384_384_8_48_q_proj_re_vinit_C_1_tr0 => CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm,
      LINEAR_FORWARD_NO_MUL_LOOP_5_C_5_tr0 => CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm,
      LINEAR_FORWARD_NO_MUL_LOOP_4_C_1_tr0 => dut_core_core_fsm_inst_LINEAR_FORWARD_NO_MUL_LOOP_4_C_1_tr0,
      LINEAR_FORWARD_NO_MUL_LOOP_3_C_0_tr0 => dut_core_core_fsm_inst_LINEAR_FORWARD_NO_MUL_LOOP_3_C_0_tr0,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_65_tr0 => CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm,
      RESHAPE_2D_TO_3D_LOOP_3_C_2_tr0 => CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm,
      RESHAPE_2D_TO_3D_LOOP_2_C_0_tr0 => CACHE_UPDATE_LOOP_1_and_cse,
      RESHAPE_2D_TO_3D_LOOP_3_2_C_3_tr0 => dut_core_core_fsm_inst_RESHAPE_2D_TO_3D_LOOP_3_2_C_3_tr0,
      RESHAPE_2D_TO_3D_LOOP_2_2_C_0_tr0 => CACHE_UPDATE_LOOP_1_and_cse,
      APPLY_ROTARY_POS_EMB_LOOP_6_C_4_tr0 => dut_core_core_fsm_inst_APPLY_ROTARY_POS_EMB_LOOP_6_C_4_tr0,
      APPLY_ROTARY_POS_EMB_LOOP_4_C_0_tr0 => dut_core_core_fsm_inst_APPLY_ROTARY_POS_EMB_LOOP_4_C_0_tr0,
      CACHE_UPDATE_LOOP_3_C_2_tr0 => CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm,
      CACHE_UPDATE_LOOP_2_C_0_tr0 => dut_core_core_fsm_inst_CACHE_UPDATE_LOOP_2_C_0_tr0,
      CACHE_UPDATE_LOOP_1_C_0_tr0 => CACHE_UPDATE_LOOP_1_and_cse,
      TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_2_tr0 => dut_core_core_fsm_inst_TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_2_tr0,
      TRANSPOSE_LAST_TWO_DIMS_LOOP_2_C_0_tr0 => dut_core_core_fsm_inst_TRANSPOSE_LAST_TWO_DIMS_LOOP_2_C_0_tr0,
      TRANSPOSE_LAST_TWO_DIMS_LOOP_1_C_0_tr0 => dut_core_core_fsm_inst_TRANSPOSE_LAST_TWO_DIMS_LOOP_1_C_0_tr0,
      GEMM_3D_FLOAT_LOOP_4_C_4_tr0 => dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_4_C_4_tr0,
      GEMM_3D_FLOAT_LOOP_3_C_2_tr0 => dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_3_C_2_tr0,
      GEMM_3D_FLOAT_LOOP_1_C_0_tr0 => dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_1_C_0_tr0,
      SF_LOOP_3_C_12_tr0 => dut_core_core_fsm_inst_SF_LOOP_3_C_12_tr0,
      SF_LOOP_1_C_0_tr0 => dut_core_core_fsm_inst_SF_LOOP_1_C_0_tr0,
      SOFTMAX_LOOP_3_C_1_tr0 => dut_core_core_fsm_inst_SOFTMAX_LOOP_3_C_1_tr0,
      SOFTMAX_LOOP_4_C_4_tr0 => dut_core_core_fsm_inst_SOFTMAX_LOOP_4_C_4_tr0,
      SOFTMAX_LOOP_5_C_21_tr0 => dut_core_core_fsm_inst_SOFTMAX_LOOP_5_C_21_tr0,
      SOFTMAX_LOOP_1_C_2_tr0 => dut_core_core_fsm_inst_SOFTMAX_LOOP_1_C_2_tr0,
      GEMM_3D_FLOAT_LOOP_4_1_C_4_tr0 => dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_4_1_C_4_tr0,
      GEMM_3D_FLOAT_LOOP_3_1_C_2_tr0 => dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_3_1_C_2_tr0,
      GEMM_3D_FLOAT_LOOP_1_1_C_0_tr0 => dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_1_1_C_0_tr0,
      ATTN_2D_LOOP_3_C_2_tr0 => dut_core_core_fsm_inst_ATTN_2D_LOOP_3_C_2_tr0,
      ATTN_2D_LOOP_2_C_0_tr0 => dut_core_core_fsm_inst_ATTN_2D_LOOP_2_C_0_tr0,
      RMS_NORM_LOOP_1_2_C_3_tr0 => dut_core_core_fsm_inst_RMS_NORM_LOOP_1_2_C_3_tr0,
      compute_sqrt_1_for_C_15_tr0 => dut_core_core_fsm_inst_compute_sqrt_1_for_C_15_tr0,
      RMS_NORM_LOOP_2_2_C_5_tr0 => dut_core_core_fsm_inst_RMS_NORM_LOOP_2_2_C_5_tr0,
      QUANTIZE_ACTIVATION_LOOP_5_1_C_4_tr0 => dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_5_1_C_4_tr0,
      QUANTIZE_ACTIVATION_LOOP_4_1_C_0_tr0 => dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_4_1_C_0_tr0,
      QUANTIZE_ACTIVATION_LOOP_3_1_C_0_tr0 => dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_3_1_C_0_tr0,
      output_vinit_C_1_tr0 => INIT_2D_MEM_LOOP_2_3_INIT_2D_MEM_LOOP_2_3_nor_itm,
      LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_3_tr0 => dut_core_core_fsm_inst_LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_3_tr0,
      LINEAR_FORWARD_NO_MUL_LOOP_4_3_C_1_tr0 => dut_core_core_fsm_inst_LINEAR_FORWARD_NO_MUL_LOOP_4_3_C_1_tr0,
      LINEAR_FORWARD_NO_MUL_LOOP_3_3_C_0_tr0 => dut_core_core_fsm_inst_LINEAR_FORWARD_NO_MUL_LOOP_3_3_C_0_tr0,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_33_tr0 => dut_core_core_fsm_inst_LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_33_tr0,
      for_1_for_C_2_tr0 => dut_core_core_fsm_inst_for_1_for_C_2_tr0
    );
  fsm_output <= dut_core_core_fsm_inst_fsm_output;
  dut_core_core_fsm_inst_compute_sqrt_for_C_15_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_RMS_NORM_LOOP_2_C_5_tr0 <= exit_QUANTIZE_ACTIVATION_LOOP_2_sva_dfm
      AND (NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm);
  dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_5_C_4_tr0 <= APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0(2);
  dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_4_C_0_tr0 <= z_out_11_4_0(4);
  dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_3_C_0_tr0 <= NOT z_out_29_2;
  dut_core_core_fsm_inst_LINEAR_FORWARD_NO_MUL_LOOP_4_C_1_tr0 <= (LINEAR_FORWARD_NO_MUL_LOOP_4_ki_4_0_sva_2(4))
      AND (z_out_11_4_0(4)) AND (LINEAR_FORWARD_NO_MUL_LOOP_4_2_ki_4_0_sva_2(4));
  dut_core_core_fsm_inst_LINEAR_FORWARD_NO_MUL_LOOP_3_C_0_tr0 <= NOT(z_out_28_2 OR
      z_out_29_2 OR z_out_30_2);
  dut_core_core_fsm_inst_RESHAPE_2D_TO_3D_LOOP_3_2_C_3_tr0 <= CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm
      AND exit_APPLY_ROTARY_POS_EMB_LOOP_3_sva_dfm;
  dut_core_core_fsm_inst_APPLY_ROTARY_POS_EMB_LOOP_6_C_4_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_APPLY_ROTARY_POS_EMB_LOOP_4_C_0_tr0 <= APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2(3);
  dut_core_core_fsm_inst_CACHE_UPDATE_LOOP_2_C_0_tr0 <= NOT(z_out_29_2 OR z_out_30_2);
  dut_core_core_fsm_inst_TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_2_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_TRANSPOSE_LAST_TWO_DIMS_LOOP_2_C_0_tr0 <= NOT z_out_30_2;
  dut_core_core_fsm_inst_TRANSPOSE_LAST_TWO_DIMS_LOOP_1_C_0_tr0 <= APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2(3);
  dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_4_C_4_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_3_C_2_tr0 <= NOT z_out_30_2;
  dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_1_C_0_tr0 <= GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2(3);
  dut_core_core_fsm_inst_SF_LOOP_3_C_12_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_SF_LOOP_1_C_0_tr0 <= GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2(3);
  dut_core_core_fsm_inst_SOFTMAX_LOOP_3_C_1_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_SOFTMAX_LOOP_4_C_4_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_SOFTMAX_LOOP_5_C_21_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_SOFTMAX_LOOP_1_C_2_tr0 <= APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2(3);
  dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_4_1_C_4_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_3_1_C_2_tr0 <= NOT z_out_28_2;
  dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_1_1_C_0_tr0 <= GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2(3);
  dut_core_core_fsm_inst_ATTN_2D_LOOP_3_C_2_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_ATTN_2D_LOOP_2_C_0_tr0 <= APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2(3);
  dut_core_core_fsm_inst_RMS_NORM_LOOP_1_2_C_3_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_compute_sqrt_1_for_C_15_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_RMS_NORM_LOOP_2_2_C_5_tr0 <= (NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm)
      AND exit_QUANTIZE_ACTIVATION_LOOP_2_1_sva_dfm;
  dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_5_1_C_4_tr0 <= APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0(2);
  dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_4_1_C_0_tr0 <= z_out_11_4_0(4);
  dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_3_1_C_0_tr0 <= NOT z_out_29_2;
  dut_core_core_fsm_inst_LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_3_tr0 <= APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0(2);
  dut_core_core_fsm_inst_LINEAR_FORWARD_NO_MUL_LOOP_4_3_C_1_tr0 <= z_out_11_4_0(4);
  dut_core_core_fsm_inst_LINEAR_FORWARD_NO_MUL_LOOP_3_3_C_0_tr0 <= NOT z_out_29_2;
  dut_core_core_fsm_inst_LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_33_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_for_1_for_C_2_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;

  input_rsci_clken_d <= input_rsc_clken_d_1;
  or_1088_nl <= (fsm_output(0)) OR (fsm_output(2)) OR (fsm_output(5)) OR (fsm_output(3))
      OR (fsm_output(4));
  nand_142_nl <= NOT((fsm_output(0)) AND (fsm_output(2)) AND (fsm_output(5)) AND
      (fsm_output(3)) AND (fsm_output(4)));
  mux_265_nl <= MUX_s_1_2_2(or_1088_nl, nand_142_nl, fsm_output(1));
  QUANTIZE_ACTIVATION_LOOP_1_max_val_and_cse <= input_rsc_clken_d_1 AND (NOT(mux_265_nl
      AND and_dcpl_107));
  mux_270_nl <= MUX_s_1_2_2(and_dcpl_103, or_tmp_211, fsm_output(8));
  mux_271_nl <= MUX_s_1_2_2(mux_270_nl, and_tmp_16, fsm_output(3));
  mux_269_nl <= MUX_s_1_2_2(and_tmp_16, and_tmp_15, fsm_output(3));
  mux_272_nl <= MUX_s_1_2_2(mux_271_nl, mux_269_nl, fsm_output(5));
  mux_273_nl <= MUX_s_1_2_2(mux_272_nl, mux_tmp_266, fsm_output(2));
  mux_267_nl <= MUX_s_1_2_2(and_tmp_16, and_tmp_15, nor_tmp);
  mux_268_nl <= MUX_s_1_2_2(mux_267_nl, mux_tmp_266, fsm_output(2));
  mux_274_nl <= MUX_s_1_2_2(mux_273_nl, mux_268_nl, fsm_output(0));
  mux_275_nl <= MUX_s_1_2_2(mux_274_nl, mux_tmp_266, fsm_output(1));
  QUANTIZE_ACTIVATION_LOOP_1_1_max_val_and_cse <= input_rsc_clken_d_1 AND mux_275_nl;
  and_610_cse <= (fsm_output(0)) AND (fsm_output(2));
  or_44_cse <= (fsm_output(0)) OR (fsm_output(2));
  or_313_nl <= (fsm_output(3)) OR (fsm_output(7)) OR (NOT (fsm_output(4)));
  mux_287_nl <= MUX_s_1_2_2(or_313_nl, mux_tmp_283, fsm_output(2));
  mux_285_nl <= MUX_s_1_2_2(or_800_cse, (fsm_output(7)), fsm_output(3));
  mux_286_nl <= MUX_s_1_2_2(mux_285_nl, mux_tmp_283, fsm_output(2));
  mux_288_nl <= MUX_s_1_2_2(mux_287_nl, mux_286_nl, fsm_output(0));
  or_310_nl <= (NOT (fsm_output(8))) OR (NOT (fsm_output(7))) OR (fsm_output(4));
  mux_282_nl <= MUX_s_1_2_2(or_310_nl, or_798_cse, fsm_output(3));
  mux_284_nl <= MUX_s_1_2_2(mux_tmp_283, mux_282_nl, and_610_cse);
  mux_289_nl <= MUX_s_1_2_2(mux_288_nl, mux_284_nl, fsm_output(1));
  or_314_ssc <= mux_289_nl OR CONV_SL_1_1(fsm_output(6 DOWNTO 5)/=STD_LOGIC_VECTOR'("00"));
  and_168_ssc <= (NOT mux_290_itm) AND and_dcpl_106 AND (NOT (fsm_output(5)));
  or_318_cse <= CONV_SL_1_1(fsm_output(7 DOWNTO 6)/=STD_LOGIC_VECTOR'("10"));
  nor_78_cse <= NOT((fsm_output(0)) OR (NOT (fsm_output(3))));
  or_319_cse <= CONV_SL_1_1(fsm_output(7 DOWNTO 6)/=STD_LOGIC_VECTOR'("01"));
  or_323_nl <= nor_78_cse OR CONV_SL_1_1(fsm_output(7 DOWNTO 6)/=STD_LOGIC_VECTOR'("00"));
  mux_300_nl <= MUX_s_1_2_2(or_tmp_225, or_323_nl, fsm_output(4));
  mux_301_nl <= MUX_s_1_2_2(mux_300_nl, mux_tmp_298, fsm_output(2));
  mux_294_nl <= MUX_s_1_2_2(or_tmp_225, or_tmp_211, fsm_output(3));
  mux_292_nl <= MUX_s_1_2_2(or_319_cse, or_318_cse, fsm_output(8));
  mux_293_nl <= MUX_s_1_2_2(mux_292_nl, or_tmp_211, fsm_output(3));
  mux_295_nl <= MUX_s_1_2_2(mux_294_nl, mux_293_nl, fsm_output(0));
  or_316_nl <= (fsm_output(0)) OR (fsm_output(3)) OR (fsm_output(6)) OR (fsm_output(7));
  mux_296_nl <= MUX_s_1_2_2(mux_295_nl, or_316_nl, fsm_output(4));
  mux_299_nl <= MUX_s_1_2_2(mux_tmp_298, mux_296_nl, fsm_output(2));
  mux_302_nl <= MUX_s_1_2_2(mux_301_nl, mux_299_nl, fsm_output(1));
  nor_512_seb <= NOT(mux_302_nl OR (fsm_output(5)));
  or_272_cse <= CONV_SL_1_1(fsm_output(1 DOWNTO 0)/=STD_LOGIC_VECTOR'("00"));
  and_704_cse <= CONV_SL_1_1(fsm_output(2 DOWNTO 1)=STD_LOGIC_VECTOR'("11"));
  mux_317_nl <= MUX_s_1_2_2(or_tmp_178, mux_tmp_220, and_704_cse);
  and_184_ssc <= (NOT mux_317_nl) AND and_dcpl_166;
  mux_321_nl <= MUX_s_1_2_2(mux_tmp_320, mux_tmp_319, or_272_cse);
  and_186_ssc <= (NOT mux_321_nl) AND and_dcpl_168;
  nand_156_nl <= NOT((NOT(CONV_SL_1_1(fsm_output(4 DOWNTO 3)=STD_LOGIC_VECTOR'("11"))))
      AND (fsm_output(6)));
  mux_326_nl <= MUX_s_1_2_2(nand_156_nl, or_tmp_244, fsm_output(5));
  mux_327_nl <= MUX_s_1_2_2(mux_326_nl, mux_tmp_323, fsm_output(2));
  mux_324_nl <= MUX_s_1_2_2(or_tmp_243, or_tmp_244, fsm_output(5));
  mux_325_nl <= MUX_s_1_2_2(mux_324_nl, mux_tmp_323, fsm_output(2));
  mux_328_nl <= MUX_s_1_2_2(mux_327_nl, mux_325_nl, fsm_output(1));
  and_191_ssc <= (NOT mux_328_nl) AND and_dcpl_80;
  and_706_cse <= CONV_SL_1_1(fsm_output(1 DOWNTO 0)=STD_LOGIC_VECTOR'("11"));
  mux_329_nl <= MUX_s_1_2_2(mux_tmp_307, mux_tmp_305, and_706_cse);
  and_192_ssc <= (NOT mux_329_nl) AND (fsm_output(8));
  and_707_cse <= or_272_cse AND (fsm_output(2));
  mux_330_nl <= MUX_s_1_2_2(or_tmp_178, mux_tmp_220, and_707_cse);
  and_193_ssc <= (NOT mux_330_nl) AND and_dcpl_166;
  mux_331_nl <= MUX_s_1_2_2(mux_tmp_320, mux_tmp_319, fsm_output(1));
  and_194_ssc <= (NOT mux_331_nl) AND and_dcpl_168;
  or_349_cse <= CONV_SL_1_1(fsm_output(2 DOWNTO 1)/=STD_LOGIC_VECTOR'("00"));
  mux_335_nl <= MUX_s_1_2_2(nand_1_cse, mux_tmp_334, or_349_cse);
  and_197_itm <= (NOT mux_335_nl) AND and_dcpl_107;
  rms_norm_384_div_cmp_b <= reg_rms_norm_384_div_cmp_b_ftd_59_38 & reg_rms_norm_384_div_cmp_b_ftd_37_0
      & reg_rms_norm_384_div_cmp_b_ftd_1;
  rms_norm_384_div_cmp_a <= reg_rms_norm_384_div_cmp_a_ftd & STD_LOGIC_VECTOR'( "00000000000000000000000000000000");
  APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_rmff_4_2 <= MUX_v_3_2_2(reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_ftd,
      (APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva(4 DOWNTO 2)), and_dcpl_193);
  APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_rmff_1 <= MUX_s_1_2_2(reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd,
      (APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva(1)), and_dcpl_193);
  APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_rmff_0 <= MUX_s_1_2_2(reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd_1,
      (APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva(0)), and_dcpl_193);
  APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_1_rmff <= MUX_s_1_2_2(reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1,
      (reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1(0)), and_dcpl_193);
  and_232_ssc <= and_dcpl_201 AND and_dcpl_214;
  or_365_nl <= (fsm_output(2)) OR (fsm_output(7)) OR (fsm_output(1)) OR (fsm_output(4))
      OR (fsm_output(6));
  or_364_nl <= (fsm_output(7)) OR (NOT((fsm_output(1)) AND (fsm_output(4)) AND (fsm_output(6))));
  or_363_nl <= (NOT (fsm_output(7))) OR (NOT (fsm_output(1))) OR (fsm_output(4))
      OR (fsm_output(6));
  mux_341_nl <= MUX_s_1_2_2(or_364_nl, or_363_nl, fsm_output(2));
  mux_342_nl <= MUX_s_1_2_2(or_365_nl, mux_341_nl, fsm_output(0));
  nor_317_nl <= NOT((fsm_output(5)) OR mux_342_nl);
  nor_318_nl <= NOT((NOT (fsm_output(5))) OR (NOT (fsm_output(0))) OR (NOT (fsm_output(2)))
      OR (fsm_output(7)) OR (fsm_output(1)) OR (fsm_output(4)) OR (fsm_output(6)));
  mux_343_nl <= MUX_s_1_2_2(nor_317_nl, nor_318_nl, fsm_output(3));
  ATTN_2D_LOOP_3_and_seb <= mux_343_nl AND (fsm_output(8));
  and_71_cse <= CONV_SL_1_1(GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva=STD_LOGIC_VECTOR'("101"));
  and_73_cse <= CONV_SL_1_1(reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd=STD_LOGIC_VECTOR'("10"))
      AND reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1;
  RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_4_rmff_3_1 <= MUX1HOT_v_3_3_2((z_out_6(4 DOWNTO
      2)), reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_ftd, (z_out_8(3 DOWNTO 1)), STD_LOGIC_VECTOR'(
      and_dcpl_285 & and_dcpl_191 & and_dcpl_186));
  RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_4_rmff_0 <= MUX1HOT_s_1_3_2((z_out_6(1)), reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd,
      (z_out_8(0)), STD_LOGIC_VECTOR'( and_dcpl_285 & and_dcpl_191 & and_dcpl_186));
  RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_9_rmff <= MUX1HOT_s_1_3_2((z_out_6(0)), reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd_1,
      (z_out_31(0)), STD_LOGIC_VECTOR'( and_dcpl_285 & and_dcpl_191 & and_dcpl_186));
  RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_7_rmff <= MUX1HOT_s_1_3_2((reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1(0)),
      reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1, (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(3)),
      STD_LOGIC_VECTOR'( and_dcpl_285 & and_dcpl_191 & and_dcpl_186));
  or_1134_ssc <= and_dcpl_191 OR and_dcpl_285;
  RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_8_rmff_2 <= MUX_s_1_2_2((APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(2)),
      reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_0, or_1134_ssc);
  RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_8_rmff_1_0 <= MUX_v_2_2_2((APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(1
      DOWNTO 0)), reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1, or_1134_ssc);
  and_317_ssc <= and_dcpl_283 AND and_dcpl_134;
  mux_364_nl <= MUX_s_1_2_2(or_tmp_304, or_dcpl_91, fsm_output(2));
  mux_365_nl <= MUX_s_1_2_2(or_tmp_305, mux_364_nl, fsm_output(1));
  INIT_2D_MEM_LOOP_2_2_nor_seb <= NOT(mux_365_nl OR (fsm_output(5)) OR (NOT (fsm_output(0))));
  and_325_ssc <= and_dcpl_283 AND and_dcpl_240;
  or_426_nl <= (fsm_output(0)) OR (NOT (fsm_output(2))) OR (NOT (fsm_output(3)))
      OR (fsm_output(8)) OR (fsm_output(7)) OR (NOT nor_tmp_79);
  or_424_nl <= (NOT (fsm_output(2))) OR (fsm_output(3)) OR (NOT (fsm_output(8)))
      OR (NOT (fsm_output(7))) OR (fsm_output(4)) OR (fsm_output(6));
  mux_370_nl <= MUX_s_1_2_2(or_tmp_305, or_424_nl, fsm_output(0));
  mux_371_nl <= MUX_s_1_2_2(or_426_nl, mux_370_nl, fsm_output(1));
  INIT_2D_MEM_LOOP_2_1_nor_seb <= NOT(mux_371_nl OR (fsm_output(5)));
  and_328_ssc <= and_dcpl_283 AND and_dcpl_192;
  nor_331_nl <= NOT(CONV_SL_1_1(fsm_output(8 DOWNTO 3)/=STD_LOGIC_VECTOR'("010100")));
  nor_332_nl <= NOT((fsm_output(5)) OR (NOT (fsm_output(3))) OR (fsm_output(8)) OR
      (fsm_output(7)) OR (NOT nor_tmp_79));
  mux_374_nl <= MUX_s_1_2_2(nor_331_nl, nor_332_nl, fsm_output(2));
  nor_333_nl <= NOT(CONV_SL_1_1(fsm_output(8 DOWNTO 2)/=STD_LOGIC_VECTOR'("1100001")));
  mux_375_nl <= MUX_s_1_2_2(mux_374_nl, nor_333_nl, fsm_output(1));
  INIT_2D_MEM_LOOP_2_and_3_seb <= mux_375_nl AND (fsm_output(0));
  and_350_ssc <= and_dcpl_128 AND and_dcpl_214;
  mux_388_nl <= MUX_s_1_2_2(or_tmp_234, mux_tmp_383, fsm_output(2));
  INIT_2D_MEM_LOOP_2_3_nor_seb <= NOT(mux_388_nl OR (NOT (fsm_output(8))) OR (fsm_output(5))
      OR nand_181_cse);
  and_359_ssc <= and_dcpl_341 AND and_dcpl_126;
  nor_340_nl <= NOT(CONV_SL_1_1(fsm_output(8 DOWNTO 2)/=STD_LOGIC_VECTOR'("0001110")));
  or_460_nl <= (NOT (fsm_output(8))) OR (NOT (fsm_output(7))) OR (fsm_output(4))
      OR (fsm_output(6));
  or_459_nl <= (fsm_output(8)) OR (fsm_output(7)) OR (fsm_output(4)) OR (NOT (fsm_output(6)));
  mux_391_nl <= MUX_s_1_2_2(or_460_nl, or_459_nl, fsm_output(3));
  nor_341_nl <= NOT((NOT (fsm_output(2))) OR (fsm_output(5)) OR mux_391_nl);
  mux_392_nl <= MUX_s_1_2_2(nor_340_nl, nor_341_nl, fsm_output(0));
  for_for_and_seb <= mux_392_nl AND (fsm_output(1));
  nor_342_cse <= NOT((fsm_output(5)) OR (fsm_output(7)));
  or_490_cse <= (NOT (fsm_output(8))) OR (fsm_output(2));
  and_602_cse <= CONV_SL_1_1(fsm_output(2 DOWNTO 0)=STD_LOGIC_VECTOR'("111"));
  and_732_cse <= (fsm_output(4)) AND (fsm_output(1));
  and_731_cse <= CONV_SL_1_1(fsm_output(8 DOWNTO 7)=STD_LOGIC_VECTOR'("11"));
  or_531_cse <= (fsm_output(2)) OR (NOT (fsm_output(8))) OR (fsm_output(1));
  nor_360_cse <= NOT((fsm_output(1)) OR (fsm_output(0)) OR (fsm_output(8)));
  or_518_cse <= (NOT (fsm_output(1))) OR (fsm_output(8));
  and_729_cse <= (fsm_output(8)) AND (fsm_output(0));
  or_529_cse <= (fsm_output(8)) OR and_706_cse;
  and_392_itm <= and_dcpl_113 AND (NOT((fsm_output(7)) OR (fsm_output(3)))) AND and_dcpl_126;
  operator_40_24_true_AC_TRN_AC_WRAP_1_and_itm <= (NOT and_dcpl_351) AND and_dcpl_375;
  operator_40_24_true_AC_TRN_AC_WRAP_1_and_2_ssc <= input_rsc_clken_d_1 AND (NOT
      and_dcpl_351);
  or_550_cse <= (fsm_output(8)) OR (fsm_output(3));
  or_551_cse <= (fsm_output(8)) OR (NOT (fsm_output(3)));
  LINEAR_FORWARD_NO_MUL_LOOP_5_1_or_cse <= (CONV_SL_1_1(CACHE_UPDATE_LOOP_3_k_5_0_sva_1_1_0=STD_LOGIC_VECTOR'("01")))
      OR LINEAR_FORWARD_NO_MUL_LOOP_5_1_LINEAR_FORWARD_NO_MUL_LOOP_5_1_and_3_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_acc_66_itm <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(23),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(24)),
      1), 1), 2) + UNSIGNED'( "01"), 2));
  operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_nand_cse
      <= NOT((z_out_5_1_0(1)) AND (NOT (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39))));
  nand_181_cse <= NOT(CONV_SL_1_1(fsm_output(1 DOWNTO 0)=STD_LOGIC_VECTOR'("11")));
  or_577_cse <= (NOT (fsm_output(6))) OR (fsm_output(8));
  nor_387_cse <= NOT(CONV_SL_1_1(fsm_output(8 DOWNTO 7)/=STD_LOGIC_VECTOR'("00")));
  RMS_NORM_LOOP_2_2_and_ssc <= input_rsc_clken_d_1 AND (RMS_NORM_LOOP_2_2_dfr_sva_mx0c0
      OR and_dcpl_152 OR RMS_NORM_LOOP_2_2_dfr_sva_mx0c2 OR RMS_NORM_LOOP_2_2_dfr_sva_mx0c3
      OR and_dcpl_414 OR and_dcpl_154);
  and_745_cse <= (fsm_output(1)) AND (fsm_output(3));
  and_743_cse <= or_349_cse AND (fsm_output(3));
  and_447_itm <= and_dcpl_115 AND and_dcpl_171;
  and_448_itm <= and_dcpl_341 AND and_dcpl_178;
  nor_397_nl <= NOT((NOT (fsm_output(0))) OR (fsm_output(5)) OR (NOT nor_tmp_11));
  mux_605_nl <= MUX_s_1_2_2(or_1114_cse, or_tmp_28, fsm_output(5));
  nor_398_nl <= NOT((fsm_output(0)) OR mux_605_nl);
  mux_606_nl <= MUX_s_1_2_2(nor_397_nl, nor_398_nl, fsm_output(1));
  and_451_itm <= mux_606_nl AND and_dcpl_165 AND (NOT (fsm_output(8))) AND (fsm_output(2));
  and_452_itm <= and_dcpl_163 AND and_dcpl_100;
  nor_399_nl <= NOT((NOT (fsm_output(2))) OR (fsm_output(5)) OR (fsm_output(3)) OR
      (NOT nor_tmp_79));
  nor_400_nl <= NOT(CONV_SL_1_1(fsm_output(6 DOWNTO 2)/=STD_LOGIC_VECTOR'("00000")));
  mux_607_nl <= MUX_s_1_2_2(nor_399_nl, nor_400_nl, fsm_output(0));
  nor_401_nl <= NOT((fsm_output(0)) OR (NOT (fsm_output(2))) OR (NOT (fsm_output(5)))
      OR (NOT (fsm_output(3))) OR (fsm_output(4)) OR (fsm_output(6)));
  mux_608_nl <= MUX_s_1_2_2(mux_607_nl, nor_401_nl, fsm_output(1));
  and_453_itm <= mux_608_nl AND and_dcpl_80;
  and_740_nl <= or_550_cse AND (fsm_output(7));
  mux_600_nl <= MUX_s_1_2_2(and_740_nl, or_tmp_529, and_706_cse);
  mux_601_nl <= MUX_s_1_2_2(mux_600_nl, or_tmp_529, fsm_output(2));
  mux_602_nl <= MUX_s_1_2_2(or_746_cse, mux_601_nl, fsm_output(5));
  mux_596_nl <= MUX_s_1_2_2(or_471_cse, and_731_cse, fsm_output(3));
  mux_597_nl <= MUX_s_1_2_2(mux_596_nl, nor_tmp_128, or_272_cse);
  mux_594_nl <= MUX_s_1_2_2(nor_tmp_128, mux_tmp_592, fsm_output(0));
  mux_593_nl <= MUX_s_1_2_2(mux_tmp_592, and_731_cse, fsm_output(0));
  mux_595_nl <= MUX_s_1_2_2(mux_594_nl, mux_593_nl, fsm_output(1));
  mux_598_nl <= MUX_s_1_2_2(mux_597_nl, mux_595_nl, fsm_output(2));
  and_742_nl <= CONV_SL_1_1(fsm_output(3 DOWNTO 0)=STD_LOGIC_VECTOR'("1111"));
  mux_591_nl <= MUX_s_1_2_2((fsm_output(8)), or_tmp_350, and_742_nl);
  mux_599_nl <= MUX_s_1_2_2(mux_598_nl, mux_591_nl, fsm_output(5));
  mux_603_nl <= MUX_s_1_2_2(mux_602_nl, mux_599_nl, fsm_output(6));
  mux_588_nl <= MUX_s_1_2_2(or_746_cse, and_731_cse, and_743_cse);
  mux_586_nl <= MUX_s_1_2_2(or_tmp_350, or_471_cse, fsm_output(3));
  or_657_nl <= (NOT((NOT(and_706_cse OR (fsm_output(3)))) OR (fsm_output(8)))) OR
      (fsm_output(7));
  mux_587_nl <= MUX_s_1_2_2(mux_586_nl, or_657_nl, fsm_output(2));
  mux_589_nl <= MUX_s_1_2_2(mux_588_nl, mux_587_nl, fsm_output(5));
  mux_581_nl <= MUX_s_1_2_2(or_tmp_350, (fsm_output(8)), fsm_output(3));
  mux_582_nl <= MUX_s_1_2_2(or_tmp_529, mux_581_nl, fsm_output(0));
  mux_583_nl <= MUX_s_1_2_2(mux_582_nl, or_tmp_350, fsm_output(1));
  mux_580_nl <= MUX_s_1_2_2(or_tmp_350, (fsm_output(8)), and_745_cse);
  mux_584_nl <= MUX_s_1_2_2(mux_583_nl, mux_580_nl, fsm_output(2));
  mux_585_nl <= MUX_s_1_2_2(mux_584_nl, or_tmp_350, fsm_output(5));
  mux_590_nl <= MUX_s_1_2_2(mux_589_nl, mux_585_nl, fsm_output(6));
  mux_604_nl <= MUX_s_1_2_2(mux_603_nl, mux_590_nl, fsm_output(4));
  GEMM_3D_FLOAT_LOOP_3_and_ssc <= input_rsc_clken_d_1 AND mux_604_nl;
  SF_LOOP_3_acc_17_sdt <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED((reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(35))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(35),
      1),5)) & STD_LOGIC_VECTOR'( "00") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(35),
      1),3)) & STD_LOGIC_VECTOR'( "00") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(35),
      1),2)) & '0' & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(35))), 18), 19) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((APPLY_ROTARY_POS_EMB_LOOP_6_mul_4_itm(17
      DOWNTO 3)) & '0' & (APPLY_ROTARY_POS_EMB_LOOP_6_mul_4_itm(1 DOWNTO 0))), 18),
      19), 19));
  nor_411_cse <= NOT(CONV_SL_1_1(fsm_output(2 DOWNTO 1)/=STD_LOGIC_VECTOR'("00")));
  nor_412_cse <= NOT(nor_411_cse OR (fsm_output(8)));
  nor_413_cse <= NOT(CONV_SL_1_1(fsm_output(1 DOWNTO 0)/=STD_LOGIC_VECTOR'("00")));
  or_701_cse <= (fsm_output(4)) OR (fsm_output(2)) OR (fsm_output(0)) OR (NOT (fsm_output(1)))
      OR (fsm_output(8));
  nor_414_cse <= NOT(nor_413_cse OR (fsm_output(8)));
  or_677_cse <= (fsm_output(7)) OR (fsm_output(5));
  SF_LOOP_3_acc_60_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(27),
      1), 1), 2) + CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(28),
      1), 1), 2), 2));
  SF_LOOP_3_acc_65_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(SIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_q_d(29))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(29),
      1),2)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(29),
      1),3))),9)), 9), 10) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_q_d(36))
      & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(36)) & STD_LOGIC_VECTOR'(
      "00") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(36),
      1),2)) & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(36))), 9),
      10), 10));
  SF_LOOP_3_acc_22_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_60_nl),
      2)) & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(27)) & STD_LOGIC_VECTOR'(
      "00") & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(28)) & SF_LOOP_3_acc_61_cse_mx0w4
      & SF_LOOP_3_acc_61_cse_mx0w4 & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(28))
      & SF_LOOP_3_acc_63_cse_mx0w6), 18), 20) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_64_ncse_1
      & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(29)) & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(36))
      & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(36)) & STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_65_nl),
      10)) & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(29)) & SF_LOOP_3_acc_64_ncse_1),
      18), 20), 20));
  SF_LOOP_3_acc_24_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_15_itm),
      19), 20) + CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_mul_17_itm), 19), 20),
      20));
  operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_conc_2_itm_19_0 <= MUX_v_20_2_2(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_22_nl),
      20)), STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_24_nl), 20)), and_dcpl_448);
  and_357_itm <= and_dcpl_115 AND and_dcpl_119;
  mux_657_nl <= MUX_s_1_2_2(or_tmp_599, or_tmp_598, fsm_output(1));
  and_475_itm <= (NOT mux_657_nl) AND and_dcpl_137 AND and_dcpl_26 AND (NOT((fsm_output(5))
      OR (fsm_output(0))));
  operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_or_3_cse <= and_dcpl_320 OR and_dcpl_299
      OR (and_dcpl_298 AND and_dcpl_250) OR (and_dcpl_325 AND and_dcpl_178);
  or_1114_cse <= CONV_SL_1_1(fsm_output(4 DOWNTO 3)/=STD_LOGIC_VECTOR'("00"));
  or_746_cse <= CONV_SL_1_1(fsm_output(8 DOWNTO 7)/=STD_LOGIC_VECTOR'("01"));
  nor_143_cse <= NOT((fsm_output(8)) OR (NOT (fsm_output(0))) OR (NOT (fsm_output(1))));
  and_768_cse <= (fsm_output(8)) AND (fsm_output(3));
  or_173_cse <= (fsm_output(8)) OR (NOT (fsm_output(5))) OR (fsm_output(7));
  or_722_cse <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)/=STD_LOGIC_VECTOR'("010"));
  or_177_cse <= (NOT (fsm_output(3))) OR (fsm_output(8)) OR (NOT (fsm_output(5)))
      OR (fsm_output(7));
  nor_419_cse <= NOT((fsm_output(1)) OR (fsm_output(3)));
  SF_LOOP_3_acc_71_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(5),
      1), 1), 2) + CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(17),
      1), 1), 2), 2));
  SF_LOOP_3_acc_72_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(5),
      1), 1), 2) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(17),
      1), 1), 2), 2));
  SF_LOOP_3_acc_73_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(5),
      1),2)), 2), 3) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(17),
      1), 1), 3), 3));
  SF_LOOP_3_acc_74_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(5),
      1),5)), 5), 6) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(17),
      1),2)), 2), 6), 6));
  SF_LOOP_3_acc_75_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(5)) & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(5))),
      3), 4) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(17),
      1),3)), 3), 4), 4));
  SF_LOOP_3_acc_76_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(19),
      1), 1), 2) + CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(22),
      1), 1), 2), 2));
  SF_LOOP_3_acc_77_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(19),
      1), 1), 2) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(22),
      1), 1), 2), 2));
  SF_LOOP_3_acc_78_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(19),
      1),4)), 4), 5) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(22),
      1),2)), 2), 5), 5));
  SF_LOOP_3_acc_79_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_q_d(19))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(19),
      1),2))), 4), 5) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'( (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(22))
      & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(22))), 3), 5), 5));
  SF_LOOP_3_acc_26_sdt <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_71_nl),
      2)) & STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_72_nl), 2)) & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(17))
      & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(5)) & STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_73_nl),
      3)) & STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_74_nl), 6)) & STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_75_nl),
      4))), 19), 20) + CONV_SIGNED(CONV_SIGNED(SIGNED(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_76_nl),
      2)) & STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_77_nl), 2)) & '0' &
      (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(22)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_78_nl),
      5)) & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(22)) & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(19))
      & STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_79_nl), 5))), 19), 20),
      20));
  mux_662_nl <= MUX_s_1_2_2(and_745_cse, nor_419_cse, fsm_output(8));
  and_764_nl <= (fsm_output(4)) AND mux_662_nl;
  and_765_nl <= (fsm_output(8)) AND or_272_cse AND (fsm_output(3));
  nor_421_nl <= NOT((fsm_output(8)) OR (NOT(nand_181_cse AND (fsm_output(3)))));
  mux_661_nl <= MUX_s_1_2_2(and_765_nl, nor_421_nl, fsm_output(4));
  mux_663_nl <= MUX_s_1_2_2(and_764_nl, mux_661_nl, fsm_output(2));
  and_769_nl <= (fsm_output(5)) AND mux_663_nl;
  or_735_nl <= (fsm_output(0)) OR (fsm_output(1)) OR (fsm_output(3));
  or_734_nl <= and_706_cse OR (fsm_output(3));
  mux_660_nl <= MUX_s_1_2_2(or_735_nl, or_734_nl, fsm_output(8));
  and_770_nl <= (fsm_output(5)) AND ((fsm_output(2)) OR (fsm_output(4)) OR mux_660_nl);
  mux_664_nl <= MUX_s_1_2_2(and_769_nl, and_770_nl, fsm_output(6));
  or_170_nl <= (fsm_output(2)) OR (fsm_output(4));
  mux_658_nl <= MUX_s_1_2_2(and_768_cse, (fsm_output(8)), or_170_nl);
  or_730_nl <= (fsm_output(2)) OR (fsm_output(4)) OR (fsm_output(8)) OR (fsm_output(1))
      OR (fsm_output(3));
  mux_659_nl <= MUX_s_1_2_2(mux_658_nl, or_730_nl, fsm_output(5));
  nor_422_nl <= NOT((fsm_output(6)) OR mux_659_nl);
  mux_665_nl <= MUX_s_1_2_2(mux_664_nl, nor_422_nl, fsm_output(7));
  SF_LOOP_3_and_ssc <= input_rsc_clken_d_1 AND (mux_665_nl OR and_dcpl_360);
  nor_434_cse <= NOT((fsm_output(8)) OR (fsm_output(5)));
  or_814_cse <= (fsm_output(8)) OR (fsm_output(7)) OR (NOT (fsm_output(4)));
  or_800_cse <= (NOT (fsm_output(4))) OR (fsm_output(7));
  or_798_cse <= (fsm_output(4)) OR (fsm_output(7));
  nor_444_cse <= NOT(CONV_SL_1_1(fsm_output(1 DOWNTO 0)/=STD_LOGIC_VECTOR'("10")));
  or_831_cse <= (NOT (fsm_output(3))) OR (fsm_output(4)) OR (NOT (fsm_output(7)));
  mux_738_nl <= MUX_s_1_2_2(or_tmp_700, or_tmp_697, fsm_output(2));
  mux_737_nl <= MUX_s_1_2_2(or_tmp_700, (NOT and_tmp_26), fsm_output(2));
  mux_739_nl <= MUX_s_1_2_2(mux_738_nl, mux_737_nl, fsm_output(0));
  or_838_nl <= (NOT (fsm_output(2))) OR (NOT (fsm_output(3))) OR (fsm_output(4))
      OR (fsm_output(6));
  mux_735_nl <= MUX_s_1_2_2(or_tmp_701, or_tmp_700, fsm_output(2));
  mux_736_nl <= MUX_s_1_2_2(or_838_nl, mux_735_nl, fsm_output(0));
  mux_740_nl <= MUX_s_1_2_2(mux_739_nl, mux_736_nl, fsm_output(1));
  APPLY_ROTARY_POS_EMB_LOOP_6_k_and_3_cse <= input_rsc_clken_d_1 AND (NOT((NOT mux_740_nl)
      AND and_dcpl_460));
  nor_456_cse <= NOT((fsm_output(4)) OR (fsm_output(7)));
  CACHE_UPDATE_LOOP_2_1_j_and_ssc <= input_rsc_clken_d_1 AND (CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c0
      OR CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c1 OR and_dcpl_285 OR CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c3
      OR and_dcpl_249 OR CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c5);
  mux_834_cse <= MUX_s_1_2_2((NOT (fsm_output(6))), (fsm_output(6)), fsm_output(4));
  mux_851_nl <= MUX_s_1_2_2(nor_206_cse, and_610_cse, fsm_output(1));
  LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_and_cse <= input_rsc_clken_d_1 AND (NOT(and_dcpl_298
      AND (NOT(mux_851_nl OR (fsm_output(5))))));
  nor_226_cse <= NOT((fsm_output(5)) OR (fsm_output(2)));
  APPLY_ROTARY_POS_EMB_LOOP_3_mux1h_7_itm_4_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(z_out_35(3
      DOWNTO 1)), 3), 4) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0),
      3), 4), 4));
  APPLY_ROTARY_POS_EMB_LOOP_3_and_ssc <= input_rsc_clken_d_1 AND (APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_mx0c0
      OR and_dcpl_285 OR and_dcpl_493 OR and_dcpl_360);
  APPLY_ROTARY_POS_EMB_LOOP_3_or_2_cse <= and_dcpl_493 OR and_dcpl_360;
  or_968_nl <= (NOT (fsm_output(0))) OR (fsm_output(2));
  mux_850_nl <= MUX_s_1_2_2(or_968_nl, (fsm_output(0)), fsm_output(1));
  nor_527_seb <= NOT(or_tmp_304 OR mux_850_nl OR (fsm_output(5)));
  or_1127_nl <= (fsm_output(0)) OR (NOT (fsm_output(2))) OR (fsm_output(4));
  or_1128_nl <= (NOT (fsm_output(0))) OR (fsm_output(2)) OR (NOT (fsm_output(4)));
  mux_872_nl <= MUX_s_1_2_2(or_1127_nl, or_1128_nl, fsm_output(1));
  CACHE_UPDATE_LOOP_3_k_and_1_cse <= input_rsc_clken_d_1 AND (NOT((NOT(mux_872_nl
      OR (fsm_output(6)))) AND and_dcpl_26 AND and_dcpl_378));
  mux_883_cse <= MUX_s_1_2_2((NOT (fsm_output(4))), (fsm_output(4)), fsm_output(3));
  RESHAPE_2D_TO_3D_LOOP_3_2_and_ssc <= input_rsc_clken_d_1 AND (NOT(and_dcpl_374
      AND nor_tmp AND nor_411_cse));
  nor_500_cse <= NOT((fsm_output(2)) OR (fsm_output(8)));
  LINEAR_FORWARD_NO_MUL_LOOP_2_and_cse <= input_rsc_clken_d_1 AND (NOT(or_dcpl_150
      OR or_550_cse OR or_dcpl_125 OR or_dcpl_120));
  nor_507_cse <= NOT(CONV_SL_1_1(fsm_output(3 DOWNTO 2)/=STD_LOGIC_VECTOR'("01")));
  SF_LOOP_3_acc_88_itm <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(SIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_q_d(19))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(19),
      1),2))),5)), 5), 6) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(SIGNED'(
      (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(18)) & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(18))),4)),
      4), 6), 6));
  or_1031_nl <= (NOT (fsm_output(2))) OR (fsm_output(3)) OR (fsm_output(4)) OR (fsm_output(6));
  mux_911_nl <= MUX_s_1_2_2(or_tmp_701, or_1031_nl, fsm_output(0));
  mux_910_nl <= MUX_s_1_2_2(or_tmp_700, (NOT nor_tmp_90), fsm_output(2));
  or_1030_nl <= (fsm_output(0)) OR mux_910_nl;
  mux_912_nl <= MUX_s_1_2_2(mux_911_nl, or_1030_nl, fsm_output(1));
  and_548_itm <= (NOT mux_912_nl) AND and_dcpl_460;
  and_554_itm <= nor_tmp_174 AND (NOT (fsm_output(8))) AND ((fsm_output(6)) XOR (fsm_output(2)))
      AND nor_tmp AND and_dcpl_117;
  or_197_cse <= (fsm_output(3)) OR (NOT (fsm_output(6)));
  or_196_cse <= (fsm_output(3)) OR (fsm_output(6));
  mux_158_cse <= MUX_s_1_2_2(or_197_cse, or_196_cse, fsm_output(5));
  or_199_cse <= (fsm_output(2)) OR (fsm_output(5)) OR not_tmp_125;
  mux_159_cse <= MUX_s_1_2_2(or_tmp_130, mux_158_cse, fsm_output(2));
  SF_LOOP_3_acc_87_itm <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(19),
      1),4)), 4), 5) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(18),
      1),3)), 3), 5), 5));
  mux_941_nl <= MUX_s_1_2_2(or_199_cse, mux_159_cse, fsm_output(0));
  mux_942_nl <= MUX_s_1_2_2(mux_tmp_933, mux_941_nl, fsm_output(1));
  and_564_itm <= (NOT mux_942_nl) AND and_dcpl_526;
  mux_938_nl <= MUX_s_1_2_2(mux_tmp_928, or_194_cse, fsm_output(2));
  mux_939_nl <= MUX_s_1_2_2(mux_938_nl, mux_159_cse, fsm_output(0));
  mux_940_nl <= MUX_s_1_2_2(mux_tmp_933, mux_939_nl, fsm_output(1));
  nor_529_itm <= NOT(mux_940_nl OR or_tmp_62);
  and_558_itm <= and_dcpl_381 AND and_dcpl_378 AND and_dcpl_216;
  mux_930_nl <= MUX_s_1_2_2(or_194_cse, mux_158_cse, CACHE_UPDATE_LOOP_1_and_cse);
  mux_931_nl <= MUX_s_1_2_2(mux_tmp_928, mux_930_nl, fsm_output(2));
  mux_929_nl <= MUX_s_1_2_2(mux_tmp_928, mux_158_cse, fsm_output(2));
  mux_932_nl <= MUX_s_1_2_2(mux_931_nl, mux_929_nl, fsm_output(0));
  mux_934_nl <= MUX_s_1_2_2(mux_tmp_933, mux_932_nl, fsm_output(1));
  and_561_itm <= (NOT mux_934_nl) AND and_dcpl_526;
  nor_509_nl <= NOT((NOT (fsm_output(0))) OR (fsm_output(3)) OR (NOT (fsm_output(4))));
  mux_923_nl <= MUX_s_1_2_2((fsm_output(3)), or_tmp_28, CACHE_UPDATE_LOOP_1_and_cse);
  mux_924_nl <= MUX_s_1_2_2(mux_883_cse, (NOT mux_923_nl), fsm_output(2));
  nor_510_nl <= NOT((fsm_output(2)) OR (NOT nor_tmp_11));
  mux_925_nl <= MUX_s_1_2_2(mux_924_nl, nor_510_nl, fsm_output(0));
  mux_926_nl <= MUX_s_1_2_2(nor_509_nl, mux_925_nl, fsm_output(1));
  CACHE_UPDATE_LOOP_3_k_nand_1_itm <= NOT(mux_926_nl AND and_dcpl_181 AND and_dcpl_217);
  mux_935_nl <= MUX_s_1_2_2(or_tmp_28, or_1114_cse, fsm_output(0));
  mux_936_nl <= MUX_s_1_2_2(nor_tmp_11, (NOT mux_935_nl), fsm_output(1));
  CACHE_UPDATE_LOOP_3_k_and_ssc <= input_rsc_clken_d_1 AND (NOT(mux_936_nl AND (NOT
      (fsm_output(6))) AND and_dcpl_222));
  SF_LOOP_3_and_2_cse <= input_rsc_clken_d_1 AND (NOT(or_dcpl_158 OR or_dcpl_87));
  SF_LOOP_3_and_4_ssc <= input_rsc_clken_d_1 AND (NOT(or_dcpl_158 OR or_59_cse OR
      nand_181_cse));
  SF_LOOP_3_and_11_ssc <= input_rsc_clken_d_1 AND (NOT(or_dcpl_163 OR or_dcpl_96
      OR or_272_cse));
  SF_LOOP_3_and_12_ssc <= input_rsc_clken_d_1 AND (NOT(or_dcpl_163 OR or_dcpl_121));
  SF_LOOP_3_and_14_ssc <= input_rsc_clken_d_1 AND (NOT(or_dcpl_163 OR or_dcpl_96
      OR or_dcpl_85));
  RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_mux1h_nl <= MUX1HOT_s_1_3_2((attention_abs_1_qr_sva_1(39)),
      QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_39, (attention_abs_3_qr_sva(39)),
      STD_LOGIC_VECTOR'( RMS_NORM_LOOP_2_and_4_ssc_1 & RMS_NORM_LOOP_2_and_1_ssc_1
      & RMS_NORM_LOOP_2_and_6_ssc_1));
  QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_39_mx0w2 <= RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_mux1h_nl
      AND (NOT(RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_nor_ssc_1 OR RMS_NORM_LOOP_2_and_5_ssc_1));
  QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_38_0_mx0w2 <= MUX1HOT_v_39_5_2((input_rsci_q_d(38
      DOWNTO 0)), (attention_abs_1_qr_sva_1(38 DOWNTO 0)), QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_38_0,
      (RMS_NORM_LOOP_2_slc_RMS_NORM_LOOP_2_mul_67_28_ncse_sva(38 DOWNTO 0)), (attention_abs_3_qr_sva(38
      DOWNTO 0)), STD_LOGIC_VECTOR'( RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_nor_ssc_1 &
      RMS_NORM_LOOP_2_and_4_ssc_1 & RMS_NORM_LOOP_2_and_1_ssc_1 & RMS_NORM_LOOP_2_and_5_ssc_1
      & RMS_NORM_LOOP_2_and_6_ssc_1));
  RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_mux1h_nl <= MUX1HOT_s_1_3_2((attention_abs_5_qr_sva_1(39)),
      QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_39, (attention_abs_7_qr_sva(39)),
      STD_LOGIC_VECTOR'( RMS_NORM_LOOP_2_2_and_4_ssc_1 & RMS_NORM_LOOP_2_2_and_1_ssc_1
      & RMS_NORM_LOOP_2_2_and_6_ssc_1));
  QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_39_mx0w2 <= RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_mux1h_nl
      AND (NOT(RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_nor_ssc_1 OR RMS_NORM_LOOP_2_2_and_5_ssc_1));
  QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_38_0_mx0w2 <= MUX1HOT_v_39_5_2((attention_5_1_384_384_8_48_attn_output_2D_rsci_q_d(38
      DOWNTO 0)), (attention_abs_5_qr_sva_1(38 DOWNTO 0)), QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_38_0,
      (RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_slc_71_32_1_ncse_sva(38 DOWNTO 0)), (attention_abs_7_qr_sva(38
      DOWNTO 0)), STD_LOGIC_VECTOR'( RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_nor_ssc_1
      & RMS_NORM_LOOP_2_2_and_4_ssc_1 & RMS_NORM_LOOP_2_2_and_1_ssc_1 & RMS_NORM_LOOP_2_2_and_5_ssc_1
      & RMS_NORM_LOOP_2_2_and_6_ssc_1));
  compute_sqrt_1_for_acc_1_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(RMS_NORM_LOOP_2_2_dfr_sva_9
      & RMS_NORM_LOOP_2_2_dfr_sva_8_0 & compute_sqrt_1_guess_sva_29_0), 40), 41)
      + CONV_SIGNED(CONV_SIGNED(SIGNED(RMS_NORM_LOOP_2_mul_1_itm(39 DOWNTO 0)), 40),
      41), 41));
  compute_sqrt_1_for_acc_1_itm_40_1_1 <= compute_sqrt_1_for_acc_1_nl(40 DOWNTO 1);
  attention_round_1_qelse_attention_round_1_qelse_nor_cse <= NOT(CONV_SL_1_1(RMS_NORM_LOOP_2_mul_1_itm(38
      DOWNTO 31)/=STD_LOGIC_VECTOR'("00000000")));
  attention_round_1_qif_and_cse <= CONV_SL_1_1(RMS_NORM_LOOP_2_mul_1_itm(38 DOWNTO
      31)=STD_LOGIC_VECTOR'("11111111"));
  attention_round_1_qelse_acc_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(attention_round_1_qelse_attention_round_1_qelse_nor_cse,
      1), 1), 17) + SIGNED(reg_attention_round_a_cse_slc & (RMS_NORM_LOOP_2_mul_1_itm(51
      DOWNTO 39))), 17));
  attention_round_1_qif_acc_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_attention_round_a_cse_slc(2
      DOWNTO 0)) & (RMS_NORM_LOOP_2_mul_1_itm(51 DOWNTO 39))), 16), 17) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_round_1_qif_and_cse,
      1), 1), 17), 17));
  attention_round_1_acc_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED((NOT
      reg_attention_round_a_cse_slc) & (NOT (RMS_NORM_LOOP_2_mul_1_itm(51 DOWNTO
      16)))), 40), 41) + UNSIGNED'( "00000000000000000000000000000000000000001"),
      41));
  attention_round_1_mux_nl <= MUX_v_17_2_2(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(attention_round_1_qelse_acc_nl),
      17)), STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(attention_round_1_qif_acc_nl), 17)),
      attention_round_1_acc_nl(40));
  QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED('1'
      & STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(attention_round_1_mux_nl),25))) + UNSIGNED'(
      "00000000000000000000000001"), 26));
  QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_itm_25_1 <= QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_nl(25);
  attention_round_qelse_acc_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(attention_round_1_qelse_attention_round_1_qelse_nor_cse,
      1), 1), 17) + SIGNED(reg_attention_round_a_cse_slc & (RMS_NORM_LOOP_2_mul_1_itm(51
      DOWNTO 39))), 17));
  attention_round_qif_acc_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_attention_round_a_cse_slc(2
      DOWNTO 0)) & (RMS_NORM_LOOP_2_mul_1_itm(51 DOWNTO 39))), 16), 17) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_round_1_qif_and_cse,
      1), 1), 17), 17));
  attention_round_acc_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED((NOT
      reg_attention_round_a_cse_slc) & (NOT (RMS_NORM_LOOP_2_mul_1_itm(51 DOWNTO
      16)))), 40), 41) + UNSIGNED'( "00000000000000000000000000000000000000001"),
      41));
  attention_round_mux_nl <= MUX_v_17_2_2(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(attention_round_qelse_acc_nl),
      17)), STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(attention_round_qif_acc_nl), 17)),
      attention_round_acc_nl(40));
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_acc_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED('1'
      & STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(attention_round_mux_nl),25))) + UNSIGNED'(
      "00000000000000000000000001"), 26));
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_acc_itm_25_1 <= QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_acc_nl(25);
  nand_170_cse <= NOT(CONV_SL_1_1(RMS_NORM_LOOP_2_2_dfr_sva_8_0=STD_LOGIC_VECTOR'("111111111"))
      AND RMS_NORM_LOOP_2_2_dfr_sva_9);
  nand_1_cse <= NOT((fsm_output(5)) AND (NOT nor_tmp_11));
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_acc_22_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0),
      3), 4) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(reg_CACHE_UPDATE_LOOP_3_k_5_0_1_ftd
      & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1), 3), 4), 4));
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_acc_15_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(reg_CACHE_UPDATE_LOOP_3_k_5_0_1_ftd
      & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1 & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_0
      & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd),
      2), 6), 6));
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_acc_17_sdt_mx0w5 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(TRANSPOSE_LAST_TWO_DIMS_LOOP_3_acc_22_nl),
      4)) & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_0 & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1
      & '0'), 8), 9) + CONV_UNSIGNED(UNSIGNED(TRANSPOSE_LAST_TWO_DIMS_LOOP_3_acc_15_nl),
      9), 9));
  LINEAR_FORWARD_NO_MUL_LOOP_5_1_LINEAR_FORWARD_NO_MUL_LOOP_5_1_and_3_cse <= CONV_SL_1_1(CACHE_UPDATE_LOOP_3_k_5_0_sva_1_1_0=STD_LOGIC_VECTOR'("10"));
  LINEAR_FORWARD_NO_MUL_LOOP_5_LINEAR_FORWARD_NO_MUL_LOOP_5_and_1_tmp <= CONV_SL_1_1(LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_slc_LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_conc_1_1_1_0_svs=STD_LOGIC_VECTOR'("10"));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_3_psp_sva_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED(z_out_4(1
      DOWNTO 0)), 2), 3) + CONV_UNSIGNED(CONV_SIGNED(SIGNED(z_out_19(5 DOWNTO 4)),
      2), 3) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (z_out_19(3)), 1), 1),
      3), 3));
  attention_abs_qif_acc_pmx_lpi_1_dfm_mx0w0 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(NOT
      (rms_norm_384_val_acc_psp_sva_1(30 DOWNTO 0))) + UNSIGNED'( "0000000000000000000000000000001"),
      31));
  attention_abs_qif_acc_pmx_lpi_1_dfm_mx1_30_1 <= MUX_v_30_2_2((rms_norm_384_val_acc_psp_sva_1(30
      DOWNTO 1)), (attention_abs_qif_acc_pmx_lpi_1_dfm_mx0w0(30 DOWNTO 1)), rms_norm_384_val_acc_psp_sva_1(31));
  rms_norm_384_val_acc_psp_sva_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36),
      1),2))) + CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_52_itm),
      31), 32) + CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_51_itm),
      30), 32), 32));
  compute_sqrt_for_acc_1_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(RMS_NORM_LOOP_2_2_dfr_sva_9
      & RMS_NORM_LOOP_2_2_dfr_sva_8_0 & compute_sqrt_guess_sva_29_0), 40), 41) +
      CONV_SIGNED(CONV_SIGNED(SIGNED(RMS_NORM_LOOP_2_mul_1_itm(39 DOWNTO 0)), 40),
      41), 41));
  compute_sqrt_for_acc_1_itm_40_1_1 <= compute_sqrt_for_acc_1_nl(40 DOWNTO 1);
  attention_max_attn_fixed_t_attention_max_attn_fixed_t_and_mut_mx0w2_39 <= QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_dfm_1_39
      AND attention_max_attn_fixed_t_acc_itm_40_1;
  attention_max_attn_fixed_t_attention_max_attn_fixed_t_and_mut_mx0w2_38_0 <= MUX_v_39_2_2(STD_LOGIC_VECTOR'("000000000000000000000000000000000000000"),
      QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_dfm_1_38_0, attention_max_attn_fixed_t_acc_itm_40_1);
  attention_max_attn_fixed_t_1_conc_psp_mx0w11_39 <= QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_dfm_1_39
      AND attention_max_attn_fixed_t_1_acc_itm_40_1;
  attention_max_attn_fixed_t_1_conc_psp_mx0w11_38_0 <= MUX_v_39_2_2(STD_LOGIC_VECTOR'("000000000000000000000000000000000000000"),
      QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_dfm_1_38_0, attention_max_attn_fixed_t_1_acc_itm_40_1);
  exit_QUANTIZE_ACTIVATION_LOOP_2_1_sva_dfm_mx0w0 <= (NOT z_out_29_2) AND nand_170_cse;
  attention_abs_2_mux_2 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(NOT
      (RMS_NORM_LOOP_2_slc_RMS_NORM_LOOP_2_mul_67_28_ncse_sva(38 DOWNTO 0))), 39),
      40) + SIGNED'( "0000000000000000000000000000000000000001"), 40));
  attention_abs_1_qr_sva_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(NOT
      (input_rsci_q_d(38 DOWNTO 0))), 39), 40) + SIGNED'( "0000000000000000000000000000000000000001"),
      40));
  RMS_NORM_LOOP_2_and_4_ssc_1 <= (input_rsci_q_d(39)) AND (NOT CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm);
  RMS_NORM_LOOP_2_and_1_ssc_1 <= (NOT QUANTIZE_ACTIVATION_LOOP_2_slc_40_1_svs) AND
      CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm;
  RMS_NORM_LOOP_2_and_6_ssc_1 <= (RMS_NORM_LOOP_2_slc_RMS_NORM_LOOP_2_mul_67_28_ncse_sva(39))
      AND RMS_NORM_LOOP_2_and_2_tmp;
  RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_nor_ssc_1 <= NOT((input_rsci_q_d(39)) OR CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm);
  RMS_NORM_LOOP_2_and_5_ssc_1 <= (NOT (RMS_NORM_LOOP_2_slc_RMS_NORM_LOOP_2_mul_67_28_ncse_sva(39)))
      AND RMS_NORM_LOOP_2_and_2_tmp;
  RMS_NORM_LOOP_2_and_2_tmp <= QUANTIZE_ACTIVATION_LOOP_2_slc_40_1_svs AND CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm;
  attention_max_attn_fixed_t_acc_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED((NOT
      QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_dfm_1_39) & (NOT QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_dfm_1_38_0)),
      40), 41) + UNSIGNED'( "00000000000000000000000000000000000000001"), 41));
  attention_max_attn_fixed_t_acc_itm_40_1 <= attention_max_attn_fixed_t_acc_nl(40);
  LINEAR_FORWARD_NO_MUL_LOOP_3_2_ko_2_0_sva_1_mx0w2 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd
      & reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1) + SIGNED'( "001"), 3));
  QUANTIZE_ACTIVATION_LOOP_3_jo_2_0_sva_3 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva)
      + SIGNED'( "001"), 3));
  nor_252_cse <= NOT((fsm_output(4)) OR (fsm_output(6)));
  RESHAPE_2D_TO_3D_LOOP_3_1_k_5_0_sva_2 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva)
      + SIGNED'( "000001"), 6));
  SF_LOOP_3_acc_61_cse_mx0w4 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(27),
      1), 1), 3) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(28),
      1),2)), 2), 3), 3));
  LINEAR_FORWARD_NO_MUL_LOOP_3_ko_2_0_sva_2 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0)
      + SIGNED'( "001"), 3));
  APPLY_ROTARY_POS_EMB_LOOP_3_acc_30_psp_sva_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1),
      2), 3) + UNSIGNED'( "011"), 3));
  SF_LOOP_3_acc_63_cse_mx0w6 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(27),
      1),2)), 2), 4) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(28),
      1),3)), 3), 4), 4));
  LINEAR_FORWARD_NO_MUL_LOOP_5_3_weight_val_mux_tmp <= MUX_v_2_4_2((LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_sva(1
      DOWNTO 0)), (LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_sva(3 DOWNTO 2)), (LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_sva(5
      DOWNTO 4)), (LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_sva(7 DOWNTO 6)), APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0);
  RESHAPE_2D_TO_3D_LOOP_3_k_5_0_sva_2 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(reg_CACHE_UPDATE_LOOP_3_k_5_0_1_ftd
      & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1 & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_0
      & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1) + SIGNED'( "000001"), 6));
  LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_mux_tmp <= MUX_v_2_4_2((LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_sva(1
      DOWNTO 0)), (LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_sva(3 DOWNTO 2)), (LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_sva(5
      DOWNTO 4)), (LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_sva(7 DOWNTO 6)), CACHE_UPDATE_LOOP_3_k_5_0_sva_1_1_0);
  APPLY_ROTARY_POS_EMB_LOOP_3_k_4_0_sva_2 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1
      & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_0 & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1)
      + SIGNED'( "00001"), 5));
  LINEAR_FORWARD_NO_MUL_LOOP_5_2_LINEAR_FORWARD_NO_MUL_LOOP_5_2_and_1_cse_1 <= CONV_SL_1_1(LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_slc_LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_conc_1_1_1_0_svs=STD_LOGIC_VECTOR'("10"));
  LINEAR_FORWARD_NO_MUL_LOOP_4_ki_4_0_sva_2 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(LINEAR_FORWARD_NO_MUL_LOOP_4_ki_4_0_sva_3_0),
      4), 5) + SIGNED'( "00001"), 5));
  LINEAR_FORWARD_NO_MUL_LOOP_4_2_ki_4_0_sva_2 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp_4),
      4), 5) + SIGNED'( "00001"), 5));
  RESHAPE_2D_TO_3D_LOOP_3_acc_11_psp_1_mx0w0 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(z_out_35(3
      DOWNTO 1)), 3), 4) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0),
      3), 4), 4));
  GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0),
      3), 4) + SIGNED'( "0001"), 4));
  APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0),
      3), 4) + SIGNED'( "0001"), 4));
  APPLY_ROTARY_POS_EMB_LOOP_6_cosval_APPLY_ROTARY_POS_EMB_LOOP_6_cosval_conc_2_9_5
      <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(STD_LOGIC_VECTOR'(
      "111") & (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(5))), 4), 5) + UNSIGNED'( "00001"),
      5));
  CACHE_UPDATE_LOOP_3_qif_acc_4_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED('1'
      & (NOT APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0)), 4), 5) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva
      & '1'), 4), 5), 5));
  CACHE_UPDATE_LOOP_3_qif_acc_5_sdt_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SIGNED(CACHE_UPDATE_LOOP_3_qif_acc_4_nl),
      6) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(z_out_34_2_0), 3), 6), 6));
  CACHE_UPDATE_LOOP_3_1_qif_acc_4_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED('1'
      & (NOT GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0)), 4), 5) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd
      & reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1 & '1'), 4), 5), 5));
  CACHE_UPDATE_LOOP_3_1_qif_acc_5_sdt_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SIGNED(CACHE_UPDATE_LOOP_3_1_qif_acc_4_nl),
      6) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(z_out_36_2_0), 3), 6), 6));
  GEMM_3D_FLOAT_LOOP_4_acc_19_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0),
      3), 4) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(5
      DOWNTO 3)), 3), 4), 4));
  GEMM_3D_FLOAT_LOOP_4_acc_15_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva)
      + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd),
      2), 6), 6));
  GEMM_3D_FLOAT_LOOP_4_acc_17_sdt_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_4_acc_19_nl),
      4)) & (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(2 DOWNTO 0)) & '0'), 8), 9) +
      CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_4_acc_15_nl), 9), 9));
  SF_LOOP_3_acc_64_ncse_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(29),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(36),
      1), 1), 2), 2));
  SF_LOOP_3_mul_8_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED'( UNSIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(4
      DOWNTO 3)) * UNSIGNED'( "1000100100110001")), 17));
  SF_LOOP_3_acc_11_itm_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd
      & STD_LOGIC_VECTOR'( "000") & reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd & STD_LOGIC_VECTOR'(
      "000") & reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd & STD_LOGIC_VECTOR'( "00") &
      reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd & STD_LOGIC_VECTOR'( "00") & reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd
      & '0' & reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd), 17), 18) + CONV_SIGNED(UNSIGNED(SF_LOOP_3_mul_8_nl),
      18), 18));
  SF_LOOP_3_mul_15_itm_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED'( UNSIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(34
      DOWNTO 33)) * UNSIGNED'( "1001110000100111")), 17));
  SF_LOOP_3_acc_32_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_mul_12_itm_16_15
      & STD_LOGIC_VECTOR'( "00") & SF_LOOP_3_mul_19_itm_12_11 & '0' & SF_LOOP_3_mul_19_itm_9_4
      & STD_LOGIC_VECTOR'( "00") & (SF_LOOP_3_mul_12_itm_3_0(1 DOWNTO 0))), 17),
      18) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_5_psp_sva(16 DOWNTO
      0)), 17), 18), 18));
  SF_LOOP_3_acc_34_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(UNSIGNED(SF_LOOP_3_acc_32_nl),
      19) + CONV_SIGNED(CONV_SIGNED(SIGNED((SF_LOOP_3_acc_5_psp_sva(17)) & '0' &
      (SF_LOOP_3_acc_5_psp_sva(17)) & STD_LOGIC_VECTOR'( "000") & (SF_LOOP_3_acc_5_psp_sva(17))
      & STD_LOGIC_VECTOR'( "00") & (SF_LOOP_3_acc_5_psp_sva(17)) & STD_LOGIC_VECTOR'(
      "00") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SF_LOOP_3_acc_5_psp_sva(17),
      1),2)) & STD_LOGIC_VECTOR'( "000") & (SF_LOOP_3_acc_5_psp_sva(17))), 18), 19),
      19));
  SF_LOOP_3_acc_6_psp_sva_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(SIGNED(SF_LOOP_3_acc_34_nl),
      19) + UNSIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0 & (SF_LOOP_3_acc_5_psp_sva(21
      DOWNTO 20)) & LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_slc_LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_conc_1_1_1_0_svs
      & RESHAPE_2D_TO_3D_LOOP_3_2_mux_3_itm_2_0 & RESHAPE_2D_TO_3D_LOOP_3_acc_11_psp_1
      & (SF_LOOP_3_acc_5_psp_sva(20)) & (SF_LOOP_3_acc_5_psp_sva(20)) & SF_LOOP_3_acc_93_psp),
      19));
  SF_LOOP_3_acc_7_psp_sva_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_35_itm)
      + UNSIGNED((SF_LOOP_3_acc_6_psp_sva_18_17(0)) & '0' & (SF_LOOP_3_acc_6_psp_sva_18_17(0))
      & STD_LOGIC_VECTOR'( "000") & (SF_LOOP_3_acc_6_psp_sva_18_17(0)) & STD_LOGIC_VECTOR'(
      "00") & (SF_LOOP_3_acc_6_psp_sva_18_17(0)) & STD_LOGIC_VECTOR'( "00") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SF_LOOP_3_acc_6_psp_sva_18_17(0),
      1),2)) & STD_LOGIC_VECTOR'( "000") & (SF_LOOP_3_acc_6_psp_sva_18_17(0))), 18));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_3_psp_sva_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED(z_out_4(1
      DOWNTO 0)), 2), 3) + CONV_UNSIGNED(CONV_SIGNED(SIGNED(z_out_19(5 DOWNTO 4)),
      2), 3) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (z_out_19(3)), 1), 1),
      3), 3));
  attention_abs_4_qif_acc_pmx_lpi_1_dfm_mx0w0 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(NOT
      (rms_norm_384_1_val_acc_psp_sva_1(30 DOWNTO 0))) + UNSIGNED'( "0000000000000000000000000000001"),
      31));
  attention_abs_4_qif_acc_pmx_lpi_1_dfm_mx1_30_1 <= MUX_v_30_2_2((rms_norm_384_1_val_acc_psp_sva_1(30
      DOWNTO 1)), (attention_abs_4_qif_acc_pmx_lpi_1_dfm_mx0w0(30 DOWNTO 1)), rms_norm_384_1_val_acc_psp_sva_1(31));
  rms_norm_384_1_val_acc_psp_sva_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36),
      1),2))) + CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_52_itm),
      31), 32) + CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_51_itm),
      30), 32), 32));
  attention_abs_6_mux_2 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(NOT
      (RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_slc_71_32_1_ncse_sva(38 DOWNTO 0))), 39),
      40) + SIGNED'( "0000000000000000000000000000000000000001"), 40));
  attention_abs_5_qr_sva_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(NOT
      (attention_5_1_384_384_8_48_attn_output_2D_rsci_q_d(38 DOWNTO 0))), 39), 40)
      + SIGNED'( "0000000000000000000000000000000000000001"), 40));
  RMS_NORM_LOOP_2_2_and_4_ssc_1 <= (attention_5_1_384_384_8_48_attn_output_2D_rsci_q_d(39))
      AND (NOT CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm);
  RMS_NORM_LOOP_2_2_and_1_ssc_1 <= (NOT QUANTIZE_ACTIVATION_LOOP_2_1_slc_40_1_svs)
      AND CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm;
  RMS_NORM_LOOP_2_2_and_6_ssc_1 <= (RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_slc_71_32_1_ncse_sva(39))
      AND RMS_NORM_LOOP_2_2_and_2_tmp;
  RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_nor_ssc_1 <= NOT((attention_5_1_384_384_8_48_attn_output_2D_rsci_q_d(39))
      OR CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm);
  RMS_NORM_LOOP_2_2_and_5_ssc_1 <= (NOT (RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_slc_71_32_1_ncse_sva(39)))
      AND RMS_NORM_LOOP_2_2_and_2_tmp;
  RMS_NORM_LOOP_2_2_and_2_tmp <= QUANTIZE_ACTIVATION_LOOP_2_1_slc_40_1_svs AND CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm;
  attention_max_attn_fixed_t_1_acc_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED((NOT
      QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_dfm_1_39) & (NOT QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_dfm_1_38_0)),
      40), 41) + UNSIGNED'( "00000000000000000000000000000000000000001"), 41));
  attention_max_attn_fixed_t_1_acc_itm_40_1 <= attention_max_attn_fixed_t_1_acc_nl(40);
  INIT_2D_MEM_LOOP_2_3_INIT_2D_MEM_LOOP_2_3_nor_itm_1 <= NOT(CONV_SL_1_1(SF_LOOP_3_acc_17_itm_8_0/=STD_LOGIC_VECTOR'("000000000")));
  LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_acc_2_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva
      & APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(INIT_2D_MEM_LOOP_2_2_acc_itm(8
      DOWNTO 7)), 2), 7), 7));
  LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_conc_2_15_7
      <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_acc_2_nl),
      9) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva
      & APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt & '0'), 8), 9), 9));
  RMS_NORM_LOOP_1_1_acc_3_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED('1' & (z_out_14(8
      DOWNTO 7))) + SIGNED'( "001"), 3));
  RMS_NORM_LOOP_1_1_acc_3_itm_2_1 <= RMS_NORM_LOOP_1_1_acc_3_nl(2);
  SOFTMAX_LOOP_3_acc_3_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED(INIT_2D_MEM_LOOP_2_1_asn_psp),
      40), 41) - CONV_UNSIGNED(CONV_SIGNED(SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d),
      40), 41), 41));
  SOFTMAX_LOOP_3_acc_3_itm_40_1 <= SOFTMAX_LOOP_3_acc_3_nl(40);
  CACHE_UPDATE_LOOP_1_and_cse <= (APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2(3)) AND
      (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2(3));
  nor_tmp <= (fsm_output(3)) AND (fsm_output(5));
  or_tmp_28 <= CONV_SL_1_1(fsm_output(4 DOWNTO 3)/=STD_LOGIC_VECTOR'("10"));
  and_dcpl_7 <= CONV_SL_1_1(fsm_output(1 DOWNTO 0)=STD_LOGIC_VECTOR'("01"));
  and_dcpl_8 <= (fsm_output(3)) AND (NOT (fsm_output(5)));
  nor_tmp_11 <= CONV_SL_1_1(fsm_output(4 DOWNTO 3)=STD_LOGIC_VECTOR'("11"));
  and_582_cse <= CONV_SL_1_1(fsm_output(3 DOWNTO 2)=STD_LOGIC_VECTOR'("11"));
  or_59_cse <= (NOT (fsm_output(2))) OR (fsm_output(5));
  and_584_cse <= (fsm_output(2)) AND (fsm_output(5));
  or_tmp_62 <= (fsm_output(4)) OR (fsm_output(8)) OR (NOT (fsm_output(7)));
  or_tmp_63 <= (fsm_output(3)) OR (NOT (fsm_output(4))) OR (NOT (fsm_output(8)))
      OR (fsm_output(7));
  and_dcpl_26 <= CONV_SL_1_1(fsm_output(8 DOWNTO 7)=STD_LOGIC_VECTOR'("01"));
  and_dcpl_27 <= and_dcpl_26 AND (fsm_output(6));
  and_dcpl_36 <= (NOT (fsm_output(8))) AND (fsm_output(6));
  nor_206_cse <= NOT((fsm_output(0)) OR (fsm_output(2)));
  mux_95_nl <= MUX_s_1_2_2((fsm_output(8)), (NOT (fsm_output(8))), fsm_output(7));
  nand_2_cse <= NOT((fsm_output(4)) AND mux_95_nl);
  not_tmp_125 <= NOT((fsm_output(3)) AND (fsm_output(6)));
  or_tmp_130 <= (fsm_output(5)) OR not_tmp_125;
  or_194_cse <= (fsm_output(5)) OR (fsm_output(3)) OR (NOT (fsm_output(6)));
  or_213_cse <= (fsm_output(4)) OR (NOT (fsm_output(7)));
  mux_tmp_220 <= MUX_s_1_2_2((NOT nor_tmp_11), (fsm_output(4)), fsm_output(5));
  or_tmp_178 <= CONV_SL_1_1(fsm_output(5 DOWNTO 4)/=STD_LOGIC_VECTOR'("10"));
  and_dcpl_80 <= CONV_SL_1_1(fsm_output(8 DOWNTO 7)=STD_LOGIC_VECTOR'("10"));
  mux_tmp_241 <= MUX_s_1_2_2((NOT nor_tmp_11), or_1114_cse, fsm_output(5));
  and_dcpl_100 <= nor_226_cse AND nor_413_cse;
  and_dcpl_101 <= NOT((fsm_output(8)) OR (fsm_output(3)));
  and_dcpl_103 <= nor_252_cse AND (NOT (fsm_output(7)));
  and_dcpl_104 <= and_dcpl_103 AND and_dcpl_101;
  and_dcpl_106 <= NOT(CONV_SL_1_1(fsm_output(7 DOWNTO 6)/=STD_LOGIC_VECTOR'("00")));
  and_dcpl_107 <= and_dcpl_106 AND (NOT (fsm_output(8)));
  and_dcpl_111 <= and_584_cse AND and_706_cse;
  and_dcpl_112 <= (NOT (fsm_output(8))) AND (fsm_output(3));
  and_dcpl_113 <= (NOT (fsm_output(6))) AND (fsm_output(4));
  and_dcpl_114 <= and_dcpl_113 AND (NOT (fsm_output(7)));
  and_dcpl_115 <= and_dcpl_114 AND and_dcpl_112;
  or_tmp_210 <= (fsm_output(7)) OR (fsm_output(4)) OR (fsm_output(6));
  and_tmp_15 <= (fsm_output(8)) AND or_tmp_210;
  or_tmp_211 <= CONV_SL_1_1(fsm_output(7 DOWNTO 6)/=STD_LOGIC_VECTOR'("00"));
  and_tmp_16 <= (fsm_output(8)) AND or_tmp_211;
  mux_tmp_266 <= MUX_s_1_2_2(and_tmp_16, and_tmp_15, fsm_output(5));
  and_dcpl_117 <= CONV_SL_1_1(fsm_output(1 DOWNTO 0)=STD_LOGIC_VECTOR'("10"));
  and_dcpl_118 <= (fsm_output(5)) AND (NOT (fsm_output(2)));
  and_dcpl_119 <= and_dcpl_118 AND and_dcpl_117;
  and_dcpl_120 <= (fsm_output(8)) AND (NOT (fsm_output(3)));
  and_dcpl_121 <= and_dcpl_114 AND and_dcpl_120;
  or_dcpl_85 <= CONV_SL_1_1(fsm_output(1 DOWNTO 0)/=STD_LOGIC_VECTOR'("10"));
  or_dcpl_87 <= or_59_cse OR or_dcpl_85;
  or_dcpl_88 <= (NOT (fsm_output(8))) OR (fsm_output(3));
  or_dcpl_89 <= (fsm_output(6)) OR (fsm_output(4));
  or_dcpl_90 <= or_dcpl_89 OR (NOT (fsm_output(7)));
  or_dcpl_91 <= or_dcpl_90 OR or_dcpl_88;
  mux_tmp_283 <= MUX_s_1_2_2(or_800_cse, or_798_cse, fsm_output(3));
  and_dcpl_125 <= (NOT (fsm_output(5))) AND (fsm_output(2));
  and_dcpl_126 <= and_dcpl_125 AND and_706_cse;
  and_dcpl_127 <= nor_252_cse AND (fsm_output(7));
  and_dcpl_128 <= and_dcpl_127 AND and_dcpl_120;
  and_dcpl_131 <= and_dcpl_106 AND nor_434_cse;
  mux_279_nl <= MUX_s_1_2_2(or_tmp_28, mux_883_cse, fsm_output(2));
  or_43_nl <= CONV_SL_1_1(fsm_output(4 DOWNTO 3)/=STD_LOGIC_VECTOR'("01"));
  mux_277_nl <= MUX_s_1_2_2(mux_883_cse, or_43_nl, and_610_cse);
  mux_290_itm <= MUX_s_1_2_2(mux_279_nl, mux_277_nl, fsm_output(1));
  and_dcpl_134 <= nor_226_cse AND and_dcpl_7;
  and_dcpl_137 <= (fsm_output(6)) AND (NOT (fsm_output(4)));
  and_dcpl_138 <= and_dcpl_137 AND (NOT (fsm_output(7)));
  and_dcpl_139 <= and_dcpl_138 AND and_dcpl_101;
  and_dcpl_140 <= and_dcpl_139 AND and_dcpl_100;
  nor_290_nl <= NOT((fsm_output(0)) OR (fsm_output(2)) OR (fsm_output(3)));
  mux_291_nl <= MUX_s_1_2_2(nor_290_nl, and_582_cse, fsm_output(1));
  and_dcpl_144 <= (NOT mux_291_nl) AND (fsm_output(6)) AND nor_456_cse AND nor_434_cse;
  and_dcpl_145 <= (fsm_output(8)) AND (NOT (fsm_output(5)));
  and_dcpl_146 <= and_dcpl_106 AND and_dcpl_145;
  or_tmp_225 <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)/=STD_LOGIC_VECTOR'("001"));
  or_322_nl <= ((fsm_output(8)) AND (fsm_output(6))) OR (fsm_output(7));
  mux_297_nl <= MUX_s_1_2_2(or_tmp_225, or_322_nl, fsm_output(3));
  or_321_nl <= (fsm_output(3)) OR (fsm_output(6)) OR (fsm_output(7));
  mux_tmp_298 <= MUX_s_1_2_2(mux_297_nl, or_321_nl, fsm_output(4));
  and_dcpl_152 <= and_dcpl_115 AND and_dcpl_134;
  and_dcpl_154 <= and_dcpl_114 AND and_768_cse AND and_dcpl_134;
  and_dcpl_155 <= and_dcpl_139 AND and_dcpl_119;
  or_tmp_231 <= CONV_SL_1_1(fsm_output(7 DOWNTO 5)/=STD_LOGIC_VECTOR'("011"));
  nor_tmp_79 <= (fsm_output(4)) AND (fsm_output(6));
  or_tmp_233 <= (fsm_output(7)) OR (NOT nor_tmp_79);
  mux_tmp_303 <= MUX_s_1_2_2(or_tmp_233, or_319_cse, fsm_output(3));
  nand_tmp_14 <= NOT((fsm_output(5)) AND (NOT mux_tmp_303));
  mux_tmp_305 <= MUX_s_1_2_2(nand_tmp_14, or_tmp_231, fsm_output(2));
  or_tmp_234 <= (fsm_output(3)) OR (NOT (fsm_output(7))) OR (fsm_output(4)) OR (fsm_output(6));
  mux_tmp_306 <= MUX_s_1_2_2(or_tmp_234, mux_tmp_303, fsm_output(5));
  mux_tmp_307 <= MUX_s_1_2_2(mux_tmp_306, or_tmp_231, fsm_output(2));
  mux_tmp_308 <= MUX_s_1_2_2(mux_tmp_307, mux_tmp_305, fsm_output(0));
  mux_304_nl <= MUX_s_1_2_2(nand_tmp_14, or_tmp_231, or_44_cse);
  mux_309_nl <= MUX_s_1_2_2(mux_tmp_308, mux_304_nl, fsm_output(1));
  and_dcpl_156 <= NOT(mux_309_nl OR (fsm_output(8)));
  or_tmp_236 <= (NOT((fsm_output(8)) OR (NOT (fsm_output(1))))) OR CONV_SL_1_1(fsm_output(4
      DOWNTO 2)/=STD_LOGIC_VECTOR'("000"));
  and_dcpl_157 <= and_584_cse AND nor_413_cse;
  and_dcpl_161 <= and_dcpl_125 AND and_dcpl_7;
  and_dcpl_162 <= nor_tmp_79 AND (fsm_output(7));
  and_dcpl_163 <= and_dcpl_162 AND and_dcpl_112;
  and_dcpl_165 <= CONV_SL_1_1(fsm_output(7 DOWNTO 6)=STD_LOGIC_VECTOR'("11"));
  and_dcpl_166 <= and_dcpl_165 AND (NOT (fsm_output(8)));
  and_dcpl_168 <= and_dcpl_106 AND (fsm_output(8));
  mux_tmp_319 <= MUX_s_1_2_2(mux_tmp_220, mux_tmp_241, fsm_output(2));
  mux_tmp_320 <= MUX_s_1_2_2(or_tmp_178, mux_tmp_241, fsm_output(2));
  mux_322_nl <= MUX_s_1_2_2(mux_tmp_308, or_tmp_231, fsm_output(1));
  and_dcpl_170 <= NOT(mux_322_nl OR (fsm_output(8)));
  and_dcpl_171 <= and_dcpl_118 AND and_706_cse;
  and_dcpl_172 <= and_dcpl_121 AND and_dcpl_171;
  or_tmp_242 <= (NOT (fsm_output(4))) OR (fsm_output(6));
  or_tmp_243 <= (fsm_output(4)) OR (NOT (fsm_output(6)));
  mux_tmp_323 <= MUX_s_1_2_2(or_tmp_243, or_tmp_242, fsm_output(5));
  or_tmp_244 <= (NOT (fsm_output(3))) OR (NOT (fsm_output(4))) OR (fsm_output(6));
  and_dcpl_178 <= and_dcpl_125 AND and_dcpl_117;
  or_dcpl_96 <= (fsm_output(5)) OR (fsm_output(2));
  mux_tmp_334 <= MUX_s_1_2_2((NOT nor_tmp_11), nor_tmp_11, fsm_output(5));
  and_dcpl_181 <= CONV_SL_1_1(fsm_output(7 DOWNTO 6)=STD_LOGIC_VECTOR'("10"));
  and_dcpl_183 <= (or_1114_cse OR (fsm_output(2)) OR or_272_cse) AND and_dcpl_181
      AND nor_434_cse;
  and_dcpl_185 <= and_dcpl_127 AND and_dcpl_112;
  and_dcpl_186 <= and_dcpl_185 AND and_dcpl_157;
  and_dcpl_190 <= and_dcpl_118 AND nor_413_cse;
  and_dcpl_191 <= and_dcpl_185 AND and_dcpl_190;
  and_dcpl_192 <= and_dcpl_118 AND and_dcpl_7;
  and_dcpl_193 <= and_dcpl_185 AND and_dcpl_192;
  and_dcpl_198 <= nor_tmp_79 AND (NOT (fsm_output(7)));
  and_dcpl_201 <= and_dcpl_198 AND and_dcpl_120;
  and_dcpl_204 <= CONV_SL_1_1(fsm_output(5 DOWNTO 4)=STD_LOGIC_VECTOR'("11"));
  and_dcpl_207 <= and_584_cse AND and_dcpl_7;
  and_dcpl_209 <= and_dcpl_121 AND and_dcpl_190;
  and_dcpl_210 <= and_dcpl_103 AND and_dcpl_120;
  and_dcpl_211 <= and_dcpl_210 AND and_dcpl_100;
  and_dcpl_212 <= and_dcpl_103 AND and_768_cse;
  and_dcpl_213 <= and_dcpl_212 AND and_dcpl_207;
  and_dcpl_214 <= nor_226_cse AND and_706_cse;
  and_dcpl_216 <= CONV_SL_1_1(fsm_output(2 DOWNTO 1)=STD_LOGIC_VECTOR'("10"));
  and_dcpl_217 <= (NOT (fsm_output(8))) AND (fsm_output(5));
  and_dcpl_222 <= and_dcpl_26 AND and_dcpl_118;
  or_tmp_265 <= (fsm_output(0)) OR (NOT (fsm_output(3)));
  and_dcpl_225 <= and_dcpl_162 AND and_dcpl_101;
  and_dcpl_227 <= and_dcpl_163 AND and_dcpl_190;
  and_dcpl_228 <= and_dcpl_225 AND and_dcpl_207;
  or_tmp_272 <= (fsm_output(3)) OR (NOT nor_tmp_79);
  nor_tmp_90 <= (fsm_output(3)) AND (fsm_output(4)) AND (fsm_output(6));
  and_dcpl_232 <= and_dcpl_113 AND (fsm_output(7));
  and_dcpl_233 <= and_dcpl_232 AND and_dcpl_112;
  and_dcpl_234 <= and_dcpl_233 AND and_dcpl_157;
  and_dcpl_239 <= and_dcpl_225 AND and_dcpl_100;
  and_dcpl_240 <= nor_226_cse AND and_dcpl_117;
  and_dcpl_241 <= and_dcpl_163 AND and_dcpl_240;
  and_dcpl_242 <= and_584_cse AND and_dcpl_117;
  and_dcpl_243 <= and_dcpl_233 AND and_dcpl_242;
  and_dcpl_244 <= and_dcpl_137 AND (fsm_output(7));
  and_dcpl_245 <= and_dcpl_244 AND and_dcpl_101;
  and_dcpl_246 <= and_dcpl_245 AND and_dcpl_161;
  and_dcpl_248 <= and_dcpl_225 AND and_dcpl_161;
  and_dcpl_249 <= and_dcpl_225 AND and_dcpl_126;
  and_dcpl_250 <= and_dcpl_125 AND nor_413_cse;
  and_dcpl_251 <= and_dcpl_163 AND and_dcpl_250;
  and_dcpl_255 <= and_dcpl_232 AND and_dcpl_101;
  and_dcpl_257 <= (NOT (fsm_output(2))) AND (fsm_output(0));
  and_dcpl_258 <= and_dcpl_257 AND (fsm_output(1));
  and_dcpl_261 <= and_dcpl_232 AND and_dcpl_101 AND (fsm_output(5));
  and_dcpl_267 <= and_dcpl_255 AND and_dcpl_111;
  and_dcpl_275 <= nor_206_cse AND (fsm_output(1));
  and_dcpl_283 <= and_dcpl_127 AND and_dcpl_101;
  and_dcpl_285 <= and_dcpl_283 AND and_dcpl_111;
  or_tmp_296 <= (NOT (fsm_output(3))) OR (fsm_output(7)) OR (NOT nor_tmp_79);
  or_404_nl <= (fsm_output(3)) OR (fsm_output(7)) OR (fsm_output(4)) OR (NOT (fsm_output(6)));
  mux_tmp_359 <= MUX_s_1_2_2(or_tmp_296, or_404_nl, fsm_output(5));
  or_tmp_299 <= (fsm_output(2)) OR (NOT (fsm_output(3))) OR (fsm_output(7)) OR (NOT
      nor_tmp_79);
  and_dcpl_289 <= and_dcpl_198 AND and_dcpl_101;
  and_dcpl_290 <= and_dcpl_289 AND and_dcpl_178;
  and_dcpl_295 <= CONV_SL_1_1(fsm_output(7 DOWNTO 6)=STD_LOGIC_VECTOR'("01"));
  or_tmp_304 <= (NOT (fsm_output(3))) OR (fsm_output(8)) OR (fsm_output(7)) OR (NOT
      nor_tmp_79);
  or_tmp_305 <= (fsm_output(2)) OR (fsm_output(3)) OR (fsm_output(8)) OR (NOT (fsm_output(7)))
      OR (fsm_output(4)) OR (fsm_output(6));
  and_dcpl_298 <= and_dcpl_198 AND and_dcpl_112;
  and_dcpl_299 <= and_dcpl_298 AND and_dcpl_214;
  or_tmp_306 <= CONV_SL_1_1(fsm_output(7 DOWNTO 3)/=STD_LOGIC_VECTOR'("10100"));
  and_dcpl_303 <= nor_434_cse AND (NOT (fsm_output(0)));
  or_tmp_310 <= NOT((fsm_output(2)) AND (fsm_output(3)) AND (NOT (fsm_output(7)))
      AND nor_tmp_79);
  and_dcpl_306 <= and_dcpl_283 AND and_dcpl_171;
  and_dcpl_310 <= and_dcpl_298 AND and_dcpl_161;
  mux_tmp_376 <= MUX_s_1_2_2((NOT (CACHE_UPDATE_LOOP_3_k_5_0_sva_1_1_0(0))), (CACHE_UPDATE_LOOP_3_k_5_0_sva_1_1_0(0)),
      CACHE_UPDATE_LOOP_3_k_5_0_sva_1_1_0(1));
  nand_144_nl <= NOT((LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_mux_tmp(0)) AND (fsm_output(0)));
  or_438_nl <= (LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_mux_tmp(0)) OR (NOT (fsm_output(0)));
  mux_tmp_377 <= MUX_s_1_2_2(nand_144_nl, or_438_nl, LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_mux_tmp(1));
  or_437_nl <= (fsm_output(0)) OR mux_tmp_376;
  mux_tmp_378 <= MUX_s_1_2_2(mux_tmp_377, or_437_nl, fsm_output(1));
  or_439_nl <= (fsm_output(0)) OR (NOT mux_tmp_376);
  mux_tmp_379 <= MUX_s_1_2_2((NOT mux_tmp_377), or_439_nl, fsm_output(1));
  and_dcpl_319 <= and_dcpl_298 AND and_dcpl_134;
  and_dcpl_320 <= and_dcpl_298 AND and_dcpl_240;
  mux_tmp_383 <= MUX_s_1_2_2(or_dcpl_90, or_tmp_233, fsm_output(3));
  mux_tmp_385 <= MUX_s_1_2_2(or_tmp_234, or_tmp_296, fsm_output(2));
  and_dcpl_325 <= and_dcpl_198 AND and_768_cse;
  and_dcpl_331 <= and_dcpl_128 AND and_dcpl_161;
  and_dcpl_341 <= and_dcpl_138 AND and_dcpl_112;
  and_dcpl_343 <= and_dcpl_104 AND and_dcpl_134;
  or_tmp_350 <= CONV_SL_1_1(fsm_output(8 DOWNTO 7)/=STD_LOGIC_VECTOR'("00"));
  or_86_nl <= CONV_SL_1_1(fsm_output(6 DOWNTO 5)/=STD_LOGIC_VECTOR'("00"));
  mux_tmp_402 <= MUX_s_1_2_2(or_746_cse, or_tmp_350, or_86_nl);
  mux_tmp_404 <= MUX_s_1_2_2(or_746_cse, or_tmp_350, fsm_output(5));
  mux_tmp_405 <= MUX_s_1_2_2(mux_tmp_404, or_173_cse, fsm_output(6));
  or_471_cse <= CONV_SL_1_1(fsm_output(8 DOWNTO 7)/=STD_LOGIC_VECTOR'("10"));
  mux_407_nl <= MUX_s_1_2_2(or_746_cse, or_471_cse, fsm_output(5));
  mux_tmp_408 <= MUX_s_1_2_2(mux_407_nl, or_173_cse, fsm_output(6));
  or_tmp_353 <= (fsm_output(5)) OR (NOT (fsm_output(7))) OR (fsm_output(8));
  mux_tmp_409 <= MUX_s_1_2_2(or_tmp_353, or_173_cse, fsm_output(6));
  mux_tmp_410 <= MUX_s_1_2_2(mux_tmp_409, mux_tmp_408, fsm_output(2));
  mux_tmp_414 <= MUX_s_1_2_2(mux_tmp_408, mux_tmp_409, fsm_output(2));
  or_475_cse <= (fsm_output(5)) OR and_731_cse;
  mux_tmp_416 <= MUX_s_1_2_2(or_475_cse, or_173_cse, fsm_output(6));
  or_477_nl <= CONV_SL_1_1(fsm_output(6 DOWNTO 5)/=STD_LOGIC_VECTOR'("00")) OR and_731_cse;
  mux_tmp_418 <= MUX_s_1_2_2(or_477_nl, mux_tmp_416, fsm_output(2));
  mux_tmp_422 <= MUX_s_1_2_2(or_tmp_353, mux_tmp_404, fsm_output(6));
  and_dcpl_350 <= (NOT mux_tmp_241) AND and_dcpl_295 AND nor_500_cse AND and_dcpl_117;
  and_dcpl_351 <= and_dcpl_185 AND and_dcpl_207;
  and_dcpl_352 <= and_dcpl_233 AND and_dcpl_111;
  and_dcpl_354 <= and_dcpl_163 AND and_dcpl_214;
  and_dcpl_355 <= and_dcpl_225 AND and_dcpl_242;
  mux_tmp_448 <= MUX_s_1_2_2(or_213_cse, or_800_cse, fsm_output(8));
  and_dcpl_359 <= and_dcpl_289 AND and_dcpl_161;
  and_dcpl_360 <= and_dcpl_245 AND and_dcpl_178;
  and_682_nl <= (fsm_output(0)) AND (fsm_output(2)) AND (fsm_output(8)) AND (NOT
      (fsm_output(4)));
  nor_298_nl <= NOT((fsm_output(0)) OR (fsm_output(2)) OR (fsm_output(8)) OR (NOT
      (fsm_output(4))));
  not_tmp_307 <= MUX_s_1_2_2(and_682_nl, nor_298_nl, fsm_output(1));
  and_dcpl_368 <= not_tmp_307 AND and_dcpl_106 AND nor_tmp;
  and_dcpl_369 <= and_dcpl_283 AND and_dcpl_119;
  mux_476_nl <= MUX_s_1_2_2((NOT (fsm_output(6))), (fsm_output(6)), fsm_output(8));
  or_tmp_422 <= (fsm_output(7)) OR mux_476_nl;
  or_544_cse <= (fsm_output(8)) OR (fsm_output(6));
  mux_tmp_482 <= MUX_s_1_2_2(or_577_cse, or_544_cse, fsm_output(7));
  and_dcpl_374 <= nor_252_cse AND and_dcpl_26;
  and_dcpl_375 <= and_dcpl_374 AND nor_tmp AND and_dcpl_216;
  and_dcpl_378 <= (NOT (fsm_output(3))) AND (fsm_output(5));
  xor_6_cse <= (fsm_output(4)) XOR (fsm_output(0));
  and_dcpl_381 <= and_dcpl_181 AND (NOT (fsm_output(8))) AND xor_6_cse;
  and_dcpl_382 <= and_dcpl_381 AND and_dcpl_378 AND CONV_SL_1_1(fsm_output(2 DOWNTO
      1)=STD_LOGIC_VECTOR'("01"));
  and_dcpl_384 <= nor_226_cse AND (fsm_output(0));
  and_dcpl_386 <= and_dcpl_103 AND and_dcpl_112;
  xor_dcpl_7 <= and_743_cse XOR (fsm_output(4));
  or_dcpl_120 <= CONV_SL_1_1(fsm_output(1 DOWNTO 0)/=STD_LOGIC_VECTOR'("01"));
  or_dcpl_121 <= or_dcpl_96 OR or_dcpl_120;
  and_dcpl_394 <= (NOT (fsm_output(7))) AND (fsm_output(3));
  and_dcpl_395 <= nor_252_cse AND and_dcpl_394;
  and_dcpl_396 <= and_dcpl_395 AND and_dcpl_240;
  not_tmp_316 <= NOT((fsm_output(7)) AND (fsm_output(5)));
  or_tmp_446 <= (fsm_output(8)) OR not_tmp_316;
  mux_tmp_505 <= MUX_s_1_2_2(or_tmp_446, or_475_cse, fsm_output(6));
  or_tmp_449 <= (fsm_output(7)) OR (NOT (fsm_output(5)));
  or_575_nl <= (fsm_output(8)) OR (NOT or_tmp_449);
  mux_tmp_509 <= MUX_s_1_2_2(or_677_cse, or_575_nl, fsm_output(6));
  mux_510_nl <= MUX_s_1_2_2((fsm_output(5)), (NOT (fsm_output(5))), fsm_output(7));
  mux_511_nl <= MUX_s_1_2_2(mux_510_nl, or_677_cse, fsm_output(8));
  mux_tmp_512 <= MUX_s_1_2_2(mux_511_nl, or_746_cse, fsm_output(6));
  mux_tmp_514 <= MUX_s_1_2_2(or_677_cse, or_746_cse, fsm_output(6));
  or_tmp_454 <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)/=STD_LOGIC_VECTOR'("011"));
  or_tmp_456 <= (NOT (fsm_output(6))) OR (fsm_output(8)) OR not_tmp_316;
  or_tmp_463 <= (fsm_output(5)) OR (fsm_output(3)) OR (fsm_output(8)) OR (NOT (fsm_output(4)));
  nor_tmp_118 <= (fsm_output(3)) AND (fsm_output(8)) AND (fsm_output(4));
  mux_544_nl <= MUX_s_1_2_2(mux_834_cse, (NOT or_dcpl_89), fsm_output(2));
  and_dcpl_400 <= mux_544_nl AND and_dcpl_26 AND and_dcpl_378 AND and_706_cse;
  and_dcpl_403 <= mux_834_cse AND (fsm_output(7)) AND and_dcpl_112 AND and_dcpl_157;
  and_dcpl_409 <= (fsm_output(5)) AND (fsm_output(1));
  mux_tmp_547 <= MUX_s_1_2_2(or_318_cse, or_319_cse, fsm_output(5));
  mux_tmp_550 <= MUX_s_1_2_2((NOT nor_tmp_79), or_dcpl_89, fsm_output(7));
  mux_551_nl <= MUX_s_1_2_2(mux_tmp_550, or_319_cse, fsm_output(3));
  mux_tmp_552 <= MUX_s_1_2_2(or_318_cse, mux_551_nl, fsm_output(5));
  mux_553_nl <= MUX_s_1_2_2(mux_tmp_552, mux_tmp_547, fsm_output(2));
  mux_396_nl <= MUX_s_1_2_2((NOT (fsm_output(6))), or_dcpl_89, fsm_output(7));
  mux_397_nl <= MUX_s_1_2_2(mux_396_nl, or_319_cse, fsm_output(3));
  mux_548_nl <= MUX_s_1_2_2(or_318_cse, mux_397_nl, fsm_output(5));
  mux_549_nl <= MUX_s_1_2_2(mux_548_nl, mux_tmp_547, fsm_output(2));
  mux_554_nl <= MUX_s_1_2_2(mux_553_nl, mux_549_nl, fsm_output(0));
  mux_555_nl <= MUX_s_1_2_2(mux_554_nl, mux_tmp_547, fsm_output(1));
  and_dcpl_414 <= NOT(mux_555_nl OR (fsm_output(8)));
  and_dcpl_417 <= (fsm_output(2)) AND (NOT (fsm_output(0)));
  or_tmp_529 <= and_768_cse OR (fsm_output(7));
  mux_tmp_592 <= MUX_s_1_2_2((NOT (fsm_output(7))), (fsm_output(7)), or_551_cse);
  nor_tmp_128 <= or_551_cse AND (fsm_output(7));
  and_dcpl_435 <= and_dcpl_106 AND (fsm_output(3));
  mux_623_nl <= MUX_s_1_2_2(and_768_cse, (NOT or_550_cse), fsm_output(2));
  and_dcpl_443 <= mux_623_nl AND nor_tmp_79;
  and_dcpl_447 <= and_dcpl_244 AND and_dcpl_112;
  and_dcpl_448 <= and_dcpl_447 AND and_dcpl_100;
  or_dcpl_125 <= (NOT (fsm_output(5))) OR (fsm_output(2));
  or_dcpl_127 <= or_tmp_242 OR (fsm_output(7));
  or_dcpl_128 <= or_dcpl_127 OR or_551_cse;
  or_tmp_598 <= CONV_SL_1_1(fsm_output(3 DOWNTO 2)/=STD_LOGIC_VECTOR'("01"));
  or_tmp_599 <= CONV_SL_1_1(fsm_output(3 DOWNTO 2)/=STD_LOGIC_VECTOR'("10"));
  or_dcpl_130 <= NOT((fsm_output(5)) AND (fsm_output(2)));
  or_dcpl_133 <= or_dcpl_130 OR or_dcpl_120;
  or_tmp_652 <= NOT((fsm_output(7)) AND (fsm_output(2)) AND (fsm_output(1)) AND (NOT
      (fsm_output(8))));
  or_tmp_656 <= (fsm_output(0)) OR (fsm_output(1)) OR (fsm_output(8));
  not_tmp_405 <= NOT((fsm_output(8)) AND (fsm_output(4)));
  and_dcpl_458 <= and_dcpl_447 AND and_dcpl_240;
  and_dcpl_460 <= and_dcpl_26 AND (fsm_output(5));
  or_tmp_697 <= (fsm_output(3)) OR (fsm_output(4)) OR (fsm_output(6));
  or_tmp_700 <= (NOT (fsm_output(3))) OR (fsm_output(4)) OR (fsm_output(6));
  or_tmp_701 <= (fsm_output(3)) OR (NOT (fsm_output(4))) OR (fsm_output(6));
  and_tmp_26 <= (fsm_output(3)) AND mux_834_cse;
  or_tmp_716 <= (NOT (fsm_output(4))) OR (NOT (fsm_output(7))) OR (fsm_output(8));
  nor_303_nl <= NOT((fsm_output(0)) OR (fsm_output(2)) OR (NOT (fsm_output(5))) OR
      (fsm_output(7)) OR (fsm_output(4)) OR (NOT (fsm_output(6))));
  nor_304_nl <= NOT((fsm_output(2)) OR (NOT (fsm_output(5))) OR (NOT (fsm_output(7)))
      OR (fsm_output(4)) OR (fsm_output(6)));
  nor_305_nl <= NOT((NOT (fsm_output(2))) OR (fsm_output(5)) OR (fsm_output(7)) OR
      (NOT nor_tmp_79));
  mux_768_nl <= MUX_s_1_2_2(nor_304_nl, nor_305_nl, fsm_output(0));
  mux_769_nl <= MUX_s_1_2_2(nor_303_nl, mux_768_nl, fsm_output(1));
  and_dcpl_468 <= mux_769_nl AND and_dcpl_101;
  and_dcpl_469 <= and_dcpl_298 AND and_dcpl_126;
  nor_tmp_174 <= (fsm_output(7)) AND (fsm_output(4));
  or_tmp_768 <= (NOT (fsm_output(1))) OR (fsm_output(6)) OR (NOT (fsm_output(5)));
  or_tmp_776 <= (NOT (fsm_output(4))) OR (fsm_output(6)) OR (NOT (fsm_output(7)));
  not_tmp_447 <= NOT(CONV_SL_1_1(fsm_output(7 DOWNTO 6)/=STD_LOGIC_VECTOR'("10")));
  mux_tmp_785 <= MUX_s_1_2_2(not_tmp_447, (fsm_output(7)), fsm_output(4));
  mux_tmp_786 <= MUX_s_1_2_2(not_tmp_447, and_dcpl_165, fsm_output(4));
  or_tmp_792 <= CONV_SL_1_1(fsm_output(4 DOWNTO 2)/=STD_LOGIC_VECTOR'("100"));
  nor_tmp_191 <= CONV_SL_1_1(fsm_output(6 DOWNTO 5)=STD_LOGIC_VECTOR'("11"));
  and_dcpl_484 <= and_dcpl_298 AND and_dcpl_178;
  or_tmp_831 <= (NOT (fsm_output(3))) OR (fsm_output(8)) OR (NOT (fsm_output(7)))
      OR (fsm_output(4));
  mux_tmp_853 <= MUX_s_1_2_2((NOT (fsm_output(4))), (fsm_output(4)), fsm_output(7));
  or_tmp_834 <= (NOT (fsm_output(3))) OR (fsm_output(8)) OR mux_tmp_853;
  and_dcpl_487 <= and_dcpl_36 AND (NOT (fsm_output(5)));
  or_tmp_835 <= (fsm_output(3)) OR (NOT (fsm_output(7))) OR (fsm_output(4));
  nand_tmp_55 <= NOT((fsm_output(3)) AND (NOT mux_tmp_853));
  mux_tmp_861 <= MUX_s_1_2_2(nand_tmp_55, or_831_cse, fsm_output(2));
  and_dcpl_493 <= and_dcpl_255 AND and_dcpl_119;
  and_dcpl_506 <= and_dcpl_185 AND and_dcpl_119;
  or_dcpl_150 <= or_tmp_243 OR (fsm_output(7));
  mux_905_nl <= MUX_s_1_2_2(mux_tmp_552, mux_tmp_547, or_349_cse);
  and_dcpl_513 <= NOT(mux_905_nl OR (fsm_output(8)));
  and_dcpl_526 <= (NOT (fsm_output(4))) AND (fsm_output(7)) AND (NOT (fsm_output(8)));
  or_1040_nl <= (NOT (fsm_output(3))) OR (fsm_output(6));
  mux_tmp_928 <= MUX_s_1_2_2(not_tmp_125, or_1040_nl, fsm_output(5));
  or_1045_nl <= (fsm_output(2)) OR mux_tmp_928;
  mux_tmp_933 <= MUX_s_1_2_2(or_1045_nl, or_199_cse, fsm_output(0));
  or_dcpl_154 <= or_dcpl_130 OR nand_181_cse;
  or_dcpl_157 <= or_tmp_243 OR (NOT (fsm_output(7)));
  or_dcpl_158 <= or_dcpl_157 OR or_550_cse;
  or_dcpl_163 <= or_dcpl_157 OR or_551_cse;
  or_dcpl_170 <= or_tmp_210 OR (NOT and_768_cse);
  mux_tmp_950 <= MUX_s_1_2_2(or_tmp_233, or_319_cse, fsm_output(5));
  mux_951_nl <= MUX_s_1_2_2(mux_tmp_550, or_tmp_233, fsm_output(3));
  mux_tmp_952 <= MUX_s_1_2_2(mux_951_nl, or_319_cse, fsm_output(5));
  mux_tmp_954 <= MUX_s_1_2_2(mux_tmp_383, or_319_cse, fsm_output(5));
  mux_tmp_955 <= MUX_s_1_2_2(mux_tmp_954, mux_tmp_950, fsm_output(2));
  attention_5_1_384_384_8_48_attn_output_rsci_radr_d_mx0c1 <= and_dcpl_163 AND and_dcpl_157;
  attention_5_1_384_384_8_48_attn_weights_rsci_radr_d_mx0c2 <= and_dcpl_225 AND and_dcpl_214;
  CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm_mx0c6 <= and_dcpl_139 AND and_dcpl_192;
  RMS_NORM_LOOP_2_2_dfr_sva_mx0c0 <= and_dcpl_395 AND and_dcpl_134;
  or_1106_nl <= (NOT (fsm_output(2))) OR (NOT (fsm_output(8))) OR (fsm_output(4));
  or_1107_nl <= (fsm_output(2)) OR (fsm_output(8)) OR (NOT (fsm_output(4)));
  mux_545_nl <= MUX_s_1_2_2(or_1106_nl, or_1107_nl, fsm_output(0));
  RMS_NORM_LOOP_2_2_dfr_sva_mx0c2 <= (NOT(mux_545_nl OR (fsm_output(6)))) AND and_dcpl_394
      AND (fsm_output(5)) AND (NOT (fsm_output(1)));
  or_1108_nl <= (fsm_output(2)) OR (fsm_output(3)) OR (NOT (fsm_output(8)));
  or_1109_nl <= (NOT (fsm_output(2))) OR (NOT (fsm_output(3))) OR (fsm_output(8));
  mux_546_nl <= MUX_s_1_2_2(or_1108_nl, or_1109_nl, fsm_output(0));
  RMS_NORM_LOOP_2_2_dfr_sva_mx0c3 <= (NOT(mux_546_nl OR (fsm_output(6)))) AND (fsm_output(4))
      AND (NOT (fsm_output(7))) AND and_dcpl_409;
  nor_388_nl <= NOT((NOT (fsm_output(0))) OR (NOT (fsm_output(2))) OR (NOT (fsm_output(3)))
      OR (NOT (fsm_output(8))) OR (fsm_output(4)) OR (fsm_output(6)));
  nor_389_nl <= NOT((fsm_output(2)) OR (NOT (fsm_output(3))) OR (fsm_output(8)) OR
      (NOT (fsm_output(4))) OR (fsm_output(6)));
  nor_390_nl <= NOT((fsm_output(2)) OR (fsm_output(3)) OR (NOT (fsm_output(8))) OR
      (fsm_output(4)) OR (NOT (fsm_output(6))));
  mux_565_nl <= MUX_s_1_2_2(nor_389_nl, nor_390_nl, fsm_output(0));
  mux_566_nl <= MUX_s_1_2_2(nor_388_nl, mux_565_nl, fsm_output(1));
  APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c1 <=
      mux_566_nl AND (NOT (fsm_output(7))) AND (fsm_output(5));
  mux_567_nl <= MUX_s_1_2_2(mux_834_cse, (NOT or_tmp_242), fsm_output(1));
  APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c2 <=
      mux_567_nl AND and_dcpl_26 AND nor_tmp AND and_dcpl_417;
  mux_568_nl <= MUX_s_1_2_2(nor_tmp_11, (NOT or_1114_cse), fsm_output(0));
  APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c4 <=
      mux_568_nl AND and_dcpl_165 AND nor_434_cse AND and_dcpl_216;
  APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c6 <=
      and_dcpl_162 AND and_610_cse AND and_dcpl_101 AND ((fsm_output(5)) XOR (fsm_output(1)));
  or_898_nl <= (fsm_output(0)) OR (NOT (fsm_output(6))) OR (fsm_output(4)) OR (NOT((fsm_output(2))
      AND (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2(3)) AND (fsm_output(7))));
  or_896_nl <= (NOT (fsm_output(0))) OR (fsm_output(6)) OR (NOT (fsm_output(4)))
      OR (fsm_output(2)) OR (NOT (fsm_output(7)));
  mux_777_nl <= MUX_s_1_2_2(or_898_nl, or_896_nl, fsm_output(5));
  or_1119_nl <= (fsm_output(3)) OR mux_777_nl;
  nand_214_nl <= NOT((fsm_output(0)) AND (fsm_output(6)) AND (fsm_output(4)) AND
      (fsm_output(2)) AND (NOT (fsm_output(7))));
  nor_465_nl <= NOT((fsm_output(2)) OR (NOT (fsm_output(7))));
  mux_773_nl <= MUX_s_1_2_2(nor_465_nl, (fsm_output(7)), CACHE_UPDATE_LOOP_1_and_cse);
  or_892_nl <= (fsm_output(4)) OR (NOT mux_773_nl);
  or_890_nl <= (NOT (fsm_output(4))) OR (fsm_output(2)) OR (NOT (fsm_output(7)));
  mux_774_nl <= MUX_s_1_2_2(or_892_nl, or_890_nl, fsm_output(6));
  or_1120_nl <= (fsm_output(0)) OR mux_774_nl;
  mux_775_nl <= MUX_s_1_2_2(nand_214_nl, or_1120_nl, fsm_output(5));
  or_1121_nl <= (NOT (fsm_output(5))) OR (NOT (fsm_output(0))) OR (fsm_output(6))
      OR (NOT (fsm_output(4))) OR (fsm_output(2)) OR (NOT (fsm_output(7)));
  mux_776_nl <= MUX_s_1_2_2(mux_775_nl, or_1121_nl, fsm_output(3));
  mux_778_nl <= MUX_s_1_2_2(or_1119_nl, mux_776_nl, fsm_output(1));
  GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0_mx0c0 <= NOT(mux_778_nl OR (fsm_output(8)));
  nor_470_cse <= NOT((fsm_output(2)) OR (NOT (fsm_output(5))) OR (fsm_output(7))
      OR (fsm_output(4)));
  nor_471_nl <= NOT((NOT (fsm_output(2))) OR (fsm_output(5)) OR (NOT nor_tmp_174));
  mux_779_nl <= MUX_s_1_2_2(nor_470_cse, nor_471_nl, fsm_output(0));
  GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0_mx0c1 <= mux_779_nl AND and_dcpl_36 AND nor_419_cse;
  nand_216_cse <= NOT((fsm_output(1)) AND (fsm_output(6)) AND (fsm_output(5)));
  nand_215_nl <= NOT((fsm_output(4)) AND (fsm_output(1)) AND (fsm_output(6)) AND
      (NOT (fsm_output(5))));
  or_909_nl <= (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2(3)) OR CONV_SL_1_1(fsm_output(6
      DOWNTO 5)/=STD_LOGIC_VECTOR'("10"));
  or_908_nl <= CACHE_UPDATE_LOOP_1_and_cse OR CONV_SL_1_1(fsm_output(6 DOWNTO 5)/=STD_LOGIC_VECTOR'("01"));
  mux_781_nl <= MUX_s_1_2_2(or_909_nl, or_908_nl, fsm_output(1));
  mux_782_nl <= MUX_s_1_2_2(mux_781_nl, or_tmp_768, fsm_output(4));
  mux_783_nl <= MUX_s_1_2_2(nand_215_nl, mux_782_nl, fsm_output(2));
  nor_473_nl <= NOT((fsm_output(3)) OR mux_783_nl);
  mux_780_nl <= MUX_s_1_2_2(or_tmp_768, nand_216_cse, fsm_output(4));
  nor_474_nl <= NOT(CONV_SL_1_1(fsm_output(3 DOWNTO 2)/=STD_LOGIC_VECTOR'("10"))
      OR mux_780_nl);
  mux_784_nl <= MUX_s_1_2_2(nor_473_nl, nor_474_nl, fsm_output(0));
  GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0_mx0c2 <= mux_784_nl AND and_dcpl_26;
  and_798_nl <= (NOT((fsm_output(1)) AND (fsm_output(0)) AND (fsm_output(4)))) AND
      and_dcpl_165;
  nor_475_nl <= NOT((fsm_output(4)) OR (NOT and_dcpl_165));
  mux_796_nl <= MUX_s_1_2_2(nor_475_nl, and_dcpl_165, fsm_output(0));
  and_797_nl <= (fsm_output(0)) AND (fsm_output(4));
  mux_795_nl <= MUX_s_1_2_2(and_dcpl_165, (NOT or_319_cse), and_797_nl);
  mux_797_nl <= MUX_s_1_2_2(mux_796_nl, mux_795_nl, fsm_output(1));
  mux_798_nl <= MUX_s_1_2_2(and_798_nl, mux_797_nl, fsm_output(2));
  or_916_nl <= (fsm_output(4)) OR (NOT (fsm_output(6))) OR (fsm_output(7));
  mux_792_nl <= MUX_s_1_2_2(or_916_nl, or_tmp_776, fsm_output(0));
  mux_793_nl <= MUX_s_1_2_2((NOT mux_792_nl), mux_tmp_785, fsm_output(1));
  mux_791_nl <= MUX_s_1_2_2(mux_tmp_785, mux_tmp_786, and_706_cse);
  mux_794_nl <= MUX_s_1_2_2(mux_793_nl, mux_791_nl, fsm_output(2));
  mux_799_nl <= MUX_s_1_2_2(mux_798_nl, mux_794_nl, fsm_output(5));
  mux_789_nl <= MUX_s_1_2_2((NOT and_dcpl_165), or_319_cse, fsm_output(4));
  mux_787_nl <= MUX_s_1_2_2(mux_tmp_786, mux_tmp_785, and_706_cse);
  mux_788_nl <= MUX_s_1_2_2((NOT mux_787_nl), or_tmp_776, fsm_output(2));
  mux_790_nl <= MUX_s_1_2_2(mux_789_nl, mux_788_nl, fsm_output(5));
  mux_800_nl <= MUX_s_1_2_2((NOT mux_799_nl), mux_790_nl, fsm_output(3));
  GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0_mx0c3 <= mux_800_nl OR (fsm_output(8));
  nand_226_nl <= NOT(CONV_SL_1_1(fsm_output(4 DOWNTO 0)=STD_LOGIC_VECTOR'("10111")));
  or_935_nl <= CONV_SL_1_1(fsm_output(4 DOWNTO 2)/=STD_LOGIC_VECTOR'("001"));
  mux_816_nl <= MUX_s_1_2_2(or_935_nl, or_tmp_792, fsm_output(1));
  nand_227_nl <= NOT(CONV_SL_1_1(fsm_output(4 DOWNTO 1)=STD_LOGIC_VECTOR'("1101")));
  mux_817_nl <= MUX_s_1_2_2(mux_816_nl, nand_227_nl, fsm_output(0));
  mux_818_nl <= MUX_s_1_2_2(nand_226_nl, mux_817_nl, fsm_output(7));
  nand_228_nl <= NOT((fsm_output(6)) AND (NOT mux_818_nl));
  nor_478_nl <= NOT(CONV_SL_1_1(fsm_output(3 DOWNTO 2)/=STD_LOGIC_VECTOR'("00")));
  mux_814_nl <= MUX_s_1_2_2(nor_478_nl, nor_507_cse, fsm_output(4));
  nand_51_nl <= NOT((fsm_output(1)) AND mux_814_nl);
  or_929_nl <= CONV_SL_1_1(fsm_output(4 DOWNTO 2)/=STD_LOGIC_VECTOR'("110"));
  mux_813_nl <= MUX_s_1_2_2(or_tmp_792, or_929_nl, fsm_output(1));
  mux_815_nl <= MUX_s_1_2_2(nand_51_nl, mux_813_nl, fsm_output(0));
  or_1123_nl <= CONV_SL_1_1(fsm_output(7 DOWNTO 6)/=STD_LOGIC_VECTOR'("10")) OR mux_815_nl;
  mux_819_nl <= MUX_s_1_2_2(nand_228_nl, or_1123_nl, fsm_output(5));
  CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c0 <= NOT(mux_819_nl OR (fsm_output(8)));
  or_946_nl <= (fsm_output(0)) OR (fsm_output(1)) OR (NOT (fsm_output(5)));
  or_944_nl <= (NOT (fsm_output(0))) OR (NOT (fsm_output(1))) OR (fsm_output(5));
  mux_821_nl <= MUX_s_1_2_2(or_946_nl, or_944_nl, fsm_output(7));
  or_1124_nl <= (NOT (fsm_output(6))) OR (fsm_output(3)) OR (fsm_output(2)) OR mux_821_nl;
  nand_230_nl <= NOT((fsm_output(2)) AND (fsm_output(7)) AND (fsm_output(0)) AND
      (NOT (fsm_output(1))) AND (fsm_output(5)));
  or_939_nl <= (fsm_output(2)) OR (NOT (fsm_output(7))) OR (fsm_output(0)) OR (NOT((fsm_output(1))
      AND (fsm_output(5))));
  mux_820_nl <= MUX_s_1_2_2(nand_230_nl, or_939_nl, fsm_output(3));
  or_1125_nl <= (fsm_output(6)) OR mux_820_nl;
  mux_822_nl <= MUX_s_1_2_2(or_1124_nl, or_1125_nl, fsm_output(4));
  CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c1 <= NOT(mux_822_nl OR (fsm_output(8)));
  CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c3 <= and_dcpl_225 AND and_dcpl_134;
  CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c5 <= and_dcpl_225 AND and_dcpl_192;
  mux_864_nl <= MUX_s_1_2_2((fsm_output(2)), (fsm_output(0)), fsm_output(1));
  APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_mx0c0 <= (NOT mux_864_nl) AND nor_tmp_79
      AND nor_387_cse AND and_dcpl_8;
  mux_893_nl <= MUX_s_1_2_2(or_tmp_598, or_tmp_599, fsm_output(0));
  LINEAR_FORWARD_NO_MUL_LOOP_5_or_itm_mx0c1 <= (NOT mux_893_nl) AND nor_252_cse AND
      and_dcpl_26 AND and_dcpl_409;
  nor_209_nl <= NOT(CONV_SL_1_1(fsm_output(5 DOWNTO 4)/=STD_LOGIC_VECTOR'("00")));
  mux_353_nl <= MUX_s_1_2_2(and_dcpl_204, nor_209_nl, fsm_output(0));
  GEMM_3D_FLOAT_LOOP_3_or_3_cse <= (mux_353_nl AND and_dcpl_165 AND and_dcpl_101
      AND nor_411_cse) OR and_dcpl_241;
  and_361_nl <= and_dcpl_115 AND and_dcpl_207;
  input_rsci_d_d <= MUX_v_40_2_2(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(strm_in_rsci_idat_mxwt),40)),
      RMS_NORM_LOOP_2_slc_RMS_NORM_LOOP_2_mul_67_28_ncse_sva, and_361_nl);
  INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_5_nl <= MUX_v_3_2_2((INIT_2D_MEM_LOOP_2_2_acc_itm(8
      DOWNTO 6)), GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva, and_359_ssc);
  INIT_2D_MEM_LOOP_2_2_and_3_nl <= MUX_v_3_2_2(STD_LOGIC_VECTOR'("000"), INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_5_nl,
      for_for_and_seb);
  INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_6_nl <= MUX_v_4_2_2((INIT_2D_MEM_LOOP_2_2_acc_itm(5
      DOWNTO 2)), APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt, and_359_ssc);
  INIT_2D_MEM_LOOP_2_2_and_5_nl <= MUX_v_4_2_2(STD_LOGIC_VECTOR'("0000"), INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_6_nl,
      for_for_and_seb);
  INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_7_nl <= MUX_v_2_2_2((INIT_2D_MEM_LOOP_2_2_acc_itm(1
      DOWNTO 0)), APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0, and_359_ssc);
  INIT_2D_MEM_LOOP_2_2_and_6_nl <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"), INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_7_nl,
      for_for_and_seb);
  input_rsci_radr_d <= INIT_2D_MEM_LOOP_2_2_and_3_nl & INIT_2D_MEM_LOOP_2_2_and_5_nl
      & INIT_2D_MEM_LOOP_2_2_and_6_nl;
  nor_336_nl <= NOT(CONV_SL_1_1(fsm_output(6 DOWNTO 4)/=STD_LOGIC_VECTOR'("011"))
      OR (nand_170_cse AND (fsm_output(2))));
  nor_337_nl <= NOT((fsm_output(4)) OR (fsm_output(5)) OR (NOT((fsm_output(6)) AND
      (fsm_output(2)))));
  mux_389_nl <= MUX_s_1_2_2(nor_336_nl, nor_337_nl, fsm_output(0));
  input_rsci_re_d_pff <= mux_389_nl AND nor_387_cse AND (fsm_output(3)) AND (fsm_output(1));
  input_rsci_wadr_d <= INIT_2D_MEM_LOOP_2_2_acc_itm;
  or_1095_nl <= CONV_SL_1_1(fsm_output(5 DOWNTO 3)/=STD_LOGIC_VECTOR'("000"));
  nand_172_nl <= NOT(CONV_SL_1_1(fsm_output(5 DOWNTO 3)=STD_LOGIC_VECTOR'("111")));
  mux_390_nl <= MUX_s_1_2_2(or_1095_nl, nand_172_nl, fsm_output(2));
  input_rsci_we_d_pff <= (NOT(mux_390_nl OR (fsm_output(6)))) AND nor_387_cse AND
      and_dcpl_7;
  INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_3_nl <= MUX_v_4_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd,
      (LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z(39
      DOWNTO 36)), and_350_ssc);
  INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_6_nl <= MUX_v_3_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_1,
      (LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z(35
      DOWNTO 33)), and_350_ssc);
  INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_7_nl <= MUX_v_4_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_2,
      (LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z(32
      DOWNTO 29)), and_350_ssc);
  INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_8_nl <= MUX_s_1_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_3,
      (LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z(28)),
      and_350_ssc);
  INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_9_nl <= MUX_v_3_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_4,
      (LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z(27
      DOWNTO 25)), and_350_ssc);
  INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_10_nl <= MUX_v_9_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_5,
      (LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z(24
      DOWNTO 16)), and_350_ssc);
  INIT_2D_MEM_LOOP_2_1_and_2_nl <= MUX_v_24_2_2(STD_LOGIC_VECTOR'("000000000000000000000000"),
      (INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_3_nl & INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_6_nl
      & INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_7_nl & INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_8_nl
      & INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_9_nl & INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_10_nl),
      INIT_2D_MEM_LOOP_2_3_nor_seb);
  INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_4_nl <= MUX_v_16_2_2((INIT_2D_MEM_LOOP_2_1_asn_psp(15
      DOWNTO 0)), (LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z(15
      DOWNTO 0)), and_350_ssc);
  INIT_2D_MEM_LOOP_2_1_and_3_nl <= MUX_v_16_2_2(STD_LOGIC_VECTOR'("0000000000000000"),
      INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_4_nl, INIT_2D_MEM_LOOP_2_3_nor_seb);
  output_rsci_d_d <= INIT_2D_MEM_LOOP_2_1_and_2_nl & INIT_2D_MEM_LOOP_2_1_and_3_nl;
  output_rsci_radr_d <= MUX_v_9_2_2(INIT_2D_MEM_LOOP_2_2_acc_itm, SF_LOOP_3_acc_17_itm_8_0,
      and_dcpl_331);
  nor_334_nl <= NOT((NOT (fsm_output(2))) OR (fsm_output(5)) OR mux_tmp_383);
  nor_335_nl <= NOT(CONV_SL_1_1(fsm_output(7 DOWNTO 2)/=STD_LOGIC_VECTOR'("011000")));
  mux_384_nl <= MUX_s_1_2_2(nor_334_nl, nor_335_nl, fsm_output(1));
  output_rsci_re_d_pff <= mux_384_nl AND and_729_cse;
  and_345_nl <= (NOT mux_tmp_385) AND and_dcpl_145 AND and_706_cse;
  output_rsci_wadr_d <= MUX_v_9_2_2(SF_LOOP_3_acc_17_itm_8_0, INIT_2D_MEM_LOOP_2_2_acc_itm,
      and_345_nl);
  mux_386_nl <= MUX_s_1_2_2(or_tmp_299, mux_tmp_385, fsm_output(0));
  output_rsci_we_d_pff <= (NOT mux_386_nl) AND and_dcpl_145 AND (fsm_output(1));
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_d_d <= STD_LOGIC_VECTOR'(
      QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_acc_itm_25_1 & (NOT QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_acc_itm_25_1)
      & (NOT QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_acc_itm_25_1) & (NOT
      QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_acc_itm_25_1) & (NOT QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_acc_itm_25_1)
      & (NOT QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_acc_itm_25_1) & (NOT
      QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_acc_itm_25_1) & (NOT QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_acc_itm_25_1));
  QUANTIZE_ACTIVATION_LOOP_5_mux1h_1_nl <= MUX1HOT_v_3_3_2((reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd
      & reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1), GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva,
      GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0, STD_LOGIC_VECTOR'( and_dcpl_319 & and_dcpl_320
      & and_dcpl_299));
  QUANTIZE_ACTIVATION_LOOP_5_mux1h_2_nl <= MUX1HOT_v_4_3_2(APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp_4,
      APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt, LINEAR_FORWARD_NO_MUL_LOOP_4_ki_4_0_sva_3_0,
      STD_LOGIC_VECTOR'( and_dcpl_319 & and_dcpl_320 & and_dcpl_299));
  QUANTIZE_ACTIVATION_LOOP_5_mux1h_3_nl <= MUX1HOT_v_2_3_2(CACHE_UPDATE_LOOP_3_k_5_0_sva_1_1_0,
      APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0, STD_LOGIC_VECTOR'( reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd
      & reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd_1), STD_LOGIC_VECTOR'( and_dcpl_319
      & and_dcpl_320 & and_dcpl_299));
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_radr_d <= QUANTIZE_ACTIVATION_LOOP_5_mux1h_1_nl
      & QUANTIZE_ACTIVATION_LOOP_5_mux1h_2_nl & QUANTIZE_ACTIVATION_LOOP_5_mux1h_3_nl;
  mux_381_nl <= MUX_s_1_2_2(mux_tmp_378, (NOT mux_tmp_379), LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_slc_LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_conc_1_1_1_0_svs(1));
  mux_380_nl <= MUX_s_1_2_2((NOT mux_tmp_379), mux_tmp_378, LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_slc_LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_conc_1_1_1_0_svs(1));
  mux_382_nl <= MUX_s_1_2_2(mux_381_nl, mux_380_nl, LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_slc_LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_conc_1_1_1_0_svs(0));
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_re_d_pff <= (NOT mux_382_nl)
      AND nor_tmp_79 AND nor_387_cse AND and_dcpl_8 AND (NOT (fsm_output(2)));
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_wadr_d <= GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva
      & APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt & APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_we_d_pff <= and_dcpl_289
      AND and_dcpl_240;
  INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_1_nl <= MUX_v_4_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd,
      (rms_norm_384_div_cmp_z_oreg(39 DOWNTO 36)), and_328_ssc);
  INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_5_nl <= MUX_v_3_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_1,
      (rms_norm_384_div_cmp_z_oreg(35 DOWNTO 33)), and_328_ssc);
  INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_6_nl <= MUX_v_4_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_2,
      (rms_norm_384_div_cmp_z_oreg(32 DOWNTO 29)), and_328_ssc);
  INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_7_nl <= MUX_s_1_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_3,
      (rms_norm_384_div_cmp_z_oreg(28)), and_328_ssc);
  INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_8_nl <= MUX_v_3_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_4,
      (rms_norm_384_div_cmp_z_oreg(27 DOWNTO 25)), and_328_ssc);
  INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_9_nl <= MUX_v_9_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_5,
      (rms_norm_384_div_cmp_z_oreg(24 DOWNTO 16)), and_328_ssc);
  INIT_2D_MEM_LOOP_2_and_2_nl <= MUX_v_24_2_2(STD_LOGIC_VECTOR'("000000000000000000000000"),
      (INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_1_nl & INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_5_nl
      & INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_6_nl & INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_7_nl
      & INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_8_nl & INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_9_nl),
      INIT_2D_MEM_LOOP_2_and_3_seb);
  INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_2_nl <= MUX_v_16_2_2((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(15
      DOWNTO 0)), (rms_norm_384_div_cmp_z_oreg(15 DOWNTO 0)), and_328_ssc);
  INIT_2D_MEM_LOOP_2_and_4_nl <= MUX_v_16_2_2(STD_LOGIC_VECTOR'("0000000000000000"),
      INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_2_nl, INIT_2D_MEM_LOOP_2_and_3_seb);
  attention_5_1_384_384_8_48_q_proj_re_rsci_d_d <= INIT_2D_MEM_LOOP_2_and_2_nl &
      INIT_2D_MEM_LOOP_2_and_4_nl;
  INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_nl <= MUX_v_4_2_2((reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1(8
      DOWNTO 5)), RESHAPE_2D_TO_3D_LOOP_3_acc_11_psp_1_mx0w0, and_dcpl_306);
  INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_3_nl <= MUX_s_1_2_2((reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1(4)),
      (z_out_35(0)), and_dcpl_306);
  INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_4_nl <= MUX_v_4_2_2((reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1(3
      DOWNTO 0)), ((reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1(0)) & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_0
      & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1), and_dcpl_306);
  attention_5_1_384_384_8_48_q_proj_re_rsci_radr_d <= INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_nl
      & INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_3_nl & INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_4_nl;
  mux_366_nl <= MUX_s_1_2_2(mux_tmp_359, or_tmp_306, fsm_output(1));
  attention_5_1_384_384_8_48_q_proj_re_rsci_re_d_pff <= (NOT mux_366_nl) AND nor_500_cse
      AND (fsm_output(0));
  attention_5_1_384_384_8_48_q_proj_re_rsci_wadr_d <= reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1;
  or_431_nl <= (fsm_output(5)) OR (NOT (fsm_output(3))) OR (fsm_output(7)) OR (NOT
      nor_tmp_79);
  mux_372_nl <= MUX_s_1_2_2(or_tmp_306, or_431_nl, fsm_output(2));
  nand_167_nl <= NOT((fsm_output(0)) AND (NOT mux_372_nl));
  or_1094_nl <= (fsm_output(0)) OR (NOT (fsm_output(2))) OR (fsm_output(5)) OR (fsm_output(3))
      OR (fsm_output(7)) OR (NOT nor_tmp_79);
  mux_373_nl <= MUX_s_1_2_2(nand_167_nl, or_1094_nl, fsm_output(1));
  attention_5_1_384_384_8_48_q_proj_re_rsci_we_d_pff <= NOT(mux_373_nl OR (fsm_output(8)));
  INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_2_nl <= MUX_v_4_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd,
      (rms_norm_384_div_cmp_z_oreg(39 DOWNTO 36)), and_325_ssc);
  INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_11_nl <= MUX_v_3_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_1,
      (rms_norm_384_div_cmp_z_oreg(35 DOWNTO 33)), and_325_ssc);
  INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_12_nl <= MUX_v_4_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_2,
      (rms_norm_384_div_cmp_z_oreg(32 DOWNTO 29)), and_325_ssc);
  INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_13_nl <= MUX_s_1_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_3,
      (rms_norm_384_div_cmp_z_oreg(28)), and_325_ssc);
  INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_14_nl <= MUX_v_3_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_4,
      (rms_norm_384_div_cmp_z_oreg(27 DOWNTO 25)), and_325_ssc);
  INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_15_nl <= MUX_v_9_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_5,
      (rms_norm_384_div_cmp_z_oreg(24 DOWNTO 16)), and_325_ssc);
  INIT_2D_MEM_LOOP_2_1_and_1_nl <= MUX_v_24_2_2(STD_LOGIC_VECTOR'("000000000000000000000000"),
      (INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_2_nl & INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_11_nl
      & INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_12_nl & INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_13_nl
      & INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_14_nl & INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_15_nl),
      INIT_2D_MEM_LOOP_2_1_nor_seb);
  INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_5_nl <= MUX_v_16_2_2((INIT_2D_MEM_LOOP_2_1_asn_psp(15
      DOWNTO 0)), (rms_norm_384_div_cmp_z_oreg(15 DOWNTO 0)), and_325_ssc);
  INIT_2D_MEM_LOOP_2_1_and_4_nl <= MUX_v_16_2_2(STD_LOGIC_VECTOR'("0000000000000000"),
      INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_5_nl, INIT_2D_MEM_LOOP_2_1_nor_seb);
  attention_5_1_384_384_8_48_k_proj_re_rsci_d_d <= INIT_2D_MEM_LOOP_2_1_and_1_nl
      & INIT_2D_MEM_LOOP_2_1_and_4_nl;
  INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_3_nl <= MUX_v_4_2_2((INIT_2D_MEM_LOOP_2_2_acc_itm(8
      DOWNTO 5)), z_out_8, and_dcpl_306);
  INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_8_nl <= MUX_s_1_2_2((INIT_2D_MEM_LOOP_2_2_acc_itm(4)),
      (z_out_31(0)), and_dcpl_306);
  INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_9_nl <= MUX_v_4_2_2((INIT_2D_MEM_LOOP_2_2_acc_itm(3
      DOWNTO 0)), (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(3 DOWNTO 0)), and_dcpl_306);
  attention_5_1_384_384_8_48_k_proj_re_rsci_radr_d <= INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_3_nl
      & INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_8_nl & INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_9_nl;
  or_423_nl <= (fsm_output(2)) OR (fsm_output(3)) OR (NOT (fsm_output(7))) OR (fsm_output(4))
      OR (fsm_output(6));
  mux_369_nl <= MUX_s_1_2_2(or_tmp_310, or_423_nl, fsm_output(1));
  and_322_nl <= (NOT mux_369_nl) AND and_dcpl_303;
  attention_5_1_384_384_8_48_k_proj_re_rsci_wadr_d <= MUX_v_9_2_2(SF_LOOP_3_acc_17_itm_8_0,
      INIT_2D_MEM_LOOP_2_2_acc_itm, and_322_nl);
  or_420_nl <= (fsm_output(3)) OR (fsm_output(7)) OR (NOT nor_tmp_79);
  mux_367_nl <= MUX_s_1_2_2(or_tmp_234, or_420_nl, fsm_output(2));
  mux_368_nl <= MUX_s_1_2_2(or_tmp_310, mux_367_nl, fsm_output(1));
  attention_5_1_384_384_8_48_k_proj_re_rsci_we_d_pff <= (NOT mux_368_nl) AND and_dcpl_303;
  INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_2_nl <= MUX_v_4_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd,
      (LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z(39
      DOWNTO 36)), and_317_ssc);
  INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_11_nl <= MUX_v_3_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_1,
      (LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z(35
      DOWNTO 33)), and_317_ssc);
  INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_12_nl <= MUX_v_4_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_2,
      (LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z(32
      DOWNTO 29)), and_317_ssc);
  INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_13_nl <= MUX_s_1_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_3,
      (LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z(28)),
      and_317_ssc);
  INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_14_nl <= MUX_v_3_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_4,
      (LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z(27
      DOWNTO 25)), and_317_ssc);
  INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_15_nl <= MUX_v_9_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_5,
      (LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z(24
      DOWNTO 16)), and_317_ssc);
  INIT_2D_MEM_LOOP_2_2_and_2_nl <= MUX_v_24_2_2(STD_LOGIC_VECTOR'("000000000000000000000000"),
      (INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_2_nl & INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_11_nl
      & INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_12_nl & INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_13_nl
      & INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_14_nl & INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_15_nl),
      INIT_2D_MEM_LOOP_2_2_nor_seb);
  INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_10_nl <= MUX_v_16_2_2((INIT_2D_MEM_LOOP_2_2_asn_psp(15
      DOWNTO 0)), (LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z(15
      DOWNTO 0)), and_317_ssc);
  INIT_2D_MEM_LOOP_2_2_and_7_nl <= MUX_v_16_2_2(STD_LOGIC_VECTOR'("0000000000000000"),
      INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_10_nl, INIT_2D_MEM_LOOP_2_2_nor_seb);
  attention_5_1_384_384_8_48_v_proj_re_rsci_d_d <= INIT_2D_MEM_LOOP_2_2_and_2_nl
      & INIT_2D_MEM_LOOP_2_2_and_7_nl;
  RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_mux_nl <= MUX_v_4_2_2((SF_LOOP_3_acc_17_itm_8_0(8
      DOWNTO 5)), z_out_8, and_dcpl_285);
  RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_mux_3_nl <= MUX_s_1_2_2((SF_LOOP_3_acc_17_itm_8_0(4)),
      (z_out_31(0)), and_dcpl_285);
  RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_mux_4_nl <= MUX_v_4_2_2((SF_LOOP_3_acc_17_itm_8_0(3
      DOWNTO 0)), (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(3 DOWNTO 0)), and_dcpl_285);
  attention_5_1_384_384_8_48_v_proj_re_rsci_radr_d <= RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_mux_nl
      & RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_mux_3_nl & RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_mux_4_nl;
  nor_327_nl <= NOT((fsm_output(2)) OR mux_tmp_359);
  nor_328_nl <= NOT(CONV_SL_1_1(fsm_output(7 DOWNTO 2)/=STD_LOGIC_VECTOR'("101001")));
  mux_360_nl <= MUX_s_1_2_2(nor_327_nl, nor_328_nl, fsm_output(1));
  attention_5_1_384_384_8_48_v_proj_re_rsci_re_d_pff <= mux_360_nl AND (NOT (fsm_output(8)))
      AND (fsm_output(0));
  mux_363_nl <= MUX_s_1_2_2(or_tmp_234, or_tmp_296, fsm_output(1));
  and_309_nl <= (NOT mux_363_nl) AND nor_434_cse AND and_dcpl_257;
  attention_5_1_384_384_8_48_v_proj_re_rsci_wadr_d <= MUX_v_9_2_2(INIT_2D_MEM_LOOP_2_2_acc_itm,
      SF_LOOP_3_acc_17_itm_8_0, and_309_nl);
  or_412_nl <= (NOT (fsm_output(0))) OR (fsm_output(2)) OR (fsm_output(3)) OR (NOT
      (fsm_output(7))) OR (fsm_output(4)) OR (fsm_output(6));
  or_411_nl <= (NOT (fsm_output(2))) OR (fsm_output(3)) OR (fsm_output(7)) OR (NOT
      nor_tmp_79);
  mux_361_nl <= MUX_s_1_2_2(or_411_nl, or_tmp_299, fsm_output(0));
  mux_362_nl <= MUX_s_1_2_2(or_412_nl, mux_361_nl, fsm_output(1));
  attention_5_1_384_384_8_48_v_proj_re_rsci_we_d_pff <= (NOT mux_362_nl) AND nor_434_cse;
  attention_5_1_384_384_8_48_q_proj_rsci_radr_d <= RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_4_rmff_3_1
      & RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_4_rmff_0 & RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_9_rmff
      & RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_7_rmff & RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_8_rmff_2
      & RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_8_rmff_1_0;
  or_401_nl <= (NOT (fsm_output(0))) OR (NOT (fsm_output(2))) OR (fsm_output(3));
  mux_357_nl <= MUX_s_1_2_2(or_tmp_265, or_401_nl, fsm_output(1));
  or_400_nl <= CONV_SL_1_1(fsm_output(1 DOWNTO 0)/=STD_LOGIC_VECTOR'("00")) OR (NOT
      and_582_cse);
  mux_358_nl <= MUX_s_1_2_2(mux_357_nl, or_400_nl, LINEAR_FORWARD_NO_MUL_LOOP_5_or_itm);
  attention_5_1_384_384_8_48_q_proj_rsci_re_d_pff <= (NOT mux_358_nl) AND and_dcpl_127
      AND and_dcpl_217;
  attention_5_1_384_384_8_48_q_proj_rsci_wadr_d <= RESHAPE_2D_TO_3D_LOOP_3_acc_11_psp_1
      & (LINEAR_FORWARD_NO_MUL_LOOP_4_ki_4_0_sva_3_0(0)) & (reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1(0))
      & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_0 & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1;
  attention_5_1_384_384_8_48_q_proj_rsci_we_d_pff <= and_dcpl_283 AND and_dcpl_157;
  attention_5_1_384_384_8_48_k_proj_rsci_radr_d <= RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_4_rmff_3_1
      & RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_4_rmff_0 & RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_9_rmff
      & RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_7_rmff & RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_8_rmff_2
      & RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_8_rmff_1_0;
  attention_5_1_384_384_8_48_k_proj_rsci_wadr_d <= APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp_4
      & (APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(0)) & (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(3
      DOWNTO 0));
  attention_5_1_384_384_8_48_v_proj_rsci_radr_d <= z_out_8 & (z_out_31(0)) & (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(3
      DOWNTO 0));
  attention_5_1_384_384_8_48_v_proj_rsci_re_d_pff <= and_dcpl_261 AND and_dcpl_275
      AND and_73_cse;
  attention_5_1_384_384_8_48_v_proj_rsci_wadr_d <= APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp_4
      & (APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(0)) & (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(3
      DOWNTO 0));
  attention_5_1_384_384_8_48_v_proj_rsci_we_d_pff <= and_dcpl_191;
  APPLY_ROTARY_POS_EMB_LOOP_6_acc_7_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_mul_3_itm)
      + SIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_mul_4_itm), 56));
  attention_5_1_384_384_8_48_q_embed_rsci_d_d <= APPLY_ROTARY_POS_EMB_LOOP_6_acc_7_nl(55
      DOWNTO 16);
  attention_5_1_384_384_8_48_q_embed_rsci_radr_d <= z_out_8 & (z_out_31(0)) & (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(3
      DOWNTO 0));
  attention_5_1_384_384_8_48_q_embed_rsci_re_d_pff <= and_dcpl_243;
  attention_5_1_384_384_8_48_q_embed_rsci_wadr_d <= APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp_4
      & (APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(0)) & (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(3
      DOWNTO 0));
  attention_5_1_384_384_8_48_q_embed_rsci_we_d_pff <= and_dcpl_185 AND and_dcpl_111;
  APPLY_ROTARY_POS_EMB_LOOP_6_acc_14_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_mul_8_itm)
      + SIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_mul_9_itm), 56));
  attention_5_1_384_384_8_48_k_embed_rsci_d_d <= APPLY_ROTARY_POS_EMB_LOOP_6_acc_14_nl(55
      DOWNTO 16);
  attention_5_1_384_384_8_48_k_embed_rsci_radr_d <= RESHAPE_2D_TO_3D_LOOP_3_acc_11_psp_1_mx0w0
      & (z_out_35(0)) & (reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1(0)) & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_0
      & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1;
  attention_5_1_384_384_8_48_k_embed_rsci_re_d_pff <= and_dcpl_261 AND and_dcpl_275
      AND and_71_cse;
  attention_5_1_384_384_8_48_k_embed_rsci_wadr_d <= APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp_4
      & (APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(0)) & (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(3
      DOWNTO 0));
  and_290_nl <= and_dcpl_261 AND and_dcpl_258 AND and_71_cse;
  attention_5_1_384_384_8_48_k_cache_upd_rsci_d_d <= MUX_v_40_2_2(CACHE_UPDATE_LOOP_3_qr_sva_1,
      attention_5_1_384_384_8_48_k_embed_rsci_q_d, and_290_nl);
  attention_5_1_384_384_8_48_k_cache_upd_rsci_radr_d <= z_out_33 & (z_out_6(2 DOWNTO
      0)) & (z_out_36_2_0(0)) & (reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1(0)) & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_0
      & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1;
  attention_5_1_384_384_8_48_k_cache_upd_rsci_re_d_pff <= and_dcpl_267;
  attention_5_1_384_384_8_48_k_cache_upd_rsci_wadr_d <= CACHE_UPDATE_LOOP_3_acc_18_psp_1
      & (APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva(2 DOWNTO 0)) & (CACHE_UPDATE_LOOP_3_qif_acc_3_psp(0))
      & (reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1(0)) & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_0
      & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1;
  attention_5_1_384_384_8_48_k_cache_upd_rsci_we_d_pff <= and_dcpl_255 AND and_dcpl_171;
  and_283_nl <= and_dcpl_261 AND and_dcpl_258 AND and_73_cse;
  attention_5_1_384_384_8_48_v_cache_upd_rsci_d_d <= MUX_v_40_2_2(CACHE_UPDATE_LOOP_3_1_qr_sva_1,
      attention_5_1_384_384_8_48_v_proj_rsci_q_d, and_283_nl);
  attention_5_1_384_384_8_48_v_cache_upd_rsci_radr_d <= z_out_32 & (z_out_6(2 DOWNTO
      0)) & (z_out_34_2_0(0)) & (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(3 DOWNTO 0));
  attention_5_1_384_384_8_48_v_cache_upd_rsci_re_d_pff <= and_dcpl_228;
  attention_5_1_384_384_8_48_v_cache_upd_rsci_wadr_d <= CACHE_UPDATE_LOOP_3_1_acc_18_psp_1
      & (reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_ftd(0)) & reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd
      & reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd_1 & (RESHAPE_2D_TO_3D_LOOP_3_2_mux_3_itm_2_0(0))
      & (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(3 DOWNTO 0));
  attention_5_1_384_384_8_48_k_proj_transposed_rsci_radr_d <= z_out_32 & (GEMM_3D_FLOAT_LOOP_4_acc_17_sdt_1(6
      DOWNTO 0)) & reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1;
  attention_5_1_384_384_8_48_k_proj_transposed_rsci_wadr_d <= APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt
      & (INIT_2D_MEM_LOOP_2_2_acc_itm(6 DOWNTO 0)) & reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1;
  attention_5_1_384_384_8_48_k_proj_transposed_rsci_we_d_pff <= and_dcpl_233 AND
      and_dcpl_190;
  SF_LOOP_3_SF_LOOP_3_SF_LOOP_3_acc_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_58_itm)
      + SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd,
      1),2)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd,
      1),2)) & STD_LOGIC_VECTOR'( "0000") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd,
      1),2)) & STD_LOGIC_VECTOR'( "00") & reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd &
      '0' & reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd,
      1),2)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd,
      1),2)) & STD_LOGIC_VECTOR'( "00") & reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd &
      '0' & reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd & STD_LOGIC_VECTOR'( "000") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd,
      1),2)) & '0' & reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd & '0' & reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd),
      38));
  FIXED32_MIN_or_nl <= (and_dcpl_245 AND and_dcpl_134) OR and_dcpl_241;
  and_270_nl <= and_dcpl_225 AND and_dcpl_190;
  FIXED32_MIN_mux1h_1_nl <= MUX1HOT_v_40_3_2(z_out_20, STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_SF_LOOP_3_SF_LOOP_3_acc_nl),
      38),40)), (SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_z(39 DOWNTO 0)), STD_LOGIC_VECTOR'(
      FIXED32_MIN_or_nl & and_dcpl_239 & and_270_nl));
  nor_324_nl <= NOT((fsm_output(1)) OR (fsm_output(2)) OR (NOT (fsm_output(6))) OR
      (fsm_output(8)));
  nor_325_nl <= NOT((fsm_output(5)) OR (NOT (fsm_output(1))) OR (fsm_output(2)) OR
      (NOT (fsm_output(6))) OR (fsm_output(8)));
  mux_355_nl <= MUX_s_1_2_2(nor_324_nl, nor_325_nl, fsm_output(3));
  and_714_nl <= (fsm_output(4)) AND mux_355_nl;
  or_390_nl <= (fsm_output(2)) OR (NOT (fsm_output(6))) OR (fsm_output(8));
  or_389_nl <= (NOT (fsm_output(2))) OR (fsm_output(6)) OR (NOT (fsm_output(8)));
  mux_354_nl <= MUX_s_1_2_2(or_390_nl, or_389_nl, fsm_output(1));
  nor_326_nl <= NOT(CONV_SL_1_1(fsm_output(5 DOWNTO 3)/=STD_LOGIC_VECTOR'("000"))
      OR mux_354_nl);
  mux_356_nl <= MUX_s_1_2_2(and_714_nl, nor_326_nl, fsm_output(0));
  and_824_nl <= mux_356_nl AND (fsm_output(7));
  attention_5_1_384_384_8_48_attn_weights_rsci_d_d <= MUX_v_40_2_2(STD_LOGIC_VECTOR'("0000000000000000000000000000000000000000"),
      FIXED32_MIN_mux1h_1_nl, and_824_nl);
  GEMM_3D_FLOAT_LOOP_3_or_nl <= and_dcpl_246 OR and_dcpl_248 OR and_dcpl_249 OR and_dcpl_251
      OR and_dcpl_228;
  GEMM_3D_FLOAT_LOOP_3_mux1h_4_nl <= MUX1HOT_v_4_3_2(APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp_4,
      z_out_8, z_out_35, STD_LOGIC_VECTOR'( and_dcpl_243 & GEMM_3D_FLOAT_LOOP_3_or_nl
      & attention_5_1_384_384_8_48_attn_weights_rsci_radr_d_mx0c2));
  GEMM_3D_FLOAT_LOOP_3_or_5_nl <= and_dcpl_246 OR and_dcpl_249 OR and_dcpl_251 OR
      and_dcpl_228;
  GEMM_3D_FLOAT_LOOP_3_mux1h_12_nl <= MUX1HOT_s_1_4_2((APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(0)),
      (z_out_31(0)), (APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0(0)), (z_out_35(0)),
      STD_LOGIC_VECTOR'( and_dcpl_243 & GEMM_3D_FLOAT_LOOP_3_or_5_nl & attention_5_1_384_384_8_48_attn_weights_rsci_radr_d_mx0c2
      & and_dcpl_248));
  GEMM_3D_FLOAT_LOOP_3_or_1_nl <= and_dcpl_243 OR and_dcpl_246 OR and_dcpl_251;
  GEMM_3D_FLOAT_LOOP_3_or_2_nl <= and_dcpl_249 OR and_dcpl_228;
  GEMM_3D_FLOAT_LOOP_3_mux1h_13_nl <= MUX1HOT_s_1_3_2(reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1,
      (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(0)), (GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva(0)),
      STD_LOGIC_VECTOR'( GEMM_3D_FLOAT_LOOP_3_or_1_nl & and_dcpl_248 & GEMM_3D_FLOAT_LOOP_3_or_2_nl));
  GEMM_3D_FLOAT_LOOP_3_and_1_nl <= GEMM_3D_FLOAT_LOOP_3_mux1h_13_nl AND (NOT attention_5_1_384_384_8_48_attn_weights_rsci_radr_d_mx0c2);
  attention_5_1_384_384_8_48_attn_weights_rsci_radr_d <= GEMM_3D_FLOAT_LOOP_3_mux1h_4_nl
      & GEMM_3D_FLOAT_LOOP_3_mux1h_12_nl & GEMM_3D_FLOAT_LOOP_3_and_1_nl;
  nor_321_nl <= NOT((NOT (fsm_output(2))) OR (fsm_output(5)) OR (NOT nor_tmp_90));
  mux_347_nl <= MUX_s_1_2_2(or_197_cse, or_tmp_272, fsm_output(5));
  and_712_nl <= (fsm_output(2)) AND (NOT mux_347_nl);
  mux_348_nl <= MUX_s_1_2_2(nor_321_nl, and_712_nl, fsm_output(0));
  and_713_nl <= CONV_SL_1_1(fsm_output(6 DOWNTO 2)=STD_LOGIC_VECTOR'("01111"));
  nor_322_nl <= NOT((fsm_output(5)) OR (fsm_output(3)) OR (NOT nor_tmp_79));
  mux_346_nl <= MUX_s_1_2_2(and_713_nl, nor_322_nl, fsm_output(0));
  mux_349_nl <= MUX_s_1_2_2(mux_348_nl, mux_346_nl, fsm_output(1));
  attention_5_1_384_384_8_48_attn_weights_rsci_re_d_pff <= mux_349_nl AND and_dcpl_26;
  GEMM_3D_FLOAT_LOOP_3_mux1h_2_nl <= MUX1HOT_v_4_3_2(z_out_8, APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp_4,
      APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt, STD_LOGIC_VECTOR'( and_dcpl_234 & GEMM_3D_FLOAT_LOOP_3_or_3_cse
      & and_dcpl_239));
  GEMM_3D_FLOAT_LOOP_3_mux1h_10_nl <= MUX1HOT_s_1_3_2((z_out_31(0)), (APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(0)),
      (LINEAR_FORWARD_NO_MUL_LOOP_4_ki_4_0_sva_3_0(0)), STD_LOGIC_VECTOR'( and_dcpl_234
      & GEMM_3D_FLOAT_LOOP_3_or_3_cse & and_dcpl_239));
  GEMM_3D_FLOAT_LOOP_3_GEMM_3D_FLOAT_LOOP_3_mux_nl <= MUX_s_1_2_2(reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1,
      (GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva(0)), and_dcpl_241);
  attention_5_1_384_384_8_48_attn_weights_rsci_wadr_d <= GEMM_3D_FLOAT_LOOP_3_mux1h_2_nl
      & GEMM_3D_FLOAT_LOOP_3_mux1h_10_nl & GEMM_3D_FLOAT_LOOP_3_GEMM_3D_FLOAT_LOOP_3_mux_nl;
  nand_165_nl <= NOT(CONV_SL_1_1(fsm_output(6 DOWNTO 3)=STD_LOGIC_VECTOR'("0111")));
  mux_350_nl <= MUX_s_1_2_2(or_tmp_272, nand_165_nl, fsm_output(2));
  or_384_nl <= CONV_SL_1_1(fsm_output(6 DOWNTO 2)/=STD_LOGIC_VECTOR'("10000"));
  mux_351_nl <= MUX_s_1_2_2(mux_350_nl, or_384_nl, fsm_output(0));
  or_382_nl <= (fsm_output(0)) OR (fsm_output(2)) OR (fsm_output(5)) OR (NOT nor_tmp_90);
  mux_352_nl <= MUX_s_1_2_2(mux_351_nl, or_382_nl, fsm_output(1));
  attention_5_1_384_384_8_48_attn_weights_rsci_we_d_pff <= (NOT mux_352_nl) AND and_dcpl_26;
  nor_319_nl <= NOT((fsm_output(0)) OR (fsm_output(2)) OR (NOT (fsm_output(5))) OR
      (NOT (fsm_output(3))) OR (fsm_output(8)) OR (NOT nor_tmp_79));
  nor_320_nl <= NOT((NOT (fsm_output(0))) OR (NOT (fsm_output(2))) OR (fsm_output(5))
      OR (fsm_output(3)) OR (NOT (fsm_output(8))) OR (fsm_output(4)) OR (fsm_output(6)));
  mux_345_nl <= MUX_s_1_2_2(nor_319_nl, nor_320_nl, fsm_output(1));
  and_nl <= mux_345_nl AND (fsm_output(7));
  attention_5_1_384_384_8_48_attn_output_rsci_d_d <= MUX_v_40_2_2(STD_LOGIC_VECTOR'("0000000000000000000000000000000000000000"),
      z_out_20, and_nl);
  GEMM_3D_FLOAT_LOOP_3_1_GEMM_3D_FLOAT_LOOP_3_1_mux_nl <= MUX_v_4_2_2(APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp_4,
      z_out_8, attention_5_1_384_384_8_48_attn_output_rsci_radr_d_mx0c1);
  GEMM_3D_FLOAT_LOOP_3_1_GEMM_3D_FLOAT_LOOP_3_1_mux_1_nl <= MUX_s_1_2_2((APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(0)),
      (z_out_31(0)), attention_5_1_384_384_8_48_attn_output_rsci_radr_d_mx0c1);
  attention_5_1_384_384_8_48_attn_output_rsci_radr_d <= GEMM_3D_FLOAT_LOOP_3_1_GEMM_3D_FLOAT_LOOP_3_1_mux_nl
      & GEMM_3D_FLOAT_LOOP_3_1_GEMM_3D_FLOAT_LOOP_3_1_mux_1_nl & (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(3
      DOWNTO 0));
  attention_5_1_384_384_8_48_attn_output_rsci_re_d_pff <= and_dcpl_162 AND ((fsm_output(3))
      XOR (fsm_output(0))) AND and_dcpl_217 AND and_dcpl_216;
  INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_nl <= MUX_v_4_2_2(z_out_8, APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp_4,
      and_dcpl_227);
  INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_1_nl <= MUX_s_1_2_2((z_out_31(0)),
      (APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(0)), and_dcpl_227);
  attention_5_1_384_384_8_48_attn_output_rsci_wadr_d <= INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_nl
      & INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_1_nl & (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(3
      DOWNTO 0));
  or_368_nl <= (NOT (fsm_output(0))) OR (fsm_output(3));
  mux_344_nl <= MUX_s_1_2_2(or_tmp_265, or_368_nl, fsm_output(1));
  attention_5_1_384_384_8_48_attn_output_rsci_we_d_pff <= (NOT mux_344_nl) AND nor_tmp_79
      AND and_dcpl_222;
  attention_5_1_384_384_8_48_attn_output_2D_rsci_d_d <= MUX_v_40_2_2(attention_5_1_384_384_8_48_attn_output_rsci_q_d,
      RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_slc_71_32_1_ncse_sva, and_dcpl_209);
  INIT_2D_MEM_LOOP_2_mux1h_nl <= MUX1HOT_v_3_3_2((reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1(8
      DOWNTO 6)), (INIT_2D_MEM_LOOP_2_2_acc_itm(8 DOWNTO 6)), GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva,
      STD_LOGIC_VECTOR'( and_dcpl_211 & and_dcpl_213 & and_232_ssc));
  INIT_2D_MEM_LOOP_2_and_nl <= MUX_v_3_2_2(STD_LOGIC_VECTOR'("000"), INIT_2D_MEM_LOOP_2_mux1h_nl,
      ATTN_2D_LOOP_3_and_seb);
  INIT_2D_MEM_LOOP_2_mux1h_6_nl <= MUX1HOT_v_4_3_2((reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1(5
      DOWNTO 2)), (INIT_2D_MEM_LOOP_2_2_acc_itm(5 DOWNTO 2)), APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt,
      STD_LOGIC_VECTOR'( and_dcpl_211 & and_dcpl_213 & and_232_ssc));
  INIT_2D_MEM_LOOP_2_and_5_nl <= MUX_v_4_2_2(STD_LOGIC_VECTOR'("0000"), INIT_2D_MEM_LOOP_2_mux1h_6_nl,
      ATTN_2D_LOOP_3_and_seb);
  INIT_2D_MEM_LOOP_2_mux1h_7_nl <= MUX1HOT_v_2_3_2((reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1(1
      DOWNTO 0)), (INIT_2D_MEM_LOOP_2_2_acc_itm(1 DOWNTO 0)), APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0,
      STD_LOGIC_VECTOR'( and_dcpl_211 & and_dcpl_213 & and_232_ssc));
  INIT_2D_MEM_LOOP_2_and_6_nl <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"), INIT_2D_MEM_LOOP_2_mux1h_7_nl,
      ATTN_2D_LOOP_3_and_seb);
  attention_5_1_384_384_8_48_attn_output_2D_rsci_radr_d <= INIT_2D_MEM_LOOP_2_and_nl
      & INIT_2D_MEM_LOOP_2_and_5_nl & INIT_2D_MEM_LOOP_2_and_6_nl;
  or_1093_nl <= (fsm_output(0)) OR (fsm_output(5));
  nand_158_nl <= NOT(CONV_SL_1_1(RMS_NORM_LOOP_2_2_dfr_sva_8_0=STD_LOGIC_VECTOR'("111111111"))
      AND RMS_NORM_LOOP_2_2_dfr_sva_9 AND (fsm_output(0)) AND (fsm_output(5)));
  mux_337_nl <= MUX_s_1_2_2(or_1093_nl, nand_158_nl, fsm_output(4));
  or_357_nl <= (fsm_output(3)) OR mux_337_nl;
  or_355_nl <= (NOT (fsm_output(3))) OR (fsm_output(4)) OR (NOT((fsm_output(0)) AND
      (fsm_output(5))));
  mux_338_nl <= MUX_s_1_2_2(or_357_nl, or_355_nl, fsm_output(2));
  nor_314_nl <= NOT((fsm_output(6)) OR mux_338_nl);
  nor_315_nl <= NOT((NOT (fsm_output(6))) OR (fsm_output(2)) OR (fsm_output(3)) OR
      (NOT (fsm_output(4))) OR (NOT (fsm_output(0))) OR (fsm_output(5)));
  mux_339_nl <= MUX_s_1_2_2(nor_314_nl, nor_315_nl, fsm_output(1));
  attention_5_1_384_384_8_48_attn_output_2D_rsci_re_d_pff <= mux_339_nl AND and_dcpl_80;
  GEMM_3D_FLOAT_LOOP_3_1_GEMM_3D_FLOAT_LOOP_3_1_mux_2_nl <= MUX_v_4_2_2(APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp_4,
      (INIT_2D_MEM_LOOP_2_2_acc_itm(8 DOWNTO 5)), and_dcpl_209);
  GEMM_3D_FLOAT_LOOP_3_1_GEMM_3D_FLOAT_LOOP_3_1_mux_4_nl <= MUX_s_1_2_2((APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(0)),
      (INIT_2D_MEM_LOOP_2_2_acc_itm(4)), and_dcpl_209);
  GEMM_3D_FLOAT_LOOP_3_1_GEMM_3D_FLOAT_LOOP_3_1_mux_5_nl <= MUX_v_4_2_2((APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(3
      DOWNTO 0)), (INIT_2D_MEM_LOOP_2_2_acc_itm(3 DOWNTO 0)), and_dcpl_209);
  attention_5_1_384_384_8_48_attn_output_2D_rsci_wadr_d <= GEMM_3D_FLOAT_LOOP_3_1_GEMM_3D_FLOAT_LOOP_3_1_mux_2_nl
      & GEMM_3D_FLOAT_LOOP_3_1_GEMM_3D_FLOAT_LOOP_3_1_mux_4_nl & GEMM_3D_FLOAT_LOOP_3_1_GEMM_3D_FLOAT_LOOP_3_1_mux_5_nl;
  nor_316_nl <= NOT((fsm_output(2)) OR (fsm_output(3)) OR (NOT (fsm_output(8))) OR
      (fsm_output(7)) OR (fsm_output(6)));
  and_710_nl <= (fsm_output(2)) AND (fsm_output(3)) AND (NOT (fsm_output(8))) AND
      and_dcpl_165;
  mux_340_nl <= MUX_s_1_2_2(nor_316_nl, and_710_nl, fsm_output(0));
  attention_5_1_384_384_8_48_attn_output_2D_rsci_we_d_pff <= mux_340_nl AND and_dcpl_204
      AND (NOT (fsm_output(1)));
  attention_5_1_384_384_8_48_quantized_final_output_rsci_d_d <= STD_LOGIC_VECTOR'(
      QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_itm_25_1 & (NOT QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_itm_25_1)
      & (NOT QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_itm_25_1) &
      (NOT QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_itm_25_1) & (NOT
      QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_itm_25_1) & (NOT QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_itm_25_1)
      & (NOT QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_itm_25_1) &
      (NOT QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_itm_25_1));
  attention_5_1_384_384_8_48_quantized_final_output_rsci_radr_d <= GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva
      & APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt & APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0;
  attention_5_1_384_384_8_48_quantized_final_output_rsci_re_d_pff <= and_dcpl_198
      AND and_768_cse AND (NOT (fsm_output(5))) AND and_610_cse AND (NOT (fsm_output(1)))
      AND ((LINEAR_FORWARD_NO_MUL_LOOP_5_3_weight_val_mux_tmp(1)) XOR (LINEAR_FORWARD_NO_MUL_LOOP_5_3_weight_val_mux_tmp(0)));
  attention_5_1_384_384_8_48_quantized_final_output_rsci_wadr_d <= GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva
      & APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt & APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0;
  attention_5_1_384_384_8_48_quantized_final_output_rsci_we_d_pff <= and_dcpl_201
      AND and_dcpl_178;
  APPLY_ROTARY_POS_EMB_LOOP_3_acc_6_nl <= STD_LOGIC_VECTOR(CONV_SIGNED( -SIGNED(attention_5_1_384_384_8_48_q_proj_rsci_q_d),
      40));
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_d_d <= MUX_v_40_2_2(attention_5_1_384_384_8_48_q_proj_rsci_q_d,
      STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(APPLY_ROTARY_POS_EMB_LOOP_3_acc_6_nl),
      40)), and_dcpl_193);
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_radr_d <= z_out_8 & (z_out_31(0)) &
      (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(3 DOWNTO 0));
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_re_d_pff <= and_dcpl_186;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_wadr_d <= APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_rmff_4_2
      & APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_rmff_1 & APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_rmff_0
      & APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_1_rmff & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_0
      & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_we_d_pff <= and_dcpl_185 AND and_dcpl_118
      AND (NOT((fsm_output(1)) OR LINEAR_FORWARD_NO_MUL_LOOP_5_or_itm));
  APPLY_ROTARY_POS_EMB_LOOP_3_acc_12_nl <= STD_LOGIC_VECTOR(CONV_SIGNED( -SIGNED(attention_5_1_384_384_8_48_k_proj_rsci_q_d),
      40));
  apply_rotary_pos_emb_1_8_48_rotated_k_rsci_d_d <= MUX_v_40_2_2(attention_5_1_384_384_8_48_k_proj_rsci_q_d,
      STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(APPLY_ROTARY_POS_EMB_LOOP_3_acc_12_nl),
      40)), and_dcpl_193);
  apply_rotary_pos_emb_1_8_48_rotated_k_rsci_radr_d <= z_out_8 & (z_out_31(0)) &
      (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(3 DOWNTO 0));
  apply_rotary_pos_emb_1_8_48_rotated_k_rsci_wadr_d <= APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_rmff_4_2
      & APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_rmff_1 & APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_rmff_0
      & APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_1_rmff & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_0
      & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1;
  and_dcpl_549 <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)=STD_LOGIC_VECTOR'("011"));
  nor_cse <= NOT(CONV_SL_1_1(fsm_output(4 DOWNTO 3)/=STD_LOGIC_VECTOR'("00")));
  and_dcpl_550 <= and_dcpl_549 AND nor_cse;
  and_dcpl_551 <= and_dcpl_550 AND and_dcpl_125 AND CONV_SL_1_1(fsm_output(1 DOWNTO
      0)=STD_LOGIC_VECTOR'("10"));
  and_dcpl_554 <= and_dcpl_550 AND and_dcpl_125 AND CONV_SL_1_1(fsm_output(1 DOWNTO
      0)=STD_LOGIC_VECTOR'("11"));
  and_841_cse <= and_dcpl_549 AND CONV_SL_1_1(fsm_output(4 DOWNTO 3)=STD_LOGIC_VECTOR'("01"))
      AND nor_226_cse AND nor_413_cse;
  and_dcpl_565 <= (NOT (fsm_output(7))) AND (fsm_output(4));
  and_dcpl_566 <= and_dcpl_565 AND (NOT (fsm_output(6)));
  and_dcpl_567 <= and_dcpl_566 AND and_dcpl_112;
  and_dcpl_568 <= and_dcpl_567 AND and_dcpl_100;
  and_dcpl_572 <= and_dcpl_567 AND and_dcpl_118 AND CONV_SL_1_1(fsm_output(1 DOWNTO
      0)=STD_LOGIC_VECTOR'("11"));
  and_dcpl_576 <= and_dcpl_565 AND (fsm_output(6));
  and_dcpl_578 <= and_dcpl_576 AND and_dcpl_101 AND and_dcpl_134;
  and_dcpl_583 <= nor_456_cse AND (fsm_output(6)) AND and_dcpl_101 AND and_dcpl_118
      AND and_dcpl_7;
  nor_550_nl <= NOT((fsm_output(1)) OR (fsm_output(2)) OR (fsm_output(5)) OR (fsm_output(4)));
  and_1460_nl <= (fsm_output(1)) AND (fsm_output(2)) AND (fsm_output(5)) AND (fsm_output(4));
  mux_1011_nl <= MUX_s_1_2_2(nor_550_nl, and_1460_nl, fsm_output(0));
  and_dcpl_586 <= mux_1011_nl AND CONV_SL_1_1(fsm_output(7 DOWNTO 6)=STD_LOGIC_VECTOR'("11"))
      AND and_dcpl_101;
  and_dcpl_588 <= nor_226_cse AND CONV_SL_1_1(fsm_output(1 DOWNTO 0)=STD_LOGIC_VECTOR'("10"));
  and_dcpl_592 <= (fsm_output(7)) AND (NOT (fsm_output(4))) AND (fsm_output(6)) AND
      and_dcpl_112 AND and_dcpl_588;
  and_dcpl_596 <= (fsm_output(7)) AND (fsm_output(4)) AND (fsm_output(6)) AND and_dcpl_112
      AND and_dcpl_134;
  and_dcpl_600 <= nor_456_cse AND (NOT (fsm_output(6))) AND and_dcpl_120 AND and_dcpl_588;
  and_dcpl_603 <= and_dcpl_566 AND (fsm_output(8)) AND (fsm_output(3)) AND and_dcpl_100;
  and_dcpl_607 <= and_dcpl_576 AND and_dcpl_120 AND (NOT (fsm_output(5))) AND (fsm_output(2))
      AND and_dcpl_7;
  and_dcpl_615 <= nor_387_cse AND (fsm_output(6)) AND nor_cse AND (fsm_output(5))
      AND (NOT (fsm_output(2))) AND (NOT (fsm_output(1))) AND (fsm_output(0));
  and_dcpl_622 <= and_dcpl_549 AND nor_cse AND (NOT (fsm_output(5))) AND (fsm_output(2))
      AND (fsm_output(1)) AND (fsm_output(0));
  and_dcpl_641 <= nor_456_cse AND (fsm_output(6)) AND (fsm_output(8)) AND (NOT (fsm_output(3)))
      AND (fsm_output(5)) AND (NOT (fsm_output(2))) AND (fsm_output(1)) AND (fsm_output(0));
  and_dcpl_650 <= and_dcpl_125 AND CONV_SL_1_1(fsm_output(1 DOWNTO 0)=STD_LOGIC_VECTOR'("01"));
  and_dcpl_654 <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)=STD_LOGIC_VECTOR'("000")) AND
      nor_cse AND and_dcpl_650;
  and_dcpl_658 <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)=STD_LOGIC_VECTOR'("100")) AND
      nor_cse AND and_dcpl_650;
  nor_562_cse <= NOT((fsm_output(7)) OR (fsm_output(4)) OR (fsm_output(6)));
  and_dcpl_669 <= nor_562_cse AND (fsm_output(8)) AND (NOT (fsm_output(3))) AND (NOT
      (fsm_output(5))) AND (fsm_output(2)) AND (NOT (fsm_output(1))) AND (fsm_output(0));
  and_dcpl_676 <= and_dcpl_106 AND CONV_SL_1_1(fsm_output(4 DOWNTO 3)=STD_LOGIC_VECTOR'("01"))
      AND nor_226_cse AND and_dcpl_117;
  and_dcpl_683 <= and_dcpl_27 AND nor_cse AND (NOT (fsm_output(5))) AND (fsm_output(2))
      AND and_dcpl_117;
  and_dcpl_686 <= and_584_cse AND CONV_SL_1_1(fsm_output(1 DOWNTO 0)=STD_LOGIC_VECTOR'("11"));
  and_dcpl_687 <= and_dcpl_26 AND (NOT (fsm_output(6)));
  and_dcpl_689 <= and_dcpl_687 AND nor_cse AND and_dcpl_686;
  and_dcpl_692 <= CONV_SL_1_1(fsm_output(4 DOWNTO 3)=STD_LOGIC_VECTOR'("10"));
  and_dcpl_693 <= and_dcpl_687 AND and_dcpl_692;
  and_dcpl_694 <= and_dcpl_693 AND (fsm_output(5)) AND (NOT (fsm_output(2))) AND
      and_dcpl_117;
  and_dcpl_695 <= and_dcpl_693 AND and_dcpl_686;
  and_dcpl_699 <= and_dcpl_27 AND and_dcpl_692 AND and_584_cse AND CONV_SL_1_1(fsm_output(1
      DOWNTO 0)=STD_LOGIC_VECTOR'("01"));
  compute_sqrt_for_or_2_cse <= and_dcpl_694 OR and_dcpl_699;
  and_dcpl_705 <= (fsm_output(7)) AND (NOT (fsm_output(4))) AND (fsm_output(6));
  and_dcpl_707 <= and_dcpl_705 AND and_dcpl_101 AND and_dcpl_125 AND and_dcpl_117;
  and_dcpl_712 <= and_dcpl_705 AND (NOT (fsm_output(8))) AND (fsm_output(3)) AND
      and_dcpl_125 AND nor_413_cse;
  and_dcpl_718 <= (fsm_output(7)) AND (fsm_output(4)) AND (NOT (fsm_output(6))) AND
      and_dcpl_101 AND (fsm_output(5)) AND (NOT (fsm_output(2))) AND and_dcpl_117;
  nor_571_cse <= NOT((NOT (fsm_output(3))) OR (NOT (fsm_output(4))) OR (fsm_output(6)));
  nor_573_cse <= NOT((fsm_output(3)) OR (fsm_output(4)) OR (fsm_output(6)));
  and_1019_cse <= and_dcpl_26 AND (fsm_output(6)) AND (fsm_output(4)) AND (NOT (fsm_output(3)));
  and_dcpl_787 <= nor_387_cse AND (fsm_output(6)) AND nor_tmp_11;
  and_dcpl_788 <= and_dcpl_787 AND nor_226_cse AND and_dcpl_117;
  and_dcpl_791 <= and_dcpl_787 AND nor_226_cse AND CONV_SL_1_1(fsm_output(1 DOWNTO
      0)=STD_LOGIC_VECTOR'("11"));
  and_dcpl_795 <= and_dcpl_787 AND and_dcpl_125 AND nor_413_cse;
  and_dcpl_800 <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)=STD_LOGIC_VECTOR'("101")) AND
      nor_tmp_11 AND and_dcpl_125 AND and_dcpl_117;
  and_dcpl_821 <= nor_387_cse AND CONV_SL_1_1(fsm_output(6 DOWNTO 0)=STD_LOGIC_VECTOR'("1010110"));
  and_dcpl_858 <= nor_562_cse AND (fsm_output(8)) AND (fsm_output(3)) AND (fsm_output(5))
      AND (fsm_output(2)) AND (fsm_output(1)) AND (fsm_output(0));
  and_dcpl_874 <= CONV_SL_1_1(fsm_output(8 DOWNTO 2)=STD_LOGIC_VECTOR'("0001111"))
      AND nor_413_cse;
  and_dcpl_888 <= nor_226_cse AND CONV_SL_1_1(fsm_output(1 DOWNTO 0)=STD_LOGIC_VECTOR'("11"));
  and_dcpl_889 <= NOT((fsm_output(6)) OR (fsm_output(3)));
  and_dcpl_893 <= nor_456_cse AND (NOT (fsm_output(8))) AND and_dcpl_889 AND and_dcpl_888;
  and_dcpl_896 <= nor_456_cse AND (fsm_output(8)) AND and_dcpl_889 AND and_dcpl_888;
  and_dcpl_902 <= (fsm_output(4)) AND (fsm_output(7)) AND (NOT (fsm_output(8))) AND
      (fsm_output(6)) AND (fsm_output(3));
  and_dcpl_903 <= and_dcpl_902 AND nor_226_cse AND nor_413_cse;
  and_dcpl_906 <= and_dcpl_902 AND nor_226_cse AND CONV_SL_1_1(fsm_output(1 DOWNTO
      0)=STD_LOGIC_VECTOR'("10"));
  and_dcpl_913 <= (NOT (fsm_output(4))) AND (fsm_output(7)) AND (NOT (fsm_output(8)))
      AND (fsm_output(6)) AND (NOT (fsm_output(3))) AND nor_226_cse AND CONV_SL_1_1(fsm_output(1
      DOWNTO 0)=STD_LOGIC_VECTOR'("01"));
  and_dcpl_916 <= and_dcpl_902 AND (fsm_output(5)) AND (NOT (fsm_output(2))) AND
      nor_413_cse;
  RMS_NORM_LOOP_1_1_or_ssc <= and_dcpl_893 OR and_dcpl_896 OR and_dcpl_913 OR and_dcpl_916;
  and_dcpl_930 <= (fsm_output(7)) AND (NOT (fsm_output(8))) AND (NOT (fsm_output(4)))
      AND (fsm_output(6)) AND (fsm_output(3)) AND nor_226_cse AND CONV_SL_1_1(fsm_output(1
      DOWNTO 0)=STD_LOGIC_VECTOR'("10"));
  and_dcpl_944 <= (NOT (fsm_output(4))) AND (fsm_output(7)) AND (NOT (fsm_output(8)))
      AND (fsm_output(6)) AND (fsm_output(3)) AND nor_226_cse AND CONV_SL_1_1(fsm_output(1
      DOWNTO 0)=STD_LOGIC_VECTOR'("01"));
  and_dcpl_958 <= (fsm_output(7)) AND (NOT (fsm_output(8))) AND (NOT (fsm_output(4)))
      AND (fsm_output(6)) AND (fsm_output(3)) AND nor_226_cse AND nor_413_cse;
  and_1253_cse <= CONV_SL_1_1(fsm_output=STD_LOGIC_VECTOR'("011000111"));
  and_1275_cse <= and_dcpl_526 AND (NOT (fsm_output(6))) AND (fsm_output(3)) AND
      (fsm_output(5)) AND (fsm_output(2)) AND and_dcpl_117;
  and_dcpl_998 <= and_dcpl_526 AND (fsm_output(6)) AND (NOT (fsm_output(3)));
  and_1280_cse <= and_dcpl_998 AND and_dcpl_125 AND and_dcpl_117;
  and_1283_cse <= and_dcpl_998 AND and_dcpl_125 AND CONV_SL_1_1(fsm_output(1 DOWNTO
      0)=STD_LOGIC_VECTOR'("11"));
  mux_988_cse <= MUX_s_1_2_2((NOT (fsm_output(4))), (fsm_output(4)), fsm_output(6));
  nor_618_nl <= NOT((fsm_output(8)) OR (fsm_output(3)) OR (NOT (fsm_output(6))) OR
      (NOT (fsm_output(5))) OR (fsm_output(7)));
  nor_616_nl <= NOT(CONV_SL_1_1(fsm_output(7 DOWNTO 5)/=STD_LOGIC_VECTOR'("100")));
  nor_617_nl <= NOT(CONV_SL_1_1(fsm_output(7 DOWNTO 5)/=STD_LOGIC_VECTOR'("001")));
  mux_996_nl <= MUX_s_1_2_2(nor_616_nl, nor_617_nl, fsm_output(3));
  and_1476_nl <= (fsm_output(8)) AND mux_996_nl;
  mux_997_nl <= MUX_s_1_2_2(nor_618_nl, and_1476_nl, fsm_output(2));
  and_1477_nl <= (NOT((fsm_output(4)) OR (NOT (fsm_output(0))))) AND mux_997_nl;
  nor_619_nl <= NOT((NOT (fsm_output(4))) OR (fsm_output(0)) OR (fsm_output(2)) OR
      (fsm_output(8)) OR (NOT (fsm_output(3))) OR (fsm_output(6)) OR (NOT (fsm_output(5)))
      OR (fsm_output(7)));
  not_tmp_774 <= MUX_s_1_2_2(and_1477_nl, nor_619_nl, fsm_output(1));
  or_tmp_962 <= (NOT (fsm_output(0))) OR (fsm_output(3)) OR (fsm_output(5)) OR (NOT
      (fsm_output(6)));
  and_dcpl_1046 <= and_dcpl_26 AND (fsm_output(4));
  nor_570_nl <= NOT((fsm_output(3)) OR (NOT (fsm_output(4))) OR (fsm_output(6)));
  mux_1008_cse <= MUX_s_1_2_2(nor_570_nl, nor_571_cse, fsm_output(2));
  nor_628_nl <= NOT((fsm_output(3)) OR (NOT mux_988_cse));
  mux_1007_nl <= MUX_s_1_2_2(nor_628_nl, nor_573_cse, fsm_output(2));
  mux_1009_nl <= MUX_s_1_2_2(mux_1008_cse, mux_1007_nl, fsm_output(0));
  and_dcpl_1051 <= mux_1009_nl AND and_dcpl_26 AND (fsm_output(5)) AND (fsm_output(1));
  and_1472_nl <= CONV_SL_1_1(fsm_output(6 DOWNTO 3)=STD_LOGIC_VECTOR'("0111"));
  nor_569_nl <= NOT(CONV_SL_1_1(fsm_output(6 DOWNTO 3)/=STD_LOGIC_VECTOR'("1000")));
  mux_963_nl <= MUX_s_1_2_2(and_1472_nl, nor_569_nl, fsm_output(0));
  and_1342_cse <= mux_963_nl AND and_dcpl_26 AND CONV_SL_1_1(fsm_output(2 DOWNTO
      1)=STD_LOGIC_VECTOR'("10"));
  and_dcpl_1064 <= and_dcpl_1046 AND (fsm_output(6)) AND (NOT (fsm_output(3)));
  and_dcpl_1072 <= and_dcpl_1064 AND and_584_cse AND CONV_SL_1_1(fsm_output(1 DOWNTO
      0)=STD_LOGIC_VECTOR'("01"));
  and_dcpl_1078 <= (fsm_output(4)) AND (fsm_output(7)) AND (NOT (fsm_output(8)));
  compute_sqrt_for_guess_inv_or_cse <= and_dcpl_583 OR and_dcpl_586 OR and_dcpl_596
      OR and_dcpl_600 OR and_dcpl_607;
  LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_or_cse <= NOT(and_dcpl_622
      OR and_841_cse);
  operator_40_24_true_AC_TRN_AC_WRAP_or_2_cse_1 <= and_dcpl_654 OR and_dcpl_658;
  mux_970_nl <= MUX_s_1_2_2((fsm_output(5)), (NOT (fsm_output(5))), fsm_output(6));
  or_1229_nl <= (fsm_output(1)) OR mux_970_nl;
  mux_971_nl <= MUX_s_1_2_2(or_1229_nl, nand_216_cse, fsm_output(8));
  nor_641_nl <= NOT((fsm_output(2)) OR mux_971_nl);
  nor_606_nl <= NOT((NOT (fsm_output(2))) OR (NOT (fsm_output(8))) OR (fsm_output(1))
      OR (fsm_output(6)) OR (NOT (fsm_output(5))));
  mux_972_nl <= MUX_s_1_2_2(nor_641_nl, nor_606_nl, fsm_output(3));
  nand_265_nl <= NOT((fsm_output(0)) AND mux_972_nl);
  or_1225_nl <= (fsm_output(0)) OR (NOT (fsm_output(3))) OR (fsm_output(2)) OR (fsm_output(8))
      OR (NOT (fsm_output(1))) OR (fsm_output(6)) OR (NOT (fsm_output(5)));
  mux_973_cse <= MUX_s_1_2_2(nand_265_nl, or_1225_nl, fsm_output(4));
  APPLY_ROTARY_POS_EMB_LOOP_6_nor_cse <= NOT(and_1280_cse OR and_1283_cse);
  compute_sqrt_for_guess_inv_or_2_itm <= and_dcpl_572 OR and_dcpl_578;
  compute_sqrt_for_guess_inv_nor_seb <= NOT(and_dcpl_568 OR and_dcpl_592 OR and_dcpl_603);
  compute_sqrt_for_guess_inv_or_4_itm <= and_dcpl_568 OR and_dcpl_603;
  compute_sqrt_for_guess_inv_or_3_itm <= and_dcpl_578 OR and_dcpl_596 OR and_dcpl_600;
  RMS_NORM_LOOP_1_1_or_1_itm <= and_dcpl_896 OR and_dcpl_913 OR and_dcpl_916;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_39 <= '0';
        QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_38_0 <= STD_LOGIC_VECTOR'( "000000000000000000000000000000000000000");
      ELSIF ( QUANTIZE_ACTIVATION_LOOP_1_max_val_and_cse = '1' ) THEN
        QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_39 <= QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_39_mx0w2;
        QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_38_0 <= QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_38_0_mx0w2;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_39 <= '0';
        QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_38_0 <= STD_LOGIC_VECTOR'( "000000000000000000000000000000000000000");
      ELSIF ( QUANTIZE_ACTIVATION_LOOP_1_1_max_val_and_cse = '1' ) THEN
        QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_39 <= QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_39_mx0w2;
        QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_38_0 <= QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_38_0_mx0w2;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        strm_out_rsci_idat_31_2 <= STD_LOGIC_VECTOR'( "000000000000000000000000000000");
      ELSIF ( (input_rsc_clken_d_1 AND (NOT(or_dcpl_91 OR or_dcpl_87))) = '1' ) THEN
        strm_out_rsci_idat_31_2 <= output_rsci_q_d(29 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        reg_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_a_32_0_ftd <= '0';
        reg_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_a_32_0_ftd_1 <= '0';
        operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_29_0 <= STD_LOGIC_VECTOR'(
            "000000000000000000000000000000");
        operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_39 <= '0';
        operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_38_30 <= STD_LOGIC_VECTOR'(
            "000000000");
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_a_71_32
            <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000");
        SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a_55 <= '0';
        SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a_54_16 <= STD_LOGIC_VECTOR'( "000000000000000000000000000000000000000");
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_59_39
            <= STD_LOGIC_VECTOR'( "000000000000000000000");
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_38_0
            <= STD_LOGIC_VECTOR'( "000000000000000000000000000000000000000");
        SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b_39 <= '0';
        SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b_38_0 <= STD_LOGIC_VECTOR'( "000000000000000000000000000000000000000");
        reg_strm_out_rsci_iswt0_cse <= '0';
        reg_strm_in_rsci_iswt0_cse <= '0';
        reg_rms_norm_384_div_cmp_b_ftd_59_38 <= STD_LOGIC_VECTOR'( "0000000000000000000000");
        reg_rms_norm_384_div_cmp_b_ftd_37_0 <= STD_LOGIC_VECTOR'( "00000000000000000000000000000000000000");
        reg_rms_norm_384_div_cmp_b_ftd_1 <= '0';
        reg_rms_norm_384_div_cmp_a_ftd <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000");
        QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_dfm_1_39 <= '0';
        QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_dfm_1_38_0 <= STD_LOGIC_VECTOR'(
            "000000000000000000000000000000000000000");
        QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_dfm_1_39 <= '0';
        QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_dfm_1_38_0 <= STD_LOGIC_VECTOR'(
            "000000000000000000000000000000000000000");
        operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_itm_17
            <= '0';
        for_for_strm_in_tmp_sva_31_2 <= STD_LOGIC_VECTOR'( "000000000000000000000000000000");
        RMS_NORM_LOOP_1_1_slc_RMS_NORM_LOOP_1_1_RMS_NORM_LOOP_1_1_mul_55_16_itm <=
            STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000");
        reg_operator_40_24_true_AC_TRN_AC_WRAP_acc_20_cse <= STD_LOGIC_VECTOR'( "000000");
        operator_40_24_true_AC_TRN_AC_WRAP_acc_29_itm <= STD_LOGIC_VECTOR'( "00000000");
        operator_40_24_true_AC_TRN_AC_WRAP_and_1_itm <= '0';
        operator_40_24_true_AC_TRN_AC_WRAP_acc_30_itm <= STD_LOGIC_VECTOR'( "000000000");
        operator_40_24_true_AC_TRN_AC_WRAP_acc_37_itm <= STD_LOGIC_VECTOR'( "0000000000000000");
        operator_40_24_true_AC_TRN_AC_WRAP_acc_38_itm <= STD_LOGIC_VECTOR'( "00000000000000000");
        operator_40_24_true_AC_TRN_AC_WRAP_acc_45_itm <= STD_LOGIC_VECTOR'( "000000000000000000000000");
        operator_40_24_true_AC_TRN_AC_WRAP_acc_46_itm <= STD_LOGIC_VECTOR'( "0000000000000000000000000");
        operator_40_24_true_AC_TRN_AC_WRAP_acc_52_itm <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000");
        operator_40_24_true_AC_TRN_AC_WRAP_acc_51_itm <= STD_LOGIC_VECTOR'( "000000000000000000000000000000");
        SF_LOOP_3_acc_17_itm_18_9 <= STD_LOGIC_VECTOR'( "0000000000");
        SF_LOOP_3_acc_17_itm_8_0 <= STD_LOGIC_VECTOR'( "000000000");
        reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd <= STD_LOGIC_VECTOR'(
            "0000");
        reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_1 <= STD_LOGIC_VECTOR'(
            "000");
        RMS_NORM_LOOP_2_mul_1_itm <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000000000000000");
        GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva <= STD_LOGIC_VECTOR'( "000");
        reg_attention_round_a_cse_slc <= STD_LOGIC_VECTOR'( "0000");
        LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_slc_LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_conc_1_1_1_0_svs
            <= STD_LOGIC_VECTOR'( "00");
        RESHAPE_2D_TO_3D_LOOP_3_acc_11_psp_1 <= STD_LOGIC_VECTOR'( "0000");
        APPLY_ROTARY_POS_EMB_LOOP_6_mul_8_itm <= STD_LOGIC_VECTOR'( "00000000000000000000000000000000000000000000000000000000");
        APPLY_ROTARY_POS_EMB_LOOP_6_mul_9_itm <= STD_LOGIC_VECTOR'( "00000000000000000000000000000000000000000000000000000000");
        APPLY_ROTARY_POS_EMB_LOOP_6_mul_3_itm <= STD_LOGIC_VECTOR'( "00000000000000000000000000000000000000000000000000000000");
        APPLY_ROTARY_POS_EMB_LOOP_6_mul_4_itm <= STD_LOGIC_VECTOR'( "00000000000000000000000000000000000000000000000000000000");
        CACHE_UPDATE_LOOP_3_qr_sva_1 <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000");
        CACHE_UPDATE_LOOP_3_1_qr_sva_1 <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000");
        CACHE_UPDATE_LOOP_3_1_acc_18_psp_1 <= STD_LOGIC_VECTOR'( "0000");
        CACHE_UPDATE_LOOP_3_acc_18_psp_1 <= STD_LOGIC_VECTOR'( "0000");
        SF_LOOP_3_acc_11_itm_17_15 <= STD_LOGIC_VECTOR'( "000");
        SF_LOOP_3_acc_11_itm_13_0 <= STD_LOGIC_VECTOR'( "00000000000000");
        SF_LOOP_3_mul_12_itm_16_15 <= STD_LOGIC_VECTOR'( "00");
        SF_LOOP_3_mul_12_itm_12_9_slc <= STD_LOGIC_VECTOR'( "000");
        SF_LOOP_3_mul_12_itm_3_0 <= STD_LOGIC_VECTOR'( "0000");
        SF_LOOP_3_mul_15_itm_16_10 <= STD_LOGIC_VECTOR'( "0000000");
        SF_LOOP_3_mul_15_itm_6_0 <= STD_LOGIC_VECTOR'( "0000000");
        SF_LOOP_3_acc_15_itm <= STD_LOGIC_VECTOR'( "0000000000000000000");
        SF_LOOP_3_acc_16_itm <= STD_LOGIC_VECTOR'( "0000000000000000000");
        SF_LOOP_3_acc_30_psp <= STD_LOGIC_VECTOR'( "00000000000000000000");
        SF_LOOP_3_acc_39_itm <= STD_LOGIC_VECTOR'( "0000000");
        SF_LOOP_3_mul_19_itm_12_11 <= STD_LOGIC_VECTOR'( "00");
        SF_LOOP_3_mul_19_itm_9_4 <= STD_LOGIC_VECTOR'( "000000");
        SF_LOOP_3_acc_93_psp <= STD_LOGIC_VECTOR'( "0000");
        SF_LOOP_3_acc_40_itm <= STD_LOGIC_VECTOR'( "00000000000");
        SF_LOOP_3_acc_6_psp_sva_18_17 <= STD_LOGIC_VECTOR'( "00");
        SF_LOOP_3_acc_35_itm <= STD_LOGIC_VECTOR'( "000000000000000000");
        SF_LOOP_3_acc_46_itm <= STD_LOGIC_VECTOR'( "0000000000000000000");
        SF_LOOP_3_acc_50_itm <= STD_LOGIC_VECTOR'( "00000000000000000000000000");
        SF_LOOP_3_acc_54_itm <= STD_LOGIC_VECTOR'( "00000000000000000000000000000000");
        SF_LOOP_3_acc_58_itm <= STD_LOGIC_VECTOR'( "00000000000000000000000000000000000000");
        operator_80_48_true_AC_TRN_AC_WRAP_operator_80_48_true_AC_TRN_AC_WRAP_slc_SOFTMAX_LOOP_4_sqr_56_1_itm_slc
            <= STD_LOGIC_VECTOR'( "00000");
        operator_40_24_true_AC_TRN_AC_WRAP_2_acc_29_itm <= STD_LOGIC_VECTOR'( "00000000");
        operator_40_24_true_AC_TRN_AC_WRAP_2_acc_30_itm <= STD_LOGIC_VECTOR'( "000000000");
        operator_40_24_true_AC_TRN_AC_WRAP_2_acc_37_itm <= STD_LOGIC_VECTOR'( "0000000000000000");
        operator_40_24_true_AC_TRN_AC_WRAP_2_acc_38_itm <= STD_LOGIC_VECTOR'( "00000000000000000");
        operator_40_24_true_AC_TRN_AC_WRAP_2_acc_45_itm <= STD_LOGIC_VECTOR'( "000000000000000000000000");
        operator_40_24_true_AC_TRN_AC_WRAP_2_acc_46_itm <= STD_LOGIC_VECTOR'( "0000000000000000000000000");
        operator_40_24_true_AC_TRN_AC_WRAP_2_acc_52_itm <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000");
        operator_40_24_true_AC_TRN_AC_WRAP_2_acc_51_itm <= STD_LOGIC_VECTOR'( "000000000000000000000000000000");
        RMS_NORM_LOOP_2_2_mul_1_itm <= STD_LOGIC_VECTOR'( "00000000000000000000000000000000000000000000000000000");
        INIT_2D_MEM_LOOP_2_3_INIT_2D_MEM_LOOP_2_3_nor_itm <= '0';
      ELSIF ( input_rsc_clken_d_1 = '1' ) THEN
        reg_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_a_32_0_ftd <= or_314_ssc;
        reg_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_a_32_0_ftd_1 <= NOT or_314_ssc;
        operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_29_0 <= MUX1HOT_v_30_8_2(compute_sqrt_guess_sva_29_0,
            attention_abs_qif_acc_pmx_lpi_1_dfm_mx1_30_1, (compute_sqrt_for_acc_1_itm_40_1_1(29
            DOWNTO 0)), (attention_max_attn_fixed_t_attention_max_attn_fixed_t_and_mut_mx0w2_38_0(29
            DOWNTO 0)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(29 DOWNTO 0)), compute_sqrt_1_guess_sva_29_0,
            attention_abs_4_qif_acc_pmx_lpi_1_dfm_mx1_30_1, (compute_sqrt_1_for_acc_1_itm_40_1_1(29
            DOWNTO 0)), STD_LOGIC_VECTOR'( and_149_nl & compute_sqrt_guess_and_1_nl
            & and_dcpl_152 & and_dcpl_140 & and_dcpl_144 & and_164_nl & compute_sqrt_guess_and_3_nl
            & and_dcpl_154));
        operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_39 <= operator_40_24_true_AC_TRN_AC_WRAP_mux1h_nl
            AND nor_512_seb;
        operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_38_30 <= MUX_v_9_2_2(STD_LOGIC_VECTOR'("000000000"),
            operator_40_24_true_AC_TRN_AC_WRAP_mux1h_2_nl, nor_512_seb);
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_a_71_32
            <= MUX1HOT_v_40_5_2(attention_5_1_384_384_8_48_v_proj_re_rsci_q_d, INIT_2D_MEM_LOOP_2_2_asn_psp,
            STD_LOGIC_VECTOR'( "0000000000000000000000000000000001111111"), output_rsci_q_d,
            INIT_2D_MEM_LOOP_2_1_asn_psp, STD_LOGIC_VECTOR'( and_dcpl_155 & and_dcpl_156
            & mux_312_nl & and_176_nl & and_177_nl));
        SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a_55 <= GEMM_3D_FLOAT_LOOP_3_mux_nl
            AND (NOT and_186_ssc);
        SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a_54_16 <= MUX1HOT_v_39_3_2((attention_5_1_384_384_8_48_attn_weights_rsci_q_d(38
            DOWNTO 0)), reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1, STD_LOGIC_VECTOR'(
            "000000000000000000000010000000000000000"), STD_LOGIC_VECTOR'( and_181_nl
            & and_184_ssc & and_186_ssc));
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_59_39
            <= MUX1HOT_v_21_4_2((LINEAR_FORWARD_NO_MUL_LOOP_2_2_mul_1_itm(59 DOWNTO
            39)), STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_max_attn_fixed_t_1_conc_psp_mx0w11_39,
            1),21)), STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd,
            1),21)), (LINEAR_FORWARD_NO_MUL_LOOP_2_3_mul_1_itm(59 DOWNTO 39)), STD_LOGIC_VECTOR'(
            and_dcpl_170 & and_dcpl_172 & and_191_ssc & and_192_ssc));
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_38_0
            <= MUX1HOT_v_39_4_2((LINEAR_FORWARD_NO_MUL_LOOP_2_2_mul_1_itm(38 DOWNTO
            0)), attention_max_attn_fixed_t_1_conc_psp_mx0w11_38_0, reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1,
            (LINEAR_FORWARD_NO_MUL_LOOP_2_3_mul_1_itm(38 DOWNTO 0)), STD_LOGIC_VECTOR'(
            and_dcpl_170 & and_dcpl_172 & and_191_ssc & and_192_ssc));
        SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b_39 <= MUX1HOT_s_1_3_2((softmax_1_8_6_sum_sva_1(39)),
            (compute_sqrt_1_for_acc_1_itm_40_1_1(39)), reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd,
            STD_LOGIC_VECTOR'( and_193_ssc & and_dcpl_154 & and_194_ssc));
        SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b_38_0 <= MUX1HOT_v_39_3_2((softmax_1_8_6_sum_sva_1(38
            DOWNTO 0)), (compute_sqrt_1_for_acc_1_itm_40_1_1(38 DOWNTO 0)), reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1,
            STD_LOGIC_VECTOR'( and_193_ssc & and_dcpl_154 & and_194_ssc));
        reg_strm_out_rsci_iswt0_cse <= and_dcpl_128 AND and_dcpl_178;
        reg_strm_in_rsci_iswt0_cse <= NOT(or_tmp_210 OR or_550_cse OR mux_333_nl
            OR or_dcpl_96);
        reg_rms_norm_384_div_cmp_b_ftd_59_38 <= MUX1HOT_v_22_4_2(STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(compute_sqrt_for_acc_1_itm_40_1_1(39),
            1),22)), STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd,
            1),22)), (LINEAR_FORWARD_NO_MUL_LOOP_2_1_mul_1_itm(60 DOWNTO 39)), (LINEAR_FORWARD_NO_MUL_LOOP_2_mul_1_itm(59
            DOWNTO 38)), STD_LOGIC_VECTOR'( and_dcpl_152 & and_197_itm & and_dcpl_170
            & and_dcpl_183));
        reg_rms_norm_384_div_cmp_b_ftd_37_0 <= MUX1HOT_v_38_4_2((compute_sqrt_for_acc_1_itm_40_1_1(38
            DOWNTO 1)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(38 DOWNTO 1)), (LINEAR_FORWARD_NO_MUL_LOOP_2_1_mul_1_itm(38
            DOWNTO 1)), (LINEAR_FORWARD_NO_MUL_LOOP_2_mul_1_itm(37 DOWNTO 0)), STD_LOGIC_VECTOR'(
            and_dcpl_152 & and_197_itm & and_dcpl_170 & and_dcpl_183));
        reg_rms_norm_384_div_cmp_b_ftd_1 <= rms_norm_384_mux1h_7_nl AND (NOT and_dcpl_183);
        reg_rms_norm_384_div_cmp_a_ftd <= MUX1HOT_v_40_4_2(STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000001"),
            attention_5_1_384_384_8_48_k_proj_re_rsci_q_d, INIT_2D_MEM_LOOP_2_1_asn_psp,
            GEMM_3D_FLOAT_LOOP_4_1_asn_itm, STD_LOGIC_VECTOR'( and_201_nl & and_dcpl_155
            & and_dcpl_156 & and_dcpl_183));
        QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_dfm_1_39 <= QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_39_mx0w2;
        QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_dfm_1_38_0 <= QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_38_0_mx0w2;
        QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_dfm_1_39 <= QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_39_mx0w2;
        QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_dfm_1_38_0 <= QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_38_0_mx0w2;
        operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_itm_17
            <= MUX_s_1_2_2((operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z(17)),
            (z_out(17)), and_dcpl_360);
        for_for_strm_in_tmp_sva_31_2 <= strm_in_rsci_idat_mxwt;
        RMS_NORM_LOOP_1_1_slc_RMS_NORM_LOOP_1_1_RMS_NORM_LOOP_1_1_mul_55_16_itm <=
            z_out_18_67_16(39 DOWNTO 0);
        reg_operator_40_24_true_AC_TRN_AC_WRAP_acc_20_cse <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_82_nl),
            6) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39)),
            1), 1), 6) + CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_74_nl),
            6) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38)),
            1), 1), 6) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(z_out_4), 3), 6) +
            CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_64_nl),
            6) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36)),
            1), 1), 6), 6));
        operator_40_24_true_AC_TRN_AC_WRAP_acc_29_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
            (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(15)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(15))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(15)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(15))),
            7), 8) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_27_nl),
            8) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (operator_40_24_true_AC_TRN_AC_WRAP_acc_3_psp_sva_1(2)),
            1), 1), 8), 8));
        operator_40_24_true_AC_TRN_AC_WRAP_and_1_itm <= (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39))
            AND (NOT (z_out_5_1_0(1))) AND ((z_out_5_1_0(0)) OR CONV_SL_1_1(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(6
            DOWNTO 0)/=STD_LOGIC_VECTOR'("0000000")));
        operator_40_24_true_AC_TRN_AC_WRAP_acc_30_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_28_nl),
            9) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(16))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(16)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(16))
            & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(12),
            1),2))), 8), 9) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_nand_cse,
            1), 1), 9), 9));
        operator_40_24_true_AC_TRN_AC_WRAP_acc_37_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
            (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(23)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(23))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(23)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(23))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(23)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(23))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(23)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(23))),
            15), 16) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_35_nl),
            16), 16));
        operator_40_24_true_AC_TRN_AC_WRAP_acc_38_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(24))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(24)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(24))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(24)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(24))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(24)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(24))
            & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(20),
            1),2))), 16), 17) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_36_nl),
            17), 17));
        operator_40_24_true_AC_TRN_AC_WRAP_acc_45_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
            (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31))),
            23), 24) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_43_nl),
            24), 24));
        operator_40_24_true_AC_TRN_AC_WRAP_acc_46_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32))
            & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28),
            1),2))), 24), 25) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_44_nl),
            25), 25));
        operator_40_24_true_AC_TRN_AC_WRAP_acc_52_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34),
            1),2))), 30), 31) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_50_nl),
            31), 31));
        operator_40_24_true_AC_TRN_AC_WRAP_acc_51_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
            (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37))), 29), 30) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_49_nl),
            30), 30));
        SF_LOOP_3_acc_17_itm_18_9 <= MUX_v_10_2_2((z_out_27(18 DOWNTO 9)), (SF_LOOP_3_acc_17_sdt(18
            DOWNTO 9)), and_dcpl_448);
        SF_LOOP_3_acc_17_itm_8_0 <= MUX1HOT_v_9_3_2(RMS_NORM_LOOP_2_2_asn_SF_LOOP_3_acc_17_itm_1_8_RMS_NORM_LOOP_2_and_nl,
            (z_out_27(8 DOWNTO 0)), (SF_LOOP_3_acc_17_sdt(8 DOWNTO 0)), STD_LOGIC_VECTOR'(
            (NOT mux_643_nl) & and_dcpl_360 & and_dcpl_448));
        reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd <= z_out_12_23_0(23
            DOWNTO 20);
        reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_1 <= MUX_v_3_2_2((z_out_12_23_0(19
            DOWNTO 17)), (operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_conc_2_itm_19_0(19
            DOWNTO 17)), and_475_itm);
        RMS_NORM_LOOP_2_mul_1_itm <= z_out_1(51 DOWNTO 0);
        GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva <= MUX_v_3_2_2(STD_LOGIC_VECTOR'("000"),
            GEMM_3D_FLOAT_LOOP_4_1_l_mux1h_4_nl, mux_689_nl);
        reg_attention_round_a_cse_slc <= z_out_1(55 DOWNTO 52);
        LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_slc_LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_conc_1_1_1_0_svs
            <= MUX_v_2_2_2(LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_mux_tmp, STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_90_nl),
            2)), and_dcpl_458);
        RESHAPE_2D_TO_3D_LOOP_3_acc_11_psp_1 <= MUX_v_4_2_2(RESHAPE_2D_TO_3D_LOOP_3_acc_11_psp_1_mx0w0,
            STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_92_nl), 4)), and_dcpl_458);
        APPLY_ROTARY_POS_EMB_LOOP_6_mul_8_itm <= z_out_25;
        APPLY_ROTARY_POS_EMB_LOOP_6_mul_9_itm <= z_out_26;
        APPLY_ROTARY_POS_EMB_LOOP_6_mul_3_itm <= z_out_27;
        APPLY_ROTARY_POS_EMB_LOOP_6_mul_4_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED'(
            SIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_mux_29_nl & APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_or_2_nl
            & APPLY_ROTARY_POS_EMB_LOOP_6_mux_30_nl & APPLY_ROTARY_POS_EMB_LOOP_6_mux_31_nl)
            * SIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_8_nl
            & APPLY_ROTARY_POS_EMB_LOOP_6_mux_32_nl)), 56));
        CACHE_UPDATE_LOOP_3_qr_sva_1 <= CACHE_UPDATE_LOOP_3_qif_read_rom_k_cache_rom_map_1_itm;
        CACHE_UPDATE_LOOP_3_1_qr_sva_1 <= CACHE_UPDATE_LOOP_3_1_qif_read_rom_v_cache_rom_map_1_itm;
        CACHE_UPDATE_LOOP_3_1_acc_18_psp_1 <= z_out_32;
        CACHE_UPDATE_LOOP_3_acc_18_psp_1 <= z_out_33;
        SF_LOOP_3_acc_11_itm_17_15 <= SF_LOOP_3_acc_11_itm_1(17 DOWNTO 15);
        SF_LOOP_3_acc_11_itm_13_0 <= SF_LOOP_3_acc_11_itm_1(13 DOWNTO 0);
        SF_LOOP_3_mul_12_itm_16_15 <= z_out_21(16 DOWNTO 15);
        SF_LOOP_3_mul_12_itm_12_9_slc <= z_out_21(12 DOWNTO 10);
        SF_LOOP_3_mul_12_itm_3_0 <= z_out_21(3 DOWNTO 0);
        SF_LOOP_3_mul_15_itm_16_10 <= SF_LOOP_3_mul_15_itm_1(16 DOWNTO 10);
        SF_LOOP_3_mul_15_itm_6_0 <= SF_LOOP_3_mul_15_itm_1(6 DOWNTO 0);
        SF_LOOP_3_acc_15_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(z_out_23),
            18), 19) + CONV_SIGNED(CONV_SIGNED(SIGNED(z_out), 18), 19), 19));
        SF_LOOP_3_acc_16_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(z_out_23),
            18), 19) + CONV_SIGNED(CONV_SIGNED(SIGNED(z_out), 18), 19), 19));
        SF_LOOP_3_acc_30_psp <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_27_nl),
            20) + SIGNED(SF_LOOP_3_acc_26_itm_19_9 & SF_LOOP_3_acc_26_itm_8_0), 20));
        SF_LOOP_3_acc_39_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(UNSIGNED(SF_LOOP_3_acc_38_nl),
            7) + CONV_SIGNED(CONV_SIGNED(SIGNED(STD_LOGIC_VECTOR'( "10111") & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(2))),
            6), 7) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(SF_LOOP_3_acc_5_psp_sva(20),
            1), 1), 7), 7));
        SF_LOOP_3_mul_19_itm_12_11 <= z_out_21(12 DOWNTO 11);
        SF_LOOP_3_mul_19_itm_9_4 <= z_out_21(9 DOWNTO 4);
        SF_LOOP_3_acc_93_psp <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'(
            (SF_LOOP_3_acc_5_psp_sva(20)) & '0' & (SF_LOOP_3_acc_5_psp_sva(20))),
            3), 4) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(SF_LOOP_3_acc_5_psp_sva(21),
            1),3)), 3), 4), 4));
        SF_LOOP_3_acc_40_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_mul_7_itm),
            10), 11) + CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_39_itm), 7),
            11) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(SF_LOOP_3_acc_6_psp_sva_1(17),
            1), 1), 11), 11));
        SF_LOOP_3_acc_6_psp_sva_18_17 <= SF_LOOP_3_acc_6_psp_sva_1(18 DOWNTO 17);
        SF_LOOP_3_acc_35_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED((SF_LOOP_3_acc_6_psp_sva_1(18))
            & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SF_LOOP_3_acc_6_psp_sva_1(18),
            1),3)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SF_LOOP_3_acc_6_psp_sva_1(18),
            1),2)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SF_LOOP_3_acc_6_psp_sva_1(18),
            1),2)) & STD_LOGIC_VECTOR'( "00") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SF_LOOP_3_acc_6_psp_sva_1(18),
            1),4))), 17), 18) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_6_psp_sva_1(16
            DOWNTO 0)), 17), 18), 18));
        SF_LOOP_3_acc_46_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(19
            DOWNTO 18)) & '0' & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(19 DOWNTO
            18)) & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1 & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_0
            & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1 & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(18))
            & APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva), 17), 19) + CONV_SIGNED(SIGNED(SF_LOOP_3_acc_44_nl),
            19), 19));
        SF_LOOP_3_acc_50_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_49_nl),
            26) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_mul_4_itm_23_22 &
            '0' & SF_LOOP_3_mul_4_itm_20_5 & '0' & SF_LOOP_3_mul_4_itm_3_0), 24),
            26), 26));
        SF_LOOP_3_acc_54_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_mul_6_itm),
            31), 32) + CONV_SIGNED(SIGNED(SF_LOOP_3_acc_53_nl), 32), 32));
        SF_LOOP_3_acc_58_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_57_nl),
            38) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_mul_sdt_sva_35_34
            & '0' & SF_LOOP_3_mul_sdt_sva_32_17 & '0' & SF_LOOP_3_mul_sdt_sva_15_0),
            36), 38), 38));
        operator_80_48_true_AC_TRN_AC_WRAP_operator_80_48_true_AC_TRN_AC_WRAP_slc_SOFTMAX_LOOP_4_sqr_56_1_itm_slc
            <= z_out_1(56 DOWNTO 52);
        operator_40_24_true_AC_TRN_AC_WRAP_2_acc_29_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
            (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(15)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(15))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(15)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(15))),
            7), 8) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_27_nl),
            8) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (operator_40_24_true_AC_TRN_AC_WRAP_2_acc_3_psp_sva_1(2)),
            1), 1), 8), 8));
        operator_40_24_true_AC_TRN_AC_WRAP_2_acc_30_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_28_nl),
            9) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(16))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(16)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(16))
            & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(12),
            1),2))), 8), 9) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_nand_cse,
            1), 1), 9), 9));
        operator_40_24_true_AC_TRN_AC_WRAP_2_acc_37_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
            (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(23)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(23))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(23)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(23))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(23)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(23))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(23)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(23))),
            15), 16) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_35_nl),
            16), 16));
        operator_40_24_true_AC_TRN_AC_WRAP_2_acc_38_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(24))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(24)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(24))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(24)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(24))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(24)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(24))
            & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(20),
            1),2))), 16), 17) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_36_nl),
            17), 17));
        operator_40_24_true_AC_TRN_AC_WRAP_2_acc_45_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
            (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31))),
            23), 24) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_43_nl),
            24), 24));
        operator_40_24_true_AC_TRN_AC_WRAP_2_acc_46_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32))
            & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28),
            1),2))), 24), 25) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_44_nl),
            25), 25));
        operator_40_24_true_AC_TRN_AC_WRAP_2_acc_52_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34),
            1),2))), 30), 31) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_50_nl),
            31), 31));
        operator_40_24_true_AC_TRN_AC_WRAP_2_acc_51_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
            (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37))), 29), 30) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_49_nl),
            30), 30));
        RMS_NORM_LOOP_2_2_mul_1_itm <= z_out_17(52 DOWNTO 0);
        INIT_2D_MEM_LOOP_2_3_INIT_2D_MEM_LOOP_2_3_nor_itm <= INIT_2D_MEM_LOOP_2_3_INIT_2D_MEM_LOOP_2_3_nor_itm_1;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        GEMM_3D_FLOAT_LOOP_4_1_asn_itm <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000");
      ELSIF ( (input_rsc_clken_d_1 AND mux_435_nl) = '1' ) THEN
        GEMM_3D_FLOAT_LOOP_4_1_asn_itm <= MUX_v_40_2_2(STD_LOGIC_VECTOR'("0000000000000000000000000000000000000000"),
            rms_norm_384_variance_mux1h_nl, GEMM_3D_FLOAT_LOOP_4_1_or_nl);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        INIT_2D_MEM_LOOP_2_2_acc_itm <= STD_LOGIC_VECTOR'( "000000000");
      ELSIF ( (input_rsc_clken_d_1 AND (NOT mux_447_nl)) = '1' ) THEN
        INIT_2D_MEM_LOOP_2_2_acc_itm <= MUX_v_9_2_2(STD_LOGIC_VECTOR'("000000000"),
            INIT_2D_MEM_LOOP_2_2_mux1h_15_nl, INIT_2D_MEM_LOOP_2_2_or_nl);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd
            <= STD_LOGIC_VECTOR'( "00000000");
        reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1
            <= STD_LOGIC_VECTOR'( "000000000");
        reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_2 <= STD_LOGIC_VECTOR'(
            "0000");
        reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_3 <= '0';
        reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_4 <= STD_LOGIC_VECTOR'(
            "000");
      ELSIF ( operator_40_24_true_AC_TRN_AC_WRAP_1_and_2_ssc = '1' ) THEN
        reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd
            <= MUX1HOT_v_8_3_2((operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z(16
            DOWNTO 9)), (APPLY_ROTARY_POS_EMB_LOOP_6_cosval_read_rom_cos_tab_rom_map_1_itm(16
            DOWNTO 9)), (z_out(16 DOWNTO 9)), STD_LOGIC_VECTOR'( and_392_itm & operator_40_24_true_AC_TRN_AC_WRAP_1_and_itm
            & and_dcpl_360));
        reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1
            <= MUX1HOT_v_9_4_2(for_for_j_and_nl, (operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z(8
            DOWNTO 0)), (APPLY_ROTARY_POS_EMB_LOOP_6_cosval_read_rom_cos_tab_rom_map_1_itm(8
            DOWNTO 0)), (z_out(8 DOWNTO 0)), STD_LOGIC_VECTOR'( (NOT mux_493_nl)
            & and_392_itm & operator_40_24_true_AC_TRN_AC_WRAP_1_and_itm & and_dcpl_360));
        reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_2 <= MUX1HOT_v_4_3_2((z_out_12_23_0(16
            DOWNTO 13)), (APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_itm(16
            DOWNTO 13)), (operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_conc_2_itm_19_0(16
            DOWNTO 13)), STD_LOGIC_VECTOR'( operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_or_3_cse
            & and_dcpl_375 & and_475_itm));
        reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_3 <= MUX1HOT_s_1_4_2((z_out_12_23_0(12)),
            (APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_itm(12)),
            (operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_conc_2_itm_19_0(12)), (RMS_NORM_LOOP_2_2_read_rom_ln_weight_rom_map_1_itm(12)),
            STD_LOGIC_VECTOR'( operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_or_3_cse
            & and_dcpl_375 & and_475_itm & and_dcpl_213));
        reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_4 <= MUX1HOT_v_3_5_2((RMS_NORM_LOOP_2_read_rom_ln_weight_in_rom_map_1_itm(11
            DOWNTO 9)), (z_out_12_23_0(11 DOWNTO 9)), (APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_itm(11
            DOWNTO 9)), (operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_conc_2_itm_19_0(11
            DOWNTO 9)), (RMS_NORM_LOOP_2_2_read_rom_ln_weight_rom_map_1_itm(11 DOWNTO
            9)), STD_LOGIC_VECTOR'( and_357_itm & operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_or_3_cse
            & and_dcpl_375 & and_475_itm & and_dcpl_213));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm <= '0';
      ELSIF ( (input_rsc_clken_d_1 AND (and_dcpl_343 OR and_dcpl_368 OR and_dcpl_290
          OR and_dcpl_320 OR and_dcpl_299 OR and_dcpl_310 OR CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm_mx0c6
          OR and_dcpl_382 OR and_dcpl_285)) = '1' ) THEN
        CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm <= MUX1HOT_s_1_9_2(for_for_for_for_nor_nl,
            nand_170_cse, INIT_2D_MEM_LOOP_2_and_1_nl, LINEAR_FORWARD_NO_MUL_LOOP_5_1_or_cse,
            LINEAR_FORWARD_NO_MUL_LOOP_5_LINEAR_FORWARD_NO_MUL_LOOP_5_and_1_tmp,
            LINEAR_FORWARD_NO_MUL_LOOP_5_and_1_nl, LINEAR_FORWARD_NO_MUL_LOOP_2_LINEAR_FORWARD_NO_MUL_LOOP_2_nor_nl,
            CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_nl, (NOT z_out_28_2), STD_LOGIC_VECTOR'(
            and_dcpl_343 & and_dcpl_368 & and_dcpl_290 & and_dcpl_320 & and_dcpl_299
            & and_dcpl_310 & CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm_mx0c6
            & and_dcpl_382 & and_dcpl_285));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        attention_abs_qif_acc_pmx_lpi_1_dfm <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000");
      ELSIF ( (input_rsc_clken_d_1 AND (NOT(xor_dcpl_7 AND and_dcpl_131))) = '1'
          ) THEN
        attention_abs_qif_acc_pmx_lpi_1_dfm <= MUX_v_31_2_2(attention_abs_qif_acc_pmx_lpi_1_dfm_mx0w0,
            (rms_norm_384_val_acc_psp_sva_1(30 DOWNTO 0)), and_410_nl);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        compute_sqrt_guess_sva_29_0 <= STD_LOGIC_VECTOR'( "000000000000000000000000000000");
      ELSIF ( (input_rsc_clken_d_1 AND ((and_dcpl_386 AND and_dcpl_134) OR and_dcpl_152))
          = '1' ) THEN
        compute_sqrt_guess_sva_29_0 <= MUX_v_30_2_2(attention_abs_qif_acc_pmx_lpi_1_dfm_mx1_30_1,
            (compute_sqrt_for_acc_1_itm_40_1_1(29 DOWNTO 0)), and_dcpl_152);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt <= STD_LOGIC_VECTOR'( "0000");
      ELSIF ( (input_rsc_clken_d_1 AND mux_531_nl) = '1' ) THEN
        APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt <= MUX_v_4_2_2(STD_LOGIC_VECTOR'("0000"),
            compute_sqrt_for_i_mux1h_nl, mux_542_nl);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        RMS_NORM_LOOP_2_2_dfr_sva_9 <= '0';
        RMS_NORM_LOOP_2_2_dfr_sva_8_0 <= STD_LOGIC_VECTOR'( "000000000");
      ELSIF ( RMS_NORM_LOOP_2_2_and_ssc = '1' ) THEN
        RMS_NORM_LOOP_2_2_dfr_sva_9 <= (operator_40_24_true_AC_TRN_AC_WRAP_mux_nl
            AND (NOT RMS_NORM_LOOP_2_2_dfr_sva_mx0c3) AND (NOT RMS_NORM_LOOP_2_2_dfr_sva_mx0c0))
            OR RMS_NORM_LOOP_2_2_dfr_sva_mx0c2;
        RMS_NORM_LOOP_2_2_dfr_sva_8_0 <= MUX_v_9_2_2(operator_40_24_true_AC_TRN_AC_WRAP_and_1_nl,
            STD_LOGIC_VECTOR'("111111111"), RMS_NORM_LOOP_2_2_dfr_sva_mx0c2);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm <=
            '0';
      ELSIF ( (input_rsc_clken_d_1 AND (and_dcpl_396 OR APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c1
          OR APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c2
          OR and_dcpl_267 OR APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c4
          OR and_dcpl_248 OR APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c6
          OR and_dcpl_211 OR and_dcpl_331)) = '1' ) THEN
        APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm <=
            MUX1HOT_s_1_5_2((z_out_6(3)), z_out_28_2, z_out_30_2, z_out_29_2, RMS_NORM_LOOP_1_1_acc_3_itm_2_1,
            STD_LOGIC_VECTOR'( and_dcpl_396 & compute_sqrt_for_or_3_nl & compute_sqrt_for_or_4_nl
            & compute_sqrt_for_or_5_nl & and_dcpl_211));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd <= '0';
        reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1 <= STD_LOGIC_VECTOR'( "000000000000000000000000000000000000000");
      ELSIF ( GEMM_3D_FLOAT_LOOP_3_and_ssc = '1' ) THEN
        reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd <= MUX1HOT_s_1_11_2((compute_sqrt_for_acc_1_itm_40_1_1(39)),
            (input_rsci_q_d(39)), attention_max_attn_fixed_t_attention_max_attn_fixed_t_and_mut_mx0w2_39,
            (operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z(39)), (attention_5_1_384_384_8_48_q_proj_rsci_q_d(39)),
            (attention_5_1_384_384_8_48_q_embed_rsci_q_d(39)), (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(39)),
            (z_out_20(39)), (attention_5_1_384_384_8_48_attn_output_2D_rsci_q_d(39)),
            (compute_sqrt_1_for_acc_1_itm_40_1_1(39)), attention_max_attn_fixed_t_1_conc_psp_mx0w11_39,
            STD_LOGIC_VECTOR'( and_dcpl_152 & and_447_itm & and_dcpl_140 & and_448_itm
            & and_dcpl_351 & and_dcpl_352 & and_451_itm & and_452_itm & and_453_itm
            & and_dcpl_154 & and_dcpl_172));
        reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1 <= MUX1HOT_v_39_11_2((compute_sqrt_for_acc_1_itm_40_1_1(38
            DOWNTO 0)), (input_rsci_q_d(38 DOWNTO 0)), attention_max_attn_fixed_t_attention_max_attn_fixed_t_and_mut_mx0w2_38_0,
            (operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z(38 DOWNTO 0)), (attention_5_1_384_384_8_48_q_proj_rsci_q_d(38
            DOWNTO 0)), (attention_5_1_384_384_8_48_q_embed_rsci_q_d(38 DOWNTO 0)),
            (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(38 DOWNTO 0)), (z_out_20(38
            DOWNTO 0)), (attention_5_1_384_384_8_48_attn_output_2D_rsci_q_d(38 DOWNTO
            0)), (compute_sqrt_1_for_acc_1_itm_40_1_1(38 DOWNTO 0)), attention_max_attn_fixed_t_1_conc_psp_mx0w11_38_0,
            STD_LOGIC_VECTOR'( and_dcpl_152 & and_447_itm & and_dcpl_140 & and_448_itm
            & and_dcpl_351 & and_dcpl_352 & and_451_itm & and_452_itm & and_453_itm
            & and_dcpl_154 & and_dcpl_172));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        exit_QUANTIZE_ACTIVATION_LOOP_2_sva_dfm <= '0';
      ELSIF ( (input_rsc_clken_d_1 AND (NOT(or_dcpl_128 OR or_dcpl_125 OR or_dcpl_85)))
          = '1' ) THEN
        exit_QUANTIZE_ACTIVATION_LOOP_2_sva_dfm <= exit_QUANTIZE_ACTIVATION_LOOP_2_1_sva_dfm_mx0w0;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_5 <= STD_LOGIC_VECTOR'(
            "000000000");
      ELSIF ( (input_rsc_clken_d_1 AND (NOT and_dcpl_513) AND (NOT and_dcpl_351))
          = '1' ) THEN
        reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_5 <= MUX1HOT_v_9_6_2((RMS_NORM_LOOP_2_read_rom_ln_weight_in_rom_map_1_itm(8
            DOWNTO 0)), (z_out_12_23_0(8 DOWNTO 0)), z_out_15, (APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_itm(8
            DOWNTO 0)), (operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_conc_2_itm_19_0(8
            DOWNTO 0)), (RMS_NORM_LOOP_2_2_read_rom_ln_weight_rom_map_1_itm(8 DOWNTO
            0)), STD_LOGIC_VECTOR'( and_357_itm & operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_or_3_cse
            & and_dcpl_414 & and_dcpl_375 & and_475_itm & and_dcpl_213));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        SF_LOOP_3_acc_26_itm_19_9 <= STD_LOGIC_VECTOR'( "00000000000");
      ELSIF ( SF_LOOP_3_and_ssc = '1' ) THEN
        SF_LOOP_3_acc_26_itm_19_9 <= SF_LOOP_3_acc_26_sdt(19 DOWNTO 9);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        SF_LOOP_3_acc_26_itm_8_0 <= STD_LOGIC_VECTOR'( "000000000");
      ELSIF ( (SF_LOOP_3_and_ssc AND mux_656_nl) = '1' ) THEN
        SF_LOOP_3_acc_26_itm_8_0 <= MUX_v_9_2_2(z_out_13, (SF_LOOP_3_acc_26_sdt(8
            DOWNTO 0)), and_dcpl_360);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        RMS_NORM_LOOP_2_slc_RMS_NORM_LOOP_2_mul_67_28_ncse_sva <= STD_LOGIC_VECTOR'(
            "0000000000000000000000000000000000000000");
      ELSIF ( (input_rsc_clken_d_1 AND (NOT(or_dcpl_128 OR or_dcpl_130 OR or_272_cse)))
          = '1' ) THEN
        RMS_NORM_LOOP_2_slc_RMS_NORM_LOOP_2_mul_67_28_ncse_sva <= z_out_18_67_16(51
            DOWNTO 12);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        attention_abs_3_qr_sva <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000");
      ELSIF ( (input_rsc_clken_d_1 AND (NOT(and_dcpl_115 AND and_dcpl_242))) = '1'
          ) THEN
        attention_abs_3_qr_sva <= attention_abs_2_mux_2;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        QUANTIZE_ACTIVATION_LOOP_2_slc_40_1_svs <= '0';
      ELSIF ( (input_rsc_clken_d_1 AND (NOT(or_dcpl_128 OR or_dcpl_133))) = '1' )
          THEN
        QUANTIZE_ACTIVATION_LOOP_2_slc_40_1_svs <= QUANTIZE_ACTIVATION_LOOP_2_acc_4_nl(40);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_5_2 <= STD_LOGIC_VECTOR'( "0000");
        APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0 <= STD_LOGIC_VECTOR'( "00");
      ELSIF ( APPLY_ROTARY_POS_EMB_LOOP_6_k_and_3_cse = '1' ) THEN
        APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_5_2 <= RESHAPE_2D_TO_3D_LOOP_3_1_k_5_0_sva_2(5
            DOWNTO 2);
        APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0 <= MUX_v_2_2_2(QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_nl,
            (RESHAPE_2D_TO_3D_LOOP_3_1_k_5_0_sva_2(1 DOWNTO 0)), and_487_nl);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0 <= STD_LOGIC_VECTOR'( "000");
      ELSIF ( (input_rsc_clken_d_1 AND mux_758_nl) = '1' ) THEN
        APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0 <= MUX_v_3_2_2(STD_LOGIC_VECTOR'("000"),
            QUANTIZE_ACTIVATION_LOOP_5_1_k_mux1h_1_nl, APPLY_ROTARY_POS_EMB_LOOP_1_i_nand_nl);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LINEAR_FORWARD_NO_MUL_LOOP_4_ki_4_0_sva_3_0 <= STD_LOGIC_VECTOR'( "0000");
      ELSIF ( (input_rsc_clken_d_1 AND (and_dcpl_468 OR and_dcpl_469 OR and_dcpl_306
          OR and_dcpl_246)) = '1' ) THEN
        LINEAR_FORWARD_NO_MUL_LOOP_4_ki_4_0_sva_3_0 <= MUX_v_4_2_2(STD_LOGIC_VECTOR'("0000"),
            LINEAR_FORWARD_NO_MUL_LOOP_4_ki_mux1h_2_nl, not_1935_nl);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0 <= STD_LOGIC_VECTOR'( "000");
      ELSIF ( (input_rsc_clken_d_1 AND (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0_mx0c0
          OR GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0_mx0c1 OR GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0_mx0c2
          OR GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0_mx0c3)) = '1' ) THEN
        GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0 <= MUX_v_3_2_2(STD_LOGIC_VECTOR'("000"),
            GEMM_3D_FLOAT_LOOP_4_1_l_mux1h_5_nl, GEMM_3D_FLOAT_LOOP_1_1_i_not_1_nl);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd <= STD_LOGIC_VECTOR'( "00");
        reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1 <= '0';
      ELSIF ( CACHE_UPDATE_LOOP_2_1_j_and_ssc = '1' ) THEN
        reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"),
            GEMM_3D_FLOAT_LOOP_4_1_l_mux1h_6_nl, CACHE_UPDATE_LOOP_2_1_j_not_1_nl);
        reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1 <= GEMM_3D_FLOAT_LOOP_4_1_l_mux1h_7_nl
            AND (NOT CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c0);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp_4 <= STD_LOGIC_VECTOR'( "0000");
      ELSIF ( (input_rsc_clken_d_1 AND (mux_849_nl OR (fsm_output(8)))) = '1' ) THEN
        APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp_4 <= MUX_v_4_2_2(STD_LOGIC_VECTOR'("0000"),
            APPLY_ROTARY_POS_EMB_LOOP_6_mux1h_15_nl, not_1936_nl);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_sva <= STD_LOGIC_VECTOR'( "00000000");
        LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_sva <= STD_LOGIC_VECTOR'( "00000000");
        LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_sva <= STD_LOGIC_VECTOR'( "00000000");
      ELSIF ( LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_and_cse = '1' ) THEN
        LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_sva <= LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_read_rom_v_weights_rom_map_1_itm;
        LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_sva <= LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_read_rom_k_weights_rom_map_1_itm;
        LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_sva <= LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_read_rom_q_weights_rom_map_1_itm;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_ftd <= STD_LOGIC_VECTOR'( "000");
        reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd <= '0';
        reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd_1 <= '0';
      ELSIF ( APPLY_ROTARY_POS_EMB_LOOP_3_and_ssc = '1' ) THEN
        reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_ftd <= MUX_v_3_2_2((APPLY_ROTARY_POS_EMB_LOOP_3_mux1h_7_itm_4_1(3
            DOWNTO 1)), (z_out_7(4 DOWNTO 2)), APPLY_ROTARY_POS_EMB_LOOP_3_or_2_cse);
        reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd <= MUX1HOT_s_1_3_2(QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_nl,
            (APPLY_ROTARY_POS_EMB_LOOP_3_mux1h_7_itm_4_1(0)), (z_out_7(1)), STD_LOGIC_VECTOR'(
            APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_mx0c0 & and_dcpl_285 & APPLY_ROTARY_POS_EMB_LOOP_3_or_2_cse));
        reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd_1 <= MUX1HOT_s_1_3_2(QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_4_nl,
            (z_out_35(0)), (z_out_7(0)), STD_LOGIC_VECTOR'( APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_mx0c0
            & and_dcpl_285 & APPLY_ROTARY_POS_EMB_LOOP_3_or_2_cse));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        CACHE_UPDATE_LOOP_3_k_5_0_sva_1_5_2 <= STD_LOGIC_VECTOR'( "0000");
        CACHE_UPDATE_LOOP_3_k_5_0_sva_1_1_0 <= STD_LOGIC_VECTOR'( "00");
      ELSIF ( CACHE_UPDATE_LOOP_3_k_and_1_cse = '1' ) THEN
        CACHE_UPDATE_LOOP_3_k_5_0_sva_1_5_2 <= RESHAPE_2D_TO_3D_LOOP_3_k_5_0_sva_2(5
            DOWNTO 2);
        CACHE_UPDATE_LOOP_3_k_5_0_sva_1_1_0 <= MUX_v_2_2_2(QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_1_nl,
            (RESHAPE_2D_TO_3D_LOOP_3_k_5_0_sva_2(1 DOWNTO 0)), and_dcpl_382);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_slc_LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_conc_1_1_1_0_svs
            <= STD_LOGIC_VECTOR'( "00");
      ELSIF ( (input_rsc_clken_d_1 AND (NOT(or_tmp_304 OR or_dcpl_121))) = '1' )
          THEN
        LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_slc_LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_conc_1_1_1_0_svs
            <= MUX_v_2_4_2((LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_sva(1 DOWNTO
            0)), (LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_sva(3 DOWNTO 2)), (LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_sva(5
            DOWNTO 4)), (LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_sva(7 DOWNTO 6)),
            STD_LOGIC_VECTOR'( reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd & reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd_1));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        CACHE_UPDATE_LOOP_3_qif_acc_3_psp <= STD_LOGIC_VECTOR'( "000");
      ELSIF ( (input_rsc_clken_d_1 AND (NOT((NOT mux_882_nl) AND and_dcpl_487)))
          = '1' ) THEN
        CACHE_UPDATE_LOOP_3_qif_acc_3_psp <= MUX1HOT_v_3_3_2(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(LINEAR_FORWARD_NO_MUL_LOOP_5_acc_2_nl),
            3)), z_out_34_2_0, STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_81_nl),
            3)), STD_LOGIC_VECTOR'( and_dcpl_319 & and_dcpl_493 & and_dcpl_360));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        RESHAPE_2D_TO_3D_LOOP_3_2_mux_3_itm_4_3 <= STD_LOGIC_VECTOR'( "00");
      ELSIF ( RESHAPE_2D_TO_3D_LOOP_3_2_and_ssc = '1' ) THEN
        RESHAPE_2D_TO_3D_LOOP_3_2_mux_3_itm_4_3 <= APPLY_ROTARY_POS_EMB_LOOP_3_k_4_0_sva_2(4
            DOWNTO 3);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        RESHAPE_2D_TO_3D_LOOP_3_2_mux_3_itm_2_0 <= STD_LOGIC_VECTOR'( "000");
      ELSIF ( (RESHAPE_2D_TO_3D_LOOP_3_2_and_ssc AND (NOT(mux_878_nl AND and_dcpl_36)))
          = '1' ) THEN
        RESHAPE_2D_TO_3D_LOOP_3_2_mux_3_itm_2_0 <= MUX1HOT_v_3_6_2(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(LINEAR_FORWARD_NO_MUL_LOOP_5_2_acc_2_nl),
            3)), z_out_36_2_0, STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_69_nl),
            3)), STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_91_nl), 3)),
            LINEAR_FORWARD_NO_MUL_LOOP_3_2_ko_2_0_sva_1_mx0w2, (APPLY_ROTARY_POS_EMB_LOOP_3_k_4_0_sva_2(2
            DOWNTO 0)), STD_LOGIC_VECTOR'( and_dcpl_319 & and_dcpl_493 & and_dcpl_360
            & and_dcpl_458 & and_dcpl_251 & and_dcpl_285));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LINEAR_FORWARD_NO_MUL_LOOP_5_or_itm <= '0';
      ELSIF ( (input_rsc_clken_d_1 AND (and_dcpl_320 OR LINEAR_FORWARD_NO_MUL_LOOP_5_or_itm_mx0c1
          OR and_dcpl_506)) = '1' ) THEN
        LINEAR_FORWARD_NO_MUL_LOOP_5_or_itm <= LINEAR_FORWARD_NO_MUL_LOOP_5_mux_1_nl
            AND (NOT LINEAR_FORWARD_NO_MUL_LOOP_5_or_itm_mx0c1);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        INIT_2D_MEM_LOOP_2_1_asn_psp <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000");
      ELSIF ( (input_rsc_clken_d_1 AND mux_902_nl) = '1' ) THEN
        INIT_2D_MEM_LOOP_2_1_asn_psp <= MUX1HOT_v_40_6_2(attention_5_1_384_384_8_48_k_proj_re_rsci_q_d,
            attention_5_1_384_384_8_48_k_proj_rsci_q_d, attention_5_1_384_384_8_48_k_proj_transposed_rsci_q_d,
            attention_5_1_384_384_8_48_attn_weights_rsci_q_d, attention_5_1_384_384_8_48_v_cache_upd_rsci_q_d,
            output_rsci_q_d, STD_LOGIC_VECTOR'( and_dcpl_350 & and_dcpl_351 & and_dcpl_352
            & and_541_nl & and_dcpl_355 & and_545_nl));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        INIT_2D_MEM_LOOP_2_2_asn_psp <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000");
      ELSIF ( (input_rsc_clken_d_1 AND (and_dcpl_350 OR and_dcpl_351)) = '1' ) THEN
        INIT_2D_MEM_LOOP_2_2_asn_psp <= MUX_v_40_2_2(attention_5_1_384_384_8_48_v_proj_re_rsci_q_d,
            apply_rotary_pos_emb_1_8_48_rotated_q_rsci_q_d, and_dcpl_351);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LINEAR_FORWARD_NO_MUL_LOOP_2_mul_1_itm <= STD_LOGIC_VECTOR'( "000000000000000000000000000000000000000000000000000000000000");
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_mul_1_itm <= STD_LOGIC_VECTOR'( "000000000000000000000000000000000000000000000000000000000000");
        LINEAR_FORWARD_NO_MUL_LOOP_2_1_mul_1_itm <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000000000000000000000000");
      ELSIF ( LINEAR_FORWARD_NO_MUL_LOOP_2_and_cse = '1' ) THEN
        LINEAR_FORWARD_NO_MUL_LOOP_2_mul_1_itm <= z_out_3;
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_mul_1_itm <= z_out_2;
        LINEAR_FORWARD_NO_MUL_LOOP_2_1_mul_1_itm <= z_out_1;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva <= STD_LOGIC_VECTOR'( "000000");
      ELSIF ( (input_rsc_clken_d_1 AND (NOT(mux_922_nl AND and_dcpl_26))) = '1' )
          THEN
        APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva <= MUX_v_6_2_2(STD_LOGIC_VECTOR'("000000"),
            (APPLY_ROTARY_POS_EMB_LOOP_6_k_mux1h_10_nl & APPLY_ROTARY_POS_EMB_LOOP_6_k_mux1h_13_nl),
            APPLY_ROTARY_POS_EMB_LOOP_6_k_nand_1_nl);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        reg_CACHE_UPDATE_LOOP_3_k_5_0_1_ftd <= '0';
        reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1 <= STD_LOGIC_VECTOR'( "00");
        reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_0 <= '0';
        reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1 <= STD_LOGIC_VECTOR'( "00");
      ELSIF ( CACHE_UPDATE_LOOP_3_k_and_ssc = '1' ) THEN
        reg_CACHE_UPDATE_LOOP_3_k_5_0_1_ftd <= APPLY_ROTARY_POS_EMB_LOOP_6_k_APPLY_ROTARY_POS_EMB_LOOP_6_k_mux_1_nl
            AND CACHE_UPDATE_LOOP_3_k_nand_1_itm;
        reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1 <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"),
            APPLY_ROTARY_POS_EMB_LOOP_6_k_mux1h_12_nl, CACHE_UPDATE_LOOP_3_k_nand_1_itm);
        reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_0 <= APPLY_ROTARY_POS_EMB_LOOP_6_k_mux1h_15_nl
            AND CACHE_UPDATE_LOOP_3_k_nand_1_itm;
        reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1 <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"),
            APPLY_ROTARY_POS_EMB_LOOP_6_k_mux1h_14_nl, CACHE_UPDATE_LOOP_3_k_nand_1_itm);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva <= STD_LOGIC_VECTOR'( "00000");
      ELSIF ( (input_rsc_clken_d_1 AND (NOT((NOT mux_946_nl) AND and_dcpl_526)))
          = '1' ) THEN
        APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva <= z_out_6;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        exit_APPLY_ROTARY_POS_EMB_LOOP_3_sva_dfm <= '0';
      ELSIF ( (input_rsc_clken_d_1 AND (NOT(or_dcpl_90 OR or_550_cse OR or_dcpl_154)))
          = '1' ) THEN
        exit_APPLY_ROTARY_POS_EMB_LOOP_3_sva_dfm <= (NOT z_out_30_2) OR LINEAR_FORWARD_NO_MUL_LOOP_5_or_itm;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        SF_LOOP_3_acc_96_psp <= STD_LOGIC_VECTOR'( "00000000000");
        SF_LOOP_3_mul_17_itm <= STD_LOGIC_VECTOR'( "0000000000000000000");
      ELSIF ( SF_LOOP_3_and_2_cse = '1' ) THEN
        SF_LOOP_3_acc_96_psp <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_102_nl),
            11) + CONV_UNSIGNED(CONV_SIGNED(SIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_q_d(2))
            & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(2)) & STD_LOGIC_VECTOR'(
            "000") & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(2)) & STD_LOGIC_VECTOR'(
            "00") & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(2))), 10),
            11), 11));
        SF_LOOP_3_mul_17_itm <= z_out_26(18 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        SF_LOOP_3_mul_5_itm_31_30 <= STD_LOGIC_VECTOR'( "00");
        SF_LOOP_3_mul_5_itm_28_13 <= STD_LOGIC_VECTOR'( "0000000000000000");
        SF_LOOP_3_mul_5_itm_11_0 <= STD_LOGIC_VECTOR'( "000000000000");
        SF_LOOP_3_mul_6_itm <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000");
        SF_LOOP_3_mul_2_itm_18_17 <= STD_LOGIC_VECTOR'( "00");
        SF_LOOP_3_mul_2_itm_15_0 <= STD_LOGIC_VECTOR'( "0000000000000000");
        SF_LOOP_3_mul_3_itm_21_20 <= STD_LOGIC_VECTOR'( "00");
        SF_LOOP_3_mul_3_itm_18_3 <= STD_LOGIC_VECTOR'( "0000000000000000");
        SF_LOOP_3_mul_3_itm_1_0 <= STD_LOGIC_VECTOR'( "00");
        SF_LOOP_3_mul_4_itm_23_22 <= STD_LOGIC_VECTOR'( "00");
        SF_LOOP_3_mul_4_itm_20_5 <= STD_LOGIC_VECTOR'( "0000000000000000");
        SF_LOOP_3_mul_4_itm_3_0 <= STD_LOGIC_VECTOR'( "0000");
        SF_LOOP_3_mul_7_itm <= STD_LOGIC_VECTOR'( "0000000000");
        SF_LOOP_3_acc_28_itm <= STD_LOGIC_VECTOR'( "00000000000000000000");
      ELSIF ( SF_LOOP_3_and_4_ssc = '1' ) THEN
        SF_LOOP_3_mul_5_itm_31_30 <= z_out_25(31 DOWNTO 30);
        SF_LOOP_3_mul_5_itm_28_13 <= z_out_25(28 DOWNTO 13);
        SF_LOOP_3_mul_5_itm_11_0 <= z_out_25(11 DOWNTO 0);
        SF_LOOP_3_mul_6_itm <= z_out_2(30 DOWNTO 0);
        SF_LOOP_3_mul_2_itm_18_17 <= z_out_27(18 DOWNTO 17);
        SF_LOOP_3_mul_2_itm_15_0 <= z_out_27(15 DOWNTO 0);
        SF_LOOP_3_mul_3_itm_21_20 <= z_out_26(21 DOWNTO 20);
        SF_LOOP_3_mul_3_itm_18_3 <= z_out_26(18 DOWNTO 3);
        SF_LOOP_3_mul_3_itm_1_0 <= z_out_26(1 DOWNTO 0);
        SF_LOOP_3_mul_4_itm_23_22 <= z_out_22(23 DOWNTO 22);
        SF_LOOP_3_mul_4_itm_20_5 <= z_out_22(20 DOWNTO 5);
        SF_LOOP_3_mul_4_itm_3_0 <= z_out_22(3 DOWNTO 0);
        SF_LOOP_3_mul_7_itm <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED'( UNSIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(11
            DOWNTO 8)) * UNSIGNED'( "100101")), 10));
        SF_LOOP_3_acc_28_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_1
            & reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_2 & reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_3
            & reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_4 & reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_5)
            + CONV_SIGNED(CONV_SIGNED(SIGNED((SF_LOOP_3_acc_17_itm_18_9(9 DOWNTO
            1)) & '0' & SF_LOOP_3_acc_17_itm_8_0), 19), 20) + CONV_SIGNED(CONV_SIGNED(SIGNED(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_97_nl),
            8)) & (reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd(0))
            & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(16)) & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(16))
            & STD_LOGIC_VECTOR'( "00") & STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_98_nl),
            5))), 18), 20), 20));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        SF_LOOP_3_mul_sdt_sva_35_34 <= STD_LOGIC_VECTOR'( "00");
        SF_LOOP_3_mul_sdt_sva_32_17 <= STD_LOGIC_VECTOR'( "0000000000000000");
        SF_LOOP_3_mul_sdt_sva_15_0 <= STD_LOGIC_VECTOR'( "0000000000000000");
      ELSIF ( SF_LOOP_3_and_11_ssc = '1' ) THEN
        SF_LOOP_3_mul_sdt_sva_35_34 <= z_out_2(35 DOWNTO 34);
        SF_LOOP_3_mul_sdt_sva_32_17 <= z_out_2(32 DOWNTO 17);
        SF_LOOP_3_mul_sdt_sva_15_0 <= z_out_2(15 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        SF_LOOP_3_mul_itm_10_9 <= STD_LOGIC_VECTOR'( "00");
        SF_LOOP_3_mul_itm_7_0 <= STD_LOGIC_VECTOR'( "00000000");
        SF_LOOP_3_acc_5_psp_sva <= STD_LOGIC_VECTOR'( "0000000000000000000000");
      ELSIF ( SF_LOOP_3_and_12_ssc = '1' ) THEN
        SF_LOOP_3_mul_itm_10_9 <= z_out_22(10 DOWNTO 9);
        SF_LOOP_3_mul_itm_7_0 <= z_out_22(7 DOWNTO 0);
        SF_LOOP_3_acc_5_psp_sva <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(SIGNED(SF_LOOP_3_acc_31_nl),
            22) + CONV_UNSIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_30_psp), 20), 22),
            22));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        SF_LOOP_3_mul_1_itm_12_11 <= STD_LOGIC_VECTOR'( "00");
        SF_LOOP_3_mul_1_itm_9_0 <= STD_LOGIC_VECTOR'( "0000000000");
      ELSIF ( SF_LOOP_3_and_14_ssc = '1' ) THEN
        SF_LOOP_3_mul_1_itm_12_11 <= z_out_1(12 DOWNTO 11);
        SF_LOOP_3_mul_1_itm_9_0 <= z_out_1(9 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        softmax_1_8_6_sum_sva_1 <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000");
      ELSIF ( (input_rsc_clken_d_1 AND (NOT((NOT mux_949_nl) AND and_dcpl_166)))
          = '1' ) THEN
        softmax_1_8_6_sum_sva_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm)
            + SIGNED(z_out_20), 40));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        attention_abs_4_qif_acc_pmx_lpi_1_dfm <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000");
      ELSIF ( (input_rsc_clken_d_1 AND (NOT(xor_dcpl_7 AND and_dcpl_146))) = '1'
          ) THEN
        attention_abs_4_qif_acc_pmx_lpi_1_dfm <= MUX_v_31_2_2(attention_abs_4_qif_acc_pmx_lpi_1_dfm_mx0w0,
            (rms_norm_384_1_val_acc_psp_sva_1(30 DOWNTO 0)), and_572_nl);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        compute_sqrt_1_guess_sva_29_0 <= STD_LOGIC_VECTOR'( "000000000000000000000000000000");
      ELSIF ( (input_rsc_clken_d_1 AND ((and_dcpl_212 AND and_dcpl_134) OR and_dcpl_154))
          = '1' ) THEN
        compute_sqrt_1_guess_sva_29_0 <= MUX_v_30_2_2(attention_abs_4_qif_acc_pmx_lpi_1_dfm_mx1_30_1,
            (compute_sqrt_1_for_acc_1_itm_40_1_1(29 DOWNTO 0)), and_dcpl_154);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        exit_QUANTIZE_ACTIVATION_LOOP_2_1_sva_dfm <= '0';
      ELSIF ( (input_rsc_clken_d_1 AND (NOT(or_dcpl_170 OR or_dcpl_133))) = '1' )
          THEN
        exit_QUANTIZE_ACTIVATION_LOOP_2_1_sva_dfm <= exit_QUANTIZE_ACTIVATION_LOOP_2_1_sva_dfm_mx0w0;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_slc_71_32_1_ncse_sva <= STD_LOGIC_VECTOR'(
            "0000000000000000000000000000000000000000");
      ELSIF ( (input_rsc_clken_d_1 AND (NOT(or_dcpl_170 OR or_dcpl_154))) = '1' )
          THEN
        RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_slc_71_32_1_ncse_sva <= z_out_17(71 DOWNTO
            32);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        attention_abs_7_qr_sva <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000");
      ELSIF ( (input_rsc_clken_d_1 AND (NOT(and_dcpl_121 AND and_dcpl_192))) = '1'
          ) THEN
        attention_abs_7_qr_sva <= attention_abs_6_mux_2;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        QUANTIZE_ACTIVATION_LOOP_2_1_slc_40_1_svs <= '0';
      ELSIF ( (input_rsc_clken_d_1 AND (NOT(or_dcpl_127 OR or_dcpl_88 OR or_dcpl_125
          OR or_272_cse))) = '1' ) THEN
        QUANTIZE_ACTIVATION_LOOP_2_1_slc_40_1_svs <= QUANTIZE_ACTIVATION_LOOP_2_1_acc_4_nl(40);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000");
      ELSIF ( (input_rsc_clken_d_1 AND (NOT((NOT mux_959_nl) AND (fsm_output(8)))))
          = '1' ) THEN
        QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva <= LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z(39
            DOWNTO 0);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_sva <= STD_LOGIC_VECTOR'( "00000000");
      ELSIF ( (input_rsc_clken_d_1 AND (NOT(mux_960_nl AND and_dcpl_295 AND (fsm_output(8)))))
          = '1' ) THEN
        LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_sva <= LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_read_rom_o_weights_rom_map_1_itm;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LINEAR_FORWARD_NO_MUL_LOOP_2_3_mul_1_itm <= STD_LOGIC_VECTOR'( "000000000000000000000000000000000000000000000000000000000000");
      ELSIF ( (input_rsc_clken_d_1 AND (NOT(or_dcpl_150 OR or_dcpl_88 OR or_dcpl_125
          OR nand_181_cse))) = '1' ) THEN
        LINEAR_FORWARD_NO_MUL_LOOP_2_3_mul_1_itm <= z_out_3;
      END IF;
    END IF;
  END PROCESS;
  and_149_nl <= (NOT mux_290_itm) AND and_dcpl_131;
  compute_sqrt_guess_and_1_nl <= (NOT and_dcpl_152) AND and_dcpl_106 AND and_dcpl_112
      AND and_dcpl_134;
  and_164_nl <= (NOT mux_290_itm) AND and_dcpl_146;
  compute_sqrt_guess_and_3_nl <= (NOT and_dcpl_154) AND and_dcpl_106 AND and_768_cse
      AND and_dcpl_134;
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_nl <= MUX1HOT_s_1_5_2(RMS_NORM_LOOP_2_2_dfr_sva_9,
      (compute_sqrt_for_acc_1_itm_40_1_1(39)), attention_max_attn_fixed_t_attention_max_attn_fixed_t_and_mut_mx0w2_39,
      reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd, (compute_sqrt_1_for_acc_1_itm_40_1_1(39)),
      STD_LOGIC_VECTOR'( and_168_ssc & and_dcpl_152 & and_dcpl_140 & and_dcpl_144
      & and_dcpl_154));
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_2_nl <= MUX1HOT_v_9_5_2(RMS_NORM_LOOP_2_2_dfr_sva_8_0,
      (compute_sqrt_for_acc_1_itm_40_1_1(38 DOWNTO 30)), (attention_max_attn_fixed_t_attention_max_attn_fixed_t_and_mut_mx0w2_38_0(38
      DOWNTO 30)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(38 DOWNTO 30)), (compute_sqrt_1_for_acc_1_itm_40_1_1(38
      DOWNTO 30)), STD_LOGIC_VECTOR'( and_168_ssc & and_dcpl_152 & and_dcpl_140 &
      and_dcpl_144 & and_dcpl_154));
  nor_309_nl <= NOT(CONV_SL_1_1(fsm_output(4 DOWNTO 2)/=STD_LOGIC_VECTOR'("000")));
  nor_310_nl <= NOT(CONV_SL_1_1(fsm_output(4 DOWNTO 2)/=STD_LOGIC_VECTOR'("001")));
  mux_310_nl <= MUX_s_1_2_2(nor_309_nl, nor_310_nl, fsm_output(1));
  nand_15_nl <= NOT((fsm_output(8)) AND mux_310_nl);
  mux_311_nl <= MUX_s_1_2_2(or_tmp_236, nand_15_nl, fsm_output(0));
  or_1091_nl <= CONV_SL_1_1(fsm_output(7 DOWNTO 6)/=STD_LOGIC_VECTOR'("10")) OR mux_311_nl;
  or_333_nl <= CONV_SL_1_1(fsm_output(7 DOWNTO 6)/=STD_LOGIC_VECTOR'("01")) OR (NOT
      or_tmp_236);
  mux_312_nl <= MUX_s_1_2_2(or_1091_nl, or_333_nl, fsm_output(5));
  and_176_nl <= and_dcpl_138 AND and_dcpl_120 AND and_dcpl_157;
  mux_313_nl <= MUX_s_1_2_2(mux_tmp_306, nand_tmp_14, fsm_output(2));
  mux_314_nl <= MUX_s_1_2_2(mux_313_nl, mux_tmp_307, fsm_output(0));
  mux_315_nl <= MUX_s_1_2_2(mux_314_nl, mux_tmp_308, fsm_output(1));
  and_177_nl <= (NOT mux_315_nl) AND (fsm_output(8));
  GEMM_3D_FLOAT_LOOP_3_mux_nl <= MUX_s_1_2_2((attention_5_1_384_384_8_48_attn_weights_rsci_q_d(39)),
      reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd, and_184_ssc);
  and_181_nl <= and_dcpl_163 AND and_dcpl_161;
  mux_332_nl <= MUX_s_1_2_2((fsm_output(0)), (NOT (fsm_output(0))), fsm_output(1));
  mux_333_nl <= MUX_s_1_2_2(mux_332_nl, or_272_cse, CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm);
  rms_norm_384_mux1h_7_nl <= MUX1HOT_s_1_3_2((compute_sqrt_for_acc_1_itm_40_1_1(0)),
      (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(0)), (LINEAR_FORWARD_NO_MUL_LOOP_2_1_mul_1_itm(0)),
      STD_LOGIC_VECTOR'( and_dcpl_152 & and_197_itm & and_dcpl_170));
  or_166_nl <= CONV_SL_1_1(fsm_output(2 DOWNTO 0)/=STD_LOGIC_VECTOR'("000"));
  mux_336_nl <= MUX_s_1_2_2(nand_1_cse, mux_tmp_334, or_166_nl);
  and_201_nl <= (NOT mux_336_nl) AND and_dcpl_107;
  operator_40_24_true_AC_TRN_AC_WRAP_acc_56_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(15),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(16)),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28)),
      1), 1), 2), 2));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_58_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(17),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(18)),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27),
      1), 1), 2), 2));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_62_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_56_nl),
      3) + CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_58_nl),
      3) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34)),
      1), 1), 3), 3));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_60_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(19),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(20)),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26)),
      1), 1), 2), 2));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_78_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(21),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(22)),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25),
      1), 1), 2), 2));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_80_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_60_nl),
      3) + CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_78_nl),
      3) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33),
      1), 1), 3), 3));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_82_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_62_nl),
      4) + CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_80_nl),
      4) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37),
      1), 1), 4), 4));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_72_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(11),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(12)),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30)),
      1), 1), 2), 2));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_54_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(13),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(14)),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29),
      1), 1), 2), 2));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_74_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_72_nl),
      3) + CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_54_nl),
      3) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35),
      1), 1), 3), 3));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_64_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(9),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(10)),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31),
      1), 1), 2), 2));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_25_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(z_out_9),
      3), 4) + CONV_SIGNED(CONV_SIGNED(SIGNED(z_out_19(5 DOWNTO 4)), 2), 4) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(z_out_19(1),
      1), 1), 4), 4));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_27_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(13)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(13))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(13))), 5), 6) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_25_nl),
      6) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(z_out_19(3), 1), 1), 6), 6));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_28_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(z_out_10),
      6), 8) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(14))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(12)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38),
      1),2))), 6), 8) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_3_psp_sva_1(1),
      1), 1), 8), 8));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_31_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(17)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(17))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(17)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(17))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(17))), 9), 10) + CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_29_itm),
      8), 10) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_and_1_itm,
      1), 1), 10), 10));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_33_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(19)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(19))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(19)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(19))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(19)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(19))),
      11), 12) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_31_nl),
      12), 12));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_35_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(21)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(21))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(21)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(21))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(21)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(21))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(21))), 13), 14) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_33_nl),
      14), 14));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_32_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(18))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(18)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(18))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(18)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(14),
      1),2))), 10), 11) + CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_30_itm),
      9), 11), 11));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_34_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(20))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(20)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(20))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(20)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(20))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(16),
      1),2))), 12), 13) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_32_nl),
      13), 13));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_36_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(22))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(22)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(22))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(22)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(22))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(22)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(18),
      1),2))), 14), 15) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_34_nl),
      15), 15));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_39_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25))), 17), 18) + CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_37_itm),
      16), 18), 18));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_41_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27))),
      19), 20) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_39_nl),
      20), 20));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_43_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29))), 21), 22) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_41_nl),
      22), 22));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_40_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(22),
      1),2))), 18), 19) + CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_38_itm),
      17), 19), 19));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_42_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(24),
      1),2))), 20), 21) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_40_nl),
      21), 21));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_44_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26),
      1),2))), 22), 23) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_42_nl),
      23), 23));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_48_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30),
      1),2))), 26), 27) + CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_46_itm),
      25), 27), 27));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_50_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32),
      1),2))), 28), 29) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_48_nl),
      29), 29));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_47_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33))), 25), 26) + CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_45_itm),
      24), 26), 26));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_49_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35))),
      27), 28) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_47_nl),
      28), 28));
  RMS_NORM_LOOP_2_or_nl <= (not_tmp_307 AND and_dcpl_435 AND (fsm_output(5)) AND
      nand_170_cse) OR and_dcpl_331 OR (and_dcpl_443 AND nor_342_cse AND and_dcpl_117);
  and_460_nl <= not_tmp_307 AND and_dcpl_435 AND (fsm_output(5)) AND (NOT nand_170_cse);
  or_685_nl <= (fsm_output(0)) OR (fsm_output(1)) OR (fsm_output(3)) OR (fsm_output(8))
      OR (NOT (fsm_output(7))) OR (fsm_output(5));
  or_684_nl <= (fsm_output(3)) OR (NOT (fsm_output(8))) OR (fsm_output(7)) OR (NOT
      (fsm_output(5)));
  mux_619_nl <= MUX_s_1_2_2(or_684_nl, or_177_cse, and_706_cse);
  mux_620_nl <= MUX_s_1_2_2(or_685_nl, mux_619_nl, fsm_output(4));
  nor_402_nl <= NOT((NOT (fsm_output(8))) OR (NOT (fsm_output(7))) OR (fsm_output(5)));
  nor_403_nl <= NOT((NOT (fsm_output(8))) OR (fsm_output(7)) OR (NOT (fsm_output(5))));
  mux_617_nl <= MUX_s_1_2_2(nor_402_nl, nor_403_nl, fsm_output(3));
  nand_29_nl <= NOT((fsm_output(1)) AND mux_617_nl);
  mux_618_nl <= MUX_s_1_2_2(nand_29_nl, or_177_cse, fsm_output(4));
  mux_621_nl <= MUX_s_1_2_2(mux_620_nl, mux_618_nl, fsm_output(2));
  mux_613_nl <= MUX_s_1_2_2(or_173_cse, or_tmp_350, fsm_output(3));
  mux_611_nl <= MUX_s_1_2_2((fsm_output(7)), or_677_cse, fsm_output(8));
  mux_612_nl <= MUX_s_1_2_2(or_173_cse, mux_611_nl, fsm_output(3));
  mux_614_nl <= MUX_s_1_2_2(mux_613_nl, mux_612_nl, and_706_cse);
  mux_615_nl <= MUX_s_1_2_2(or_173_cse, mux_614_nl, fsm_output(4));
  or_673_nl <= (NOT(CONV_SL_1_1(fsm_output(1 DOWNTO 0)/=STD_LOGIC_VECTOR'("11"))
      OR CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm)) OR (fsm_output(3));
  mux_609_nl <= MUX_s_1_2_2(or_173_cse, or_tmp_350, or_673_nl);
  mux_610_nl <= MUX_s_1_2_2(or_173_cse, mux_609_nl, fsm_output(4));
  mux_616_nl <= MUX_s_1_2_2(mux_615_nl, mux_610_nl, fsm_output(2));
  mux_622_nl <= MUX_s_1_2_2(mux_621_nl, mux_616_nl, fsm_output(6));
  and_464_nl <= and_dcpl_443 AND nor_342_cse AND and_dcpl_7;
  RMS_NORM_LOOP_2_mux1h_nl <= MUX1HOT_v_9_5_2(z_out_15, STD_LOGIC_VECTOR'( "000000001"),
      SF_LOOP_3_acc_17_itm_8_0, STD_LOGIC_VECTOR'( "101111111"), reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_5,
      STD_LOGIC_VECTOR'( RMS_NORM_LOOP_2_or_nl & and_460_nl & (NOT mux_622_nl) &
      and_464_nl & and_dcpl_369));
  nand_32_nl <= NOT((fsm_output(5)) AND (fsm_output(4)) AND (fsm_output(8)) AND (NOT(and_706_cse
      OR (fsm_output(2)))));
  and_750_nl <= (fsm_output(8)) AND and_707_cse;
  mux_630_nl <= MUX_s_1_2_2(and_750_nl, nor_412_cse, fsm_output(4));
  nand_31_nl <= NOT((fsm_output(5)) AND mux_630_nl);
  mux_631_nl <= MUX_s_1_2_2(nand_32_nl, nand_31_nl, fsm_output(3));
  nand_185_nl <= NOT(CONV_SL_1_1(fsm_output(2 DOWNTO 1)=STD_LOGIC_VECTOR'("11")));
  nand_186_nl <= NOT((NOT((fsm_output(1)) AND CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm))
      AND (fsm_output(2)));
  mux_627_nl <= MUX_s_1_2_2(nand_185_nl, nand_186_nl, fsm_output(0));
  or_696_nl <= (NOT (fsm_output(4))) OR (fsm_output(8)) OR mux_627_nl;
  mux_628_nl <= MUX_s_1_2_2(or_696_nl, (fsm_output(8)), fsm_output(5));
  nand_30_nl <= NOT((fsm_output(4)) AND (NOT((fsm_output(8)) AND (nor_413_cse OR
      (fsm_output(2))))));
  mux_626_nl <= MUX_s_1_2_2(nand_30_nl, (fsm_output(8)), fsm_output(5));
  mux_629_nl <= MUX_s_1_2_2(mux_628_nl, mux_626_nl, fsm_output(3));
  mux_632_nl <= MUX_s_1_2_2(mux_631_nl, mux_629_nl, fsm_output(6));
  nor_409_nl <= NOT(CONV_SL_1_1(fsm_output(2 DOWNTO 0)/=STD_LOGIC_VECTOR'("000")));
  mux_624_nl <= MUX_s_1_2_2(nor_409_nl, and_707_cse, fsm_output(8));
  or_690_nl <= (fsm_output(4)) OR (NOT mux_624_nl);
  mux_625_nl <= MUX_s_1_2_2(or_690_nl, or_701_cse, fsm_output(5));
  or_691_nl <= (fsm_output(6)) OR (fsm_output(3)) OR mux_625_nl;
  mux_633_nl <= MUX_s_1_2_2(mux_632_nl, or_691_nl, fsm_output(7));
  not_1934_nl <= NOT mux_633_nl;
  RMS_NORM_LOOP_2_2_asn_SF_LOOP_3_acc_17_itm_1_8_RMS_NORM_LOOP_2_and_nl <= MUX_v_9_2_2(STD_LOGIC_VECTOR'("000000000"),
      RMS_NORM_LOOP_2_mux1h_nl, not_1934_nl);
  or_714_nl <= (NOT (fsm_output(5))) OR (NOT (fsm_output(4))) OR (fsm_output(2))
      OR (NOT(nand_181_cse AND (fsm_output(8))));
  and_755_nl <= (fsm_output(2)) AND or_272_cse AND (fsm_output(8));
  mux_640_nl <= MUX_s_1_2_2(and_755_nl, nor_412_cse, fsm_output(4));
  nand_35_nl <= NOT((fsm_output(5)) AND mux_640_nl);
  mux_641_nl <= MUX_s_1_2_2(or_714_nl, nand_35_nl, fsm_output(3));
  nand_34_nl <= NOT((fsm_output(4)) AND (fsm_output(2)) AND nor_414_cse);
  mux_638_nl <= MUX_s_1_2_2(nand_34_nl, (fsm_output(8)), fsm_output(5));
  nor_415_nl <= NOT((fsm_output(0)) OR (fsm_output(1)) OR (NOT (fsm_output(8))));
  mux_636_nl <= MUX_s_1_2_2(nor_415_nl, (fsm_output(8)), fsm_output(2));
  nand_33_nl <= NOT((fsm_output(4)) AND (NOT mux_636_nl));
  mux_637_nl <= MUX_s_1_2_2(nand_33_nl, (fsm_output(8)), fsm_output(5));
  mux_639_nl <= MUX_s_1_2_2(mux_638_nl, mux_637_nl, fsm_output(3));
  mux_642_nl <= MUX_s_1_2_2(mux_641_nl, mux_639_nl, fsm_output(6));
  mux_634_nl <= MUX_s_1_2_2(nor_360_cse, (fsm_output(8)), fsm_output(2));
  or_703_nl <= (fsm_output(4)) OR (NOT mux_634_nl);
  mux_635_nl <= MUX_s_1_2_2(or_703_nl, or_701_cse, fsm_output(5));
  or_704_nl <= (fsm_output(6)) OR (fsm_output(3)) OR mux_635_nl;
  mux_643_nl <= MUX_s_1_2_2(mux_642_nl, or_704_nl, fsm_output(7));
  or_766_nl <= (fsm_output(8)) OR (fsm_output(2)) OR (NOT (fsm_output(5))) OR (fsm_output(3))
      OR (NOT (fsm_output(6))) OR (fsm_output(7));
  or_765_nl <= (NOT (fsm_output(8))) OR (fsm_output(2)) OR (NOT (fsm_output(5)))
      OR (fsm_output(3)) OR (NOT (fsm_output(6))) OR (fsm_output(7));
  mux_679_nl <= MUX_s_1_2_2(or_766_nl, or_765_nl, fsm_output(1));
  nor_429_nl <= NOT((fsm_output(4)) OR mux_679_nl);
  nor_427_nl <= NOT((fsm_output(3)) OR (NOT (fsm_output(6))) OR (fsm_output(7)));
  nor_428_nl <= NOT((fsm_output(3)) OR (NOT (fsm_output(7))));
  mux_677_nl <= MUX_s_1_2_2(nor_427_nl, nor_428_nl, fsm_output(5));
  nand_41_nl <= NOT((fsm_output(2)) AND mux_677_nl);
  or_761_nl <= (fsm_output(2)) OR (fsm_output(5)) OR (NOT (fsm_output(3))) OR (NOT
      (fsm_output(6))) OR (fsm_output(7));
  mux_678_nl <= MUX_s_1_2_2(nand_41_nl, or_761_nl, fsm_output(8));
  nor_430_nl <= NOT((NOT (fsm_output(4))) OR (fsm_output(1)) OR mux_678_nl);
  mux_680_nl <= MUX_s_1_2_2(nor_429_nl, nor_430_nl, fsm_output(0));
  mux_701_nl <= MUX_s_1_2_2(or_518_cse, or_tmp_656, fsm_output(2));
  nand_45_nl <= NOT((NOT (fsm_output(3))) AND (fsm_output(5)) AND (fsm_output(4))
      AND (fsm_output(7)) AND (NOT mux_701_nl));
  and_777_nl <= nand_181_cse AND (fsm_output(8));
  mux_696_nl <= MUX_s_1_2_2(and_777_nl, nor_414_cse, fsm_output(2));
  or_790_nl <= (NOT (fsm_output(0))) OR (NOT (fsm_output(1))) OR (fsm_output(8));
  mux_695_nl <= MUX_s_1_2_2(or_tmp_656, or_790_nl, fsm_output(2));
  mux_697_nl <= MUX_s_1_2_2(mux_696_nl, mux_695_nl, fsm_output(7));
  mux_698_nl <= MUX_s_1_2_2(or_tmp_652, mux_697_nl, fsm_output(4));
  or_789_nl <= (fsm_output(7)) OR (fsm_output(2)) OR (fsm_output(1)) OR (NOT (fsm_output(8)));
  mux_694_nl <= MUX_s_1_2_2(or_789_nl, or_tmp_652, fsm_output(4));
  mux_699_nl <= MUX_s_1_2_2(mux_698_nl, mux_694_nl, fsm_output(5));
  nand_203_nl <= NOT((fsm_output(2)) AND (fsm_output(0)) AND (fsm_output(1)) AND
      (NOT (fsm_output(8))));
  mux_691_nl <= MUX_s_1_2_2(nand_203_nl, (fsm_output(8)), fsm_output(7));
  nor_443_nl <= NOT((fsm_output(2)) OR (NOT(or_272_cse AND (fsm_output(8)))));
  or_783_nl <= (fsm_output(2)) OR (fsm_output(1)) OR (fsm_output(8));
  mux_690_nl <= MUX_s_1_2_2(nor_443_nl, or_783_nl, fsm_output(7));
  mux_692_nl <= MUX_s_1_2_2(mux_691_nl, mux_690_nl, fsm_output(4));
  or_782_nl <= (NOT (fsm_output(4))) OR (NOT (fsm_output(7))) OR (fsm_output(2))
      OR (fsm_output(1)) OR (fsm_output(8));
  mux_693_nl <= MUX_s_1_2_2(mux_692_nl, or_782_nl, fsm_output(5));
  mux_700_nl <= MUX_s_1_2_2(mux_699_nl, mux_693_nl, fsm_output(3));
  mux_702_nl <= MUX_s_1_2_2(nand_45_nl, mux_700_nl, fsm_output(6));
  GEMM_3D_FLOAT_LOOP_4_1_l_mux1h_4_nl <= MUX1HOT_v_3_4_2(QUANTIZE_ACTIVATION_LOOP_3_jo_2_0_sva_3,
      LINEAR_FORWARD_NO_MUL_LOOP_3_2_ko_2_0_sva_1_mx0w2, (reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd
      & reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1), GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva,
      STD_LOGIC_VECTOR'( mux_680_nl & and_dcpl_246 & and_dcpl_354 & (NOT mux_702_nl)));
  nor_431_nl <= NOT((NOT (fsm_output(2))) OR (fsm_output(6)) OR (NOT (fsm_output(8)))
      OR (fsm_output(5)));
  nor_432_nl <= NOT((fsm_output(2)) OR (fsm_output(6)) OR (fsm_output(8)) OR (NOT
      (fsm_output(5))));
  mux_686_nl <= MUX_s_1_2_2(nor_431_nl, nor_432_nl, fsm_output(1));
  nand_nl <= NOT((fsm_output(7)) AND mux_686_nl);
  or_nl <= (fsm_output(7)) OR (NOT (fsm_output(1))) OR (NOT (fsm_output(2))) OR (NOT
      (fsm_output(6))) OR (fsm_output(8)) OR (fsm_output(5));
  mux_687_nl <= MUX_s_1_2_2(nand_nl, or_nl, fsm_output(3));
  or_776_nl <= (NOT (fsm_output(1))) OR (fsm_output(2)) OR (NOT (fsm_output(6)))
      OR (NOT (fsm_output(8))) OR (fsm_output(5));
  nand_200_nl <= NOT((fsm_output(2)) AND (fsm_output(6)) AND (NOT (fsm_output(8)))
      AND (fsm_output(5)));
  nor_433_nl <= NOT((fsm_output(8)) OR (NOT (fsm_output(5))));
  mux_683_nl <= MUX_s_1_2_2(nor_433_nl, nor_434_cse, fsm_output(6));
  nand_43_nl <= NOT((fsm_output(2)) AND mux_683_nl);
  mux_684_nl <= MUX_s_1_2_2(nand_200_nl, nand_43_nl, fsm_output(1));
  mux_685_nl <= MUX_s_1_2_2(or_776_nl, mux_684_nl, fsm_output(7));
  or_1132_nl <= (fsm_output(3)) OR mux_685_nl;
  mux_688_nl <= MUX_s_1_2_2(mux_687_nl, or_1132_nl, fsm_output(4));
  nor_435_nl <= NOT((NOT (fsm_output(1))) OR (NOT (fsm_output(2))) OR (NOT (fsm_output(6)))
      OR (fsm_output(8)) OR (fsm_output(5)));
  nor_436_nl <= NOT((fsm_output(1)) OR (fsm_output(2)) OR (fsm_output(6)) OR (fsm_output(8))
      OR (NOT (fsm_output(5))));
  mux_681_nl <= MUX_s_1_2_2(nor_435_nl, nor_436_nl, fsm_output(7));
  nor_437_nl <= NOT((fsm_output(7)) OR (NOT (fsm_output(1))) OR (fsm_output(2)) OR
      (NOT (fsm_output(6))) OR (NOT (fsm_output(8))) OR (fsm_output(5)));
  mux_682_nl <= MUX_s_1_2_2(mux_681_nl, nor_437_nl, fsm_output(3));
  nand_240_nl <= NOT((fsm_output(4)) AND mux_682_nl);
  mux_689_nl <= MUX_s_1_2_2(mux_688_nl, nand_240_nl, fsm_output(0));
  SF_LOOP_3_acc_90_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(SF_LOOP_3_acc_5_psp_sva(20),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(SF_LOOP_3_acc_5_psp_sva(21),
      1), 1), 2), 2));
  SF_LOOP_3_acc_92_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(SF_LOOP_3_acc_5_psp_sva(20),
      1),3)), 3), 4) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'( (SF_LOOP_3_acc_5_psp_sva(21))
      & '0' & (SF_LOOP_3_acc_5_psp_sva(21))), 3), 4), 4));
  APPLY_ROTARY_POS_EMB_LOOP_6_mux_29_nl <= MUX_v_4_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_2,
      STD_LOGIC_VECTOR'( "0110"), and_1253_cse);
  APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_or_2_nl <= reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_3
      OR and_1253_cse;
  APPLY_ROTARY_POS_EMB_LOOP_6_mux_30_nl <= MUX_v_3_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_4,
      STD_LOGIC_VECTOR'( "001"), and_1253_cse);
  APPLY_ROTARY_POS_EMB_LOOP_6_mux_31_nl <= MUX_v_9_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_5,
      STD_LOGIC_VECTOR'( "010111001"), and_1253_cse);
  not_2462_nl <= NOT and_1253_cse;
  APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_8_nl <= MUX_v_38_2_2(STD_LOGIC_VECTOR'("00000000000000000000000000000000000000"),
      (INIT_2D_MEM_LOOP_2_2_asn_psp(39 DOWNTO 2)), not_2462_nl);
  APPLY_ROTARY_POS_EMB_LOOP_6_mux_32_nl <= MUX_v_2_2_2((INIT_2D_MEM_LOOP_2_2_asn_psp(1
      DOWNTO 0)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(7 DOWNTO 6)), and_1253_cse);
  SF_LOOP_3_acc_99_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_mul_12_itm_16_15
      & STD_LOGIC_VECTOR'( "00") & SF_LOOP_3_mul_12_itm_12_9_slc), 7), 8) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_mul_15_itm_16_10),
      7), 8), 8));
  SF_LOOP_3_acc_100_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((SF_LOOP_3_mul_19_itm_9_4(2
      DOWNTO 1)) & '0' & SF_LOOP_3_mul_12_itm_3_0), 7), 8) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_mul_15_itm_6_0),
      7), 8), 8));
  SF_LOOP_3_acc_21_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_11_itm_17_15
      & '0' & SF_LOOP_3_acc_11_itm_13_0), 18), 20) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_99_nl),
      8)) & (SF_LOOP_3_mul_19_itm_9_4(5)) & '0' & STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_100_nl),
      8))), 18), 20), 20));
  SF_LOOP_3_acc_27_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_21_nl),
      20) + CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_96_psp & '0' & RESHAPE_2D_TO_3D_LOOP_3_2_mux_3_itm_2_0
      & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(18)) & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(18))
      & APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0), 19), 20), 20));
  SF_LOOP_3_acc_38_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(7
      DOWNTO 5)) & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(7 DOWNTO 6))), 5), 6)
      + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(SF_LOOP_3_acc_5_psp_sva(17), 1),
      1), 6) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((NOT (SF_LOOP_3_acc_5_psp_sva(21)))
      & STD_LOGIC_VECTOR'( "11") & (NOT (SF_LOOP_3_acc_5_psp_sva(21)))), 4), 6) +
      CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(5),
      1), 1), 6) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((SF_LOOP_3_acc_5_psp_sva(20))
      & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(4 DOWNTO 3))), 3), 6) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_5_psp_sva(19
      DOWNTO 18)), 2), 6) + UNSIGNED'( "000001"), 6));
  SF_LOOP_3_and_1_nl <= reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd AND (NOT (SF_LOOP_3_acc_7_psp_sva_1(17)))
      AND (CONV_SL_1_1(SF_LOOP_3_acc_7_psp_sva_1(16 DOWNTO 0)/=STD_LOGIC_VECTOR'("00000000000000000")));
  SF_LOOP_3_acc_95_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(17),
      1),3)), 3), 4) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(16),
      1),2)), 2), 4) + CONV_UNSIGNED(CONV_UNSIGNED(SF_LOOP_3_and_1_nl, 1), 4), 4));
  SF_LOOP_3_acc_41_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_40_itm),
      11), 13) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_mul_itm_10_9 & '0'
      & SF_LOOP_3_mul_itm_7_0), 11), 13) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT
      (SF_LOOP_3_acc_6_psp_sva_18_17(1)), 1), 1), 13), 13));
  SF_LOOP_3_SF_LOOP_3_nand_nl <= NOT((SF_LOOP_3_acc_7_psp_sva_1(17)) AND (NOT reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd));
  SF_LOOP_3_acc_42_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_41_nl),
      15) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_mul_1_itm_12_11 & '0' &
      SF_LOOP_3_mul_1_itm_9_0), 13), 15) + CONV_SIGNED(CONV_UNSIGNED(SF_LOOP_3_SF_LOOP_3_nand_nl,
      1), 15), 15));
  SF_LOOP_3_acc_44_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(17
      DOWNTO 16)) & '0' & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(17 DOWNTO 16))
      & z_out_7 & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(16)) & STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_95_nl),
      4))), 15), 17) + CONV_SIGNED(SIGNED(SF_LOOP_3_acc_42_nl), 17), 17));
  SF_LOOP_3_acc_47_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_46_itm),
      19), 21) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_mul_2_itm_18_17 & '0'
      & SF_LOOP_3_mul_2_itm_15_0), 19), 21), 21));
  SF_LOOP_3_acc_48_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_47_nl),
      22) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(22))
      & STD_LOGIC_VECTOR'( "00") & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(22)) &
      STD_LOGIC_VECTOR'( "00") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(22),
      1),4)) & STD_LOGIC_VECTOR'( "00") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(22),
      1),2)) & '0' & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(22)) & '0' & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(22))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(22))), 20), 22), 22));
  SF_LOOP_3_acc_49_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_48_nl),
      24) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_mul_3_itm_21_20 & '0' &
      SF_LOOP_3_mul_3_itm_18_3 & '0' & SF_LOOP_3_mul_3_itm_1_0), 22), 24), 24));
  SF_LOOP_3_acc_52_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(28
      DOWNTO 27)) & '0' & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(28 DOWNTO 27))
      & APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(27))
      & APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0 & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(27))
      & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(28 DOWNTO 27)) & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(28
      DOWNTO 27)) & '0' & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(28 DOWNTO 27))
      & APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp_4), 26), 28) + CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_50_itm),
      26), 28), 28));
  SF_LOOP_3_acc_53_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_52_nl),
      29) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(29))
      & STD_LOGIC_VECTOR'( "00") & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(29)) &
      STD_LOGIC_VECTOR'( "00") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(29),
      1),4)) & STD_LOGIC_VECTOR'( "00") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(29),
      1),2)) & '0' & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(29)) & '0' & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(29))
      & STD_LOGIC_VECTOR'( "00") & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(29)) &
      STD_LOGIC_VECTOR'( "00") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(29),
      1),2)) & '0' & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(29))), 27), 29), 29));
  SF_LOOP_3_acc_55_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_54_itm),
      32), 34) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_mul_5_itm_31_30 & '0'
      & SF_LOOP_3_mul_5_itm_28_13 & '0' & SF_LOOP_3_mul_5_itm_11_0), 32), 34), 34));
  SF_LOOP_3_acc_57_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(36
      DOWNTO 35)) & '0' & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(36 DOWNTO 35))
      & reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_ftd & reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd
      & reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd_1 & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(35))
      & CACHE_UPDATE_LOOP_3_qif_acc_3_psp & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(35))
      & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(36 DOWNTO 35)) & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(36
      DOWNTO 35)) & '0' & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(36 DOWNTO 35))
      & INIT_2D_MEM_LOOP_2_2_acc_itm & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(35))
      & CACHE_UPDATE_LOOP_3_k_5_0_sva_1_1_0), 34), 36) + CONV_SIGNED(SIGNED(SF_LOOP_3_acc_55_nl),
      36), 36));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_25_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(z_out_9),
      3), 4) + CONV_SIGNED(CONV_SIGNED(SIGNED(z_out_19(5 DOWNTO 4)), 2), 4) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(z_out_19(1),
      1), 1), 4), 4));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_27_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(13)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(13))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(13))), 5), 6) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_25_nl),
      6) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(z_out_19(3), 1), 1), 6), 6));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_28_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(z_out_10),
      6), 8) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(14))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(12)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38),
      1),2))), 6), 8) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_3_psp_sva_1(1),
      1), 1), 8), 8));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_31_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(17)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(17))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(17)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(17))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(17))), 9), 10) + CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_29_itm),
      8), 10) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_and_1_itm,
      1), 1), 10), 10));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_33_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(19)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(19))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(19)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(19))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(19)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(19))),
      11), 12) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_31_nl),
      12), 12));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_35_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(21)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(21))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(21)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(21))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(21)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(21))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(21))), 13), 14) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_33_nl),
      14), 14));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_32_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(18))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(18)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(18))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(18)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(14),
      1),2))), 10), 11) + CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_30_itm),
      9), 11), 11));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_34_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(20))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(20)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(20))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(20)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(20))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(16),
      1),2))), 12), 13) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_32_nl),
      13), 13));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_36_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(22))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(22)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(22))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(22)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(22))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(22)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(18),
      1),2))), 14), 15) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_34_nl),
      15), 15));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_39_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25))), 17), 18) + CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_37_itm),
      16), 18), 18));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_41_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27))),
      19), 20) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_39_nl),
      20), 20));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_43_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29))), 21), 22) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_41_nl),
      22), 22));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_40_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(22),
      1),2))), 18), 19) + CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_38_itm),
      17), 19), 19));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_42_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(24),
      1),2))), 20), 21) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_40_nl),
      21), 21));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_44_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26),
      1),2))), 22), 23) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_42_nl),
      23), 23));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_48_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30),
      1),2))), 26), 27) + CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_46_itm),
      25), 27), 27));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_50_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32),
      1),2))), 28), 29) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_48_nl),
      29), 29));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_47_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33))), 25), 26) + CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_45_itm),
      24), 26), 26));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_49_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35))),
      27), 28) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_47_nl),
      28), 28));
  rms_norm_384_variance_or_nl <= (and_dcpl_104 AND and_dcpl_214) OR (and_dcpl_210
      AND and_dcpl_214);
  and_365_nl <= and_dcpl_115 AND and_dcpl_192;
  and_366_nl <= and_dcpl_289 AND and_dcpl_100;
  and_375_nl <= and_dcpl_212 AND and_dcpl_157;
  rms_norm_384_variance_mux1h_nl <= MUX1HOT_v_40_9_2(z_out_20, rms_norm_384_div_cmp_z_oreg,
      input_rsci_q_d, attention_5_1_384_384_8_48_q_proj_re_rsci_q_d, apply_rotary_pos_emb_1_8_48_rotated_k_rsci_q_d,
      attention_5_1_384_384_8_48_attn_weights_rsci_q_d, softmax_1_8_6_sum_sva_1,
      attention_5_1_384_384_8_48_attn_output_rsci_q_d, (SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_z(39
      DOWNTO 0)), STD_LOGIC_VECTOR'( rms_norm_384_variance_or_nl & and_365_nl & and_366_nl
      & and_dcpl_350 & and_dcpl_351 & and_dcpl_352 & and_dcpl_354 & and_dcpl_355
      & and_375_nl));
  or_1096_nl <= (fsm_output(0)) OR (fsm_output(2)) OR (fsm_output(5)) OR (fsm_output(3))
      OR (fsm_output(7)) OR (fsm_output(4)) OR (fsm_output(6));
  or_1097_nl <= (NOT (fsm_output(2))) OR (fsm_output(5)) OR (fsm_output(3)) OR (NOT
      and_dcpl_162);
  nand_174_nl <= NOT(CONV_SL_1_1(fsm_output(7 DOWNTO 2)=STD_LOGIC_VECTOR'("111111")));
  mux_436_nl <= MUX_s_1_2_2(or_1097_nl, nand_174_nl, fsm_output(0));
  mux_437_nl <= MUX_s_1_2_2(or_1096_nl, mux_436_nl, fsm_output(1));
  GEMM_3D_FLOAT_LOOP_4_1_or_nl <= mux_437_nl OR (fsm_output(8));
  mux_429_nl <= MUX_s_1_2_2((NOT (fsm_output(8))), (fsm_output(8)), fsm_output(7));
  or_478_nl <= (fsm_output(5)) OR mux_429_nl;
  mux_430_nl <= MUX_s_1_2_2(or_478_nl, or_tmp_353, fsm_output(6));
  mux_431_nl <= MUX_s_1_2_2(mux_430_nl, mux_tmp_416, fsm_output(2));
  mux_432_nl <= MUX_s_1_2_2(mux_431_nl, mux_tmp_418, fsm_output(0));
  mux_433_nl <= MUX_s_1_2_2(mux_432_nl, mux_tmp_414, fsm_output(4));
  mux_426_nl <= MUX_s_1_2_2(mux_tmp_416, mux_tmp_409, fsm_output(2));
  mux_427_nl <= MUX_s_1_2_2(mux_426_nl, mux_tmp_410, fsm_output(0));
  mux_424_nl <= MUX_s_1_2_2(mux_tmp_422, mux_tmp_402, fsm_output(2));
  mux_423_nl <= MUX_s_1_2_2(mux_tmp_422, mux_tmp_405, fsm_output(2));
  mux_425_nl <= MUX_s_1_2_2(mux_424_nl, mux_423_nl, fsm_output(0));
  mux_428_nl <= MUX_s_1_2_2(mux_427_nl, mux_425_nl, fsm_output(4));
  mux_434_nl <= MUX_s_1_2_2(mux_433_nl, mux_428_nl, fsm_output(3));
  mux_417_nl <= MUX_s_1_2_2(mux_tmp_409, mux_tmp_416, fsm_output(2));
  mux_419_nl <= MUX_s_1_2_2(mux_tmp_418, mux_417_nl, fsm_output(0));
  or_474_nl <= nor_342_cse OR (fsm_output(8));
  mux_412_nl <= MUX_s_1_2_2(or_tmp_353, or_474_nl, fsm_output(6));
  mux_413_nl <= MUX_s_1_2_2(mux_tmp_409, mux_412_nl, fsm_output(2));
  mux_415_nl <= MUX_s_1_2_2(mux_tmp_414, mux_413_nl, fsm_output(0));
  mux_420_nl <= MUX_s_1_2_2(mux_419_nl, mux_415_nl, fsm_output(4));
  mux_403_nl <= MUX_s_1_2_2(mux_tmp_402, or_173_cse, fsm_output(2));
  mux_406_nl <= MUX_s_1_2_2(mux_tmp_405, mux_403_nl, fsm_output(0));
  mux_411_nl <= MUX_s_1_2_2(mux_tmp_410, mux_406_nl, fsm_output(4));
  mux_421_nl <= MUX_s_1_2_2(mux_420_nl, mux_411_nl, fsm_output(3));
  mux_435_nl <= MUX_s_1_2_2(mux_434_nl, mux_421_nl, fsm_output(1));
  SF_LOOP_3_acc_82_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(SIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_q_d(36))
      & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(36)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(36),
      1),3))),8)), 8), 9) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(SIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_q_d(35))
      & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(35)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(35),
      1),2))),7)), 7), 9), 9));
  INIT_2D_MEM_LOOP_2_2_or_4_nl <= and_dcpl_343 OR and_dcpl_290;
  or_1099_nl <= (fsm_output(0)) OR (NOT (fsm_output(2))) OR (fsm_output(5)) OR (fsm_output(3))
      OR (NOT (fsm_output(8))) OR (NOT (fsm_output(7))) OR (fsm_output(4));
  or_1100_nl <= (fsm_output(2)) OR (NOT (fsm_output(5))) OR (fsm_output(3)) OR mux_tmp_448;
  or_1101_nl <= (NOT (fsm_output(2))) OR (NOT (fsm_output(5))) OR (NOT (fsm_output(3)))
      OR (fsm_output(8)) OR (fsm_output(7)) OR (NOT (fsm_output(4)));
  mux_449_nl <= MUX_s_1_2_2(or_1100_nl, or_1101_nl, fsm_output(0));
  mux_450_nl <= MUX_s_1_2_2(or_1099_nl, mux_449_nl, fsm_output(1));
  nor_355_nl <= NOT(mux_450_nl OR (fsm_output(6)));
  INIT_2D_MEM_LOOP_2_2_mux1h_15_nl <= MUX1HOT_v_9_5_2(z_out_13, SF_LOOP_3_acc_26_itm_8_0,
      STD_LOGIC_VECTOR'( "101111111"), TRANSPOSE_LAST_TWO_DIMS_LOOP_3_acc_17_sdt_mx0w5,
      STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_82_nl), 9)), STD_LOGIC_VECTOR'(
      INIT_2D_MEM_LOOP_2_2_or_4_nl & nor_355_nl & and_dcpl_359 & and_dcpl_267 & and_dcpl_360));
  or_1102_nl <= (fsm_output(3)) OR (fsm_output(2)) OR (fsm_output(8));
  nand_176_nl <= NOT((fsm_output(3)) AND (fsm_output(2)) AND (fsm_output(8)));
  mux_452_nl <= MUX_s_1_2_2(or_1102_nl, nand_176_nl, fsm_output(5));
  or_511_nl <= (fsm_output(4)) OR mux_452_nl;
  or_509_nl <= (NOT (fsm_output(4))) OR (NOT (fsm_output(5))) OR (NOT (fsm_output(3)))
      OR (fsm_output(2)) OR (fsm_output(8));
  mux_453_nl <= MUX_s_1_2_2(or_511_nl, or_509_nl, fsm_output(0));
  or_1103_nl <= (fsm_output(6)) OR mux_453_nl;
  or_507_nl <= (NOT (fsm_output(2))) OR (NOT CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm)
      OR (fsm_output(8));
  mux_451_nl <= MUX_s_1_2_2(or_507_nl, or_490_cse, fsm_output(3));
  or_1104_nl <= (NOT((fsm_output(6)) AND (fsm_output(0)) AND (fsm_output(4)) AND
      (NOT (fsm_output(5))))) OR mux_451_nl;
  mux_454_nl <= MUX_s_1_2_2(or_1103_nl, or_1104_nl, fsm_output(1));
  INIT_2D_MEM_LOOP_2_2_or_nl <= mux_454_nl OR (fsm_output(7));
  nor_347_nl <= NOT((fsm_output(3)) OR (fsm_output(8)) OR (fsm_output(2)) OR (NOT
      (fsm_output(1))));
  and_722_nl <= (fsm_output(3)) AND (fsm_output(8)) AND (fsm_output(2)) AND or_272_cse;
  mux_444_nl <= MUX_s_1_2_2(nor_347_nl, and_722_nl, fsm_output(5));
  mux_443_nl <= MUX_s_1_2_2((NOT (fsm_output(1))), or_272_cse, fsm_output(2));
  nor_348_nl <= NOT((NOT (fsm_output(5))) OR (NOT (fsm_output(3))) OR (fsm_output(8))
      OR mux_443_nl);
  mux_445_nl <= MUX_s_1_2_2(mux_444_nl, nor_348_nl, fsm_output(4));
  nor_349_nl <= NOT(CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm OR (fsm_output(8))
      OR (NOT and_602_cse));
  mux_441_nl <= MUX_s_1_2_2(nor_349_nl, or_490_cse, fsm_output(3));
  or_493_nl <= (fsm_output(5)) OR mux_441_nl;
  mux_442_nl <= MUX_s_1_2_2((fsm_output(5)), or_493_nl, fsm_output(4));
  mux_446_nl <= MUX_s_1_2_2(mux_445_nl, mux_442_nl, fsm_output(6));
  or_487_nl <= (fsm_output(2)) OR and_706_cse;
  mux_439_nl <= MUX_s_1_2_2(or_349_cse, or_487_nl, fsm_output(8));
  nor_350_nl <= NOT(CONV_SL_1_1(fsm_output(5 DOWNTO 3)/=STD_LOGIC_VECTOR'("000"))
      OR mux_439_nl);
  or_484_nl <= (fsm_output(8)) OR (NOT and_602_cse);
  or_483_nl <= (fsm_output(8)) OR and_602_cse;
  mux_438_nl <= MUX_s_1_2_2(or_484_nl, or_483_nl, fsm_output(3));
  nor_351_nl <= NOT(CONV_SL_1_1(fsm_output(5 DOWNTO 4)/=STD_LOGIC_VECTOR'("00"))
      OR mux_438_nl);
  mux_440_nl <= MUX_s_1_2_2(nor_350_nl, nor_351_nl, fsm_output(6));
  mux_447_nl <= MUX_s_1_2_2(mux_446_nl, mux_440_nl, fsm_output(7));
  for_for_j_or_nl <= (and_dcpl_103 AND ((fsm_output(8)) XOR (fsm_output(0))) AND
      (NOT((fsm_output(3)) OR (fsm_output(5)))) AND nor_411_cse) OR and_dcpl_368
      OR and_dcpl_290;
  or_534_nl <= CONV_SL_1_1(fsm_output(4 DOWNTO 2)/=STD_LOGIC_VECTOR'("000")) OR (NOT(and_729_cse
      OR (fsm_output(1))));
  nand_179_nl <= NOT((fsm_output(3)) AND (fsm_output(2)) AND (fsm_output(8)) AND
      (fsm_output(1)));
  or_530_nl <= (fsm_output(8)) OR (NOT and_706_cse);
  mux_468_nl <= MUX_s_1_2_2(or_530_nl, or_529_cse, fsm_output(2));
  mux_469_nl <= MUX_s_1_2_2(or_531_cse, mux_468_nl, fsm_output(3));
  mux_470_nl <= MUX_s_1_2_2(nand_179_nl, mux_469_nl, fsm_output(4));
  mux_471_nl <= MUX_s_1_2_2(or_534_nl, mux_470_nl, fsm_output(5));
  or_528_nl <= (NOT (fsm_output(2))) OR CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm
      OR (fsm_output(8)) OR (NOT and_706_cse);
  mux_466_nl <= MUX_s_1_2_2(or_528_nl, (fsm_output(8)), fsm_output(3));
  nand_23_nl <= NOT((fsm_output(4)) AND (NOT mux_466_nl));
  mux_467_nl <= MUX_s_1_2_2(nand_23_nl, (fsm_output(8)), fsm_output(5));
  mux_472_nl <= MUX_s_1_2_2(mux_471_nl, mux_467_nl, fsm_output(6));
  or_525_nl <= (fsm_output(4)) OR (fsm_output(3)) OR (fsm_output(2)) OR (fsm_output(8))
      OR (fsm_output(0)) OR (fsm_output(1));
  mux_465_nl <= MUX_s_1_2_2((fsm_output(8)), or_525_nl, fsm_output(5));
  or_526_nl <= (fsm_output(6)) OR mux_465_nl;
  mux_473_nl <= MUX_s_1_2_2(mux_472_nl, or_526_nl, fsm_output(7));
  for_for_j_mux1h_nl <= MUX1HOT_v_9_4_2(z_out_14, reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1,
      STD_LOGIC_VECTOR'( "101111111"), RMS_NORM_LOOP_2_2_dfr_sva_8_0, STD_LOGIC_VECTOR'(
      for_for_j_or_nl & (NOT mux_473_nl) & and_dcpl_359 & and_dcpl_369));
  or_524_nl <= CONV_SL_1_1(fsm_output(4 DOWNTO 2)/=STD_LOGIC_VECTOR'("000")) OR nor_360_cse;
  nand_178_nl <= NOT(CONV_SL_1_1(fsm_output(3 DOWNTO 2)=STD_LOGIC_VECTOR'("11"))
      AND or_272_cse AND (fsm_output(8)));
  mux_459_nl <= MUX_s_1_2_2(or_518_cse, or_529_cse, fsm_output(2));
  mux_460_nl <= MUX_s_1_2_2(or_531_cse, mux_459_nl, fsm_output(3));
  mux_461_nl <= MUX_s_1_2_2(nand_178_nl, mux_460_nl, fsm_output(4));
  mux_462_nl <= MUX_s_1_2_2(or_524_nl, mux_461_nl, fsm_output(5));
  nor_362_nl <= NOT((NOT (fsm_output(0))) OR (fsm_output(8)));
  nor_363_nl <= NOT((CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm AND (fsm_output(0)))
      OR (fsm_output(8)));
  mux_456_nl <= MUX_s_1_2_2(nor_362_nl, nor_363_nl, fsm_output(1));
  nand_21_nl <= NOT((fsm_output(2)) AND mux_456_nl);
  mux_457_nl <= MUX_s_1_2_2(nand_21_nl, (fsm_output(8)), fsm_output(3));
  nand_22_nl <= NOT((fsm_output(4)) AND (NOT mux_457_nl));
  mux_458_nl <= MUX_s_1_2_2(nand_22_nl, (fsm_output(8)), fsm_output(5));
  mux_463_nl <= MUX_s_1_2_2(mux_462_nl, mux_458_nl, fsm_output(6));
  or_513_nl <= (fsm_output(4)) OR (fsm_output(3)) OR (fsm_output(2)) OR (fsm_output(0))
      OR (fsm_output(8));
  mux_455_nl <= MUX_s_1_2_2((fsm_output(8)), or_513_nl, fsm_output(5));
  or_514_nl <= (fsm_output(6)) OR mux_455_nl;
  mux_464_nl <= MUX_s_1_2_2(mux_463_nl, or_514_nl, fsm_output(7));
  INIT_2D_MEM_LOOP_2_not_1_nl <= NOT mux_464_nl;
  for_for_j_and_nl <= MUX_v_9_2_2(STD_LOGIC_VECTOR'("000000000"), for_for_j_mux1h_nl,
      INIT_2D_MEM_LOOP_2_not_1_nl);
  or_547_nl <= and_731_cse OR (fsm_output(6));
  mux_490_nl <= MUX_s_1_2_2(or_547_nl, or_722_cse, fsm_output(4));
  mux_488_nl <= MUX_s_1_2_2(or_722_cse, mux_tmp_482, or_272_cse);
  mux_489_nl <= MUX_s_1_2_2(or_722_cse, mux_488_nl, fsm_output(4));
  mux_491_nl <= MUX_s_1_2_2(mux_490_nl, mux_489_nl, fsm_output(2));
  mux_487_nl <= MUX_s_1_2_2(or_722_cse, mux_tmp_482, fsm_output(4));
  mux_492_nl <= MUX_s_1_2_2(mux_491_nl, mux_487_nl, fsm_output(3));
  mux_483_nl <= MUX_s_1_2_2(mux_tmp_482, or_tmp_225, fsm_output(0));
  mux_481_nl <= MUX_s_1_2_2(or_tmp_422, or_tmp_225, fsm_output(1));
  mux_484_nl <= MUX_s_1_2_2(mux_483_nl, mux_481_nl, fsm_output(4));
  mux_485_nl <= MUX_s_1_2_2(mux_484_nl, or_tmp_225, fsm_output(2));
  mux_479_nl <= MUX_s_1_2_2(or_tmp_225, or_tmp_350, and_732_cse);
  mux_477_nl <= MUX_s_1_2_2(or_tmp_225, or_tmp_422, or_272_cse);
  mux_475_nl <= MUX_s_1_2_2(or_tmp_350, or_577_cse, and_706_cse);
  mux_478_nl <= MUX_s_1_2_2(mux_477_nl, mux_475_nl, fsm_output(4));
  mux_480_nl <= MUX_s_1_2_2(mux_479_nl, mux_478_nl, fsm_output(2));
  mux_486_nl <= MUX_s_1_2_2(mux_485_nl, mux_480_nl, fsm_output(3));
  mux_493_nl <= MUX_s_1_2_2(mux_492_nl, mux_486_nl, fsm_output(5));
  for_for_for_for_nor_nl <= NOT(z_out_28_2 OR RMS_NORM_LOOP_1_1_acc_3_itm_2_1);
  INIT_2D_MEM_LOOP_2_and_1_nl <= CONV_SL_1_1(reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1=STD_LOGIC_VECTOR'("000000000"))
      AND INIT_2D_MEM_LOOP_2_3_INIT_2D_MEM_LOOP_2_3_nor_itm_1 AND CONV_SL_1_1(INIT_2D_MEM_LOOP_2_2_acc_itm=STD_LOGIC_VECTOR'("000000000"));
  LINEAR_FORWARD_NO_MUL_LOOP_5_and_1_nl <= (CACHE_UPDATE_LOOP_3_qif_acc_3_psp(2))
      AND (APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0(2)) AND (RESHAPE_2D_TO_3D_LOOP_3_2_mux_3_itm_2_0(2));
  LINEAR_FORWARD_NO_MUL_LOOP_2_LINEAR_FORWARD_NO_MUL_LOOP_2_nor_nl <= NOT(RMS_NORM_LOOP_1_1_acc_3_itm_2_1
      OR z_out_28_2 OR z_out_29_2);
  CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_nl <= NOT(z_out_30_2 OR z_out_28_2);
  and_410_nl <= and_dcpl_386 AND and_dcpl_384 AND (NOT((fsm_output(1)) OR (rms_norm_384_val_acc_psp_sva_1(31))));
  or_589_nl <= (fsm_output(5)) OR (NOT nor_tmp_118);
  mux_532_nl <= MUX_s_1_2_2(or_589_nl, or_tmp_463, fsm_output(2));
  or_586_nl <= (fsm_output(2)) OR (NOT (fsm_output(5))) OR (fsm_output(3)) OR (NOT
      (fsm_output(8))) OR (fsm_output(4));
  mux_533_nl <= MUX_s_1_2_2(mux_532_nl, or_586_nl, fsm_output(0));
  or_585_nl <= (NOT (fsm_output(0))) OR (NOT (fsm_output(2))) OR (fsm_output(5))
      OR (NOT (fsm_output(3))) OR (fsm_output(8)) OR (NOT (fsm_output(4)));
  mux_534_nl <= MUX_s_1_2_2(mux_533_nl, or_585_nl, fsm_output(1));
  compute_sqrt_for_i_or_1_nl <= and_dcpl_396 OR ((NOT mux_534_nl) AND and_dcpl_295);
  compute_sqrt_for_i_or_nl <= and_dcpl_400 OR and_dcpl_403 OR and_dcpl_267 OR and_dcpl_234
      OR and_dcpl_249 OR and_dcpl_251;
  compute_sqrt_for_i_mux1h_nl <= MUX1HOT_v_4_3_2((z_out_11_4_0(3 DOWNTO 0)), z_out_31,
      z_out_8, STD_LOGIC_VECTOR'( compute_sqrt_for_i_or_1_nl & compute_sqrt_for_i_or_nl
      & and_dcpl_246));
  or_1216_nl <= (fsm_output(1)) OR (NOT (fsm_output(8))) OR (NOT (fsm_output(2)))
      OR (NOT (fsm_output(7))) OR (fsm_output(6));
  or_1217_nl <= (NOT (fsm_output(1))) OR (fsm_output(8)) OR (NOT (fsm_output(2)))
      OR (fsm_output(7)) OR (NOT (fsm_output(6)));
  mux_539_nl <= MUX_s_1_2_2(or_1216_nl, or_1217_nl, fsm_output(3));
  or_1218_nl <= (fsm_output(3)) OR (NOT (fsm_output(1))) OR (NOT (fsm_output(8)))
      OR (fsm_output(2)) OR (fsm_output(7)) OR (NOT (fsm_output(6)));
  mux_540_nl <= MUX_s_1_2_2(mux_539_nl, or_1218_nl, fsm_output(4));
  or_601_nl <= (fsm_output(8)) OR (fsm_output(2)) OR (fsm_output(7)) OR (NOT (fsm_output(6)));
  or_599_nl <= (fsm_output(2)) OR (NOT (fsm_output(7))) OR (fsm_output(6));
  or_598_nl <= (fsm_output(2)) OR (fsm_output(7)) OR (NOT (fsm_output(6)));
  mux_537_nl <= MUX_s_1_2_2(or_599_nl, or_598_nl, fsm_output(8));
  mux_538_nl <= MUX_s_1_2_2(or_601_nl, mux_537_nl, fsm_output(1));
  or_1219_nl <= CONV_SL_1_1(fsm_output(4 DOWNTO 3)/=STD_LOGIC_VECTOR'("00")) OR mux_538_nl;
  mux_541_nl <= MUX_s_1_2_2(mux_540_nl, or_1219_nl, fsm_output(5));
  or_594_nl <= (NOT (fsm_output(3))) OR (fsm_output(1)) OR (fsm_output(2)) OR (fsm_output(7))
      OR (fsm_output(6));
  or_593_nl <= (fsm_output(8)) OR (NOT (fsm_output(2))) OR (fsm_output(7)) OR (NOT
      (fsm_output(6)));
  or_591_nl <= (NOT (fsm_output(8))) OR (fsm_output(2)) OR (fsm_output(7)) OR (NOT
      (fsm_output(6)));
  mux_535_nl <= MUX_s_1_2_2(or_593_nl, or_591_nl, fsm_output(3));
  mux_536_nl <= MUX_s_1_2_2(or_594_nl, mux_535_nl, fsm_output(4));
  or_1220_nl <= (fsm_output(5)) OR mux_536_nl;
  mux_542_nl <= MUX_s_1_2_2(mux_541_nl, or_1220_nl, fsm_output(0));
  mux_526_nl <= MUX_s_1_2_2((fsm_output(7)), (NOT or_tmp_449), fsm_output(8));
  nand_27_nl <= NOT((fsm_output(6)) AND mux_526_nl);
  mux_527_nl <= MUX_s_1_2_2(nand_27_nl, or_tmp_454, fsm_output(1));
  mux_525_nl <= MUX_s_1_2_2(or_tmp_454, or_tmp_456, fsm_output(1));
  mux_528_nl <= MUX_s_1_2_2(mux_527_nl, mux_525_nl, fsm_output(0));
  or_583_nl <= (nand_181_cse AND (fsm_output(6)) AND (fsm_output(8))) OR (fsm_output(7))
      OR (fsm_output(5));
  mux_529_nl <= MUX_s_1_2_2(mux_528_nl, or_583_nl, fsm_output(4));
  mux_523_nl <= MUX_s_1_2_2(or_tmp_454, mux_tmp_514, and_706_cse);
  or_582_nl <= CONV_SL_1_1(fsm_output(8 DOWNTO 5)/=STD_LOGIC_VECTOR'("0010"));
  mux_522_nl <= MUX_s_1_2_2(mux_tmp_509, or_582_nl, fsm_output(1));
  mux_524_nl <= MUX_s_1_2_2(mux_523_nl, mux_522_nl, fsm_output(4));
  mux_530_nl <= MUX_s_1_2_2(mux_529_nl, mux_524_nl, fsm_output(3));
  mux_519_nl <= MUX_s_1_2_2(or_tmp_456, or_tmp_454, fsm_output(1));
  mux_518_nl <= MUX_s_1_2_2(not_tmp_316, or_677_cse, or_577_cse);
  mux_520_nl <= MUX_s_1_2_2(mux_519_nl, mux_518_nl, fsm_output(4));
  mux_515_nl <= MUX_s_1_2_2(mux_tmp_514, mux_tmp_512, fsm_output(1));
  mux_513_nl <= MUX_s_1_2_2(mux_tmp_512, mux_tmp_509, fsm_output(1));
  mux_516_nl <= MUX_s_1_2_2(mux_515_nl, mux_513_nl, fsm_output(0));
  or_573_nl <= CONV_SL_1_1(fsm_output(7 DOWNTO 5)/=STD_LOGIC_VECTOR'("010"));
  mux_507_nl <= MUX_s_1_2_2(or_573_nl, mux_tmp_505, fsm_output(1));
  or_570_nl <= (NOT (fsm_output(7))) OR (fsm_output(5));
  mux_503_nl <= MUX_s_1_2_2(or_570_nl, or_677_cse, fsm_output(8));
  mux_504_nl <= MUX_s_1_2_2(or_tmp_446, mux_503_nl, fsm_output(6));
  mux_506_nl <= MUX_s_1_2_2(mux_tmp_505, mux_504_nl, fsm_output(1));
  mux_508_nl <= MUX_s_1_2_2(mux_507_nl, mux_506_nl, fsm_output(0));
  mux_517_nl <= MUX_s_1_2_2(mux_516_nl, mux_508_nl, fsm_output(4));
  mux_521_nl <= MUX_s_1_2_2(mux_520_nl, mux_517_nl, fsm_output(3));
  mux_531_nl <= MUX_s_1_2_2(mux_530_nl, mux_521_nl, fsm_output(2));
  operator_40_24_true_AC_TRN_AC_WRAP_mux_nl <= MUX_s_1_2_2((compute_sqrt_for_acc_1_itm_40_1_1(39)),
      (compute_sqrt_1_for_acc_1_itm_40_1_1(39)), and_dcpl_154);
  operator_40_24_true_AC_TRN_AC_WRAP_and_2_nl <= (NOT and_dcpl_513) AND and_dcpl_414;
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_1_nl <= MUX1HOT_v_9_5_2((compute_sqrt_for_acc_1_itm_40_1_1(38
      DOWNTO 30)), reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1,
      z_out_14, RMS_NORM_LOOP_2_2_dfr_sva_8_0, (compute_sqrt_1_for_acc_1_itm_40_1_1(38
      DOWNTO 30)), STD_LOGIC_VECTOR'( and_dcpl_152 & RMS_NORM_LOOP_2_2_dfr_sva_mx0c3
      & operator_40_24_true_AC_TRN_AC_WRAP_and_2_nl & and_dcpl_513 & and_dcpl_154));
  RMS_NORM_LOOP_2_2_not_5_nl <= NOT RMS_NORM_LOOP_2_2_dfr_sva_mx0c0;
  operator_40_24_true_AC_TRN_AC_WRAP_and_1_nl <= MUX_v_9_2_2(STD_LOGIC_VECTOR'("000000000"),
      operator_40_24_true_AC_TRN_AC_WRAP_mux1h_1_nl, RMS_NORM_LOOP_2_2_not_5_nl);
  compute_sqrt_for_or_3_nl <= APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c1
      OR APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c2
      OR and_dcpl_248;
  compute_sqrt_for_or_4_nl <= and_dcpl_267 OR APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c4;
  compute_sqrt_for_or_5_nl <= APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c6
      OR and_dcpl_331;
  or_727_nl <= (or_1114_cse AND (fsm_output(8))) OR CONV_SL_1_1(fsm_output(7 DOWNTO
      6)/=STD_LOGIC_VECTOR'("10"));
  mux_652_nl <= MUX_s_1_2_2(or_318_cse, or_319_cse, fsm_output(1));
  or_725_nl <= (fsm_output(8)) OR mux_652_nl;
  mux_653_nl <= MUX_s_1_2_2(or_725_nl, or_319_cse, fsm_output(3));
  or_723_nl <= (NOT (fsm_output(8))) OR (fsm_output(1));
  mux_650_nl <= MUX_s_1_2_2((fsm_output(7)), or_319_cse, or_723_nl);
  mux_649_nl <= MUX_s_1_2_2(or_319_cse, (fsm_output(7)), nor_143_cse);
  mux_651_nl <= MUX_s_1_2_2(mux_650_nl, mux_649_nl, fsm_output(3));
  mux_654_nl <= MUX_s_1_2_2(mux_653_nl, mux_651_nl, fsm_output(4));
  mux_655_nl <= MUX_s_1_2_2(or_727_nl, mux_654_nl, fsm_output(5));
  and_758_nl <= (fsm_output(3)) AND (fsm_output(8)) AND (fsm_output(1));
  mux_646_nl <= MUX_s_1_2_2(or_319_cse, (fsm_output(7)), and_758_nl);
  mux_644_nl <= MUX_s_1_2_2((fsm_output(7)), or_319_cse, and_706_cse);
  mux_645_nl <= MUX_s_1_2_2(mux_644_nl, or_319_cse, or_551_cse);
  mux_647_nl <= MUX_s_1_2_2(mux_646_nl, mux_645_nl, fsm_output(4));
  mux_648_nl <= MUX_s_1_2_2(or_722_cse, mux_647_nl, fsm_output(5));
  mux_656_nl <= MUX_s_1_2_2(mux_655_nl, mux_648_nl, fsm_output(2));
  QUANTIZE_ACTIVATION_LOOP_2_attention_abs_2_nand_nl <= NOT((attention_abs_2_mux_2(39))
      AND (RMS_NORM_LOOP_2_slc_RMS_NORM_LOOP_2_mul_67_28_ncse_sva(39)));
  attention_abs_2_mux_3_nl <= MUX_v_39_2_2((RMS_NORM_LOOP_2_slc_RMS_NORM_LOOP_2_mul_67_28_ncse_sva(38
      DOWNTO 0)), (attention_abs_2_mux_2(38 DOWNTO 0)), RMS_NORM_LOOP_2_slc_RMS_NORM_LOOP_2_mul_67_28_ncse_sva(39));
  QUANTIZE_ACTIVATION_LOOP_2_acc_4_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED(QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_39
      & QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_38_0), 40), 41) + CONV_UNSIGNED(CONV_SIGNED(SIGNED(QUANTIZE_ACTIVATION_LOOP_2_attention_abs_2_nand_nl
      & (NOT attention_abs_2_mux_3_nl)), 40), 41) + UNSIGNED'( "00000000000000000000000000000000000000001"),
      41));
  SF_LOOP_3_acc_70_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(18),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(2),
      1), 1), 2), 2));
  SF_LOOP_3_acc_89_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(CONV_SIGNED(SF_LOOP_3_acc_5_psp_sva(20),
      1), 1), 2) + CONV_UNSIGNED(CONV_SIGNED(CONV_SIGNED(SF_LOOP_3_acc_5_psp_sva(21),
      1), 1), 2), 2));
  or_816_nl <= (fsm_output(3)) OR (fsm_output(8)) OR (fsm_output(7)) OR (NOT (fsm_output(4)));
  mux_715_nl <= MUX_s_1_2_2(or_816_nl, or_tmp_63, fsm_output(2));
  mux_714_nl <= MUX_s_1_2_2(or_814_cse, or_tmp_63, fsm_output(2));
  mux_716_nl <= MUX_s_1_2_2(mux_715_nl, mux_714_nl, fsm_output(0));
  or_809_nl <= (fsm_output(8)) OR (fsm_output(7)) OR (fsm_output(4));
  mux_712_nl <= MUX_s_1_2_2(or_tmp_62, or_809_nl, fsm_output(3));
  mux_713_nl <= MUX_s_1_2_2(or_tmp_63, mux_712_nl, fsm_output(2));
  nand_47_nl <= NOT((fsm_output(0)) AND (NOT mux_713_nl));
  mux_717_nl <= MUX_s_1_2_2(mux_716_nl, nand_47_nl, fsm_output(1));
  and_481_nl <= (NOT mux_717_nl) AND CONV_SL_1_1(fsm_output(6 DOWNTO 5)=STD_LOGIC_VECTOR'("10"));
  or_821_nl <= (fsm_output(0)) OR (fsm_output(2)) OR (NOT (fsm_output(5))) OR (fsm_output(3))
      OR (NOT (fsm_output(8))) OR (fsm_output(4));
  or_820_nl <= (NOT (fsm_output(2))) OR (fsm_output(5)) OR (NOT (fsm_output(3)))
      OR (fsm_output(8)) OR (NOT (fsm_output(4)));
  or_818_nl <= (fsm_output(5)) OR (fsm_output(3)) OR not_tmp_405;
  mux_718_nl <= MUX_s_1_2_2(or_tmp_463, or_818_nl, fsm_output(2));
  mux_719_nl <= MUX_s_1_2_2(or_820_nl, mux_718_nl, fsm_output(0));
  mux_720_nl <= MUX_s_1_2_2(or_821_nl, mux_719_nl, fsm_output(1));
  and_482_nl <= (NOT mux_720_nl) AND and_dcpl_295;
  QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_mux1h_nl <= MUX1HOT_v_2_4_2(APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0,
      (APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0(1 DOWNTO 0)), STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_70_nl),
      2)), STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_89_nl), 2)), STD_LOGIC_VECTOR'(
      and_481_nl & and_482_nl & and_dcpl_360 & and_dcpl_458));
  nor_445_nl <= NOT(nor_78_cse OR (NOT (fsm_output(4))) OR (fsm_output(7)));
  nor_446_nl <= NOT((NOT (fsm_output(3))) OR (fsm_output(4)) OR (NOT (fsm_output(7))));
  nor_447_nl <= NOT((fsm_output(3)) OR (NOT (fsm_output(4))) OR (fsm_output(7)));
  mux_707_nl <= MUX_s_1_2_2(nor_446_nl, nor_447_nl, fsm_output(0));
  mux_708_nl <= MUX_s_1_2_2(nor_445_nl, mux_707_nl, fsm_output(1));
  nor_448_nl <= NOT((NOT (fsm_output(1))) OR (NOT (fsm_output(0))) OR (fsm_output(3))
      OR (NOT (fsm_output(4))) OR (fsm_output(7)));
  mux_709_nl <= MUX_s_1_2_2(mux_708_nl, nor_448_nl, fsm_output(8));
  nor_449_nl <= NOT((NOT (fsm_output(8))) OR (fsm_output(1)) OR (fsm_output(0)) OR
      (fsm_output(3)) OR (fsm_output(4)) OR (fsm_output(7)));
  mux_710_nl <= MUX_s_1_2_2(mux_709_nl, nor_449_nl, fsm_output(5));
  mux_704_nl <= MUX_s_1_2_2(or_213_cse, or_800_cse, fsm_output(3));
  mux_722_nl <= MUX_s_1_2_2(or_213_cse, or_798_cse, fsm_output(3));
  mux_705_nl <= MUX_s_1_2_2(mux_704_nl, mux_722_nl, fsm_output(0));
  nand_46_nl <= NOT((fsm_output(1)) AND (NOT mux_705_nl));
  or_797_nl <= nor_444_cse OR (fsm_output(3)) OR (NOT (fsm_output(4))) OR (fsm_output(7));
  mux_706_nl <= MUX_s_1_2_2(nand_46_nl, or_797_nl, fsm_output(8));
  nor_450_nl <= NOT((fsm_output(5)) OR mux_706_nl);
  mux_711_nl <= MUX_s_1_2_2(mux_710_nl, nor_450_nl, fsm_output(2));
  and_825_nl <= mux_711_nl AND (fsm_output(6));
  QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_nl <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"),
      QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_mux1h_nl, and_825_nl);
  or_835_nl <= (fsm_output(0)) OR (NOT(CONV_SL_1_1(fsm_output(3 DOWNTO 2)=STD_LOGIC_VECTOR'("11"))
      AND mux_834_cse));
  or_834_nl <= (fsm_output(2)) OR (fsm_output(3)) OR (NOT (fsm_output(4))) OR (fsm_output(6));
  mux_733_nl <= MUX_s_1_2_2(or_834_nl, or_tmp_697, fsm_output(0));
  mux_734_nl <= MUX_s_1_2_2(or_835_nl, mux_733_nl, fsm_output(1));
  and_487_nl <= (NOT mux_734_nl) AND and_dcpl_460;
  QUANTIZE_ACTIVATION_LOOP_5_1_acc_3_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0),
      2), 3) + SIGNED'( "001"), 3));
  nor_451_nl <= NOT((NOT (fsm_output(3))) OR (fsm_output(8)) OR (NOT (fsm_output(4))));
  mux_742_nl <= MUX_s_1_2_2(nor_451_nl, nor_tmp_118, fsm_output(2));
  nor_452_nl <= NOT((fsm_output(3)) OR not_tmp_405);
  nor_453_nl <= NOT((NOT (fsm_output(3))) OR (fsm_output(8)) OR (fsm_output(4)));
  mux_741_nl <= MUX_s_1_2_2(nor_452_nl, nor_453_nl, fsm_output(2));
  mux_743_nl <= MUX_s_1_2_2(mux_742_nl, mux_741_nl, fsm_output(1));
  and_492_nl <= mux_743_nl AND and_dcpl_295 AND (NOT (fsm_output(5))) AND (fsm_output(0));
  nor_461_nl <= NOT((NOT (fsm_output(0))) OR (fsm_output(2)) OR (APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2(3))
      OR (NOT (fsm_output(4))) OR (fsm_output(6)));
  or_869_nl <= CACHE_UPDATE_LOOP_1_and_cse OR (fsm_output(6));
  mux_765_nl <= MUX_s_1_2_2((NOT nor_tmp_79), or_869_nl, fsm_output(2));
  nor_462_nl <= NOT((fsm_output(0)) OR mux_765_nl);
  mux_766_nl <= MUX_s_1_2_2(nor_461_nl, nor_462_nl, fsm_output(1));
  nor_464_nl <= NOT((NOT((NOT CACHE_UPDATE_LOOP_1_and_cse) OR (fsm_output(4)))) OR
      (fsm_output(6)));
  mux_764_nl <= MUX_s_1_2_2(nor_464_nl, nor_tmp_79, fsm_output(2));
  and_495_nl <= CONV_SL_1_1(fsm_output(1 DOWNTO 0)=STD_LOGIC_VECTOR'("11")) AND mux_764_nl;
  mux_767_nl <= MUX_s_1_2_2(mux_766_nl, and_495_nl, fsm_output(3));
  and_496_nl <= mux_767_nl AND and_dcpl_460;
  QUANTIZE_ACTIVATION_LOOP_5_1_k_mux1h_1_nl <= MUX1HOT_v_3_3_2(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(QUANTIZE_ACTIVATION_LOOP_5_1_acc_3_nl),
      3)), (APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2(2 DOWNTO 0)), SF_LOOP_3_acc_61_cse_mx0w4,
      STD_LOGIC_VECTOR'( and_492_nl & and_496_nl & and_dcpl_360));
  and_789_nl <= (fsm_output(0)) AND (fsm_output(4)) AND (APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2(3))
      AND CONV_SL_1_1(fsm_output(6 DOWNTO 5)=STD_LOGIC_VECTOR'("01"));
  or_81_nl <= CONV_SL_1_1(fsm_output(6 DOWNTO 5)/=STD_LOGIC_VECTOR'("01"));
  or_862_nl <= CONV_SL_1_1(fsm_output(6 DOWNTO 5)/=STD_LOGIC_VECTOR'("10"));
  mux_760_nl <= MUX_s_1_2_2(or_81_nl, or_862_nl, fsm_output(4));
  nor_458_nl <= NOT((fsm_output(0)) OR mux_760_nl);
  mux_761_nl <= MUX_s_1_2_2(and_789_nl, nor_458_nl, fsm_output(1));
  nor_459_nl <= NOT(CONV_SL_1_1(fsm_output(1 DOWNTO 0)/=STD_LOGIC_VECTOR'("10"))
      OR (NOT CACHE_UPDATE_LOOP_1_and_cse) OR CONV_SL_1_1(fsm_output(6 DOWNTO 5)/=STD_LOGIC_VECTOR'("01")));
  mux_762_nl <= MUX_s_1_2_2(mux_761_nl, nor_459_nl, fsm_output(2));
  nor_457_nl <= NOT((NOT CACHE_UPDATE_LOOP_1_and_cse) OR CONV_SL_1_1(fsm_output(6
      DOWNTO 5)/=STD_LOGIC_VECTOR'("01")));
  mux_759_nl <= MUX_s_1_2_2(nor_457_nl, nor_tmp_191, fsm_output(4));
  nor_460_nl <= NOT((fsm_output(2)) OR (NOT(CONV_SL_1_1(fsm_output(1 DOWNTO 0)=STD_LOGIC_VECTOR'("11"))
      AND mux_759_nl)));
  mux_763_nl <= MUX_s_1_2_2(mux_762_nl, nor_460_nl, fsm_output(3));
  APPLY_ROTARY_POS_EMB_LOOP_1_i_nand_nl <= NOT(mux_763_nl AND and_dcpl_26);
  or_856_nl <= (NOT (fsm_output(1))) OR (NOT (fsm_output(7))) OR (fsm_output(8));
  mux_755_nl <= MUX_s_1_2_2(or_tmp_716, or_856_nl, fsm_output(0));
  or_855_nl <= nor_444_cse OR CONV_SL_1_1(fsm_output(8 DOWNTO 7)/=STD_LOGIC_VECTOR'("01"));
  mux_756_nl <= MUX_s_1_2_2(mux_755_nl, or_855_nl, fsm_output(2));
  nand_50_nl <= NOT((fsm_output(5)) AND (NOT mux_756_nl));
  or_854_nl <= and_706_cse OR CONV_SL_1_1(fsm_output(8 DOWNTO 7)/=STD_LOGIC_VECTOR'("01"));
  mux_754_nl <= MUX_s_1_2_2(or_854_nl, or_tmp_62, fsm_output(2));
  nand_49_nl <= NOT((fsm_output(5)) AND (NOT mux_754_nl));
  mux_757_nl <= MUX_s_1_2_2(nand_50_nl, nand_49_nl, fsm_output(3));
  mux_750_nl <= MUX_s_1_2_2(or_814_cse, or_tmp_716, and_706_cse);
  mux_749_nl <= MUX_s_1_2_2(nand_2_cse, or_746_cse, and_706_cse);
  mux_751_nl <= MUX_s_1_2_2(mux_750_nl, mux_749_nl, fsm_output(2));
  or_850_nl <= (or_349_cse AND (fsm_output(4))) OR CONV_SL_1_1(fsm_output(8 DOWNTO
      7)/=STD_LOGIC_VECTOR'("01"));
  mux_752_nl <= MUX_s_1_2_2(mux_751_nl, or_850_nl, fsm_output(5));
  or_848_nl <= (NOT(and_732_cse OR (fsm_output(7)))) OR (fsm_output(8));
  or_846_nl <= nor_456_cse OR (fsm_output(8));
  mux_746_nl <= MUX_s_1_2_2(or_846_nl, nand_2_cse, fsm_output(1));
  mux_747_nl <= MUX_s_1_2_2(or_848_nl, mux_746_nl, fsm_output(2));
  or_843_nl <= ((fsm_output(0)) AND (fsm_output(1)) AND (fsm_output(4))) OR CONV_SL_1_1(fsm_output(8
      DOWNTO 7)/=STD_LOGIC_VECTOR'("01"));
  mux_744_nl <= MUX_s_1_2_2(or_tmp_62, or_843_nl, fsm_output(2));
  mux_748_nl <= MUX_s_1_2_2(mux_747_nl, mux_744_nl, fsm_output(5));
  mux_753_nl <= MUX_s_1_2_2(mux_752_nl, mux_748_nl, fsm_output(3));
  mux_758_nl <= MUX_s_1_2_2(mux_757_nl, mux_753_nl, fsm_output(6));
  LINEAR_FORWARD_NO_MUL_LOOP_4_ki_mux1h_2_nl <= MUX1HOT_v_4_3_2((LINEAR_FORWARD_NO_MUL_LOOP_4_ki_4_0_sva_2(3
      DOWNTO 0)), z_out_35, z_out_31, STD_LOGIC_VECTOR'( and_dcpl_469 & and_dcpl_306
      & and_dcpl_246));
  not_1935_nl <= NOT and_dcpl_468;
  GEMM_3D_FLOAT_LOOP_4_1_l_mux1h_5_nl <= MUX1HOT_v_3_3_2(LINEAR_FORWARD_NO_MUL_LOOP_3_ko_2_0_sva_2,
      (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2(2 DOWNTO 0)), STD_LOGIC_VECTOR'( "001"),
      STD_LOGIC_VECTOR'( GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0_mx0c1 & GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0_mx0c2
      & GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0_mx0c3));
  GEMM_3D_FLOAT_LOOP_1_1_i_not_1_nl <= NOT GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0_mx0c0;
  GEMM_3D_FLOAT_LOOP_4_1_l_mux1h_6_nl <= MUX1HOT_v_2_4_2((LINEAR_FORWARD_NO_MUL_LOOP_3_2_ko_2_0_sva_1_mx0w2(2
      DOWNTO 1)), (GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva(2 DOWNTO 1)), (QUANTIZE_ACTIVATION_LOOP_3_jo_2_0_sva_3(2
      DOWNTO 1)), (RESHAPE_2D_TO_3D_LOOP_3_2_mux_3_itm_2_0(2 DOWNTO 1)), STD_LOGIC_VECTOR'(
      CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c1 & CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c3
      & and_dcpl_249 & CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c5));
  CACHE_UPDATE_LOOP_2_1_j_not_1_nl <= NOT CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c0;
  GEMM_3D_FLOAT_LOOP_4_1_l_mux1h_7_nl <= MUX1HOT_s_1_5_2((LINEAR_FORWARD_NO_MUL_LOOP_3_2_ko_2_0_sva_1_mx0w2(0)),
      (APPLY_ROTARY_POS_EMB_LOOP_3_acc_30_psp_sva_1(0)), (GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva(0)),
      (QUANTIZE_ACTIVATION_LOOP_3_jo_2_0_sva_3(0)), (RESHAPE_2D_TO_3D_LOOP_3_2_mux_3_itm_2_0(0)),
      STD_LOGIC_VECTOR'( CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c1 & and_dcpl_285 & CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c3
      & and_dcpl_249 & CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c5));
  APPLY_ROTARY_POS_EMB_LOOP_6_or_nl <= and_dcpl_400 OR and_dcpl_403 OR and_dcpl_234
      OR and_dcpl_249 OR and_dcpl_251;
  APPLY_ROTARY_POS_EMB_LOOP_6_mux1h_15_nl <= MUX1HOT_v_4_3_2((LINEAR_FORWARD_NO_MUL_LOOP_4_2_ki_4_0_sva_2(3
      DOWNTO 0)), z_out_8, SF_LOOP_3_acc_63_cse_mx0w6, STD_LOGIC_VECTOR'( and_dcpl_469
      & APPLY_ROTARY_POS_EMB_LOOP_6_or_nl & and_dcpl_360));
  not_1936_nl <= NOT and_dcpl_468;
  or_967_nl <= (NOT (fsm_output(3))) OR (fsm_output(5)) OR (NOT nor_tmp_79);
  or_965_nl <= (NOT (fsm_output(3))) OR (fsm_output(0)) OR (fsm_output(5)) OR (NOT
      nor_tmp_79);
  mux_848_nl <= MUX_s_1_2_2(or_967_nl, or_965_nl, and_704_cse);
  mux_845_nl <= MUX_s_1_2_2(or_tmp_243, (NOT (fsm_output(6))), fsm_output(3));
  mux_842_nl <= MUX_s_1_2_2((NOT (fsm_output(6))), nor_tmp_79, fsm_output(5));
  mux_843_nl <= MUX_s_1_2_2(or_tmp_243, mux_842_nl, fsm_output(0));
  mux_844_nl <= MUX_s_1_2_2((NOT nor_tmp_191), mux_843_nl, fsm_output(3));
  mux_846_nl <= MUX_s_1_2_2(mux_845_nl, mux_844_nl, fsm_output(2));
  or_963_nl <= (NOT((fsm_output(3)) OR (NOT (fsm_output(0))) OR (fsm_output(5))))
      OR (fsm_output(4)) OR (NOT (fsm_output(6)));
  mux_838_nl <= MUX_s_1_2_2((NOT or_tmp_243), (fsm_output(6)), fsm_output(5));
  mux_839_nl <= MUX_s_1_2_2(nor_tmp_191, mux_838_nl, fsm_output(0));
  mux_836_nl <= MUX_s_1_2_2((NOT nor_tmp_79), nor_tmp_79, fsm_output(5));
  mux_835_nl <= MUX_s_1_2_2((NOT nor_tmp_79), mux_834_cse, fsm_output(5));
  mux_837_nl <= MUX_s_1_2_2(mux_836_nl, mux_835_nl, fsm_output(0));
  mux_840_nl <= MUX_s_1_2_2((NOT mux_839_nl), mux_837_nl, fsm_output(3));
  mux_841_nl <= MUX_s_1_2_2(or_963_nl, mux_840_nl, fsm_output(2));
  mux_847_nl <= MUX_s_1_2_2(mux_846_nl, mux_841_nl, fsm_output(1));
  mux_849_nl <= MUX_s_1_2_2(mux_848_nl, mux_847_nl, fsm_output(7));
  QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_mux_nl <= MUX_s_1_2_2(reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd,
      (CACHE_UPDATE_LOOP_3_qif_acc_3_psp(1)), and_dcpl_484);
  QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_nl
      <= QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_mux_nl AND nor_527_seb;
  QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_mux_1_nl <= MUX_s_1_2_2(reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd_1,
      (CACHE_UPDATE_LOOP_3_qif_acc_3_psp(0)), and_dcpl_484);
  QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_4_nl
      <= QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_mux_1_nl AND nor_527_seb;
  SF_LOOP_3_acc_83_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(36),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(35),
      1), 1), 2), 2));
  QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_2_nl <= CONV_SL_1_1(APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0=STD_LOGIC_VECTOR'("00"))
      AND and_dcpl_319;
  QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_3_nl <= CONV_SL_1_1(APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0=STD_LOGIC_VECTOR'("01"))
      AND and_dcpl_319;
  QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_4_nl <= CONV_SL_1_1(APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0=STD_LOGIC_VECTOR'("10"))
      AND and_dcpl_319;
  QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_5_nl <= CONV_SL_1_1(APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0=STD_LOGIC_VECTOR'("11"))
      AND and_dcpl_319;
  mux_860_nl <= MUX_s_1_2_2(or_831_cse, or_tmp_835, fsm_output(2));
  mux_862_nl <= MUX_s_1_2_2(mux_tmp_861, mux_860_nl, fsm_output(0));
  mux_863_nl <= MUX_s_1_2_2(or_831_cse, mux_862_nl, fsm_output(1));
  and_518_nl <= (NOT mux_863_nl) AND and_dcpl_487;
  and_519_nl <= and_dcpl_325 AND and_dcpl_161;
  QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_mux1h_2_nl <= MUX1HOT_v_2_8_2((LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_sva(1
      DOWNTO 0)), (LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_sva(3 DOWNTO 2)), (LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_sva(5
      DOWNTO 4)), (LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_sva(7 DOWNTO 6)), CACHE_UPDATE_LOOP_3_k_5_0_sva_1_1_0,
      (RESHAPE_2D_TO_3D_LOOP_3_2_mux_3_itm_2_0(1 DOWNTO 0)), STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_83_nl),
      2)), LINEAR_FORWARD_NO_MUL_LOOP_5_3_weight_val_mux_tmp, STD_LOGIC_VECTOR'(
      QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_2_nl & QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_3_nl
      & QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_4_nl & QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_5_nl
      & and_518_nl & and_dcpl_484 & and_dcpl_360 & and_519_nl));
  nand_54_nl <= NOT((fsm_output(3)) AND (NOT mux_tmp_448));
  mux_857_nl <= MUX_s_1_2_2(or_tmp_834, nand_54_nl, fsm_output(2));
  mux_858_nl <= MUX_s_1_2_2(or_tmp_831, mux_857_nl, fsm_output(0));
  or_974_nl <= (fsm_output(8)) OR mux_tmp_853;
  mux_854_nl <= MUX_s_1_2_2(or_tmp_62, or_974_nl, fsm_output(3));
  mux_855_nl <= MUX_s_1_2_2(or_tmp_834, mux_854_nl, fsm_output(2));
  or_972_nl <= (fsm_output(3)) OR (fsm_output(8)) OR (NOT (fsm_output(7))) OR (fsm_output(4));
  mux_852_nl <= MUX_s_1_2_2(or_tmp_831, or_972_nl, fsm_output(2));
  mux_856_nl <= MUX_s_1_2_2(mux_855_nl, mux_852_nl, fsm_output(0));
  mux_859_nl <= MUX_s_1_2_2(mux_858_nl, mux_856_nl, fsm_output(1));
  nor_528_nl <= NOT(mux_859_nl OR CONV_SL_1_1(fsm_output(6 DOWNTO 5)/=STD_LOGIC_VECTOR'("10")));
  QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_1_nl <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"),
      QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_mux1h_2_nl, nor_528_nl);
  LINEAR_FORWARD_NO_MUL_LOOP_5_acc_2_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd & reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd_1),
      2), 3) + SIGNED'( "001"), 3));
  SF_LOOP_3_acc_81_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(36),
      1),2)), 2), 3) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(35),
      1), 1), 3), 3));
  mux_881_nl <= MUX_s_1_2_2(or_831_cse, nand_tmp_55, fsm_output(2));
  mux_879_nl <= MUX_s_1_2_2(nand_tmp_55, or_tmp_835, fsm_output(2));
  mux_880_nl <= MUX_s_1_2_2(mux_tmp_861, mux_879_nl, fsm_output(0));
  mux_882_nl <= MUX_s_1_2_2(mux_881_nl, mux_880_nl, fsm_output(1));
  LINEAR_FORWARD_NO_MUL_LOOP_5_2_acc_2_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(CACHE_UPDATE_LOOP_3_k_5_0_sva_1_1_0),
      2), 3) + SIGNED'( "001"), 3));
  SF_LOOP_3_acc_69_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'(
      (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(18)) & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(18))),
      2), 3) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(2),
      1),2)), 2), 3), 3));
  SF_LOOP_3_acc_91_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(SF_LOOP_3_acc_5_psp_sva(20),
      1),2)), 2), 3) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(SF_LOOP_3_acc_5_psp_sva(21),
      1),2)), 2), 3), 3));
  and_811_nl <= (fsm_output(4)) AND (fsm_output(3)) AND (fsm_output(1)) AND (NOT
      (fsm_output(7)));
  nor_493_nl <= NOT((fsm_output(3)) OR (NOT((fsm_output(1)) AND (fsm_output(0)) AND
      (fsm_output(7)))));
  or_993_nl <= (fsm_output(0)) OR (NOT (fsm_output(7)));
  mux_875_nl <= MUX_s_1_2_2(or_993_nl, (fsm_output(7)), fsm_output(1));
  and_812_nl <= (fsm_output(3)) AND mux_875_nl;
  mux_876_nl <= MUX_s_1_2_2(nor_493_nl, and_812_nl, fsm_output(4));
  mux_877_nl <= MUX_s_1_2_2(and_811_nl, mux_876_nl, fsm_output(2));
  nor_494_nl <= NOT((fsm_output(3)) OR (fsm_output(1)) OR (fsm_output(0)) OR (NOT
      (fsm_output(7))));
  mux_873_nl <= MUX_s_1_2_2((fsm_output(7)), nor_494_nl, fsm_output(4));
  nor_495_nl <= NOT((fsm_output(4)) OR (NOT (fsm_output(7))));
  mux_874_nl <= MUX_s_1_2_2(mux_873_nl, nor_495_nl, fsm_output(2));
  mux_878_nl <= MUX_s_1_2_2(mux_877_nl, mux_874_nl, fsm_output(5));
  LINEAR_FORWARD_NO_MUL_LOOP_5_or_nl <= (CONV_SL_1_1(LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_slc_LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_conc_1_1_1_0_svs=STD_LOGIC_VECTOR'("01")))
      OR LINEAR_FORWARD_NO_MUL_LOOP_5_LINEAR_FORWARD_NO_MUL_LOOP_5_and_1_tmp;
  LINEAR_FORWARD_NO_MUL_LOOP_5_mux_1_nl <= MUX_s_1_2_2(LINEAR_FORWARD_NO_MUL_LOOP_5_or_nl,
      exit_APPLY_ROTARY_POS_EMB_LOOP_3_sva_dfm, and_dcpl_506);
  and_541_nl <= and_dcpl_225 AND and_dcpl_125 AND (NOT (fsm_output(0))) AND ((NOT
      (fsm_output(1))) OR SOFTMAX_LOOP_3_acc_3_itm_40_1);
  nor_502_nl <= NOT(CONV_SL_1_1(fsm_output(5 DOWNTO 3)/=STD_LOGIC_VECTOR'("100")));
  nor_503_nl <= NOT((fsm_output(5)) OR (NOT nor_tmp_11));
  mux_903_nl <= MUX_s_1_2_2(nor_502_nl, nor_503_nl, fsm_output(1));
  and_545_nl <= mux_903_nl AND (fsm_output(6)) AND and_dcpl_80 AND and_dcpl_417;
  nor_498_nl <= NOT((NOT (fsm_output(4))) OR (NOT (fsm_output(3))) OR (fsm_output(2))
      OR (NOT (fsm_output(0))) OR (NOT (fsm_output(1))) OR (fsm_output(8)));
  or_1012_nl <= (fsm_output(0)) OR (fsm_output(1)) OR (NOT (fsm_output(8)));
  mux_900_nl <= MUX_s_1_2_2(nor_143_cse, or_1012_nl, fsm_output(2));
  or_1014_nl <= CONV_SL_1_1(fsm_output(4 DOWNTO 3)/=STD_LOGIC_VECTOR'("00")) OR mux_900_nl;
  mux_901_nl <= MUX_s_1_2_2(nor_498_nl, or_1014_nl, fsm_output(5));
  nand_241_nl <= NOT((fsm_output(6)) AND mux_901_nl);
  or_1133_nl <= (fsm_output(5)) OR (fsm_output(4)) OR (fsm_output(3)) OR (fsm_output(2))
      OR (fsm_output(1)) OR (NOT (fsm_output(8)));
  or_1007_nl <= SOFTMAX_LOOP_3_acc_3_itm_40_1 OR (NOT (fsm_output(1))) OR (fsm_output(8));
  mux_897_nl <= MUX_s_1_2_2(or_1007_nl, (fsm_output(8)), fsm_output(0));
  and_813_nl <= (fsm_output(2)) AND (NOT mux_897_nl);
  mux_898_nl <= MUX_s_1_2_2(and_813_nl, nor_500_cse, fsm_output(3));
  nand_242_nl <= NOT((NOT(CONV_SL_1_1(fsm_output(5 DOWNTO 4)/=STD_LOGIC_VECTOR'("01"))))
      AND mux_898_nl);
  mux_899_nl <= MUX_s_1_2_2(or_1133_nl, nand_242_nl, fsm_output(6));
  mux_902_nl <= MUX_s_1_2_2(nand_241_nl, mux_899_nl, fsm_output(7));
  APPLY_ROTARY_POS_EMB_LOOP_6_k_mux1h_10_nl <= MUX1HOT_v_4_3_2(APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_5_2,
      (SF_LOOP_3_acc_88_itm(5 DOWNTO 2)), (RESHAPE_2D_TO_3D_LOOP_3_1_k_5_0_sva_2(5
      DOWNTO 2)), STD_LOGIC_VECTOR'( and_548_itm & and_dcpl_360 & and_554_itm));
  APPLY_ROTARY_POS_EMB_LOOP_6_k_mux1h_13_nl <= MUX1HOT_v_2_3_2(APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0,
      (SF_LOOP_3_acc_88_itm(1 DOWNTO 0)), (RESHAPE_2D_TO_3D_LOOP_3_1_k_5_0_sva_2(1
      DOWNTO 0)), STD_LOGIC_VECTOR'( and_548_itm & and_dcpl_360 & and_554_itm));
  and_816_nl <= (fsm_output(0)) AND (NOT((NOT(CONV_SL_1_1(fsm_output(3 DOWNTO 2)/=STD_LOGIC_VECTOR'("10"))))
      OR (NOT (fsm_output(4))) OR (fsm_output(6))));
  or_1028_nl <= (fsm_output(3)) OR (NOT mux_834_cse);
  mux_907_nl <= MUX_s_1_2_2(or_1028_nl, or_196_cse, fsm_output(2));
  mux_906_nl <= MUX_s_1_2_2(and_tmp_26, nor_tmp_90, fsm_output(2));
  mux_908_nl <= MUX_s_1_2_2((NOT mux_907_nl), mux_906_nl, fsm_output(0));
  mux_909_nl <= MUX_s_1_2_2(and_816_nl, mux_908_nl, fsm_output(1));
  APPLY_ROTARY_POS_EMB_LOOP_6_k_nand_1_nl <= NOT(mux_909_nl AND and_dcpl_460);
  nand_238_nl <= NOT(CONV_SL_1_1(fsm_output(3 DOWNTO 2)=STD_LOGIC_VECTOR'("11")));
  mux_920_nl <= MUX_s_1_2_2(nand_238_nl, (fsm_output(3)), and_706_cse);
  nor_505_nl <= NOT(CONV_SL_1_1(fsm_output(3 DOWNTO 1)/=STD_LOGIC_VECTOR'("001")));
  and_819_nl <= CONV_SL_1_1(fsm_output(3 DOWNTO 1)=STD_LOGIC_VECTOR'("111"));
  mux_919_nl <= MUX_s_1_2_2(nor_505_nl, and_819_nl, fsm_output(0));
  mux_921_nl <= MUX_s_1_2_2((NOT mux_920_nl), mux_919_nl, fsm_output(4));
  and_821_nl <= (fsm_output(5)) AND mux_921_nl;
  mux_916_nl <= MUX_s_1_2_2((NOT (fsm_output(3))), (fsm_output(3)), fsm_output(2));
  mux_917_nl <= MUX_s_1_2_2((fsm_output(2)), mux_916_nl, and_706_cse);
  nor_508_nl <= NOT((fsm_output(4)) OR mux_917_nl);
  or_137_nl <= CONV_SL_1_1(fsm_output(3 DOWNTO 2)/=STD_LOGIC_VECTOR'("00"));
  mux_914_nl <= MUX_s_1_2_2(or_137_nl, nor_507_cse, fsm_output(1));
  mux_913_nl <= MUX_s_1_2_2((fsm_output(3)), (NOT (fsm_output(3))), or_349_cse);
  mux_915_nl <= MUX_s_1_2_2(mux_914_nl, mux_913_nl, fsm_output(0));
  and_822_nl <= (fsm_output(4)) AND mux_915_nl;
  mux_918_nl <= MUX_s_1_2_2(nor_508_nl, and_822_nl, fsm_output(5));
  mux_922_nl <= MUX_s_1_2_2(and_821_nl, mux_918_nl, fsm_output(6));
  APPLY_ROTARY_POS_EMB_LOOP_6_k_APPLY_ROTARY_POS_EMB_LOOP_6_k_mux_1_nl <= MUX_s_1_2_2((CACHE_UPDATE_LOOP_3_k_5_0_sva_1_5_2(3)),
      (RESHAPE_2D_TO_3D_LOOP_3_k_5_0_sva_2(5)), and_dcpl_267);
  SOFTMAX_LOOP_2_mux1h_nl <= MUX1HOT_v_2_3_2(reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1,
      RESHAPE_2D_TO_3D_LOOP_3_2_mux_3_itm_4_3, (SF_LOOP_3_acc_87_itm(4 DOWNTO 3)),
      STD_LOGIC_VECTOR'( and_564_itm & and_dcpl_506 & and_dcpl_360));
  SOFTMAX_LOOP_2_and_nl <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"), SOFTMAX_LOOP_2_mux1h_nl,
      nor_529_itm);
  APPLY_ROTARY_POS_EMB_LOOP_6_k_mux1h_12_nl <= MUX1HOT_v_2_3_2((CACHE_UPDATE_LOOP_3_k_5_0_sva_1_5_2(2
      DOWNTO 1)), SOFTMAX_LOOP_2_and_nl, (RESHAPE_2D_TO_3D_LOOP_3_k_5_0_sva_2(4 DOWNTO
      3)), STD_LOGIC_VECTOR'( and_558_itm & and_561_itm & and_dcpl_267));
  SOFTMAX_LOOP_2_mux1h_1_nl <= MUX1HOT_s_1_3_2(reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_0,
      (RESHAPE_2D_TO_3D_LOOP_3_2_mux_3_itm_2_0(2)), (SF_LOOP_3_acc_87_itm(2)), STD_LOGIC_VECTOR'(
      and_564_itm & and_dcpl_506 & and_dcpl_360));
  SOFTMAX_LOOP_2_and_1_nl <= SOFTMAX_LOOP_2_mux1h_1_nl AND nor_529_itm;
  APPLY_ROTARY_POS_EMB_LOOP_6_k_mux1h_15_nl <= MUX1HOT_s_1_3_2((CACHE_UPDATE_LOOP_3_k_5_0_sva_1_5_2(0)),
      SOFTMAX_LOOP_2_and_1_nl, (RESHAPE_2D_TO_3D_LOOP_3_k_5_0_sva_2(2)), STD_LOGIC_VECTOR'(
      and_558_itm & and_561_itm & and_dcpl_267));
  SOFTMAX_LOOP_2_mux1h_2_nl <= MUX1HOT_v_2_3_2(reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1,
      (RESHAPE_2D_TO_3D_LOOP_3_2_mux_3_itm_2_0(1 DOWNTO 0)), (SF_LOOP_3_acc_87_itm(1
      DOWNTO 0)), STD_LOGIC_VECTOR'( and_564_itm & and_dcpl_506 & and_dcpl_360));
  SOFTMAX_LOOP_2_and_2_nl <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"), SOFTMAX_LOOP_2_mux1h_2_nl,
      nor_529_itm);
  APPLY_ROTARY_POS_EMB_LOOP_6_k_mux1h_14_nl <= MUX1HOT_v_2_3_2(CACHE_UPDATE_LOOP_3_k_5_0_sva_1_1_0,
      SOFTMAX_LOOP_2_and_2_nl, (RESHAPE_2D_TO_3D_LOOP_3_k_5_0_sva_2(1 DOWNTO 0)),
      STD_LOGIC_VECTOR'( and_558_itm & and_561_itm & and_dcpl_267));
  mux_945_nl <= MUX_s_1_2_2(mux_tmp_928, or_tmp_130, or_44_cse);
  mux_157_nl <= MUX_s_1_2_2(or_tmp_130, or_194_cse, fsm_output(2));
  mux_944_nl <= MUX_s_1_2_2(or_199_cse, mux_157_nl, fsm_output(0));
  mux_946_nl <= MUX_s_1_2_2(mux_945_nl, mux_944_nl, fsm_output(1));
  SF_LOOP_3_acc_102_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED((NOT
      (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(18))) & STD_LOGIC_VECTOR'(
      "1000000") & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(18)))),
      9), 10) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_q_d(1
      DOWNTO 0)) & STD_LOGIC_VECTOR'( "1111111")), 9), 10), 10));
  SF_LOOP_3_acc_97_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_itm_17
      & (reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd(7
      DOWNTO 1))) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(16))
      & STD_LOGIC_VECTOR'( "000") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(16),
      1),3))), 7), 8), 8));
  SF_LOOP_3_acc_98_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1(3
      DOWNTO 0)), 4), 5) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(16),
      1),2)), 2), 5), 5));
  SF_LOOP_3_acc_29_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_1
      & reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_2 & reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_3
      & reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_4 & reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_5)
      + CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_17_itm_18_9 & SF_LOOP_3_acc_17_itm_8_0),
      19), 20) + CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_16_itm), 19), 20),
      20));
  SF_LOOP_3_acc_31_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_29_nl),
      21) + CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_28_itm), 20), 21), 21));
  mux_948_nl <= MUX_s_1_2_2(nand_1_cse, mux_tmp_220, fsm_output(2));
  mux_947_nl <= MUX_s_1_2_2(or_tmp_178, mux_tmp_220, or_44_cse);
  mux_949_nl <= MUX_s_1_2_2(mux_948_nl, mux_947_nl, fsm_output(1));
  and_572_nl <= and_dcpl_212 AND and_dcpl_384 AND (NOT((fsm_output(1)) OR (rms_norm_384_1_val_acc_psp_sva_1(31))));
  QUANTIZE_ACTIVATION_LOOP_2_1_attention_abs_6_nand_nl <= NOT((attention_abs_6_mux_2(39))
      AND (RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_slc_71_32_1_ncse_sva(39)));
  attention_abs_6_mux_3_nl <= MUX_v_39_2_2((RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_slc_71_32_1_ncse_sva(38
      DOWNTO 0)), (attention_abs_6_mux_2(38 DOWNTO 0)), RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_slc_71_32_1_ncse_sva(39));
  QUANTIZE_ACTIVATION_LOOP_2_1_acc_4_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED(QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_39
      & QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_38_0), 40), 41) + CONV_UNSIGNED(CONV_SIGNED(SIGNED(QUANTIZE_ACTIVATION_LOOP_2_1_attention_abs_6_nand_nl
      & (NOT attention_abs_6_mux_3_nl)), 40), 41) + UNSIGNED'( "00000000000000000000000000000000000000001"),
      41));
  mux_957_nl <= MUX_s_1_2_2(mux_tmp_954, mux_tmp_952, fsm_output(2));
  mux_958_nl <= MUX_s_1_2_2(mux_957_nl, mux_tmp_955, fsm_output(0));
  mux_953_nl <= MUX_s_1_2_2(mux_tmp_952, mux_tmp_950, fsm_output(2));
  mux_956_nl <= MUX_s_1_2_2(mux_tmp_955, mux_953_nl, fsm_output(0));
  mux_959_nl <= MUX_s_1_2_2(mux_958_nl, mux_956_nl, fsm_output(1));
  nor_530_nl <= NOT(CONV_SL_1_1(fsm_output(5 DOWNTO 2)/=STD_LOGIC_VECTOR'("1000")));
  nor_531_nl <= NOT((NOT (fsm_output(2))) OR (fsm_output(5)) OR (NOT nor_tmp_11));
  mux_960_nl <= MUX_s_1_2_2(nor_530_nl, nor_531_nl, or_272_cse);
  SF_LOOP_3_mux1h_10_nl <= MUX1HOT_v_2_3_2((attention_5_1_384_384_8_48_attn_weights_rsci_q_d(38
      DOWNTO 37)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(26 DOWNTO 25)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(15
      DOWNTO 14)), STD_LOGIC_VECTOR'( and_dcpl_551 & and_dcpl_554 & and_841_cse));
  SF_LOOP_3_mux1h_11_nl <= MUX1HOT_v_7_3_2(STD_LOGIC_VECTOR'( "0111100"), STD_LOGIC_VECTOR'(
      "1100101"), STD_LOGIC_VECTOR'( "1010011"), STD_LOGIC_VECTOR'( and_dcpl_551
      & and_dcpl_554 & and_841_cse));
  SF_LOOP_3_mux1h_12_nl <= MUX1HOT_v_5_3_2(STD_LOGIC_VECTOR'( "00001"), STD_LOGIC_VECTOR'(
      "01010"), STD_LOGIC_VECTOR'( "10110"), STD_LOGIC_VECTOR'( and_dcpl_551 & and_dcpl_554
      & and_841_cse));
  z_out <= STD_LOGIC_VECTOR(CONV_UNSIGNED(SIGNED'( CONV_SIGNED(UNSIGNED(SF_LOOP_3_mux1h_10_nl),
      3) * SIGNED(STD_LOGIC_VECTOR'( "101") & SF_LOOP_3_mux1h_11_nl & '0' & SF_LOOP_3_mux1h_12_nl
      & '1')), 18));
  compute_sqrt_for_guess_inv_mux_2_nl <= MUX_s_1_2_2((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39)),
      reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd, compute_sqrt_for_guess_inv_or_cse);
  compute_sqrt_for_guess_inv_compute_sqrt_for_guess_inv_and_2_nl <= compute_sqrt_for_guess_inv_mux_2_nl
      AND compute_sqrt_for_guess_inv_nor_seb;
  compute_sqrt_for_guess_inv_mux_3_nl <= MUX_v_8_2_2((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38
      DOWNTO 31)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(38 DOWNTO 31)), compute_sqrt_for_guess_inv_or_cse);
  compute_sqrt_for_guess_inv_compute_sqrt_for_guess_inv_and_3_nl <= MUX_v_8_2_2(STD_LOGIC_VECTOR'("00000000"),
      compute_sqrt_for_guess_inv_mux_3_nl, compute_sqrt_for_guess_inv_nor_seb);
  compute_sqrt_for_guess_inv_mux1h_7_nl <= MUX1HOT_v_29_4_2((attention_abs_qif_acc_pmx_lpi_1_dfm(30
      DOWNTO 2)), (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30 DOWNTO 2)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(30
      DOWNTO 2)), (attention_abs_4_qif_acc_pmx_lpi_1_dfm(30 DOWNTO 2)), STD_LOGIC_VECTOR'(
      and_dcpl_568 & compute_sqrt_for_guess_inv_or_2_itm & compute_sqrt_for_guess_inv_or_cse
      & and_dcpl_603));
  not_2446_nl <= NOT and_dcpl_592;
  compute_sqrt_for_guess_inv_and_6_nl <= MUX_v_29_2_2(STD_LOGIC_VECTOR'("00000000000000000000000000000"),
      compute_sqrt_for_guess_inv_mux1h_7_nl, not_2446_nl);
  compute_sqrt_for_guess_inv_mux1h_8_nl <= MUX1HOT_v_2_5_2((attention_abs_qif_acc_pmx_lpi_1_dfm(1
      DOWNTO 0)), (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(1 DOWNTO 0)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(1
      DOWNTO 0)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(15 DOWNTO 14)), (attention_abs_4_qif_acc_pmx_lpi_1_dfm(1
      DOWNTO 0)), STD_LOGIC_VECTOR'( and_dcpl_568 & compute_sqrt_for_guess_inv_or_2_itm
      & compute_sqrt_for_guess_inv_or_cse & and_dcpl_592 & and_dcpl_603));
  compute_sqrt_for_guess_inv_mux1h_9_nl <= MUX1HOT_s_1_4_2(operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_itm_17,
      reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd, (INIT_2D_MEM_LOOP_2_1_asn_psp(39)), (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(39)),
      STD_LOGIC_VECTOR'( compute_sqrt_for_guess_inv_or_4_itm & compute_sqrt_for_guess_inv_or_3_itm
      & and_dcpl_586 & and_dcpl_607));
  compute_sqrt_for_guess_inv_and_7_nl <= compute_sqrt_for_guess_inv_mux1h_9_nl AND
      (NOT and_dcpl_572) AND (NOT(and_dcpl_583 OR and_dcpl_592));
  compute_sqrt_for_guess_inv_mux1h_10_nl <= MUX1HOT_v_22_5_2(STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_itm_17,
      1),22)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(38 DOWNTO 17)), STD_LOGIC_VECTOR'(
      "0000000000000000001001"), (INIT_2D_MEM_LOOP_2_1_asn_psp(38 DOWNTO 17)), (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(38
      DOWNTO 17)), STD_LOGIC_VECTOR'( compute_sqrt_for_guess_inv_or_4_itm & compute_sqrt_for_guess_inv_or_3_itm
      & and_dcpl_583 & and_dcpl_586 & and_dcpl_607));
  compute_sqrt_for_guess_inv_and_8_nl <= compute_sqrt_for_guess_inv_mux1h_10_nl AND
      STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT and_dcpl_572, 1),22)) AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT
      and_dcpl_592, 1),22));
  compute_sqrt_for_guess_inv_mux1h_11_nl <= MUX1HOT_v_5_5_2((reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd(7
      DOWNTO 3)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(16 DOWNTO 12)), STD_LOGIC_VECTOR'(
      "01101"), (INIT_2D_MEM_LOOP_2_1_asn_psp(16 DOWNTO 12)), (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(16
      DOWNTO 12)), STD_LOGIC_VECTOR'( compute_sqrt_for_guess_inv_or_4_itm & compute_sqrt_for_guess_inv_or_3_itm
      & and_dcpl_583 & and_dcpl_586 & and_dcpl_607));
  compute_sqrt_for_guess_inv_and_9_nl <= compute_sqrt_for_guess_inv_mux1h_11_nl AND
      STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT and_dcpl_572, 1),5)) AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT
      and_dcpl_592, 1),5));
  compute_sqrt_for_guess_inv_mux1h_12_nl <= MUX1HOT_v_3_7_2((reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd(2
      DOWNTO 0)), reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_4, (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(11
      DOWNTO 9)), STD_LOGIC_VECTOR'( "010"), (INIT_2D_MEM_LOOP_2_1_asn_psp(11 DOWNTO
      9)), STD_LOGIC_VECTOR'( "100"), (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(11
      DOWNTO 9)), STD_LOGIC_VECTOR'( compute_sqrt_for_guess_inv_or_4_itm & and_dcpl_572
      & compute_sqrt_for_guess_inv_or_3_itm & and_dcpl_583 & and_dcpl_586 & and_dcpl_592
      & and_dcpl_607));
  compute_sqrt_for_guess_inv_mux1h_13_nl <= MUX1HOT_v_9_7_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1,
      reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_5, (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(8
      DOWNTO 0)), STD_LOGIC_VECTOR'( "110010011"), (INIT_2D_MEM_LOOP_2_1_asn_psp(8
      DOWNTO 0)), STD_LOGIC_VECTOR'( "100111101"), (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(8
      DOWNTO 0)), STD_LOGIC_VECTOR'( compute_sqrt_for_guess_inv_or_4_itm & and_dcpl_572
      & compute_sqrt_for_guess_inv_or_3_itm & and_dcpl_583 & and_dcpl_586 & and_dcpl_592
      & and_dcpl_607));
  z_out_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(SIGNED'( SIGNED(compute_sqrt_for_guess_inv_compute_sqrt_for_guess_inv_and_2_nl
      & compute_sqrt_for_guess_inv_compute_sqrt_for_guess_inv_and_3_nl & compute_sqrt_for_guess_inv_and_6_nl
      & compute_sqrt_for_guess_inv_mux1h_8_nl) * SIGNED(compute_sqrt_for_guess_inv_and_7_nl
      & compute_sqrt_for_guess_inv_and_8_nl & compute_sqrt_for_guess_inv_and_9_nl
      & compute_sqrt_for_guess_inv_mux1h_12_nl & compute_sqrt_for_guess_inv_mux1h_13_nl)),
      61));
  LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_or_11_nl <= ((reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(32))
      AND (NOT and_841_cse)) OR and_dcpl_615;
  LINEAR_FORWARD_NO_MUL_LOOP_2_2_mux1h_5_nl <= MUX1HOT_v_2_3_2(STD_LOGIC_VECTOR'(
      "01"), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(31 DOWNTO 30)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(38
      DOWNTO 37)), STD_LOGIC_VECTOR'( and_dcpl_615 & and_dcpl_622 & and_841_cse));
  LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_and_1_nl <= reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd
      AND LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_or_cse;
  LINEAR_FORWARD_NO_MUL_LOOP_2_2_mux1h_6_nl <= MUX1HOT_v_39_3_2(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1,
      STD_LOGIC_VECTOR'( "000000000001001001111001101010010011011"), STD_LOGIC_VECTOR'(
      "000010010011110011010100100110101110011"), STD_LOGIC_VECTOR'( and_dcpl_615
      & and_dcpl_622 & and_841_cse));
  z_out_2 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(SIGNED'( CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_or_cse
      & '0' & LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_or_cse
      & '0' & LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_or_cse
      & LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_or_cse & LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_or_cse
      & '0' & LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_or_cse
      & LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_or_cse & '0'
      & LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_or_cse & STD_LOGIC_VECTOR'(
      "000") & LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_or_cse
      & LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_or_cse & LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_or_11_nl
      & LINEAR_FORWARD_NO_MUL_LOOP_2_2_mux1h_5_nl), 20), 21) * SIGNED(LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_and_1_nl
      & LINEAR_FORWARD_NO_MUL_LOOP_2_2_mux1h_6_nl)), 60));
  LINEAR_FORWARD_NO_MUL_LOOP_2_mux_3_nl <= MUX_s_1_2_2(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd,
      (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(39)), and_dcpl_641);
  LINEAR_FORWARD_NO_MUL_LOOP_2_mux_4_nl <= MUX_v_39_2_2(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1,
      (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(38 DOWNTO 0)), and_dcpl_641);
  z_out_3 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(SIGNED'( CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(STD_LOGIC_VECTOR'(
      "10") & and_dcpl_641 & '1' & (NOT and_dcpl_641) & STD_LOGIC_VECTOR'( "001")
      & and_dcpl_641 & STD_LOGIC_VECTOR'( "10") & (NOT and_dcpl_641) & STD_LOGIC_VECTOR'(
      "01") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT and_dcpl_641, 1),2)) &
      '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(and_dcpl_641, 1),2)) & '1'),
      20), 21) * SIGNED(LINEAR_FORWARD_NO_MUL_LOOP_2_mux_3_nl & LINEAR_FORWARD_NO_MUL_LOOP_2_mux_4_nl)),
      60));
  operator_40_24_true_AC_TRN_AC_WRAP_or_5_nl <= (operator_40_24_true_AC_TRN_AC_WRAP_acc_66_itm(1))
      OR and_dcpl_654 OR and_dcpl_658;
  operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_mux_3_nl
      <= MUX_s_1_2_2((operator_40_24_true_AC_TRN_AC_WRAP_acc_66_itm(0)), (z_out_19(0)),
      operator_40_24_true_AC_TRN_AC_WRAP_or_2_cse_1);
  operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_mux_4_nl
      <= MUX_s_1_2_2((NOT (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32))), (z_out_19(2)), operator_40_24_true_AC_TRN_AC_WRAP_or_2_cse_1);
  operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_mux_5_nl
      <= MUX_s_1_2_2((NOT (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(8))), (NOT (z_out_19(1))),
      operator_40_24_true_AC_TRN_AC_WRAP_or_2_cse_1);
  acc_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'(
      operator_40_24_true_AC_TRN_AC_WRAP_or_5_nl & operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_mux_3_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_mux_4_nl),
      3), 4) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'( operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_mux_5_nl
      & '1'), 2), 4), 4));
  z_out_4 <= acc_nl(3 DOWNTO 1);
  operator_40_24_true_AC_TRN_AC_WRAP_mux_16_nl <= MUX_s_1_2_2((operator_40_24_true_AC_TRN_AC_WRAP_acc_3_psp_sva_1(0)),
      (operator_40_24_true_AC_TRN_AC_WRAP_2_acc_3_psp_sva_1(0)), and_dcpl_669);
  operator_40_24_true_AC_TRN_AC_WRAP_mux_17_nl <= MUX_s_1_2_2((NOT (operator_40_24_true_AC_TRN_AC_WRAP_acc_3_psp_sva_1(2))),
      (NOT (operator_40_24_true_AC_TRN_AC_WRAP_2_acc_3_psp_sva_1(2))), and_dcpl_669);
  operator_40_24_true_AC_TRN_AC_WRAP_mux_18_nl <= MUX_s_1_2_2((NOT (operator_40_24_true_AC_TRN_AC_WRAP_acc_3_psp_sva_1(1))),
      (NOT (operator_40_24_true_AC_TRN_AC_WRAP_2_acc_3_psp_sva_1(1))), and_dcpl_669);
  acc_1_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED'( '1' & operator_40_24_true_AC_TRN_AC_WRAP_mux_16_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_mux_17_nl) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'(
      operator_40_24_true_AC_TRN_AC_WRAP_mux_18_nl & '1'), 2), 3), 3));
  z_out_5_1_0 <= acc_1_nl(2 DOWNTO 1);
  compute_sqrt_for_mux1h_4_nl <= MUX1HOT_v_3_5_2(STD_LOGIC_VECTOR'( "101"), STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(28),
      1),3)), APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0, (z_out_38(3 DOWNTO 1)),
      (z_out_37(3 DOWNTO 1)), STD_LOGIC_VECTOR'( and_dcpl_676 & and_dcpl_683 & and_dcpl_689
      & compute_sqrt_for_or_2_cse & and_dcpl_695));
  compute_sqrt_for_mux1h_5_nl <= MUX1HOT_s_1_3_2((attention_5_1_384_384_8_48_attn_weights_rsci_q_d(28)),
      (z_out_38(0)), (z_out_37(0)), STD_LOGIC_VECTOR'( and_dcpl_683 & compute_sqrt_for_or_2_cse
      & and_dcpl_695));
  compute_sqrt_for_or_7_nl <= (compute_sqrt_for_mux1h_5_nl AND (NOT and_dcpl_689))
      OR and_dcpl_676;
  compute_sqrt_for_and_3_nl <= (reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1(1)) AND (NOT(and_dcpl_676
      OR and_dcpl_683 OR and_dcpl_694 OR and_dcpl_695 OR and_dcpl_699));
  compute_sqrt_for_or_8_nl <= and_dcpl_689 OR and_dcpl_694 OR and_dcpl_695;
  compute_sqrt_for_mux1h_6_nl <= MUX1HOT_v_3_4_2((z_out_11_4_0(3 DOWNTO 1)), STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(27),
      1),3)), APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0, GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0,
      STD_LOGIC_VECTOR'( and_dcpl_676 & and_dcpl_683 & compute_sqrt_for_or_8_nl &
      and_dcpl_699));
  acc_2_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(compute_sqrt_for_mux1h_4_nl
      & compute_sqrt_for_or_7_nl & compute_sqrt_for_and_3_nl), 5), 6) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(compute_sqrt_for_mux1h_6_nl
      & '1'), 4), 6), 6));
  z_out_6 <= acc_2_nl(5 DOWNTO 1);
  SF_LOOP_3_mux1h_13_nl <= MUX1HOT_v_4_3_2(STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(36),
      1),4)), STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(17),
      1),4)), z_out_37, STD_LOGIC_VECTOR'( and_dcpl_707 & and_dcpl_712 & and_dcpl_718));
  SF_LOOP_3_mux1h_14_nl <= MUX1HOT_v_3_3_2(STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(35),
      1),3)), STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(16),
      1),3)), GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0, STD_LOGIC_VECTOR'( and_dcpl_707
      & and_dcpl_712 & and_dcpl_718));
  z_out_7 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_mux1h_13_nl),
      5) + CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_mux1h_14_nl), 5), 5));
  and_1493_nl <= and_1019_cse AND and_dcpl_125 AND and_dcpl_7;
  APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_mux_2_nl <= MUX_v_3_2_2((z_out_31(3
      DOWNTO 1)), (z_out_35(3 DOWNTO 1)), and_1493_nl);
  nor_653_nl <= NOT((fsm_output(3)) OR ((fsm_output(6)) XOR (fsm_output(4))));
  mux_1016_nl <= MUX_s_1_2_2(nor_653_nl, nor_573_cse, fsm_output(2));
  mux_1014_nl <= MUX_s_1_2_2(mux_1008_cse, mux_1016_nl, fsm_output(0));
  APPLY_ROTARY_POS_EMB_LOOP_6_or_7_nl <= and_1342_cse OR (mux_1014_nl AND and_dcpl_26
      AND (fsm_output(5)) AND (fsm_output(1))) OR (and_1019_cse AND and_584_cse AND
      and_dcpl_7);
  APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_mux_3_nl <= MUX_v_3_2_2(APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0,
      GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0, APPLY_ROTARY_POS_EMB_LOOP_6_or_7_nl);
  z_out_8 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_mux_2_nl),
      4) + CONV_UNSIGNED(UNSIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_mux_3_nl),
      4), 4));
  acc_5_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'(
      (z_out_19(3)) & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(8)) & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(11))),
      3), 4) + CONV_UNSIGNED(CONV_SIGNED(SIGNED'( '1' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(10))
      & '1'), 3), 4), 4));
  z_out_9 <= acc_5_nl(3 DOWNTO 1);
  acc_6_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(14))
      & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(11 DOWNTO 9)) & (z_out_19(2))), 5), 7) +
      CONV_UNSIGNED(CONV_SIGNED(SIGNED((z_out_19(5 DOWNTO 4)) & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39),
      1),2)) & '1'), 5), 7), 7));
  z_out_10 <= acc_6_nl(6 DOWNTO 1);
  z_out_11_4_0 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt),
      4), 5) + UNSIGNED'( "00001"), 5));
  or_1239_tmp <= (((CONV_SL_1_1(LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_slc_LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_conc_1_1_1_0_svs=STD_LOGIC_VECTOR'("01")))
      OR LINEAR_FORWARD_NO_MUL_LOOP_5_2_LINEAR_FORWARD_NO_MUL_LOOP_5_2_and_1_cse_1)
      AND and_dcpl_788) OR (LINEAR_FORWARD_NO_MUL_LOOP_5_or_itm AND and_dcpl_795)
      OR (CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm AND and_dcpl_791);
  and_1525_nl <= (fsm_output(4)) AND (NOT (fsm_output(7))) AND (NOT (fsm_output(8)))
      AND (fsm_output(6)) AND (fsm_output(3)) AND nor_226_cse AND CONV_SL_1_1(fsm_output(1
      DOWNTO 0)=STD_LOGIC_VECTOR'("10"));
  LINEAR_FORWARD_NO_MUL_LOOP_5_2_mux1h_1_tmp <= MUX1HOT_s_1_3_2(LINEAR_FORWARD_NO_MUL_LOOP_5_2_LINEAR_FORWARD_NO_MUL_LOOP_5_2_and_1_cse_1,
      LINEAR_FORWARD_NO_MUL_LOOP_5_1_LINEAR_FORWARD_NO_MUL_LOOP_5_1_and_3_cse, CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm,
      STD_LOGIC_VECTOR'( and_1525_nl & (fsm_output(0)) & (NOT (fsm_output(1)))));
  operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_mux1h_2_nl <= MUX1HOT_v_24_4_2((attention_5_1_384_384_8_48_v_proj_re_rsci_q_d(39
      DOWNTO 16)), (INIT_2D_MEM_LOOP_2_1_asn_psp(39 DOWNTO 16)), (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39
      DOWNTO 16)), (output_rsci_q_d(39 DOWNTO 16)), STD_LOGIC_VECTOR'( and_dcpl_788
      & and_dcpl_791 & and_dcpl_795 & and_dcpl_800));
  LINEAR_FORWARD_NO_MUL_LOOP_5_3_else_if_acc_3_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(
      -SIGNED(attention_5_1_384_384_8_48_quantized_final_output_rsci_q_d), 8));
  operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_and_2_nl <= LINEAR_FORWARD_NO_MUL_LOOP_5_1_LINEAR_FORWARD_NO_MUL_LOOP_5_1_and_3_cse
      AND and_dcpl_800;
  operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_mux_1_nl <= MUX_v_8_2_2(attention_5_1_384_384_8_48_quantized_final_output_rsci_q_d,
      STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(LINEAR_FORWARD_NO_MUL_LOOP_5_3_else_if_acc_3_nl),
      8)), operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_and_2_nl);
  operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_or_1_nl <= and_dcpl_788 OR and_dcpl_791
      OR and_dcpl_795;
  operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_or_1_nl
      <= MUX_v_8_2_2(operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_mux_1_nl, STD_LOGIC_VECTOR'("11111111"),
      operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_or_1_nl);
  LINEAR_FORWARD_NO_MUL_LOOP_5_2_else_if_acc_3_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(
      -SIGNED(attention_5_1_384_384_8_48_quantized_hidden_states_rsci_q_d), 8));
  and_1526_nl <= (NOT LINEAR_FORWARD_NO_MUL_LOOP_5_2_mux1h_1_tmp) AND or_1239_tmp;
  and_1527_nl <= LINEAR_FORWARD_NO_MUL_LOOP_5_2_mux1h_1_tmp AND or_1239_tmp;
  mux1h_nl <= MUX1HOT_v_8_3_2(operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_or_1_nl,
      attention_5_1_384_384_8_48_quantized_hidden_states_rsci_q_d, STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(LINEAR_FORWARD_NO_MUL_LOOP_5_2_else_if_acc_3_nl),
      8)), STD_LOGIC_VECTOR'( (NOT or_1239_tmp) & and_1526_nl & and_1527_nl));
  nor_654_nl <= NOT(((CONV_SL_1_1(LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_slc_LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_conc_1_1_1_0_svs/=STD_LOGIC_VECTOR'("01")))
      AND (NOT LINEAR_FORWARD_NO_MUL_LOOP_5_2_LINEAR_FORWARD_NO_MUL_LOOP_5_2_and_1_cse_1)
      AND and_dcpl_788) OR ((NOT LINEAR_FORWARD_NO_MUL_LOOP_5_or_itm) AND and_dcpl_795)
      OR ((NOT CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm) AND and_dcpl_791)
      OR ((NOT LINEAR_FORWARD_NO_MUL_LOOP_5_1_or_cse) AND and_dcpl_800));
  and_1497_nl <= MUX_v_8_2_2(STD_LOGIC_VECTOR'("00000000"), mux1h_nl, nor_654_nl);
  z_out_12_23_0 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_mux1h_2_nl)
      + CONV_UNSIGNED(SIGNED(and_1497_nl), 24), 24));
  INIT_2D_MEM_LOOP_2_2_or_5_nl <= mux_973_cse OR (fsm_output(7));
  z_out_13 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(INIT_2D_MEM_LOOP_2_2_acc_itm)
      + CONV_UNSIGNED(CONV_SIGNED(SIGNED'( INIT_2D_MEM_LOOP_2_2_or_5_nl & '1'), 2),
      9), 9));
  or_1242_nl <= (fsm_output(5)) OR (fsm_output(6)) OR (NOT (fsm_output(8)));
  mux_1019_nl <= MUX_s_1_2_2(or_544_cse, or_577_cse, fsm_output(5));
  mux_1018_nl <= MUX_s_1_2_2(or_1242_nl, mux_1019_nl, fsm_output(0));
  RMS_NORM_LOOP_2_or_3_nl <= and_dcpl_821 OR ((NOT(mux_1018_nl OR (fsm_output(7))))
      AND nor_cse AND nor_411_cse);
  RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_mux_1_nl <= MUX_v_9_2_2(RMS_NORM_LOOP_2_2_dfr_sva_8_0,
      reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1,
      RMS_NORM_LOOP_2_or_3_nl);
  z_out_14 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_mux_1_nl)
      + CONV_UNSIGNED(CONV_SIGNED(SIGNED'( and_dcpl_821 & '1'), 2), 9), 9));
  z_out_15 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_17_itm_8_0) +
      CONV_UNSIGNED(CONV_SIGNED(SIGNED'( (NOT not_tmp_774) & '1'), 2), 9), 9));
  RMS_NORM_LOOP_2_2_mux_6_nl <= MUX_s_1_2_2((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39)),
      reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd, and_dcpl_858);
  RMS_NORM_LOOP_2_2_mux_7_nl <= MUX_v_39_2_2((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38 DOWNTO
      0)), reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1, and_dcpl_858);
  RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_and_2_nl <= MUX_v_40_2_2(STD_LOGIC_VECTOR'("0000000000000000000000000000000000000000"),
      (RMS_NORM_LOOP_2_2_mul_1_itm(52 DOWNTO 13)), and_dcpl_858);
  RMS_NORM_LOOP_2_2_mux_8_nl <= MUX_s_1_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_3,
      (RMS_NORM_LOOP_2_2_mul_1_itm(12)), and_dcpl_858);
  RMS_NORM_LOOP_2_2_mux_9_nl <= MUX_v_3_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_4,
      (RMS_NORM_LOOP_2_2_mul_1_itm(11 DOWNTO 9)), and_dcpl_858);
  RMS_NORM_LOOP_2_2_mux_10_nl <= MUX_v_9_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_5,
      (RMS_NORM_LOOP_2_2_mul_1_itm(8 DOWNTO 0)), and_dcpl_858);
  z_out_17 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(SIGNED'( SIGNED(RMS_NORM_LOOP_2_2_mux_6_nl
      & RMS_NORM_LOOP_2_2_mux_7_nl) * SIGNED(RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_and_2_nl
      & RMS_NORM_LOOP_2_2_mux_8_nl & RMS_NORM_LOOP_2_2_mux_9_nl & RMS_NORM_LOOP_2_2_mux_10_nl)),
      72));
  RMS_NORM_LOOP_1_1_mux_36_nl <= MUX_s_1_2_2((for_for_strm_in_tmp_sva_31_2(29)),
      reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd, and_dcpl_874);
  RMS_NORM_LOOP_1_1_mux_37_nl <= MUX_v_39_2_2(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(for_for_strm_in_tmp_sva_31_2),39)),
      reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1, and_dcpl_874);
  RMS_NORM_LOOP_1_1_mux_38_nl <= MUX_v_52_2_2(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(for_for_strm_in_tmp_sva_31_2),52)),
      RMS_NORM_LOOP_2_mul_1_itm, and_dcpl_874);
  mul_5_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(SIGNED'( SIGNED(RMS_NORM_LOOP_1_1_mux_36_nl
      & RMS_NORM_LOOP_1_1_mux_37_nl) * SIGNED(RMS_NORM_LOOP_1_1_mux_38_nl)), 68));
  z_out_18_67_16 <= mul_5_nl(67 DOWNTO 16);
  z_out_19 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(reg_operator_40_24_true_AC_TRN_AC_WRAP_acc_20_cse)
      + UNSIGNED(STD_LOGIC_VECTOR'( "10111") & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(7))),
      6));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_1_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(operator_80_48_true_AC_TRN_AC_WRAP_operator_80_48_true_AC_TRN_AC_WRAP_slc_SOFTMAX_LOOP_4_sqr_56_1_itm_slc
      & (RMS_NORM_LOOP_2_mul_1_itm(51 DOWNTO 33))) + UNSIGNED'( "000000000000000000000001"),
      24));
  RMS_NORM_LOOP_1_1_mux1h_5_nl <= MUX1HOT_v_24_3_2((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39
      DOWNTO 16)), (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(39 DOWNTO 16)),
      STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_1_nl),
      24)), STD_LOGIC_VECTOR'( RMS_NORM_LOOP_1_1_or_ssc & and_dcpl_903 & and_dcpl_906));
  RMS_NORM_LOOP_1_1_mux1h_6_nl <= MUX1HOT_v_16_3_2((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(15
      DOWNTO 0)), (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(15 DOWNTO 0)),
      (RMS_NORM_LOOP_2_mul_1_itm(32 DOWNTO 17)), STD_LOGIC_VECTOR'( RMS_NORM_LOOP_1_1_or_ssc
      & and_dcpl_903 & and_dcpl_906));
  RMS_NORM_LOOP_1_1_or_3_nl <= (NOT(and_dcpl_893 OR and_dcpl_896 OR and_dcpl_906
      OR and_dcpl_913 OR and_dcpl_916)) OR and_dcpl_903;
  RMS_NORM_LOOP_1_1_mux1h_7_nl <= MUX1HOT_s_1_4_2((RMS_NORM_LOOP_1_1_slc_RMS_NORM_LOOP_1_1_RMS_NORM_LOOP_1_1_mul_55_16_itm(39)),
      (reg_attention_round_a_cse_slc(3)), (NOT (INIT_2D_MEM_LOOP_2_1_asn_psp(39))),
      reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd, STD_LOGIC_VECTOR'( and_dcpl_893 & RMS_NORM_LOOP_1_1_or_1_itm
      & and_dcpl_903 & and_dcpl_906));
  RMS_NORM_LOOP_1_1_mux1h_8_nl <= MUX1HOT_v_3_4_2((RMS_NORM_LOOP_1_1_slc_RMS_NORM_LOOP_1_1_RMS_NORM_LOOP_1_1_mul_55_16_itm(38
      DOWNTO 36)), (reg_attention_round_a_cse_slc(2 DOWNTO 0)), (NOT (INIT_2D_MEM_LOOP_2_1_asn_psp(38
      DOWNTO 36))), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(38 DOWNTO 36)), STD_LOGIC_VECTOR'(
      and_dcpl_893 & RMS_NORM_LOOP_1_1_or_1_itm & and_dcpl_903 & and_dcpl_906));
  RMS_NORM_LOOP_1_1_mux1h_9_nl <= MUX1HOT_v_36_4_2((RMS_NORM_LOOP_1_1_slc_RMS_NORM_LOOP_1_1_RMS_NORM_LOOP_1_1_mul_55_16_itm(35
      DOWNTO 0)), (RMS_NORM_LOOP_2_mul_1_itm(51 DOWNTO 16)), (NOT (INIT_2D_MEM_LOOP_2_1_asn_psp(35
      DOWNTO 0))), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(35 DOWNTO 0)), STD_LOGIC_VECTOR'(
      and_dcpl_893 & RMS_NORM_LOOP_1_1_or_1_itm & and_dcpl_903 & and_dcpl_906));
  acc_13_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(RMS_NORM_LOOP_1_1_mux1h_5_nl
      & RMS_NORM_LOOP_1_1_mux1h_6_nl & RMS_NORM_LOOP_1_1_or_3_nl) + UNSIGNED(RMS_NORM_LOOP_1_1_mux1h_7_nl
      & RMS_NORM_LOOP_1_1_mux1h_8_nl & RMS_NORM_LOOP_1_1_mux1h_9_nl & '1'), 41));
  z_out_20 <= acc_13_nl(40 DOWNTO 1);
  SF_LOOP_3_mux_22_nl <= MUX_v_2_2_2((reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(21 DOWNTO
      20)), (SF_LOOP_3_acc_5_psp_sva(19 DOWNTO 18)), and_dcpl_930);
  SF_LOOP_3_mux_23_nl <= MUX_v_4_2_2(STD_LOGIC_VECTOR'( "0110"), STD_LOGIC_VECTOR'(
      "1001"), and_dcpl_930);
  z_out_21 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED'( UNSIGNED(SF_LOOP_3_mux_22_nl)
      * UNSIGNED(STD_LOGIC_VECTOR'( "1000") & SF_LOOP_3_mux_23_nl & STD_LOGIC_VECTOR'(
      "001") & and_dcpl_930 & '0' & (NOT and_dcpl_930) & STD_LOGIC_VECTOR'( "01"))),
      17));
  SF_LOOP_3_mux_24_nl <= MUX_v_2_2_2((reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(26 DOWNTO
      25)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(13 DOWNTO 12)), and_dcpl_944);
  SF_LOOP_3_mux_25_nl <= MUX_v_3_2_2(STD_LOGIC_VECTOR'( "101"), STD_LOGIC_VECTOR'(
      "010"), and_dcpl_944);
  z_out_22 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED'( UNSIGNED(SF_LOOP_3_mux_24_nl)
      * UNSIGNED((NOT and_dcpl_944) & STD_LOGIC_VECTOR'( "00") & (NOT and_dcpl_944)
      & STD_LOGIC_VECTOR'( "00") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT and_dcpl_944,
      1),4)) & STD_LOGIC_VECTOR'( "00") & (NOT and_dcpl_944) & STD_LOGIC_VECTOR'(
      "10") & SF_LOOP_3_mux_25_nl & '0' & and_dcpl_944 & '1' & and_dcpl_944 & '1')),
      24));
  SF_LOOP_3_mux_26_nl <= MUX_v_2_2_2((reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(24 DOWNTO
      23)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(13 DOWNTO 12)), and_dcpl_958);
  z_out_23 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED'( UNSIGNED(SF_LOOP_3_mux_26_nl)
      * UNSIGNED(STD_LOGIC_VECTOR'( "101110") & (NOT and_dcpl_958) & STD_LOGIC_VECTOR'(
      "00") & (NOT and_dcpl_958) & STD_LOGIC_VECTOR'( "011") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(and_dcpl_958,
      1),2)) & '1')), 18));
  not_2463_nl <= NOT and_1253_cse;
  APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_9_nl <= MUX_v_8_2_2(STD_LOGIC_VECTOR'("00000000"),
      reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd,
      not_2463_nl);
  not_2464_nl <= NOT and_1253_cse;
  APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_10_nl <= MUX_v_7_2_2(STD_LOGIC_VECTOR'("0000000"),
      (reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1(8
      DOWNTO 2)), not_2464_nl);
  APPLY_ROTARY_POS_EMB_LOOP_6_mux_33_nl <= MUX_v_2_2_2((reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1(1
      DOWNTO 0)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(34 DOWNTO 33)), and_1253_cse);
  APPLY_ROTARY_POS_EMB_LOOP_6_mux_34_nl <= MUX_v_40_2_2(INIT_2D_MEM_LOOP_2_1_asn_psp,
      STD_LOGIC_VECTOR'( "0000000001001001111001101010010011010111"), and_1253_cse);
  z_out_25 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(SIGNED'( SIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_9_nl
      & APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_10_nl & APPLY_ROTARY_POS_EMB_LOOP_6_mux_33_nl)
      * SIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_mux_34_nl)), 56));
  APPLY_ROTARY_POS_EMB_LOOP_6_mux_35_nl <= MUX_v_4_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_2,
      STD_LOGIC_VECTOR'( "1101"), and_1280_cse);
  not_2465_nl <= NOT and_1283_cse;
  APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_11_nl <= MUX_v_4_2_2(STD_LOGIC_VECTOR'("0000"),
      APPLY_ROTARY_POS_EMB_LOOP_6_mux_35_nl, not_2465_nl);
  APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_12_nl <= reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_3
      AND APPLY_ROTARY_POS_EMB_LOOP_6_nor_cse;
  APPLY_ROTARY_POS_EMB_LOOP_6_mux_36_nl <= MUX_v_3_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_4,
      STD_LOGIC_VECTOR'( "010"), and_1280_cse);
  not_2466_nl <= NOT and_1283_cse;
  APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_13_nl <= MUX_v_3_2_2(STD_LOGIC_VECTOR'("000"),
      APPLY_ROTARY_POS_EMB_LOOP_6_mux_36_nl, not_2466_nl);
  APPLY_ROTARY_POS_EMB_LOOP_6_mux_37_nl <= MUX_v_7_2_2((reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_5(8
      DOWNTO 2)), STD_LOGIC_VECTOR'( "0101010"), and_1280_cse);
  not_2467_nl <= NOT and_1283_cse;
  APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_14_nl <= MUX_v_7_2_2(STD_LOGIC_VECTOR'("0000000"),
      APPLY_ROTARY_POS_EMB_LOOP_6_mux_37_nl, not_2467_nl);
  APPLY_ROTARY_POS_EMB_LOOP_6_mux_38_nl <= MUX_v_2_2_2((reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_5(1
      DOWNTO 0)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(24 DOWNTO 23)), and_1283_cse);
  APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_or_3_nl <= MUX_v_2_2_2(APPLY_ROTARY_POS_EMB_LOOP_6_mux_38_nl,
      STD_LOGIC_VECTOR'("11"), and_1280_cse);
  APPLY_ROTARY_POS_EMB_LOOP_6_mux_39_nl <= MUX_v_37_2_2((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39
      DOWNTO 3)), STD_LOGIC_VECTOR'( "0000000000000000000100100111100110101"), and_1283_cse);
  not_2468_nl <= NOT and_1280_cse;
  APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_15_nl <= MUX_v_37_2_2(STD_LOGIC_VECTOR'("0000000000000000000000000000000000000"),
      APPLY_ROTARY_POS_EMB_LOOP_6_mux_39_nl, not_2468_nl);
  APPLY_ROTARY_POS_EMB_LOOP_6_mux1h_20_nl <= MUX1HOT_v_3_3_2((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(2
      DOWNTO 0)), (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(32 DOWNTO 30)),
      STD_LOGIC_VECTOR'( "001"), STD_LOGIC_VECTOR'( and_1275_cse & and_1280_cse &
      and_1283_cse));
  z_out_26 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(SIGNED'( SIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_11_nl
      & APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_12_nl & APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_13_nl
      & APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_14_nl & APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_or_3_nl)
      * SIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_15_nl
      & APPLY_ROTARY_POS_EMB_LOOP_6_mux1h_20_nl)), 56));
  SF_LOOP_3_mux_27_nl <= MUX_v_8_2_2(STD_LOGIC_VECTOR'( "11101010"), reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd,
      and_1275_cse);
  not_2469_nl <= NOT and_1283_cse;
  SF_LOOP_3_SF_LOOP_3_and_4_nl <= MUX_v_8_2_2(STD_LOGIC_VECTOR'("00000000"), SF_LOOP_3_mux_27_nl,
      not_2469_nl);
  SF_LOOP_3_mux_28_nl <= MUX_v_7_2_2(STD_LOGIC_VECTOR'( "0000101"), (reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1(8
      DOWNTO 2)), and_1275_cse);
  not_2470_nl <= NOT and_1283_cse;
  SF_LOOP_3_SF_LOOP_3_and_5_nl <= MUX_v_7_2_2(STD_LOGIC_VECTOR'("0000000"), SF_LOOP_3_mux_28_nl,
      not_2470_nl);
  SF_LOOP_3_mux1h_15_nl <= MUX1HOT_v_2_3_2(STD_LOGIC_VECTOR'( "01"), (reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1(1
      DOWNTO 0)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(21 DOWNTO 20)), STD_LOGIC_VECTOR'(
      and_1280_cse & and_1275_cse & and_1283_cse));
  SF_LOOP_3_SF_LOOP_3_and_6_nl <= reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd AND APPLY_ROTARY_POS_EMB_LOOP_6_nor_cse;
  SF_LOOP_3_mux_29_nl <= MUX_v_35_2_2((reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(38
      DOWNTO 4)), STD_LOGIC_VECTOR'( "00000000000000000000010010011110011"), and_1283_cse);
  not_2471_nl <= NOT and_1280_cse;
  SF_LOOP_3_SF_LOOP_3_and_7_nl <= MUX_v_35_2_2(STD_LOGIC_VECTOR'("00000000000000000000000000000000000"),
      SF_LOOP_3_mux_29_nl, not_2471_nl);
  SF_LOOP_3_mux1h_16_nl <= MUX1HOT_v_4_3_2((attention_5_1_384_384_8_48_attn_weights_rsci_q_d(11
      DOWNTO 8)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(3 DOWNTO 0)), STD_LOGIC_VECTOR'(
      "0101"), STD_LOGIC_VECTOR'( and_1280_cse & and_1275_cse & and_1283_cse));
  z_out_27 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(SIGNED'( SIGNED(SF_LOOP_3_SF_LOOP_3_and_4_nl
      & SF_LOOP_3_SF_LOOP_3_and_5_nl & SF_LOOP_3_mux1h_15_nl) * SIGNED(SF_LOOP_3_SF_LOOP_3_and_6_nl
      & SF_LOOP_3_SF_LOOP_3_and_7_nl & SF_LOOP_3_mux1h_16_nl)), 56));
  nor_656_nl <= NOT(mux_973_cse OR (fsm_output(7)));
  nor_657_nl <= NOT((NOT (fsm_output(2))) OR (fsm_output(5)) OR (NOT((fsm_output(7))
      AND (fsm_output(4)))));
  mux_1020_nl <= MUX_s_1_2_2(nor_470_cse, nor_657_nl, fsm_output(0));
  and_1507_nl <= mux_1020_nl AND (NOT (fsm_output(8))) AND (fsm_output(6)) AND nor_419_cse;
  and_1509_nl <= CONV_SL_1_1(fsm_output(3 DOWNTO 2)=STD_LOGIC_VECTOR'("11")) AND
      mux_988_cse;
  nor_658_nl <= NOT((NOT (fsm_output(4))) OR (fsm_output(6)));
  mux_1024_nl <= MUX_s_1_2_2(nor_658_nl, nor_tmp_79, fsm_output(3));
  mux_1023_nl <= MUX_s_1_2_2(mux_1024_nl, nor_571_cse, fsm_output(2));
  mux_1022_nl <= MUX_s_1_2_2(and_1509_nl, mux_1023_nl, fsm_output(1));
  nor_659_nl <= NOT((NOT (fsm_output(1))) OR (fsm_output(3)) OR (fsm_output(6)) OR
      (fsm_output(4)));
  mux_1021_nl <= MUX_s_1_2_2(mux_1022_nl, nor_659_nl, fsm_output(0));
  and_1508_nl <= mux_1021_nl AND (fsm_output(7)) AND (NOT (fsm_output(8))) AND (fsm_output(5));
  for_for_mux1h_7_nl <= MUX1HOT_v_2_3_2((z_out_13(8 DOWNTO 7)), (LINEAR_FORWARD_NO_MUL_LOOP_3_ko_2_0_sva_2(2
      DOWNTO 1)), (RESHAPE_2D_TO_3D_LOOP_3_1_k_5_0_sva_2(5 DOWNTO 4)), STD_LOGIC_VECTOR'(
      nor_656_nl & and_1507_nl & and_1508_nl));
  for_for_acc_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED('1' & for_for_mux1h_7_nl)
      + UNSIGNED'( "001"), 3));
  z_out_28_2 <= for_for_acc_nl(2);
  QUANTIZE_ACTIVATION_LOOP_3_mux_3_nl <= MUX_v_2_2_2((QUANTIZE_ACTIVATION_LOOP_3_jo_2_0_sva_3(2
      DOWNTO 1)), (z_out_15(8 DOWNTO 7)), not_tmp_774);
  QUANTIZE_ACTIVATION_LOOP_3_acc_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED('1'
      & QUANTIZE_ACTIVATION_LOOP_3_mux_3_nl) + UNSIGNED'( "001"), 3));
  z_out_29_2 <= QUANTIZE_ACTIVATION_LOOP_3_acc_nl(2);
  or_1243_nl <= CONV_SL_1_1(fsm_output(6 DOWNTO 0)/=STD_LOGIC_VECTOR'("1100000"));
  or_1244_nl <= (fsm_output(0)) OR (NOT (fsm_output(3))) OR (NOT (fsm_output(5)))
      OR (fsm_output(6));
  mux_1027_nl <= MUX_s_1_2_2(or_tmp_962, or_1244_nl, fsm_output(4));
  nand_268_nl <= NOT((fsm_output(1)) AND (NOT mux_1027_nl));
  or_1246_nl <= (NOT (fsm_output(3))) OR (fsm_output(5)) OR (NOT (fsm_output(6)));
  or_1247_nl <= (fsm_output(3)) OR (NOT (fsm_output(5))) OR (fsm_output(6));
  mux_1029_nl <= MUX_s_1_2_2(or_1246_nl, or_1247_nl, fsm_output(0));
  mux_1028_nl <= MUX_s_1_2_2(or_tmp_962, mux_1029_nl, fsm_output(4));
  or_1245_nl <= (fsm_output(1)) OR mux_1028_nl;
  mux_1026_nl <= MUX_s_1_2_2(nand_268_nl, or_1245_nl, fsm_output(2));
  mux_1025_nl <= MUX_s_1_2_2(or_1243_nl, mux_1026_nl, fsm_output(7));
  nor_660_nl <= NOT(mux_1025_nl OR (fsm_output(8)));
  nor_661_nl <= NOT((fsm_output(2)) OR (NOT (fsm_output(4))));
  mux_1031_nl <= MUX_s_1_2_2((NOT (fsm_output(4))), (fsm_output(4)), fsm_output(2));
  mux_1030_nl <= MUX_s_1_2_2(nor_661_nl, mux_1031_nl, fsm_output(0));
  and_1510_nl <= mux_1030_nl AND CONV_SL_1_1(fsm_output(8 DOWNTO 7)=STD_LOGIC_VECTOR'("01"))
      AND and_dcpl_889 AND (fsm_output(5)) AND (fsm_output(1));
  and_1511_nl <= (NOT (fsm_output(4))) AND (fsm_output(7)) AND (NOT (fsm_output(8)))
      AND and_dcpl_889 AND (fsm_output(5)) AND (fsm_output(2)) AND (fsm_output(1))
      AND (fsm_output(0));
  LINEAR_FORWARD_NO_MUL_LOOP_3_2_mux1h_3_nl <= MUX1HOT_v_2_3_2((LINEAR_FORWARD_NO_MUL_LOOP_3_2_ko_2_0_sva_1_mx0w2(2
      DOWNTO 1)), (RESHAPE_2D_TO_3D_LOOP_3_k_5_0_sva_2(5 DOWNTO 4)), (APPLY_ROTARY_POS_EMB_LOOP_3_k_4_0_sva_2(4
      DOWNTO 3)), STD_LOGIC_VECTOR'( nor_660_nl & and_1510_nl & and_1511_nl));
  LINEAR_FORWARD_NO_MUL_LOOP_3_2_acc_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED('1'
      & LINEAR_FORWARD_NO_MUL_LOOP_3_2_mux1h_3_nl) + UNSIGNED'( "001"), 3));
  z_out_30_2 <= LINEAR_FORWARD_NO_MUL_LOOP_3_2_acc_nl(2);
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_4_nl <= and_dcpl_1051 OR and_1342_cse OR and_dcpl_1072;
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux_1_nl <= MUX_v_3_2_2(APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0,
      GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0, TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_4_nl);
  and_1512_nl <= and_dcpl_1046 AND and_dcpl_889 AND and_584_cse AND and_706_cse;
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_5_nl <= and_dcpl_1051 OR (mux_988_cse AND (fsm_output(7))
      AND (NOT (fsm_output(8))) AND (fsm_output(3)) AND and_584_cse AND nor_413_cse);
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_6_nl <= and_1342_cse OR (and_dcpl_1046 AND (fsm_output(6))
      AND (fsm_output(3)) AND and_dcpl_125 AND nor_413_cse);
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_7_nl <= (and_dcpl_1064 AND and_dcpl_125 AND and_706_cse)
      OR and_dcpl_1072;
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_7_nl <= MUX1HOT_v_2_4_2((TRANSPOSE_LAST_TWO_DIMS_LOOP_3_acc_17_sdt_mx0w5(8
      DOWNTO 7)), (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(5 DOWNTO 4)), reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd,
      (GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva(2 DOWNTO 1)), STD_LOGIC_VECTOR'( and_1512_nl
      & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_5_nl & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_6_nl
      & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_7_nl));
  z_out_31 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(TRANSPOSE_LAST_TWO_DIMS_LOOP_3_TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux_1_nl),
      4) + CONV_UNSIGNED(UNSIGNED(TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_7_nl), 4),
      4));
  and_1516_nl <= and_dcpl_1078 AND and_dcpl_889 AND (fsm_output(5)) AND (NOT (fsm_output(2)))
      AND and_dcpl_117;
  and_1517_nl <= and_dcpl_1078 AND (fsm_output(6)) AND (NOT (fsm_output(3))) AND
      and_584_cse AND CONV_SL_1_1(fsm_output(1 DOWNTO 0)=STD_LOGIC_VECTOR'("01"));
  and_1518_nl <= and_dcpl_1078 AND (NOT (fsm_output(6))) AND (fsm_output(3)) AND
      and_584_cse AND and_dcpl_117;
  CACHE_UPDATE_LOOP_3_1_mux1h_9_nl <= MUX1HOT_v_2_3_2((z_out_7(4 DOWNTO 3)), (z_out_6(4
      DOWNTO 3)), (GEMM_3D_FLOAT_LOOP_4_acc_17_sdt_1(8 DOWNTO 7)), STD_LOGIC_VECTOR'(
      and_1516_nl & and_1517_nl & and_1518_nl));
  z_out_32 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0),
      3), 4) + CONV_UNSIGNED(UNSIGNED(CACHE_UPDATE_LOOP_3_1_mux1h_9_nl), 4), 4));
  z_out_33 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0),
      3), 4) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(z_out_6(4 DOWNTO 3)), 2), 4),
      4));
  and_1519_nl <= CONV_SL_1_1(fsm_output=STD_LOGIC_VECTOR'("011110101"));
  CACHE_UPDATE_LOOP_3_qif_mux_1_nl <= MUX_v_2_2_2(STD_LOGIC_VECTOR'( reg_CACHE_UPDATE_LOOP_3_k_5_0_1_ftd
      & (reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1(1))), (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(5
      DOWNTO 4)), and_1519_nl);
  z_out_34_2_0 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva)
      + CONV_UNSIGNED(UNSIGNED(CACHE_UPDATE_LOOP_3_qif_mux_1_nl), 3), 3));
  and_1520_nl <= and_dcpl_889 AND (fsm_output(5)) AND (NOT (fsm_output(2))) AND (fsm_output(1))
      AND and_dcpl_26 AND xor_6_cse;
  and_1521_nl <= and_dcpl_26 AND (NOT (fsm_output(4))) AND and_dcpl_889 AND (fsm_output(5))
      AND (fsm_output(2)) AND and_706_cse;
  and_1522_nl <= and_1019_cse AND (NOT (fsm_output(5))) AND (fsm_output(2)) AND (NOT
      (fsm_output(1))) AND (fsm_output(0));
  and_1523_nl <= and_1019_cse AND nor_226_cse AND and_706_cse;
  RESHAPE_2D_TO_3D_LOOP_3_mux1h_6_nl <= MUX1HOT_v_2_4_2(STD_LOGIC_VECTOR'( reg_CACHE_UPDATE_LOOP_3_k_5_0_1_ftd
      & (reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1(1))), (APPLY_ROTARY_POS_EMB_LOOP_3_acc_30_psp_sva_1(2
      DOWNTO 1)), (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(2 DOWNTO 1)), (APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0(2
      DOWNTO 1)), STD_LOGIC_VECTOR'( and_1520_nl & and_1521_nl & and_1522_nl & and_1523_nl));
  z_out_35 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0),
      3), 4) + CONV_UNSIGNED(UNSIGNED(RESHAPE_2D_TO_3D_LOOP_3_mux1h_6_nl), 4), 4));
  and_1524_nl <= (fsm_output(4)) AND (fsm_output(7)) AND (NOT (fsm_output(8))) AND
      and_dcpl_889 AND (fsm_output(5)) AND (fsm_output(2)) AND (fsm_output(1)) AND
      (fsm_output(0));
  CACHE_UPDATE_LOOP_3_1_qif_mux_1_nl <= MUX_v_2_2_2((APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(5
      DOWNTO 4)), STD_LOGIC_VECTOR'( reg_CACHE_UPDATE_LOOP_3_k_5_0_1_ftd & (reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1(1))),
      and_1524_nl);
  z_out_36_2_0 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd
      & reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1) + CONV_UNSIGNED(UNSIGNED(CACHE_UPDATE_LOOP_3_1_qif_mux_1_nl),
      3), 3));
  z_out_37 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd
      & reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1), 3), 4) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(z_out_36_2_0(2
      DOWNTO 1)), 2), 4), 4));
  z_out_38 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva),
      3), 4) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(z_out_34_2_0(2 DOWNTO 1)), 2),
      4), 4));
END v8;

-- ------------------------------------------------------------------
--  Design Unit:    dut
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut IS
  PORT(
    clk : IN STD_LOGIC;
    en : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    strm_in_rsc_dat : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
    strm_in_rsc_vld : IN STD_LOGIC;
    strm_in_rsc_rdy : OUT STD_LOGIC;
    strm_out_rsc_dat : OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
    strm_out_rsc_vld : OUT STD_LOGIC;
    strm_out_rsc_rdy : IN STD_LOGIC
  );
END dut;

ARCHITECTURE v8 OF dut IS
  -- Interconnect Declarations
  SIGNAL input_rsci_clken_d : STD_LOGIC;
  SIGNAL input_rsci_d_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL input_rsci_q_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL input_rsci_radr_d : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL input_rsci_wadr_d : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL output_rsci_d_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL output_rsci_q_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL output_rsci_radr_d : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL output_rsci_wadr_d : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_d_d : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_q_d : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_radr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_wadr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_d_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_q_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_radr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_wadr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_d_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_q_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_radr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_wadr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_d_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_q_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_radr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_wadr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_q_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_radr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_wadr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_q_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_radr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_wadr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_q_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_radr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_wadr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_d_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_q_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_radr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_wadr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_d_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_q_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_radr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_wadr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_d_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_q_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_radr_d : STD_LOGIC_VECTOR (11
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_wadr_d : STD_LOGIC_VECTOR (11
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_d_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_q_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_radr_d : STD_LOGIC_VECTOR (11
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_wadr_d : STD_LOGIC_VECTOR (11
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_q_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_radr_d : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_wadr_d : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_d_d : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_q_d : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_radr_d : STD_LOGIC_VECTOR (5
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_wadr_d : STD_LOGIC_VECTOR (5
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_d_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_q_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_radr_d : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_wadr_d : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_d_d : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_q_d : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_radr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_wadr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_d_d : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_q_d : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_radr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_wadr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_d_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_q_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_radr_d : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_wadr_d : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_d_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_q_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_radr_d : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_wadr_d : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL rms_norm_384_div_cmp_a : STD_LOGIC_VECTOR (71 DOWNTO 0);
  SIGNAL rms_norm_384_div_cmp_b : STD_LOGIC_VECTOR (60 DOWNTO 0);
  SIGNAL rms_norm_384_div_cmp_z : STD_LOGIC_VECTOR (71 DOWNTO 0);
  SIGNAL input_rsc_clken : STD_LOGIC;
  SIGNAL input_rsc_q : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL input_rsc_re : STD_LOGIC;
  SIGNAL input_rsc_radr : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL input_rsc_we : STD_LOGIC;
  SIGNAL input_rsc_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL input_rsc_wadr : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL output_rsc_clken : STD_LOGIC;
  SIGNAL output_rsc_q : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL output_rsc_re : STD_LOGIC;
  SIGNAL output_rsc_radr : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL output_rsc_we : STD_LOGIC;
  SIGNAL output_rsc_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL output_rsc_wadr : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsc_clken : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsc_q : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsc_re : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsc_radr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsc_we : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsc_d : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsc_wadr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsc_clken : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsc_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsc_re : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsc_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsc_we : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsc_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsc_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsc_clken : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsc_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsc_re : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsc_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsc_we : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsc_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsc_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsc_clken : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsc_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsc_re : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsc_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsc_we : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsc_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsc_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsc_clken : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsc_q : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsc_re : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsc_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsc_we : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsc_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsc_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsc_clken : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsc_q : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsc_re : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsc_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsc_we : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsc_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsc_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsc_clken : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsc_q : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsc_re : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsc_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsc_we : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsc_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsc_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsc_clken : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsc_q : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsc_re : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsc_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsc_we : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsc_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsc_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsc_clken : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsc_q : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsc_re : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsc_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsc_we : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsc_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsc_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsc_clken : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsc_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsc_re : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsc_radr : STD_LOGIC_VECTOR (11 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsc_we : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsc_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsc_wadr : STD_LOGIC_VECTOR (11 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsc_clken : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsc_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsc_re : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsc_radr : STD_LOGIC_VECTOR (11 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsc_we : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsc_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsc_wadr : STD_LOGIC_VECTOR (11 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsc_clken : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsc_q : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsc_re : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsc_radr : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsc_we : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsc_d : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsc_wadr : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsc_clken : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsc_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsc_re : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsc_radr : STD_LOGIC_VECTOR (5 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsc_we : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsc_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsc_wadr : STD_LOGIC_VECTOR (5 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsc_clken : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsc_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsc_re : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsc_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsc_we : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsc_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsc_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsc_clken : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsc_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsc_re : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsc_radr : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsc_we : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsc_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsc_wadr : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsc_clken : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsc_q : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsc_re : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsc_radr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsc_we : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsc_d : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsc_wadr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsc_clken : STD_LOGIC;
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsc_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsc_re : STD_LOGIC;
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsc_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsc_we : STD_LOGIC;
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsc_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsc_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsc_clken : STD_LOGIC;
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsc_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsc_re : STD_LOGIC;
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsc_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsc_we : STD_LOGIC;
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsc_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsc_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL input_rsci_re_d_iff : STD_LOGIC;
  SIGNAL input_rsci_we_d_iff : STD_LOGIC;
  SIGNAL output_rsci_re_d_iff : STD_LOGIC;
  SIGNAL output_rsci_we_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_re_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_we_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_re_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_we_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_we_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_re_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_we_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_re_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_we_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_re_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_we_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_re_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_we_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_re_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_re_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_we_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_re_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_we_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_re_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_we_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_re_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_we_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_re_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_we_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_re_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_we_d_iff : STD_LOGIC;
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_re_d_iff : STD_LOGIC;
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_we_d_iff : STD_LOGIC;

  SIGNAL rms_norm_384_div_cmp_a_1 : STD_LOGIC_VECTOR (71 DOWNTO 0);
  SIGNAL rms_norm_384_div_cmp_b_1 : STD_LOGIC_VECTOR (60 DOWNTO 0);
  SIGNAL rms_norm_384_div_cmp_z_1 : STD_LOGIC_VECTOR (71 DOWNTO 0);

  SIGNAL input_rsc_comp_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL input_rsc_comp_q : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL input_rsc_comp_radr : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL input_rsc_comp_wadr : STD_LOGIC_VECTOR (8 DOWNTO 0);

  SIGNAL output_rsc_comp_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL output_rsc_comp_q : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL output_rsc_comp_radr : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL output_rsc_comp_wadr : STD_LOGIC_VECTOR (8 DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_d : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_q : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_radr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_wadr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsc_comp_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsc_comp_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsc_comp_radr : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsc_comp_wadr : STD_LOGIC_VECTOR (8
      DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsc_comp_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsc_comp_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsc_comp_radr : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsc_comp_wadr : STD_LOGIC_VECTOR (8
      DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsc_comp_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsc_comp_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsc_comp_radr : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsc_comp_wadr : STD_LOGIC_VECTOR (8
      DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_q_proj_rsc_comp_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsc_comp_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsc_comp_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsc_comp_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);

  SIGNAL attention_5_1_384_384_8_48_k_proj_rsc_comp_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsc_comp_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsc_comp_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsc_comp_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);

  SIGNAL attention_5_1_384_384_8_48_v_proj_rsc_comp_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsc_comp_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsc_comp_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsc_comp_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);

  SIGNAL attention_5_1_384_384_8_48_q_embed_rsc_comp_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsc_comp_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsc_comp_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsc_comp_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);

  SIGNAL attention_5_1_384_384_8_48_k_embed_rsc_comp_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsc_comp_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsc_comp_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsc_comp_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);

  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_d : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_q : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_radr : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_wadr : STD_LOGIC_VECTOR
      (11 DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_d : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_q : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_radr : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_wadr : STD_LOGIC_VECTOR
      (11 DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_q : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_radr : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_wadr : STD_LOGIC_VECTOR
      (11 DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsc_comp_d : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsc_comp_q : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsc_comp_radr : STD_LOGIC_VECTOR
      (5 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsc_comp_wadr : STD_LOGIC_VECTOR
      (5 DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_attn_output_rsc_comp_d : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsc_comp_q : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsc_comp_radr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsc_comp_wadr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_q : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_radr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_wadr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_d : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_q : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_radr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_wadr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);

  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_d : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_q : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_radr : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_wadr : STD_LOGIC_VECTOR (8
      DOWNTO 0);

  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_d : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_q : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_radr : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_wadr : STD_LOGIC_VECTOR (8
      DOWNTO 0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_3_9_40_384_1_384_40_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL input_rsci_q : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL input_rsci_radr : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL input_rsci_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL input_rsci_wadr : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL input_rsci_d_d_1 : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL input_rsci_q_d_1 : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL input_rsci_radr_d_1 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL input_rsci_wadr_d_1 : STD_LOGIC_VECTOR (8 DOWNTO 0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_4_9_40_384_1_384_40_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL output_rsci_q : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL output_rsci_radr : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL output_rsci_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL output_rsci_wadr : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL output_rsci_d_d_1 : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL output_rsci_q_d_1 : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL output_rsci_radr_d_1 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL output_rsci_wadr_d_1 : STD_LOGIC_VECTOR (8 DOWNTO 0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_5_9_8_384_1_384_8_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_q : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_radr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_d : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_wadr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_d_d_1 : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_q_d_1 : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_radr_d_1 : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_wadr_d_1 : STD_LOGIC_VECTOR
      (8 DOWNTO 0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_6_9_40_384_1_384_40_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_d_d_1 : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_q_d_1 : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_radr_d_1 : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_wadr_d_1 : STD_LOGIC_VECTOR (8
      DOWNTO 0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_7_9_40_384_1_384_40_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_d_d_1 : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_q_d_1 : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_radr_d_1 : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_wadr_d_1 : STD_LOGIC_VECTOR (8
      DOWNTO 0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_8_9_40_384_1_384_40_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_d_d_1 : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_q_d_1 : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_radr_d_1 : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_wadr_d_1 : STD_LOGIC_VECTOR (8
      DOWNTO 0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_9_9_40_384_1_384_40_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_q : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_d_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_q_d_1 : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_radr_d_1 : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_wadr_d_1 : STD_LOGIC_VECTOR (8 DOWNTO
      0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_10_9_40_384_1_384_40_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_q : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_d_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_q_d_1 : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_radr_d_1 : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_wadr_d_1 : STD_LOGIC_VECTOR (8 DOWNTO
      0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_11_9_40_384_1_384_40_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_q : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_d_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_q_d_1 : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_radr_d_1 : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_wadr_d_1 : STD_LOGIC_VECTOR (8 DOWNTO
      0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_12_9_40_384_1_384_40_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_d_d_1 : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_q_d_1 : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_radr_d_1 : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_wadr_d_1 : STD_LOGIC_VECTOR (8 DOWNTO
      0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_13_9_40_384_1_384_40_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_d_d_1 : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_q_d_1 : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_radr_d_1 : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_wadr_d_1 : STD_LOGIC_VECTOR (8 DOWNTO
      0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_14_12_40_2304_1_2304_40_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (11 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (11 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_radr : STD_LOGIC_VECTOR (11
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_wadr : STD_LOGIC_VECTOR (11
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_d_d_1 : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_q_d_1 : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_radr_d_1 : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_wadr_d_1 : STD_LOGIC_VECTOR
      (11 DOWNTO 0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_15_12_40_2304_1_2304_40_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (11 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (11 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_radr : STD_LOGIC_VECTOR (11
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_wadr : STD_LOGIC_VECTOR (11
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_d_d_1 : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_q_d_1 : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_radr_d_1 : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_wadr_d_1 : STD_LOGIC_VECTOR
      (11 DOWNTO 0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_16_12_40_2304_1_2304_40_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (11 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (11 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_q : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_radr : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_d : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_wadr : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_d_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_q_d_1 : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_radr_d_1 : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_wadr_d_1 : STD_LOGIC_VECTOR
      (11 DOWNTO 0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_17_6_40_48_1_48_40_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (5 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (5 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (5 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (5 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_radr : STD_LOGIC_VECTOR (5
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_wadr : STD_LOGIC_VECTOR (5
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_d_d_1 : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_q_d_1 : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_radr_d_1 : STD_LOGIC_VECTOR
      (5 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_wadr_d_1 : STD_LOGIC_VECTOR
      (5 DOWNTO 0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_18_9_40_384_1_384_40_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_d_d_1 : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_q_d_1 : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_radr_d_1 : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_wadr_d_1 : STD_LOGIC_VECTOR
      (8 DOWNTO 0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_19_9_40_384_1_384_40_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_q : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_radr : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_d : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_wadr : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_d_d_1 : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_q_d_1 : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_radr_d_1 : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_wadr_d_1 : STD_LOGIC_VECTOR
      (8 DOWNTO 0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_20_9_8_384_1_384_8_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_q : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_radr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_d : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_wadr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_d_d_1 : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_q_d_1 : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_radr_d_1 : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_wadr_d_1 : STD_LOGIC_VECTOR
      (8 DOWNTO 0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_21_9_40_384_1_384_40_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_d_d_1 : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_q_d_1 : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_radr_d_1 : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_wadr_d_1 : STD_LOGIC_VECTOR (8
      DOWNTO 0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_22_9_40_384_1_384_40_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_d_d_1 : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_q_d_1 : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_radr_d_1 : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_wadr_d_1 : STD_LOGIC_VECTOR (8
      DOWNTO 0);

  COMPONENT dut_core
    PORT(
      clk : IN STD_LOGIC;
      en : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      strm_in_rsc_dat : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
      strm_in_rsc_vld : IN STD_LOGIC;
      strm_in_rsc_rdy : OUT STD_LOGIC;
      strm_out_rsc_dat : OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
      strm_out_rsc_vld : OUT STD_LOGIC;
      strm_out_rsc_rdy : IN STD_LOGIC;
      input_rsci_clken_d : OUT STD_LOGIC;
      input_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      input_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      input_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      input_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      output_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      output_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      output_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      output_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      attention_5_1_384_384_8_48_quantized_hidden_states_rsci_d_d : OUT STD_LOGIC_VECTOR
          (7 DOWNTO 0);
      attention_5_1_384_384_8_48_quantized_hidden_states_rsci_q_d : IN STD_LOGIC_VECTOR
          (7 DOWNTO 0);
      attention_5_1_384_384_8_48_quantized_hidden_states_rsci_radr_d : OUT STD_LOGIC_VECTOR
          (8 DOWNTO 0);
      attention_5_1_384_384_8_48_quantized_hidden_states_rsci_wadr_d : OUT STD_LOGIC_VECTOR
          (8 DOWNTO 0);
      attention_5_1_384_384_8_48_q_proj_re_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
          0);
      attention_5_1_384_384_8_48_q_proj_re_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
          0);
      attention_5_1_384_384_8_48_q_proj_re_rsci_radr_d : OUT STD_LOGIC_VECTOR (8
          DOWNTO 0);
      attention_5_1_384_384_8_48_q_proj_re_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8
          DOWNTO 0);
      attention_5_1_384_384_8_48_k_proj_re_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
          0);
      attention_5_1_384_384_8_48_k_proj_re_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
          0);
      attention_5_1_384_384_8_48_k_proj_re_rsci_radr_d : OUT STD_LOGIC_VECTOR (8
          DOWNTO 0);
      attention_5_1_384_384_8_48_k_proj_re_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8
          DOWNTO 0);
      attention_5_1_384_384_8_48_v_proj_re_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
          0);
      attention_5_1_384_384_8_48_v_proj_re_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
          0);
      attention_5_1_384_384_8_48_v_proj_re_rsci_radr_d : OUT STD_LOGIC_VECTOR (8
          DOWNTO 0);
      attention_5_1_384_384_8_48_v_proj_re_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8
          DOWNTO 0);
      attention_5_1_384_384_8_48_q_proj_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
          0);
      attention_5_1_384_384_8_48_q_proj_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
          0);
      attention_5_1_384_384_8_48_q_proj_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
          0);
      attention_5_1_384_384_8_48_k_proj_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
          0);
      attention_5_1_384_384_8_48_k_proj_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
          0);
      attention_5_1_384_384_8_48_k_proj_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
          0);
      attention_5_1_384_384_8_48_v_proj_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
          0);
      attention_5_1_384_384_8_48_v_proj_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
          0);
      attention_5_1_384_384_8_48_v_proj_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
          0);
      attention_5_1_384_384_8_48_q_embed_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
          0);
      attention_5_1_384_384_8_48_q_embed_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
          0);
      attention_5_1_384_384_8_48_q_embed_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
          0);
      attention_5_1_384_384_8_48_q_embed_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
          0);
      attention_5_1_384_384_8_48_k_embed_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
          0);
      attention_5_1_384_384_8_48_k_embed_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
          0);
      attention_5_1_384_384_8_48_k_embed_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
          0);
      attention_5_1_384_384_8_48_k_embed_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
          0);
      attention_5_1_384_384_8_48_k_cache_upd_rsci_d_d : OUT STD_LOGIC_VECTOR (39
          DOWNTO 0);
      attention_5_1_384_384_8_48_k_cache_upd_rsci_radr_d : OUT STD_LOGIC_VECTOR (11
          DOWNTO 0);
      attention_5_1_384_384_8_48_k_cache_upd_rsci_wadr_d : OUT STD_LOGIC_VECTOR (11
          DOWNTO 0);
      attention_5_1_384_384_8_48_v_cache_upd_rsci_d_d : OUT STD_LOGIC_VECTOR (39
          DOWNTO 0);
      attention_5_1_384_384_8_48_v_cache_upd_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
          0);
      attention_5_1_384_384_8_48_v_cache_upd_rsci_radr_d : OUT STD_LOGIC_VECTOR (11
          DOWNTO 0);
      attention_5_1_384_384_8_48_v_cache_upd_rsci_wadr_d : OUT STD_LOGIC_VECTOR (11
          DOWNTO 0);
      attention_5_1_384_384_8_48_k_proj_transposed_rsci_q_d : IN STD_LOGIC_VECTOR
          (39 DOWNTO 0);
      attention_5_1_384_384_8_48_k_proj_transposed_rsci_radr_d : OUT STD_LOGIC_VECTOR
          (11 DOWNTO 0);
      attention_5_1_384_384_8_48_k_proj_transposed_rsci_wadr_d : OUT STD_LOGIC_VECTOR
          (11 DOWNTO 0);
      attention_5_1_384_384_8_48_attn_weights_rsci_d_d : OUT STD_LOGIC_VECTOR (39
          DOWNTO 0);
      attention_5_1_384_384_8_48_attn_weights_rsci_q_d : IN STD_LOGIC_VECTOR (39
          DOWNTO 0);
      attention_5_1_384_384_8_48_attn_weights_rsci_radr_d : OUT STD_LOGIC_VECTOR
          (5 DOWNTO 0);
      attention_5_1_384_384_8_48_attn_weights_rsci_wadr_d : OUT STD_LOGIC_VECTOR
          (5 DOWNTO 0);
      attention_5_1_384_384_8_48_attn_output_rsci_d_d : OUT STD_LOGIC_VECTOR (39
          DOWNTO 0);
      attention_5_1_384_384_8_48_attn_output_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
          0);
      attention_5_1_384_384_8_48_attn_output_rsci_radr_d : OUT STD_LOGIC_VECTOR (8
          DOWNTO 0);
      attention_5_1_384_384_8_48_attn_output_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8
          DOWNTO 0);
      attention_5_1_384_384_8_48_attn_output_2D_rsci_d_d : OUT STD_LOGIC_VECTOR (39
          DOWNTO 0);
      attention_5_1_384_384_8_48_attn_output_2D_rsci_q_d : IN STD_LOGIC_VECTOR (39
          DOWNTO 0);
      attention_5_1_384_384_8_48_attn_output_2D_rsci_radr_d : OUT STD_LOGIC_VECTOR
          (8 DOWNTO 0);
      attention_5_1_384_384_8_48_attn_output_2D_rsci_wadr_d : OUT STD_LOGIC_VECTOR
          (8 DOWNTO 0);
      attention_5_1_384_384_8_48_quantized_final_output_rsci_d_d : OUT STD_LOGIC_VECTOR
          (7 DOWNTO 0);
      attention_5_1_384_384_8_48_quantized_final_output_rsci_q_d : IN STD_LOGIC_VECTOR
          (7 DOWNTO 0);
      attention_5_1_384_384_8_48_quantized_final_output_rsci_radr_d : OUT STD_LOGIC_VECTOR
          (8 DOWNTO 0);
      attention_5_1_384_384_8_48_quantized_final_output_rsci_wadr_d : OUT STD_LOGIC_VECTOR
          (8 DOWNTO 0);
      apply_rotary_pos_emb_1_8_48_rotated_q_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
          0);
      apply_rotary_pos_emb_1_8_48_rotated_q_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
          0);
      apply_rotary_pos_emb_1_8_48_rotated_q_rsci_radr_d : OUT STD_LOGIC_VECTOR (8
          DOWNTO 0);
      apply_rotary_pos_emb_1_8_48_rotated_q_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8
          DOWNTO 0);
      apply_rotary_pos_emb_1_8_48_rotated_k_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
          0);
      apply_rotary_pos_emb_1_8_48_rotated_k_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
          0);
      apply_rotary_pos_emb_1_8_48_rotated_k_rsci_radr_d : OUT STD_LOGIC_VECTOR (8
          DOWNTO 0);
      apply_rotary_pos_emb_1_8_48_rotated_k_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8
          DOWNTO 0);
      rms_norm_384_div_cmp_a : OUT STD_LOGIC_VECTOR (71 DOWNTO 0);
      rms_norm_384_div_cmp_b : OUT STD_LOGIC_VECTOR (60 DOWNTO 0);
      rms_norm_384_div_cmp_z : IN STD_LOGIC_VECTOR (71 DOWNTO 0);
      input_rsci_re_d_pff : OUT STD_LOGIC;
      input_rsci_we_d_pff : OUT STD_LOGIC;
      output_rsci_re_d_pff : OUT STD_LOGIC;
      output_rsci_we_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_quantized_hidden_states_rsci_re_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_quantized_hidden_states_rsci_we_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_q_proj_re_rsci_re_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_q_proj_re_rsci_we_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_k_proj_re_rsci_we_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_v_proj_re_rsci_re_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_v_proj_re_rsci_we_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_q_proj_rsci_re_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_q_proj_rsci_we_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_v_proj_rsci_re_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_v_proj_rsci_we_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_q_embed_rsci_re_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_q_embed_rsci_we_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_k_embed_rsci_re_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_k_cache_upd_rsci_re_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_k_cache_upd_rsci_we_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_v_cache_upd_rsci_re_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_k_proj_transposed_rsci_we_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_attn_weights_rsci_re_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_attn_weights_rsci_we_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_attn_output_rsci_re_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_attn_output_rsci_we_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_attn_output_2D_rsci_re_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_attn_output_2D_rsci_we_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_quantized_final_output_rsci_re_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_quantized_final_output_rsci_we_d_pff : OUT STD_LOGIC;
      apply_rotary_pos_emb_1_8_48_rotated_q_rsci_re_d_pff : OUT STD_LOGIC;
      apply_rotary_pos_emb_1_8_48_rotated_q_rsci_we_d_pff : OUT STD_LOGIC
    );
  END COMPONENT;
  SIGNAL dut_core_inst_strm_in_rsc_dat : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL dut_core_inst_strm_out_rsc_dat : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL dut_core_inst_input_rsci_d_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL dut_core_inst_input_rsci_q_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL dut_core_inst_input_rsci_radr_d : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL dut_core_inst_input_rsci_wadr_d : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL dut_core_inst_output_rsci_d_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL dut_core_inst_output_rsci_q_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL dut_core_inst_output_rsci_radr_d : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL dut_core_inst_output_rsci_wadr_d : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_d_d
      : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_q_d
      : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_radr_d
      : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_wadr_d
      : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_d_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_q_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_radr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_wadr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_d_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_q_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_radr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_wadr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_d_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_q_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_radr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_wadr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_proj_rsci_q_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_proj_rsci_radr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_proj_rsci_wadr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_proj_rsci_q_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_proj_rsci_radr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_proj_rsci_wadr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_proj_rsci_q_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_proj_rsci_radr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_proj_rsci_wadr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_d_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_q_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_radr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_wadr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_d_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_q_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_radr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_wadr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_cache_upd_rsci_d_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_cache_upd_rsci_radr_d : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_cache_upd_rsci_wadr_d : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_d_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_q_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_radr_d : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_wadr_d : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_proj_transposed_rsci_q_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_proj_transposed_rsci_radr_d :
      STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_proj_transposed_rsci_wadr_d :
      STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_d_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_q_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_radr_d : STD_LOGIC_VECTOR
      (5 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_wadr_d : STD_LOGIC_VECTOR
      (5 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_d_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_q_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_radr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_wadr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_d_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_q_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_radr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_wadr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_quantized_final_output_rsci_d_d
      : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_quantized_final_output_rsci_q_d
      : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_quantized_final_output_rsci_radr_d
      : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_quantized_final_output_rsci_wadr_d
      : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_d_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_q_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_radr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_wadr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_d_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_q_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_radr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_wadr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_rms_norm_384_div_cmp_a : STD_LOGIC_VECTOR (71 DOWNTO 0);
  SIGNAL dut_core_inst_rms_norm_384_div_cmp_b : STD_LOGIC_VECTOR (60 DOWNTO 0);
  SIGNAL dut_core_inst_rms_norm_384_div_cmp_z : STD_LOGIC_VECTOR (71 DOWNTO 0);

BEGIN
  rms_norm_384_div_cmp : mgc_hls.mgc_comps.mgc_div
    GENERIC MAP(
      width_a => 72,
      width_b => 61,
      signd => 1
      )
    PORT MAP(
      a => rms_norm_384_div_cmp_a_1,
      b => rms_norm_384_div_cmp_b_1,
      z => rms_norm_384_div_cmp_z_1
    );
  rms_norm_384_div_cmp_a_1 <= rms_norm_384_div_cmp_a;
  rms_norm_384_div_cmp_b_1 <= rms_norm_384_div_cmp_b;
  rms_norm_384_div_cmp_z <= rms_norm_384_div_cmp_z_1;

  input_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 9,
      data_width => 40,
      depth => 384,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => input_rsc_clken,
      d => input_rsc_comp_d,
      q => input_rsc_comp_q,
      radr => input_rsc_comp_radr,
      re => input_rsc_re,
      wadr => input_rsc_comp_wadr,
      we => input_rsc_we
    );
  input_rsc_comp_d <= input_rsc_d;
  input_rsc_q <= input_rsc_comp_q;
  input_rsc_comp_radr <= input_rsc_radr;
  input_rsc_comp_wadr <= input_rsc_wadr;

  output_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 9,
      data_width => 40,
      depth => 384,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => output_rsc_clken,
      d => output_rsc_comp_d,
      q => output_rsc_comp_q,
      radr => output_rsc_comp_radr,
      re => output_rsc_re,
      wadr => output_rsc_comp_wadr,
      we => output_rsc_we
    );
  output_rsc_comp_d <= output_rsc_d;
  output_rsc_q <= output_rsc_comp_q;
  output_rsc_comp_radr <= output_rsc_radr;
  output_rsc_comp_wadr <= output_rsc_wadr;

  attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 9,
      data_width => 8,
      depth => 384,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => attention_5_1_384_384_8_48_quantized_hidden_states_rsc_clken,
      d => attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_d,
      q => attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_q,
      radr => attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_radr,
      re => attention_5_1_384_384_8_48_quantized_hidden_states_rsc_re,
      wadr => attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_wadr,
      we => attention_5_1_384_384_8_48_quantized_hidden_states_rsc_we
    );
  attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_d <= attention_5_1_384_384_8_48_quantized_hidden_states_rsc_d;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsc_q <= attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_q;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_radr <= attention_5_1_384_384_8_48_quantized_hidden_states_rsc_radr;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_wadr <= attention_5_1_384_384_8_48_quantized_hidden_states_rsc_wadr;

  attention_5_1_384_384_8_48_q_proj_re_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 9,
      data_width => 40,
      depth => 384,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => attention_5_1_384_384_8_48_q_proj_re_rsc_clken,
      d => attention_5_1_384_384_8_48_q_proj_re_rsc_comp_d,
      q => attention_5_1_384_384_8_48_q_proj_re_rsc_comp_q,
      radr => attention_5_1_384_384_8_48_q_proj_re_rsc_comp_radr,
      re => attention_5_1_384_384_8_48_q_proj_re_rsc_re,
      wadr => attention_5_1_384_384_8_48_q_proj_re_rsc_comp_wadr,
      we => attention_5_1_384_384_8_48_q_proj_re_rsc_we
    );
  attention_5_1_384_384_8_48_q_proj_re_rsc_comp_d <= attention_5_1_384_384_8_48_q_proj_re_rsc_d;
  attention_5_1_384_384_8_48_q_proj_re_rsc_q <= attention_5_1_384_384_8_48_q_proj_re_rsc_comp_q;
  attention_5_1_384_384_8_48_q_proj_re_rsc_comp_radr <= attention_5_1_384_384_8_48_q_proj_re_rsc_radr;
  attention_5_1_384_384_8_48_q_proj_re_rsc_comp_wadr <= attention_5_1_384_384_8_48_q_proj_re_rsc_wadr;

  attention_5_1_384_384_8_48_k_proj_re_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 9,
      data_width => 40,
      depth => 384,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => attention_5_1_384_384_8_48_k_proj_re_rsc_clken,
      d => attention_5_1_384_384_8_48_k_proj_re_rsc_comp_d,
      q => attention_5_1_384_384_8_48_k_proj_re_rsc_comp_q,
      radr => attention_5_1_384_384_8_48_k_proj_re_rsc_comp_radr,
      re => attention_5_1_384_384_8_48_k_proj_re_rsc_re,
      wadr => attention_5_1_384_384_8_48_k_proj_re_rsc_comp_wadr,
      we => attention_5_1_384_384_8_48_k_proj_re_rsc_we
    );
  attention_5_1_384_384_8_48_k_proj_re_rsc_comp_d <= attention_5_1_384_384_8_48_k_proj_re_rsc_d;
  attention_5_1_384_384_8_48_k_proj_re_rsc_q <= attention_5_1_384_384_8_48_k_proj_re_rsc_comp_q;
  attention_5_1_384_384_8_48_k_proj_re_rsc_comp_radr <= attention_5_1_384_384_8_48_k_proj_re_rsc_radr;
  attention_5_1_384_384_8_48_k_proj_re_rsc_comp_wadr <= attention_5_1_384_384_8_48_k_proj_re_rsc_wadr;

  attention_5_1_384_384_8_48_v_proj_re_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 9,
      data_width => 40,
      depth => 384,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => attention_5_1_384_384_8_48_v_proj_re_rsc_clken,
      d => attention_5_1_384_384_8_48_v_proj_re_rsc_comp_d,
      q => attention_5_1_384_384_8_48_v_proj_re_rsc_comp_q,
      radr => attention_5_1_384_384_8_48_v_proj_re_rsc_comp_radr,
      re => attention_5_1_384_384_8_48_v_proj_re_rsc_re,
      wadr => attention_5_1_384_384_8_48_v_proj_re_rsc_comp_wadr,
      we => attention_5_1_384_384_8_48_v_proj_re_rsc_we
    );
  attention_5_1_384_384_8_48_v_proj_re_rsc_comp_d <= attention_5_1_384_384_8_48_v_proj_re_rsc_d;
  attention_5_1_384_384_8_48_v_proj_re_rsc_q <= attention_5_1_384_384_8_48_v_proj_re_rsc_comp_q;
  attention_5_1_384_384_8_48_v_proj_re_rsc_comp_radr <= attention_5_1_384_384_8_48_v_proj_re_rsc_radr;
  attention_5_1_384_384_8_48_v_proj_re_rsc_comp_wadr <= attention_5_1_384_384_8_48_v_proj_re_rsc_wadr;

  attention_5_1_384_384_8_48_q_proj_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 9,
      data_width => 40,
      depth => 384,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => attention_5_1_384_384_8_48_q_proj_rsc_clken,
      d => attention_5_1_384_384_8_48_q_proj_rsc_comp_d,
      q => attention_5_1_384_384_8_48_q_proj_rsc_comp_q,
      radr => attention_5_1_384_384_8_48_q_proj_rsc_comp_radr,
      re => attention_5_1_384_384_8_48_q_proj_rsc_re,
      wadr => attention_5_1_384_384_8_48_q_proj_rsc_comp_wadr,
      we => attention_5_1_384_384_8_48_q_proj_rsc_we
    );
  attention_5_1_384_384_8_48_q_proj_rsc_comp_d <= attention_5_1_384_384_8_48_q_proj_rsc_d;
  attention_5_1_384_384_8_48_q_proj_rsc_q <= attention_5_1_384_384_8_48_q_proj_rsc_comp_q;
  attention_5_1_384_384_8_48_q_proj_rsc_comp_radr <= attention_5_1_384_384_8_48_q_proj_rsc_radr;
  attention_5_1_384_384_8_48_q_proj_rsc_comp_wadr <= attention_5_1_384_384_8_48_q_proj_rsc_wadr;

  attention_5_1_384_384_8_48_k_proj_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 9,
      data_width => 40,
      depth => 384,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => attention_5_1_384_384_8_48_k_proj_rsc_clken,
      d => attention_5_1_384_384_8_48_k_proj_rsc_comp_d,
      q => attention_5_1_384_384_8_48_k_proj_rsc_comp_q,
      radr => attention_5_1_384_384_8_48_k_proj_rsc_comp_radr,
      re => attention_5_1_384_384_8_48_k_proj_rsc_re,
      wadr => attention_5_1_384_384_8_48_k_proj_rsc_comp_wadr,
      we => attention_5_1_384_384_8_48_k_proj_rsc_we
    );
  attention_5_1_384_384_8_48_k_proj_rsc_comp_d <= attention_5_1_384_384_8_48_k_proj_rsc_d;
  attention_5_1_384_384_8_48_k_proj_rsc_q <= attention_5_1_384_384_8_48_k_proj_rsc_comp_q;
  attention_5_1_384_384_8_48_k_proj_rsc_comp_radr <= attention_5_1_384_384_8_48_k_proj_rsc_radr;
  attention_5_1_384_384_8_48_k_proj_rsc_comp_wadr <= attention_5_1_384_384_8_48_k_proj_rsc_wadr;

  attention_5_1_384_384_8_48_v_proj_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 9,
      data_width => 40,
      depth => 384,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => attention_5_1_384_384_8_48_v_proj_rsc_clken,
      d => attention_5_1_384_384_8_48_v_proj_rsc_comp_d,
      q => attention_5_1_384_384_8_48_v_proj_rsc_comp_q,
      radr => attention_5_1_384_384_8_48_v_proj_rsc_comp_radr,
      re => attention_5_1_384_384_8_48_v_proj_rsc_re,
      wadr => attention_5_1_384_384_8_48_v_proj_rsc_comp_wadr,
      we => attention_5_1_384_384_8_48_v_proj_rsc_we
    );
  attention_5_1_384_384_8_48_v_proj_rsc_comp_d <= attention_5_1_384_384_8_48_v_proj_rsc_d;
  attention_5_1_384_384_8_48_v_proj_rsc_q <= attention_5_1_384_384_8_48_v_proj_rsc_comp_q;
  attention_5_1_384_384_8_48_v_proj_rsc_comp_radr <= attention_5_1_384_384_8_48_v_proj_rsc_radr;
  attention_5_1_384_384_8_48_v_proj_rsc_comp_wadr <= attention_5_1_384_384_8_48_v_proj_rsc_wadr;

  attention_5_1_384_384_8_48_q_embed_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 9,
      data_width => 40,
      depth => 384,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => attention_5_1_384_384_8_48_q_embed_rsc_clken,
      d => attention_5_1_384_384_8_48_q_embed_rsc_comp_d,
      q => attention_5_1_384_384_8_48_q_embed_rsc_comp_q,
      radr => attention_5_1_384_384_8_48_q_embed_rsc_comp_radr,
      re => attention_5_1_384_384_8_48_q_embed_rsc_re,
      wadr => attention_5_1_384_384_8_48_q_embed_rsc_comp_wadr,
      we => attention_5_1_384_384_8_48_q_embed_rsc_we
    );
  attention_5_1_384_384_8_48_q_embed_rsc_comp_d <= attention_5_1_384_384_8_48_q_embed_rsc_d;
  attention_5_1_384_384_8_48_q_embed_rsc_q <= attention_5_1_384_384_8_48_q_embed_rsc_comp_q;
  attention_5_1_384_384_8_48_q_embed_rsc_comp_radr <= attention_5_1_384_384_8_48_q_embed_rsc_radr;
  attention_5_1_384_384_8_48_q_embed_rsc_comp_wadr <= attention_5_1_384_384_8_48_q_embed_rsc_wadr;

  attention_5_1_384_384_8_48_k_embed_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 9,
      data_width => 40,
      depth => 384,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => attention_5_1_384_384_8_48_k_embed_rsc_clken,
      d => attention_5_1_384_384_8_48_k_embed_rsc_comp_d,
      q => attention_5_1_384_384_8_48_k_embed_rsc_comp_q,
      radr => attention_5_1_384_384_8_48_k_embed_rsc_comp_radr,
      re => attention_5_1_384_384_8_48_k_embed_rsc_re,
      wadr => attention_5_1_384_384_8_48_k_embed_rsc_comp_wadr,
      we => attention_5_1_384_384_8_48_k_embed_rsc_we
    );
  attention_5_1_384_384_8_48_k_embed_rsc_comp_d <= attention_5_1_384_384_8_48_k_embed_rsc_d;
  attention_5_1_384_384_8_48_k_embed_rsc_q <= attention_5_1_384_384_8_48_k_embed_rsc_comp_q;
  attention_5_1_384_384_8_48_k_embed_rsc_comp_radr <= attention_5_1_384_384_8_48_k_embed_rsc_radr;
  attention_5_1_384_384_8_48_k_embed_rsc_comp_wadr <= attention_5_1_384_384_8_48_k_embed_rsc_wadr;

  attention_5_1_384_384_8_48_k_cache_upd_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 12,
      data_width => 40,
      depth => 2304,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => attention_5_1_384_384_8_48_k_cache_upd_rsc_clken,
      d => attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_d,
      q => attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_q,
      radr => attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_radr,
      re => attention_5_1_384_384_8_48_k_cache_upd_rsc_re,
      wadr => attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_wadr,
      we => attention_5_1_384_384_8_48_k_cache_upd_rsc_we
    );
  attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_d <= attention_5_1_384_384_8_48_k_cache_upd_rsc_d;
  attention_5_1_384_384_8_48_k_cache_upd_rsc_q <= attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_q;
  attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_radr <= attention_5_1_384_384_8_48_k_cache_upd_rsc_radr;
  attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_wadr <= attention_5_1_384_384_8_48_k_cache_upd_rsc_wadr;

  attention_5_1_384_384_8_48_v_cache_upd_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 12,
      data_width => 40,
      depth => 2304,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => attention_5_1_384_384_8_48_v_cache_upd_rsc_clken,
      d => attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_d,
      q => attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_q,
      radr => attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_radr,
      re => attention_5_1_384_384_8_48_v_cache_upd_rsc_re,
      wadr => attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_wadr,
      we => attention_5_1_384_384_8_48_v_cache_upd_rsc_we
    );
  attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_d <= attention_5_1_384_384_8_48_v_cache_upd_rsc_d;
  attention_5_1_384_384_8_48_v_cache_upd_rsc_q <= attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_q;
  attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_radr <= attention_5_1_384_384_8_48_v_cache_upd_rsc_radr;
  attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_wadr <= attention_5_1_384_384_8_48_v_cache_upd_rsc_wadr;

  attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 12,
      data_width => 40,
      depth => 2304,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => attention_5_1_384_384_8_48_k_proj_transposed_rsc_clken,
      d => attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_d,
      q => attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_q,
      radr => attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_radr,
      re => attention_5_1_384_384_8_48_k_proj_transposed_rsc_re,
      wadr => attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_wadr,
      we => attention_5_1_384_384_8_48_k_proj_transposed_rsc_we
    );
  attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_d <= attention_5_1_384_384_8_48_k_proj_transposed_rsc_d;
  attention_5_1_384_384_8_48_k_proj_transposed_rsc_q <= attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_q;
  attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_radr <= attention_5_1_384_384_8_48_k_proj_transposed_rsc_radr;
  attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_wadr <= attention_5_1_384_384_8_48_k_proj_transposed_rsc_wadr;

  attention_5_1_384_384_8_48_attn_weights_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 6,
      data_width => 40,
      depth => 48,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => attention_5_1_384_384_8_48_attn_weights_rsc_clken,
      d => attention_5_1_384_384_8_48_attn_weights_rsc_comp_d,
      q => attention_5_1_384_384_8_48_attn_weights_rsc_comp_q,
      radr => attention_5_1_384_384_8_48_attn_weights_rsc_comp_radr,
      re => attention_5_1_384_384_8_48_attn_weights_rsc_re,
      wadr => attention_5_1_384_384_8_48_attn_weights_rsc_comp_wadr,
      we => attention_5_1_384_384_8_48_attn_weights_rsc_we
    );
  attention_5_1_384_384_8_48_attn_weights_rsc_comp_d <= attention_5_1_384_384_8_48_attn_weights_rsc_d;
  attention_5_1_384_384_8_48_attn_weights_rsc_q <= attention_5_1_384_384_8_48_attn_weights_rsc_comp_q;
  attention_5_1_384_384_8_48_attn_weights_rsc_comp_radr <= attention_5_1_384_384_8_48_attn_weights_rsc_radr;
  attention_5_1_384_384_8_48_attn_weights_rsc_comp_wadr <= attention_5_1_384_384_8_48_attn_weights_rsc_wadr;

  attention_5_1_384_384_8_48_attn_output_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 9,
      data_width => 40,
      depth => 384,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => attention_5_1_384_384_8_48_attn_output_rsc_clken,
      d => attention_5_1_384_384_8_48_attn_output_rsc_comp_d,
      q => attention_5_1_384_384_8_48_attn_output_rsc_comp_q,
      radr => attention_5_1_384_384_8_48_attn_output_rsc_comp_radr,
      re => attention_5_1_384_384_8_48_attn_output_rsc_re,
      wadr => attention_5_1_384_384_8_48_attn_output_rsc_comp_wadr,
      we => attention_5_1_384_384_8_48_attn_output_rsc_we
    );
  attention_5_1_384_384_8_48_attn_output_rsc_comp_d <= attention_5_1_384_384_8_48_attn_output_rsc_d;
  attention_5_1_384_384_8_48_attn_output_rsc_q <= attention_5_1_384_384_8_48_attn_output_rsc_comp_q;
  attention_5_1_384_384_8_48_attn_output_rsc_comp_radr <= attention_5_1_384_384_8_48_attn_output_rsc_radr;
  attention_5_1_384_384_8_48_attn_output_rsc_comp_wadr <= attention_5_1_384_384_8_48_attn_output_rsc_wadr;

  attention_5_1_384_384_8_48_attn_output_2D_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 9,
      data_width => 40,
      depth => 384,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => attention_5_1_384_384_8_48_attn_output_2D_rsc_clken,
      d => attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_d,
      q => attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_q,
      radr => attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_radr,
      re => attention_5_1_384_384_8_48_attn_output_2D_rsc_re,
      wadr => attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_wadr,
      we => attention_5_1_384_384_8_48_attn_output_2D_rsc_we
    );
  attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_d <= attention_5_1_384_384_8_48_attn_output_2D_rsc_d;
  attention_5_1_384_384_8_48_attn_output_2D_rsc_q <= attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_q;
  attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_radr <= attention_5_1_384_384_8_48_attn_output_2D_rsc_radr;
  attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_wadr <= attention_5_1_384_384_8_48_attn_output_2D_rsc_wadr;

  attention_5_1_384_384_8_48_quantized_final_output_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 9,
      data_width => 8,
      depth => 384,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => attention_5_1_384_384_8_48_quantized_final_output_rsc_clken,
      d => attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_d,
      q => attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_q,
      radr => attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_radr,
      re => attention_5_1_384_384_8_48_quantized_final_output_rsc_re,
      wadr => attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_wadr,
      we => attention_5_1_384_384_8_48_quantized_final_output_rsc_we
    );
  attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_d <= attention_5_1_384_384_8_48_quantized_final_output_rsc_d;
  attention_5_1_384_384_8_48_quantized_final_output_rsc_q <= attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_q;
  attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_radr <= attention_5_1_384_384_8_48_quantized_final_output_rsc_radr;
  attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_wadr <= attention_5_1_384_384_8_48_quantized_final_output_rsc_wadr;

  apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 9,
      data_width => 40,
      depth => 384,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => apply_rotary_pos_emb_1_8_48_rotated_q_rsc_clken,
      d => apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_d,
      q => apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_q,
      radr => apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_radr,
      re => apply_rotary_pos_emb_1_8_48_rotated_q_rsc_re,
      wadr => apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_wadr,
      we => apply_rotary_pos_emb_1_8_48_rotated_q_rsc_we
    );
  apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_d <= apply_rotary_pos_emb_1_8_48_rotated_q_rsc_d;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsc_q <= apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_q;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_radr <= apply_rotary_pos_emb_1_8_48_rotated_q_rsc_radr;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_wadr <= apply_rotary_pos_emb_1_8_48_rotated_q_rsc_wadr;

  apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 9,
      data_width => 40,
      depth => 384,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => apply_rotary_pos_emb_1_8_48_rotated_k_rsc_clken,
      d => apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_d,
      q => apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_q,
      radr => apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_radr,
      re => apply_rotary_pos_emb_1_8_48_rotated_k_rsc_re,
      wadr => apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_wadr,
      we => apply_rotary_pos_emb_1_8_48_rotated_k_rsc_we
    );
  apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_d <= apply_rotary_pos_emb_1_8_48_rotated_k_rsc_d;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsc_q <= apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_q;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_radr <= apply_rotary_pos_emb_1_8_48_rotated_k_rsc_radr;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_wadr <= apply_rotary_pos_emb_1_8_48_rotated_k_rsc_wadr;

  input_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_3_9_40_384_1_384_40_1_gen
    PORT MAP(
      clken => input_rsc_clken,
      q => input_rsci_q,
      re => input_rsc_re,
      radr => input_rsci_radr,
      we => input_rsc_we,
      d => input_rsci_d,
      wadr => input_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => input_rsci_d_d_1,
      q_d => input_rsci_q_d_1,
      radr_d => input_rsci_radr_d_1,
      re_d => input_rsci_re_d_iff,
      wadr_d => input_rsci_wadr_d_1,
      we_d => input_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => input_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => input_rsci_re_d_iff
    );
  input_rsci_q <= input_rsc_q;
  input_rsc_radr <= input_rsci_radr;
  input_rsc_d <= input_rsci_d;
  input_rsc_wadr <= input_rsci_wadr;
  input_rsci_d_d_1 <= input_rsci_d_d;
  input_rsci_q_d <= input_rsci_q_d_1;
  input_rsci_radr_d_1 <= input_rsci_radr_d;
  input_rsci_wadr_d_1 <= input_rsci_wadr_d;

  output_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_4_9_40_384_1_384_40_1_gen
    PORT MAP(
      clken => output_rsc_clken,
      q => output_rsci_q,
      re => output_rsc_re,
      radr => output_rsci_radr,
      we => output_rsc_we,
      d => output_rsci_d,
      wadr => output_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => output_rsci_d_d_1,
      q_d => output_rsci_q_d_1,
      radr_d => output_rsci_radr_d_1,
      re_d => output_rsci_re_d_iff,
      wadr_d => output_rsci_wadr_d_1,
      we_d => output_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => output_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => output_rsci_re_d_iff
    );
  output_rsci_q <= output_rsc_q;
  output_rsc_radr <= output_rsci_radr;
  output_rsc_d <= output_rsci_d;
  output_rsc_wadr <= output_rsci_wadr;
  output_rsci_d_d_1 <= output_rsci_d_d;
  output_rsci_q_d <= output_rsci_q_d_1;
  output_rsci_radr_d_1 <= output_rsci_radr_d;
  output_rsci_wadr_d_1 <= output_rsci_wadr_d;

  attention_5_1_384_384_8_48_quantized_hidden_states_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_5_9_8_384_1_384_8_1_gen
    PORT MAP(
      clken => attention_5_1_384_384_8_48_quantized_hidden_states_rsc_clken,
      q => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_q,
      re => attention_5_1_384_384_8_48_quantized_hidden_states_rsc_re,
      radr => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_radr,
      we => attention_5_1_384_384_8_48_quantized_hidden_states_rsc_we,
      d => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_d,
      wadr => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_d_d_1,
      q_d => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_q_d_1,
      radr_d => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_radr_d_1,
      re_d => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_re_d_iff,
      wadr_d => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_wadr_d_1,
      we_d => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_re_d_iff
    );
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_q <= attention_5_1_384_384_8_48_quantized_hidden_states_rsc_q;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsc_radr <= attention_5_1_384_384_8_48_quantized_hidden_states_rsci_radr;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsc_d <= attention_5_1_384_384_8_48_quantized_hidden_states_rsci_d;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsc_wadr <= attention_5_1_384_384_8_48_quantized_hidden_states_rsci_wadr;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_d_d_1 <= attention_5_1_384_384_8_48_quantized_hidden_states_rsci_d_d;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_q_d <= attention_5_1_384_384_8_48_quantized_hidden_states_rsci_q_d_1;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_radr_d_1 <= attention_5_1_384_384_8_48_quantized_hidden_states_rsci_radr_d;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_wadr_d_1 <= attention_5_1_384_384_8_48_quantized_hidden_states_rsci_wadr_d;

  attention_5_1_384_384_8_48_q_proj_re_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_6_9_40_384_1_384_40_1_gen
    PORT MAP(
      clken => attention_5_1_384_384_8_48_q_proj_re_rsc_clken,
      q => attention_5_1_384_384_8_48_q_proj_re_rsci_q,
      re => attention_5_1_384_384_8_48_q_proj_re_rsc_re,
      radr => attention_5_1_384_384_8_48_q_proj_re_rsci_radr,
      we => attention_5_1_384_384_8_48_q_proj_re_rsc_we,
      d => attention_5_1_384_384_8_48_q_proj_re_rsci_d,
      wadr => attention_5_1_384_384_8_48_q_proj_re_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => attention_5_1_384_384_8_48_q_proj_re_rsci_d_d_1,
      q_d => attention_5_1_384_384_8_48_q_proj_re_rsci_q_d_1,
      radr_d => attention_5_1_384_384_8_48_q_proj_re_rsci_radr_d_1,
      re_d => attention_5_1_384_384_8_48_q_proj_re_rsci_re_d_iff,
      wadr_d => attention_5_1_384_384_8_48_q_proj_re_rsci_wadr_d_1,
      we_d => attention_5_1_384_384_8_48_q_proj_re_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => attention_5_1_384_384_8_48_q_proj_re_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => attention_5_1_384_384_8_48_q_proj_re_rsci_re_d_iff
    );
  attention_5_1_384_384_8_48_q_proj_re_rsci_q <= attention_5_1_384_384_8_48_q_proj_re_rsc_q;
  attention_5_1_384_384_8_48_q_proj_re_rsc_radr <= attention_5_1_384_384_8_48_q_proj_re_rsci_radr;
  attention_5_1_384_384_8_48_q_proj_re_rsc_d <= attention_5_1_384_384_8_48_q_proj_re_rsci_d;
  attention_5_1_384_384_8_48_q_proj_re_rsc_wadr <= attention_5_1_384_384_8_48_q_proj_re_rsci_wadr;
  attention_5_1_384_384_8_48_q_proj_re_rsci_d_d_1 <= attention_5_1_384_384_8_48_q_proj_re_rsci_d_d;
  attention_5_1_384_384_8_48_q_proj_re_rsci_q_d <= attention_5_1_384_384_8_48_q_proj_re_rsci_q_d_1;
  attention_5_1_384_384_8_48_q_proj_re_rsci_radr_d_1 <= attention_5_1_384_384_8_48_q_proj_re_rsci_radr_d;
  attention_5_1_384_384_8_48_q_proj_re_rsci_wadr_d_1 <= attention_5_1_384_384_8_48_q_proj_re_rsci_wadr_d;

  attention_5_1_384_384_8_48_k_proj_re_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_7_9_40_384_1_384_40_1_gen
    PORT MAP(
      clken => attention_5_1_384_384_8_48_k_proj_re_rsc_clken,
      q => attention_5_1_384_384_8_48_k_proj_re_rsci_q,
      re => attention_5_1_384_384_8_48_k_proj_re_rsc_re,
      radr => attention_5_1_384_384_8_48_k_proj_re_rsci_radr,
      we => attention_5_1_384_384_8_48_k_proj_re_rsc_we,
      d => attention_5_1_384_384_8_48_k_proj_re_rsci_d,
      wadr => attention_5_1_384_384_8_48_k_proj_re_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => attention_5_1_384_384_8_48_k_proj_re_rsci_d_d_1,
      q_d => attention_5_1_384_384_8_48_k_proj_re_rsci_q_d_1,
      radr_d => attention_5_1_384_384_8_48_k_proj_re_rsci_radr_d_1,
      re_d => attention_5_1_384_384_8_48_q_proj_re_rsci_re_d_iff,
      wadr_d => attention_5_1_384_384_8_48_k_proj_re_rsci_wadr_d_1,
      we_d => attention_5_1_384_384_8_48_k_proj_re_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => attention_5_1_384_384_8_48_k_proj_re_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => attention_5_1_384_384_8_48_q_proj_re_rsci_re_d_iff
    );
  attention_5_1_384_384_8_48_k_proj_re_rsci_q <= attention_5_1_384_384_8_48_k_proj_re_rsc_q;
  attention_5_1_384_384_8_48_k_proj_re_rsc_radr <= attention_5_1_384_384_8_48_k_proj_re_rsci_radr;
  attention_5_1_384_384_8_48_k_proj_re_rsc_d <= attention_5_1_384_384_8_48_k_proj_re_rsci_d;
  attention_5_1_384_384_8_48_k_proj_re_rsc_wadr <= attention_5_1_384_384_8_48_k_proj_re_rsci_wadr;
  attention_5_1_384_384_8_48_k_proj_re_rsci_d_d_1 <= attention_5_1_384_384_8_48_k_proj_re_rsci_d_d;
  attention_5_1_384_384_8_48_k_proj_re_rsci_q_d <= attention_5_1_384_384_8_48_k_proj_re_rsci_q_d_1;
  attention_5_1_384_384_8_48_k_proj_re_rsci_radr_d_1 <= attention_5_1_384_384_8_48_k_proj_re_rsci_radr_d;
  attention_5_1_384_384_8_48_k_proj_re_rsci_wadr_d_1 <= attention_5_1_384_384_8_48_k_proj_re_rsci_wadr_d;

  attention_5_1_384_384_8_48_v_proj_re_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_8_9_40_384_1_384_40_1_gen
    PORT MAP(
      clken => attention_5_1_384_384_8_48_v_proj_re_rsc_clken,
      q => attention_5_1_384_384_8_48_v_proj_re_rsci_q,
      re => attention_5_1_384_384_8_48_v_proj_re_rsc_re,
      radr => attention_5_1_384_384_8_48_v_proj_re_rsci_radr,
      we => attention_5_1_384_384_8_48_v_proj_re_rsc_we,
      d => attention_5_1_384_384_8_48_v_proj_re_rsci_d,
      wadr => attention_5_1_384_384_8_48_v_proj_re_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => attention_5_1_384_384_8_48_v_proj_re_rsci_d_d_1,
      q_d => attention_5_1_384_384_8_48_v_proj_re_rsci_q_d_1,
      radr_d => attention_5_1_384_384_8_48_v_proj_re_rsci_radr_d_1,
      re_d => attention_5_1_384_384_8_48_v_proj_re_rsci_re_d_iff,
      wadr_d => attention_5_1_384_384_8_48_v_proj_re_rsci_wadr_d_1,
      we_d => attention_5_1_384_384_8_48_v_proj_re_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => attention_5_1_384_384_8_48_v_proj_re_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => attention_5_1_384_384_8_48_v_proj_re_rsci_re_d_iff
    );
  attention_5_1_384_384_8_48_v_proj_re_rsci_q <= attention_5_1_384_384_8_48_v_proj_re_rsc_q;
  attention_5_1_384_384_8_48_v_proj_re_rsc_radr <= attention_5_1_384_384_8_48_v_proj_re_rsci_radr;
  attention_5_1_384_384_8_48_v_proj_re_rsc_d <= attention_5_1_384_384_8_48_v_proj_re_rsci_d;
  attention_5_1_384_384_8_48_v_proj_re_rsc_wadr <= attention_5_1_384_384_8_48_v_proj_re_rsci_wadr;
  attention_5_1_384_384_8_48_v_proj_re_rsci_d_d_1 <= attention_5_1_384_384_8_48_v_proj_re_rsci_d_d;
  attention_5_1_384_384_8_48_v_proj_re_rsci_q_d <= attention_5_1_384_384_8_48_v_proj_re_rsci_q_d_1;
  attention_5_1_384_384_8_48_v_proj_re_rsci_radr_d_1 <= attention_5_1_384_384_8_48_v_proj_re_rsci_radr_d;
  attention_5_1_384_384_8_48_v_proj_re_rsci_wadr_d_1 <= attention_5_1_384_384_8_48_v_proj_re_rsci_wadr_d;

  attention_5_1_384_384_8_48_q_proj_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_9_9_40_384_1_384_40_1_gen
    PORT MAP(
      clken => attention_5_1_384_384_8_48_q_proj_rsc_clken,
      q => attention_5_1_384_384_8_48_q_proj_rsci_q,
      re => attention_5_1_384_384_8_48_q_proj_rsc_re,
      radr => attention_5_1_384_384_8_48_q_proj_rsci_radr,
      we => attention_5_1_384_384_8_48_q_proj_rsc_we,
      d => attention_5_1_384_384_8_48_q_proj_rsci_d,
      wadr => attention_5_1_384_384_8_48_q_proj_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => attention_5_1_384_384_8_48_q_proj_rsci_d_d,
      q_d => attention_5_1_384_384_8_48_q_proj_rsci_q_d_1,
      radr_d => attention_5_1_384_384_8_48_q_proj_rsci_radr_d_1,
      re_d => attention_5_1_384_384_8_48_q_proj_rsci_re_d_iff,
      wadr_d => attention_5_1_384_384_8_48_q_proj_rsci_wadr_d_1,
      we_d => attention_5_1_384_384_8_48_q_proj_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => attention_5_1_384_384_8_48_q_proj_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => attention_5_1_384_384_8_48_q_proj_rsci_re_d_iff
    );
  attention_5_1_384_384_8_48_q_proj_rsci_q <= attention_5_1_384_384_8_48_q_proj_rsc_q;
  attention_5_1_384_384_8_48_q_proj_rsc_radr <= attention_5_1_384_384_8_48_q_proj_rsci_radr;
  attention_5_1_384_384_8_48_q_proj_rsc_d <= attention_5_1_384_384_8_48_q_proj_rsci_d;
  attention_5_1_384_384_8_48_q_proj_rsc_wadr <= attention_5_1_384_384_8_48_q_proj_rsci_wadr;
  attention_5_1_384_384_8_48_q_proj_rsci_d_d <= attention_5_1_384_384_8_48_q_proj_re_rsci_q_d;
  attention_5_1_384_384_8_48_q_proj_rsci_q_d <= attention_5_1_384_384_8_48_q_proj_rsci_q_d_1;
  attention_5_1_384_384_8_48_q_proj_rsci_radr_d_1 <= attention_5_1_384_384_8_48_q_proj_rsci_radr_d;
  attention_5_1_384_384_8_48_q_proj_rsci_wadr_d_1 <= attention_5_1_384_384_8_48_q_proj_rsci_wadr_d;

  attention_5_1_384_384_8_48_k_proj_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_10_9_40_384_1_384_40_1_gen
    PORT MAP(
      clken => attention_5_1_384_384_8_48_k_proj_rsc_clken,
      q => attention_5_1_384_384_8_48_k_proj_rsci_q,
      re => attention_5_1_384_384_8_48_k_proj_rsc_re,
      radr => attention_5_1_384_384_8_48_k_proj_rsci_radr,
      we => attention_5_1_384_384_8_48_k_proj_rsc_we,
      d => attention_5_1_384_384_8_48_k_proj_rsci_d,
      wadr => attention_5_1_384_384_8_48_k_proj_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => attention_5_1_384_384_8_48_k_proj_rsci_d_d,
      q_d => attention_5_1_384_384_8_48_k_proj_rsci_q_d_1,
      radr_d => attention_5_1_384_384_8_48_k_proj_rsci_radr_d_1,
      re_d => attention_5_1_384_384_8_48_q_proj_rsci_re_d_iff,
      wadr_d => attention_5_1_384_384_8_48_k_proj_rsci_wadr_d_1,
      we_d => attention_5_1_384_384_8_48_q_proj_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => attention_5_1_384_384_8_48_q_proj_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => attention_5_1_384_384_8_48_q_proj_rsci_re_d_iff
    );
  attention_5_1_384_384_8_48_k_proj_rsci_q <= attention_5_1_384_384_8_48_k_proj_rsc_q;
  attention_5_1_384_384_8_48_k_proj_rsc_radr <= attention_5_1_384_384_8_48_k_proj_rsci_radr;
  attention_5_1_384_384_8_48_k_proj_rsc_d <= attention_5_1_384_384_8_48_k_proj_rsci_d;
  attention_5_1_384_384_8_48_k_proj_rsc_wadr <= attention_5_1_384_384_8_48_k_proj_rsci_wadr;
  attention_5_1_384_384_8_48_k_proj_rsci_d_d <= attention_5_1_384_384_8_48_k_proj_re_rsci_q_d;
  attention_5_1_384_384_8_48_k_proj_rsci_q_d <= attention_5_1_384_384_8_48_k_proj_rsci_q_d_1;
  attention_5_1_384_384_8_48_k_proj_rsci_radr_d_1 <= attention_5_1_384_384_8_48_k_proj_rsci_radr_d;
  attention_5_1_384_384_8_48_k_proj_rsci_wadr_d_1 <= attention_5_1_384_384_8_48_k_proj_rsci_wadr_d;

  attention_5_1_384_384_8_48_v_proj_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_11_9_40_384_1_384_40_1_gen
    PORT MAP(
      clken => attention_5_1_384_384_8_48_v_proj_rsc_clken,
      q => attention_5_1_384_384_8_48_v_proj_rsci_q,
      re => attention_5_1_384_384_8_48_v_proj_rsc_re,
      radr => attention_5_1_384_384_8_48_v_proj_rsci_radr,
      we => attention_5_1_384_384_8_48_v_proj_rsc_we,
      d => attention_5_1_384_384_8_48_v_proj_rsci_d,
      wadr => attention_5_1_384_384_8_48_v_proj_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => attention_5_1_384_384_8_48_v_proj_rsci_d_d,
      q_d => attention_5_1_384_384_8_48_v_proj_rsci_q_d_1,
      radr_d => attention_5_1_384_384_8_48_v_proj_rsci_radr_d_1,
      re_d => attention_5_1_384_384_8_48_v_proj_rsci_re_d_iff,
      wadr_d => attention_5_1_384_384_8_48_v_proj_rsci_wadr_d_1,
      we_d => attention_5_1_384_384_8_48_v_proj_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => attention_5_1_384_384_8_48_v_proj_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => attention_5_1_384_384_8_48_v_proj_rsci_re_d_iff
    );
  attention_5_1_384_384_8_48_v_proj_rsci_q <= attention_5_1_384_384_8_48_v_proj_rsc_q;
  attention_5_1_384_384_8_48_v_proj_rsc_radr <= attention_5_1_384_384_8_48_v_proj_rsci_radr;
  attention_5_1_384_384_8_48_v_proj_rsc_d <= attention_5_1_384_384_8_48_v_proj_rsci_d;
  attention_5_1_384_384_8_48_v_proj_rsc_wadr <= attention_5_1_384_384_8_48_v_proj_rsci_wadr;
  attention_5_1_384_384_8_48_v_proj_rsci_d_d <= attention_5_1_384_384_8_48_v_proj_re_rsci_q_d;
  attention_5_1_384_384_8_48_v_proj_rsci_q_d <= attention_5_1_384_384_8_48_v_proj_rsci_q_d_1;
  attention_5_1_384_384_8_48_v_proj_rsci_radr_d_1 <= attention_5_1_384_384_8_48_v_proj_rsci_radr_d;
  attention_5_1_384_384_8_48_v_proj_rsci_wadr_d_1 <= attention_5_1_384_384_8_48_v_proj_rsci_wadr_d;

  attention_5_1_384_384_8_48_q_embed_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_12_9_40_384_1_384_40_1_gen
    PORT MAP(
      clken => attention_5_1_384_384_8_48_q_embed_rsc_clken,
      q => attention_5_1_384_384_8_48_q_embed_rsci_q,
      re => attention_5_1_384_384_8_48_q_embed_rsc_re,
      radr => attention_5_1_384_384_8_48_q_embed_rsci_radr,
      we => attention_5_1_384_384_8_48_q_embed_rsc_we,
      d => attention_5_1_384_384_8_48_q_embed_rsci_d,
      wadr => attention_5_1_384_384_8_48_q_embed_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => attention_5_1_384_384_8_48_q_embed_rsci_d_d_1,
      q_d => attention_5_1_384_384_8_48_q_embed_rsci_q_d_1,
      radr_d => attention_5_1_384_384_8_48_q_embed_rsci_radr_d_1,
      re_d => attention_5_1_384_384_8_48_q_embed_rsci_re_d_iff,
      wadr_d => attention_5_1_384_384_8_48_q_embed_rsci_wadr_d_1,
      we_d => attention_5_1_384_384_8_48_q_embed_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => attention_5_1_384_384_8_48_q_embed_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => attention_5_1_384_384_8_48_q_embed_rsci_re_d_iff
    );
  attention_5_1_384_384_8_48_q_embed_rsci_q <= attention_5_1_384_384_8_48_q_embed_rsc_q;
  attention_5_1_384_384_8_48_q_embed_rsc_radr <= attention_5_1_384_384_8_48_q_embed_rsci_radr;
  attention_5_1_384_384_8_48_q_embed_rsc_d <= attention_5_1_384_384_8_48_q_embed_rsci_d;
  attention_5_1_384_384_8_48_q_embed_rsc_wadr <= attention_5_1_384_384_8_48_q_embed_rsci_wadr;
  attention_5_1_384_384_8_48_q_embed_rsci_d_d_1 <= attention_5_1_384_384_8_48_q_embed_rsci_d_d;
  attention_5_1_384_384_8_48_q_embed_rsci_q_d <= attention_5_1_384_384_8_48_q_embed_rsci_q_d_1;
  attention_5_1_384_384_8_48_q_embed_rsci_radr_d_1 <= attention_5_1_384_384_8_48_q_embed_rsci_radr_d;
  attention_5_1_384_384_8_48_q_embed_rsci_wadr_d_1 <= attention_5_1_384_384_8_48_q_embed_rsci_wadr_d;

  attention_5_1_384_384_8_48_k_embed_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_13_9_40_384_1_384_40_1_gen
    PORT MAP(
      clken => attention_5_1_384_384_8_48_k_embed_rsc_clken,
      q => attention_5_1_384_384_8_48_k_embed_rsci_q,
      re => attention_5_1_384_384_8_48_k_embed_rsc_re,
      radr => attention_5_1_384_384_8_48_k_embed_rsci_radr,
      we => attention_5_1_384_384_8_48_k_embed_rsc_we,
      d => attention_5_1_384_384_8_48_k_embed_rsci_d,
      wadr => attention_5_1_384_384_8_48_k_embed_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => attention_5_1_384_384_8_48_k_embed_rsci_d_d_1,
      q_d => attention_5_1_384_384_8_48_k_embed_rsci_q_d_1,
      radr_d => attention_5_1_384_384_8_48_k_embed_rsci_radr_d_1,
      re_d => attention_5_1_384_384_8_48_k_embed_rsci_re_d_iff,
      wadr_d => attention_5_1_384_384_8_48_k_embed_rsci_wadr_d_1,
      we_d => attention_5_1_384_384_8_48_q_embed_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => attention_5_1_384_384_8_48_q_embed_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => attention_5_1_384_384_8_48_k_embed_rsci_re_d_iff
    );
  attention_5_1_384_384_8_48_k_embed_rsci_q <= attention_5_1_384_384_8_48_k_embed_rsc_q;
  attention_5_1_384_384_8_48_k_embed_rsc_radr <= attention_5_1_384_384_8_48_k_embed_rsci_radr;
  attention_5_1_384_384_8_48_k_embed_rsc_d <= attention_5_1_384_384_8_48_k_embed_rsci_d;
  attention_5_1_384_384_8_48_k_embed_rsc_wadr <= attention_5_1_384_384_8_48_k_embed_rsci_wadr;
  attention_5_1_384_384_8_48_k_embed_rsci_d_d_1 <= attention_5_1_384_384_8_48_k_embed_rsci_d_d;
  attention_5_1_384_384_8_48_k_embed_rsci_q_d <= attention_5_1_384_384_8_48_k_embed_rsci_q_d_1;
  attention_5_1_384_384_8_48_k_embed_rsci_radr_d_1 <= attention_5_1_384_384_8_48_k_embed_rsci_radr_d;
  attention_5_1_384_384_8_48_k_embed_rsci_wadr_d_1 <= attention_5_1_384_384_8_48_k_embed_rsci_wadr_d;

  attention_5_1_384_384_8_48_k_cache_upd_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_14_12_40_2304_1_2304_40_1_gen
    PORT MAP(
      clken => attention_5_1_384_384_8_48_k_cache_upd_rsc_clken,
      q => attention_5_1_384_384_8_48_k_cache_upd_rsci_q,
      re => attention_5_1_384_384_8_48_k_cache_upd_rsc_re,
      radr => attention_5_1_384_384_8_48_k_cache_upd_rsci_radr,
      we => attention_5_1_384_384_8_48_k_cache_upd_rsc_we,
      d => attention_5_1_384_384_8_48_k_cache_upd_rsci_d,
      wadr => attention_5_1_384_384_8_48_k_cache_upd_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => attention_5_1_384_384_8_48_k_cache_upd_rsci_d_d_1,
      q_d => attention_5_1_384_384_8_48_k_cache_upd_rsci_q_d_1,
      radr_d => attention_5_1_384_384_8_48_k_cache_upd_rsci_radr_d_1,
      re_d => attention_5_1_384_384_8_48_k_cache_upd_rsci_re_d_iff,
      wadr_d => attention_5_1_384_384_8_48_k_cache_upd_rsci_wadr_d_1,
      we_d => attention_5_1_384_384_8_48_k_cache_upd_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => attention_5_1_384_384_8_48_k_cache_upd_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => attention_5_1_384_384_8_48_k_cache_upd_rsci_re_d_iff
    );
  attention_5_1_384_384_8_48_k_cache_upd_rsci_q <= attention_5_1_384_384_8_48_k_cache_upd_rsc_q;
  attention_5_1_384_384_8_48_k_cache_upd_rsc_radr <= attention_5_1_384_384_8_48_k_cache_upd_rsci_radr;
  attention_5_1_384_384_8_48_k_cache_upd_rsc_d <= attention_5_1_384_384_8_48_k_cache_upd_rsci_d;
  attention_5_1_384_384_8_48_k_cache_upd_rsc_wadr <= attention_5_1_384_384_8_48_k_cache_upd_rsci_wadr;
  attention_5_1_384_384_8_48_k_cache_upd_rsci_d_d_1 <= attention_5_1_384_384_8_48_k_cache_upd_rsci_d_d;
  attention_5_1_384_384_8_48_k_cache_upd_rsci_q_d <= attention_5_1_384_384_8_48_k_cache_upd_rsci_q_d_1;
  attention_5_1_384_384_8_48_k_cache_upd_rsci_radr_d_1 <= attention_5_1_384_384_8_48_k_cache_upd_rsci_radr_d;
  attention_5_1_384_384_8_48_k_cache_upd_rsci_wadr_d_1 <= attention_5_1_384_384_8_48_k_cache_upd_rsci_wadr_d;

  attention_5_1_384_384_8_48_v_cache_upd_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_15_12_40_2304_1_2304_40_1_gen
    PORT MAP(
      clken => attention_5_1_384_384_8_48_v_cache_upd_rsc_clken,
      q => attention_5_1_384_384_8_48_v_cache_upd_rsci_q,
      re => attention_5_1_384_384_8_48_v_cache_upd_rsc_re,
      radr => attention_5_1_384_384_8_48_v_cache_upd_rsci_radr,
      we => attention_5_1_384_384_8_48_v_cache_upd_rsc_we,
      d => attention_5_1_384_384_8_48_v_cache_upd_rsci_d,
      wadr => attention_5_1_384_384_8_48_v_cache_upd_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => attention_5_1_384_384_8_48_v_cache_upd_rsci_d_d_1,
      q_d => attention_5_1_384_384_8_48_v_cache_upd_rsci_q_d_1,
      radr_d => attention_5_1_384_384_8_48_v_cache_upd_rsci_radr_d_1,
      re_d => attention_5_1_384_384_8_48_v_cache_upd_rsci_re_d_iff,
      wadr_d => attention_5_1_384_384_8_48_v_cache_upd_rsci_wadr_d_1,
      we_d => attention_5_1_384_384_8_48_k_cache_upd_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => attention_5_1_384_384_8_48_k_cache_upd_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => attention_5_1_384_384_8_48_v_cache_upd_rsci_re_d_iff
    );
  attention_5_1_384_384_8_48_v_cache_upd_rsci_q <= attention_5_1_384_384_8_48_v_cache_upd_rsc_q;
  attention_5_1_384_384_8_48_v_cache_upd_rsc_radr <= attention_5_1_384_384_8_48_v_cache_upd_rsci_radr;
  attention_5_1_384_384_8_48_v_cache_upd_rsc_d <= attention_5_1_384_384_8_48_v_cache_upd_rsci_d;
  attention_5_1_384_384_8_48_v_cache_upd_rsc_wadr <= attention_5_1_384_384_8_48_v_cache_upd_rsci_wadr;
  attention_5_1_384_384_8_48_v_cache_upd_rsci_d_d_1 <= attention_5_1_384_384_8_48_v_cache_upd_rsci_d_d;
  attention_5_1_384_384_8_48_v_cache_upd_rsci_q_d <= attention_5_1_384_384_8_48_v_cache_upd_rsci_q_d_1;
  attention_5_1_384_384_8_48_v_cache_upd_rsci_radr_d_1 <= attention_5_1_384_384_8_48_v_cache_upd_rsci_radr_d;
  attention_5_1_384_384_8_48_v_cache_upd_rsci_wadr_d_1 <= attention_5_1_384_384_8_48_v_cache_upd_rsci_wadr_d;

  attention_5_1_384_384_8_48_k_proj_transposed_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_16_12_40_2304_1_2304_40_1_gen
    PORT MAP(
      clken => attention_5_1_384_384_8_48_k_proj_transposed_rsc_clken,
      q => attention_5_1_384_384_8_48_k_proj_transposed_rsci_q,
      re => attention_5_1_384_384_8_48_k_proj_transposed_rsc_re,
      radr => attention_5_1_384_384_8_48_k_proj_transposed_rsci_radr,
      we => attention_5_1_384_384_8_48_k_proj_transposed_rsc_we,
      d => attention_5_1_384_384_8_48_k_proj_transposed_rsci_d,
      wadr => attention_5_1_384_384_8_48_k_proj_transposed_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => attention_5_1_384_384_8_48_k_proj_transposed_rsci_d_d,
      q_d => attention_5_1_384_384_8_48_k_proj_transposed_rsci_q_d_1,
      radr_d => attention_5_1_384_384_8_48_k_proj_transposed_rsci_radr_d_1,
      re_d => attention_5_1_384_384_8_48_q_embed_rsci_re_d_iff,
      wadr_d => attention_5_1_384_384_8_48_k_proj_transposed_rsci_wadr_d_1,
      we_d => attention_5_1_384_384_8_48_k_proj_transposed_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => attention_5_1_384_384_8_48_k_proj_transposed_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => attention_5_1_384_384_8_48_q_embed_rsci_re_d_iff
    );
  attention_5_1_384_384_8_48_k_proj_transposed_rsci_q <= attention_5_1_384_384_8_48_k_proj_transposed_rsc_q;
  attention_5_1_384_384_8_48_k_proj_transposed_rsc_radr <= attention_5_1_384_384_8_48_k_proj_transposed_rsci_radr;
  attention_5_1_384_384_8_48_k_proj_transposed_rsc_d <= attention_5_1_384_384_8_48_k_proj_transposed_rsci_d;
  attention_5_1_384_384_8_48_k_proj_transposed_rsc_wadr <= attention_5_1_384_384_8_48_k_proj_transposed_rsci_wadr;
  attention_5_1_384_384_8_48_k_proj_transposed_rsci_d_d <= attention_5_1_384_384_8_48_k_cache_upd_rsci_q_d;
  attention_5_1_384_384_8_48_k_proj_transposed_rsci_q_d <= attention_5_1_384_384_8_48_k_proj_transposed_rsci_q_d_1;
  attention_5_1_384_384_8_48_k_proj_transposed_rsci_radr_d_1 <= attention_5_1_384_384_8_48_k_proj_transposed_rsci_radr_d;
  attention_5_1_384_384_8_48_k_proj_transposed_rsci_wadr_d_1 <= attention_5_1_384_384_8_48_k_proj_transposed_rsci_wadr_d;

  attention_5_1_384_384_8_48_attn_weights_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_17_6_40_48_1_48_40_1_gen
    PORT MAP(
      clken => attention_5_1_384_384_8_48_attn_weights_rsc_clken,
      q => attention_5_1_384_384_8_48_attn_weights_rsci_q,
      re => attention_5_1_384_384_8_48_attn_weights_rsc_re,
      radr => attention_5_1_384_384_8_48_attn_weights_rsci_radr,
      we => attention_5_1_384_384_8_48_attn_weights_rsc_we,
      d => attention_5_1_384_384_8_48_attn_weights_rsci_d,
      wadr => attention_5_1_384_384_8_48_attn_weights_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => attention_5_1_384_384_8_48_attn_weights_rsci_d_d_1,
      q_d => attention_5_1_384_384_8_48_attn_weights_rsci_q_d_1,
      radr_d => attention_5_1_384_384_8_48_attn_weights_rsci_radr_d_1,
      re_d => attention_5_1_384_384_8_48_attn_weights_rsci_re_d_iff,
      wadr_d => attention_5_1_384_384_8_48_attn_weights_rsci_wadr_d_1,
      we_d => attention_5_1_384_384_8_48_attn_weights_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => attention_5_1_384_384_8_48_attn_weights_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => attention_5_1_384_384_8_48_attn_weights_rsci_re_d_iff
    );
  attention_5_1_384_384_8_48_attn_weights_rsci_q <= attention_5_1_384_384_8_48_attn_weights_rsc_q;
  attention_5_1_384_384_8_48_attn_weights_rsc_radr <= attention_5_1_384_384_8_48_attn_weights_rsci_radr;
  attention_5_1_384_384_8_48_attn_weights_rsc_d <= attention_5_1_384_384_8_48_attn_weights_rsci_d;
  attention_5_1_384_384_8_48_attn_weights_rsc_wadr <= attention_5_1_384_384_8_48_attn_weights_rsci_wadr;
  attention_5_1_384_384_8_48_attn_weights_rsci_d_d_1 <= attention_5_1_384_384_8_48_attn_weights_rsci_d_d;
  attention_5_1_384_384_8_48_attn_weights_rsci_q_d <= attention_5_1_384_384_8_48_attn_weights_rsci_q_d_1;
  attention_5_1_384_384_8_48_attn_weights_rsci_radr_d_1 <= attention_5_1_384_384_8_48_attn_weights_rsci_radr_d;
  attention_5_1_384_384_8_48_attn_weights_rsci_wadr_d_1 <= attention_5_1_384_384_8_48_attn_weights_rsci_wadr_d;

  attention_5_1_384_384_8_48_attn_output_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_18_9_40_384_1_384_40_1_gen
    PORT MAP(
      clken => attention_5_1_384_384_8_48_attn_output_rsc_clken,
      q => attention_5_1_384_384_8_48_attn_output_rsci_q,
      re => attention_5_1_384_384_8_48_attn_output_rsc_re,
      radr => attention_5_1_384_384_8_48_attn_output_rsci_radr,
      we => attention_5_1_384_384_8_48_attn_output_rsc_we,
      d => attention_5_1_384_384_8_48_attn_output_rsci_d,
      wadr => attention_5_1_384_384_8_48_attn_output_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => attention_5_1_384_384_8_48_attn_output_rsci_d_d_1,
      q_d => attention_5_1_384_384_8_48_attn_output_rsci_q_d_1,
      radr_d => attention_5_1_384_384_8_48_attn_output_rsci_radr_d_1,
      re_d => attention_5_1_384_384_8_48_attn_output_rsci_re_d_iff,
      wadr_d => attention_5_1_384_384_8_48_attn_output_rsci_wadr_d_1,
      we_d => attention_5_1_384_384_8_48_attn_output_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => attention_5_1_384_384_8_48_attn_output_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => attention_5_1_384_384_8_48_attn_output_rsci_re_d_iff
    );
  attention_5_1_384_384_8_48_attn_output_rsci_q <= attention_5_1_384_384_8_48_attn_output_rsc_q;
  attention_5_1_384_384_8_48_attn_output_rsc_radr <= attention_5_1_384_384_8_48_attn_output_rsci_radr;
  attention_5_1_384_384_8_48_attn_output_rsc_d <= attention_5_1_384_384_8_48_attn_output_rsci_d;
  attention_5_1_384_384_8_48_attn_output_rsc_wadr <= attention_5_1_384_384_8_48_attn_output_rsci_wadr;
  attention_5_1_384_384_8_48_attn_output_rsci_d_d_1 <= attention_5_1_384_384_8_48_attn_output_rsci_d_d;
  attention_5_1_384_384_8_48_attn_output_rsci_q_d <= attention_5_1_384_384_8_48_attn_output_rsci_q_d_1;
  attention_5_1_384_384_8_48_attn_output_rsci_radr_d_1 <= attention_5_1_384_384_8_48_attn_output_rsci_radr_d;
  attention_5_1_384_384_8_48_attn_output_rsci_wadr_d_1 <= attention_5_1_384_384_8_48_attn_output_rsci_wadr_d;

  attention_5_1_384_384_8_48_attn_output_2D_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_19_9_40_384_1_384_40_1_gen
    PORT MAP(
      clken => attention_5_1_384_384_8_48_attn_output_2D_rsc_clken,
      q => attention_5_1_384_384_8_48_attn_output_2D_rsci_q,
      re => attention_5_1_384_384_8_48_attn_output_2D_rsc_re,
      radr => attention_5_1_384_384_8_48_attn_output_2D_rsci_radr,
      we => attention_5_1_384_384_8_48_attn_output_2D_rsc_we,
      d => attention_5_1_384_384_8_48_attn_output_2D_rsci_d,
      wadr => attention_5_1_384_384_8_48_attn_output_2D_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => attention_5_1_384_384_8_48_attn_output_2D_rsci_d_d_1,
      q_d => attention_5_1_384_384_8_48_attn_output_2D_rsci_q_d_1,
      radr_d => attention_5_1_384_384_8_48_attn_output_2D_rsci_radr_d_1,
      re_d => attention_5_1_384_384_8_48_attn_output_2D_rsci_re_d_iff,
      wadr_d => attention_5_1_384_384_8_48_attn_output_2D_rsci_wadr_d_1,
      we_d => attention_5_1_384_384_8_48_attn_output_2D_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => attention_5_1_384_384_8_48_attn_output_2D_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => attention_5_1_384_384_8_48_attn_output_2D_rsci_re_d_iff
    );
  attention_5_1_384_384_8_48_attn_output_2D_rsci_q <= attention_5_1_384_384_8_48_attn_output_2D_rsc_q;
  attention_5_1_384_384_8_48_attn_output_2D_rsc_radr <= attention_5_1_384_384_8_48_attn_output_2D_rsci_radr;
  attention_5_1_384_384_8_48_attn_output_2D_rsc_d <= attention_5_1_384_384_8_48_attn_output_2D_rsci_d;
  attention_5_1_384_384_8_48_attn_output_2D_rsc_wadr <= attention_5_1_384_384_8_48_attn_output_2D_rsci_wadr;
  attention_5_1_384_384_8_48_attn_output_2D_rsci_d_d_1 <= attention_5_1_384_384_8_48_attn_output_2D_rsci_d_d;
  attention_5_1_384_384_8_48_attn_output_2D_rsci_q_d <= attention_5_1_384_384_8_48_attn_output_2D_rsci_q_d_1;
  attention_5_1_384_384_8_48_attn_output_2D_rsci_radr_d_1 <= attention_5_1_384_384_8_48_attn_output_2D_rsci_radr_d;
  attention_5_1_384_384_8_48_attn_output_2D_rsci_wadr_d_1 <= attention_5_1_384_384_8_48_attn_output_2D_rsci_wadr_d;

  attention_5_1_384_384_8_48_quantized_final_output_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_20_9_8_384_1_384_8_1_gen
    PORT MAP(
      clken => attention_5_1_384_384_8_48_quantized_final_output_rsc_clken,
      q => attention_5_1_384_384_8_48_quantized_final_output_rsci_q,
      re => attention_5_1_384_384_8_48_quantized_final_output_rsc_re,
      radr => attention_5_1_384_384_8_48_quantized_final_output_rsci_radr,
      we => attention_5_1_384_384_8_48_quantized_final_output_rsc_we,
      d => attention_5_1_384_384_8_48_quantized_final_output_rsci_d,
      wadr => attention_5_1_384_384_8_48_quantized_final_output_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => attention_5_1_384_384_8_48_quantized_final_output_rsci_d_d_1,
      q_d => attention_5_1_384_384_8_48_quantized_final_output_rsci_q_d_1,
      radr_d => attention_5_1_384_384_8_48_quantized_final_output_rsci_radr_d_1,
      re_d => attention_5_1_384_384_8_48_quantized_final_output_rsci_re_d_iff,
      wadr_d => attention_5_1_384_384_8_48_quantized_final_output_rsci_wadr_d_1,
      we_d => attention_5_1_384_384_8_48_quantized_final_output_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => attention_5_1_384_384_8_48_quantized_final_output_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => attention_5_1_384_384_8_48_quantized_final_output_rsci_re_d_iff
    );
  attention_5_1_384_384_8_48_quantized_final_output_rsci_q <= attention_5_1_384_384_8_48_quantized_final_output_rsc_q;
  attention_5_1_384_384_8_48_quantized_final_output_rsc_radr <= attention_5_1_384_384_8_48_quantized_final_output_rsci_radr;
  attention_5_1_384_384_8_48_quantized_final_output_rsc_d <= attention_5_1_384_384_8_48_quantized_final_output_rsci_d;
  attention_5_1_384_384_8_48_quantized_final_output_rsc_wadr <= attention_5_1_384_384_8_48_quantized_final_output_rsci_wadr;
  attention_5_1_384_384_8_48_quantized_final_output_rsci_d_d_1 <= attention_5_1_384_384_8_48_quantized_final_output_rsci_d_d;
  attention_5_1_384_384_8_48_quantized_final_output_rsci_q_d <= attention_5_1_384_384_8_48_quantized_final_output_rsci_q_d_1;
  attention_5_1_384_384_8_48_quantized_final_output_rsci_radr_d_1 <= attention_5_1_384_384_8_48_quantized_final_output_rsci_radr_d;
  attention_5_1_384_384_8_48_quantized_final_output_rsci_wadr_d_1 <= attention_5_1_384_384_8_48_quantized_final_output_rsci_wadr_d;

  apply_rotary_pos_emb_1_8_48_rotated_q_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_21_9_40_384_1_384_40_1_gen
    PORT MAP(
      clken => apply_rotary_pos_emb_1_8_48_rotated_q_rsc_clken,
      q => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_q,
      re => apply_rotary_pos_emb_1_8_48_rotated_q_rsc_re,
      radr => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_radr,
      we => apply_rotary_pos_emb_1_8_48_rotated_q_rsc_we,
      d => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_d,
      wadr => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_d_d_1,
      q_d => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_q_d_1,
      radr_d => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_radr_d_1,
      re_d => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_re_d_iff,
      wadr_d => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_wadr_d_1,
      we_d => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_re_d_iff
    );
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_q <= apply_rotary_pos_emb_1_8_48_rotated_q_rsc_q;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsc_radr <= apply_rotary_pos_emb_1_8_48_rotated_q_rsci_radr;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsc_d <= apply_rotary_pos_emb_1_8_48_rotated_q_rsci_d;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsc_wadr <= apply_rotary_pos_emb_1_8_48_rotated_q_rsci_wadr;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_d_d_1 <= apply_rotary_pos_emb_1_8_48_rotated_q_rsci_d_d;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_q_d <= apply_rotary_pos_emb_1_8_48_rotated_q_rsci_q_d_1;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_radr_d_1 <= apply_rotary_pos_emb_1_8_48_rotated_q_rsci_radr_d;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_wadr_d_1 <= apply_rotary_pos_emb_1_8_48_rotated_q_rsci_wadr_d;

  apply_rotary_pos_emb_1_8_48_rotated_k_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_22_9_40_384_1_384_40_1_gen
    PORT MAP(
      clken => apply_rotary_pos_emb_1_8_48_rotated_k_rsc_clken,
      q => apply_rotary_pos_emb_1_8_48_rotated_k_rsci_q,
      re => apply_rotary_pos_emb_1_8_48_rotated_k_rsc_re,
      radr => apply_rotary_pos_emb_1_8_48_rotated_k_rsci_radr,
      we => apply_rotary_pos_emb_1_8_48_rotated_k_rsc_we,
      d => apply_rotary_pos_emb_1_8_48_rotated_k_rsci_d,
      wadr => apply_rotary_pos_emb_1_8_48_rotated_k_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => apply_rotary_pos_emb_1_8_48_rotated_k_rsci_d_d_1,
      q_d => apply_rotary_pos_emb_1_8_48_rotated_k_rsci_q_d_1,
      radr_d => apply_rotary_pos_emb_1_8_48_rotated_k_rsci_radr_d_1,
      re_d => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_re_d_iff,
      wadr_d => apply_rotary_pos_emb_1_8_48_rotated_k_rsci_wadr_d_1,
      we_d => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_re_d_iff
    );
  apply_rotary_pos_emb_1_8_48_rotated_k_rsci_q <= apply_rotary_pos_emb_1_8_48_rotated_k_rsc_q;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsc_radr <= apply_rotary_pos_emb_1_8_48_rotated_k_rsci_radr;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsc_d <= apply_rotary_pos_emb_1_8_48_rotated_k_rsci_d;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsc_wadr <= apply_rotary_pos_emb_1_8_48_rotated_k_rsci_wadr;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsci_d_d_1 <= apply_rotary_pos_emb_1_8_48_rotated_k_rsci_d_d;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsci_q_d <= apply_rotary_pos_emb_1_8_48_rotated_k_rsci_q_d_1;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsci_radr_d_1 <= apply_rotary_pos_emb_1_8_48_rotated_k_rsci_radr_d;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsci_wadr_d_1 <= apply_rotary_pos_emb_1_8_48_rotated_k_rsci_wadr_d;

  dut_core_inst : dut_core
    PORT MAP(
      clk => clk,
      en => en,
      rst => rst,
      strm_in_rsc_dat => dut_core_inst_strm_in_rsc_dat,
      strm_in_rsc_vld => strm_in_rsc_vld,
      strm_in_rsc_rdy => strm_in_rsc_rdy,
      strm_out_rsc_dat => dut_core_inst_strm_out_rsc_dat,
      strm_out_rsc_vld => strm_out_rsc_vld,
      strm_out_rsc_rdy => strm_out_rsc_rdy,
      input_rsci_clken_d => input_rsci_clken_d,
      input_rsci_d_d => dut_core_inst_input_rsci_d_d,
      input_rsci_q_d => dut_core_inst_input_rsci_q_d,
      input_rsci_radr_d => dut_core_inst_input_rsci_radr_d,
      input_rsci_wadr_d => dut_core_inst_input_rsci_wadr_d,
      output_rsci_d_d => dut_core_inst_output_rsci_d_d,
      output_rsci_q_d => dut_core_inst_output_rsci_q_d,
      output_rsci_radr_d => dut_core_inst_output_rsci_radr_d,
      output_rsci_wadr_d => dut_core_inst_output_rsci_wadr_d,
      attention_5_1_384_384_8_48_quantized_hidden_states_rsci_d_d => dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_d_d,
      attention_5_1_384_384_8_48_quantized_hidden_states_rsci_q_d => dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_q_d,
      attention_5_1_384_384_8_48_quantized_hidden_states_rsci_radr_d => dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_radr_d,
      attention_5_1_384_384_8_48_quantized_hidden_states_rsci_wadr_d => dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_wadr_d,
      attention_5_1_384_384_8_48_q_proj_re_rsci_d_d => dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_d_d,
      attention_5_1_384_384_8_48_q_proj_re_rsci_q_d => dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_q_d,
      attention_5_1_384_384_8_48_q_proj_re_rsci_radr_d => dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_radr_d,
      attention_5_1_384_384_8_48_q_proj_re_rsci_wadr_d => dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_wadr_d,
      attention_5_1_384_384_8_48_k_proj_re_rsci_d_d => dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_d_d,
      attention_5_1_384_384_8_48_k_proj_re_rsci_q_d => dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_q_d,
      attention_5_1_384_384_8_48_k_proj_re_rsci_radr_d => dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_radr_d,
      attention_5_1_384_384_8_48_k_proj_re_rsci_wadr_d => dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_wadr_d,
      attention_5_1_384_384_8_48_v_proj_re_rsci_d_d => dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_d_d,
      attention_5_1_384_384_8_48_v_proj_re_rsci_q_d => dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_q_d,
      attention_5_1_384_384_8_48_v_proj_re_rsci_radr_d => dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_radr_d,
      attention_5_1_384_384_8_48_v_proj_re_rsci_wadr_d => dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_wadr_d,
      attention_5_1_384_384_8_48_q_proj_rsci_q_d => dut_core_inst_attention_5_1_384_384_8_48_q_proj_rsci_q_d,
      attention_5_1_384_384_8_48_q_proj_rsci_radr_d => dut_core_inst_attention_5_1_384_384_8_48_q_proj_rsci_radr_d,
      attention_5_1_384_384_8_48_q_proj_rsci_wadr_d => dut_core_inst_attention_5_1_384_384_8_48_q_proj_rsci_wadr_d,
      attention_5_1_384_384_8_48_k_proj_rsci_q_d => dut_core_inst_attention_5_1_384_384_8_48_k_proj_rsci_q_d,
      attention_5_1_384_384_8_48_k_proj_rsci_radr_d => dut_core_inst_attention_5_1_384_384_8_48_k_proj_rsci_radr_d,
      attention_5_1_384_384_8_48_k_proj_rsci_wadr_d => dut_core_inst_attention_5_1_384_384_8_48_k_proj_rsci_wadr_d,
      attention_5_1_384_384_8_48_v_proj_rsci_q_d => dut_core_inst_attention_5_1_384_384_8_48_v_proj_rsci_q_d,
      attention_5_1_384_384_8_48_v_proj_rsci_radr_d => dut_core_inst_attention_5_1_384_384_8_48_v_proj_rsci_radr_d,
      attention_5_1_384_384_8_48_v_proj_rsci_wadr_d => dut_core_inst_attention_5_1_384_384_8_48_v_proj_rsci_wadr_d,
      attention_5_1_384_384_8_48_q_embed_rsci_d_d => dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_d_d,
      attention_5_1_384_384_8_48_q_embed_rsci_q_d => dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_q_d,
      attention_5_1_384_384_8_48_q_embed_rsci_radr_d => dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_radr_d,
      attention_5_1_384_384_8_48_q_embed_rsci_wadr_d => dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_wadr_d,
      attention_5_1_384_384_8_48_k_embed_rsci_d_d => dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_d_d,
      attention_5_1_384_384_8_48_k_embed_rsci_q_d => dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_q_d,
      attention_5_1_384_384_8_48_k_embed_rsci_radr_d => dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_radr_d,
      attention_5_1_384_384_8_48_k_embed_rsci_wadr_d => dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_wadr_d,
      attention_5_1_384_384_8_48_k_cache_upd_rsci_d_d => dut_core_inst_attention_5_1_384_384_8_48_k_cache_upd_rsci_d_d,
      attention_5_1_384_384_8_48_k_cache_upd_rsci_radr_d => dut_core_inst_attention_5_1_384_384_8_48_k_cache_upd_rsci_radr_d,
      attention_5_1_384_384_8_48_k_cache_upd_rsci_wadr_d => dut_core_inst_attention_5_1_384_384_8_48_k_cache_upd_rsci_wadr_d,
      attention_5_1_384_384_8_48_v_cache_upd_rsci_d_d => dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_d_d,
      attention_5_1_384_384_8_48_v_cache_upd_rsci_q_d => dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_q_d,
      attention_5_1_384_384_8_48_v_cache_upd_rsci_radr_d => dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_radr_d,
      attention_5_1_384_384_8_48_v_cache_upd_rsci_wadr_d => dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_wadr_d,
      attention_5_1_384_384_8_48_k_proj_transposed_rsci_q_d => dut_core_inst_attention_5_1_384_384_8_48_k_proj_transposed_rsci_q_d,
      attention_5_1_384_384_8_48_k_proj_transposed_rsci_radr_d => dut_core_inst_attention_5_1_384_384_8_48_k_proj_transposed_rsci_radr_d,
      attention_5_1_384_384_8_48_k_proj_transposed_rsci_wadr_d => dut_core_inst_attention_5_1_384_384_8_48_k_proj_transposed_rsci_wadr_d,
      attention_5_1_384_384_8_48_attn_weights_rsci_d_d => dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_d_d,
      attention_5_1_384_384_8_48_attn_weights_rsci_q_d => dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_q_d,
      attention_5_1_384_384_8_48_attn_weights_rsci_radr_d => dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_radr_d,
      attention_5_1_384_384_8_48_attn_weights_rsci_wadr_d => dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_wadr_d,
      attention_5_1_384_384_8_48_attn_output_rsci_d_d => dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_d_d,
      attention_5_1_384_384_8_48_attn_output_rsci_q_d => dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_q_d,
      attention_5_1_384_384_8_48_attn_output_rsci_radr_d => dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_radr_d,
      attention_5_1_384_384_8_48_attn_output_rsci_wadr_d => dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_wadr_d,
      attention_5_1_384_384_8_48_attn_output_2D_rsci_d_d => dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_d_d,
      attention_5_1_384_384_8_48_attn_output_2D_rsci_q_d => dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_q_d,
      attention_5_1_384_384_8_48_attn_output_2D_rsci_radr_d => dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_radr_d,
      attention_5_1_384_384_8_48_attn_output_2D_rsci_wadr_d => dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_wadr_d,
      attention_5_1_384_384_8_48_quantized_final_output_rsci_d_d => dut_core_inst_attention_5_1_384_384_8_48_quantized_final_output_rsci_d_d,
      attention_5_1_384_384_8_48_quantized_final_output_rsci_q_d => dut_core_inst_attention_5_1_384_384_8_48_quantized_final_output_rsci_q_d,
      attention_5_1_384_384_8_48_quantized_final_output_rsci_radr_d => dut_core_inst_attention_5_1_384_384_8_48_quantized_final_output_rsci_radr_d,
      attention_5_1_384_384_8_48_quantized_final_output_rsci_wadr_d => dut_core_inst_attention_5_1_384_384_8_48_quantized_final_output_rsci_wadr_d,
      apply_rotary_pos_emb_1_8_48_rotated_q_rsci_d_d => dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_d_d,
      apply_rotary_pos_emb_1_8_48_rotated_q_rsci_q_d => dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_q_d,
      apply_rotary_pos_emb_1_8_48_rotated_q_rsci_radr_d => dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_radr_d,
      apply_rotary_pos_emb_1_8_48_rotated_q_rsci_wadr_d => dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_wadr_d,
      apply_rotary_pos_emb_1_8_48_rotated_k_rsci_d_d => dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_d_d,
      apply_rotary_pos_emb_1_8_48_rotated_k_rsci_q_d => dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_q_d,
      apply_rotary_pos_emb_1_8_48_rotated_k_rsci_radr_d => dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_radr_d,
      apply_rotary_pos_emb_1_8_48_rotated_k_rsci_wadr_d => dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_wadr_d,
      rms_norm_384_div_cmp_a => dut_core_inst_rms_norm_384_div_cmp_a,
      rms_norm_384_div_cmp_b => dut_core_inst_rms_norm_384_div_cmp_b,
      rms_norm_384_div_cmp_z => dut_core_inst_rms_norm_384_div_cmp_z,
      input_rsci_re_d_pff => input_rsci_re_d_iff,
      input_rsci_we_d_pff => input_rsci_we_d_iff,
      output_rsci_re_d_pff => output_rsci_re_d_iff,
      output_rsci_we_d_pff => output_rsci_we_d_iff,
      attention_5_1_384_384_8_48_quantized_hidden_states_rsci_re_d_pff => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_re_d_iff,
      attention_5_1_384_384_8_48_quantized_hidden_states_rsci_we_d_pff => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_we_d_iff,
      attention_5_1_384_384_8_48_q_proj_re_rsci_re_d_pff => attention_5_1_384_384_8_48_q_proj_re_rsci_re_d_iff,
      attention_5_1_384_384_8_48_q_proj_re_rsci_we_d_pff => attention_5_1_384_384_8_48_q_proj_re_rsci_we_d_iff,
      attention_5_1_384_384_8_48_k_proj_re_rsci_we_d_pff => attention_5_1_384_384_8_48_k_proj_re_rsci_we_d_iff,
      attention_5_1_384_384_8_48_v_proj_re_rsci_re_d_pff => attention_5_1_384_384_8_48_v_proj_re_rsci_re_d_iff,
      attention_5_1_384_384_8_48_v_proj_re_rsci_we_d_pff => attention_5_1_384_384_8_48_v_proj_re_rsci_we_d_iff,
      attention_5_1_384_384_8_48_q_proj_rsci_re_d_pff => attention_5_1_384_384_8_48_q_proj_rsci_re_d_iff,
      attention_5_1_384_384_8_48_q_proj_rsci_we_d_pff => attention_5_1_384_384_8_48_q_proj_rsci_we_d_iff,
      attention_5_1_384_384_8_48_v_proj_rsci_re_d_pff => attention_5_1_384_384_8_48_v_proj_rsci_re_d_iff,
      attention_5_1_384_384_8_48_v_proj_rsci_we_d_pff => attention_5_1_384_384_8_48_v_proj_rsci_we_d_iff,
      attention_5_1_384_384_8_48_q_embed_rsci_re_d_pff => attention_5_1_384_384_8_48_q_embed_rsci_re_d_iff,
      attention_5_1_384_384_8_48_q_embed_rsci_we_d_pff => attention_5_1_384_384_8_48_q_embed_rsci_we_d_iff,
      attention_5_1_384_384_8_48_k_embed_rsci_re_d_pff => attention_5_1_384_384_8_48_k_embed_rsci_re_d_iff,
      attention_5_1_384_384_8_48_k_cache_upd_rsci_re_d_pff => attention_5_1_384_384_8_48_k_cache_upd_rsci_re_d_iff,
      attention_5_1_384_384_8_48_k_cache_upd_rsci_we_d_pff => attention_5_1_384_384_8_48_k_cache_upd_rsci_we_d_iff,
      attention_5_1_384_384_8_48_v_cache_upd_rsci_re_d_pff => attention_5_1_384_384_8_48_v_cache_upd_rsci_re_d_iff,
      attention_5_1_384_384_8_48_k_proj_transposed_rsci_we_d_pff => attention_5_1_384_384_8_48_k_proj_transposed_rsci_we_d_iff,
      attention_5_1_384_384_8_48_attn_weights_rsci_re_d_pff => attention_5_1_384_384_8_48_attn_weights_rsci_re_d_iff,
      attention_5_1_384_384_8_48_attn_weights_rsci_we_d_pff => attention_5_1_384_384_8_48_attn_weights_rsci_we_d_iff,
      attention_5_1_384_384_8_48_attn_output_rsci_re_d_pff => attention_5_1_384_384_8_48_attn_output_rsci_re_d_iff,
      attention_5_1_384_384_8_48_attn_output_rsci_we_d_pff => attention_5_1_384_384_8_48_attn_output_rsci_we_d_iff,
      attention_5_1_384_384_8_48_attn_output_2D_rsci_re_d_pff => attention_5_1_384_384_8_48_attn_output_2D_rsci_re_d_iff,
      attention_5_1_384_384_8_48_attn_output_2D_rsci_we_d_pff => attention_5_1_384_384_8_48_attn_output_2D_rsci_we_d_iff,
      attention_5_1_384_384_8_48_quantized_final_output_rsci_re_d_pff => attention_5_1_384_384_8_48_quantized_final_output_rsci_re_d_iff,
      attention_5_1_384_384_8_48_quantized_final_output_rsci_we_d_pff => attention_5_1_384_384_8_48_quantized_final_output_rsci_we_d_iff,
      apply_rotary_pos_emb_1_8_48_rotated_q_rsci_re_d_pff => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_re_d_iff,
      apply_rotary_pos_emb_1_8_48_rotated_q_rsci_we_d_pff => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_we_d_iff
    );
  dut_core_inst_strm_in_rsc_dat <= strm_in_rsc_dat;
  strm_out_rsc_dat <= dut_core_inst_strm_out_rsc_dat;
  input_rsci_d_d <= dut_core_inst_input_rsci_d_d;
  dut_core_inst_input_rsci_q_d <= input_rsci_q_d;
  input_rsci_radr_d <= dut_core_inst_input_rsci_radr_d;
  input_rsci_wadr_d <= dut_core_inst_input_rsci_wadr_d;
  output_rsci_d_d <= dut_core_inst_output_rsci_d_d;
  dut_core_inst_output_rsci_q_d <= output_rsci_q_d;
  output_rsci_radr_d <= dut_core_inst_output_rsci_radr_d;
  output_rsci_wadr_d <= dut_core_inst_output_rsci_wadr_d;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_d_d <= dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_d_d;
  dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_q_d <= attention_5_1_384_384_8_48_quantized_hidden_states_rsci_q_d;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_radr_d <= dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_radr_d;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_wadr_d <= dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_wadr_d;
  attention_5_1_384_384_8_48_q_proj_re_rsci_d_d <= dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_d_d;
  dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_q_d <= attention_5_1_384_384_8_48_q_proj_re_rsci_q_d;
  attention_5_1_384_384_8_48_q_proj_re_rsci_radr_d <= dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_radr_d;
  attention_5_1_384_384_8_48_q_proj_re_rsci_wadr_d <= dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_wadr_d;
  attention_5_1_384_384_8_48_k_proj_re_rsci_d_d <= dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_d_d;
  dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_q_d <= attention_5_1_384_384_8_48_k_proj_re_rsci_q_d;
  attention_5_1_384_384_8_48_k_proj_re_rsci_radr_d <= dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_radr_d;
  attention_5_1_384_384_8_48_k_proj_re_rsci_wadr_d <= dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_wadr_d;
  attention_5_1_384_384_8_48_v_proj_re_rsci_d_d <= dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_d_d;
  dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_q_d <= attention_5_1_384_384_8_48_v_proj_re_rsci_q_d;
  attention_5_1_384_384_8_48_v_proj_re_rsci_radr_d <= dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_radr_d;
  attention_5_1_384_384_8_48_v_proj_re_rsci_wadr_d <= dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_wadr_d;
  dut_core_inst_attention_5_1_384_384_8_48_q_proj_rsci_q_d <= attention_5_1_384_384_8_48_q_proj_rsci_q_d;
  attention_5_1_384_384_8_48_q_proj_rsci_radr_d <= dut_core_inst_attention_5_1_384_384_8_48_q_proj_rsci_radr_d;
  attention_5_1_384_384_8_48_q_proj_rsci_wadr_d <= dut_core_inst_attention_5_1_384_384_8_48_q_proj_rsci_wadr_d;
  dut_core_inst_attention_5_1_384_384_8_48_k_proj_rsci_q_d <= attention_5_1_384_384_8_48_k_proj_rsci_q_d;
  attention_5_1_384_384_8_48_k_proj_rsci_radr_d <= dut_core_inst_attention_5_1_384_384_8_48_k_proj_rsci_radr_d;
  attention_5_1_384_384_8_48_k_proj_rsci_wadr_d <= dut_core_inst_attention_5_1_384_384_8_48_k_proj_rsci_wadr_d;
  dut_core_inst_attention_5_1_384_384_8_48_v_proj_rsci_q_d <= attention_5_1_384_384_8_48_v_proj_rsci_q_d;
  attention_5_1_384_384_8_48_v_proj_rsci_radr_d <= dut_core_inst_attention_5_1_384_384_8_48_v_proj_rsci_radr_d;
  attention_5_1_384_384_8_48_v_proj_rsci_wadr_d <= dut_core_inst_attention_5_1_384_384_8_48_v_proj_rsci_wadr_d;
  attention_5_1_384_384_8_48_q_embed_rsci_d_d <= dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_d_d;
  dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_q_d <= attention_5_1_384_384_8_48_q_embed_rsci_q_d;
  attention_5_1_384_384_8_48_q_embed_rsci_radr_d <= dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_radr_d;
  attention_5_1_384_384_8_48_q_embed_rsci_wadr_d <= dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_wadr_d;
  attention_5_1_384_384_8_48_k_embed_rsci_d_d <= dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_d_d;
  dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_q_d <= attention_5_1_384_384_8_48_k_embed_rsci_q_d;
  attention_5_1_384_384_8_48_k_embed_rsci_radr_d <= dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_radr_d;
  attention_5_1_384_384_8_48_k_embed_rsci_wadr_d <= dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_wadr_d;
  attention_5_1_384_384_8_48_k_cache_upd_rsci_d_d <= dut_core_inst_attention_5_1_384_384_8_48_k_cache_upd_rsci_d_d;
  attention_5_1_384_384_8_48_k_cache_upd_rsci_radr_d <= dut_core_inst_attention_5_1_384_384_8_48_k_cache_upd_rsci_radr_d;
  attention_5_1_384_384_8_48_k_cache_upd_rsci_wadr_d <= dut_core_inst_attention_5_1_384_384_8_48_k_cache_upd_rsci_wadr_d;
  attention_5_1_384_384_8_48_v_cache_upd_rsci_d_d <= dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_d_d;
  dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_q_d <= attention_5_1_384_384_8_48_v_cache_upd_rsci_q_d;
  attention_5_1_384_384_8_48_v_cache_upd_rsci_radr_d <= dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_radr_d;
  attention_5_1_384_384_8_48_v_cache_upd_rsci_wadr_d <= dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_wadr_d;
  dut_core_inst_attention_5_1_384_384_8_48_k_proj_transposed_rsci_q_d <= attention_5_1_384_384_8_48_k_proj_transposed_rsci_q_d;
  attention_5_1_384_384_8_48_k_proj_transposed_rsci_radr_d <= dut_core_inst_attention_5_1_384_384_8_48_k_proj_transposed_rsci_radr_d;
  attention_5_1_384_384_8_48_k_proj_transposed_rsci_wadr_d <= dut_core_inst_attention_5_1_384_384_8_48_k_proj_transposed_rsci_wadr_d;
  attention_5_1_384_384_8_48_attn_weights_rsci_d_d <= dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_d_d;
  dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_q_d <= attention_5_1_384_384_8_48_attn_weights_rsci_q_d;
  attention_5_1_384_384_8_48_attn_weights_rsci_radr_d <= dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_radr_d;
  attention_5_1_384_384_8_48_attn_weights_rsci_wadr_d <= dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_wadr_d;
  attention_5_1_384_384_8_48_attn_output_rsci_d_d <= dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_d_d;
  dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_q_d <= attention_5_1_384_384_8_48_attn_output_rsci_q_d;
  attention_5_1_384_384_8_48_attn_output_rsci_radr_d <= dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_radr_d;
  attention_5_1_384_384_8_48_attn_output_rsci_wadr_d <= dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_wadr_d;
  attention_5_1_384_384_8_48_attn_output_2D_rsci_d_d <= dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_d_d;
  dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_q_d <= attention_5_1_384_384_8_48_attn_output_2D_rsci_q_d;
  attention_5_1_384_384_8_48_attn_output_2D_rsci_radr_d <= dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_radr_d;
  attention_5_1_384_384_8_48_attn_output_2D_rsci_wadr_d <= dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_wadr_d;
  attention_5_1_384_384_8_48_quantized_final_output_rsci_d_d <= dut_core_inst_attention_5_1_384_384_8_48_quantized_final_output_rsci_d_d;
  dut_core_inst_attention_5_1_384_384_8_48_quantized_final_output_rsci_q_d <= attention_5_1_384_384_8_48_quantized_final_output_rsci_q_d;
  attention_5_1_384_384_8_48_quantized_final_output_rsci_radr_d <= dut_core_inst_attention_5_1_384_384_8_48_quantized_final_output_rsci_radr_d;
  attention_5_1_384_384_8_48_quantized_final_output_rsci_wadr_d <= dut_core_inst_attention_5_1_384_384_8_48_quantized_final_output_rsci_wadr_d;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_d_d <= dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_d_d;
  dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_q_d <= apply_rotary_pos_emb_1_8_48_rotated_q_rsci_q_d;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_radr_d <= dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_radr_d;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_wadr_d <= dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_wadr_d;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsci_d_d <= dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_d_d;
  dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_q_d <= apply_rotary_pos_emb_1_8_48_rotated_k_rsci_q_d;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsci_radr_d <= dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_radr_d;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsci_wadr_d <= dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_wadr_d;
  rms_norm_384_div_cmp_a <= dut_core_inst_rms_norm_384_div_cmp_a;
  rms_norm_384_div_cmp_b <= dut_core_inst_rms_norm_384_div_cmp_b;
  dut_core_inst_rms_norm_384_div_cmp_z <= rms_norm_384_div_cmp_z;

END v8;



