-- ----------------------------------------------------------------------
--  HLS HDL:        VHDL Netlister
--  HLS Version:    2024.1_2/1117371 Production Release
--  HLS Date:       Fri Jun 28 23:58:31 PDT 2024
-- 
--  Generated by:   as4329@ecelinux-16.ece.cornell.edu
--  Generated date: Mon Dec  2 19:47:54 2024
-- ----------------------------------------------------------------------

-- 
-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_22_9_40_384_1_384_40_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_22_9_40_384_1_384_40_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_22_9_40_384_1_384_40_1_gen;

ARCHITECTURE v14 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_22_9_40_384_1_384_40_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v14;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_21_9_40_384_1_384_40_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_21_9_40_384_1_384_40_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_21_9_40_384_1_384_40_1_gen;

ARCHITECTURE v14 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_21_9_40_384_1_384_40_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v14;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_20_9_8_384_1_384_8_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_20_9_8_384_1_384_8_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_20_9_8_384_1_384_8_1_gen;

ARCHITECTURE v14 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_20_9_8_384_1_384_8_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v14;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_19_9_40_384_1_384_40_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_19_9_40_384_1_384_40_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_19_9_40_384_1_384_40_1_gen;

ARCHITECTURE v14 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_19_9_40_384_1_384_40_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v14;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_18_9_40_384_1_384_40_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_18_9_40_384_1_384_40_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_18_9_40_384_1_384_40_1_gen;

ARCHITECTURE v14 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_18_9_40_384_1_384_40_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v14;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_17_6_40_48_1_48_40_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_17_6_40_48_1_48_40_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (5 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (5 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (5 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (5 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_17_6_40_48_1_48_40_1_gen;

ARCHITECTURE v14 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_17_6_40_48_1_48_40_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v14;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_16_12_40_2304_1_2304_40_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_16_12_40_2304_1_2304_40_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (11 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (11 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_16_12_40_2304_1_2304_40_1_gen;

ARCHITECTURE v14 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_16_12_40_2304_1_2304_40_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v14;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_15_12_40_2304_1_2304_40_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_15_12_40_2304_1_2304_40_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (11 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (11 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_15_12_40_2304_1_2304_40_1_gen;

ARCHITECTURE v14 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_15_12_40_2304_1_2304_40_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v14;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_14_12_40_2304_1_2304_40_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_14_12_40_2304_1_2304_40_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (11 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (11 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_14_12_40_2304_1_2304_40_1_gen;

ARCHITECTURE v14 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_14_12_40_2304_1_2304_40_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v14;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_13_9_40_384_1_384_40_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_13_9_40_384_1_384_40_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_13_9_40_384_1_384_40_1_gen;

ARCHITECTURE v14 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_13_9_40_384_1_384_40_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v14;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_12_9_40_384_1_384_40_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_12_9_40_384_1_384_40_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_12_9_40_384_1_384_40_1_gen;

ARCHITECTURE v14 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_12_9_40_384_1_384_40_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v14;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_11_9_40_384_1_384_40_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_11_9_40_384_1_384_40_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_11_9_40_384_1_384_40_1_gen;

ARCHITECTURE v14 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_11_9_40_384_1_384_40_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v14;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_10_9_40_384_1_384_40_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_10_9_40_384_1_384_40_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_10_9_40_384_1_384_40_1_gen;

ARCHITECTURE v14 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_10_9_40_384_1_384_40_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v14;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_9_9_40_384_1_384_40_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_9_9_40_384_1_384_40_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_9_9_40_384_1_384_40_1_gen;

ARCHITECTURE v14 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_9_9_40_384_1_384_40_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v14;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_8_9_40_384_1_384_40_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_8_9_40_384_1_384_40_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_8_9_40_384_1_384_40_1_gen;

ARCHITECTURE v14 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_8_9_40_384_1_384_40_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v14;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_7_9_40_384_1_384_40_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_7_9_40_384_1_384_40_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_7_9_40_384_1_384_40_1_gen;

ARCHITECTURE v14 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_7_9_40_384_1_384_40_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v14;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_6_9_40_384_1_384_40_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_6_9_40_384_1_384_40_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_6_9_40_384_1_384_40_1_gen;

ARCHITECTURE v14 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_6_9_40_384_1_384_40_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v14;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_5_9_8_384_1_384_8_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_5_9_8_384_1_384_8_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_5_9_8_384_1_384_8_1_gen;

ARCHITECTURE v14 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_5_9_8_384_1_384_8_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v14;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_4_9_40_384_1_384_40_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_4_9_40_384_1_384_40_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_4_9_40_384_1_384_40_1_gen;

ARCHITECTURE v14 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_4_9_40_384_1_384_40_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v14;

-- ------------------------------------------------------------------
--  Design Unit:    dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_3_9_40_384_1_384_40_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_3_9_40_384_1_384_40_1_gen IS
  PORT(
    clken : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    re : OUT STD_LOGIC;
    radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    clken_d : IN STD_LOGIC;
    d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    re_d : IN STD_LOGIC;
    wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    we_d : IN STD_LOGIC;
    writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
    readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
  );
END dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_3_9_40_384_1_384_40_1_gen;

ARCHITECTURE v14 OF dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_3_9_40_384_1_384_40_1_gen
    IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  clken <= (clken_d);
  q_d <= q;
  re <= (readA_r_ram_ir_internal_RMASK_B_d);
  radr <= (radr_d);
  we <= (writeA_w_ram_ir_internal_WMASK_B_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v14;

-- ------------------------------------------------------------------
--  Design Unit:    dut_core_core_fsm
--  FSM Module
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_core_core_fsm IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    input_rsc_clken_d_1 : IN STD_LOGIC;
    fsm_output : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    for_for_C_2_tr0 : IN STD_LOGIC;
    compute_sqrt_for_C_15_tr0 : IN STD_LOGIC;
    RMS_NORM_LOOP_2_C_5_tr0 : IN STD_LOGIC;
    QUANTIZE_ACTIVATION_LOOP_5_C_5_tr0 : IN STD_LOGIC;
    QUANTIZE_ACTIVATION_LOOP_4_C_0_tr0 : IN STD_LOGIC;
    QUANTIZE_ACTIVATION_LOOP_3_C_0_tr0 : IN STD_LOGIC;
    attention_5_1_384_384_8_48_q_proj_re_vinit_C_1_tr0 : IN STD_LOGIC;
    LINEAR_FORWARD_NO_MUL_LOOP_5_C_5_tr0 : IN STD_LOGIC;
    LINEAR_FORWARD_NO_MUL_LOOP_4_C_1_tr0 : IN STD_LOGIC;
    LINEAR_FORWARD_NO_MUL_LOOP_3_C_0_tr0 : IN STD_LOGIC;
    LINEAR_FORWARD_NO_MUL_LOOP_2_C_65_tr0 : IN STD_LOGIC;
    RESHAPE_2D_TO_3D_LOOP_3_C_2_tr0 : IN STD_LOGIC;
    RESHAPE_2D_TO_3D_LOOP_2_C_0_tr0 : IN STD_LOGIC;
    RESHAPE_2D_TO_3D_LOOP_3_2_C_3_tr0 : IN STD_LOGIC;
    RESHAPE_2D_TO_3D_LOOP_2_2_C_0_tr0 : IN STD_LOGIC;
    APPLY_ROTARY_POS_EMB_LOOP_6_C_4_tr0 : IN STD_LOGIC;
    APPLY_ROTARY_POS_EMB_LOOP_4_C_0_tr0 : IN STD_LOGIC;
    CACHE_UPDATE_LOOP_3_C_2_tr0 : IN STD_LOGIC;
    CACHE_UPDATE_LOOP_2_C_0_tr0 : IN STD_LOGIC;
    CACHE_UPDATE_LOOP_1_C_0_tr0 : IN STD_LOGIC;
    TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_2_tr0 : IN STD_LOGIC;
    TRANSPOSE_LAST_TWO_DIMS_LOOP_2_C_0_tr0 : IN STD_LOGIC;
    TRANSPOSE_LAST_TWO_DIMS_LOOP_1_C_0_tr0 : IN STD_LOGIC;
    GEMM_3D_FLOAT_LOOP_4_C_4_tr0 : IN STD_LOGIC;
    GEMM_3D_FLOAT_LOOP_3_C_2_tr0 : IN STD_LOGIC;
    GEMM_3D_FLOAT_LOOP_1_C_0_tr0 : IN STD_LOGIC;
    SF_LOOP_3_C_12_tr0 : IN STD_LOGIC;
    SF_LOOP_1_C_0_tr0 : IN STD_LOGIC;
    SOFTMAX_LOOP_3_C_1_tr0 : IN STD_LOGIC;
    SOFTMAX_LOOP_4_C_4_tr0 : IN STD_LOGIC;
    SOFTMAX_LOOP_5_C_21_tr0 : IN STD_LOGIC;
    SOFTMAX_LOOP_1_C_2_tr0 : IN STD_LOGIC;
    GEMM_3D_FLOAT_LOOP_4_1_C_4_tr0 : IN STD_LOGIC;
    GEMM_3D_FLOAT_LOOP_3_1_C_2_tr0 : IN STD_LOGIC;
    GEMM_3D_FLOAT_LOOP_1_1_C_0_tr0 : IN STD_LOGIC;
    ATTN_2D_LOOP_3_C_2_tr0 : IN STD_LOGIC;
    ATTN_2D_LOOP_2_C_0_tr0 : IN STD_LOGIC;
    RMS_NORM_LOOP_1_2_C_3_tr0 : IN STD_LOGIC;
    compute_sqrt_1_for_C_15_tr0 : IN STD_LOGIC;
    RMS_NORM_LOOP_2_2_C_5_tr0 : IN STD_LOGIC;
    QUANTIZE_ACTIVATION_LOOP_5_1_C_5_tr0 : IN STD_LOGIC;
    QUANTIZE_ACTIVATION_LOOP_4_1_C_0_tr0 : IN STD_LOGIC;
    QUANTIZE_ACTIVATION_LOOP_3_1_C_0_tr0 : IN STD_LOGIC;
    output_vinit_C_1_tr0 : IN STD_LOGIC;
    LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_3_tr0 : IN STD_LOGIC;
    LINEAR_FORWARD_NO_MUL_LOOP_4_3_C_1_tr0 : IN STD_LOGIC;
    LINEAR_FORWARD_NO_MUL_LOOP_3_3_C_0_tr0 : IN STD_LOGIC;
    LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_33_tr0 : IN STD_LOGIC;
    for_1_for_C_2_tr0 : IN STD_LOGIC
  );
END dut_core_core_fsm;

ARCHITECTURE v14 OF dut_core_core_fsm IS
  -- FSM State Type Declaration for dut_core_core_fsm_1
  TYPE dut_core_core_fsm_1_ST IS (main_C_0, for_for_C_0, for_for_C_1, for_for_C_2,
      main_C_1, main_C_2, main_C_3, main_C_4, main_C_5, main_C_6, compute_sqrt_for_C_0,
      compute_sqrt_for_C_1, compute_sqrt_for_C_2, compute_sqrt_for_C_3, compute_sqrt_for_C_4,
      compute_sqrt_for_C_5, compute_sqrt_for_C_6, compute_sqrt_for_C_7, compute_sqrt_for_C_8,
      compute_sqrt_for_C_9, compute_sqrt_for_C_10, compute_sqrt_for_C_11, compute_sqrt_for_C_12,
      compute_sqrt_for_C_13, compute_sqrt_for_C_14, compute_sqrt_for_C_15, main_C_7,
      main_C_8, main_C_9, main_C_10, main_C_11, main_C_12, main_C_13, main_C_14,
      main_C_15, main_C_16, main_C_17, main_C_18, main_C_19, main_C_20, main_C_21,
      main_C_22, main_C_23, main_C_24, main_C_25, main_C_26, main_C_27, main_C_28,
      main_C_29, main_C_30, main_C_31, main_C_32, main_C_33, main_C_34, main_C_35,
      main_C_36, main_C_37, main_C_38, RMS_NORM_LOOP_2_C_0, RMS_NORM_LOOP_2_C_1,
      RMS_NORM_LOOP_2_C_2, RMS_NORM_LOOP_2_C_3, RMS_NORM_LOOP_2_C_4, RMS_NORM_LOOP_2_C_5,
      main_C_39, main_C_40, main_C_41, main_C_42, main_C_43, main_C_44, main_C_45,
      main_C_46, main_C_47, main_C_48, main_C_49, main_C_50, main_C_51, main_C_52,
      main_C_53, QUANTIZE_ACTIVATION_LOOP_5_C_0, QUANTIZE_ACTIVATION_LOOP_5_C_1,
      QUANTIZE_ACTIVATION_LOOP_5_C_2, QUANTIZE_ACTIVATION_LOOP_5_C_3, QUANTIZE_ACTIVATION_LOOP_5_C_4,
      QUANTIZE_ACTIVATION_LOOP_5_C_5, QUANTIZE_ACTIVATION_LOOP_4_C_0, QUANTIZE_ACTIVATION_LOOP_3_C_0,
      attention_5_1_384_384_8_48_q_proj_re_vinit_C_0, attention_5_1_384_384_8_48_q_proj_re_vinit_C_1,
      LINEAR_FORWARD_NO_MUL_LOOP_4_C_0, LINEAR_FORWARD_NO_MUL_LOOP_5_C_0, LINEAR_FORWARD_NO_MUL_LOOP_5_C_1,
      LINEAR_FORWARD_NO_MUL_LOOP_5_C_2, LINEAR_FORWARD_NO_MUL_LOOP_5_C_3, LINEAR_FORWARD_NO_MUL_LOOP_5_C_4,
      LINEAR_FORWARD_NO_MUL_LOOP_5_C_5, LINEAR_FORWARD_NO_MUL_LOOP_4_C_1, LINEAR_FORWARD_NO_MUL_LOOP_3_C_0,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_0, LINEAR_FORWARD_NO_MUL_LOOP_2_C_1, LINEAR_FORWARD_NO_MUL_LOOP_2_C_2,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_3, LINEAR_FORWARD_NO_MUL_LOOP_2_C_4, LINEAR_FORWARD_NO_MUL_LOOP_2_C_5,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_6, LINEAR_FORWARD_NO_MUL_LOOP_2_C_7, LINEAR_FORWARD_NO_MUL_LOOP_2_C_8,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_9, LINEAR_FORWARD_NO_MUL_LOOP_2_C_10, LINEAR_FORWARD_NO_MUL_LOOP_2_C_11,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_12, LINEAR_FORWARD_NO_MUL_LOOP_2_C_13, LINEAR_FORWARD_NO_MUL_LOOP_2_C_14,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_15, LINEAR_FORWARD_NO_MUL_LOOP_2_C_16, LINEAR_FORWARD_NO_MUL_LOOP_2_C_17,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_18, LINEAR_FORWARD_NO_MUL_LOOP_2_C_19, LINEAR_FORWARD_NO_MUL_LOOP_2_C_20,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_21, LINEAR_FORWARD_NO_MUL_LOOP_2_C_22, LINEAR_FORWARD_NO_MUL_LOOP_2_C_23,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_24, LINEAR_FORWARD_NO_MUL_LOOP_2_C_25, LINEAR_FORWARD_NO_MUL_LOOP_2_C_26,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_27, LINEAR_FORWARD_NO_MUL_LOOP_2_C_28, LINEAR_FORWARD_NO_MUL_LOOP_2_C_29,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_30, LINEAR_FORWARD_NO_MUL_LOOP_2_C_31, LINEAR_FORWARD_NO_MUL_LOOP_2_C_32,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_33, LINEAR_FORWARD_NO_MUL_LOOP_2_C_34, LINEAR_FORWARD_NO_MUL_LOOP_2_C_35,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_36, LINEAR_FORWARD_NO_MUL_LOOP_2_C_37, LINEAR_FORWARD_NO_MUL_LOOP_2_C_38,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_39, LINEAR_FORWARD_NO_MUL_LOOP_2_C_40, LINEAR_FORWARD_NO_MUL_LOOP_2_C_41,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_42, LINEAR_FORWARD_NO_MUL_LOOP_2_C_43, LINEAR_FORWARD_NO_MUL_LOOP_2_C_44,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_45, LINEAR_FORWARD_NO_MUL_LOOP_2_C_46, LINEAR_FORWARD_NO_MUL_LOOP_2_C_47,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_48, LINEAR_FORWARD_NO_MUL_LOOP_2_C_49, LINEAR_FORWARD_NO_MUL_LOOP_2_C_50,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_51, LINEAR_FORWARD_NO_MUL_LOOP_2_C_52, LINEAR_FORWARD_NO_MUL_LOOP_2_C_53,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_54, LINEAR_FORWARD_NO_MUL_LOOP_2_C_55, LINEAR_FORWARD_NO_MUL_LOOP_2_C_56,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_57, LINEAR_FORWARD_NO_MUL_LOOP_2_C_58, LINEAR_FORWARD_NO_MUL_LOOP_2_C_59,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_60, LINEAR_FORWARD_NO_MUL_LOOP_2_C_61, LINEAR_FORWARD_NO_MUL_LOOP_2_C_62,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_63, LINEAR_FORWARD_NO_MUL_LOOP_2_C_64, LINEAR_FORWARD_NO_MUL_LOOP_2_C_65,
      RESHAPE_2D_TO_3D_LOOP_3_C_0, RESHAPE_2D_TO_3D_LOOP_3_C_1, RESHAPE_2D_TO_3D_LOOP_3_C_2,
      RESHAPE_2D_TO_3D_LOOP_2_C_0, RESHAPE_2D_TO_3D_LOOP_3_2_C_0, RESHAPE_2D_TO_3D_LOOP_3_2_C_1,
      RESHAPE_2D_TO_3D_LOOP_3_2_C_2, RESHAPE_2D_TO_3D_LOOP_3_2_C_3, RESHAPE_2D_TO_3D_LOOP_2_2_C_0,
      APPLY_ROTARY_POS_EMB_LOOP_6_C_0, APPLY_ROTARY_POS_EMB_LOOP_6_C_1, APPLY_ROTARY_POS_EMB_LOOP_6_C_2,
      APPLY_ROTARY_POS_EMB_LOOP_6_C_3, APPLY_ROTARY_POS_EMB_LOOP_6_C_4, APPLY_ROTARY_POS_EMB_LOOP_4_C_0,
      CACHE_UPDATE_LOOP_3_C_0, CACHE_UPDATE_LOOP_3_C_1, CACHE_UPDATE_LOOP_3_C_2,
      CACHE_UPDATE_LOOP_2_C_0, CACHE_UPDATE_LOOP_1_C_0, TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_0,
      TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_1, TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_2, TRANSPOSE_LAST_TWO_DIMS_LOOP_2_C_0,
      TRANSPOSE_LAST_TWO_DIMS_LOOP_1_C_0, GEMM_3D_FLOAT_LOOP_3_C_0, GEMM_3D_FLOAT_LOOP_3_C_1,
      GEMM_3D_FLOAT_LOOP_4_C_0, GEMM_3D_FLOAT_LOOP_4_C_1, GEMM_3D_FLOAT_LOOP_4_C_2,
      GEMM_3D_FLOAT_LOOP_4_C_3, GEMM_3D_FLOAT_LOOP_4_C_4, GEMM_3D_FLOAT_LOOP_3_C_2,
      GEMM_3D_FLOAT_LOOP_1_C_0, SF_LOOP_3_C_0, SF_LOOP_3_C_1, SF_LOOP_3_C_2, SF_LOOP_3_C_3,
      SF_LOOP_3_C_4, SF_LOOP_3_C_5, SF_LOOP_3_C_6, SF_LOOP_3_C_7, SF_LOOP_3_C_8,
      SF_LOOP_3_C_9, SF_LOOP_3_C_10, SF_LOOP_3_C_11, SF_LOOP_3_C_12, SF_LOOP_1_C_0,
      SOFTMAX_LOOP_1_C_0, SOFTMAX_LOOP_1_C_1, SOFTMAX_LOOP_3_C_0, SOFTMAX_LOOP_3_C_1,
      SOFTMAX_LOOP_4_C_0, SOFTMAX_LOOP_4_C_1, SOFTMAX_LOOP_4_C_2, SOFTMAX_LOOP_4_C_3,
      SOFTMAX_LOOP_4_C_4, SOFTMAX_LOOP_5_C_0, SOFTMAX_LOOP_5_C_1, SOFTMAX_LOOP_5_C_2,
      SOFTMAX_LOOP_5_C_3, SOFTMAX_LOOP_5_C_4, SOFTMAX_LOOP_5_C_5, SOFTMAX_LOOP_5_C_6,
      SOFTMAX_LOOP_5_C_7, SOFTMAX_LOOP_5_C_8, SOFTMAX_LOOP_5_C_9, SOFTMAX_LOOP_5_C_10,
      SOFTMAX_LOOP_5_C_11, SOFTMAX_LOOP_5_C_12, SOFTMAX_LOOP_5_C_13, SOFTMAX_LOOP_5_C_14,
      SOFTMAX_LOOP_5_C_15, SOFTMAX_LOOP_5_C_16, SOFTMAX_LOOP_5_C_17, SOFTMAX_LOOP_5_C_18,
      SOFTMAX_LOOP_5_C_19, SOFTMAX_LOOP_5_C_20, SOFTMAX_LOOP_5_C_21, SOFTMAX_LOOP_1_C_2,
      GEMM_3D_FLOAT_LOOP_3_1_C_0, GEMM_3D_FLOAT_LOOP_3_1_C_1, GEMM_3D_FLOAT_LOOP_4_1_C_0,
      GEMM_3D_FLOAT_LOOP_4_1_C_1, GEMM_3D_FLOAT_LOOP_4_1_C_2, GEMM_3D_FLOAT_LOOP_4_1_C_3,
      GEMM_3D_FLOAT_LOOP_4_1_C_4, GEMM_3D_FLOAT_LOOP_3_1_C_2, GEMM_3D_FLOAT_LOOP_1_1_C_0,
      ATTN_2D_LOOP_3_C_0, ATTN_2D_LOOP_3_C_1, ATTN_2D_LOOP_3_C_2, ATTN_2D_LOOP_2_C_0,
      RMS_NORM_LOOP_1_2_C_0, RMS_NORM_LOOP_1_2_C_1, RMS_NORM_LOOP_1_2_C_2, RMS_NORM_LOOP_1_2_C_3,
      main_C_54, main_C_55, main_C_56, main_C_57, main_C_58, main_C_59, compute_sqrt_1_for_C_0,
      compute_sqrt_1_for_C_1, compute_sqrt_1_for_C_2, compute_sqrt_1_for_C_3, compute_sqrt_1_for_C_4,
      compute_sqrt_1_for_C_5, compute_sqrt_1_for_C_6, compute_sqrt_1_for_C_7, compute_sqrt_1_for_C_8,
      compute_sqrt_1_for_C_9, compute_sqrt_1_for_C_10, compute_sqrt_1_for_C_11, compute_sqrt_1_for_C_12,
      compute_sqrt_1_for_C_13, compute_sqrt_1_for_C_14, compute_sqrt_1_for_C_15,
      main_C_60, main_C_61, main_C_62, main_C_63, main_C_64, main_C_65, main_C_66,
      main_C_67, main_C_68, main_C_69, main_C_70, main_C_71, main_C_72, main_C_73,
      main_C_74, main_C_75, main_C_76, main_C_77, main_C_78, RMS_NORM_LOOP_2_2_C_0,
      RMS_NORM_LOOP_2_2_C_1, RMS_NORM_LOOP_2_2_C_2, RMS_NORM_LOOP_2_2_C_3, RMS_NORM_LOOP_2_2_C_4,
      RMS_NORM_LOOP_2_2_C_5, main_C_79, main_C_80, main_C_81, main_C_82, main_C_83,
      main_C_84, main_C_85, main_C_86, main_C_87, main_C_88, main_C_89, main_C_90,
      main_C_91, main_C_92, main_C_93, main_C_94, main_C_95, main_C_96, main_C_97,
      main_C_98, main_C_99, main_C_100, main_C_101, main_C_102, main_C_103, main_C_104,
      main_C_105, main_C_106, main_C_107, main_C_108, main_C_109, main_C_110, QUANTIZE_ACTIVATION_LOOP_5_1_C_0,
      QUANTIZE_ACTIVATION_LOOP_5_1_C_1, QUANTIZE_ACTIVATION_LOOP_5_1_C_2, QUANTIZE_ACTIVATION_LOOP_5_1_C_3,
      QUANTIZE_ACTIVATION_LOOP_5_1_C_4, QUANTIZE_ACTIVATION_LOOP_5_1_C_5, QUANTIZE_ACTIVATION_LOOP_4_1_C_0,
      QUANTIZE_ACTIVATION_LOOP_3_1_C_0, output_vinit_C_0, output_vinit_C_1, LINEAR_FORWARD_NO_MUL_LOOP_4_3_C_0,
      LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_0, LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_1, LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_2,
      LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_3, LINEAR_FORWARD_NO_MUL_LOOP_4_3_C_1, LINEAR_FORWARD_NO_MUL_LOOP_3_3_C_0,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_0, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_1, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_2,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_3, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_4, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_5,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_6, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_7, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_8,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_9, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_10, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_11,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_12, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_13, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_14,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_15, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_16, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_17,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_18, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_19, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_20,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_21, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_22, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_23,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_24, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_25, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_26,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_27, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_28, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_29,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_30, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_31, LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_32,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_33, for_1_for_C_0, for_1_for_C_1, for_1_for_C_2);

  SIGNAL state_var : dut_core_core_fsm_1_ST;
  SIGNAL state_var_NS : dut_core_core_fsm_1_ST;

BEGIN
  dut_core_core_fsm_1 : PROCESS (for_for_C_2_tr0, compute_sqrt_for_C_15_tr0, RMS_NORM_LOOP_2_C_5_tr0,
      QUANTIZE_ACTIVATION_LOOP_5_C_5_tr0, QUANTIZE_ACTIVATION_LOOP_4_C_0_tr0, QUANTIZE_ACTIVATION_LOOP_3_C_0_tr0,
      attention_5_1_384_384_8_48_q_proj_re_vinit_C_1_tr0, LINEAR_FORWARD_NO_MUL_LOOP_5_C_5_tr0,
      LINEAR_FORWARD_NO_MUL_LOOP_4_C_1_tr0, LINEAR_FORWARD_NO_MUL_LOOP_3_C_0_tr0,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_65_tr0, RESHAPE_2D_TO_3D_LOOP_3_C_2_tr0, RESHAPE_2D_TO_3D_LOOP_2_C_0_tr0,
      RESHAPE_2D_TO_3D_LOOP_3_2_C_3_tr0, RESHAPE_2D_TO_3D_LOOP_2_2_C_0_tr0, APPLY_ROTARY_POS_EMB_LOOP_6_C_4_tr0,
      APPLY_ROTARY_POS_EMB_LOOP_4_C_0_tr0, CACHE_UPDATE_LOOP_3_C_2_tr0, CACHE_UPDATE_LOOP_2_C_0_tr0,
      CACHE_UPDATE_LOOP_1_C_0_tr0, TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_2_tr0, TRANSPOSE_LAST_TWO_DIMS_LOOP_2_C_0_tr0,
      TRANSPOSE_LAST_TWO_DIMS_LOOP_1_C_0_tr0, GEMM_3D_FLOAT_LOOP_4_C_4_tr0, GEMM_3D_FLOAT_LOOP_3_C_2_tr0,
      GEMM_3D_FLOAT_LOOP_1_C_0_tr0, SF_LOOP_3_C_12_tr0, SF_LOOP_1_C_0_tr0, SOFTMAX_LOOP_3_C_1_tr0,
      SOFTMAX_LOOP_4_C_4_tr0, SOFTMAX_LOOP_5_C_21_tr0, SOFTMAX_LOOP_1_C_2_tr0, GEMM_3D_FLOAT_LOOP_4_1_C_4_tr0,
      GEMM_3D_FLOAT_LOOP_3_1_C_2_tr0, GEMM_3D_FLOAT_LOOP_1_1_C_0_tr0, ATTN_2D_LOOP_3_C_2_tr0,
      ATTN_2D_LOOP_2_C_0_tr0, RMS_NORM_LOOP_1_2_C_3_tr0, compute_sqrt_1_for_C_15_tr0,
      RMS_NORM_LOOP_2_2_C_5_tr0, QUANTIZE_ACTIVATION_LOOP_5_1_C_5_tr0, QUANTIZE_ACTIVATION_LOOP_4_1_C_0_tr0,
      QUANTIZE_ACTIVATION_LOOP_3_1_C_0_tr0, output_vinit_C_1_tr0, LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_3_tr0,
      LINEAR_FORWARD_NO_MUL_LOOP_4_3_C_1_tr0, LINEAR_FORWARD_NO_MUL_LOOP_3_3_C_0_tr0,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_33_tr0, for_1_for_C_2_tr0, state_var)
  BEGIN
    CASE state_var IS
      WHEN for_for_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000001");
        state_var_NS <= for_for_C_1;
      WHEN for_for_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000010");
        state_var_NS <= for_for_C_2;
      WHEN for_for_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000011");
        IF ( for_for_C_2_tr0 = '1' ) THEN
          state_var_NS <= main_C_1;
        ELSE
          state_var_NS <= for_for_C_0;
        END IF;
      WHEN main_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000100");
        state_var_NS <= main_C_2;
      WHEN main_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000101");
        state_var_NS <= main_C_3;
      WHEN main_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000110");
        state_var_NS <= main_C_4;
      WHEN main_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000111");
        state_var_NS <= main_C_5;
      WHEN main_C_5 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000001000");
        state_var_NS <= main_C_6;
      WHEN main_C_6 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000001001");
        state_var_NS <= compute_sqrt_for_C_0;
      WHEN compute_sqrt_for_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000001010");
        state_var_NS <= compute_sqrt_for_C_1;
      WHEN compute_sqrt_for_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000001011");
        state_var_NS <= compute_sqrt_for_C_2;
      WHEN compute_sqrt_for_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000001100");
        state_var_NS <= compute_sqrt_for_C_3;
      WHEN compute_sqrt_for_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000001101");
        state_var_NS <= compute_sqrt_for_C_4;
      WHEN compute_sqrt_for_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000001110");
        state_var_NS <= compute_sqrt_for_C_5;
      WHEN compute_sqrt_for_C_5 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000001111");
        state_var_NS <= compute_sqrt_for_C_6;
      WHEN compute_sqrt_for_C_6 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000010000");
        state_var_NS <= compute_sqrt_for_C_7;
      WHEN compute_sqrt_for_C_7 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000010001");
        state_var_NS <= compute_sqrt_for_C_8;
      WHEN compute_sqrt_for_C_8 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000010010");
        state_var_NS <= compute_sqrt_for_C_9;
      WHEN compute_sqrt_for_C_9 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000010011");
        state_var_NS <= compute_sqrt_for_C_10;
      WHEN compute_sqrt_for_C_10 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000010100");
        state_var_NS <= compute_sqrt_for_C_11;
      WHEN compute_sqrt_for_C_11 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000010101");
        state_var_NS <= compute_sqrt_for_C_12;
      WHEN compute_sqrt_for_C_12 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000010110");
        state_var_NS <= compute_sqrt_for_C_13;
      WHEN compute_sqrt_for_C_13 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000010111");
        state_var_NS <= compute_sqrt_for_C_14;
      WHEN compute_sqrt_for_C_14 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000011000");
        state_var_NS <= compute_sqrt_for_C_15;
      WHEN compute_sqrt_for_C_15 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000011001");
        IF ( compute_sqrt_for_C_15_tr0 = '1' ) THEN
          state_var_NS <= main_C_7;
        ELSE
          state_var_NS <= compute_sqrt_for_C_0;
        END IF;
      WHEN main_C_7 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000011010");
        state_var_NS <= main_C_8;
      WHEN main_C_8 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000011011");
        state_var_NS <= main_C_9;
      WHEN main_C_9 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000011100");
        state_var_NS <= main_C_10;
      WHEN main_C_10 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000011101");
        state_var_NS <= main_C_11;
      WHEN main_C_11 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000011110");
        state_var_NS <= main_C_12;
      WHEN main_C_12 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000011111");
        state_var_NS <= main_C_13;
      WHEN main_C_13 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000100000");
        state_var_NS <= main_C_14;
      WHEN main_C_14 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000100001");
        state_var_NS <= main_C_15;
      WHEN main_C_15 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000100010");
        state_var_NS <= main_C_16;
      WHEN main_C_16 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000100011");
        state_var_NS <= main_C_17;
      WHEN main_C_17 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000100100");
        state_var_NS <= main_C_18;
      WHEN main_C_18 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000100101");
        state_var_NS <= main_C_19;
      WHEN main_C_19 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000100110");
        state_var_NS <= main_C_20;
      WHEN main_C_20 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000100111");
        state_var_NS <= main_C_21;
      WHEN main_C_21 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000101000");
        state_var_NS <= main_C_22;
      WHEN main_C_22 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000101001");
        state_var_NS <= main_C_23;
      WHEN main_C_23 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000101010");
        state_var_NS <= main_C_24;
      WHEN main_C_24 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000101011");
        state_var_NS <= main_C_25;
      WHEN main_C_25 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000101100");
        state_var_NS <= main_C_26;
      WHEN main_C_26 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000101101");
        state_var_NS <= main_C_27;
      WHEN main_C_27 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000101110");
        state_var_NS <= main_C_28;
      WHEN main_C_28 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000101111");
        state_var_NS <= main_C_29;
      WHEN main_C_29 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000110000");
        state_var_NS <= main_C_30;
      WHEN main_C_30 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000110001");
        state_var_NS <= main_C_31;
      WHEN main_C_31 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000110010");
        state_var_NS <= main_C_32;
      WHEN main_C_32 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000110011");
        state_var_NS <= main_C_33;
      WHEN main_C_33 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000110100");
        state_var_NS <= main_C_34;
      WHEN main_C_34 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000110101");
        state_var_NS <= main_C_35;
      WHEN main_C_35 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000110110");
        state_var_NS <= main_C_36;
      WHEN main_C_36 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000110111");
        state_var_NS <= main_C_37;
      WHEN main_C_37 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000111000");
        state_var_NS <= main_C_38;
      WHEN main_C_38 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000111001");
        state_var_NS <= RMS_NORM_LOOP_2_C_0;
      WHEN RMS_NORM_LOOP_2_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000111010");
        state_var_NS <= RMS_NORM_LOOP_2_C_1;
      WHEN RMS_NORM_LOOP_2_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000111011");
        state_var_NS <= RMS_NORM_LOOP_2_C_2;
      WHEN RMS_NORM_LOOP_2_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000111100");
        state_var_NS <= RMS_NORM_LOOP_2_C_3;
      WHEN RMS_NORM_LOOP_2_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000111101");
        state_var_NS <= RMS_NORM_LOOP_2_C_4;
      WHEN RMS_NORM_LOOP_2_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000111110");
        state_var_NS <= RMS_NORM_LOOP_2_C_5;
      WHEN RMS_NORM_LOOP_2_C_5 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000111111");
        IF ( RMS_NORM_LOOP_2_C_5_tr0 = '1' ) THEN
          state_var_NS <= main_C_39;
        ELSE
          state_var_NS <= RMS_NORM_LOOP_2_C_0;
        END IF;
      WHEN main_C_39 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001000000");
        state_var_NS <= main_C_40;
      WHEN main_C_40 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001000001");
        state_var_NS <= main_C_41;
      WHEN main_C_41 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001000010");
        state_var_NS <= main_C_42;
      WHEN main_C_42 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001000011");
        state_var_NS <= main_C_43;
      WHEN main_C_43 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001000100");
        state_var_NS <= main_C_44;
      WHEN main_C_44 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001000101");
        state_var_NS <= main_C_45;
      WHEN main_C_45 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001000110");
        state_var_NS <= main_C_46;
      WHEN main_C_46 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001000111");
        state_var_NS <= main_C_47;
      WHEN main_C_47 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001001000");
        state_var_NS <= main_C_48;
      WHEN main_C_48 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001001001");
        state_var_NS <= main_C_49;
      WHEN main_C_49 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001001010");
        state_var_NS <= main_C_50;
      WHEN main_C_50 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001001011");
        state_var_NS <= main_C_51;
      WHEN main_C_51 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001001100");
        state_var_NS <= main_C_52;
      WHEN main_C_52 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001001101");
        state_var_NS <= main_C_53;
      WHEN main_C_53 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001001110");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_5_C_0;
      WHEN QUANTIZE_ACTIVATION_LOOP_5_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001001111");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_5_C_1;
      WHEN QUANTIZE_ACTIVATION_LOOP_5_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001010000");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_5_C_2;
      WHEN QUANTIZE_ACTIVATION_LOOP_5_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001010001");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_5_C_3;
      WHEN QUANTIZE_ACTIVATION_LOOP_5_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001010010");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_5_C_4;
      WHEN QUANTIZE_ACTIVATION_LOOP_5_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001010011");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_5_C_5;
      WHEN QUANTIZE_ACTIVATION_LOOP_5_C_5 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001010100");
        IF ( QUANTIZE_ACTIVATION_LOOP_5_C_5_tr0 = '1' ) THEN
          state_var_NS <= QUANTIZE_ACTIVATION_LOOP_4_C_0;
        ELSE
          state_var_NS <= QUANTIZE_ACTIVATION_LOOP_5_C_0;
        END IF;
      WHEN QUANTIZE_ACTIVATION_LOOP_4_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001010101");
        IF ( QUANTIZE_ACTIVATION_LOOP_4_C_0_tr0 = '1' ) THEN
          state_var_NS <= QUANTIZE_ACTIVATION_LOOP_3_C_0;
        ELSE
          state_var_NS <= QUANTIZE_ACTIVATION_LOOP_5_C_0;
        END IF;
      WHEN QUANTIZE_ACTIVATION_LOOP_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001010110");
        IF ( QUANTIZE_ACTIVATION_LOOP_3_C_0_tr0 = '1' ) THEN
          state_var_NS <= attention_5_1_384_384_8_48_q_proj_re_vinit_C_0;
        ELSE
          state_var_NS <= QUANTIZE_ACTIVATION_LOOP_5_C_0;
        END IF;
      WHEN attention_5_1_384_384_8_48_q_proj_re_vinit_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001010111");
        state_var_NS <= attention_5_1_384_384_8_48_q_proj_re_vinit_C_1;
      WHEN attention_5_1_384_384_8_48_q_proj_re_vinit_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001011000");
        IF ( attention_5_1_384_384_8_48_q_proj_re_vinit_C_1_tr0 = '1' ) THEN
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_4_C_0;
        ELSE
          state_var_NS <= attention_5_1_384_384_8_48_q_proj_re_vinit_C_0;
        END IF;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_4_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001011001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_5_C_0;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_5_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001011010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_5_C_1;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_5_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001011011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_5_C_2;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_5_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001011100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_5_C_3;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_5_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001011101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_5_C_4;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_5_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001011110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_5_C_5;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_5_C_5 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001011111");
        IF ( LINEAR_FORWARD_NO_MUL_LOOP_5_C_5_tr0 = '1' ) THEN
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_4_C_1;
        ELSE
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_5_C_0;
        END IF;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_4_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001100000");
        IF ( LINEAR_FORWARD_NO_MUL_LOOP_4_C_1_tr0 = '1' ) THEN
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_3_C_0;
        ELSE
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_4_C_0;
        END IF;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001100001");
        IF ( LINEAR_FORWARD_NO_MUL_LOOP_3_C_0_tr0 = '1' ) THEN
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_0;
        ELSE
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_4_C_0;
        END IF;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001100010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_1;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001100011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_2;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001100100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_3;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001100101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_4;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001100110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_5;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_5 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001100111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_6;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_6 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001101000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_7;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_7 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001101001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_8;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_8 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001101010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_9;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_9 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001101011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_10;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_10 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001101100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_11;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_11 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001101101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_12;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_12 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001101110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_13;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_13 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001101111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_14;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_14 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001110000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_15;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_15 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001110001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_16;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_16 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001110010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_17;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_17 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001110011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_18;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_18 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001110100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_19;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_19 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001110101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_20;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_20 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001110110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_21;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_21 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001110111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_22;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_22 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001111000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_23;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_23 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001111001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_24;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_24 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001111010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_25;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_25 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001111011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_26;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_26 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001111100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_27;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_27 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001111101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_28;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_28 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001111110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_29;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_29 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001111111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_30;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_30 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010000000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_31;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_31 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010000001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_32;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_32 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010000010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_33;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_33 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010000011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_34;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_34 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010000100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_35;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_35 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010000101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_36;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_36 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010000110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_37;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_37 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010000111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_38;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_38 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010001000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_39;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_39 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010001001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_40;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_40 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010001010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_41;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_41 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010001011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_42;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_42 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010001100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_43;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_43 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010001101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_44;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_44 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010001110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_45;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_45 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010001111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_46;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_46 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010010000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_47;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_47 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010010001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_48;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_48 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010010010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_49;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_49 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010010011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_50;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_50 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010010100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_51;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_51 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010010101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_52;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_52 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010010110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_53;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_53 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010010111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_54;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_54 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010011000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_55;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_55 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010011001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_56;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_56 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010011010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_57;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_57 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010011011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_58;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_58 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010011100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_59;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_59 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010011101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_60;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_60 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010011110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_61;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_61 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010011111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_62;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_62 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010100000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_63;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_63 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010100001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_64;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_64 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010100010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_C_65;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_C_65 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010100011");
        IF ( LINEAR_FORWARD_NO_MUL_LOOP_2_C_65_tr0 = '1' ) THEN
          state_var_NS <= RESHAPE_2D_TO_3D_LOOP_3_C_0;
        ELSE
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_4_C_0;
        END IF;
      WHEN RESHAPE_2D_TO_3D_LOOP_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010100100");
        state_var_NS <= RESHAPE_2D_TO_3D_LOOP_3_C_1;
      WHEN RESHAPE_2D_TO_3D_LOOP_3_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010100101");
        state_var_NS <= RESHAPE_2D_TO_3D_LOOP_3_C_2;
      WHEN RESHAPE_2D_TO_3D_LOOP_3_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010100110");
        IF ( RESHAPE_2D_TO_3D_LOOP_3_C_2_tr0 = '1' ) THEN
          state_var_NS <= RESHAPE_2D_TO_3D_LOOP_2_C_0;
        ELSE
          state_var_NS <= RESHAPE_2D_TO_3D_LOOP_3_C_0;
        END IF;
      WHEN RESHAPE_2D_TO_3D_LOOP_2_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010100111");
        IF ( RESHAPE_2D_TO_3D_LOOP_2_C_0_tr0 = '1' ) THEN
          state_var_NS <= RESHAPE_2D_TO_3D_LOOP_3_2_C_0;
        ELSE
          state_var_NS <= RESHAPE_2D_TO_3D_LOOP_3_C_0;
        END IF;
      WHEN RESHAPE_2D_TO_3D_LOOP_3_2_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010101000");
        state_var_NS <= RESHAPE_2D_TO_3D_LOOP_3_2_C_1;
      WHEN RESHAPE_2D_TO_3D_LOOP_3_2_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010101001");
        state_var_NS <= RESHAPE_2D_TO_3D_LOOP_3_2_C_2;
      WHEN RESHAPE_2D_TO_3D_LOOP_3_2_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010101010");
        state_var_NS <= RESHAPE_2D_TO_3D_LOOP_3_2_C_3;
      WHEN RESHAPE_2D_TO_3D_LOOP_3_2_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010101011");
        IF ( RESHAPE_2D_TO_3D_LOOP_3_2_C_3_tr0 = '1' ) THEN
          state_var_NS <= RESHAPE_2D_TO_3D_LOOP_2_2_C_0;
        ELSE
          state_var_NS <= RESHAPE_2D_TO_3D_LOOP_3_2_C_0;
        END IF;
      WHEN RESHAPE_2D_TO_3D_LOOP_2_2_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010101100");
        IF ( RESHAPE_2D_TO_3D_LOOP_2_2_C_0_tr0 = '1' ) THEN
          state_var_NS <= APPLY_ROTARY_POS_EMB_LOOP_6_C_0;
        ELSE
          state_var_NS <= RESHAPE_2D_TO_3D_LOOP_3_2_C_0;
        END IF;
      WHEN APPLY_ROTARY_POS_EMB_LOOP_6_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010101101");
        state_var_NS <= APPLY_ROTARY_POS_EMB_LOOP_6_C_1;
      WHEN APPLY_ROTARY_POS_EMB_LOOP_6_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010101110");
        state_var_NS <= APPLY_ROTARY_POS_EMB_LOOP_6_C_2;
      WHEN APPLY_ROTARY_POS_EMB_LOOP_6_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010101111");
        state_var_NS <= APPLY_ROTARY_POS_EMB_LOOP_6_C_3;
      WHEN APPLY_ROTARY_POS_EMB_LOOP_6_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010110000");
        state_var_NS <= APPLY_ROTARY_POS_EMB_LOOP_6_C_4;
      WHEN APPLY_ROTARY_POS_EMB_LOOP_6_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010110001");
        IF ( APPLY_ROTARY_POS_EMB_LOOP_6_C_4_tr0 = '1' ) THEN
          state_var_NS <= APPLY_ROTARY_POS_EMB_LOOP_4_C_0;
        ELSE
          state_var_NS <= APPLY_ROTARY_POS_EMB_LOOP_6_C_0;
        END IF;
      WHEN APPLY_ROTARY_POS_EMB_LOOP_4_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010110010");
        IF ( APPLY_ROTARY_POS_EMB_LOOP_4_C_0_tr0 = '1' ) THEN
          state_var_NS <= CACHE_UPDATE_LOOP_3_C_0;
        ELSE
          state_var_NS <= APPLY_ROTARY_POS_EMB_LOOP_6_C_0;
        END IF;
      WHEN CACHE_UPDATE_LOOP_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010110011");
        state_var_NS <= CACHE_UPDATE_LOOP_3_C_1;
      WHEN CACHE_UPDATE_LOOP_3_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010110100");
        state_var_NS <= CACHE_UPDATE_LOOP_3_C_2;
      WHEN CACHE_UPDATE_LOOP_3_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010110101");
        IF ( CACHE_UPDATE_LOOP_3_C_2_tr0 = '1' ) THEN
          state_var_NS <= CACHE_UPDATE_LOOP_2_C_0;
        ELSE
          state_var_NS <= CACHE_UPDATE_LOOP_3_C_0;
        END IF;
      WHEN CACHE_UPDATE_LOOP_2_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010110110");
        IF ( CACHE_UPDATE_LOOP_2_C_0_tr0 = '1' ) THEN
          state_var_NS <= CACHE_UPDATE_LOOP_1_C_0;
        ELSE
          state_var_NS <= CACHE_UPDATE_LOOP_3_C_0;
        END IF;
      WHEN CACHE_UPDATE_LOOP_1_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010110111");
        IF ( CACHE_UPDATE_LOOP_1_C_0_tr0 = '1' ) THEN
          state_var_NS <= TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_0;
        ELSE
          state_var_NS <= CACHE_UPDATE_LOOP_3_C_0;
        END IF;
      WHEN TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010111000");
        state_var_NS <= TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_1;
      WHEN TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010111001");
        state_var_NS <= TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_2;
      WHEN TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010111010");
        IF ( TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_2_tr0 = '1' ) THEN
          state_var_NS <= TRANSPOSE_LAST_TWO_DIMS_LOOP_2_C_0;
        ELSE
          state_var_NS <= TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_0;
        END IF;
      WHEN TRANSPOSE_LAST_TWO_DIMS_LOOP_2_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010111011");
        IF ( TRANSPOSE_LAST_TWO_DIMS_LOOP_2_C_0_tr0 = '1' ) THEN
          state_var_NS <= TRANSPOSE_LAST_TWO_DIMS_LOOP_1_C_0;
        ELSE
          state_var_NS <= TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_0;
        END IF;
      WHEN TRANSPOSE_LAST_TWO_DIMS_LOOP_1_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010111100");
        IF ( TRANSPOSE_LAST_TWO_DIMS_LOOP_1_C_0_tr0 = '1' ) THEN
          state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_0;
        ELSE
          state_var_NS <= TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_0;
        END IF;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010111101");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_1;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010111110");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_4_C_0;
      WHEN GEMM_3D_FLOAT_LOOP_4_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010111111");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_4_C_1;
      WHEN GEMM_3D_FLOAT_LOOP_4_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011000000");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_4_C_2;
      WHEN GEMM_3D_FLOAT_LOOP_4_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011000001");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_4_C_3;
      WHEN GEMM_3D_FLOAT_LOOP_4_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011000010");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_4_C_4;
      WHEN GEMM_3D_FLOAT_LOOP_4_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011000011");
        IF ( GEMM_3D_FLOAT_LOOP_4_C_4_tr0 = '1' ) THEN
          state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_2;
        ELSE
          state_var_NS <= GEMM_3D_FLOAT_LOOP_4_C_0;
        END IF;
      WHEN GEMM_3D_FLOAT_LOOP_3_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011000100");
        IF ( GEMM_3D_FLOAT_LOOP_3_C_2_tr0 = '1' ) THEN
          state_var_NS <= GEMM_3D_FLOAT_LOOP_1_C_0;
        ELSE
          state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_0;
        END IF;
      WHEN GEMM_3D_FLOAT_LOOP_1_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011000101");
        IF ( GEMM_3D_FLOAT_LOOP_1_C_0_tr0 = '1' ) THEN
          state_var_NS <= SF_LOOP_3_C_0;
        ELSE
          state_var_NS <= GEMM_3D_FLOAT_LOOP_3_C_0;
        END IF;
      WHEN SF_LOOP_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011000110");
        state_var_NS <= SF_LOOP_3_C_1;
      WHEN SF_LOOP_3_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011000111");
        state_var_NS <= SF_LOOP_3_C_2;
      WHEN SF_LOOP_3_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011001000");
        state_var_NS <= SF_LOOP_3_C_3;
      WHEN SF_LOOP_3_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011001001");
        state_var_NS <= SF_LOOP_3_C_4;
      WHEN SF_LOOP_3_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011001010");
        state_var_NS <= SF_LOOP_3_C_5;
      WHEN SF_LOOP_3_C_5 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011001011");
        state_var_NS <= SF_LOOP_3_C_6;
      WHEN SF_LOOP_3_C_6 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011001100");
        state_var_NS <= SF_LOOP_3_C_7;
      WHEN SF_LOOP_3_C_7 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011001101");
        state_var_NS <= SF_LOOP_3_C_8;
      WHEN SF_LOOP_3_C_8 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011001110");
        state_var_NS <= SF_LOOP_3_C_9;
      WHEN SF_LOOP_3_C_9 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011001111");
        state_var_NS <= SF_LOOP_3_C_10;
      WHEN SF_LOOP_3_C_10 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011010000");
        state_var_NS <= SF_LOOP_3_C_11;
      WHEN SF_LOOP_3_C_11 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011010001");
        state_var_NS <= SF_LOOP_3_C_12;
      WHEN SF_LOOP_3_C_12 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011010010");
        IF ( SF_LOOP_3_C_12_tr0 = '1' ) THEN
          state_var_NS <= SF_LOOP_1_C_0;
        ELSE
          state_var_NS <= SF_LOOP_3_C_0;
        END IF;
      WHEN SF_LOOP_1_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011010011");
        IF ( SF_LOOP_1_C_0_tr0 = '1' ) THEN
          state_var_NS <= SOFTMAX_LOOP_1_C_0;
        ELSE
          state_var_NS <= SF_LOOP_3_C_0;
        END IF;
      WHEN SOFTMAX_LOOP_1_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011010100");
        state_var_NS <= SOFTMAX_LOOP_1_C_1;
      WHEN SOFTMAX_LOOP_1_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011010101");
        state_var_NS <= SOFTMAX_LOOP_3_C_0;
      WHEN SOFTMAX_LOOP_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011010110");
        state_var_NS <= SOFTMAX_LOOP_3_C_1;
      WHEN SOFTMAX_LOOP_3_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011010111");
        IF ( SOFTMAX_LOOP_3_C_1_tr0 = '1' ) THEN
          state_var_NS <= SOFTMAX_LOOP_4_C_0;
        ELSE
          state_var_NS <= SOFTMAX_LOOP_3_C_0;
        END IF;
      WHEN SOFTMAX_LOOP_4_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011011000");
        state_var_NS <= SOFTMAX_LOOP_4_C_1;
      WHEN SOFTMAX_LOOP_4_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011011001");
        state_var_NS <= SOFTMAX_LOOP_4_C_2;
      WHEN SOFTMAX_LOOP_4_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011011010");
        state_var_NS <= SOFTMAX_LOOP_4_C_3;
      WHEN SOFTMAX_LOOP_4_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011011011");
        state_var_NS <= SOFTMAX_LOOP_4_C_4;
      WHEN SOFTMAX_LOOP_4_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011011100");
        IF ( SOFTMAX_LOOP_4_C_4_tr0 = '1' ) THEN
          state_var_NS <= SOFTMAX_LOOP_5_C_0;
        ELSE
          state_var_NS <= SOFTMAX_LOOP_4_C_0;
        END IF;
      WHEN SOFTMAX_LOOP_5_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011011101");
        state_var_NS <= SOFTMAX_LOOP_5_C_1;
      WHEN SOFTMAX_LOOP_5_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011011110");
        state_var_NS <= SOFTMAX_LOOP_5_C_2;
      WHEN SOFTMAX_LOOP_5_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011011111");
        state_var_NS <= SOFTMAX_LOOP_5_C_3;
      WHEN SOFTMAX_LOOP_5_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011100000");
        state_var_NS <= SOFTMAX_LOOP_5_C_4;
      WHEN SOFTMAX_LOOP_5_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011100001");
        state_var_NS <= SOFTMAX_LOOP_5_C_5;
      WHEN SOFTMAX_LOOP_5_C_5 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011100010");
        state_var_NS <= SOFTMAX_LOOP_5_C_6;
      WHEN SOFTMAX_LOOP_5_C_6 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011100011");
        state_var_NS <= SOFTMAX_LOOP_5_C_7;
      WHEN SOFTMAX_LOOP_5_C_7 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011100100");
        state_var_NS <= SOFTMAX_LOOP_5_C_8;
      WHEN SOFTMAX_LOOP_5_C_8 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011100101");
        state_var_NS <= SOFTMAX_LOOP_5_C_9;
      WHEN SOFTMAX_LOOP_5_C_9 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011100110");
        state_var_NS <= SOFTMAX_LOOP_5_C_10;
      WHEN SOFTMAX_LOOP_5_C_10 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011100111");
        state_var_NS <= SOFTMAX_LOOP_5_C_11;
      WHEN SOFTMAX_LOOP_5_C_11 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011101000");
        state_var_NS <= SOFTMAX_LOOP_5_C_12;
      WHEN SOFTMAX_LOOP_5_C_12 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011101001");
        state_var_NS <= SOFTMAX_LOOP_5_C_13;
      WHEN SOFTMAX_LOOP_5_C_13 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011101010");
        state_var_NS <= SOFTMAX_LOOP_5_C_14;
      WHEN SOFTMAX_LOOP_5_C_14 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011101011");
        state_var_NS <= SOFTMAX_LOOP_5_C_15;
      WHEN SOFTMAX_LOOP_5_C_15 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011101100");
        state_var_NS <= SOFTMAX_LOOP_5_C_16;
      WHEN SOFTMAX_LOOP_5_C_16 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011101101");
        state_var_NS <= SOFTMAX_LOOP_5_C_17;
      WHEN SOFTMAX_LOOP_5_C_17 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011101110");
        state_var_NS <= SOFTMAX_LOOP_5_C_18;
      WHEN SOFTMAX_LOOP_5_C_18 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011101111");
        state_var_NS <= SOFTMAX_LOOP_5_C_19;
      WHEN SOFTMAX_LOOP_5_C_19 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011110000");
        state_var_NS <= SOFTMAX_LOOP_5_C_20;
      WHEN SOFTMAX_LOOP_5_C_20 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011110001");
        state_var_NS <= SOFTMAX_LOOP_5_C_21;
      WHEN SOFTMAX_LOOP_5_C_21 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011110010");
        IF ( SOFTMAX_LOOP_5_C_21_tr0 = '1' ) THEN
          state_var_NS <= SOFTMAX_LOOP_1_C_2;
        ELSE
          state_var_NS <= SOFTMAX_LOOP_5_C_0;
        END IF;
      WHEN SOFTMAX_LOOP_1_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011110011");
        IF ( SOFTMAX_LOOP_1_C_2_tr0 = '1' ) THEN
          state_var_NS <= GEMM_3D_FLOAT_LOOP_3_1_C_0;
        ELSE
          state_var_NS <= SOFTMAX_LOOP_1_C_0;
        END IF;
      WHEN GEMM_3D_FLOAT_LOOP_3_1_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011110100");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_3_1_C_1;
      WHEN GEMM_3D_FLOAT_LOOP_3_1_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011110101");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_4_1_C_0;
      WHEN GEMM_3D_FLOAT_LOOP_4_1_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011110110");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_4_1_C_1;
      WHEN GEMM_3D_FLOAT_LOOP_4_1_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011110111");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_4_1_C_2;
      WHEN GEMM_3D_FLOAT_LOOP_4_1_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011111000");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_4_1_C_3;
      WHEN GEMM_3D_FLOAT_LOOP_4_1_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011111001");
        state_var_NS <= GEMM_3D_FLOAT_LOOP_4_1_C_4;
      WHEN GEMM_3D_FLOAT_LOOP_4_1_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011111010");
        IF ( GEMM_3D_FLOAT_LOOP_4_1_C_4_tr0 = '1' ) THEN
          state_var_NS <= GEMM_3D_FLOAT_LOOP_3_1_C_2;
        ELSE
          state_var_NS <= GEMM_3D_FLOAT_LOOP_4_1_C_0;
        END IF;
      WHEN GEMM_3D_FLOAT_LOOP_3_1_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011111011");
        IF ( GEMM_3D_FLOAT_LOOP_3_1_C_2_tr0 = '1' ) THEN
          state_var_NS <= GEMM_3D_FLOAT_LOOP_1_1_C_0;
        ELSE
          state_var_NS <= GEMM_3D_FLOAT_LOOP_3_1_C_0;
        END IF;
      WHEN GEMM_3D_FLOAT_LOOP_1_1_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011111100");
        IF ( GEMM_3D_FLOAT_LOOP_1_1_C_0_tr0 = '1' ) THEN
          state_var_NS <= ATTN_2D_LOOP_3_C_0;
        ELSE
          state_var_NS <= GEMM_3D_FLOAT_LOOP_3_1_C_0;
        END IF;
      WHEN ATTN_2D_LOOP_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011111101");
        state_var_NS <= ATTN_2D_LOOP_3_C_1;
      WHEN ATTN_2D_LOOP_3_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011111110");
        state_var_NS <= ATTN_2D_LOOP_3_C_2;
      WHEN ATTN_2D_LOOP_3_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "011111111");
        IF ( ATTN_2D_LOOP_3_C_2_tr0 = '1' ) THEN
          state_var_NS <= ATTN_2D_LOOP_2_C_0;
        ELSE
          state_var_NS <= ATTN_2D_LOOP_3_C_0;
        END IF;
      WHEN ATTN_2D_LOOP_2_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100000000");
        IF ( ATTN_2D_LOOP_2_C_0_tr0 = '1' ) THEN
          state_var_NS <= RMS_NORM_LOOP_1_2_C_0;
        ELSE
          state_var_NS <= ATTN_2D_LOOP_3_C_0;
        END IF;
      WHEN RMS_NORM_LOOP_1_2_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100000001");
        state_var_NS <= RMS_NORM_LOOP_1_2_C_1;
      WHEN RMS_NORM_LOOP_1_2_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100000010");
        state_var_NS <= RMS_NORM_LOOP_1_2_C_2;
      WHEN RMS_NORM_LOOP_1_2_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100000011");
        state_var_NS <= RMS_NORM_LOOP_1_2_C_3;
      WHEN RMS_NORM_LOOP_1_2_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100000100");
        IF ( RMS_NORM_LOOP_1_2_C_3_tr0 = '1' ) THEN
          state_var_NS <= main_C_54;
        ELSE
          state_var_NS <= RMS_NORM_LOOP_1_2_C_0;
        END IF;
      WHEN main_C_54 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100000101");
        state_var_NS <= main_C_55;
      WHEN main_C_55 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100000110");
        state_var_NS <= main_C_56;
      WHEN main_C_56 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100000111");
        state_var_NS <= main_C_57;
      WHEN main_C_57 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100001000");
        state_var_NS <= main_C_58;
      WHEN main_C_58 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100001001");
        state_var_NS <= main_C_59;
      WHEN main_C_59 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100001010");
        state_var_NS <= compute_sqrt_1_for_C_0;
      WHEN compute_sqrt_1_for_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100001011");
        state_var_NS <= compute_sqrt_1_for_C_1;
      WHEN compute_sqrt_1_for_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100001100");
        state_var_NS <= compute_sqrt_1_for_C_2;
      WHEN compute_sqrt_1_for_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100001101");
        state_var_NS <= compute_sqrt_1_for_C_3;
      WHEN compute_sqrt_1_for_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100001110");
        state_var_NS <= compute_sqrt_1_for_C_4;
      WHEN compute_sqrt_1_for_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100001111");
        state_var_NS <= compute_sqrt_1_for_C_5;
      WHEN compute_sqrt_1_for_C_5 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100010000");
        state_var_NS <= compute_sqrt_1_for_C_6;
      WHEN compute_sqrt_1_for_C_6 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100010001");
        state_var_NS <= compute_sqrt_1_for_C_7;
      WHEN compute_sqrt_1_for_C_7 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100010010");
        state_var_NS <= compute_sqrt_1_for_C_8;
      WHEN compute_sqrt_1_for_C_8 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100010011");
        state_var_NS <= compute_sqrt_1_for_C_9;
      WHEN compute_sqrt_1_for_C_9 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100010100");
        state_var_NS <= compute_sqrt_1_for_C_10;
      WHEN compute_sqrt_1_for_C_10 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100010101");
        state_var_NS <= compute_sqrt_1_for_C_11;
      WHEN compute_sqrt_1_for_C_11 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100010110");
        state_var_NS <= compute_sqrt_1_for_C_12;
      WHEN compute_sqrt_1_for_C_12 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100010111");
        state_var_NS <= compute_sqrt_1_for_C_13;
      WHEN compute_sqrt_1_for_C_13 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100011000");
        state_var_NS <= compute_sqrt_1_for_C_14;
      WHEN compute_sqrt_1_for_C_14 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100011001");
        state_var_NS <= compute_sqrt_1_for_C_15;
      WHEN compute_sqrt_1_for_C_15 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100011010");
        IF ( compute_sqrt_1_for_C_15_tr0 = '1' ) THEN
          state_var_NS <= main_C_60;
        ELSE
          state_var_NS <= compute_sqrt_1_for_C_0;
        END IF;
      WHEN main_C_60 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100011011");
        state_var_NS <= main_C_61;
      WHEN main_C_61 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100011100");
        state_var_NS <= main_C_62;
      WHEN main_C_62 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100011101");
        state_var_NS <= main_C_63;
      WHEN main_C_63 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100011110");
        state_var_NS <= main_C_64;
      WHEN main_C_64 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100011111");
        state_var_NS <= main_C_65;
      WHEN main_C_65 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100100000");
        state_var_NS <= main_C_66;
      WHEN main_C_66 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100100001");
        state_var_NS <= main_C_67;
      WHEN main_C_67 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100100010");
        state_var_NS <= main_C_68;
      WHEN main_C_68 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100100011");
        state_var_NS <= main_C_69;
      WHEN main_C_69 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100100100");
        state_var_NS <= main_C_70;
      WHEN main_C_70 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100100101");
        state_var_NS <= main_C_71;
      WHEN main_C_71 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100100110");
        state_var_NS <= main_C_72;
      WHEN main_C_72 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100100111");
        state_var_NS <= main_C_73;
      WHEN main_C_73 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100101000");
        state_var_NS <= main_C_74;
      WHEN main_C_74 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100101001");
        state_var_NS <= main_C_75;
      WHEN main_C_75 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100101010");
        state_var_NS <= main_C_76;
      WHEN main_C_76 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100101011");
        state_var_NS <= main_C_77;
      WHEN main_C_77 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100101100");
        state_var_NS <= main_C_78;
      WHEN main_C_78 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100101101");
        state_var_NS <= RMS_NORM_LOOP_2_2_C_0;
      WHEN RMS_NORM_LOOP_2_2_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100101110");
        state_var_NS <= RMS_NORM_LOOP_2_2_C_1;
      WHEN RMS_NORM_LOOP_2_2_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100101111");
        state_var_NS <= RMS_NORM_LOOP_2_2_C_2;
      WHEN RMS_NORM_LOOP_2_2_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100110000");
        state_var_NS <= RMS_NORM_LOOP_2_2_C_3;
      WHEN RMS_NORM_LOOP_2_2_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100110001");
        state_var_NS <= RMS_NORM_LOOP_2_2_C_4;
      WHEN RMS_NORM_LOOP_2_2_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100110010");
        state_var_NS <= RMS_NORM_LOOP_2_2_C_5;
      WHEN RMS_NORM_LOOP_2_2_C_5 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100110011");
        IF ( RMS_NORM_LOOP_2_2_C_5_tr0 = '1' ) THEN
          state_var_NS <= main_C_79;
        ELSE
          state_var_NS <= RMS_NORM_LOOP_2_2_C_0;
        END IF;
      WHEN main_C_79 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100110100");
        state_var_NS <= main_C_80;
      WHEN main_C_80 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100110101");
        state_var_NS <= main_C_81;
      WHEN main_C_81 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100110110");
        state_var_NS <= main_C_82;
      WHEN main_C_82 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100110111");
        state_var_NS <= main_C_83;
      WHEN main_C_83 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100111000");
        state_var_NS <= main_C_84;
      WHEN main_C_84 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100111001");
        state_var_NS <= main_C_85;
      WHEN main_C_85 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100111010");
        state_var_NS <= main_C_86;
      WHEN main_C_86 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100111011");
        state_var_NS <= main_C_87;
      WHEN main_C_87 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100111100");
        state_var_NS <= main_C_88;
      WHEN main_C_88 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100111101");
        state_var_NS <= main_C_89;
      WHEN main_C_89 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100111110");
        state_var_NS <= main_C_90;
      WHEN main_C_90 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100111111");
        state_var_NS <= main_C_91;
      WHEN main_C_91 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101000000");
        state_var_NS <= main_C_92;
      WHEN main_C_92 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101000001");
        state_var_NS <= main_C_93;
      WHEN main_C_93 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101000010");
        state_var_NS <= main_C_94;
      WHEN main_C_94 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101000011");
        state_var_NS <= main_C_95;
      WHEN main_C_95 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101000100");
        state_var_NS <= main_C_96;
      WHEN main_C_96 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101000101");
        state_var_NS <= main_C_97;
      WHEN main_C_97 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101000110");
        state_var_NS <= main_C_98;
      WHEN main_C_98 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101000111");
        state_var_NS <= main_C_99;
      WHEN main_C_99 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101001000");
        state_var_NS <= main_C_100;
      WHEN main_C_100 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101001001");
        state_var_NS <= main_C_101;
      WHEN main_C_101 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101001010");
        state_var_NS <= main_C_102;
      WHEN main_C_102 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101001011");
        state_var_NS <= main_C_103;
      WHEN main_C_103 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101001100");
        state_var_NS <= main_C_104;
      WHEN main_C_104 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101001101");
        state_var_NS <= main_C_105;
      WHEN main_C_105 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101001110");
        state_var_NS <= main_C_106;
      WHEN main_C_106 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101001111");
        state_var_NS <= main_C_107;
      WHEN main_C_107 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101010000");
        state_var_NS <= main_C_108;
      WHEN main_C_108 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101010001");
        state_var_NS <= main_C_109;
      WHEN main_C_109 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101010010");
        state_var_NS <= main_C_110;
      WHEN main_C_110 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101010011");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_5_1_C_0;
      WHEN QUANTIZE_ACTIVATION_LOOP_5_1_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101010100");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_5_1_C_1;
      WHEN QUANTIZE_ACTIVATION_LOOP_5_1_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101010101");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_5_1_C_2;
      WHEN QUANTIZE_ACTIVATION_LOOP_5_1_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101010110");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_5_1_C_3;
      WHEN QUANTIZE_ACTIVATION_LOOP_5_1_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101010111");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_5_1_C_4;
      WHEN QUANTIZE_ACTIVATION_LOOP_5_1_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101011000");
        state_var_NS <= QUANTIZE_ACTIVATION_LOOP_5_1_C_5;
      WHEN QUANTIZE_ACTIVATION_LOOP_5_1_C_5 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101011001");
        IF ( QUANTIZE_ACTIVATION_LOOP_5_1_C_5_tr0 = '1' ) THEN
          state_var_NS <= QUANTIZE_ACTIVATION_LOOP_4_1_C_0;
        ELSE
          state_var_NS <= QUANTIZE_ACTIVATION_LOOP_5_1_C_0;
        END IF;
      WHEN QUANTIZE_ACTIVATION_LOOP_4_1_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101011010");
        IF ( QUANTIZE_ACTIVATION_LOOP_4_1_C_0_tr0 = '1' ) THEN
          state_var_NS <= QUANTIZE_ACTIVATION_LOOP_3_1_C_0;
        ELSE
          state_var_NS <= QUANTIZE_ACTIVATION_LOOP_5_1_C_0;
        END IF;
      WHEN QUANTIZE_ACTIVATION_LOOP_3_1_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101011011");
        IF ( QUANTIZE_ACTIVATION_LOOP_3_1_C_0_tr0 = '1' ) THEN
          state_var_NS <= output_vinit_C_0;
        ELSE
          state_var_NS <= QUANTIZE_ACTIVATION_LOOP_5_1_C_0;
        END IF;
      WHEN output_vinit_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101011100");
        state_var_NS <= output_vinit_C_1;
      WHEN output_vinit_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101011101");
        IF ( output_vinit_C_1_tr0 = '1' ) THEN
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_4_3_C_0;
        ELSE
          state_var_NS <= output_vinit_C_0;
        END IF;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_4_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101011110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_0;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101011111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_1;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101100000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_2;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101100001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_3;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101100010");
        IF ( LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_3_tr0 = '1' ) THEN
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_4_3_C_1;
        ELSE
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_0;
        END IF;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_4_3_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101100011");
        IF ( LINEAR_FORWARD_NO_MUL_LOOP_4_3_C_1_tr0 = '1' ) THEN
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_3_3_C_0;
        ELSE
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_4_3_C_0;
        END IF;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_3_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101100100");
        IF ( LINEAR_FORWARD_NO_MUL_LOOP_3_3_C_0_tr0 = '1' ) THEN
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_0;
        ELSE
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_4_3_C_0;
        END IF;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101100101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_1;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101100110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_2;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101100111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_3;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101101000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_4;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_4 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101101001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_5;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_5 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101101010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_6;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_6 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101101011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_7;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_7 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101101100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_8;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_8 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101101101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_9;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_9 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101101110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_10;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_10 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101101111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_11;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_11 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101110000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_12;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_12 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101110001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_13;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_13 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101110010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_14;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_14 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101110011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_15;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_15 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101110100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_16;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_16 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101110101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_17;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_17 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101110110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_18;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_18 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101110111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_19;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_19 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101111000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_20;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_20 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101111001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_21;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_21 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101111010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_22;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_22 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101111011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_23;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_23 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101111100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_24;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_24 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101111101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_25;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_25 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101111110");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_26;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_26 =>
        fsm_output <= STD_LOGIC_VECTOR'( "101111111");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_27;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_27 =>
        fsm_output <= STD_LOGIC_VECTOR'( "110000000");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_28;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_28 =>
        fsm_output <= STD_LOGIC_VECTOR'( "110000001");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_29;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_29 =>
        fsm_output <= STD_LOGIC_VECTOR'( "110000010");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_30;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_30 =>
        fsm_output <= STD_LOGIC_VECTOR'( "110000011");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_31;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_31 =>
        fsm_output <= STD_LOGIC_VECTOR'( "110000100");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_32;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_32 =>
        fsm_output <= STD_LOGIC_VECTOR'( "110000101");
        state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_33;
      WHEN LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_33 =>
        fsm_output <= STD_LOGIC_VECTOR'( "110000110");
        IF ( LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_33_tr0 = '1' ) THEN
          state_var_NS <= for_1_for_C_0;
        ELSE
          state_var_NS <= LINEAR_FORWARD_NO_MUL_LOOP_4_3_C_0;
        END IF;
      WHEN for_1_for_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "110000111");
        state_var_NS <= for_1_for_C_1;
      WHEN for_1_for_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "110001000");
        state_var_NS <= for_1_for_C_2;
      WHEN for_1_for_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "110001001");
        IF ( for_1_for_C_2_tr0 = '1' ) THEN
          state_var_NS <= main_C_0;
        ELSE
          state_var_NS <= for_1_for_C_0;
        END IF;
      -- main_C_0
      WHEN OTHERS =>
        fsm_output <= STD_LOGIC_VECTOR'( "000000000");
        state_var_NS <= for_for_C_0;
    END CASE;
  END PROCESS dut_core_core_fsm_1;

  dut_core_core_fsm_1_REG : PROCESS (clk)
  BEGIN
    IF clk'event AND ( clk = '1' ) THEN
      IF ( rst = '1' ) THEN
        state_var <= main_C_0;
      ELSE
        IF ( input_rsc_clken_d_1 = '1' ) THEN
          state_var <= state_var_NS;
        END IF;
      END IF;
    END IF;
  END PROCESS dut_core_core_fsm_1_REG;

END v14;

-- ------------------------------------------------------------------
--  Design Unit:    dut_core_wait_dp
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_core_wait_dp IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    rms_norm_384_div_cmp_z : IN STD_LOGIC_VECTOR (71 DOWNTO 0);
    core_wen1 : IN STD_LOGIC;
    rms_norm_384_div_cmp_z_oreg : OUT STD_LOGIC_VECTOR (39 DOWNTO 0)
  );
END dut_core_wait_dp;

ARCHITECTURE v14 OF dut_core_wait_dp IS
  -- Interconnect Declarations
  SIGNAL rms_norm_384_div_cmp_z_oreg_pconst_39_0 : STD_LOGIC_VECTOR (39 DOWNTO 0);

BEGIN
  rms_norm_384_div_cmp_z_oreg <= rms_norm_384_div_cmp_z_oreg_pconst_39_0;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        rms_norm_384_div_cmp_z_oreg_pconst_39_0 <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000");
      ELSIF ( core_wen1 = '1' ) THEN
        rms_norm_384_div_cmp_z_oreg_pconst_39_0 <= rms_norm_384_div_cmp_z(39 DOWNTO
            0);
      END IF;
    END IF;
  END PROCESS;
END v14;

-- ------------------------------------------------------------------
--  Design Unit:    dut_core_staller
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_core_staller IS
  PORT(
    en : IN STD_LOGIC;
    core_wen1 : OUT STD_LOGIC;
    strm_in_rsci_wen_comp : IN STD_LOGIC;
    strm_out_rsci_wen_comp : IN STD_LOGIC;
    input_rsc_clken_d_1 : OUT STD_LOGIC
  );
END dut_core_staller;

ARCHITECTURE v14 OF dut_core_staller IS
  -- Output Reader Declarations
  SIGNAL core_wen1_drv : STD_LOGIC;

BEGIN
  -- Output Reader Assignments
  core_wen1 <= core_wen1_drv;

  input_rsc_clken_d_1 <= core_wen1_drv AND en;
  core_wen1_drv <= strm_in_rsci_wen_comp AND strm_out_rsci_wen_comp;
END v14;

-- ------------------------------------------------------------------
--  Design Unit:    dut_core_strm_out_rsci_strm_out_wait_ctrl
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_core_strm_out_rsci_strm_out_wait_ctrl IS
  PORT(
    strm_out_rsci_iswt0 : IN STD_LOGIC;
    strm_out_rsci_biwt : OUT STD_LOGIC;
    strm_out_rsci_irdy : IN STD_LOGIC
  );
END dut_core_strm_out_rsci_strm_out_wait_ctrl;

ARCHITECTURE v14 OF dut_core_strm_out_rsci_strm_out_wait_ctrl IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  strm_out_rsci_biwt <= strm_out_rsci_iswt0 AND strm_out_rsci_irdy;
END v14;

-- ------------------------------------------------------------------
--  Design Unit:    dut_core_strm_in_rsci_strm_in_wait_ctrl
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_core_strm_in_rsci_strm_in_wait_ctrl IS
  PORT(
    strm_in_rsci_iswt0 : IN STD_LOGIC;
    strm_in_rsci_biwt : OUT STD_LOGIC;
    strm_in_rsci_ivld : IN STD_LOGIC
  );
END dut_core_strm_in_rsci_strm_in_wait_ctrl;

ARCHITECTURE v14 OF dut_core_strm_in_rsci_strm_in_wait_ctrl IS
  CONSTANT PowerPro_35032 : STD_LOGIC := '1';
BEGIN
  strm_in_rsci_biwt <= strm_in_rsci_iswt0 AND strm_in_rsci_ivld;
END v14;

-- ------------------------------------------------------------------
--  Design Unit:    dut_core_strm_out_rsci
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_core_strm_out_rsci IS
  PORT(
    strm_out_rsc_dat : OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
    strm_out_rsc_vld : OUT STD_LOGIC;
    strm_out_rsc_rdy : IN STD_LOGIC;
    strm_out_rsci_oswt : IN STD_LOGIC;
    strm_out_rsci_wen_comp : OUT STD_LOGIC;
    strm_out_rsci_idat : IN STD_LOGIC_VECTOR (31 DOWNTO 0)
  );
END dut_core_strm_out_rsci;

ARCHITECTURE v14 OF dut_core_strm_out_rsci IS
  -- Interconnect Declarations
  SIGNAL strm_out_rsci_biwt : STD_LOGIC;
  SIGNAL strm_out_rsci_irdy : STD_LOGIC;

  SIGNAL strm_out_rsci_idat_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL strm_out_rsci_dat : STD_LOGIC_VECTOR (31 DOWNTO 0);

  COMPONENT dut_core_strm_out_rsci_strm_out_wait_ctrl
    PORT(
      strm_out_rsci_iswt0 : IN STD_LOGIC;
      strm_out_rsci_biwt : OUT STD_LOGIC;
      strm_out_rsci_irdy : IN STD_LOGIC
    );
  END COMPONENT;
BEGIN
  strm_out_rsci : mgc_hls.ccs_out_wait_pkg_v1.ccs_out_wait_v1
    GENERIC MAP(
      rscid => 2,
      width => 32
      )
    PORT MAP(
      irdy => strm_out_rsci_irdy,
      ivld => strm_out_rsci_oswt,
      idat => strm_out_rsci_idat_1,
      rdy => strm_out_rsc_rdy,
      vld => strm_out_rsc_vld,
      dat => strm_out_rsci_dat
    );
  strm_out_rsci_idat_1 <= (strm_out_rsci_idat(31 DOWNTO 2)) & STD_LOGIC_VECTOR'(
      "00");
  strm_out_rsc_dat <= strm_out_rsci_dat;

  dut_core_strm_out_rsci_strm_out_wait_ctrl_inst : dut_core_strm_out_rsci_strm_out_wait_ctrl
    PORT MAP(
      strm_out_rsci_iswt0 => strm_out_rsci_oswt,
      strm_out_rsci_biwt => strm_out_rsci_biwt,
      strm_out_rsci_irdy => strm_out_rsci_irdy
    );
  strm_out_rsci_wen_comp <= (NOT strm_out_rsci_oswt) OR strm_out_rsci_biwt;
END v14;

-- ------------------------------------------------------------------
--  Design Unit:    dut_core_strm_in_rsci
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_core_strm_in_rsci IS
  PORT(
    strm_in_rsc_dat : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
    strm_in_rsc_vld : IN STD_LOGIC;
    strm_in_rsc_rdy : OUT STD_LOGIC;
    strm_in_rsci_oswt : IN STD_LOGIC;
    strm_in_rsci_wen_comp : OUT STD_LOGIC;
    strm_in_rsci_idat_mxwt : OUT STD_LOGIC_VECTOR (29 DOWNTO 0)
  );
END dut_core_strm_in_rsci;

ARCHITECTURE v14 OF dut_core_strm_in_rsci IS
  -- Interconnect Declarations
  SIGNAL strm_in_rsci_biwt : STD_LOGIC;
  SIGNAL strm_in_rsci_ivld : STD_LOGIC;
  SIGNAL strm_in_rsci_idat : STD_LOGIC_VECTOR (31 DOWNTO 0);

  SIGNAL strm_in_rsci_dat : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL strm_in_rsci_idat_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);

  COMPONENT dut_core_strm_in_rsci_strm_in_wait_ctrl
    PORT(
      strm_in_rsci_iswt0 : IN STD_LOGIC;
      strm_in_rsci_biwt : OUT STD_LOGIC;
      strm_in_rsci_ivld : IN STD_LOGIC
    );
  END COMPONENT;
BEGIN
  strm_in_rsci : mgc_hls.ccs_in_wait_pkg_v1.ccs_in_wait_v1
    GENERIC MAP(
      rscid => 1,
      width => 32
      )
    PORT MAP(
      rdy => strm_in_rsc_rdy,
      vld => strm_in_rsc_vld,
      dat => strm_in_rsci_dat,
      irdy => strm_in_rsci_oswt,
      ivld => strm_in_rsci_ivld,
      idat => strm_in_rsci_idat_1
    );
  strm_in_rsci_dat <= strm_in_rsc_dat;
  strm_in_rsci_idat <= strm_in_rsci_idat_1;

  dut_core_strm_in_rsci_strm_in_wait_ctrl_inst : dut_core_strm_in_rsci_strm_in_wait_ctrl
    PORT MAP(
      strm_in_rsci_iswt0 => strm_in_rsci_oswt,
      strm_in_rsci_biwt => strm_in_rsci_biwt,
      strm_in_rsci_ivld => strm_in_rsci_ivld
    );
  strm_in_rsci_idat_mxwt <= strm_in_rsci_idat(31 DOWNTO 2);
  strm_in_rsci_wen_comp <= (NOT strm_in_rsci_oswt) OR strm_in_rsci_biwt;
END v14;

-- ------------------------------------------------------------------
--  Design Unit:    dut_core
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut_core IS
  PORT(
    clk : IN STD_LOGIC;
    en : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    strm_in_rsc_dat : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
    strm_in_rsc_vld : IN STD_LOGIC;
    strm_in_rsc_rdy : OUT STD_LOGIC;
    strm_out_rsc_dat : OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
    strm_out_rsc_vld : OUT STD_LOGIC;
    strm_out_rsc_rdy : IN STD_LOGIC;
    input_rsci_clken_d : OUT STD_LOGIC;
    input_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    input_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    input_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    input_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    output_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
    output_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    output_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    output_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    attention_5_1_384_384_8_48_quantized_hidden_states_rsci_d_d : OUT STD_LOGIC_VECTOR
        (7 DOWNTO 0);
    attention_5_1_384_384_8_48_quantized_hidden_states_rsci_q_d : IN STD_LOGIC_VECTOR
        (7 DOWNTO 0);
    attention_5_1_384_384_8_48_quantized_hidden_states_rsci_radr_d : OUT STD_LOGIC_VECTOR
        (8 DOWNTO 0);
    attention_5_1_384_384_8_48_quantized_hidden_states_rsci_wadr_d : OUT STD_LOGIC_VECTOR
        (8 DOWNTO 0);
    attention_5_1_384_384_8_48_q_proj_re_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_q_proj_re_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_q_proj_re_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_q_proj_re_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_proj_re_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_proj_re_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_proj_re_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_proj_re_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_v_proj_re_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_v_proj_re_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_v_proj_re_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_v_proj_re_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_q_proj_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    attention_5_1_384_384_8_48_q_proj_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_q_proj_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_proj_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    attention_5_1_384_384_8_48_k_proj_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_proj_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_v_proj_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
    attention_5_1_384_384_8_48_v_proj_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_v_proj_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_q_embed_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_q_embed_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_q_embed_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_q_embed_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_embed_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_embed_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_embed_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_embed_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_cache_upd_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_k_cache_upd_rsci_radr_d : OUT STD_LOGIC_VECTOR (11
        DOWNTO 0);
    attention_5_1_384_384_8_48_k_cache_upd_rsci_wadr_d : OUT STD_LOGIC_VECTOR (11
        DOWNTO 0);
    attention_5_1_384_384_8_48_v_cache_upd_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_v_cache_upd_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_v_cache_upd_rsci_radr_d : OUT STD_LOGIC_VECTOR (11
        DOWNTO 0);
    attention_5_1_384_384_8_48_v_cache_upd_rsci_wadr_d : OUT STD_LOGIC_VECTOR (11
        DOWNTO 0);
    attention_5_1_384_384_8_48_k_proj_transposed_rsci_q_d : IN STD_LOGIC_VECTOR (39
        DOWNTO 0);
    attention_5_1_384_384_8_48_k_proj_transposed_rsci_radr_d : OUT STD_LOGIC_VECTOR
        (11 DOWNTO 0);
    attention_5_1_384_384_8_48_k_proj_transposed_rsci_wadr_d : OUT STD_LOGIC_VECTOR
        (11 DOWNTO 0);
    attention_5_1_384_384_8_48_attn_weights_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_attn_weights_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_attn_weights_rsci_radr_d : OUT STD_LOGIC_VECTOR (5
        DOWNTO 0);
    attention_5_1_384_384_8_48_attn_weights_rsci_wadr_d : OUT STD_LOGIC_VECTOR (5
        DOWNTO 0);
    attention_5_1_384_384_8_48_attn_output_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_attn_output_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
        0);
    attention_5_1_384_384_8_48_attn_output_rsci_radr_d : OUT STD_LOGIC_VECTOR (8
        DOWNTO 0);
    attention_5_1_384_384_8_48_attn_output_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8
        DOWNTO 0);
    attention_5_1_384_384_8_48_attn_output_2D_rsci_d_d : OUT STD_LOGIC_VECTOR (39
        DOWNTO 0);
    attention_5_1_384_384_8_48_attn_output_2D_rsci_q_d : IN STD_LOGIC_VECTOR (39
        DOWNTO 0);
    attention_5_1_384_384_8_48_attn_output_2D_rsci_radr_d : OUT STD_LOGIC_VECTOR
        (8 DOWNTO 0);
    attention_5_1_384_384_8_48_attn_output_2D_rsci_wadr_d : OUT STD_LOGIC_VECTOR
        (8 DOWNTO 0);
    attention_5_1_384_384_8_48_quantized_final_output_rsci_q_d : IN STD_LOGIC_VECTOR
        (7 DOWNTO 0);
    attention_5_1_384_384_8_48_quantized_final_output_rsci_radr_d : OUT STD_LOGIC_VECTOR
        (8 DOWNTO 0);
    attention_5_1_384_384_8_48_quantized_final_output_rsci_wadr_d : OUT STD_LOGIC_VECTOR
        (8 DOWNTO 0);
    apply_rotary_pos_emb_1_8_48_rotated_q_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
        0);
    apply_rotary_pos_emb_1_8_48_rotated_q_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
        0);
    apply_rotary_pos_emb_1_8_48_rotated_q_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    apply_rotary_pos_emb_1_8_48_rotated_q_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    apply_rotary_pos_emb_1_8_48_rotated_k_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
        0);
    apply_rotary_pos_emb_1_8_48_rotated_k_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
        0);
    apply_rotary_pos_emb_1_8_48_rotated_k_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    apply_rotary_pos_emb_1_8_48_rotated_k_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
        0);
    rms_norm_384_div_cmp_a : OUT STD_LOGIC_VECTOR (71 DOWNTO 0);
    rms_norm_384_div_cmp_b : OUT STD_LOGIC_VECTOR (60 DOWNTO 0);
    rms_norm_384_div_cmp_z : IN STD_LOGIC_VECTOR (71 DOWNTO 0);
    input_rsci_re_d_pff : OUT STD_LOGIC;
    input_rsci_we_d_pff : OUT STD_LOGIC;
    output_rsci_re_d_pff : OUT STD_LOGIC;
    output_rsci_we_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_quantized_hidden_states_rsci_re_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_quantized_hidden_states_rsci_we_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_q_proj_re_rsci_re_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_q_proj_re_rsci_we_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_k_proj_re_rsci_we_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_v_proj_re_rsci_re_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_v_proj_re_rsci_we_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_q_proj_rsci_re_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_q_proj_rsci_we_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_v_proj_rsci_re_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_v_proj_rsci_we_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_q_embed_rsci_re_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_q_embed_rsci_we_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_k_embed_rsci_re_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_k_cache_upd_rsci_re_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_k_cache_upd_rsci_we_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_v_cache_upd_rsci_re_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_k_proj_transposed_rsci_we_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_attn_weights_rsci_re_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_attn_weights_rsci_we_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_attn_output_rsci_re_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_attn_output_rsci_we_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_attn_output_2D_rsci_re_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_attn_output_2D_rsci_we_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_quantized_final_output_rsci_re_d_pff : OUT STD_LOGIC;
    attention_5_1_384_384_8_48_quantized_final_output_rsci_we_d_pff : OUT STD_LOGIC;
    apply_rotary_pos_emb_1_8_48_rotated_q_rsci_re_d_pff : OUT STD_LOGIC;
    apply_rotary_pos_emb_1_8_48_rotated_q_rsci_we_d_pff : OUT STD_LOGIC
  );
END dut_core;

ARCHITECTURE v14 OF dut_core IS
  -- Interconnect Declarations
  SIGNAL core_wen1 : STD_LOGIC;
  SIGNAL strm_in_rsci_wen_comp : STD_LOGIC;
  SIGNAL strm_in_rsci_idat_mxwt : STD_LOGIC_VECTOR (29 DOWNTO 0);
  SIGNAL strm_out_rsci_wen_comp : STD_LOGIC;
  SIGNAL input_rsc_clken_d_1 : STD_LOGIC;
  SIGNAL SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_z : STD_LOGIC_VECTOR (55 DOWNTO
      0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z
      : STD_LOGIC_VECTOR (71 DOWNTO 0);
  SIGNAL rms_norm_384_div_cmp_z_oreg : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL strm_out_rsci_idat_31_2 : STD_LOGIC_VECTOR (29 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_a_71_32
      : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_29_0 : STD_LOGIC_VECTOR (29
      DOWNTO 0);
  SIGNAL fsm_output : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_3_weight_val_mux_tmp : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_LINEAR_FORWARD_NO_MUL_LOOP_2_nor_tmp : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_LINEAR_FORWARD_NO_MUL_LOOP_5_and_1_tmp : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_mux_tmp : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL or_tmp_5 : STD_LOGIC;
  SIGNAL mux_tmp_28 : STD_LOGIC;
  SIGNAL or_tmp_24 : STD_LOGIC;
  SIGNAL and_dcpl_12 : STD_LOGIC;
  SIGNAL or_tmp_26 : STD_LOGIC;
  SIGNAL not_tmp_35 : STD_LOGIC;
  SIGNAL or_tmp_30 : STD_LOGIC;
  SIGNAL or_tmp_32 : STD_LOGIC;
  SIGNAL and_dcpl_25 : STD_LOGIC;
  SIGNAL and_dcpl_29 : STD_LOGIC;
  SIGNAL and_dcpl_39 : STD_LOGIC;
  SIGNAL mux_tmp_125 : STD_LOGIC;
  SIGNAL mux_tmp_167 : STD_LOGIC;
  SIGNAL mux_tmp_171 : STD_LOGIC;
  SIGNAL nor_tmp_54 : STD_LOGIC;
  SIGNAL mux_tmp_237 : STD_LOGIC;
  SIGNAL or_tmp_197 : STD_LOGIC;
  SIGNAL mux_tmp_238 : STD_LOGIC;
  SIGNAL mux_tmp_239 : STD_LOGIC;
  SIGNAL and_dcpl_88 : STD_LOGIC;
  SIGNAL or_tmp_216 : STD_LOGIC;
  SIGNAL mux_tmp_259 : STD_LOGIC;
  SIGNAL or_tmp_229 : STD_LOGIC;
  SIGNAL and_dcpl_107 : STD_LOGIC;
  SIGNAL and_dcpl_109 : STD_LOGIC;
  SIGNAL and_dcpl_110 : STD_LOGIC;
  SIGNAL and_dcpl_111 : STD_LOGIC;
  SIGNAL and_dcpl_116 : STD_LOGIC;
  SIGNAL and_dcpl_117 : STD_LOGIC;
  SIGNAL and_dcpl_118 : STD_LOGIC;
  SIGNAL or_dcpl_89 : STD_LOGIC;
  SIGNAL or_dcpl_90 : STD_LOGIC;
  SIGNAL or_tmp_233 : STD_LOGIC;
  SIGNAL and_tmp_6 : STD_LOGIC;
  SIGNAL and_dcpl_120 : STD_LOGIC;
  SIGNAL and_dcpl_121 : STD_LOGIC;
  SIGNAL and_dcpl_122 : STD_LOGIC;
  SIGNAL or_dcpl_93 : STD_LOGIC;
  SIGNAL or_dcpl_96 : STD_LOGIC;
  SIGNAL or_dcpl_100 : STD_LOGIC;
  SIGNAL or_dcpl_101 : STD_LOGIC;
  SIGNAL mux_tmp_302 : STD_LOGIC;
  SIGNAL and_dcpl_126 : STD_LOGIC;
  SIGNAL and_dcpl_127 : STD_LOGIC;
  SIGNAL and_dcpl_128 : STD_LOGIC;
  SIGNAL and_dcpl_129 : STD_LOGIC;
  SIGNAL and_dcpl_131 : STD_LOGIC;
  SIGNAL and_dcpl_133 : STD_LOGIC;
  SIGNAL and_dcpl_134 : STD_LOGIC;
  SIGNAL and_dcpl_137 : STD_LOGIC;
  SIGNAL and_dcpl_138 : STD_LOGIC;
  SIGNAL and_dcpl_139 : STD_LOGIC;
  SIGNAL and_dcpl_140 : STD_LOGIC;
  SIGNAL and_dcpl_144 : STD_LOGIC;
  SIGNAL and_dcpl_146 : STD_LOGIC;
  SIGNAL and_dcpl_149 : STD_LOGIC;
  SIGNAL and_dcpl_152 : STD_LOGIC;
  SIGNAL and_dcpl_154 : STD_LOGIC;
  SIGNAL and_dcpl_156 : STD_LOGIC;
  SIGNAL and_dcpl_157 : STD_LOGIC;
  SIGNAL and_dcpl_158 : STD_LOGIC;
  SIGNAL and_dcpl_159 : STD_LOGIC;
  SIGNAL or_tmp_260 : STD_LOGIC;
  SIGNAL mux_tmp_332 : STD_LOGIC;
  SIGNAL mux_tmp_333 : STD_LOGIC;
  SIGNAL and_dcpl_160 : STD_LOGIC;
  SIGNAL and_dcpl_161 : STD_LOGIC;
  SIGNAL and_dcpl_162 : STD_LOGIC;
  SIGNAL and_dcpl_163 : STD_LOGIC;
  SIGNAL and_dcpl_164 : STD_LOGIC;
  SIGNAL or_tmp_276 : STD_LOGIC;
  SIGNAL mux_tmp_338 : STD_LOGIC;
  SIGNAL mux_tmp_340 : STD_LOGIC;
  SIGNAL and_dcpl_167 : STD_LOGIC;
  SIGNAL and_dcpl_169 : STD_LOGIC;
  SIGNAL and_dcpl_170 : STD_LOGIC;
  SIGNAL mux_tmp_344 : STD_LOGIC;
  SIGNAL mux_tmp_348 : STD_LOGIC;
  SIGNAL mux_tmp_350 : STD_LOGIC;
  SIGNAL and_dcpl_174 : STD_LOGIC;
  SIGNAL and_dcpl_175 : STD_LOGIC;
  SIGNAL and_dcpl_176 : STD_LOGIC;
  SIGNAL or_tmp_283 : STD_LOGIC;
  SIGNAL mux_tmp_356 : STD_LOGIC;
  SIGNAL mux_tmp_358 : STD_LOGIC;
  SIGNAL and_dcpl_182 : STD_LOGIC;
  SIGNAL not_tmp_240 : STD_LOGIC;
  SIGNAL or_dcpl_111 : STD_LOGIC;
  SIGNAL mux_tmp_373 : STD_LOGIC;
  SIGNAL and_dcpl_185 : STD_LOGIC;
  SIGNAL and_dcpl_186 : STD_LOGIC;
  SIGNAL and_dcpl_188 : STD_LOGIC;
  SIGNAL and_dcpl_189 : STD_LOGIC;
  SIGNAL and_dcpl_190 : STD_LOGIC;
  SIGNAL and_dcpl_196 : STD_LOGIC;
  SIGNAL and_dcpl_197 : STD_LOGIC;
  SIGNAL and_dcpl_201 : STD_LOGIC;
  SIGNAL and_dcpl_204 : STD_LOGIC;
  SIGNAL not_tmp_245 : STD_LOGIC;
  SIGNAL and_dcpl_208 : STD_LOGIC;
  SIGNAL and_dcpl_210 : STD_LOGIC;
  SIGNAL and_dcpl_211 : STD_LOGIC;
  SIGNAL and_dcpl_212 : STD_LOGIC;
  SIGNAL and_dcpl_213 : STD_LOGIC;
  SIGNAL and_dcpl_214 : STD_LOGIC;
  SIGNAL and_dcpl_215 : STD_LOGIC;
  SIGNAL and_dcpl_217 : STD_LOGIC;
  SIGNAL and_dcpl_218 : STD_LOGIC;
  SIGNAL or_tmp_314 : STD_LOGIC;
  SIGNAL or_tmp_315 : STD_LOGIC;
  SIGNAL and_dcpl_227 : STD_LOGIC;
  SIGNAL and_dcpl_228 : STD_LOGIC;
  SIGNAL or_dcpl_116 : STD_LOGIC;
  SIGNAL and_dcpl_233 : STD_LOGIC;
  SIGNAL and_dcpl_234 : STD_LOGIC;
  SIGNAL and_dcpl_238 : STD_LOGIC;
  SIGNAL and_dcpl_239 : STD_LOGIC;
  SIGNAL and_dcpl_240 : STD_LOGIC;
  SIGNAL and_dcpl_241 : STD_LOGIC;
  SIGNAL and_dcpl_242 : STD_LOGIC;
  SIGNAL and_dcpl_243 : STD_LOGIC;
  SIGNAL and_dcpl_245 : STD_LOGIC;
  SIGNAL and_dcpl_246 : STD_LOGIC;
  SIGNAL and_dcpl_247 : STD_LOGIC;
  SIGNAL and_dcpl_248 : STD_LOGIC;
  SIGNAL and_dcpl_253 : STD_LOGIC;
  SIGNAL and_dcpl_254 : STD_LOGIC;
  SIGNAL and_dcpl_257 : STD_LOGIC;
  SIGNAL and_dcpl_263 : STD_LOGIC;
  SIGNAL and_dcpl_270 : STD_LOGIC;
  SIGNAL and_dcpl_271 : STD_LOGIC;
  SIGNAL nor_tmp_104 : STD_LOGIC;
  SIGNAL and_dcpl_282 : STD_LOGIC;
  SIGNAL and_dcpl_284 : STD_LOGIC;
  SIGNAL and_dcpl_285 : STD_LOGIC;
  SIGNAL mux_tmp_401 : STD_LOGIC;
  SIGNAL or_tmp_353 : STD_LOGIC;
  SIGNAL mux_tmp_403 : STD_LOGIC;
  SIGNAL and_dcpl_289 : STD_LOGIC;
  SIGNAL and_dcpl_290 : STD_LOGIC;
  SIGNAL and_dcpl_291 : STD_LOGIC;
  SIGNAL or_tmp_355 : STD_LOGIC;
  SIGNAL and_dcpl_297 : STD_LOGIC;
  SIGNAL and_dcpl_298 : STD_LOGIC;
  SIGNAL and_dcpl_299 : STD_LOGIC;
  SIGNAL and_dcpl_303 : STD_LOGIC;
  SIGNAL and_dcpl_306 : STD_LOGIC;
  SIGNAL or_tmp_370 : STD_LOGIC;
  SIGNAL and_dcpl_311 : STD_LOGIC;
  SIGNAL mux_tmp_417 : STD_LOGIC;
  SIGNAL nand_tmp_21 : STD_LOGIC;
  SIGNAL mux_tmp_418 : STD_LOGIC;
  SIGNAL and_dcpl_316 : STD_LOGIC;
  SIGNAL and_dcpl_317 : STD_LOGIC;
  SIGNAL or_tmp_381 : STD_LOGIC;
  SIGNAL and_dcpl_331 : STD_LOGIC;
  SIGNAL and_dcpl_342 : STD_LOGIC;
  SIGNAL or_tmp_407 : STD_LOGIC;
  SIGNAL or_tmp_408 : STD_LOGIC;
  SIGNAL or_tmp_410 : STD_LOGIC;
  SIGNAL and_dcpl_349 : STD_LOGIC;
  SIGNAL and_dcpl_350 : STD_LOGIC;
  SIGNAL and_dcpl_351 : STD_LOGIC;
  SIGNAL and_dcpl_354 : STD_LOGIC;
  SIGNAL and_dcpl_355 : STD_LOGIC;
  SIGNAL and_dcpl_360 : STD_LOGIC;
  SIGNAL and_dcpl_361 : STD_LOGIC;
  SIGNAL and_dcpl_366 : STD_LOGIC;
  SIGNAL and_dcpl_368 : STD_LOGIC;
  SIGNAL and_dcpl_369 : STD_LOGIC;
  SIGNAL and_dcpl_370 : STD_LOGIC;
  SIGNAL not_tmp_327 : STD_LOGIC;
  SIGNAL and_dcpl_374 : STD_LOGIC;
  SIGNAL and_dcpl_379 : STD_LOGIC;
  SIGNAL and_dcpl_393 : STD_LOGIC;
  SIGNAL mux_tmp_528 : STD_LOGIC;
  SIGNAL or_tmp_510 : STD_LOGIC;
  SIGNAL mux_tmp_534 : STD_LOGIC;
  SIGNAL mux_tmp_542 : STD_LOGIC;
  SIGNAL mux_tmp_543 : STD_LOGIC;
  SIGNAL mux_tmp_545 : STD_LOGIC;
  SIGNAL or_tmp_547 : STD_LOGIC;
  SIGNAL and_dcpl_397 : STD_LOGIC;
  SIGNAL and_dcpl_398 : STD_LOGIC;
  SIGNAL and_dcpl_400 : STD_LOGIC;
  SIGNAL mux_tmp_579 : STD_LOGIC;
  SIGNAL and_dcpl_409 : STD_LOGIC;
  SIGNAL and_dcpl_431 : STD_LOGIC;
  SIGNAL and_dcpl_438 : STD_LOGIC;
  SIGNAL or_tmp_636 : STD_LOGIC;
  SIGNAL nor_tmp_151 : STD_LOGIC;
  SIGNAL mux_tmp_649 : STD_LOGIC;
  SIGNAL or_tmp_645 : STD_LOGIC;
  SIGNAL mux_tmp_662 : STD_LOGIC;
  SIGNAL nand_tmp_40 : STD_LOGIC;
  SIGNAL mux_tmp_665 : STD_LOGIC;
  SIGNAL mux_tmp_667 : STD_LOGIC;
  SIGNAL or_tmp_651 : STD_LOGIC;
  SIGNAL and_dcpl_445 : STD_LOGIC;
  SIGNAL or_dcpl_136 : STD_LOGIC;
  SIGNAL or_dcpl_137 : STD_LOGIC;
  SIGNAL or_dcpl_138 : STD_LOGIC;
  SIGNAL mux_tmp_685 : STD_LOGIC;
  SIGNAL or_tmp_705 : STD_LOGIC;
  SIGNAL or_tmp_727 : STD_LOGIC;
  SIGNAL or_tmp_729 : STD_LOGIC;
  SIGNAL or_tmp_748 : STD_LOGIC;
  SIGNAL and_dcpl_454 : STD_LOGIC;
  SIGNAL mux_tmp_790 : STD_LOGIC;
  SIGNAL not_tmp_429 : STD_LOGIC;
  SIGNAL mux_tmp_803 : STD_LOGIC;
  SIGNAL mux_tmp_805 : STD_LOGIC;
  SIGNAL and_dcpl_461 : STD_LOGIC;
  SIGNAL and_dcpl_462 : STD_LOGIC;
  SIGNAL or_tmp_841 : STD_LOGIC;
  SIGNAL or_tmp_859 : STD_LOGIC;
  SIGNAL and_dcpl_478 : STD_LOGIC;
  SIGNAL nand_tmp_58 : STD_LOGIC;
  SIGNAL or_tmp_895 : STD_LOGIC;
  SIGNAL and_dcpl_482 : STD_LOGIC;
  SIGNAL and_dcpl_488 : STD_LOGIC;
  SIGNAL and_dcpl_503 : STD_LOGIC;
  SIGNAL and_dcpl_512 : STD_LOGIC;
  SIGNAL or_tmp_936 : STD_LOGIC;
  SIGNAL or_tmp_937 : STD_LOGIC;
  SIGNAL mux_tmp_963 : STD_LOGIC;
  SIGNAL and_dcpl_518 : STD_LOGIC;
  SIGNAL or_tmp_953 : STD_LOGIC;
  SIGNAL nand_tmp_69 : STD_LOGIC;
  SIGNAL nand_tmp_70 : STD_LOGIC;
  SIGNAL or_tmp_955 : STD_LOGIC;
  SIGNAL or_tmp_958 : STD_LOGIC;
  SIGNAL and_dcpl_527 : STD_LOGIC;
  SIGNAL or_tmp_963 : STD_LOGIC;
  SIGNAL mux_tmp_991 : STD_LOGIC;
  SIGNAL or_dcpl_169 : STD_LOGIC;
  SIGNAL or_dcpl_181 : STD_LOGIC;
  SIGNAL or_dcpl_185 : STD_LOGIC;
  SIGNAL or_tmp_968 : STD_LOGIC;
  SIGNAL mux_tmp_996 : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_1_LINEAR_FORWARD_NO_MUL_LOOP_5_1_and_3_cse
      : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_1_and_cse : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_3_INIT_2D_MEM_LOOP_2_3_nor_itm : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_17_svs
      : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs
      : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_and_2_m1c_1 : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_2_1_slc_40_1_svs : STD_LOGIC;
  SIGNAL rms_norm_384_1_val_acc_psp_sva_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm :
      STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_or_itm : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_acc_17_svs
      : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs
      : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_and_2_m1c_1 : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_2_slc_40_1_svs : STD_LOGIC;
  SIGNAL rms_norm_384_val_acc_psp_sva_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_slc_RMS_NORM_LOOP_2_mul_67_28_ncse_sva : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL exit_QUANTIZE_ACTIVATION_LOOP_2_1_sva_dfm : STD_LOGIC;
  SIGNAL exit_QUANTIZE_ACTIVATION_LOOP_2_sva_dfm : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_slc_LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_conc_1_1_1_0_svs
      : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL exit_APPLY_ROTARY_POS_EMB_LOOP_3_sva_dfm : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_slc_71_32_1_ncse_sva : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_dfm_1_39 : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_dfm_1_38_0 : STD_LOGIC_VECTOR
      (38 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_2_mul_1_itm : STD_LOGIC_VECTOR (52 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_dfm_1_39 : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_dfm_1_38_0 : STD_LOGIC_VECTOR (38
      DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_mul_1_itm : STD_LOGIC_VECTOR (51 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_slc_LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_conc_1_1_1_0_svs
      : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL and_187_ssc : STD_LOGIC;
  SIGNAL and_188_ssc : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_59_39
      : STD_LOGIC_VECTOR (20 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_38_0
      : STD_LOGIC_VECTOR (38 DOWNTO 0);
  SIGNAL and_160_ssc : STD_LOGIC;
  SIGNAL nor_seb : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_39 : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_38_30 : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_2_and_ssc : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_dfr_sva_9 : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_dfr_sva_8_0 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_itm_17
      : STD_LOGIC;
  SIGNAL SF_LOOP_3_acc_17_sdt : STD_LOGIC_VECTOR (18 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_17_itm_18_9 : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_17_itm_8_0 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL SF_LOOP_3_and_11_ssc : STD_LOGIC;
  SIGNAL SF_LOOP_3_and_12_ssc : STD_LOGIC;
  SIGNAL SF_LOOP_3_and_14_ssc : STD_LOGIC;
  SIGNAL SF_LOOP_3_and_4_ssc : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_max_val_and_cse : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_1_max_val_and_cse : STD_LOGIC;
  SIGNAL nor_365_cse : STD_LOGIC;
  SIGNAL and_694_cse : STD_LOGIC;
  SIGNAL or_392_cse : STD_LOGIC;
  SIGNAL reg_strm_out_rsci_iswt0_cse : STD_LOGIC;
  SIGNAL reg_strm_in_rsci_iswt0_cse : STD_LOGIC;
  SIGNAL or_353_cse : STD_LOGIC;
  SIGNAL nor_366_cse : STD_LOGIC;
  SIGNAL or_373_cse : STD_LOGIC;
  SIGNAL or_381_cse : STD_LOGIC;
  SIGNAL and_692_cse : STD_LOGIC;
  SIGNAL nand_93_cse : STD_LOGIC;
  SIGNAL or_21_cse : STD_LOGIC;
  SIGNAL or_603_cse : STD_LOGIC;
  SIGNAL nor_413_cse : STD_LOGIC;
  SIGNAL or_609_cse : STD_LOGIC;
  SIGNAL or_1205_cse : STD_LOGIC;
  SIGNAL and_696_cse : STD_LOGIC;
  SIGNAL or_791_cse : STD_LOGIC;
  SIGNAL or_1215_cse : STD_LOGIC;
  SIGNAL or_745_cse : STD_LOGIC;
  SIGNAL nor_168_cse : STD_LOGIC;
  SIGNAL or_802_cse : STD_LOGIC;
  SIGNAL or_518_cse : STD_LOGIC;
  SIGNAL or_734_cse : STD_LOGIC;
  SIGNAL nand_200_cse : STD_LOGIC;
  SIGNAL nor_179_cse : STD_LOGIC;
  SIGNAL and_768_cse : STD_LOGIC;
  SIGNAL nor_494_cse : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_and_cse : STD_LOGIC;
  SIGNAL nor_411_cse : STD_LOGIC;
  SIGNAL nand_199_cse : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_and_cse : STD_LOGIC;
  SIGNAL SF_LOOP_3_and_2_cse : STD_LOGIC;
  SIGNAL reg_operator_40_24_true_AC_TRN_AC_WRAP_acc_20_cse : STD_LOGIC_VECTOR (5
      DOWNTO 0);
  SIGNAL nand_184_cse : STD_LOGIC;
  SIGNAL or_1158_cse : STD_LOGIC;
  SIGNAL or_657_cse : STD_LOGIC;
  SIGNAL or_55_cse : STD_LOGIC;
  SIGNAL or_360_cse : STD_LOGIC;
  SIGNAL or_350_cse : STD_LOGIC;
  SIGNAL or_832_cse : STD_LOGIC;
  SIGNAL and_578_cse : STD_LOGIC;
  SIGNAL nor_566_cse : STD_LOGIC;
  SIGNAL nor_239_cse : STD_LOGIC;
  SIGNAL or_170_cse : STD_LOGIC;
  SIGNAL or_231_cse : STD_LOGIC;
  SIGNAL or_890_cse : STD_LOGIC;
  SIGNAL or_310_cse : STD_LOGIC;
  SIGNAL nor_392_cse : STD_LOGIC;
  SIGNAL and_662_cse : STD_LOGIC;
  SIGNAL or_216_cse : STD_LOGIC;
  SIGNAL or_1027_cse : STD_LOGIC;
  SIGNAL or_391_cse : STD_LOGIC;
  SIGNAL or_1213_cse : STD_LOGIC;
  SIGNAL and_74_cse : STD_LOGIC;
  SIGNAL and_72_cse : STD_LOGIC;
  SIGNAL or_1054_cse : STD_LOGIC;
  SIGNAL mux_705_cse : STD_LOGIC;
  SIGNAL or_15_cse : STD_LOGIC;
  SIGNAL or_58_cse : STD_LOGIC;
  SIGNAL or_367_cse : STD_LOGIC;
  SIGNAL or_164_cse : STD_LOGIC;
  SIGNAL or_733_cse : STD_LOGIC;
  SIGNAL nand_258_cse : STD_LOGIC;
  SIGNAL or_909_cse : STD_LOGIC;
  SIGNAL or_913_cse : STD_LOGIC;
  SIGNAL or_702_cse : STD_LOGIC;
  SIGNAL or_129_cse : STD_LOGIC;
  SIGNAL nand_88_cse : STD_LOGIC;
  SIGNAL nand_89_cse : STD_LOGIC;
  SIGNAL nor_238_cse : STD_LOGIC;
  SIGNAL nand_224_cse : STD_LOGIC;
  SIGNAL mux_185_cse : STD_LOGIC;
  SIGNAL or_604_cse : STD_LOGIC;
  SIGNAL nor_405_cse : STD_LOGIC;
  SIGNAL nand_195_cse : STD_LOGIC;
  SIGNAL nand_243_cse : STD_LOGIC;
  SIGNAL nor_514_cse : STD_LOGIC;
  SIGNAL or_992_cse : STD_LOGIC;
  SIGNAL nor_126_cse : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_3_or_3_cse : STD_LOGIC;
  SIGNAL or_351_ssc : STD_LOGIC;
  SIGNAL reg_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_a_32_0_ftd : STD_LOGIC;
  SIGNAL reg_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_a_32_0_ftd_1 : STD_LOGIC;
  SIGNAL reg_rms_norm_384_div_cmp_a_ftd : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_k_5_0_sva_1_5_2 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_k_5_0_sva_1_1_0 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_5_2 : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0 : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_2_and_ssc : STD_LOGIC;
  SIGNAL SF_LOOP_3_acc_26_sdt : STD_LOGIC_VECTOR (19 DOWNTO 0);
  SIGNAL SF_LOOP_3_and_ssc : STD_LOGIC;
  SIGNAL or_601_cse : STD_LOGIC;
  SIGNAL nor_414_cse : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_1_or_cse : STD_LOGIC;
  SIGNAL or_833_cse : STD_LOGIC;
  SIGNAL or_817_cse : STD_LOGIC;
  SIGNAL or_354_cse : STD_LOGIC;
  SIGNAL mux_257_cse : STD_LOGIC;
  SIGNAL mux_688_cse : STD_LOGIC;
  SIGNAL mux_684_cse : STD_LOGIC;
  SIGNAL or_612_cse : STD_LOGIC;
  SIGNAL mux_857_cse : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_dfr_sva_mx0c0 : STD_LOGIC;
  SIGNAL mux_710_cse : STD_LOGIC;
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_9_rmff : STD_LOGIC;
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_7_rmff : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_1_rmff : STD_LOGIC;
  SIGNAL and_350_ssc : STD_LOGIC;
  SIGNAL for_for_and_seb : STD_LOGIC;
  SIGNAL and_342_ssc : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_3_nor_seb : STD_LOGIC;
  SIGNAL and_321_ssc : STD_LOGIC;
  SIGNAL mux_415_seb : STD_LOGIC;
  SIGNAL and_317_ssc : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_1_nor_seb : STD_LOGIC;
  SIGNAL and_309_ssc : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_2_nor_seb : STD_LOGIC;
  SIGNAL and_225_ssc : STD_LOGIC;
  SIGNAL ATTN_2D_LOOP_3_and_seb : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_2_acc_itm : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_acc_17_sdt_1 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_1_acc_18_psp_1 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_2_mux_3_itm_2_0 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_acc_18_psp_1 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva : STD_LOGIC_VECTOR (4 DOWNTO
      0);
  SIGNAL CACHE_UPDATE_LOOP_3_qif_acc_3_ncse_2_0 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_acc_11_psp_1_mx0w0 : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_acc_11_psp_1 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_ki_4_0_sva_3_0 : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp_4 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_radr_d_mx0c2 : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_radr_d_mx0c1 : STD_LOGIC;
  SIGNAL attention_round_qr_39_16_lpi_4_dfm_7_0 : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mul_3_itm : STD_LOGIC_VECTOR (55 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mul_4_itm : STD_LOGIC_VECTOR (55 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mul_8_itm : STD_LOGIC_VECTOR (55 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mul_9_itm : STD_LOGIC_VECTOR (55 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_qr_sva_1 : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_1_qr_sva_1 : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_asn_itm : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_58_itm : STD_LOGIC_VECTOR (37 DOWNTO 0);
  SIGNAL attention_round_1_qr_39_16_lpi_4_dfm_7_0 : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_1_asn_psp : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_asn_psp : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL and_193_itm : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_cosval_read_rom_cos_tab_rom_map_1_itm : STD_LOGIC_VECTOR
      (16 DOWNTO 0);
  SIGNAL and_382_itm : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_1_and_itm : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_66_itm : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL and_433_itm : STD_LOGIC;
  SIGNAL and_434_itm : STD_LOGIC;
  SIGNAL and_439_itm : STD_LOGIC;
  SIGNAL and_440_itm : STD_LOGIC;
  SIGNAL and_441_itm : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_read_rom_ln_weight_in_rom_map_1_itm : STD_LOGIC_VECTOR (11
      DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_itm : STD_LOGIC_VECTOR
      (16 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_2_read_rom_ln_weight_rom_map_1_itm : STD_LOGIC_VECTOR (12
      DOWNTO 0);
  SIGNAL and_349_itm : STD_LOGIC;
  SIGNAL and_461_itm : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_read_rom_v_weights_rom_map_1_itm
      : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_read_rom_k_weights_rom_map_1_itm
      : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_read_rom_q_weights_rom_map_1_itm
      : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_87_itm : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL and_548_itm : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_qif_read_rom_k_cache_rom_map_1_itm : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_1_qif_read_rom_v_cache_rom_map_1_itm : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_read_rom_o_weights_rom_map_1_itm
      : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL and_dcpl_550 : STD_LOGIC;
  SIGNAL and_dcpl_556 : STD_LOGIC;
  SIGNAL and_dcpl_559 : STD_LOGIC;
  SIGNAL and_dcpl_562 : STD_LOGIC;
  SIGNAL and_dcpl_563 : STD_LOGIC;
  SIGNAL and_dcpl_564 : STD_LOGIC;
  SIGNAL and_dcpl_566 : STD_LOGIC;
  SIGNAL and_dcpl_570 : STD_LOGIC;
  SIGNAL and_dcpl_573 : STD_LOGIC;
  SIGNAL z_out : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL z_out_1 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL and_dcpl_596 : STD_LOGIC;
  SIGNAL z_out_2 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL z_out_3 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL and_dcpl_613 : STD_LOGIC;
  SIGNAL and_dcpl_614 : STD_LOGIC;
  SIGNAL z_out_4 : STD_LOGIC_VECTOR (17 DOWNTO 0);
  SIGNAL and_dcpl_629 : STD_LOGIC;
  SIGNAL and_dcpl_634 : STD_LOGIC;
  SIGNAL and_dcpl_641 : STD_LOGIC;
  SIGNAL and_dcpl_646 : STD_LOGIC;
  SIGNAL and_dcpl_651 : STD_LOGIC;
  SIGNAL and_dcpl_656 : STD_LOGIC;
  SIGNAL and_dcpl_659 : STD_LOGIC;
  SIGNAL and_dcpl_663 : STD_LOGIC;
  SIGNAL and_dcpl_666 : STD_LOGIC;
  SIGNAL and_dcpl_671 : STD_LOGIC;
  SIGNAL z_out_5 : STD_LOGIC_VECTOR (60 DOWNTO 0);
  SIGNAL and_dcpl_679 : STD_LOGIC;
  SIGNAL z_out_6 : STD_LOGIC_VECTOR (59 DOWNTO 0);
  SIGNAL and_dcpl_704 : STD_LOGIC;
  SIGNAL z_out_7 : STD_LOGIC_VECTOR (59 DOWNTO 0);
  SIGNAL and_dcpl_717 : STD_LOGIC;
  SIGNAL and_dcpl_722 : STD_LOGIC;
  SIGNAL z_out_8 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL and_dcpl_742 : STD_LOGIC;
  SIGNAL and_dcpl_749 : STD_LOGIC;
  SIGNAL and_dcpl_752 : STD_LOGIC;
  SIGNAL and_dcpl_755 : STD_LOGIC;
  SIGNAL and_dcpl_757 : STD_LOGIC;
  SIGNAL and_dcpl_761 : STD_LOGIC;
  SIGNAL and_dcpl_762 : STD_LOGIC;
  SIGNAL and_dcpl_763 : STD_LOGIC;
  SIGNAL and_dcpl_767 : STD_LOGIC;
  SIGNAL z_out_10 : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL and_dcpl_779 : STD_LOGIC;
  SIGNAL and_dcpl_786 : STD_LOGIC;
  SIGNAL z_out_11 : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL and_dcpl_789 : STD_LOGIC;
  SIGNAL and_dcpl_808 : STD_LOGIC;
  SIGNAL z_out_12 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL z_out_13 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL and_dcpl_832 : STD_LOGIC;
  SIGNAL and_dcpl_833 : STD_LOGIC;
  SIGNAL and_dcpl_837 : STD_LOGIC;
  SIGNAL and_dcpl_840 : STD_LOGIC;
  SIGNAL and_dcpl_846 : STD_LOGIC;
  SIGNAL z_out_15 : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL z_out_17 : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL and_dcpl_917 : STD_LOGIC;
  SIGNAL z_out_19 : STD_LOGIC_VECTOR (71 DOWNTO 0);
  SIGNAL and_dcpl_931 : STD_LOGIC;
  SIGNAL and_dcpl_942 : STD_LOGIC;
  SIGNAL z_out_21 : STD_LOGIC_VECTOR (16 DOWNTO 0);
  SIGNAL and_dcpl_953 : STD_LOGIC;
  SIGNAL z_out_22 : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL and_dcpl_964 : STD_LOGIC;
  SIGNAL z_out_23 : STD_LOGIC_VECTOR (17 DOWNTO 0);
  SIGNAL z_out_25 : STD_LOGIC_VECTOR (55 DOWNTO 0);
  SIGNAL z_out_26 : STD_LOGIC_VECTOR (55 DOWNTO 0);
  SIGNAL z_out_27 : STD_LOGIC_VECTOR (55 DOWNTO 0);
  SIGNAL and_dcpl_1069 : STD_LOGIC;
  SIGNAL and_dcpl_1087 : STD_LOGIC;
  SIGNAL z_out_31 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL and_dcpl_1094 : STD_LOGIC;
  SIGNAL z_out_32 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL z_out_33 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL and_dcpl_1152 : STD_LOGIC;
  SIGNAL z_out_35 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL z_out_37 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL z_out_38 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL and_dcpl_1208 : STD_LOGIC;
  SIGNAL attention_abs_qif_acc_pmx_lpi_1_dfm : STD_LOGIC_VECTOR (30 DOWNTO 0);
  SIGNAL attention_abs_3_qr_sva : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_sva : STD_LOGIC_VECTOR (7 DOWNTO
      0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_sva : STD_LOGIC_VECTOR (7 DOWNTO
      0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_sva : STD_LOGIC_VECTOR (7 DOWNTO
      0);
  SIGNAL SF_LOOP_3_acc_5_psp_sva : STD_LOGIC_VECTOR (21 DOWNTO 0);
  SIGNAL softmax_1_8_6_sum_sva_1 : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_abs_4_qif_acc_pmx_lpi_1_dfm : STD_LOGIC_VECTOR (30 DOWNTO 0);
  SIGNAL attention_abs_7_qr_sva : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_sva : STD_LOGIC_VECTOR (7 DOWNTO
      0);
  SIGNAL RMS_NORM_LOOP_1_1_slc_RMS_NORM_LOOP_1_1_RMS_NORM_LOOP_1_1_mul_55_16_itm
      : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_mul_1_itm : STD_LOGIC_VECTOR (59 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_1_mul_1_itm : STD_LOGIC_VECTOR (60 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_mul_1_itm : STD_LOGIC_VECTOR (59 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_16_itm : STD_LOGIC_VECTOR (18 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_15_itm : STD_LOGIC_VECTOR (18 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_17_itm : STD_LOGIC_VECTOR (18 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_28_itm : STD_LOGIC_VECTOR (19 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_35_itm : STD_LOGIC_VECTOR (17 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_6_itm : STD_LOGIC_VECTOR (30 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_7_itm : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_39_itm : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_40_itm : STD_LOGIC_VECTOR (10 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_46_itm : STD_LOGIC_VECTOR (18 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_50_itm : STD_LOGIC_VECTOR (25 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_54_itm : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_3_mul_1_itm : STD_LOGIC_VECTOR (59 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_30_itm : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_38_itm : STD_LOGIC_VECTOR (16 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_46_itm : STD_LOGIC_VECTOR (24 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_52_itm : STD_LOGIC_VECTOR (30 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_29_itm : STD_LOGIC_VECTOR (7 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_and_1_itm : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_37_itm : STD_LOGIC_VECTOR (15 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_45_itm : STD_LOGIC_VECTOR (23 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_51_itm : STD_LOGIC_VECTOR (29 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_30_itm : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_38_itm : STD_LOGIC_VECTOR (16 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_46_itm : STD_LOGIC_VECTOR (24 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_52_itm : STD_LOGIC_VECTOR (30 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_29_itm : STD_LOGIC_VECTOR (7 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_37_itm : STD_LOGIC_VECTOR (15 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_45_itm : STD_LOGIC_VECTOR (23 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_51_itm : STD_LOGIC_VECTOR (29 DOWNTO
      0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_39 : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_38_0 : STD_LOGIC_VECTOR (38 DOWNTO
      0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_39 : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_38_0 : STD_LOGIC_VECTOR (38 DOWNTO
      0);
  SIGNAL for_for_strm_in_tmp_sva_31_2 : STD_LOGIC_VECTOR (29 DOWNTO 0);
  SIGNAL compute_sqrt_guess_sva_29_0 : STD_LOGIC_VECTOR (29 DOWNTO 0);
  SIGNAL compute_sqrt_1_guess_sva_29_0 : STD_LOGIC_VECTOR (29 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_93_psp : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_96_psp : STD_LOGIC_VECTOR (10 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_30_psp : STD_LOGIC_VECTOR (19 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_39_mx0w2 : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_38_0_mx0w2 : STD_LOGIC_VECTOR (38
      DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_39_mx0w2 : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_38_0_mx0w2 : STD_LOGIC_VECTOR
      (38 DOWNTO 0);
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_acc_17_sdt_mx0w5 : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm_mx0c6 : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_3_psp_sva_1 : STD_LOGIC_VECTOR (2
      DOWNTO 0);
  SIGNAL attention_abs_qif_acc_pmx_lpi_1_dfm_mx0w0 : STD_LOGIC_VECTOR (30 DOWNTO
      0);
  SIGNAL RMS_NORM_LOOP_2_2_dfr_sva_mx0c2 : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_dfr_sva_mx0c3 : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c1
      : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c2
      : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c4
      : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c6
      : STD_LOGIC;
  SIGNAL exit_QUANTIZE_ACTIVATION_LOOP_2_1_sva_dfm_mx0w0 : STD_LOGIC;
  SIGNAL attention_abs_2_mux_2 : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_abs_1_qr_sva_1 : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_and_4_ssc_1 : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_and_1_ssc_1 : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_and_6_ssc_1 : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_nor_ssc_1 : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_and_5_ssc_1 : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_3_2_ko_2_0_sva_1_mx0w2 : STD_LOGIC_VECTOR (2
      DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_3_jo_2_0_sva_3 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_1_k_5_0_sva_2 : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_61_cse_mx0w4 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL attention_round_qr_39_16_lpi_4_dfm_mx0w0 : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0_mx0c0 : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0_mx0c1 : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0_mx0c2 : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0_mx0c3 : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_3_ko_2_0_sva_2 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c0 : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c1 : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c3 : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c5 : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_acc_30_psp_sva_1 : STD_LOGIC_VECTOR (2 DOWNTO
      0);
  SIGNAL SF_LOOP_3_acc_63_cse_mx0w6 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_mx0c0 : STD_LOGIC;
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_k_5_0_sva_2 : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_k_4_0_sva_2 : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_or_itm_mx0c1 : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_2_LINEAR_FORWARD_NO_MUL_LOOP_5_2_and_1_cse_1
      : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_ki_4_0_sva_2 : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_2_ki_4_0_sva_2 : STD_LOGIC_VECTOR (4 DOWNTO
      0);
  SIGNAL CACHE_UPDATE_LOOP_3_qif_acc_5_sdt_1 : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_1_qif_acc_5_sdt_1 : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_64_ncse_1 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_11_itm_1 : STD_LOGIC_VECTOR (17 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_15_itm_1 : STD_LOGIC_VECTOR (16 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_6_psp_sva_1 : STD_LOGIC_VECTOR (18 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_7_psp_sva_1 : STD_LOGIC_VECTOR (17 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_3_psp_sva_1 : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL attention_abs_4_qif_acc_pmx_lpi_1_dfm_mx0w0 : STD_LOGIC_VECTOR (30 DOWNTO
      0);
  SIGNAL attention_abs_6_mux_2 : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_abs_5_qr_sva_1 : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_2_and_4_ssc_1 : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_and_1_ssc_1 : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_and_6_ssc_1 : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_nor_ssc_1 : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_and_5_ssc_1 : STD_LOGIC;
  SIGNAL attention_round_1_qr_39_16_lpi_4_dfm_mx0w0 : STD_LOGIC_VECTOR (23 DOWNTO
      0);
  SIGNAL INIT_2D_MEM_LOOP_2_3_INIT_2D_MEM_LOOP_2_3_nor_itm_1 : STD_LOGIC;
  SIGNAL SF_LOOP_3_acc_6_psp_sva_18_17 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_11_itm_17_15 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_11_itm_13_0 : STD_LOGIC_VECTOR (13 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_12_itm_16_15 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_12_itm_3_0 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_15_itm_16_10 : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_15_itm_6_0 : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_19_itm_12_11 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_19_itm_9_4 : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL attention_abs_qif_acc_pmx_lpi_1_dfm_mx1_30_1 : STD_LOGIC_VECTOR (29 DOWNTO
      0);
  SIGNAL attention_max_attn_fixed_t_attention_max_attn_fixed_t_and_mut_mx0w2_39 :
      STD_LOGIC;
  SIGNAL attention_max_attn_fixed_t_attention_max_attn_fixed_t_and_mut_mx0w2_38_0
      : STD_LOGIC_VECTOR (38 DOWNTO 0);
  SIGNAL attention_max_attn_fixed_t_1_conc_psp_mx0w11_39 : STD_LOGIC;
  SIGNAL attention_max_attn_fixed_t_1_conc_psp_mx0w11_38_0 : STD_LOGIC_VECTOR (38
      DOWNTO 0);
  SIGNAL attention_round_qr_39_16_lpi_4_dfm_mx1_23_7 : STD_LOGIC_VECTOR (16 DOWNTO
      0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_cosval_APPLY_ROTARY_POS_EMB_LOOP_6_cosval_conc_2_9_5
      : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL attention_abs_4_qif_acc_pmx_lpi_1_dfm_mx1_30_1 : STD_LOGIC_VECTOR (29 DOWNTO
      0);
  SIGNAL attention_round_1_qr_39_16_lpi_4_dfm_mx1_23_7 : STD_LOGIC_VECTOR (16 DOWNTO
      0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_conc_2_15_7
      : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_sdt_sva_35_34 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_sdt_sva_32_17 : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_sdt_sva_15_0 : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_itm_10_9 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_itm_7_0 : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_1_itm_12_11 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_1_itm_9_0 : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_2_itm_18_17 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_2_itm_15_0 : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_3_itm_21_20 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_3_itm_18_3 : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_3_itm_1_0 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_4_itm_23_22 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_4_itm_20_5 : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_4_itm_3_0 : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_5_itm_31_30 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_5_itm_28_13 : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_5_itm_11_0 : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_2_mux_3_itm_4_3 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_26_itm_19_9 : STD_LOGIC_VECTOR (10 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_26_itm_8_0 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_conc_2_itm_19_0 : STD_LOGIC_VECTOR
      (19 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_1_1_or_ssc : STD_LOGIC;
  SIGNAL reg_rms_norm_384_div_cmp_b_ftd_1 : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_1_and_2_ssc : STD_LOGIC;
  SIGNAL reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd
      : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1
      : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_3_and_ssc : STD_LOGIC;
  SIGNAL reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd : STD_LOGIC;
  SIGNAL reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1 : STD_LOGIC_VECTOR (38 DOWNTO 0);
  SIGNAL reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_1 : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_2 : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_3 : STD_LOGIC;
  SIGNAL reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_4 : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_5 : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_and_ssc : STD_LOGIC;
  SIGNAL reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_ftd : STD_LOGIC_VECTOR (2 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_or_3_cse : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_nand_cse
      : STD_LOGIC;
  SIGNAL or_1328_cse : STD_LOGIC;
  SIGNAL or_1330_cse : STD_LOGIC;
  SIGNAL nor_510_cse : STD_LOGIC;
  SIGNAL xnor_cse : STD_LOGIC;
  SIGNAL compute_sqrt_for_or_2_cse : STD_LOGIC;
  SIGNAL or_589_cse : STD_LOGIC;
  SIGNAL nor_287_cse : STD_LOGIC;
  SIGNAL nor_632_cse : STD_LOGIC;
  SIGNAL nand_78_cse : STD_LOGIC;
  SIGNAL compute_sqrt_for_guess_inv_or_cse : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_or_cse : STD_LOGIC;
  SIGNAL and_189_ssc : STD_LOGIC;
  SIGNAL and_190_ssc : STD_LOGIC;
  SIGNAL SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b_39 : STD_LOGIC;
  SIGNAL SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b_38_0 : STD_LOGIC_VECTOR (38 DOWNTO
      0);
  SIGNAL and_181_ssc : STD_LOGIC;
  SIGNAL and_182_ssc : STD_LOGIC;
  SIGNAL SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a_55 : STD_LOGIC;
  SIGNAL SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a_54_16 : STD_LOGIC_VECTOR (38 DOWNTO
      0);
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_4_rmff_3_1 : STD_LOGIC_VECTOR (2 DOWNTO
      0);
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_4_rmff_0 : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_rmff_4_2 : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL reg_rms_norm_384_div_cmp_b_ftd_59_38 : STD_LOGIC_VECTOR (21 DOWNTO 0);
  SIGNAL reg_rms_norm_384_div_cmp_b_ftd_37_0 : STD_LOGIC_VECTOR (37 DOWNTO 0);
  SIGNAL and_1011_cse : STD_LOGIC;
  SIGNAL and_1256_cse : STD_LOGIC;
  SIGNAL and_1280_cse : STD_LOGIC;
  SIGNAL mux_575_cse : STD_LOGIC;
  SIGNAL mux_1056_cse : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_or_cse : STD_LOGIC;
  SIGNAL and_876_cse : STD_LOGIC;
  SIGNAL and_894_cse : STD_LOGIC;
  SIGNAL and_897_cse : STD_LOGIC;
  SIGNAL and_1051_cse : STD_LOGIC;
  SIGNAL and_1291_cse : STD_LOGIC;
  SIGNAL mux_1008_cse : STD_LOGIC;
  SIGNAL mux_1014_cse : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_nor_cse : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_mux1h_7_itm_4_1 : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_or_2_cse : STD_LOGIC;
  SIGNAL operator_80_48_true_AC_TRN_AC_WRAP_operator_80_48_true_AC_TRN_AC_WRAP_slc_SOFTMAX_LOOP_4_sqr_56_1_itm_slc
      : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_12_itm_12_9_slc : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL reg_attention_round_a_cse_slc : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_88_itm : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL and_533_itm : STD_LOGIC;
  SIGNAL and_537_itm : STD_LOGIC;
  SIGNAL nor_582_itm : STD_LOGIC;
  SIGNAL and_542_itm : STD_LOGIC;
  SIGNAL and_544_itm : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_k_nand_1_itm : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_1_1_or_1_itm : STD_LOGIC;
  SIGNAL compute_sqrt_for_guess_inv_or_2_itm : STD_LOGIC;
  SIGNAL compute_sqrt_for_guess_inv_or_4_itm : STD_LOGIC;
  SIGNAL compute_sqrt_for_guess_inv_or_3_itm : STD_LOGIC;
  SIGNAL compute_sqrt_1_for_acc_1_itm_40_1_1 : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL compute_sqrt_for_acc_1_itm_40_1_1 : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_max_attn_fixed_t_acc_itm_40_1 : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_acc_itm_17_1 : STD_LOGIC;
  SIGNAL attention_max_attn_fixed_t_1_acc_itm_40_1 : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_itm_17_1 : STD_LOGIC;
  SIGNAL attention_round_1_acc_itm_40_1 : STD_LOGIC;
  SIGNAL SOFTMAX_LOOP_3_acc_3_itm_40_1 : STD_LOGIC;
  SIGNAL attention_round_acc_itm_40_1 : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_or_2_cse_1 : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_2_1_j_and_ssc : STD_LOGIC;
  SIGNAL reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1 : STD_LOGIC;
  SIGNAL reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd : STD_LOGIC;
  SIGNAL reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd_1 : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_k_and_ssc : STD_LOGIC;
  SIGNAL reg_CACHE_UPDATE_LOOP_3_k_5_0_1_ftd : STD_LOGIC;
  SIGNAL compute_sqrt_for_guess_inv_nor_seb : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_k_and_3_cse : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_k_and_1_cse : STD_LOGIC;
  SIGNAL and_766_cse : STD_LOGIC;
  SIGNAL mux_730_cse : STD_LOGIC;
  SIGNAL mux_732_cse : STD_LOGIC;
  SIGNAL reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_rmff_1 : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_rmff_0 : STD_LOGIC;
  SIGNAL nor_580_seb : STD_LOGIC;
  SIGNAL reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_0 : STD_LOGIC;
  SIGNAL or_1233_ssc : STD_LOGIC;
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_8_rmff_2 : STD_LOGIC;
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_8_rmff_1_0 : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL z_out_9_1_0 : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL z_out_14_23_0 : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL z_out_16_4_0 : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL z_out_20_67_16 : STD_LOGIC_VECTOR (51 DOWNTO 0);
  SIGNAL z_out_28_2 : STD_LOGIC;
  SIGNAL z_out_29_2 : STD_LOGIC;
  SIGNAL z_out_30_2 : STD_LOGIC;
  SIGNAL z_out_34_2_0 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL z_out_36_2_0 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL and_1353_cse : STD_LOGIC;
  SIGNAL and_1509_cse : STD_LOGIC;
  SIGNAL nor_505_cse : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux_7_m1c : STD_LOGIC;
  SIGNAL or_1349_tmp : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_2_mux1h_1_tmp : STD_LOGIC;

  SIGNAL mux_285_nl : STD_LOGIC;
  SIGNAL or_1194_nl : STD_LOGIC;
  SIGNAL nand_148_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_nl : STD_LOGIC_VECTOR
      (17 DOWNTO 0);
  SIGNAL mux_293_nl : STD_LOGIC;
  SIGNAL mux_292_nl : STD_LOGIC;
  SIGNAL mux_291_nl : STD_LOGIC;
  SIGNAL mux_290_nl : STD_LOGIC;
  SIGNAL mux_289_nl : STD_LOGIC;
  SIGNAL mux_288_nl : STD_LOGIC;
  SIGNAL mux_287_nl : STD_LOGIC;
  SIGNAL and_659_nl : STD_LOGIC;
  SIGNAL mux_286_nl : STD_LOGIC;
  SIGNAL and_660_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_nl : STD_LOGIC_VECTOR
      (17 DOWNTO 0);
  SIGNAL mux_310_nl : STD_LOGIC;
  SIGNAL mux_309_nl : STD_LOGIC;
  SIGNAL mux_308_nl : STD_LOGIC;
  SIGNAL mux_307_nl : STD_LOGIC;
  SIGNAL and_134_nl : STD_LOGIC;
  SIGNAL mux_306_nl : STD_LOGIC;
  SIGNAL mux_305_nl : STD_LOGIC;
  SIGNAL and_133_nl : STD_LOGIC;
  SIGNAL or_348_nl : STD_LOGIC;
  SIGNAL and_144_nl : STD_LOGIC;
  SIGNAL mux_314_nl : STD_LOGIC;
  SIGNAL mux_313_nl : STD_LOGIC;
  SIGNAL mux_312_nl : STD_LOGIC;
  SIGNAL mux_311_nl : STD_LOGIC;
  SIGNAL or_352_nl : STD_LOGIC;
  SIGNAL compute_sqrt_guess_and_1_nl : STD_LOGIC;
  SIGNAL and_156_nl : STD_LOGIC;
  SIGNAL mux_317_nl : STD_LOGIC;
  SIGNAL compute_sqrt_guess_and_3_nl : STD_LOGIC;
  SIGNAL mux_331_nl : STD_LOGIC;
  SIGNAL mux_330_nl : STD_LOGIC;
  SIGNAL mux_329_nl : STD_LOGIC;
  SIGNAL mux_30_nl : STD_LOGIC;
  SIGNAL or_39_nl : STD_LOGIC;
  SIGNAL mux_327_nl : STD_LOGIC;
  SIGNAL mux_296_nl : STD_LOGIC;
  SIGNAL mux_294_nl : STD_LOGIC;
  SIGNAL mux_326_nl : STD_LOGIC;
  SIGNAL mux_325_nl : STD_LOGIC;
  SIGNAL mux_324_nl : STD_LOGIC;
  SIGNAL mux_323_nl : STD_LOGIC;
  SIGNAL nand_18_nl : STD_LOGIC;
  SIGNAL mux_322_nl : STD_LOGIC;
  SIGNAL mux_321_nl : STD_LOGIC;
  SIGNAL mux_320_nl : STD_LOGIC;
  SIGNAL or_359_nl : STD_LOGIC;
  SIGNAL mux_319_nl : STD_LOGIC;
  SIGNAL mux_318_nl : STD_LOGIC;
  SIGNAL or_358_nl : STD_LOGIC;
  SIGNAL or_355_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_2_nl : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL mux_337_nl : STD_LOGIC;
  SIGNAL or_383_nl : STD_LOGIC;
  SIGNAL mux_336_nl : STD_LOGIC;
  SIGNAL mux_335_nl : STD_LOGIC;
  SIGNAL or_379_nl : STD_LOGIC;
  SIGNAL or_376_nl : STD_LOGIC;
  SIGNAL mux_334_nl : STD_LOGIC;
  SIGNAL and_174_nl : STD_LOGIC;
  SIGNAL and_175_nl : STD_LOGIC;
  SIGNAL mux_342_nl : STD_LOGIC;
  SIGNAL mux_341_nl : STD_LOGIC;
  SIGNAL mux_345_nl : STD_LOGIC;
  SIGNAL nand_167_nl : STD_LOGIC;
  SIGNAL mux_353_nl : STD_LOGIC;
  SIGNAL mux_352_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_3_mux_nl : STD_LOGIC;
  SIGNAL and_180_nl : STD_LOGIC;
  SIGNAL mux_364_nl : STD_LOGIC;
  SIGNAL mux_363_nl : STD_LOGIC;
  SIGNAL mux_362_nl : STD_LOGIC;
  SIGNAL mux_361_nl : STD_LOGIC;
  SIGNAL mux_360_nl : STD_LOGIC;
  SIGNAL mux_359_nl : STD_LOGIC;
  SIGNAL mux_357_nl : STD_LOGIC;
  SIGNAL mux_366_nl : STD_LOGIC;
  SIGNAL mux_365_nl : STD_LOGIC;
  SIGNAL or_398_nl : STD_LOGIC;
  SIGNAL mux_368_nl : STD_LOGIC;
  SIGNAL mux_367_nl : STD_LOGIC;
  SIGNAL nand_169_nl : STD_LOGIC;
  SIGNAL mux_370_nl : STD_LOGIC;
  SIGNAL mux_369_nl : STD_LOGIC;
  SIGNAL mux_372_nl : STD_LOGIC;
  SIGNAL mux_374_nl : STD_LOGIC;
  SIGNAL rms_norm_384_mux1h_7_nl : STD_LOGIC;
  SIGNAL and_196_nl : STD_LOGIC;
  SIGNAL mux_377_nl : STD_LOGIC;
  SIGNAL or_410_nl : STD_LOGIC;
  SIGNAL mux_384_nl : STD_LOGIC;
  SIGNAL and_701_nl : STD_LOGIC;
  SIGNAL mux_383_nl : STD_LOGIC;
  SIGNAL nor_376_nl : STD_LOGIC;
  SIGNAL nor_377_nl : STD_LOGIC;
  SIGNAL nor_378_nl : STD_LOGIC;
  SIGNAL mux_382_nl : STD_LOGIC;
  SIGNAL or_423_nl : STD_LOGIC;
  SIGNAL or_422_nl : STD_LOGIC;
  SIGNAL mux_406_nl : STD_LOGIC;
  SIGNAL mux_405_nl : STD_LOGIC;
  SIGNAL or_482_nl : STD_LOGIC;
  SIGNAL or_479_nl : STD_LOGIC;
  SIGNAL mux_411_nl : STD_LOGIC;
  SIGNAL mux_410_nl : STD_LOGIC;
  SIGNAL or_492_nl : STD_LOGIC;
  SIGNAL or_491_nl : STD_LOGIC;
  SIGNAL and_nl : STD_LOGIC;
  SIGNAL mux_414_nl : STD_LOGIC;
  SIGNAL nor_390_nl : STD_LOGIC;
  SIGNAL nor_391_nl : STD_LOGIC;
  SIGNAL nor_574_nl : STD_LOGIC;
  SIGNAL mux_430_nl : STD_LOGIC;
  SIGNAL mux_429_nl : STD_LOGIC;
  SIGNAL mux_434_nl : STD_LOGIC;
  SIGNAL nor_397_nl : STD_LOGIC;
  SIGNAL mux_433_nl : STD_LOGIC;
  SIGNAL nor_398_nl : STD_LOGIC;
  SIGNAL nor_399_nl : STD_LOGIC;
  SIGNAL rms_norm_384_variance_mux1h_nl : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL rms_norm_384_variance_or_nl : STD_LOGIC;
  SIGNAL and_355_nl : STD_LOGIC;
  SIGNAL and_356_nl : STD_LOGIC;
  SIGNAL and_366_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_nand_nl : STD_LOGIC;
  SIGNAL mux_466_nl : STD_LOGIC;
  SIGNAL nor_406_nl : STD_LOGIC;
  SIGNAL and_713_nl : STD_LOGIC;
  SIGNAL mux_465_nl : STD_LOGIC;
  SIGNAL mux_464_nl : STD_LOGIC;
  SIGNAL mux_463_nl : STD_LOGIC;
  SIGNAL mux_462_nl : STD_LOGIC;
  SIGNAL mux_461_nl : STD_LOGIC;
  SIGNAL or_550_nl : STD_LOGIC;
  SIGNAL or_548_nl : STD_LOGIC;
  SIGNAL or_546_nl : STD_LOGIC;
  SIGNAL mux_460_nl : STD_LOGIC;
  SIGNAL mux_459_nl : STD_LOGIC;
  SIGNAL mux_458_nl : STD_LOGIC;
  SIGNAL mux_457_nl : STD_LOGIC;
  SIGNAL or_1208_nl : STD_LOGIC;
  SIGNAL nand_188_nl : STD_LOGIC;
  SIGNAL mux_456_nl : STD_LOGIC;
  SIGNAL mux_455_nl : STD_LOGIC;
  SIGNAL mux_454_nl : STD_LOGIC;
  SIGNAL or_538_nl : STD_LOGIC;
  SIGNAL mux_453_nl : STD_LOGIC;
  SIGNAL mux_452_nl : STD_LOGIC;
  SIGNAL or_537_nl : STD_LOGIC;
  SIGNAL mux_451_nl : STD_LOGIC;
  SIGNAL nand_22_nl : STD_LOGIC;
  SIGNAL mux_450_nl : STD_LOGIC;
  SIGNAL nor_404_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_2_mux1h_15_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_82_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_or_3_nl : STD_LOGIC;
  SIGNAL and_369_nl : STD_LOGIC;
  SIGNAL mux_479_nl : STD_LOGIC;
  SIGNAL nor_418_nl : STD_LOGIC;
  SIGNAL mux_478_nl : STD_LOGIC;
  SIGNAL nor_419_nl : STD_LOGIC;
  SIGNAL mux_477_nl : STD_LOGIC;
  SIGNAL or_572_nl : STD_LOGIC;
  SIGNAL or_1181_nl : STD_LOGIC;
  SIGNAL nor_420_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_2_nand_nl : STD_LOGIC;
  SIGNAL mux_483_nl : STD_LOGIC;
  SIGNAL mux_482_nl : STD_LOGIC;
  SIGNAL mux_481_nl : STD_LOGIC;
  SIGNAL and_720_nl : STD_LOGIC;
  SIGNAL nor_424_nl : STD_LOGIC;
  SIGNAL nor_425_nl : STD_LOGIC;
  SIGNAL mux_480_nl : STD_LOGIC;
  SIGNAL or_1211_nl : STD_LOGIC;
  SIGNAL mux_476_nl : STD_LOGIC;
  SIGNAL mux_475_nl : STD_LOGIC;
  SIGNAL mux_474_nl : STD_LOGIC;
  SIGNAL mux_473_nl : STD_LOGIC;
  SIGNAL nor_412_nl : STD_LOGIC;
  SIGNAL and_715_nl : STD_LOGIC;
  SIGNAL and_716_nl : STD_LOGIC;
  SIGNAL mux_472_nl : STD_LOGIC;
  SIGNAL nor_409_nl : STD_LOGIC;
  SIGNAL mux_471_nl : STD_LOGIC;
  SIGNAL mux_470_nl : STD_LOGIC;
  SIGNAL or_563_nl : STD_LOGIC;
  SIGNAL mux_469_nl : STD_LOGIC;
  SIGNAL mux_468_nl : STD_LOGIC;
  SIGNAL nor_416_nl : STD_LOGIC;
  SIGNAL mux_467_nl : STD_LOGIC;
  SIGNAL nor_417_nl : STD_LOGIC;
  SIGNAL mux_507_nl : STD_LOGIC;
  SIGNAL or_608_nl : STD_LOGIC;
  SIGNAL mux_517_nl : STD_LOGIC;
  SIGNAL nor_429_nl : STD_LOGIC;
  SIGNAL nor_430_nl : STD_LOGIC;
  SIGNAL for_for_j_and_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL for_for_j_mux1h_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL for_for_j_or_nl : STD_LOGIC;
  SIGNAL mux_505_nl : STD_LOGIC;
  SIGNAL mux_504_nl : STD_LOGIC;
  SIGNAL mux_503_nl : STD_LOGIC;
  SIGNAL or_605_nl : STD_LOGIC;
  SIGNAL mux_502_nl : STD_LOGIC;
  SIGNAL mux_501_nl : STD_LOGIC;
  SIGNAL mux_500_nl : STD_LOGIC;
  SIGNAL nand_197_nl : STD_LOGIC;
  SIGNAL mux_499_nl : STD_LOGIC;
  SIGNAL or_599_nl : STD_LOGIC;
  SIGNAL mux_498_nl : STD_LOGIC;
  SIGNAL mux_497_nl : STD_LOGIC;
  SIGNAL or_598_nl : STD_LOGIC;
  SIGNAL or_595_nl : STD_LOGIC;
  SIGNAL mux_496_nl : STD_LOGIC;
  SIGNAL or_594_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_not_1_nl : STD_LOGIC;
  SIGNAL mux_495_nl : STD_LOGIC;
  SIGNAL mux_494_nl : STD_LOGIC;
  SIGNAL mux_493_nl : STD_LOGIC;
  SIGNAL or_593_nl : STD_LOGIC;
  SIGNAL mux_492_nl : STD_LOGIC;
  SIGNAL mux_491_nl : STD_LOGIC;
  SIGNAL nand_196_nl : STD_LOGIC;
  SIGNAL mux_490_nl : STD_LOGIC;
  SIGNAL mux_489_nl : STD_LOGIC;
  SIGNAL mux_488_nl : STD_LOGIC;
  SIGNAL mux_487_nl : STD_LOGIC;
  SIGNAL nand_24_nl : STD_LOGIC;
  SIGNAL mux_486_nl : STD_LOGIC;
  SIGNAL or_588_nl : STD_LOGIC;
  SIGNAL mux_485_nl : STD_LOGIC;
  SIGNAL mux_516_nl : STD_LOGIC;
  SIGNAL mux_515_nl : STD_LOGIC;
  SIGNAL mux_514_nl : STD_LOGIC;
  SIGNAL or_617_nl : STD_LOGIC;
  SIGNAL mux_513_nl : STD_LOGIC;
  SIGNAL or_616_nl : STD_LOGIC;
  SIGNAL mux_512_nl : STD_LOGIC;
  SIGNAL nand_25_nl : STD_LOGIC;
  SIGNAL mux_511_nl : STD_LOGIC;
  SIGNAL or_23_nl : STD_LOGIC;
  SIGNAL mux_510_nl : STD_LOGIC;
  SIGNAL mux_509_nl : STD_LOGIC;
  SIGNAL mux_508_nl : STD_LOGIC;
  SIGNAL nand_201_nl : STD_LOGIC;
  SIGNAL for_for_for_for_nor_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_and_1_nl : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_and_1_nl : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_82_nl : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_62_nl : STD_LOGIC_VECTOR (2 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_56_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_58_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_80_nl : STD_LOGIC_VECTOR (2 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_60_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_78_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_74_nl : STD_LOGIC_VECTOR (2 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_72_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_54_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_64_nl : STD_LOGIC_VECTOR (1 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_27_nl : STD_LOGIC_VECTOR (5 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_25_nl : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_28_nl : STD_LOGIC_VECTOR (7 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_35_nl : STD_LOGIC_VECTOR (13 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_33_nl : STD_LOGIC_VECTOR (11 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_31_nl : STD_LOGIC_VECTOR (9 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_36_nl : STD_LOGIC_VECTOR (14 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_34_nl : STD_LOGIC_VECTOR (12 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_32_nl : STD_LOGIC_VECTOR (10 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_43_nl : STD_LOGIC_VECTOR (21 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_41_nl : STD_LOGIC_VECTOR (19 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_39_nl : STD_LOGIC_VECTOR (17 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_44_nl : STD_LOGIC_VECTOR (22 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_42_nl : STD_LOGIC_VECTOR (20 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_40_nl : STD_LOGIC_VECTOR (18 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_50_nl : STD_LOGIC_VECTOR (28 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_48_nl : STD_LOGIC_VECTOR (26 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_49_nl : STD_LOGIC_VECTOR (27 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_47_nl : STD_LOGIC_VECTOR (25 DOWNTO
      0);
  SIGNAL and_396_nl : STD_LOGIC;
  SIGNAL compute_sqrt_for_i_mux1h_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL compute_sqrt_for_i_or_1_nl : STD_LOGIC;
  SIGNAL mux_563_nl : STD_LOGIC;
  SIGNAL nor_431_nl : STD_LOGIC;
  SIGNAL mux_562_nl : STD_LOGIC;
  SIGNAL or_663_nl : STD_LOGIC;
  SIGNAL or_662_nl : STD_LOGIC;
  SIGNAL nor_432_nl : STD_LOGIC;
  SIGNAL mux_561_nl : STD_LOGIC;
  SIGNAL or_659_nl : STD_LOGIC;
  SIGNAL or_658_nl : STD_LOGIC;
  SIGNAL compute_sqrt_for_i_or_nl : STD_LOGIC;
  SIGNAL mux_573_nl : STD_LOGIC;
  SIGNAL mux_572_nl : STD_LOGIC;
  SIGNAL mux_571_nl : STD_LOGIC;
  SIGNAL or_1325_nl : STD_LOGIC;
  SIGNAL or_1326_nl : STD_LOGIC;
  SIGNAL mux_570_nl : STD_LOGIC;
  SIGNAL or_1327_nl : STD_LOGIC;
  SIGNAL mux_569_nl : STD_LOGIC;
  SIGNAL mux_568_nl : STD_LOGIC;
  SIGNAL or_1329_nl : STD_LOGIC;
  SIGNAL mux_567_nl : STD_LOGIC;
  SIGNAL mux_566_nl : STD_LOGIC;
  SIGNAL or_1331_nl : STD_LOGIC;
  SIGNAL mux_565_nl : STD_LOGIC;
  SIGNAL or_673_nl : STD_LOGIC;
  SIGNAL or_672_nl : STD_LOGIC;
  SIGNAL or_1332_nl : STD_LOGIC;
  SIGNAL or_1333_nl : STD_LOGIC;
  SIGNAL mux_564_nl : STD_LOGIC;
  SIGNAL or_667_nl : STD_LOGIC;
  SIGNAL mux_560_nl : STD_LOGIC;
  SIGNAL mux_559_nl : STD_LOGIC;
  SIGNAL mux_558_nl : STD_LOGIC;
  SIGNAL mux_557_nl : STD_LOGIC;
  SIGNAL mux_556_nl : STD_LOGIC;
  SIGNAL nor_132_nl : STD_LOGIC;
  SIGNAL mux_555_nl : STD_LOGIC;
  SIGNAL mux_554_nl : STD_LOGIC;
  SIGNAL mux_553_nl : STD_LOGIC;
  SIGNAL mux_552_nl : STD_LOGIC;
  SIGNAL mux_551_nl : STD_LOGIC;
  SIGNAL mux_550_nl : STD_LOGIC;
  SIGNAL mux_549_nl : STD_LOGIC;
  SIGNAL mux_548_nl : STD_LOGIC;
  SIGNAL mux_547_nl : STD_LOGIC;
  SIGNAL mux_546_nl : STD_LOGIC;
  SIGNAL mux_541_nl : STD_LOGIC;
  SIGNAL mux_540_nl : STD_LOGIC;
  SIGNAL mux_539_nl : STD_LOGIC;
  SIGNAL mux_538_nl : STD_LOGIC;
  SIGNAL mux_537_nl : STD_LOGIC;
  SIGNAL mux_536_nl : STD_LOGIC;
  SIGNAL or_650_nl : STD_LOGIC;
  SIGNAL mux_535_nl : STD_LOGIC;
  SIGNAL mux_532_nl : STD_LOGIC;
  SIGNAL mux_531_nl : STD_LOGIC;
  SIGNAL mux_530_nl : STD_LOGIC;
  SIGNAL or_647_nl : STD_LOGIC;
  SIGNAL mux_529_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_and_1_nl : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux1h_1_nl : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_and_2_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_not_5_nl : STD_LOGIC;
  SIGNAL compute_sqrt_for_or_3_nl : STD_LOGIC;
  SIGNAL compute_sqrt_for_or_4_nl : STD_LOGIC;
  SIGNAL compute_sqrt_for_or_5_nl : STD_LOGIC;
  SIGNAL mux_632_nl : STD_LOGIC;
  SIGNAL nor_583_nl : STD_LOGIC;
  SIGNAL nor_584_nl : STD_LOGIC;
  SIGNAL mux_634_nl : STD_LOGIC;
  SIGNAL nor_461_nl : STD_LOGIC;
  SIGNAL mux_633_nl : STD_LOGIC;
  SIGNAL nor_462_nl : STD_LOGIC;
  SIGNAL nor_463_nl : STD_LOGIC;
  SIGNAL mux_631_nl : STD_LOGIC;
  SIGNAL mux_630_nl : STD_LOGIC;
  SIGNAL mux_629_nl : STD_LOGIC;
  SIGNAL mux_628_nl : STD_LOGIC;
  SIGNAL and_738_nl : STD_LOGIC;
  SIGNAL or_744_nl : STD_LOGIC;
  SIGNAL mux_627_nl : STD_LOGIC;
  SIGNAL mux_626_nl : STD_LOGIC;
  SIGNAL nand_207_nl : STD_LOGIC;
  SIGNAL or_742_nl : STD_LOGIC;
  SIGNAL mux_625_nl : STD_LOGIC;
  SIGNAL mux_624_nl : STD_LOGIC;
  SIGNAL mux_623_nl : STD_LOGIC;
  SIGNAL mux_622_nl : STD_LOGIC;
  SIGNAL mux_621_nl : STD_LOGIC;
  SIGNAL mux_620_nl : STD_LOGIC;
  SIGNAL mux_619_nl : STD_LOGIC;
  SIGNAL nand_34_nl : STD_LOGIC;
  SIGNAL mux_618_nl : STD_LOGIC;
  SIGNAL or_739_nl : STD_LOGIC;
  SIGNAL or_738_nl : STD_LOGIC;
  SIGNAL mux_617_nl : STD_LOGIC;
  SIGNAL mux_616_nl : STD_LOGIC;
  SIGNAL and_739_nl : STD_LOGIC;
  SIGNAL mux_615_nl : STD_LOGIC;
  SIGNAL mux_614_nl : STD_LOGIC;
  SIGNAL or_735_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_asn_SF_LOOP_3_acc_17_itm_1_8_RMS_NORM_LOOP_2_and_nl :
      STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_mux1h_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_or_nl : STD_LOGIC;
  SIGNAL mux_645_nl : STD_LOGIC;
  SIGNAL nor_470_nl : STD_LOGIC;
  SIGNAL nor_471_nl : STD_LOGIC;
  SIGNAL and_448_nl : STD_LOGIC;
  SIGNAL mux_643_nl : STD_LOGIC;
  SIGNAL mux_642_nl : STD_LOGIC;
  SIGNAL mux_641_nl : STD_LOGIC;
  SIGNAL nand_38_nl : STD_LOGIC;
  SIGNAL mux_640_nl : STD_LOGIC;
  SIGNAL and_741_nl : STD_LOGIC;
  SIGNAL and_742_nl : STD_LOGIC;
  SIGNAL nand_37_nl : STD_LOGIC;
  SIGNAL mux_639_nl : STD_LOGIC;
  SIGNAL nand_210_nl : STD_LOGIC;
  SIGNAL mux_638_nl : STD_LOGIC;
  SIGNAL mux_637_nl : STD_LOGIC;
  SIGNAL nand_36_nl : STD_LOGIC;
  SIGNAL mux_636_nl : STD_LOGIC;
  SIGNAL nand_35_nl : STD_LOGIC;
  SIGNAL or_755_nl : STD_LOGIC;
  SIGNAL mux_635_nl : STD_LOGIC;
  SIGNAL or_754_nl : STD_LOGIC;
  SIGNAL or_753_nl : STD_LOGIC;
  SIGNAL and_453_nl : STD_LOGIC;
  SIGNAL mux_644_nl : STD_LOGIC;
  SIGNAL nor_468_nl : STD_LOGIC;
  SIGNAL nor_469_nl : STD_LOGIC;
  SIGNAL not_2160_nl : STD_LOGIC;
  SIGNAL mux_661_nl : STD_LOGIC;
  SIGNAL mux_660_nl : STD_LOGIC;
  SIGNAL mux_659_nl : STD_LOGIC;
  SIGNAL mux_658_nl : STD_LOGIC;
  SIGNAL nand_212_nl : STD_LOGIC;
  SIGNAL nand_213_nl : STD_LOGIC;
  SIGNAL mux_657_nl : STD_LOGIC;
  SIGNAL mux_656_nl : STD_LOGIC;
  SIGNAL or_778_nl : STD_LOGIC;
  SIGNAL mux_655_nl : STD_LOGIC;
  SIGNAL mux_654_nl : STD_LOGIC;
  SIGNAL nand_39_nl : STD_LOGIC;
  SIGNAL mux_653_nl : STD_LOGIC;
  SIGNAL nor_473_nl : STD_LOGIC;
  SIGNAL mux_652_nl : STD_LOGIC;
  SIGNAL mux_651_nl : STD_LOGIC;
  SIGNAL or_775_nl : STD_LOGIC;
  SIGNAL mux_650_nl : STD_LOGIC;
  SIGNAL mux_648_nl : STD_LOGIC;
  SIGNAL or_770_nl : STD_LOGIC;
  SIGNAL mux_647_nl : STD_LOGIC;
  SIGNAL mux_646_nl : STD_LOGIC;
  SIGNAL or_769_nl : STD_LOGIC;
  SIGNAL or_768_nl : STD_LOGIC;
  SIGNAL or_767_nl : STD_LOGIC;
  SIGNAL or_765_nl : STD_LOGIC;
  SIGNAL mux_680_nl : STD_LOGIC;
  SIGNAL mux_679_nl : STD_LOGIC;
  SIGNAL mux_678_nl : STD_LOGIC;
  SIGNAL mux_677_nl : STD_LOGIC;
  SIGNAL mux_676_nl : STD_LOGIC;
  SIGNAL mux_675_nl : STD_LOGIC;
  SIGNAL mux_674_nl : STD_LOGIC;
  SIGNAL mux_673_nl : STD_LOGIC;
  SIGNAL mux_672_nl : STD_LOGIC;
  SIGNAL mux_671_nl : STD_LOGIC;
  SIGNAL or_789_nl : STD_LOGIC;
  SIGNAL mux_670_nl : STD_LOGIC;
  SIGNAL mux_669_nl : STD_LOGIC;
  SIGNAL mux_668_nl : STD_LOGIC;
  SIGNAL mux_666_nl : STD_LOGIC;
  SIGNAL mux_664_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_acc_22_nl : STD_LOGIC_VECTOR (19 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_60_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_65_nl : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_24_nl : STD_LOGIC_VECTOR (19 DOWNTO 0);
  SIGNAL mux_694_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_acc_71_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_72_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_73_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_74_nl : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_75_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_76_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_77_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_78_nl : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_79_nl : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL mux_709_nl : STD_LOGIC;
  SIGNAL mux_713_nl : STD_LOGIC;
  SIGNAL mux_712_nl : STD_LOGIC;
  SIGNAL mux_711_nl : STD_LOGIC;
  SIGNAL mux_708_nl : STD_LOGIC;
  SIGNAL mux_707_nl : STD_LOGIC;
  SIGNAL mux_706_nl : STD_LOGIC;
  SIGNAL or_814_nl : STD_LOGIC;
  SIGNAL mux_704_nl : STD_LOGIC;
  SIGNAL mux_703_nl : STD_LOGIC;
  SIGNAL mux_702_nl : STD_LOGIC;
  SIGNAL or_835_nl : STD_LOGIC;
  SIGNAL mux_700_nl : STD_LOGIC;
  SIGNAL mux_699_nl : STD_LOGIC;
  SIGNAL mux_698_nl : STD_LOGIC;
  SIGNAL mux_696_nl : STD_LOGIC;
  SIGNAL mux_695_nl : STD_LOGIC;
  SIGNAL mux_693_nl : STD_LOGIC;
  SIGNAL mux_692_nl : STD_LOGIC;
  SIGNAL mux_691_nl : STD_LOGIC;
  SIGNAL mux_687_nl : STD_LOGIC;
  SIGNAL mux_686_nl : STD_LOGIC;
  SIGNAL mux_683_nl : STD_LOGIC;
  SIGNAL mux_682_nl : STD_LOGIC;
  SIGNAL or_19_nl : STD_LOGIC;
  SIGNAL mux_681_nl : STD_LOGIC;
  SIGNAL nor_157_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_2_acc_4_nl : STD_LOGIC_VECTOR (40 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_2_attention_abs_2_nand_nl : STD_LOGIC;
  SIGNAL attention_abs_2_mux_3_nl : STD_LOGIC_VECTOR (38 DOWNTO 0);
  SIGNAL or_848_nl : STD_LOGIC;
  SIGNAL or_852_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_l_mux1h_4_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL mux_733_nl : STD_LOGIC;
  SIGNAL nor_487_nl : STD_LOGIC;
  SIGNAL and_759_nl : STD_LOGIC;
  SIGNAL mux_731_nl : STD_LOGIC;
  SIGNAL nor_485_nl : STD_LOGIC;
  SIGNAL nor_486_nl : STD_LOGIC;
  SIGNAL mux_756_nl : STD_LOGIC;
  SIGNAL mux_755_nl : STD_LOGIC;
  SIGNAL nand_47_nl : STD_LOGIC;
  SIGNAL mux_754_nl : STD_LOGIC;
  SIGNAL mux_753_nl : STD_LOGIC;
  SIGNAL mux_752_nl : STD_LOGIC;
  SIGNAL mux_751_nl : STD_LOGIC;
  SIGNAL mux_750_nl : STD_LOGIC;
  SIGNAL or_879_nl : STD_LOGIC;
  SIGNAL mux_749_nl : STD_LOGIC;
  SIGNAL or_878_nl : STD_LOGIC;
  SIGNAL nand_46_nl : STD_LOGIC;
  SIGNAL mux_748_nl : STD_LOGIC;
  SIGNAL mux_747_nl : STD_LOGIC;
  SIGNAL mux_746_nl : STD_LOGIC;
  SIGNAL nand_215_nl : STD_LOGIC;
  SIGNAL mux_745_nl : STD_LOGIC;
  SIGNAL mux_744_nl : STD_LOGIC;
  SIGNAL mux_743_nl : STD_LOGIC;
  SIGNAL nor_496_nl : STD_LOGIC;
  SIGNAL nor_497_nl : STD_LOGIC;
  SIGNAL mux_742_nl : STD_LOGIC;
  SIGNAL mux_741_nl : STD_LOGIC;
  SIGNAL nand_261_nl : STD_LOGIC;
  SIGNAL mux_740_nl : STD_LOGIC;
  SIGNAL nor_488_nl : STD_LOGIC;
  SIGNAL nor_489_nl : STD_LOGIC;
  SIGNAL or_nl : STD_LOGIC;
  SIGNAL mux_739_nl : STD_LOGIC;
  SIGNAL mux_738_nl : STD_LOGIC;
  SIGNAL mux_737_nl : STD_LOGIC;
  SIGNAL or_1231_nl : STD_LOGIC;
  SIGNAL or_1232_nl : STD_LOGIC;
  SIGNAL nand_262_nl : STD_LOGIC;
  SIGNAL mux_736_nl : STD_LOGIC;
  SIGNAL mux_735_nl : STD_LOGIC;
  SIGNAL nand_214_nl : STD_LOGIC;
  SIGNAL or_856_nl : STD_LOGIC;
  SIGNAL mux_734_nl : STD_LOGIC;
  SIGNAL or_855_nl : STD_LOGIC;
  SIGNAL or_853_nl : STD_LOGIC;
  SIGNAL mux_795_nl : STD_LOGIC;
  SIGNAL mux_794_nl : STD_LOGIC;
  SIGNAL mux_793_nl : STD_LOGIC;
  SIGNAL nand_219_nl : STD_LOGIC;
  SIGNAL mux_792_nl : STD_LOGIC;
  SIGNAL or_917_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_nl : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_mux1h_nl : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_70_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_89_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL nor_500_nl : STD_LOGIC;
  SIGNAL mux_773_nl : STD_LOGIC;
  SIGNAL mux_772_nl : STD_LOGIC;
  SIGNAL mux_771_nl : STD_LOGIC;
  SIGNAL mux_770_nl : STD_LOGIC;
  SIGNAL mux_769_nl : STD_LOGIC;
  SIGNAL mux_768_nl : STD_LOGIC;
  SIGNAL mux_767_nl : STD_LOGIC;
  SIGNAL or_895_nl : STD_LOGIC;
  SIGNAL nand_49_nl : STD_LOGIC;
  SIGNAL mux_766_nl : STD_LOGIC;
  SIGNAL nor_498_nl : STD_LOGIC;
  SIGNAL nor_499_nl : STD_LOGIC;
  SIGNAL and_465_nl : STD_LOGIC;
  SIGNAL mux_776_nl : STD_LOGIC;
  SIGNAL mux_775_nl : STD_LOGIC;
  SIGNAL nor_501_nl : STD_LOGIC;
  SIGNAL nor_502_nl : STD_LOGIC;
  SIGNAL mux_774_nl : STD_LOGIC;
  SIGNAL nor_503_nl : STD_LOGIC;
  SIGNAL nor_504_nl : STD_LOGIC;
  SIGNAL nor_579_nl : STD_LOGIC;
  SIGNAL mux_765_nl : STD_LOGIC;
  SIGNAL mux_764_nl : STD_LOGIC;
  SIGNAL mux_763_nl : STD_LOGIC;
  SIGNAL mux_762_nl : STD_LOGIC;
  SIGNAL mux_761_nl : STD_LOGIC;
  SIGNAL nor_177_nl : STD_LOGIC;
  SIGNAL mux_760_nl : STD_LOGIC;
  SIGNAL or_889_nl : STD_LOGIC;
  SIGNAL or_887_nl : STD_LOGIC;
  SIGNAL or_886_nl : STD_LOGIC;
  SIGNAL or_885_nl : STD_LOGIC;
  SIGNAL mux_759_nl : STD_LOGIC;
  SIGNAL mux_758_nl : STD_LOGIC;
  SIGNAL or_884_nl : STD_LOGIC;
  SIGNAL nand_48_nl : STD_LOGIC;
  SIGNAL mux_757_nl : STD_LOGIC;
  SIGNAL and_469_nl : STD_LOGIC;
  SIGNAL mux_791_nl : STD_LOGIC;
  SIGNAL mux_789_nl : STD_LOGIC;
  SIGNAL nor_506_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_k_mux1h_1_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_acc_3_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL and_474_nl : STD_LOGIC;
  SIGNAL mux_798_nl : STD_LOGIC;
  SIGNAL mux_797_nl : STD_LOGIC;
  SIGNAL nor_507_nl : STD_LOGIC;
  SIGNAL nor_508_nl : STD_LOGIC;
  SIGNAL and_473_nl : STD_LOGIC;
  SIGNAL mux_796_nl : STD_LOGIC;
  SIGNAL mux_826_nl : STD_LOGIC;
  SIGNAL nor_515_nl : STD_LOGIC;
  SIGNAL mux_825_nl : STD_LOGIC;
  SIGNAL or_954_nl : STD_LOGIC;
  SIGNAL mux_824_nl : STD_LOGIC;
  SIGNAL or_952_nl : STD_LOGIC;
  SIGNAL nand_223_nl : STD_LOGIC;
  SIGNAL mux_823_nl : STD_LOGIC;
  SIGNAL nor_516_nl : STD_LOGIC;
  SIGNAL nor_517_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_1_i_nand_nl : STD_LOGIC;
  SIGNAL mux_822_nl : STD_LOGIC;
  SIGNAL nor_512_nl : STD_LOGIC;
  SIGNAL mux_821_nl : STD_LOGIC;
  SIGNAL or_1221_nl : STD_LOGIC;
  SIGNAL nor_513_nl : STD_LOGIC;
  SIGNAL mux_820_nl : STD_LOGIC;
  SIGNAL mux_819_nl : STD_LOGIC;
  SIGNAL nand_221_nl : STD_LOGIC;
  SIGNAL mux_879_nl : STD_LOGIC;
  SIGNAL nand_222_nl : STD_LOGIC;
  SIGNAL mux_817_nl : STD_LOGIC;
  SIGNAL mux_816_nl : STD_LOGIC;
  SIGNAL mux_815_nl : STD_LOGIC;
  SIGNAL or_934_nl : STD_LOGIC;
  SIGNAL mux_814_nl : STD_LOGIC;
  SIGNAL mux_813_nl : STD_LOGIC;
  SIGNAL mux_812_nl : STD_LOGIC;
  SIGNAL mux_811_nl : STD_LOGIC;
  SIGNAL mux_810_nl : STD_LOGIC;
  SIGNAL mux_809_nl : STD_LOGIC;
  SIGNAL or_933_nl : STD_LOGIC;
  SIGNAL mux_808_nl : STD_LOGIC;
  SIGNAL mux_807_nl : STD_LOGIC;
  SIGNAL mux_806_nl : STD_LOGIC;
  SIGNAL nand_50_nl : STD_LOGIC;
  SIGNAL mux_804_nl : STD_LOGIC;
  SIGNAL mux_802_nl : STD_LOGIC;
  SIGNAL mux_801_nl : STD_LOGIC;
  SIGNAL or_928_nl : STD_LOGIC;
  SIGNAL mux_800_nl : STD_LOGIC;
  SIGNAL mux_799_nl : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_ki_mux1h_2_nl : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL not_2161_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_l_mux1h_5_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_1_1_i_not_2_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_l_mux1h_6_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_2_1_j_not_1_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_4_1_l_mux1h_7_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mux1h_15_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_or_nl : STD_LOGIC;
  SIGNAL not_2162_nl : STD_LOGIC;
  SIGNAL mux_903_nl : STD_LOGIC;
  SIGNAL nand_246_nl : STD_LOGIC;
  SIGNAL mux_902_nl : STD_LOGIC;
  SIGNAL mux_901_nl : STD_LOGIC;
  SIGNAL mux_900_nl : STD_LOGIC;
  SIGNAL mux_899_nl : STD_LOGIC;
  SIGNAL mux_898_nl : STD_LOGIC;
  SIGNAL mux_897_nl : STD_LOGIC;
  SIGNAL mux_896_nl : STD_LOGIC;
  SIGNAL mux_895_nl : STD_LOGIC;
  SIGNAL mux_894_nl : STD_LOGIC;
  SIGNAL mux_893_nl : STD_LOGIC;
  SIGNAL nand_247_nl : STD_LOGIC;
  SIGNAL mux_892_nl : STD_LOGIC;
  SIGNAL or_1038_nl : STD_LOGIC;
  SIGNAL mux_890_nl : STD_LOGIC;
  SIGNAL mux_889_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_nl
      : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_mux_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_4_nl
      : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_mux_1_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_1_nl : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_mux1h_2_nl : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_83_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_2_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_3_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_4_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_5_nl : STD_LOGIC;
  SIGNAL and_500_nl : STD_LOGIC;
  SIGNAL mux_912_nl : STD_LOGIC;
  SIGNAL or_1050_nl : STD_LOGIC;
  SIGNAL and_501_nl : STD_LOGIC;
  SIGNAL nor_581_nl : STD_LOGIC;
  SIGNAL mux_910_nl : STD_LOGIC;
  SIGNAL mux_909_nl : STD_LOGIC;
  SIGNAL mux_908_nl : STD_LOGIC;
  SIGNAL mux_907_nl : STD_LOGIC;
  SIGNAL mux_905_nl : STD_LOGIC;
  SIGNAL mux_904_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_acc_90_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_acc_2_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_81_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL mux_931_nl : STD_LOGIC;
  SIGNAL mux_930_nl : STD_LOGIC;
  SIGNAL mux_929_nl : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_2_acc_2_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_69_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_91_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL mux_928_nl : STD_LOGIC;
  SIGNAL mux_927_nl : STD_LOGIC;
  SIGNAL mux_926_nl : STD_LOGIC;
  SIGNAL nor_546_nl : STD_LOGIC;
  SIGNAL and_796_nl : STD_LOGIC;
  SIGNAL and_797_nl : STD_LOGIC;
  SIGNAL mux_925_nl : STD_LOGIC;
  SIGNAL or_1066_nl : STD_LOGIC;
  SIGNAL mux_924_nl : STD_LOGIC;
  SIGNAL mux_923_nl : STD_LOGIC;
  SIGNAL mux_922_nl : STD_LOGIC;
  SIGNAL nor_547_nl : STD_LOGIC;
  SIGNAL nor_548_nl : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_mux_1_nl : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_or_nl : STD_LOGIC;
  SIGNAL and_527_nl : STD_LOGIC;
  SIGNAL and_531_nl : STD_LOGIC;
  SIGNAL mux_950_nl : STD_LOGIC;
  SIGNAL or_1090_nl : STD_LOGIC;
  SIGNAL mux_949_nl : STD_LOGIC;
  SIGNAL nor_557_nl : STD_LOGIC;
  SIGNAL mux_948_nl : STD_LOGIC;
  SIGNAL nand_63_nl : STD_LOGIC;
  SIGNAL mux_947_nl : STD_LOGIC;
  SIGNAL and_805_nl : STD_LOGIC;
  SIGNAL mux_946_nl : STD_LOGIC;
  SIGNAL nor_558_nl : STD_LOGIC;
  SIGNAL mux_945_nl : STD_LOGIC;
  SIGNAL nand_61_nl : STD_LOGIC;
  SIGNAL mux_944_nl : STD_LOGIC;
  SIGNAL or_1085_nl : STD_LOGIC;
  SIGNAL mux_961_nl : STD_LOGIC;
  SIGNAL nor_565_nl : STD_LOGIC;
  SIGNAL mux_960_nl : STD_LOGIC;
  SIGNAL mux_959_nl : STD_LOGIC;
  SIGNAL and_808_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_k_mux1h_10_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_k_mux1h_13_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL mux_958_nl : STD_LOGIC;
  SIGNAL mux_957_nl : STD_LOGIC;
  SIGNAL mux_956_nl : STD_LOGIC;
  SIGNAL or_1334_nl : STD_LOGIC;
  SIGNAL or_1335_nl : STD_LOGIC;
  SIGNAL mux_955_nl : STD_LOGIC;
  SIGNAL nand_280_nl : STD_LOGIC;
  SIGNAL mux_954_nl : STD_LOGIC;
  SIGNAL or_1336_nl : STD_LOGIC;
  SIGNAL or_1337_nl : STD_LOGIC;
  SIGNAL mux_953_nl : STD_LOGIC;
  SIGNAL mux_969_nl : STD_LOGIC;
  SIGNAL and_810_nl : STD_LOGIC;
  SIGNAL mux_968_nl : STD_LOGIC;
  SIGNAL mux_967_nl : STD_LOGIC;
  SIGNAL or_1109_nl : STD_LOGIC;
  SIGNAL mux_966_nl : STD_LOGIC;
  SIGNAL nor_567_nl : STD_LOGIC;
  SIGNAL mux_965_nl : STD_LOGIC;
  SIGNAL and_811_nl : STD_LOGIC;
  SIGNAL mux_964_nl : STD_LOGIC;
  SIGNAL mux_962_nl : STD_LOGIC;
  SIGNAL mux_992_nl : STD_LOGIC;
  SIGNAL mux_989_nl : STD_LOGIC;
  SIGNAL or_1127_nl : STD_LOGIC;
  SIGNAL mux_988_nl : STD_LOGIC;
  SIGNAL mux_987_nl : STD_LOGIC;
  SIGNAL mux_986_nl : STD_LOGIC;
  SIGNAL or_1123_nl : STD_LOGIC;
  SIGNAL mux_985_nl : STD_LOGIC;
  SIGNAL mux_984_nl : STD_LOGIC;
  SIGNAL mux_974_nl : STD_LOGIC;
  SIGNAL nor_261_nl : STD_LOGIC;
  SIGNAL nor_259_nl : STD_LOGIC;
  SIGNAL mux_980_nl : STD_LOGIC;
  SIGNAL mux_979_nl : STD_LOGIC;
  SIGNAL mux_978_nl : STD_LOGIC;
  SIGNAL mux_977_nl : STD_LOGIC;
  SIGNAL mux_976_nl : STD_LOGIC;
  SIGNAL or_1113_nl : STD_LOGIC;
  SIGNAL mux_973_nl : STD_LOGIC;
  SIGNAL mux_972_nl : STD_LOGIC;
  SIGNAL nand_259_nl : STD_LOGIC;
  SIGNAL nand_68_nl : STD_LOGIC;
  SIGNAL mux_971_nl : STD_LOGIC;
  SIGNAL mux_970_nl : STD_LOGIC;
  SIGNAL mux_983_nl : STD_LOGIC;
  SIGNAL mux_982_nl : STD_LOGIC;
  SIGNAL or_1121_nl : STD_LOGIC;
  SIGNAL mux_981_nl : STD_LOGIC;
  SIGNAL or_1119_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_k_APPLY_ROTARY_POS_EMB_LOOP_6_k_mux_1_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_k_mux1h_12_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SOFTMAX_LOOP_2_and_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SOFTMAX_LOOP_2_mux1h_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_k_mux1h_15_nl : STD_LOGIC;
  SIGNAL SOFTMAX_LOOP_2_and_1_nl : STD_LOGIC;
  SIGNAL SOFTMAX_LOOP_2_mux1h_1_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_k_mux1h_14_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SOFTMAX_LOOP_2_and_2_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SOFTMAX_LOOP_2_mux1h_2_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_92_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL mux_993_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mux_29_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_or_2_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mux_30_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mux_31_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_8_nl : STD_LOGIC_VECTOR
      (37 DOWNTO 0);
  SIGNAL not_2715_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mux_32_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_102_nl : STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_97_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_98_nl : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_27_nl : STD_LOGIC_VECTOR (19 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_21_nl : STD_LOGIC_VECTOR (19 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_99_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_100_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_31_nl : STD_LOGIC_VECTOR (20 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_29_nl : STD_LOGIC_VECTOR (19 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_38_nl : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_44_nl : STD_LOGIC_VECTOR (16 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_95_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL SF_LOOP_3_and_1_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_acc_42_nl : STD_LOGIC_VECTOR (14 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_41_nl : STD_LOGIC_VECTOR (12 DOWNTO 0);
  SIGNAL SF_LOOP_3_SF_LOOP_3_nand_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_acc_49_nl : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_48_nl : STD_LOGIC_VECTOR (21 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_47_nl : STD_LOGIC_VECTOR (20 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_53_nl : STD_LOGIC_VECTOR (28 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_52_nl : STD_LOGIC_VECTOR (27 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_57_nl : STD_LOGIC_VECTOR (35 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_55_nl : STD_LOGIC_VECTOR (33 DOWNTO 0);
  SIGNAL mux_995_nl : STD_LOGIC;
  SIGNAL mux_994_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_27_nl : STD_LOGIC_VECTOR (5 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_25_nl : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_28_nl : STD_LOGIC_VECTOR (7 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_35_nl : STD_LOGIC_VECTOR (13 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_33_nl : STD_LOGIC_VECTOR (11 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_31_nl : STD_LOGIC_VECTOR (9 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_36_nl : STD_LOGIC_VECTOR (14 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_34_nl : STD_LOGIC_VECTOR (12 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_32_nl : STD_LOGIC_VECTOR (10 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_43_nl : STD_LOGIC_VECTOR (21 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_41_nl : STD_LOGIC_VECTOR (19 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_39_nl : STD_LOGIC_VECTOR (17 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_44_nl : STD_LOGIC_VECTOR (22 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_42_nl : STD_LOGIC_VECTOR (20 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_40_nl : STD_LOGIC_VECTOR (18 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_50_nl : STD_LOGIC_VECTOR (28 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_48_nl : STD_LOGIC_VECTOR (26 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_49_nl : STD_LOGIC_VECTOR (27 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_2_acc_47_nl : STD_LOGIC_VECTOR (25 DOWNTO
      0);
  SIGNAL and_557_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_2_1_acc_4_nl : STD_LOGIC_VECTOR (40 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_2_1_attention_abs_6_nand_nl : STD_LOGIC;
  SIGNAL attention_abs_6_mux_3_nl : STD_LOGIC_VECTOR (38 DOWNTO 0);
  SIGNAL mux_1002_nl : STD_LOGIC;
  SIGNAL mux_1001_nl : STD_LOGIC;
  SIGNAL mux_1000_nl : STD_LOGIC;
  SIGNAL mux_999_nl : STD_LOGIC;
  SIGNAL mux_998_nl : STD_LOGIC;
  SIGNAL mux_997_nl : STD_LOGIC;
  SIGNAL mux_1003_nl : STD_LOGIC;
  SIGNAL nor_571_nl : STD_LOGIC;
  SIGNAL and_816_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_mux1h_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_mux1h_nl : STD_LOGIC;
  SIGNAL compute_sqrt_1_for_acc_1_nl : STD_LOGIC_VECTOR (40 DOWNTO 0);
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_acc_22_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_acc_15_nl : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL compute_sqrt_for_acc_1_nl : STD_LOGIC_VECTOR (40 DOWNTO 0);
  SIGNAL attention_max_attn_fixed_t_acc_nl : STD_LOGIC_VECTOR (40 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_acc_nl : STD_LOGIC_VECTOR
      (17 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_qif_acc_4_nl : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_1_qif_acc_4_nl : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_acc_19_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_4_acc_15_nl : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL SF_LOOP_3_mul_8_nl : STD_LOGIC_VECTOR (16 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_34_nl : STD_LOGIC_VECTOR (18 DOWNTO 0);
  SIGNAL SF_LOOP_3_acc_32_nl : STD_LOGIC_VECTOR (17 DOWNTO 0);
  SIGNAL attention_max_attn_fixed_t_1_acc_nl : STD_LOGIC_VECTOR (40 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_nl : STD_LOGIC_VECTOR
      (17 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_acc_2_nl : STD_LOGIC_VECTOR (6
      DOWNTO 0);
  SIGNAL attention_round_1_acc_nl : STD_LOGIC_VECTOR (40 DOWNTO 0);
  SIGNAL SOFTMAX_LOOP_3_acc_3_nl : STD_LOGIC_VECTOR (40 DOWNTO 0);
  SIGNAL attention_round_acc_nl : STD_LOGIC_VECTOR (40 DOWNTO 0);
  SIGNAL mux_316_nl : STD_LOGIC;
  SIGNAL mux_315_nl : STD_LOGIC;
  SIGNAL or_366_nl : STD_LOGIC;
  SIGNAL mux_339_nl : STD_LOGIC;
  SIGNAL mux_355_nl : STD_LOGIC;
  SIGNAL mux_354_nl : STD_LOGIC;
  SIGNAL and_666_nl : STD_LOGIC;
  SIGNAL mux_376_nl : STD_LOGIC;
  SIGNAL mux_375_nl : STD_LOGIC;
  SIGNAL nor_347_nl : STD_LOGIC;
  SIGNAL or_472_nl : STD_LOGIC;
  SIGNAL or_476_nl : STD_LOGIC;
  SIGNAL or_506_nl : STD_LOGIC;
  SIGNAL or_505_nl : STD_LOGIC;
  SIGNAL mux_506_nl : STD_LOGIC;
  SIGNAL mux_518_nl : STD_LOGIC;
  SIGNAL or_1199_nl : STD_LOGIC;
  SIGNAL or_1200_nl : STD_LOGIC;
  SIGNAL or_643_nl : STD_LOGIC;
  SIGNAL or_642_nl : STD_LOGIC;
  SIGNAL mux_40_nl : STD_LOGIC;
  SIGNAL or_61_nl : STD_LOGIC;
  SIGNAL nand_26_nl : STD_LOGIC;
  SIGNAL mux_544_nl : STD_LOGIC;
  SIGNAL or_656_nl : STD_LOGIC;
  SIGNAL or_682_nl : STD_LOGIC;
  SIGNAL mux_584_nl : STD_LOGIC;
  SIGNAL mux_583_nl : STD_LOGIC;
  SIGNAL mux_582_nl : STD_LOGIC;
  SIGNAL and_678_nl : STD_LOGIC;
  SIGNAL mux_581_nl : STD_LOGIC;
  SIGNAL mux_580_nl : STD_LOGIC;
  SIGNAL mux_578_nl : STD_LOGIC;
  SIGNAL and_679_nl : STD_LOGIC;
  SIGNAL mux_663_nl : STD_LOGIC;
  SIGNAL or_786_nl : STD_LOGIC;
  SIGNAL or_915_nl : STD_LOGIC;
  SIGNAL mux_828_nl : STD_LOGIC;
  SIGNAL or_957_nl : STD_LOGIC;
  SIGNAL mux_827_nl : STD_LOGIC;
  SIGNAL mux_906_nl : STD_LOGIC;
  SIGNAL mux_952_nl : STD_LOGIC;
  SIGNAL and_690_nl : STD_LOGIC;
  SIGNAL mux_990_nl : STD_LOGIC;
  SIGNAL mux_576_nl : STD_LOGIC;
  SIGNAL and_733_nl : STD_LOGIC;
  SIGNAL nor_442_nl : STD_LOGIC;
  SIGNAL mux_577_nl : STD_LOGIC;
  SIGNAL nor_443_nl : STD_LOGIC;
  SIGNAL nor_444_nl : STD_LOGIC;
  SIGNAL mux_598_nl : STD_LOGIC;
  SIGNAL and_736_nl : STD_LOGIC;
  SIGNAL mux_597_nl : STD_LOGIC;
  SIGNAL nor_450_nl : STD_LOGIC;
  SIGNAL nor_451_nl : STD_LOGIC;
  SIGNAL nor_452_nl : STD_LOGIC;
  SIGNAL mux_168_nl : STD_LOGIC;
  SIGNAL mux_600_nl : STD_LOGIC;
  SIGNAL nor_454_nl : STD_LOGIC;
  SIGNAL nor_455_nl : STD_LOGIC;
  SIGNAL mux_601_nl : STD_LOGIC;
  SIGNAL nor_456_nl : STD_LOGIC;
  SIGNAL nor_457_nl : STD_LOGIC;
  SIGNAL mux_837_nl : STD_LOGIC;
  SIGNAL mux_836_nl : STD_LOGIC;
  SIGNAL or_1222_nl : STD_LOGIC;
  SIGNAL nand_228_nl : STD_LOGIC;
  SIGNAL mux_835_nl : STD_LOGIC;
  SIGNAL nor_556_nl : STD_LOGIC;
  SIGNAL nor_521_nl : STD_LOGIC;
  SIGNAL or_1223_nl : STD_LOGIC;
  SIGNAL mux_834_nl : STD_LOGIC;
  SIGNAL or_969_nl : STD_LOGIC;
  SIGNAL mux_833_nl : STD_LOGIC;
  SIGNAL or_967_nl : STD_LOGIC;
  SIGNAL or_965_nl : STD_LOGIC;
  SIGNAL mux_838_nl : STD_LOGIC;
  SIGNAL and_778_nl : STD_LOGIC;
  SIGNAL nor_525_nl : STD_LOGIC;
  SIGNAL mux_842_nl : STD_LOGIC;
  SIGNAL nor_527_nl : STD_LOGIC;
  SIGNAL mux_841_nl : STD_LOGIC;
  SIGNAL nor_528_nl : STD_LOGIC;
  SIGNAL mux_840_nl : STD_LOGIC;
  SIGNAL nand_232_nl : STD_LOGIC;
  SIGNAL mux_839_nl : STD_LOGIC;
  SIGNAL or_980_nl : STD_LOGIC;
  SIGNAL or_979_nl : STD_LOGIC;
  SIGNAL mux_854_nl : STD_LOGIC;
  SIGNAL mux_853_nl : STD_LOGIC;
  SIGNAL mux_852_nl : STD_LOGIC;
  SIGNAL nor_529_nl : STD_LOGIC;
  SIGNAL mux_851_nl : STD_LOGIC;
  SIGNAL mux_850_nl : STD_LOGIC;
  SIGNAL nor_530_nl : STD_LOGIC;
  SIGNAL mux_849_nl : STD_LOGIC;
  SIGNAL mux_848_nl : STD_LOGIC;
  SIGNAL mux_855_nl : STD_LOGIC;
  SIGNAL mux_846_nl : STD_LOGIC;
  SIGNAL mux_862_nl : STD_LOGIC;
  SIGNAL mux_844_nl : STD_LOGIC;
  SIGNAL mux_875_nl : STD_LOGIC;
  SIGNAL nand_240_nl : STD_LOGIC;
  SIGNAL mux_874_nl : STD_LOGIC;
  SIGNAL or_1014_nl : STD_LOGIC;
  SIGNAL mux_873_nl : STD_LOGIC;
  SIGNAL mux_872_nl : STD_LOGIC;
  SIGNAL or_1012_nl : STD_LOGIC;
  SIGNAL or_1226_nl : STD_LOGIC;
  SIGNAL mux_871_nl : STD_LOGIC;
  SIGNAL nand_53_nl : STD_LOGIC;
  SIGNAL mux_870_nl : STD_LOGIC;
  SIGNAL nor_519_nl : STD_LOGIC;
  SIGNAL nor_518_nl : STD_LOGIC;
  SIGNAL mux_869_nl : STD_LOGIC;
  SIGNAL or_1006_nl : STD_LOGIC;
  SIGNAL mux_878_nl : STD_LOGIC;
  SIGNAL nand_241_nl : STD_LOGIC;
  SIGNAL mux_877_nl : STD_LOGIC;
  SIGNAL nor_538_nl : STD_LOGIC;
  SIGNAL nor_539_nl : STD_LOGIC;
  SIGNAL nand_242_nl : STD_LOGIC;
  SIGNAL mux_876_nl : STD_LOGIC;
  SIGNAL nor_540_nl : STD_LOGIC;
  SIGNAL nor_541_nl : STD_LOGIC;
  SIGNAL mux_913_nl : STD_LOGIC;
  SIGNAL mux_940_nl : STD_LOGIC;
  SIGNAL mux_396_nl : STD_LOGIC;
  SIGNAL nor_386_nl : STD_LOGIC;
  SIGNAL nor_387_nl : STD_LOGIC;
  SIGNAL and_352_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_2_and_3_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_5_nl : STD_LOGIC_VECTOR (2
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_and_5_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_6_nl : STD_LOGIC_VECTOR (3
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_and_6_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_7_nl : STD_LOGIC_VECTOR (1
      DOWNTO 0);
  SIGNAL mux_431_nl : STD_LOGIC;
  SIGNAL nor_393_nl : STD_LOGIC;
  SIGNAL nor_394_nl : STD_LOGIC;
  SIGNAL mux_432_nl : STD_LOGIC;
  SIGNAL or_1207_nl : STD_LOGIC;
  SIGNAL nand_186_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_1_and_2_nl : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_3_nl : STD_LOGIC_VECTOR (3
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_6_nl : STD_LOGIC_VECTOR (2
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_7_nl : STD_LOGIC_VECTOR (3
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_8_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_9_nl : STD_LOGIC_VECTOR (2
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_10_nl : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_1_and_3_nl : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_4_nl : STD_LOGIC_VECTOR (15
      DOWNTO 0);
  SIGNAL mux_424_nl : STD_LOGIC;
  SIGNAL mux_423_nl : STD_LOGIC;
  SIGNAL or_507_nl : STD_LOGIC;
  SIGNAL and_336_nl : STD_LOGIC;
  SIGNAL mux_427_nl : STD_LOGIC;
  SIGNAL mux_426_nl : STD_LOGIC;
  SIGNAL or_512_nl : STD_LOGIC;
  SIGNAL mux_425_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_mux1h_1_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_mux1h_3_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_mux1h_4_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL mux_422_nl : STD_LOGIC;
  SIGNAL mux_421_nl : STD_LOGIC;
  SIGNAL mux_420_nl : STD_LOGIC;
  SIGNAL mux_419_nl : STD_LOGIC;
  SIGNAL mux_416_nl : STD_LOGIC;
  SIGNAL or_504_nl : STD_LOGIC;
  SIGNAL or_503_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_and_2_nl : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_1_nl : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_5_nl : STD_LOGIC_VECTOR (2 DOWNTO
      0);
  SIGNAL INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_6_nl : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_7_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_8_nl : STD_LOGIC_VECTOR (2 DOWNTO
      0);
  SIGNAL INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_9_nl : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL INIT_2D_MEM_LOOP_2_and_3_nl : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_2_nl : STD_LOGIC_VECTOR (15 DOWNTO
      0);
  SIGNAL INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_nl : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_3_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_4_nl : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL mux_407_nl : STD_LOGIC;
  SIGNAL or_485_nl : STD_LOGIC;
  SIGNAL or_484_nl : STD_LOGIC;
  SIGNAL mux_413_nl : STD_LOGIC;
  SIGNAL mux_412_nl : STD_LOGIC;
  SIGNAL or_497_nl : STD_LOGIC;
  SIGNAL or_495_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_1_and_1_nl : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_2_nl : STD_LOGIC_VECTOR (3
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_11_nl : STD_LOGIC_VECTOR (2
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_12_nl : STD_LOGIC_VECTOR (3
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_13_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_14_nl : STD_LOGIC_VECTOR (2
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_15_nl : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_1_and_4_nl : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_5_nl : STD_LOGIC_VECTOR (15
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_3_nl : STD_LOGIC_VECTOR (3
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_8_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_9_nl : STD_LOGIC_VECTOR (3
      DOWNTO 0);
  SIGNAL and_314_nl : STD_LOGIC;
  SIGNAL mux_409_nl : STD_LOGIC;
  SIGNAL mux_408_nl : STD_LOGIC;
  SIGNAL or_488_nl : STD_LOGIC;
  SIGNAL or_487_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_2_and_2_nl : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_2_nl : STD_LOGIC_VECTOR (3
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_11_nl : STD_LOGIC_VECTOR (2
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_12_nl : STD_LOGIC_VECTOR (3
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_13_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_14_nl : STD_LOGIC_VECTOR (2
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_15_nl : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_and_7_nl : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_10_nl : STD_LOGIC_VECTOR (15
      DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_mux_nl : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_mux_3_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_mux_4_nl : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL mux_402_nl : STD_LOGIC;
  SIGNAL or_473_nl : STD_LOGIC;
  SIGNAL and_302_nl : STD_LOGIC;
  SIGNAL mux_404_nl : STD_LOGIC;
  SIGNAL or_475_nl : STD_LOGIC;
  SIGNAL mux_400_nl : STD_LOGIC;
  SIGNAL or_468_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_acc_7_nl : STD_LOGIC_VECTOR (55 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_acc_14_nl : STD_LOGIC_VECTOR (55 DOWNTO 0);
  SIGNAL and_278_nl : STD_LOGIC;
  SIGNAL and_271_nl : STD_LOGIC;
  SIGNAL FIXED32_MIN_mux1h_1_nl : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL SF_LOOP_3_SF_LOOP_3_SF_LOOP_3_acc_nl : STD_LOGIC_VECTOR (37 DOWNTO 0);
  SIGNAL FIXED32_MIN_or_nl : STD_LOGIC;
  SIGNAL and_259_nl : STD_LOGIC;
  SIGNAL nor_573_nl : STD_LOGIC;
  SIGNAL mux_399_nl : STD_LOGIC;
  SIGNAL or_462_nl : STD_LOGIC;
  SIGNAL mux_398_nl : STD_LOGIC;
  SIGNAL mux_397_nl : STD_LOGIC;
  SIGNAL or_460_nl : STD_LOGIC;
  SIGNAL or_458_nl : STD_LOGIC;
  SIGNAL or_457_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_3_mux1h_4_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_3_or_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_3_mux1h_12_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_3_or_5_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_3_and_1_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_3_mux1h_13_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_3_or_1_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_3_or_2_nl : STD_LOGIC;
  SIGNAL mux_392_nl : STD_LOGIC;
  SIGNAL mux_391_nl : STD_LOGIC;
  SIGNAL mux_390_nl : STD_LOGIC;
  SIGNAL and_702_nl : STD_LOGIC;
  SIGNAL nor_381_nl : STD_LOGIC;
  SIGNAL nor_382_nl : STD_LOGIC;
  SIGNAL mux_389_nl : STD_LOGIC;
  SIGNAL mux_388_nl : STD_LOGIC;
  SIGNAL and_703_nl : STD_LOGIC;
  SIGNAL and_704_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_3_mux1h_2_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_3_mux1h_10_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_3_GEMM_3D_FLOAT_LOOP_3_mux_nl : STD_LOGIC;
  SIGNAL mux_395_nl : STD_LOGIC;
  SIGNAL nor_383_nl : STD_LOGIC;
  SIGNAL mux_394_nl : STD_LOGIC;
  SIGNAL mux_393_nl : STD_LOGIC;
  SIGNAL nor_384_nl : STD_LOGIC;
  SIGNAL and_706_nl : STD_LOGIC;
  SIGNAL nor_385_nl : STD_LOGIC;
  SIGNAL nor_572_nl : STD_LOGIC;
  SIGNAL mux_387_nl : STD_LOGIC;
  SIGNAL nor_379_nl : STD_LOGIC;
  SIGNAL nor_380_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_3_1_GEMM_3D_FLOAT_LOOP_3_1_mux_nl : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_3_1_GEMM_3D_FLOAT_LOOP_3_1_mux_1_nl : STD_LOGIC;
  SIGNAL mux_385_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_nl : STD_LOGIC_VECTOR (3 DOWNTO
      0);
  SIGNAL INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_1_nl : STD_LOGIC;
  SIGNAL mux_386_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_and_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_mux1h_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_and_4_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_mux1h_6_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_and_5_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_mux1h_7_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL mux_380_nl : STD_LOGIC;
  SIGNAL mux_379_nl : STD_LOGIC;
  SIGNAL nor_372_nl : STD_LOGIC;
  SIGNAL nor_373_nl : STD_LOGIC;
  SIGNAL mux_378_nl : STD_LOGIC;
  SIGNAL or_414_nl : STD_LOGIC;
  SIGNAL or_412_nl : STD_LOGIC;
  SIGNAL nor_374_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_3_1_GEMM_3D_FLOAT_LOOP_3_1_mux_2_nl : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL GEMM_3D_FLOAT_LOOP_3_1_GEMM_3D_FLOAT_LOOP_3_1_mux_4_nl : STD_LOGIC;
  SIGNAL GEMM_3D_FLOAT_LOOP_3_1_GEMM_3D_FLOAT_LOOP_3_1_mux_5_nl : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL mux_381_nl : STD_LOGIC;
  SIGNAL and_699_nl : STD_LOGIC;
  SIGNAL nor_375_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_acc_6_nl : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_3_acc_12_nl : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL mux_1015_nl : STD_LOGIC;
  SIGNAL and_1498_nl : STD_LOGIC;
  SIGNAL nor_613_nl : STD_LOGIC;
  SIGNAL mux_1050_nl : STD_LOGIC;
  SIGNAL mux_1053_nl : STD_LOGIC;
  SIGNAL nor_690_nl : STD_LOGIC;
  SIGNAL mux_1016_nl : STD_LOGIC;
  SIGNAL nor_629_nl : STD_LOGIC;
  SIGNAL nor_630_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_nor_3_nl
      : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_nor_3_nl
      : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux_5_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux_6_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_nor_2_nl
      : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_nor_2_nl
      : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_1_nl : STD_LOGIC;
  SIGNAL mux_1010_nl : STD_LOGIC;
  SIGNAL and_1497_nl : STD_LOGIC;
  SIGNAL nor_605_nl : STD_LOGIC;
  SIGNAL nand_296_nl : STD_LOGIC;
  SIGNAL mux_1007_nl : STD_LOGIC;
  SIGNAL nor_660_nl : STD_LOGIC;
  SIGNAL nor_702_nl : STD_LOGIC;
  SIGNAL nand_297_nl : STD_LOGIC;
  SIGNAL mux_1006_nl : STD_LOGIC;
  SIGNAL and_1510_nl : STD_LOGIC;
  SIGNAL nor_662_nl : STD_LOGIC;
  SIGNAL nor_705_nl : STD_LOGIC;
  SIGNAL mux_1013_nl : STD_LOGIC;
  SIGNAL nand_268_nl : STD_LOGIC;
  SIGNAL or_1304_nl : STD_LOGIC;
  SIGNAL nor_706_nl : STD_LOGIC;
  SIGNAL acc_nl : STD_LOGIC_VECTOR (40 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_1_1_mux1h_5_nl : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_acc_1_nl : STD_LOGIC_VECTOR (23 DOWNTO
      0);
  SIGNAL RMS_NORM_LOOP_1_1_mux1h_6_nl : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_1_1_or_3_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_1_1_mux1h_7_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_1_1_mux1h_8_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_1_1_mux1h_9_nl : STD_LOGIC_VECTOR (35 DOWNTO 0);
  SIGNAL INIT_2D_MEM_LOOP_2_2_or_4_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_mux_1_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_or_3_nl : STD_LOGIC;
  SIGNAL INIT_2D_MEM_LOOP_2_1_nand_1_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_mux1h_10_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_mux1h_11_nl : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL SF_LOOP_3_mux1h_12_nl : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL compute_sqrt_for_guess_inv_compute_sqrt_for_guess_inv_and_2_nl : STD_LOGIC;
  SIGNAL compute_sqrt_for_guess_inv_mux_2_nl : STD_LOGIC;
  SIGNAL compute_sqrt_for_guess_inv_compute_sqrt_for_guess_inv_and_3_nl : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL compute_sqrt_for_guess_inv_mux_3_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL compute_sqrt_for_guess_inv_and_6_nl : STD_LOGIC_VECTOR (28 DOWNTO 0);
  SIGNAL compute_sqrt_for_guess_inv_mux1h_7_nl : STD_LOGIC_VECTOR (28 DOWNTO 0);
  SIGNAL not_2700_nl : STD_LOGIC;
  SIGNAL compute_sqrt_for_guess_inv_mux1h_8_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL compute_sqrt_for_guess_inv_and_7_nl : STD_LOGIC;
  SIGNAL compute_sqrt_for_guess_inv_mux1h_9_nl : STD_LOGIC;
  SIGNAL compute_sqrt_for_guess_inv_and_8_nl : STD_LOGIC_VECTOR (21 DOWNTO 0);
  SIGNAL compute_sqrt_for_guess_inv_mux1h_10_nl : STD_LOGIC_VECTOR (21 DOWNTO 0);
  SIGNAL compute_sqrt_for_guess_inv_and_9_nl : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL compute_sqrt_for_guess_inv_mux1h_11_nl : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL compute_sqrt_for_guess_inv_mux1h_12_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL compute_sqrt_for_guess_inv_mux1h_13_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_or_11_nl :
      STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_mux1h_5_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_and_1_nl :
      STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_mux1h_6_nl : STD_LOGIC_VECTOR (38 DOWNTO
      0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_mux_3_nl : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_mux_4_nl : STD_LOGIC_VECTOR (38 DOWNTO 0);
  SIGNAL acc_4_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_or_5_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_mux_3_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_mux_4_nl
      : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_mux_5_nl
      : STD_LOGIC;
  SIGNAL acc_5_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux_16_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux_17_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_mux_18_nl : STD_LOGIC;
  SIGNAL acc_6_nl : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL compute_sqrt_for_mux1h_4_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL compute_sqrt_for_or_7_nl : STD_LOGIC;
  SIGNAL compute_sqrt_for_mux1h_5_nl : STD_LOGIC;
  SIGNAL compute_sqrt_for_and_3_nl : STD_LOGIC;
  SIGNAL compute_sqrt_for_mux1h_6_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL compute_sqrt_for_or_8_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_mux1h_13_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL SF_LOOP_3_mux1h_14_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_mux_2_nl : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL and_1523_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_mux_3_nl : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_or_7_nl : STD_LOGIC;
  SIGNAL mux_1059_nl : STD_LOGIC;
  SIGNAL nor_713_nl : STD_LOGIC;
  SIGNAL mux_1060_nl : STD_LOGIC;
  SIGNAL or_1348_nl : STD_LOGIC;
  SIGNAL acc_9_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL and_1556_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_mux1h_3_nl : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_mux1h_4_nl : STD_LOGIC_VECTOR
      (19 DOWNTO 0);
  SIGNAL and_1528_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL mux1h_1_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_or_4_nl : STD_LOGIC_VECTOR (7
      DOWNTO 0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_mux1h_5_nl : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_3_else_if_acc_3_nl : STD_LOGIC_VECTOR (7 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_and_2_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_and_3_nl : STD_LOGIC;
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_or_5_nl : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_5_2_else_if_acc_3_nl : STD_LOGIC_VECTOR (7 DOWNTO
      0);
  SIGNAL and_1557_nl : STD_LOGIC;
  SIGNAL and_1558_nl : STD_LOGIC;
  SIGNAL nor_714_nl : STD_LOGIC;
  SIGNAL acc_11_nl : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_2_mux_6_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_mux_7_nl : STD_LOGIC_VECTOR (38 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_and_2_nl : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL RMS_NORM_LOOP_2_2_mux_8_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_2_2_mux_9_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_2_mux_10_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL mul_5_nl : STD_LOGIC_VECTOR (67 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_1_1_mux_36_nl : STD_LOGIC;
  SIGNAL RMS_NORM_LOOP_1_1_mux_37_nl : STD_LOGIC_VECTOR (38 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_1_1_mux_38_nl : STD_LOGIC_VECTOR (51 DOWNTO 0);
  SIGNAL SF_LOOP_3_mux_22_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_mux_23_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL SF_LOOP_3_mux_24_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_mux_25_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL SF_LOOP_3_mux_26_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_9_nl : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL not_2716_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_10_nl : STD_LOGIC_VECTOR
      (6 DOWNTO 0);
  SIGNAL not_2717_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mux_33_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mux_34_nl : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_11_nl : STD_LOGIC_VECTOR
      (3 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mux_35_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL not_2718_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_12_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_13_nl : STD_LOGIC_VECTOR
      (2 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mux_36_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL not_2719_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_14_nl : STD_LOGIC_VECTOR
      (6 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mux_37_nl : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL not_2720_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_or_3_nl : STD_LOGIC_VECTOR
      (1 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mux_38_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_15_nl : STD_LOGIC_VECTOR
      (36 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mux_39_nl : STD_LOGIC_VECTOR (36 DOWNTO 0);
  SIGNAL not_2721_nl : STD_LOGIC;
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_mux1h_20_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL SF_LOOP_3_SF_LOOP_3_and_4_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL SF_LOOP_3_mux_27_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL not_2722_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_SF_LOOP_3_and_5_nl : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL SF_LOOP_3_mux_28_nl : STD_LOGIC_VECTOR (6 DOWNTO 0);
  SIGNAL not_2723_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_mux1h_15_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL SF_LOOP_3_SF_LOOP_3_and_6_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_SF_LOOP_3_and_7_nl : STD_LOGIC_VECTOR (34 DOWNTO 0);
  SIGNAL SF_LOOP_3_mux_29_nl : STD_LOGIC_VECTOR (34 DOWNTO 0);
  SIGNAL not_2724_nl : STD_LOGIC;
  SIGNAL SF_LOOP_3_mux1h_16_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL for_for_acc_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL for_for_mux1h_7_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL nor_715_nl : STD_LOGIC;
  SIGNAL nor_716_nl : STD_LOGIC;
  SIGNAL mux_1063_nl : STD_LOGIC;
  SIGNAL nand_298_nl : STD_LOGIC;
  SIGNAL mux_1064_nl : STD_LOGIC;
  SIGNAL nor_718_nl : STD_LOGIC;
  SIGNAL nor_719_nl : STD_LOGIC;
  SIGNAL mux_1065_nl : STD_LOGIC;
  SIGNAL or_1352_nl : STD_LOGIC;
  SIGNAL nand_299_nl : STD_LOGIC;
  SIGNAL mux_1066_nl : STD_LOGIC;
  SIGNAL nor_720_nl : STD_LOGIC;
  SIGNAL nor_721_nl : STD_LOGIC;
  SIGNAL and_1537_nl : STD_LOGIC;
  SIGNAL mux_1067_nl : STD_LOGIC;
  SIGNAL mux_1068_nl : STD_LOGIC;
  SIGNAL mux_1069_nl : STD_LOGIC;
  SIGNAL mux_1070_nl : STD_LOGIC;
  SIGNAL and_1538_nl : STD_LOGIC;
  SIGNAL QUANTIZE_ACTIVATION_LOOP_3_acc_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL QUANTIZE_ACTIVATION_LOOP_3_mux1h_3_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL mux_1071_nl : STD_LOGIC;
  SIGNAL nor_723_nl : STD_LOGIC;
  SIGNAL mux_1072_nl : STD_LOGIC;
  SIGNAL and_1539_nl : STD_LOGIC;
  SIGNAL mux_1073_nl : STD_LOGIC;
  SIGNAL nor_724_nl : STD_LOGIC;
  SIGNAL nor_725_nl : STD_LOGIC;
  SIGNAL mux_1074_nl : STD_LOGIC;
  SIGNAL nor_726_nl : STD_LOGIC;
  SIGNAL nor_727_nl : STD_LOGIC;
  SIGNAL and_1540_nl : STD_LOGIC;
  SIGNAL mux_1075_nl : STD_LOGIC;
  SIGNAL nor_728_nl : STD_LOGIC;
  SIGNAL mux_1076_nl : STD_LOGIC;
  SIGNAL nor_729_nl : STD_LOGIC;
  SIGNAL and_1541_nl : STD_LOGIC;
  SIGNAL and_1542_nl : STD_LOGIC;
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_3_acc_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_3_mux_3_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux_1_nl :
      STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_4_nl : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_7_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL and_1543_nl : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_5_nl : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_6_nl : STD_LOGIC;
  SIGNAL TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_7_nl : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_1_mux1h_9_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL and_1547_nl : STD_LOGIC;
  SIGNAL and_1548_nl : STD_LOGIC;
  SIGNAL and_1549_nl : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_qif_mux_1_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL and_1550_nl : STD_LOGIC;
  SIGNAL RESHAPE_2D_TO_3D_LOOP_3_mux1h_6_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL and_1551_nl : STD_LOGIC;
  SIGNAL mux_1077_nl : STD_LOGIC;
  SIGNAL nor_730_nl : STD_LOGIC;
  SIGNAL nor_731_nl : STD_LOGIC;
  SIGNAL and_1552_nl : STD_LOGIC;
  SIGNAL and_1553_nl : STD_LOGIC;
  SIGNAL and_1554_nl : STD_LOGIC;
  SIGNAL CACHE_UPDATE_LOOP_3_1_qif_mux_1_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL and_1555_nl : STD_LOGIC;
  SIGNAL SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a : STD_LOGIC_VECTOR (55 DOWNTO
      0);
  SIGNAL SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_z_1 : STD_LOGIC_VECTOR (55 DOWNTO
      0);

  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_a
      : STD_LOGIC_VECTOR (71 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b
      : STD_LOGIC_VECTOR (59 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z_1
      : STD_LOGIC_VECTOR (71 DOWNTO 0);

  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_a : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_1 : STD_LOGIC_VECTOR (39
      DOWNTO 0);

  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_cosval_read_rom_cos_tab_rom_map_1_rg_addr :
      STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_cosval_read_rom_cos_tab_rom_map_1_rg_data_out
      : STD_LOGIC_VECTOR (16 DOWNTO 0);

  SIGNAL RMS_NORM_LOOP_2_read_rom_ln_weight_in_rom_map_1_rg_addr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_read_rom_ln_weight_in_rom_map_1_rg_data_out : STD_LOGIC_VECTOR
      (11 DOWNTO 0);

  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_rg_addr :
      STD_LOGIC_VECTOR (9 DOWNTO 0);
  SIGNAL APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_rg_data_out
      : STD_LOGIC_VECTOR (16 DOWNTO 0);

  SIGNAL RMS_NORM_LOOP_2_2_read_rom_ln_weight_rom_map_1_rg_addr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL RMS_NORM_LOOP_2_2_read_rom_ln_weight_rom_map_1_rg_data_out : STD_LOGIC_VECTOR
      (12 DOWNTO 0);

  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_read_rom_v_weights_rom_map_1_rg_addr
      : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_read_rom_v_weights_rom_map_1_rg_data_out
      : STD_LOGIC_VECTOR (7 DOWNTO 0);

  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_read_rom_k_weights_rom_map_1_rg_addr
      : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_read_rom_k_weights_rom_map_1_rg_data_out
      : STD_LOGIC_VECTOR (7 DOWNTO 0);

  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_read_rom_q_weights_rom_map_1_rg_addr
      : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_read_rom_q_weights_rom_map_1_rg_data_out
      : STD_LOGIC_VECTOR (7 DOWNTO 0);

  SIGNAL CACHE_UPDATE_LOOP_3_qif_read_rom_k_cache_rom_map_1_rg_addr : STD_LOGIC_VECTOR
      (10 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_qif_read_rom_k_cache_rom_map_1_rg_data_out : STD_LOGIC_VECTOR
      (39 DOWNTO 0);

  SIGNAL CACHE_UPDATE_LOOP_3_1_qif_read_rom_v_cache_rom_map_1_rg_addr : STD_LOGIC_VECTOR
      (10 DOWNTO 0);
  SIGNAL CACHE_UPDATE_LOOP_3_1_qif_read_rom_v_cache_rom_map_1_rg_data_out : STD_LOGIC_VECTOR
      (39 DOWNTO 0);

  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_read_rom_o_weights_rom_map_1_rg_addr
      : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_read_rom_o_weights_rom_map_1_rg_data_out
      : STD_LOGIC_VECTOR (7 DOWNTO 0);

  COMPONENT dut_core_strm_in_rsci
    PORT(
      strm_in_rsc_dat : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
      strm_in_rsc_vld : IN STD_LOGIC;
      strm_in_rsc_rdy : OUT STD_LOGIC;
      strm_in_rsci_oswt : IN STD_LOGIC;
      strm_in_rsci_wen_comp : OUT STD_LOGIC;
      strm_in_rsci_idat_mxwt : OUT STD_LOGIC_VECTOR (29 DOWNTO 0)
    );
  END COMPONENT;
  SIGNAL dut_core_strm_in_rsci_inst_strm_in_rsc_dat : STD_LOGIC_VECTOR (31 DOWNTO
      0);
  SIGNAL dut_core_strm_in_rsci_inst_strm_in_rsci_idat_mxwt : STD_LOGIC_VECTOR (29
      DOWNTO 0);

  COMPONENT dut_core_strm_out_rsci
    PORT(
      strm_out_rsc_dat : OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
      strm_out_rsc_vld : OUT STD_LOGIC;
      strm_out_rsc_rdy : IN STD_LOGIC;
      strm_out_rsci_oswt : IN STD_LOGIC;
      strm_out_rsci_wen_comp : OUT STD_LOGIC;
      strm_out_rsci_idat : IN STD_LOGIC_VECTOR (31 DOWNTO 0)
    );
  END COMPONENT;
  SIGNAL dut_core_strm_out_rsci_inst_strm_out_rsc_dat : STD_LOGIC_VECTOR (31 DOWNTO
      0);
  SIGNAL dut_core_strm_out_rsci_inst_strm_out_rsci_idat : STD_LOGIC_VECTOR (31 DOWNTO
      0);

  COMPONENT dut_core_staller
    PORT(
      en : IN STD_LOGIC;
      core_wen1 : OUT STD_LOGIC;
      strm_in_rsci_wen_comp : IN STD_LOGIC;
      strm_out_rsci_wen_comp : IN STD_LOGIC;
      input_rsc_clken_d_1 : OUT STD_LOGIC
    );
  END COMPONENT;
  COMPONENT dut_core_wait_dp
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      rms_norm_384_div_cmp_z : IN STD_LOGIC_VECTOR (71 DOWNTO 0);
      core_wen1 : IN STD_LOGIC;
      rms_norm_384_div_cmp_z_oreg : OUT STD_LOGIC_VECTOR (39 DOWNTO 0)
    );
  END COMPONENT;
  SIGNAL dut_core_wait_dp_inst_rms_norm_384_div_cmp_z : STD_LOGIC_VECTOR (71 DOWNTO
      0);
  SIGNAL dut_core_wait_dp_inst_rms_norm_384_div_cmp_z_oreg : STD_LOGIC_VECTOR (39
      DOWNTO 0);

  COMPONENT dut_core_core_fsm
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      input_rsc_clken_d_1 : IN STD_LOGIC;
      fsm_output : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      for_for_C_2_tr0 : IN STD_LOGIC;
      compute_sqrt_for_C_15_tr0 : IN STD_LOGIC;
      RMS_NORM_LOOP_2_C_5_tr0 : IN STD_LOGIC;
      QUANTIZE_ACTIVATION_LOOP_5_C_5_tr0 : IN STD_LOGIC;
      QUANTIZE_ACTIVATION_LOOP_4_C_0_tr0 : IN STD_LOGIC;
      QUANTIZE_ACTIVATION_LOOP_3_C_0_tr0 : IN STD_LOGIC;
      attention_5_1_384_384_8_48_q_proj_re_vinit_C_1_tr0 : IN STD_LOGIC;
      LINEAR_FORWARD_NO_MUL_LOOP_5_C_5_tr0 : IN STD_LOGIC;
      LINEAR_FORWARD_NO_MUL_LOOP_4_C_1_tr0 : IN STD_LOGIC;
      LINEAR_FORWARD_NO_MUL_LOOP_3_C_0_tr0 : IN STD_LOGIC;
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_65_tr0 : IN STD_LOGIC;
      RESHAPE_2D_TO_3D_LOOP_3_C_2_tr0 : IN STD_LOGIC;
      RESHAPE_2D_TO_3D_LOOP_2_C_0_tr0 : IN STD_LOGIC;
      RESHAPE_2D_TO_3D_LOOP_3_2_C_3_tr0 : IN STD_LOGIC;
      RESHAPE_2D_TO_3D_LOOP_2_2_C_0_tr0 : IN STD_LOGIC;
      APPLY_ROTARY_POS_EMB_LOOP_6_C_4_tr0 : IN STD_LOGIC;
      APPLY_ROTARY_POS_EMB_LOOP_4_C_0_tr0 : IN STD_LOGIC;
      CACHE_UPDATE_LOOP_3_C_2_tr0 : IN STD_LOGIC;
      CACHE_UPDATE_LOOP_2_C_0_tr0 : IN STD_LOGIC;
      CACHE_UPDATE_LOOP_1_C_0_tr0 : IN STD_LOGIC;
      TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_2_tr0 : IN STD_LOGIC;
      TRANSPOSE_LAST_TWO_DIMS_LOOP_2_C_0_tr0 : IN STD_LOGIC;
      TRANSPOSE_LAST_TWO_DIMS_LOOP_1_C_0_tr0 : IN STD_LOGIC;
      GEMM_3D_FLOAT_LOOP_4_C_4_tr0 : IN STD_LOGIC;
      GEMM_3D_FLOAT_LOOP_3_C_2_tr0 : IN STD_LOGIC;
      GEMM_3D_FLOAT_LOOP_1_C_0_tr0 : IN STD_LOGIC;
      SF_LOOP_3_C_12_tr0 : IN STD_LOGIC;
      SF_LOOP_1_C_0_tr0 : IN STD_LOGIC;
      SOFTMAX_LOOP_3_C_1_tr0 : IN STD_LOGIC;
      SOFTMAX_LOOP_4_C_4_tr0 : IN STD_LOGIC;
      SOFTMAX_LOOP_5_C_21_tr0 : IN STD_LOGIC;
      SOFTMAX_LOOP_1_C_2_tr0 : IN STD_LOGIC;
      GEMM_3D_FLOAT_LOOP_4_1_C_4_tr0 : IN STD_LOGIC;
      GEMM_3D_FLOAT_LOOP_3_1_C_2_tr0 : IN STD_LOGIC;
      GEMM_3D_FLOAT_LOOP_1_1_C_0_tr0 : IN STD_LOGIC;
      ATTN_2D_LOOP_3_C_2_tr0 : IN STD_LOGIC;
      ATTN_2D_LOOP_2_C_0_tr0 : IN STD_LOGIC;
      RMS_NORM_LOOP_1_2_C_3_tr0 : IN STD_LOGIC;
      compute_sqrt_1_for_C_15_tr0 : IN STD_LOGIC;
      RMS_NORM_LOOP_2_2_C_5_tr0 : IN STD_LOGIC;
      QUANTIZE_ACTIVATION_LOOP_5_1_C_5_tr0 : IN STD_LOGIC;
      QUANTIZE_ACTIVATION_LOOP_4_1_C_0_tr0 : IN STD_LOGIC;
      QUANTIZE_ACTIVATION_LOOP_3_1_C_0_tr0 : IN STD_LOGIC;
      output_vinit_C_1_tr0 : IN STD_LOGIC;
      LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_3_tr0 : IN STD_LOGIC;
      LINEAR_FORWARD_NO_MUL_LOOP_4_3_C_1_tr0 : IN STD_LOGIC;
      LINEAR_FORWARD_NO_MUL_LOOP_3_3_C_0_tr0 : IN STD_LOGIC;
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_33_tr0 : IN STD_LOGIC;
      for_1_for_C_2_tr0 : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL dut_core_core_fsm_inst_fsm_output : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL dut_core_core_fsm_inst_compute_sqrt_for_C_15_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_RMS_NORM_LOOP_2_C_5_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_5_C_5_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_4_C_0_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_3_C_0_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_LINEAR_FORWARD_NO_MUL_LOOP_4_C_1_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_RESHAPE_2D_TO_3D_LOOP_3_2_C_3_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_APPLY_ROTARY_POS_EMB_LOOP_6_C_4_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_APPLY_ROTARY_POS_EMB_LOOP_4_C_0_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_CACHE_UPDATE_LOOP_2_C_0_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_2_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_TRANSPOSE_LAST_TWO_DIMS_LOOP_2_C_0_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_TRANSPOSE_LAST_TWO_DIMS_LOOP_1_C_0_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_4_C_4_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_3_C_2_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_1_C_0_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_SF_LOOP_3_C_12_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_SF_LOOP_1_C_0_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_SOFTMAX_LOOP_3_C_1_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_SOFTMAX_LOOP_4_C_4_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_SOFTMAX_LOOP_5_C_21_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_SOFTMAX_LOOP_1_C_2_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_4_1_C_4_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_3_1_C_2_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_1_1_C_0_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_ATTN_2D_LOOP_3_C_2_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_ATTN_2D_LOOP_2_C_0_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_RMS_NORM_LOOP_1_2_C_3_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_compute_sqrt_1_for_C_15_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_RMS_NORM_LOOP_2_2_C_5_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_5_1_C_5_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_4_1_C_0_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_3_1_C_0_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_3_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_LINEAR_FORWARD_NO_MUL_LOOP_4_3_C_1_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_LINEAR_FORWARD_NO_MUL_LOOP_3_3_C_0_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_33_tr0 : STD_LOGIC;
  SIGNAL dut_core_core_fsm_inst_for_1_for_C_2_tr0 : STD_LOGIC;

  FUNCTION CONV_SL_1_1(input_val:BOOLEAN)
  RETURN STD_LOGIC IS
  BEGIN
    IF input_val THEN RETURN '1';ELSE RETURN '0';END IF;
  END;

  FUNCTION MUX1HOT_s_1_11_2(input_10 : STD_LOGIC;
  input_9 : STD_LOGIC;
  input_8 : STD_LOGIC;
  input_7 : STD_LOGIC;
  input_6 : STD_LOGIC;
  input_5 : STD_LOGIC;
  input_4 : STD_LOGIC;
  input_3 : STD_LOGIC;
  input_2 : STD_LOGIC;
  input_1 : STD_LOGIC;
  input_0 : STD_LOGIC;
  sel : STD_LOGIC_VECTOR(10 DOWNTO 0))
  RETURN STD_LOGIC IS
    VARIABLE result : STD_LOGIC;
    VARIABLE tmp : STD_LOGIC;

    BEGIN
      tmp := sel(0);
      result := input_0 and tmp;
      tmp := sel(1);
      result := result or ( input_1 and tmp);
      tmp := sel(2);
      result := result or ( input_2 and tmp);
      tmp := sel(3);
      result := result or ( input_3 and tmp);
      tmp := sel(4);
      result := result or ( input_4 and tmp);
      tmp := sel(5);
      result := result or ( input_5 and tmp);
      tmp := sel(6);
      result := result or ( input_6 and tmp);
      tmp := sel(7);
      result := result or ( input_7 and tmp);
      tmp := sel(8);
      result := result or ( input_8 and tmp);
      tmp := sel(9);
      result := result or ( input_9 and tmp);
      tmp := sel(10);
      result := result or ( input_10 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_s_1_3_2(input_2 : STD_LOGIC;
  input_1 : STD_LOGIC;
  input_0 : STD_LOGIC;
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC IS
    VARIABLE result : STD_LOGIC;
    VARIABLE tmp : STD_LOGIC;

    BEGIN
      tmp := sel(0);
      result := input_0 and tmp;
      tmp := sel(1);
      result := result or ( input_1 and tmp);
      tmp := sel(2);
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_s_1_4_2(input_3 : STD_LOGIC;
  input_2 : STD_LOGIC;
  input_1 : STD_LOGIC;
  input_0 : STD_LOGIC;
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC IS
    VARIABLE result : STD_LOGIC;
    VARIABLE tmp : STD_LOGIC;

    BEGIN
      tmp := sel(0);
      result := input_0 and tmp;
      tmp := sel(1);
      result := result or ( input_1 and tmp);
      tmp := sel(2);
      result := result or ( input_2 and tmp);
      tmp := sel(3);
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_s_1_5_2(input_4 : STD_LOGIC;
  input_3 : STD_LOGIC;
  input_2 : STD_LOGIC;
  input_1 : STD_LOGIC;
  input_0 : STD_LOGIC;
  sel : STD_LOGIC_VECTOR(4 DOWNTO 0))
  RETURN STD_LOGIC IS
    VARIABLE result : STD_LOGIC;
    VARIABLE tmp : STD_LOGIC;

    BEGIN
      tmp := sel(0);
      result := input_0 and tmp;
      tmp := sel(1);
      result := result or ( input_1 and tmp);
      tmp := sel(2);
      result := result or ( input_2 and tmp);
      tmp := sel(3);
      result := result or ( input_3 and tmp);
      tmp := sel(4);
      result := result or ( input_4 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_s_1_9_2(input_8 : STD_LOGIC;
  input_7 : STD_LOGIC;
  input_6 : STD_LOGIC;
  input_5 : STD_LOGIC;
  input_4 : STD_LOGIC;
  input_3 : STD_LOGIC;
  input_2 : STD_LOGIC;
  input_1 : STD_LOGIC;
  input_0 : STD_LOGIC;
  sel : STD_LOGIC_VECTOR(8 DOWNTO 0))
  RETURN STD_LOGIC IS
    VARIABLE result : STD_LOGIC;
    VARIABLE tmp : STD_LOGIC;

    BEGIN
      tmp := sel(0);
      result := input_0 and tmp;
      tmp := sel(1);
      result := result or ( input_1 and tmp);
      tmp := sel(2);
      result := result or ( input_2 and tmp);
      tmp := sel(3);
      result := result or ( input_3 and tmp);
      tmp := sel(4);
      result := result or ( input_4 and tmp);
      tmp := sel(5);
      result := result or ( input_5 and tmp);
      tmp := sel(6);
      result := result or ( input_6 and tmp);
      tmp := sel(7);
      result := result or ( input_7 and tmp);
      tmp := sel(8);
      result := result or ( input_8 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_16_3_2(input_2 : STD_LOGIC_VECTOR(15 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(15 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(15 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(15 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(15 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_20_5_2(input_4 : STD_LOGIC_VECTOR(19 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(19 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(19 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(19 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(19 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(4 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(19 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(19 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_21_4_2(input_3 : STD_LOGIC_VECTOR(20 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(20 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(20 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(20 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(20 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(20 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_22_4_2(input_3 : STD_LOGIC_VECTOR(21 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(21 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(21 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(21 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(21 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(21 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_22_5_2(input_4 : STD_LOGIC_VECTOR(21 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(21 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(21 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(21 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(21 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(4 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(21 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(21 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_24_3_2(input_2 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(23 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(23 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_29_4_2(input_3 : STD_LOGIC_VECTOR(28 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(28 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(28 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(28 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(28 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(28 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_2_3_2(input_2 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(1 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(1 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_2_4_2(input_3 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(1 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(1 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_2_5_2(input_4 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(4 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(1 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(1 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_2_8_2(input_7 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_6 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_5 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(7 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(1 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(1 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
      tmp := (OTHERS=>sel( 6));
      result := result or ( input_6 and tmp);
      tmp := (OTHERS=>sel( 7));
      result := result or ( input_7 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_30_8_2(input_7 : STD_LOGIC_VECTOR(29 DOWNTO 0);
  input_6 : STD_LOGIC_VECTOR(29 DOWNTO 0);
  input_5 : STD_LOGIC_VECTOR(29 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(29 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(29 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(29 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(29 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(29 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(7 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(29 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(29 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
      tmp := (OTHERS=>sel( 6));
      result := result or ( input_6 and tmp);
      tmp := (OTHERS=>sel( 7));
      result := result or ( input_7 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_36_4_2(input_3 : STD_LOGIC_VECTOR(35 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(35 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(35 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(35 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(35 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(35 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_38_4_2(input_3 : STD_LOGIC_VECTOR(37 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(37 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(37 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(37 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(37 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(37 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_39_11_2(input_10 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_9 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_8 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_7 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_6 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_5 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(10 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(38 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(38 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
      tmp := (OTHERS=>sel( 6));
      result := result or ( input_6 and tmp);
      tmp := (OTHERS=>sel( 7));
      result := result or ( input_7 and tmp);
      tmp := (OTHERS=>sel( 8));
      result := result or ( input_8 and tmp);
      tmp := (OTHERS=>sel( 9));
      result := result or ( input_9 and tmp);
      tmp := (OTHERS=>sel( 10));
      result := result or ( input_10 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_39_3_2(input_2 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(38 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(38 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_39_4_2(input_3 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(38 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(38 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_39_5_2(input_4 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(4 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(38 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(38 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_3_3_2(input_2 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(2 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(2 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_3_4_2(input_3 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(2 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(2 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_3_5_2(input_4 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(4 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(2 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(2 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_3_6_2(input_5 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(5 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(2 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(2 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_3_7_2(input_6 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_5 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(6 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(2 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(2 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
      tmp := (OTHERS=>sel( 6));
      result := result or ( input_6 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_40_3_2(input_2 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(39 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(39 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_40_4_2(input_3 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(39 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(39 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_40_5_2(input_4 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(4 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(39 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(39 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_40_6_2(input_5 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(5 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(39 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(39 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_40_9_2(input_8 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_7 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_6 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_5 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(8 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(39 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(39 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
      tmp := (OTHERS=>sel( 6));
      result := result or ( input_6 and tmp);
      tmp := (OTHERS=>sel( 7));
      result := result or ( input_7 and tmp);
      tmp := (OTHERS=>sel( 8));
      result := result or ( input_8 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_4_3_2(input_2 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(3 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(3 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_4_5_2(input_4 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(4 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(3 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(3 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_5_3_2(input_2 : STD_LOGIC_VECTOR(4 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(4 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(4 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(4 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(4 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_5_5_2(input_4 : STD_LOGIC_VECTOR(4 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(4 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(4 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(4 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(4 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(4 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(4 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(4 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_7_3_2(input_2 : STD_LOGIC_VECTOR(6 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(6 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(6 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(6 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(6 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_8_3_2(input_2 : STD_LOGIC_VECTOR(7 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(7 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(7 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(7 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(7 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_8_4_2(input_3 : STD_LOGIC_VECTOR(7 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(7 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(7 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(7 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(7 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(7 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_9_3_2(input_2 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(8 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(8 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_9_4_2(input_3 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(8 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(8 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_9_5_2(input_4 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(4 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(8 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(8 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_9_6_2(input_5 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(5 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(8 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(8 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_9_7_2(input_6 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_5 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_4 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(6 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(8 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(8 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
      tmp := (OTHERS=>sel( 4));
      result := result or ( input_4 and tmp);
      tmp := (OTHERS=>sel( 5));
      result := result or ( input_5 and tmp);
      tmp := (OTHERS=>sel( 6));
      result := result or ( input_6 and tmp);
    RETURN result;
  END;

  FUNCTION MUX_s_1_2_2(input_0 : STD_LOGIC;
  input_1 : STD_LOGIC;
  sel : STD_LOGIC)
  RETURN STD_LOGIC IS
    VARIABLE result : STD_LOGIC;

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_10_2_2(input_0 : STD_LOGIC_VECTOR(9 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(9 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(9 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_16_2_2(input_0 : STD_LOGIC_VECTOR(15 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(15 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(15 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_17_2_2(input_0 : STD_LOGIC_VECTOR(16 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(16 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(16 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_20_2_2(input_0 : STD_LOGIC_VECTOR(19 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(19 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(19 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_24_2_2(input_0 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(23 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_29_2_2(input_0 : STD_LOGIC_VECTOR(28 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(28 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(28 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_2_2_2(input_0 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(1 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_2_4_2(input_0 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  input_3 : STD_LOGIC_VECTOR(1 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(1 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(1 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN "00" =>
          result := input_0;
        WHEN "01" =>
          result := input_1;
        WHEN "10" =>
          result := input_2;
        WHEN others =>
          result := input_3;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_30_2_2(input_0 : STD_LOGIC_VECTOR(29 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(29 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(29 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_31_2_2(input_0 : STD_LOGIC_VECTOR(30 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(30 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(30 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_35_2_2(input_0 : STD_LOGIC_VECTOR(34 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(34 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(34 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_37_2_2(input_0 : STD_LOGIC_VECTOR(36 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(36 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(36 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_38_2_2(input_0 : STD_LOGIC_VECTOR(37 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(37 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(37 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_39_2_2(input_0 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(38 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(38 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_3_2_2(input_0 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(2 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(2 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_40_2_2(input_0 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(39 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(39 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_4_2_2(input_0 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(3 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(3 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_52_2_2(input_0 : STD_LOGIC_VECTOR(51 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(51 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(51 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_6_2_2(input_0 : STD_LOGIC_VECTOR(5 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(5 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(5 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_7_2_2(input_0 : STD_LOGIC_VECTOR(6 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(6 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(6 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_8_2_2(input_0 : STD_LOGIC_VECTOR(7 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(7 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(7 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_9_2_2(input_0 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(8 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

BEGIN
  SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp : mgc_hls.mgc_comps.mgc_div
    GENERIC MAP(
      width_a => 56,
      width_b => 40,
      signd => 1
      )
    PORT MAP(
      a => SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a,
      b => SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b,
      z => SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_z_1
    );
  SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a <= SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a_55
      & SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a_54_16 & STD_LOGIC_VECTOR'( "0000000000000000");
  SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b <= SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b_39
      & SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b_38_0;
  SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_z <= SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_z_1;

  LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp : mgc_hls.mgc_comps.mgc_div
    GENERIC MAP(
      width_a => 72,
      width_b => 60,
      signd => 1
      )
    PORT MAP(
      a => LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_a,
      b => LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b,
      z => LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z_1
    );
  LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_a <= LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_a_71_32
      & STD_LOGIC_VECTOR'( "00000000000000000000000000000000");
  LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b <= LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_59_39
      & LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_38_0;
  LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z <= LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z_1;

  operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp : mgc_hls.mgc_comps.mgc_div
    GENERIC MAP(
      width_a => 40,
      width_b => 40,
      signd => 1
      )
    PORT MAP(
      a => operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_a,
      b => operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b,
      z => operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_1
    );
  operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_a <= STD_LOGIC_VECTOR(UNSIGNED'( "0")
      & UNSIGNED(CONV_SIGNED(SIGNED(reg_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_a_32_0_ftd
      & STD_LOGIC_VECTOR'( "000000000000000") & reg_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_a_32_0_ftd_1
      & STD_LOGIC_VECTOR'( "0000000000000000")),39)));
  operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b <= operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_39
      & operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_38_30 & operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_29_0;
  operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z <= operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_1;

  APPLY_ROTARY_POS_EMB_LOOP_6_cosval_read_rom_cos_tab_rom_map_1_rg : mgc_hls.dutmgc_rom_33_960_17_1_pkg.dutmgc_rom_33_960_17_1
    PORT MAP(
      addr => APPLY_ROTARY_POS_EMB_LOOP_6_cosval_read_rom_cos_tab_rom_map_1_rg_addr,
      data_out => APPLY_ROTARY_POS_EMB_LOOP_6_cosval_read_rom_cos_tab_rom_map_1_rg_data_out
    );
  APPLY_ROTARY_POS_EMB_LOOP_6_cosval_read_rom_cos_tab_rom_map_1_rg_addr <= APPLY_ROTARY_POS_EMB_LOOP_6_cosval_APPLY_ROTARY_POS_EMB_LOOP_6_cosval_conc_2_9_5
      & (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(4 DOWNTO 0));
  APPLY_ROTARY_POS_EMB_LOOP_6_cosval_read_rom_cos_tab_rom_map_1_itm <= APPLY_ROTARY_POS_EMB_LOOP_6_cosval_read_rom_cos_tab_rom_map_1_rg_data_out;

  RMS_NORM_LOOP_2_read_rom_ln_weight_in_rom_map_1_rg : mgc_hls.dutmgc_rom_34_384_12_1_pkg.dutmgc_rom_34_384_12_1
    PORT MAP(
      addr => RMS_NORM_LOOP_2_read_rom_ln_weight_in_rom_map_1_rg_addr,
      data_out => RMS_NORM_LOOP_2_read_rom_ln_weight_in_rom_map_1_rg_data_out
    );
  RMS_NORM_LOOP_2_read_rom_ln_weight_in_rom_map_1_rg_addr <= INIT_2D_MEM_LOOP_2_2_acc_itm;
  RMS_NORM_LOOP_2_read_rom_ln_weight_in_rom_map_1_itm <= RMS_NORM_LOOP_2_read_rom_ln_weight_in_rom_map_1_rg_data_out;

  APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_rg : mgc_hls.dutmgc_rom_35_960_17_1_pkg.dutmgc_rom_35_960_17_1
    PORT MAP(
      addr => APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_rg_addr,
      data_out => APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_rg_data_out
    );
  APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_rg_addr <= APPLY_ROTARY_POS_EMB_LOOP_6_cosval_APPLY_ROTARY_POS_EMB_LOOP_6_cosval_conc_2_9_5
      & (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(4 DOWNTO 0));
  APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_itm <= APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_rg_data_out;

  RMS_NORM_LOOP_2_2_read_rom_ln_weight_rom_map_1_rg : mgc_hls.dutmgc_rom_36_384_13_1_pkg.dutmgc_rom_36_384_13_1
    PORT MAP(
      addr => RMS_NORM_LOOP_2_2_read_rom_ln_weight_rom_map_1_rg_addr,
      data_out => RMS_NORM_LOOP_2_2_read_rom_ln_weight_rom_map_1_rg_data_out
    );
  RMS_NORM_LOOP_2_2_read_rom_ln_weight_rom_map_1_rg_addr <= INIT_2D_MEM_LOOP_2_2_acc_itm;
  RMS_NORM_LOOP_2_2_read_rom_ln_weight_rom_map_1_itm <= RMS_NORM_LOOP_2_2_read_rom_ln_weight_rom_map_1_rg_data_out;

  LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_read_rom_v_weights_rom_map_1_rg : mgc_hls.dutmgc_rom_37_36864_8_1_pkg.dutmgc_rom_37_36864_8_1
    PORT MAP(
      addr => LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_read_rom_v_weights_rom_map_1_rg_addr,
      data_out => LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_read_rom_v_weights_rom_map_1_rg_data_out
    );
  LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_read_rom_v_weights_rom_map_1_rg_addr
      <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd
      & reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1 & APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp_4)
      + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_17_itm_8_0(8 DOWNTO 7)),
      2), 7), 7), 9) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd
      & reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1 & APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp_4
      & '0'), 8), 9), 9)) & (SF_LOOP_3_acc_17_itm_8_0(6 DOWNTO 0));
  LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_read_rom_v_weights_rom_map_1_itm <= LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_read_rom_v_weights_rom_map_1_rg_data_out;

  LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_read_rom_k_weights_rom_map_1_rg : mgc_hls.dutmgc_rom_38_36864_8_1_pkg.dutmgc_rom_38_36864_8_1
    PORT MAP(
      addr => LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_read_rom_k_weights_rom_map_1_rg_addr,
      data_out => LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_read_rom_k_weights_rom_map_1_rg_data_out
    );
  LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_read_rom_k_weights_rom_map_1_rg_addr
      <= LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_conc_2_15_7
      & (INIT_2D_MEM_LOOP_2_2_acc_itm(6 DOWNTO 0));
  LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_read_rom_k_weights_rom_map_1_itm <= LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_read_rom_k_weights_rom_map_1_rg_data_out;

  LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_read_rom_q_weights_rom_map_1_rg : mgc_hls.dutmgc_rom_39_36864_8_1_pkg.dutmgc_rom_39_36864_8_1
    PORT MAP(
      addr => LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_read_rom_q_weights_rom_map_1_rg_addr,
      data_out => LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_read_rom_q_weights_rom_map_1_rg_data_out
    );
  LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_read_rom_q_weights_rom_map_1_rg_addr <=
      STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0
      & LINEAR_FORWARD_NO_MUL_LOOP_4_ki_4_0_sva_3_0) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1(8
      DOWNTO 7)), 2), 7), 7), 9) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0
      & LINEAR_FORWARD_NO_MUL_LOOP_4_ki_4_0_sva_3_0 & '0'), 8), 9), 9)) & (reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1(6
      DOWNTO 0));
  LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_read_rom_q_weights_rom_map_1_itm <= LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_read_rom_q_weights_rom_map_1_rg_data_out;

  CACHE_UPDATE_LOOP_3_qif_read_rom_k_cache_rom_map_1_rg : mgc_hls.dutmgc_rom_40_1920_40_1_pkg.dutmgc_rom_40_1920_40_1
    PORT MAP(
      addr => CACHE_UPDATE_LOOP_3_qif_read_rom_k_cache_rom_map_1_rg_addr,
      data_out => CACHE_UPDATE_LOOP_3_qif_read_rom_k_cache_rom_map_1_rg_data_out
    );
  CACHE_UPDATE_LOOP_3_qif_read_rom_k_cache_rom_map_1_rg_addr <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED(CACHE_UPDATE_LOOP_3_qif_acc_5_sdt_1(5
      DOWNTO 4)), 2), 3) + UNSIGNED(APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0), 3))
      & (CACHE_UPDATE_LOOP_3_qif_acc_5_sdt_1(3 DOWNTO 0)) & (reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1(0))
      & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_0 & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1;
  CACHE_UPDATE_LOOP_3_qif_read_rom_k_cache_rom_map_1_itm <= CACHE_UPDATE_LOOP_3_qif_read_rom_k_cache_rom_map_1_rg_data_out;

  CACHE_UPDATE_LOOP_3_1_qif_read_rom_v_cache_rom_map_1_rg : mgc_hls.dutmgc_rom_41_1920_40_1_pkg.dutmgc_rom_41_1920_40_1
    PORT MAP(
      addr => CACHE_UPDATE_LOOP_3_1_qif_read_rom_v_cache_rom_map_1_rg_addr,
      data_out => CACHE_UPDATE_LOOP_3_1_qif_read_rom_v_cache_rom_map_1_rg_data_out
    );
  CACHE_UPDATE_LOOP_3_1_qif_read_rom_v_cache_rom_map_1_rg_addr <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED(CACHE_UPDATE_LOOP_3_1_qif_acc_5_sdt_1(5
      DOWNTO 4)), 2), 3) + UNSIGNED(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0), 3)) &
      (CACHE_UPDATE_LOOP_3_1_qif_acc_5_sdt_1(3 DOWNTO 0)) & (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(3
      DOWNTO 0));
  CACHE_UPDATE_LOOP_3_1_qif_read_rom_v_cache_rom_map_1_itm <= CACHE_UPDATE_LOOP_3_1_qif_read_rom_v_cache_rom_map_1_rg_data_out;

  LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_read_rom_o_weights_rom_map_1_rg : mgc_hls.dutmgc_rom_42_36864_8_1_pkg.dutmgc_rom_42_36864_8_1
    PORT MAP(
      addr => LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_read_rom_o_weights_rom_map_1_rg_addr,
      data_out => LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_read_rom_o_weights_rom_map_1_rg_data_out
    );
  LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_read_rom_o_weights_rom_map_1_rg_addr
      <= LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_conc_2_15_7
      & (INIT_2D_MEM_LOOP_2_2_acc_itm(6 DOWNTO 0));
  LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_read_rom_o_weights_rom_map_1_itm <= LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_read_rom_o_weights_rom_map_1_rg_data_out;

  dut_core_strm_in_rsci_inst : dut_core_strm_in_rsci
    PORT MAP(
      strm_in_rsc_dat => dut_core_strm_in_rsci_inst_strm_in_rsc_dat,
      strm_in_rsc_vld => strm_in_rsc_vld,
      strm_in_rsc_rdy => strm_in_rsc_rdy,
      strm_in_rsci_oswt => reg_strm_in_rsci_iswt0_cse,
      strm_in_rsci_wen_comp => strm_in_rsci_wen_comp,
      strm_in_rsci_idat_mxwt => dut_core_strm_in_rsci_inst_strm_in_rsci_idat_mxwt
    );
  dut_core_strm_in_rsci_inst_strm_in_rsc_dat <= strm_in_rsc_dat;
  strm_in_rsci_idat_mxwt <= dut_core_strm_in_rsci_inst_strm_in_rsci_idat_mxwt;

  dut_core_strm_out_rsci_inst : dut_core_strm_out_rsci
    PORT MAP(
      strm_out_rsc_dat => dut_core_strm_out_rsci_inst_strm_out_rsc_dat,
      strm_out_rsc_vld => strm_out_rsc_vld,
      strm_out_rsc_rdy => strm_out_rsc_rdy,
      strm_out_rsci_oswt => reg_strm_out_rsci_iswt0_cse,
      strm_out_rsci_wen_comp => strm_out_rsci_wen_comp,
      strm_out_rsci_idat => dut_core_strm_out_rsci_inst_strm_out_rsci_idat
    );
  strm_out_rsc_dat <= dut_core_strm_out_rsci_inst_strm_out_rsc_dat;
  dut_core_strm_out_rsci_inst_strm_out_rsci_idat <= strm_out_rsci_idat_31_2 & STD_LOGIC_VECTOR'(
      "00");

  dut_core_staller_inst : dut_core_staller
    PORT MAP(
      en => en,
      core_wen1 => core_wen1,
      strm_in_rsci_wen_comp => strm_in_rsci_wen_comp,
      strm_out_rsci_wen_comp => strm_out_rsci_wen_comp,
      input_rsc_clken_d_1 => input_rsc_clken_d_1
    );
  dut_core_wait_dp_inst : dut_core_wait_dp
    PORT MAP(
      clk => clk,
      rst => rst,
      rms_norm_384_div_cmp_z => dut_core_wait_dp_inst_rms_norm_384_div_cmp_z,
      core_wen1 => core_wen1,
      rms_norm_384_div_cmp_z_oreg => dut_core_wait_dp_inst_rms_norm_384_div_cmp_z_oreg
    );
  dut_core_wait_dp_inst_rms_norm_384_div_cmp_z <= rms_norm_384_div_cmp_z;
  rms_norm_384_div_cmp_z_oreg <= dut_core_wait_dp_inst_rms_norm_384_div_cmp_z_oreg;

  dut_core_core_fsm_inst : dut_core_core_fsm
    PORT MAP(
      clk => clk,
      rst => rst,
      input_rsc_clken_d_1 => input_rsc_clken_d_1,
      fsm_output => dut_core_core_fsm_inst_fsm_output,
      for_for_C_2_tr0 => CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm,
      compute_sqrt_for_C_15_tr0 => dut_core_core_fsm_inst_compute_sqrt_for_C_15_tr0,
      RMS_NORM_LOOP_2_C_5_tr0 => dut_core_core_fsm_inst_RMS_NORM_LOOP_2_C_5_tr0,
      QUANTIZE_ACTIVATION_LOOP_5_C_5_tr0 => dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_5_C_5_tr0,
      QUANTIZE_ACTIVATION_LOOP_4_C_0_tr0 => dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_4_C_0_tr0,
      QUANTIZE_ACTIVATION_LOOP_3_C_0_tr0 => dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_3_C_0_tr0,
      attention_5_1_384_384_8_48_q_proj_re_vinit_C_1_tr0 => CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm,
      LINEAR_FORWARD_NO_MUL_LOOP_5_C_5_tr0 => CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm,
      LINEAR_FORWARD_NO_MUL_LOOP_4_C_1_tr0 => dut_core_core_fsm_inst_LINEAR_FORWARD_NO_MUL_LOOP_4_C_1_tr0,
      LINEAR_FORWARD_NO_MUL_LOOP_3_C_0_tr0 => LINEAR_FORWARD_NO_MUL_LOOP_2_LINEAR_FORWARD_NO_MUL_LOOP_2_nor_tmp,
      LINEAR_FORWARD_NO_MUL_LOOP_2_C_65_tr0 => CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm,
      RESHAPE_2D_TO_3D_LOOP_3_C_2_tr0 => CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm,
      RESHAPE_2D_TO_3D_LOOP_2_C_0_tr0 => CACHE_UPDATE_LOOP_1_and_cse,
      RESHAPE_2D_TO_3D_LOOP_3_2_C_3_tr0 => dut_core_core_fsm_inst_RESHAPE_2D_TO_3D_LOOP_3_2_C_3_tr0,
      RESHAPE_2D_TO_3D_LOOP_2_2_C_0_tr0 => CACHE_UPDATE_LOOP_1_and_cse,
      APPLY_ROTARY_POS_EMB_LOOP_6_C_4_tr0 => dut_core_core_fsm_inst_APPLY_ROTARY_POS_EMB_LOOP_6_C_4_tr0,
      APPLY_ROTARY_POS_EMB_LOOP_4_C_0_tr0 => dut_core_core_fsm_inst_APPLY_ROTARY_POS_EMB_LOOP_4_C_0_tr0,
      CACHE_UPDATE_LOOP_3_C_2_tr0 => CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm,
      CACHE_UPDATE_LOOP_2_C_0_tr0 => dut_core_core_fsm_inst_CACHE_UPDATE_LOOP_2_C_0_tr0,
      CACHE_UPDATE_LOOP_1_C_0_tr0 => CACHE_UPDATE_LOOP_1_and_cse,
      TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_2_tr0 => dut_core_core_fsm_inst_TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_2_tr0,
      TRANSPOSE_LAST_TWO_DIMS_LOOP_2_C_0_tr0 => dut_core_core_fsm_inst_TRANSPOSE_LAST_TWO_DIMS_LOOP_2_C_0_tr0,
      TRANSPOSE_LAST_TWO_DIMS_LOOP_1_C_0_tr0 => dut_core_core_fsm_inst_TRANSPOSE_LAST_TWO_DIMS_LOOP_1_C_0_tr0,
      GEMM_3D_FLOAT_LOOP_4_C_4_tr0 => dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_4_C_4_tr0,
      GEMM_3D_FLOAT_LOOP_3_C_2_tr0 => dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_3_C_2_tr0,
      GEMM_3D_FLOAT_LOOP_1_C_0_tr0 => dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_1_C_0_tr0,
      SF_LOOP_3_C_12_tr0 => dut_core_core_fsm_inst_SF_LOOP_3_C_12_tr0,
      SF_LOOP_1_C_0_tr0 => dut_core_core_fsm_inst_SF_LOOP_1_C_0_tr0,
      SOFTMAX_LOOP_3_C_1_tr0 => dut_core_core_fsm_inst_SOFTMAX_LOOP_3_C_1_tr0,
      SOFTMAX_LOOP_4_C_4_tr0 => dut_core_core_fsm_inst_SOFTMAX_LOOP_4_C_4_tr0,
      SOFTMAX_LOOP_5_C_21_tr0 => dut_core_core_fsm_inst_SOFTMAX_LOOP_5_C_21_tr0,
      SOFTMAX_LOOP_1_C_2_tr0 => dut_core_core_fsm_inst_SOFTMAX_LOOP_1_C_2_tr0,
      GEMM_3D_FLOAT_LOOP_4_1_C_4_tr0 => dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_4_1_C_4_tr0,
      GEMM_3D_FLOAT_LOOP_3_1_C_2_tr0 => dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_3_1_C_2_tr0,
      GEMM_3D_FLOAT_LOOP_1_1_C_0_tr0 => dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_1_1_C_0_tr0,
      ATTN_2D_LOOP_3_C_2_tr0 => dut_core_core_fsm_inst_ATTN_2D_LOOP_3_C_2_tr0,
      ATTN_2D_LOOP_2_C_0_tr0 => dut_core_core_fsm_inst_ATTN_2D_LOOP_2_C_0_tr0,
      RMS_NORM_LOOP_1_2_C_3_tr0 => dut_core_core_fsm_inst_RMS_NORM_LOOP_1_2_C_3_tr0,
      compute_sqrt_1_for_C_15_tr0 => dut_core_core_fsm_inst_compute_sqrt_1_for_C_15_tr0,
      RMS_NORM_LOOP_2_2_C_5_tr0 => dut_core_core_fsm_inst_RMS_NORM_LOOP_2_2_C_5_tr0,
      QUANTIZE_ACTIVATION_LOOP_5_1_C_5_tr0 => dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_5_1_C_5_tr0,
      QUANTIZE_ACTIVATION_LOOP_4_1_C_0_tr0 => dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_4_1_C_0_tr0,
      QUANTIZE_ACTIVATION_LOOP_3_1_C_0_tr0 => dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_3_1_C_0_tr0,
      output_vinit_C_1_tr0 => INIT_2D_MEM_LOOP_2_3_INIT_2D_MEM_LOOP_2_3_nor_itm,
      LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_3_tr0 => dut_core_core_fsm_inst_LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_3_tr0,
      LINEAR_FORWARD_NO_MUL_LOOP_4_3_C_1_tr0 => dut_core_core_fsm_inst_LINEAR_FORWARD_NO_MUL_LOOP_4_3_C_1_tr0,
      LINEAR_FORWARD_NO_MUL_LOOP_3_3_C_0_tr0 => dut_core_core_fsm_inst_LINEAR_FORWARD_NO_MUL_LOOP_3_3_C_0_tr0,
      LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_33_tr0 => dut_core_core_fsm_inst_LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_33_tr0,
      for_1_for_C_2_tr0 => dut_core_core_fsm_inst_for_1_for_C_2_tr0
    );
  fsm_output <= dut_core_core_fsm_inst_fsm_output;
  dut_core_core_fsm_inst_compute_sqrt_for_C_15_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_RMS_NORM_LOOP_2_C_5_tr0 <= exit_QUANTIZE_ACTIVATION_LOOP_2_sva_dfm
      AND (NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm);
  dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_5_C_5_tr0 <= APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0(2);
  dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_4_C_0_tr0 <= z_out_16_4_0(4);
  dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_3_C_0_tr0 <= NOT z_out_29_2;
  dut_core_core_fsm_inst_LINEAR_FORWARD_NO_MUL_LOOP_4_C_1_tr0 <= (LINEAR_FORWARD_NO_MUL_LOOP_4_ki_4_0_sva_2(4))
      AND (z_out_16_4_0(4)) AND (LINEAR_FORWARD_NO_MUL_LOOP_4_2_ki_4_0_sva_2(4));
  dut_core_core_fsm_inst_RESHAPE_2D_TO_3D_LOOP_3_2_C_3_tr0 <= CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm
      AND exit_APPLY_ROTARY_POS_EMB_LOOP_3_sva_dfm;
  dut_core_core_fsm_inst_APPLY_ROTARY_POS_EMB_LOOP_6_C_4_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_APPLY_ROTARY_POS_EMB_LOOP_4_C_0_tr0 <= APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2(3);
  dut_core_core_fsm_inst_CACHE_UPDATE_LOOP_2_C_0_tr0 <= NOT(z_out_29_2 OR z_out_28_2);
  dut_core_core_fsm_inst_TRANSPOSE_LAST_TWO_DIMS_LOOP_3_C_2_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_TRANSPOSE_LAST_TWO_DIMS_LOOP_2_C_0_tr0 <= NOT z_out_28_2;
  dut_core_core_fsm_inst_TRANSPOSE_LAST_TWO_DIMS_LOOP_1_C_0_tr0 <= APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2(3);
  dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_4_C_4_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_3_C_2_tr0 <= NOT z_out_28_2;
  dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_1_C_0_tr0 <= GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2(3);
  dut_core_core_fsm_inst_SF_LOOP_3_C_12_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_SF_LOOP_1_C_0_tr0 <= GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2(3);
  dut_core_core_fsm_inst_SOFTMAX_LOOP_3_C_1_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_SOFTMAX_LOOP_4_C_4_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_SOFTMAX_LOOP_5_C_21_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_SOFTMAX_LOOP_1_C_2_tr0 <= APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2(3);
  dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_4_1_C_4_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_3_1_C_2_tr0 <= NOT z_out_28_2;
  dut_core_core_fsm_inst_GEMM_3D_FLOAT_LOOP_1_1_C_0_tr0 <= GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2(3);
  dut_core_core_fsm_inst_ATTN_2D_LOOP_3_C_2_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_ATTN_2D_LOOP_2_C_0_tr0 <= APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2(3);
  dut_core_core_fsm_inst_RMS_NORM_LOOP_1_2_C_3_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_compute_sqrt_1_for_C_15_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_RMS_NORM_LOOP_2_2_C_5_tr0 <= (NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm)
      AND exit_QUANTIZE_ACTIVATION_LOOP_2_1_sva_dfm;
  dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_5_1_C_5_tr0 <= APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0(2);
  dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_4_1_C_0_tr0 <= z_out_16_4_0(4);
  dut_core_core_fsm_inst_QUANTIZE_ACTIVATION_LOOP_3_1_C_0_tr0 <= NOT z_out_29_2;
  dut_core_core_fsm_inst_LINEAR_FORWARD_NO_MUL_LOOP_5_3_C_3_tr0 <= APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0(2);
  dut_core_core_fsm_inst_LINEAR_FORWARD_NO_MUL_LOOP_4_3_C_1_tr0 <= z_out_16_4_0(4);
  dut_core_core_fsm_inst_LINEAR_FORWARD_NO_MUL_LOOP_3_3_C_0_tr0 <= NOT z_out_29_2;
  dut_core_core_fsm_inst_LINEAR_FORWARD_NO_MUL_LOOP_2_3_C_33_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;
  dut_core_core_fsm_inst_for_1_for_C_2_tr0 <= NOT APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm;

  input_rsci_clken_d <= input_rsc_clken_d_1;
  or_1194_nl <= CONV_SL_1_1(fsm_output(5 DOWNTO 1)/=STD_LOGIC_VECTOR'("00000"));
  nand_148_nl <= NOT(CONV_SL_1_1(fsm_output(5 DOWNTO 1)=STD_LOGIC_VECTOR'("11111")));
  mux_285_nl <= MUX_s_1_2_2(or_1194_nl, nand_148_nl, fsm_output(0));
  QUANTIZE_ACTIVATION_LOOP_1_max_val_and_cse <= input_rsc_clken_d_1 AND (NOT(mux_285_nl
      AND and_dcpl_110));
  mux_289_nl <= MUX_s_1_2_2(and_dcpl_109, or_tmp_233, fsm_output(8));
  mux_290_nl <= MUX_s_1_2_2(mux_289_nl, and_tmp_6, or_1158_cse);
  mux_288_nl <= MUX_s_1_2_2(and_tmp_6, (fsm_output(8)), and_dcpl_117);
  mux_291_nl <= MUX_s_1_2_2(mux_290_nl, mux_288_nl, or_392_cse);
  and_659_nl <= or_392_cse AND CONV_SL_1_1(fsm_output(5 DOWNTO 4)=STD_LOGIC_VECTOR'("11"));
  mux_287_nl <= MUX_s_1_2_2(and_tmp_6, (fsm_output(8)), and_659_nl);
  mux_292_nl <= MUX_s_1_2_2(mux_291_nl, mux_287_nl, fsm_output(1));
  and_660_nl <= or_1205_cse AND CONV_SL_1_1(fsm_output(5 DOWNTO 4)=STD_LOGIC_VECTOR'("11"));
  mux_286_nl <= MUX_s_1_2_2(and_tmp_6, (fsm_output(8)), and_660_nl);
  mux_293_nl <= MUX_s_1_2_2(mux_292_nl, mux_286_nl, fsm_output(0));
  QUANTIZE_ACTIVATION_LOOP_1_1_max_val_and_cse <= input_rsc_clken_d_1 AND mux_293_nl;
  nand_93_cse <= NOT((fsm_output(4)) AND (fsm_output(8)));
  or_350_cse <= (NOT (fsm_output(8))) OR (fsm_output(0));
  and_134_nl <= (fsm_output(4)) AND or_350_cse;
  mux_307_nl <= MUX_s_1_2_2(or_170_cse, and_134_nl, fsm_output(1));
  mux_308_nl <= MUX_s_1_2_2((NOT (fsm_output(4))), mux_307_nl, fsm_output(3));
  and_133_nl <= (fsm_output(4)) AND or_170_cse;
  mux_305_nl <= MUX_s_1_2_2((fsm_output(4)), and_133_nl, fsm_output(1));
  mux_306_nl <= MUX_s_1_2_2((NOT mux_305_nl), (fsm_output(4)), fsm_output(3));
  mux_309_nl <= MUX_s_1_2_2(mux_308_nl, mux_306_nl, fsm_output(2));
  or_348_nl <= (fsm_output(2)) OR (NOT (fsm_output(3))) OR (fsm_output(1)) OR (fsm_output(4))
      OR (NOT((fsm_output(8)) AND (fsm_output(0))));
  mux_310_nl <= MUX_s_1_2_2(mux_309_nl, or_348_nl, fsm_output(7));
  or_351_ssc <= mux_310_nl OR CONV_SL_1_1(fsm_output(6 DOWNTO 5)/=STD_LOGIC_VECTOR'("00"));
  or_353_cse <= CONV_SL_1_1(fsm_output(2 DOWNTO 1)/=STD_LOGIC_VECTOR'("00"));
  and_692_cse <= CONV_SL_1_1(fsm_output(1 DOWNTO 0)=STD_LOGIC_VECTOR'("11"));
  or_354_cse <= and_692_cse OR (fsm_output(2));
  or_39_nl <= (fsm_output(4)) OR (fsm_output(8));
  mux_30_nl <= MUX_s_1_2_2((NOT (fsm_output(4))), or_39_nl, fsm_output(3));
  mux_329_nl <= MUX_s_1_2_2(mux_30_nl, mux_tmp_28, fsm_output(2));
  mux_330_nl <= MUX_s_1_2_2(mux_tmp_302, mux_329_nl, fsm_output(1));
  mux_294_nl <= MUX_s_1_2_2(nand_93_cse, (fsm_output(4)), fsm_output(3));
  mux_296_nl <= MUX_s_1_2_2(mux_tmp_28, mux_294_nl, fsm_output(2));
  mux_327_nl <= MUX_s_1_2_2(mux_tmp_302, mux_296_nl, fsm_output(1));
  mux_331_nl <= MUX_s_1_2_2(mux_330_nl, mux_327_nl, fsm_output(0));
  and_160_ssc <= (NOT mux_331_nl) AND and_dcpl_109 AND (NOT (fsm_output(5)));
  nor_365_cse <= NOT((NOT (fsm_output(0))) OR (NOT (fsm_output(1))) OR (fsm_output(8)));
  or_360_cse <= (fsm_output(4)) OR (NOT (fsm_output(7)));
  mux_322_nl <= MUX_s_1_2_2(or_231_cse, or_890_cse, fsm_output(8));
  nand_18_nl <= NOT((fsm_output(1)) AND (NOT mux_322_nl));
  mux_320_nl <= MUX_s_1_2_2(or_890_cse, or_360_cse, fsm_output(8));
  mux_321_nl <= MUX_s_1_2_2(mux_320_nl, or_231_cse, fsm_output(1));
  mux_323_nl <= MUX_s_1_2_2(nand_18_nl, mux_321_nl, fsm_output(0));
  mux_324_nl <= MUX_s_1_2_2(or_890_cse, mux_323_nl, fsm_output(3));
  or_359_nl <= (fsm_output(8)) OR (fsm_output(4)) OR (fsm_output(7));
  mux_325_nl <= MUX_s_1_2_2(mux_324_nl, or_359_nl, fsm_output(6));
  or_358_nl <= nor_365_cse OR (NOT (fsm_output(4))) OR (fsm_output(7));
  mux_318_nl <= MUX_s_1_2_2(or_358_nl, or_231_cse, fsm_output(3));
  or_355_nl <= ((fsm_output(3)) AND (fsm_output(1))) OR (fsm_output(8)) OR (fsm_output(4))
      OR (fsm_output(7));
  mux_319_nl <= MUX_s_1_2_2(mux_318_nl, or_355_nl, fsm_output(6));
  mux_326_nl <= MUX_s_1_2_2(mux_325_nl, mux_319_nl, fsm_output(2));
  nor_seb <= NOT(mux_326_nl OR (fsm_output(5)));
  and_694_cse <= CONV_SL_1_1(fsm_output(2 DOWNTO 1)=STD_LOGIC_VECTOR'("11"));
  nor_366_cse <= NOT((NOT (fsm_output(1))) OR (fsm_output(8)));
  or_373_cse <= (fsm_output(1)) OR (NOT (fsm_output(8)));
  or_381_cse <= (fsm_output(0)) OR (fsm_output(1)) OR (NOT (fsm_output(8)));
  or_1205_cse <= CONV_SL_1_1(fsm_output(3 DOWNTO 1)/=STD_LOGIC_VECTOR'("000"));
  nand_167_nl <= NOT((NOT(or_1205_cse AND (fsm_output(4)))) AND (fsm_output(5)));
  mux_345_nl <= MUX_s_1_2_2(nand_167_nl, mux_tmp_344, fsm_output(0));
  and_181_ssc <= (NOT mux_345_nl) AND and_dcpl_169;
  mux_352_nl <= MUX_s_1_2_2(mux_tmp_238, mux_tmp_348, fsm_output(1));
  mux_353_nl <= MUX_s_1_2_2(mux_352_nl, mux_tmp_350, fsm_output(0));
  and_182_ssc <= (NOT mux_353_nl) AND and_dcpl_121;
  or_392_cse <= CONV_SL_1_1(fsm_output(3 DOWNTO 2)/=STD_LOGIC_VECTOR'("00"));
  and_696_cse <= CONV_SL_1_1(fsm_output(4 DOWNTO 3)=STD_LOGIC_VECTOR'("11"));
  mux_361_nl <= MUX_s_1_2_2(or_216_cse, or_tmp_283, and_696_cse);
  mux_360_nl <= MUX_s_1_2_2(or_1027_cse, mux_tmp_356, fsm_output(3));
  mux_362_nl <= MUX_s_1_2_2(mux_361_nl, mux_360_nl, fsm_output(2));
  mux_363_nl <= MUX_s_1_2_2(mux_362_nl, mux_tmp_358, fsm_output(1));
  mux_357_nl <= MUX_s_1_2_2(or_1027_cse, mux_tmp_356, or_392_cse);
  mux_359_nl <= MUX_s_1_2_2(mux_tmp_358, mux_357_nl, fsm_output(1));
  mux_364_nl <= MUX_s_1_2_2(mux_363_nl, mux_359_nl, fsm_output(0));
  and_187_ssc <= (NOT mux_364_nl) AND and_dcpl_88;
  or_398_nl <= and_694_cse OR CONV_SL_1_1(fsm_output(4 DOWNTO 3)/=STD_LOGIC_VECTOR'("00"));
  mux_365_nl <= MUX_s_1_2_2(or_tmp_260, or_310_cse, or_398_nl);
  mux_366_nl <= MUX_s_1_2_2(mux_365_nl, mux_tmp_340, fsm_output(0));
  and_188_ssc <= (NOT mux_366_nl) AND (fsm_output(8));
  nand_169_nl <= NOT((NOT(or_392_cse AND (fsm_output(4)))) AND (fsm_output(5)));
  mux_367_nl <= MUX_s_1_2_2(nand_169_nl, mux_tmp_238, fsm_output(1));
  mux_368_nl <= MUX_s_1_2_2(mux_367_nl, mux_tmp_344, fsm_output(0));
  and_189_ssc <= (NOT mux_368_nl) AND and_dcpl_169;
  mux_369_nl <= MUX_s_1_2_2(mux_tmp_238, mux_tmp_259, fsm_output(1));
  mux_370_nl <= MUX_s_1_2_2(mux_369_nl, mux_tmp_350, fsm_output(0));
  and_190_ssc <= (NOT mux_370_nl) AND and_dcpl_121;
  mux_374_nl <= MUX_s_1_2_2(or_tmp_26, mux_tmp_373, or_353_cse);
  and_193_itm <= (NOT mux_374_nl) AND and_dcpl_110;
  rms_norm_384_div_cmp_b <= reg_rms_norm_384_div_cmp_b_ftd_59_38 & reg_rms_norm_384_div_cmp_b_ftd_37_0
      & reg_rms_norm_384_div_cmp_b_ftd_1;
  rms_norm_384_div_cmp_a <= reg_rms_norm_384_div_cmp_a_ftd & STD_LOGIC_VECTOR'( "00000000000000000000000000000000");
  APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_rmff_4_2 <= MUX_v_3_2_2(reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_ftd,
      (APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva(4 DOWNTO 2)), and_dcpl_197);
  APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_rmff_1 <= MUX_s_1_2_2(reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd,
      (APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva(1)), and_dcpl_197);
  APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_rmff_0 <= MUX_s_1_2_2(reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd_1,
      (APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva(0)), and_dcpl_197);
  APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_1_rmff <= MUX_s_1_2_2(reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1,
      (reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1(0)), and_dcpl_197);
  and_225_ssc <= and_dcpl_204 AND and_dcpl_175;
  nor_376_nl <= NOT((fsm_output(6)) OR (fsm_output(7)) OR (NOT((fsm_output(3)) AND
      (fsm_output(1)) AND (fsm_output(5)))));
  nor_377_nl <= NOT((NOT (fsm_output(6))) OR (fsm_output(7)) OR (fsm_output(3)) OR
      (fsm_output(1)) OR (fsm_output(5)));
  mux_383_nl <= MUX_s_1_2_2(nor_376_nl, nor_377_nl, fsm_output(4));
  and_701_nl <= (fsm_output(2)) AND mux_383_nl;
  or_423_nl <= (fsm_output(3)) OR (fsm_output(1)) OR (fsm_output(5));
  or_422_nl <= (NOT (fsm_output(3))) OR (fsm_output(1)) OR (fsm_output(5));
  mux_382_nl <= MUX_s_1_2_2(or_423_nl, or_422_nl, fsm_output(7));
  nor_378_nl <= NOT((fsm_output(2)) OR (fsm_output(4)) OR (fsm_output(6)) OR mux_382_nl);
  mux_384_nl <= MUX_s_1_2_2(and_701_nl, nor_378_nl, fsm_output(0));
  ATTN_2D_LOOP_3_and_seb <= mux_384_nl AND (fsm_output(8));
  and_72_cse <= CONV_SL_1_1(GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva=STD_LOGIC_VECTOR'("101"));
  and_74_cse <= CONV_SL_1_1(reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd=STD_LOGIC_VECTOR'("10"))
      AND reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1;
  RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_4_rmff_3_1 <= MUX1HOT_v_3_3_2((z_out_10(4 DOWNTO
      2)), reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_ftd, (z_out_12(3 DOWNTO 1)), STD_LOGIC_VECTOR'(
      and_dcpl_284 & and_dcpl_196 & and_dcpl_190));
  RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_4_rmff_0 <= MUX1HOT_s_1_3_2((z_out_10(1)), reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd,
      (z_out_12(0)), STD_LOGIC_VECTOR'( and_dcpl_284 & and_dcpl_196 & and_dcpl_190));
  RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_9_rmff <= MUX1HOT_s_1_3_2((z_out_10(0)), reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd_1,
      (z_out_31(0)), STD_LOGIC_VECTOR'( and_dcpl_284 & and_dcpl_196 & and_dcpl_190));
  RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_7_rmff <= MUX1HOT_s_1_3_2((reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1(0)),
      reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1, (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(3)),
      STD_LOGIC_VECTOR'( and_dcpl_284 & and_dcpl_196 & and_dcpl_190));
  or_1233_ssc <= and_dcpl_196 OR and_dcpl_284;
  RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_8_rmff_2 <= MUX_s_1_2_2((APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(2)),
      reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_0, or_1233_ssc);
  RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_8_rmff_1_0 <= MUX_v_2_2_2((APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(1
      DOWNTO 0)), reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1, or_1233_ssc);
  and_309_ssc <= and_dcpl_299 AND and_dcpl_248;
  or_482_nl <= (NOT (fsm_output(2))) OR (NOT (fsm_output(3))) OR (NOT (fsm_output(4)))
      OR (fsm_output(8)) OR (fsm_output(7)) OR (NOT (fsm_output(6)));
  mux_405_nl <= MUX_s_1_2_2(or_482_nl, or_tmp_355, fsm_output(1));
  or_479_nl <= (fsm_output(1)) OR (fsm_output(2)) OR (NOT (fsm_output(3))) OR (fsm_output(4))
      OR (NOT (fsm_output(8))) OR (NOT (fsm_output(7))) OR (fsm_output(6));
  mux_406_nl <= MUX_s_1_2_2(mux_405_nl, or_479_nl, fsm_output(0));
  INIT_2D_MEM_LOOP_2_2_nor_seb <= NOT(mux_406_nl OR (fsm_output(5)));
  and_317_ssc <= and_dcpl_299 AND and_dcpl_120;
  or_492_nl <= (NOT (fsm_output(3))) OR (fsm_output(4)) OR (NOT (fsm_output(8)))
      OR (NOT (fsm_output(7))) OR (fsm_output(6));
  or_491_nl <= (NOT (fsm_output(3))) OR (NOT (fsm_output(4))) OR (fsm_output(8))
      OR (fsm_output(7)) OR (NOT (fsm_output(6)));
  mux_410_nl <= MUX_s_1_2_2(or_492_nl, or_491_nl, fsm_output(2));
  mux_411_nl <= MUX_s_1_2_2(mux_410_nl, or_tmp_355, fsm_output(1));
  INIT_2D_MEM_LOOP_2_1_nor_seb <= NOT(mux_411_nl OR (fsm_output(5)) OR (NOT (fsm_output(0))));
  and_321_ssc <= and_dcpl_189 AND and_dcpl_248;
  nor_390_nl <= NOT((NOT (fsm_output(5))) OR (fsm_output(0)) OR (NOT (fsm_output(1)))
      OR (fsm_output(8)));
  nor_391_nl <= NOT((fsm_output(5)) OR (NOT (fsm_output(0))) OR (fsm_output(1)) OR
      (NOT (fsm_output(8))));
  mux_414_nl <= MUX_s_1_2_2(nor_390_nl, nor_391_nl, fsm_output(3));
  and_nl <= (NOT((fsm_output(4)) OR (fsm_output(6)) OR (NOT (fsm_output(7))))) AND
      mux_414_nl;
  nor_574_nl <= NOT((NOT (fsm_output(4))) OR (NOT (fsm_output(6))) OR (fsm_output(7))
      OR (NOT (fsm_output(3))) OR (fsm_output(5)) OR (fsm_output(0)) OR (NOT (fsm_output(1)))
      OR (fsm_output(8)));
  mux_415_seb <= MUX_s_1_2_2(and_nl, nor_574_nl, fsm_output(2));
  nor_392_cse <= NOT(CONV_SL_1_1(fsm_output(4 DOWNTO 3)/=STD_LOGIC_VECTOR'("00")));
  or_518_cse <= (fsm_output(3)) OR (fsm_output(5)) OR (NOT (fsm_output(7))) OR (fsm_output(6));
  and_342_ssc <= and_dcpl_131 AND and_dcpl_282;
  mux_429_nl <= MUX_s_1_2_2(or_310_cse, or_tmp_260, fsm_output(3));
  mux_430_nl <= MUX_s_1_2_2(mux_429_nl, or_518_cse, fsm_output(2));
  INIT_2D_MEM_LOOP_2_3_nor_seb <= NOT(mux_430_nl OR or_tmp_5 OR or_1213_cse);
  and_350_ssc <= and_dcpl_139 AND and_dcpl_116;
  nor_397_nl <= NOT((NOT (fsm_output(1))) OR (fsm_output(2)) OR (NOT (fsm_output(4)))
      OR (NOT (fsm_output(5))) OR (fsm_output(8)) OR (fsm_output(7)) OR (fsm_output(6)));
  nor_398_nl <= NOT((fsm_output(2)) OR (fsm_output(4)) OR (fsm_output(5)) OR (NOT
      (fsm_output(8))) OR (NOT (fsm_output(7))) OR (fsm_output(6)));
  nor_399_nl <= NOT((NOT (fsm_output(2))) OR (fsm_output(4)) OR (fsm_output(5)) OR
      (fsm_output(8)) OR (fsm_output(7)) OR (NOT (fsm_output(6))));
  mux_433_nl <= MUX_s_1_2_2(nor_398_nl, nor_399_nl, fsm_output(1));
  mux_434_nl <= MUX_s_1_2_2(nor_397_nl, mux_433_nl, fsm_output(0));
  for_for_and_seb <= mux_434_nl AND (fsm_output(3));
  nor_405_cse <= NOT((fsm_output(5)) OR (fsm_output(0)) OR (fsm_output(8)) OR (fsm_output(2)));
  nor_413_cse <= NOT((fsm_output(0)) OR (NOT CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm)
      OR (fsm_output(1)));
  nor_411_cse <= NOT((fsm_output(0)) OR (fsm_output(1)) OR (fsm_output(8)));
  nor_414_cse <= NOT(nor_413_cse OR (fsm_output(8)));
  or_21_cse <= (fsm_output(8)) OR (NOT (fsm_output(4)));
  or_15_cse <= (fsm_output(5)) OR (fsm_output(8));
  or_608_nl <= CONV_SL_1_1(fsm_output(4 DOWNTO 2)/=STD_LOGIC_VECTOR'("000")) OR (NOT(CONV_SL_1_1(fsm_output(1
      DOWNTO 0)/=STD_LOGIC_VECTOR'("10")))) OR (fsm_output(8));
  mux_507_nl <= MUX_s_1_2_2((fsm_output(8)), or_608_nl, fsm_output(5));
  or_609_cse <= (fsm_output(6)) OR mux_507_nl;
  nand_200_cse <= NOT((fsm_output(1)) AND (fsm_output(8)));
  nand_199_cse <= NOT(CONV_SL_1_1(fsm_output(1 DOWNTO 0)=STD_LOGIC_VECTOR'("11")));
  nor_126_cse <= NOT((fsm_output(2)) OR (NOT (fsm_output(4))));
  or_612_cse <= and_692_cse OR (fsm_output(8));
  or_603_cse <= CONV_SL_1_1(fsm_output(1 DOWNTO 0)/=STD_LOGIC_VECTOR'("00"));
  or_604_cse <= CONV_SL_1_1(fsm_output(2 DOWNTO 1)/=STD_LOGIC_VECTOR'("01"));
  nand_195_cse <= NOT((fsm_output(8)) AND (fsm_output(2)));
  or_601_cse <= (NOT (fsm_output(8))) OR (fsm_output(2)) OR and_692_cse;
  or_589_cse <= (fsm_output(8)) OR (fsm_output(2));
  nor_429_nl <= NOT(CONV_SL_1_1(fsm_output(2 DOWNTO 1)/=STD_LOGIC_VECTOR'("00"))
      OR not_tmp_327);
  nor_430_nl <= NOT((NOT (fsm_output(1))) OR (NOT (fsm_output(2))) OR (fsm_output(3))
      OR (fsm_output(8)));
  mux_517_nl <= MUX_s_1_2_2(nor_429_nl, nor_430_nl, fsm_output(0));
  and_382_itm <= mux_517_nl AND and_dcpl_109 AND and_dcpl_152;
  operator_40_24_true_AC_TRN_AC_WRAP_1_and_itm <= (NOT and_dcpl_350) AND and_dcpl_374;
  operator_40_24_true_AC_TRN_AC_WRAP_1_and_2_ssc <= input_rsc_clken_d_1 AND (NOT
      and_dcpl_350);
  LINEAR_FORWARD_NO_MUL_LOOP_5_1_or_cse <= (CONV_SL_1_1(CACHE_UPDATE_LOOP_3_k_5_0_sva_1_1_0=STD_LOGIC_VECTOR'("01")))
      OR LINEAR_FORWARD_NO_MUL_LOOP_5_1_LINEAR_FORWARD_NO_MUL_LOOP_5_1_and_3_cse;
  operator_40_24_true_AC_TRN_AC_WRAP_acc_66_itm <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(23),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(24)),
      1), 1), 2) + UNSIGNED'( "01"), 2));
  operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_nand_cse
      <= NOT((z_out_9_1_0(1)) AND (NOT (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39))));
  or_657_cse <= (NOT (fsm_output(6))) OR (fsm_output(8));
  or_1328_cse <= (NOT (fsm_output(6))) OR (NOT (fsm_output(3))) OR (fsm_output(7))
      OR (fsm_output(5));
  or_1330_cse <= CONV_SL_1_1(fsm_output(7 DOWNTO 3)/=STD_LOGIC_VECTOR'("10000"));
  or_702_cse <= (fsm_output(4)) OR (NOT (fsm_output(7))) OR (fsm_output(8));
  RMS_NORM_LOOP_2_2_and_ssc <= input_rsc_clken_d_1 AND (RMS_NORM_LOOP_2_2_dfr_sva_mx0c0
      OR and_dcpl_154 OR RMS_NORM_LOOP_2_2_dfr_sva_mx0c2 OR RMS_NORM_LOOP_2_2_dfr_sva_mx0c3
      OR and_dcpl_409 OR and_dcpl_156);
  or_745_cse <= CONV_SL_1_1(fsm_output(8 DOWNTO 7)/=STD_LOGIC_VECTOR'("01"));
  or_734_cse <= (NOT (fsm_output(1))) OR (NOT (fsm_output(0))) OR (fsm_output(8));
  or_733_cse <= CONV_SL_1_1(fsm_output(8 DOWNTO 7)/=STD_LOGIC_VECTOR'("00"));
  and_433_itm <= and_dcpl_118 AND and_dcpl_239;
  and_434_itm <= and_dcpl_139 AND and_dcpl_167;
  nor_583_nl <= NOT(CONV_SL_1_1(fsm_output(5 DOWNTO 3)/=STD_LOGIC_VECTOR'("011")));
  nor_584_nl <= NOT((fsm_output(3)) OR (NOT mux_tmp_237));
  mux_632_nl <= MUX_s_1_2_2(nor_583_nl, nor_584_nl, fsm_output(0));
  and_439_itm <= mux_632_nl AND (fsm_output(6)) AND and_dcpl_29 AND and_694_cse;
  and_440_itm <= and_dcpl_170 AND and_dcpl_128;
  nor_461_nl <= NOT(CONV_SL_1_1(fsm_output(6 DOWNTO 1)/=STD_LOGIC_VECTOR'("000001")));
  nor_462_nl <= NOT(CONV_SL_1_1(fsm_output(6 DOWNTO 2)/=STD_LOGIC_VECTOR'("10101")));
  nor_463_nl <= NOT(CONV_SL_1_1(fsm_output(6 DOWNTO 2)/=STD_LOGIC_VECTOR'("01011")));
  mux_633_nl <= MUX_s_1_2_2(nor_462_nl, nor_463_nl, fsm_output(1));
  mux_634_nl <= MUX_s_1_2_2(nor_461_nl, mux_633_nl, fsm_output(0));
  and_441_itm <= mux_634_nl AND and_dcpl_88;
  and_738_nl <= (fsm_output(3)) AND (fsm_output(2)) AND (fsm_output(8));
  or_744_nl <= (fsm_output(3)) OR (fsm_output(2)) OR (fsm_output(8));
  mux_628_nl <= MUX_s_1_2_2(and_738_nl, or_744_nl, fsm_output(7));
  mux_629_nl <= MUX_s_1_2_2(or_745_cse, mux_628_nl, fsm_output(5));
  nand_207_nl <= NOT((fsm_output(3)) AND ((fsm_output(2)) OR ((fsm_output(1)) AND
      or_350_cse)));
  mux_626_nl <= MUX_s_1_2_2(nand_207_nl, (fsm_output(8)), fsm_output(7));
  mux_623_nl <= MUX_s_1_2_2(or_350_cse, or_170_cse, fsm_output(1));
  mux_624_nl <= MUX_s_1_2_2((NOT (fsm_output(8))), mux_623_nl, fsm_output(2));
  mux_625_nl <= MUX_s_1_2_2(mux_624_nl, (fsm_output(8)), fsm_output(3));
  or_742_nl <= (fsm_output(7)) OR (NOT mux_625_nl);
  mux_627_nl <= MUX_s_1_2_2(mux_626_nl, or_742_nl, fsm_output(5));
  mux_630_nl <= MUX_s_1_2_2(mux_629_nl, mux_627_nl, fsm_output(4));
  or_739_nl <= (fsm_output(0)) OR (fsm_output(8));
  mux_618_nl <= MUX_s_1_2_2(or_170_cse, or_739_nl, fsm_output(1));
  nand_34_nl <= NOT((fsm_output(2)) AND (NOT mux_618_nl));
  mux_619_nl <= MUX_s_1_2_2(or_164_cse, nand_34_nl, fsm_output(3));
  or_738_nl <= (NOT (fsm_output(3))) OR (fsm_output(8));
  mux_620_nl <= MUX_s_1_2_2((NOT mux_619_nl), or_738_nl, fsm_output(7));
  mux_621_nl <= MUX_s_1_2_2(mux_620_nl, (fsm_output(8)), fsm_output(5));
  and_739_nl <= or_1205_cse AND (fsm_output(8));
  or_735_nl <= (NOT (fsm_output(1))) OR (fsm_output(0)) OR (fsm_output(8));
  mux_614_nl <= MUX_s_1_2_2(or_735_nl, or_734_cse, fsm_output(2));
  mux_615_nl <= MUX_s_1_2_2(or_164_cse, mux_614_nl, fsm_output(3));
  mux_616_nl <= MUX_s_1_2_2(and_739_nl, mux_615_nl, fsm_output(7));
  mux_617_nl <= MUX_s_1_2_2(mux_616_nl, or_733_cse, fsm_output(5));
  mux_622_nl <= MUX_s_1_2_2(mux_621_nl, mux_617_nl, fsm_output(4));
  mux_631_nl <= MUX_s_1_2_2(mux_630_nl, mux_622_nl, fsm_output(6));
  GEMM_3D_FLOAT_LOOP_3_and_ssc <= input_rsc_clken_d_1 AND mux_631_nl;
  SF_LOOP_3_acc_17_sdt <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED((reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(35))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(35),
      1),5)) & STD_LOGIC_VECTOR'( "00") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(35),
      1),3)) & STD_LOGIC_VECTOR'( "00") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(35),
      1),2)) & '0' & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(35))), 18), 19) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((APPLY_ROTARY_POS_EMB_LOOP_6_mul_4_itm(17
      DOWNTO 3)) & '0' & (APPLY_ROTARY_POS_EMB_LOOP_6_mul_4_itm(1 DOWNTO 0))), 18),
      19), 19));
  or_791_cse <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)/=STD_LOGIC_VECTOR'("010"));
  or_1213_cse <= CONV_SL_1_1(fsm_output(1 DOWNTO 0)/=STD_LOGIC_VECTOR'("01"));
  SF_LOOP_3_acc_60_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(27),
      1), 1), 2) + CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(28),
      1), 1), 2), 2));
  SF_LOOP_3_acc_65_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(SIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_q_d(29))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(29),
      1),2)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(29),
      1),3))),9)), 9), 10) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_q_d(36))
      & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(36)) & STD_LOGIC_VECTOR'(
      "00") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(36),
      1),2)) & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(36))), 9),
      10), 10));
  SF_LOOP_3_acc_22_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_60_nl),
      2)) & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(27)) & STD_LOGIC_VECTOR'(
      "00") & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(28)) & SF_LOOP_3_acc_61_cse_mx0w4
      & SF_LOOP_3_acc_61_cse_mx0w4 & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(28))
      & SF_LOOP_3_acc_63_cse_mx0w6), 18), 20) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_64_ncse_1
      & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(29)) & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(36))
      & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(36)) & STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_65_nl),
      10)) & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(29)) & SF_LOOP_3_acc_64_ncse_1),
      18), 20), 20));
  SF_LOOP_3_acc_24_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_15_itm),
      19), 20) + CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_mul_17_itm), 19), 20),
      20));
  operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_conc_2_itm_19_0 <= MUX_v_20_2_2(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_22_nl),
      20)), STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_24_nl), 20)), and_dcpl_445);
  and_349_itm <= and_dcpl_118 AND and_dcpl_149;
  mux_694_nl <= MUX_s_1_2_2(or_dcpl_100, or_dcpl_93, fsm_output(1));
  and_461_itm <= (NOT mux_694_nl) AND nor_tmp_54 AND and_dcpl_133 AND (NOT (fsm_output(4)))
      AND (fsm_output(0));
  operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_or_3_cse <= and_dcpl_317 OR and_dcpl_298
      OR (and_dcpl_290 AND and_dcpl_188) OR (and_dcpl_164 AND and_dcpl_107);
  or_1215_cse <= CONV_SL_1_1(fsm_output(4 DOWNTO 3)/=STD_LOGIC_VECTOR'("00"));
  nor_168_cse <= NOT((fsm_output(4)) OR (NOT (fsm_output(8))));
  or_802_cse <= (((fsm_output(1)) OR (fsm_output(3)) OR (fsm_output(4))) AND (fsm_output(8)))
      OR CONV_SL_1_1(fsm_output(7 DOWNTO 6)/=STD_LOGIC_VECTOR'("10"));
  or_832_cse <= CONV_SL_1_1(fsm_output(7 DOWNTO 6)/=STD_LOGIC_VECTOR'("01"));
  mux_705_cse <= MUX_s_1_2_2((NOT (fsm_output(6))), (fsm_output(6)), fsm_output(7));
  SF_LOOP_3_acc_71_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(5),
      1), 1), 2) + CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(17),
      1), 1), 2), 2));
  SF_LOOP_3_acc_72_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(5),
      1), 1), 2) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(17),
      1), 1), 2), 2));
  SF_LOOP_3_acc_73_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(5),
      1),2)), 2), 3) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(17),
      1), 1), 3), 3));
  SF_LOOP_3_acc_74_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(5),
      1),5)), 5), 6) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(17),
      1),2)), 2), 6), 6));
  SF_LOOP_3_acc_75_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(5)) & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(5))),
      3), 4) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(17),
      1),3)), 3), 4), 4));
  SF_LOOP_3_acc_76_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(19),
      1), 1), 2) + CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(22),
      1), 1), 2), 2));
  SF_LOOP_3_acc_77_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(19),
      1), 1), 2) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(22),
      1), 1), 2), 2));
  SF_LOOP_3_acc_78_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(19),
      1),4)), 4), 5) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(22),
      1),2)), 2), 5), 5));
  SF_LOOP_3_acc_79_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_q_d(19))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(19),
      1),2))), 4), 5) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'( (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(22))
      & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(22))), 3), 5), 5));
  SF_LOOP_3_acc_26_sdt <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_71_nl),
      2)) & STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_72_nl), 2)) & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(17))
      & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(5)) & STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_73_nl),
      3)) & STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_74_nl), 6)) & STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_75_nl),
      4))), 19), 20) + CONV_SIGNED(CONV_SIGNED(SIGNED(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_76_nl),
      2)) & STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_77_nl), 2)) & '0' &
      (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(22)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_78_nl),
      5)) & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(22)) & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(19))
      & STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_79_nl), 5))), 19), 20),
      20));
  or_833_cse <= nor_168_cse OR CONV_SL_1_1(fsm_output(7 DOWNTO 6)/=STD_LOGIC_VECTOR'("01"));
  or_817_cse <= (or_1215_cse AND (fsm_output(8))) OR CONV_SL_1_1(fsm_output(7 DOWNTO
      6)/=STD_LOGIC_VECTOR'("10"));
  mux_709_nl <= MUX_s_1_2_2(or_791_cse, mux_688_cse, fsm_output(4));
  mux_710_cse <= MUX_s_1_2_2(mux_709_nl, or_832_cse, fsm_output(3));
  or_814_nl <= (fsm_output(8)) OR mux_705_cse;
  mux_706_nl <= MUX_s_1_2_2(or_814_nl, mux_688_cse, fsm_output(4));
  mux_707_nl <= MUX_s_1_2_2(mux_706_nl, or_833_cse, fsm_output(0));
  mux_708_nl <= MUX_s_1_2_2(mux_707_nl, mux_684_cse, fsm_output(3));
  mux_711_nl <= MUX_s_1_2_2(mux_710_cse, mux_708_nl, fsm_output(1));
  mux_712_nl <= MUX_s_1_2_2(or_817_cse, mux_711_nl, fsm_output(5));
  or_835_nl <= (NOT((fsm_output(0)) OR (fsm_output(4)) OR (NOT (fsm_output(8)))))
      OR CONV_SL_1_1(fsm_output(7 DOWNTO 6)/=STD_LOGIC_VECTOR'("01"));
  mux_702_nl <= MUX_s_1_2_2(or_835_nl, mux_684_cse, fsm_output(3));
  mux_696_nl <= MUX_s_1_2_2((fsm_output(7)), or_832_cse, fsm_output(8));
  mux_698_nl <= MUX_s_1_2_2(mux_688_cse, mux_696_nl, fsm_output(4));
  mux_695_nl <= MUX_s_1_2_2(or_832_cse, (fsm_output(7)), nor_168_cse);
  mux_699_nl <= MUX_s_1_2_2(mux_698_nl, mux_695_nl, fsm_output(0));
  mux_700_nl <= MUX_s_1_2_2(or_832_cse, mux_699_nl, fsm_output(3));
  mux_703_nl <= MUX_s_1_2_2(mux_702_nl, mux_700_nl, fsm_output(1));
  mux_704_nl <= MUX_s_1_2_2(or_802_cse, mux_703_nl, fsm_output(5));
  mux_713_nl <= MUX_s_1_2_2(mux_712_nl, mux_704_nl, fsm_output(2));
  SF_LOOP_3_and_ssc <= input_rsc_clken_d_1 AND ((NOT mux_713_nl) OR and_dcpl_361);
  mux_688_cse <= MUX_s_1_2_2(or_832_cse, (fsm_output(7)), fsm_output(8));
  nor_494_cse <= NOT(CONV_SL_1_1(fsm_output(1 DOWNTO 0)/=STD_LOGIC_VECTOR'("00")));
  or_848_nl <= (NOT (fsm_output(3))) OR (NOT (fsm_output(0))) OR (fsm_output(2));
  mux_730_cse <= MUX_s_1_2_2(or_tmp_705, or_848_nl, fsm_output(8));
  or_852_nl <= (fsm_output(3)) OR (NOT (fsm_output(0))) OR (fsm_output(2));
  mux_732_cse <= MUX_s_1_2_2(or_852_nl, or_tmp_705, fsm_output(8));
  nor_179_cse <= NOT((fsm_output(0)) OR (NOT (fsm_output(4))));
  or_890_cse <= (NOT (fsm_output(4))) OR (fsm_output(7));
  or_909_cse <= (fsm_output(3)) OR (NOT (fsm_output(4))) OR (fsm_output(7));
  or_913_cse <= (fsm_output(8)) OR (NOT (fsm_output(4))) OR (fsm_output(7));
  nand_219_nl <= NOT((fsm_output(3)) AND mux_tmp_167);
  mux_793_nl <= MUX_s_1_2_2(or_tmp_547, nand_219_nl, fsm_output(2));
  mux_794_nl <= MUX_s_1_2_2((NOT not_tmp_429), mux_793_nl, fsm_output(1));
  or_917_nl <= (NOT (fsm_output(2))) OR (NOT (fsm_output(3))) OR (fsm_output(4))
      OR (fsm_output(6));
  mux_792_nl <= MUX_s_1_2_2(mux_tmp_790, or_917_nl, fsm_output(1));
  mux_795_nl <= MUX_s_1_2_2(mux_794_nl, mux_792_nl, fsm_output(0));
  APPLY_ROTARY_POS_EMB_LOOP_6_k_and_3_cse <= input_rsc_clken_d_1 AND (NOT((NOT mux_795_nl)
      AND and_dcpl_398));
  and_766_cse <= CONV_SL_1_1(fsm_output(3 DOWNTO 2)=STD_LOGIC_VECTOR'("11")) AND
      mux_tmp_167;
  nor_505_cse <= NOT((fsm_output(1)) OR mux_tmp_790);
  and_768_cse <= (fsm_output(0)) AND (fsm_output(4));
  nor_510_cse <= NOT((fsm_output(4)) OR (fsm_output(7)));
  nand_224_cse <= NOT((fsm_output(7)) AND (fsm_output(2)));
  mux_857_cse <= MUX_s_1_2_2(nor_238_cse, (fsm_output(7)), fsm_output(4));
  or_1027_cse <= CONV_SL_1_1(fsm_output(6 DOWNTO 4)/=STD_LOGIC_VECTOR'("100"));
  nand_243_cse <= NOT(CONV_SL_1_1(fsm_output(6 DOWNTO 5)=STD_LOGIC_VECTOR'("11")));
  CACHE_UPDATE_LOOP_2_1_j_and_ssc <= input_rsc_clken_d_1 AND (CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c0
      OR CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c1 OR and_dcpl_284 OR CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c3
      OR and_dcpl_246 OR CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c5);
  LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_and_cse <= input_rsc_clken_d_1 AND (NOT(and_dcpl_137
      AND and_dcpl_133 AND and_696_cse AND or_353_cse));
  or_1054_cse <= CONV_SL_1_1(fsm_output(7 DOWNTO 4)/=STD_LOGIC_VECTOR'("0101"));
  APPLY_ROTARY_POS_EMB_LOOP_3_mux1h_7_itm_4_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(z_out_35(3
      DOWNTO 1)), 3), 4) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0),
      3), 4), 4));
  APPLY_ROTARY_POS_EMB_LOOP_3_and_ssc <= input_rsc_clken_d_1 AND (APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_mx0c0
      OR and_dcpl_284 OR and_dcpl_488 OR and_dcpl_361);
  APPLY_ROTARY_POS_EMB_LOOP_3_or_2_cse <= and_dcpl_488 OR and_dcpl_361;
  nor_580_seb <= NOT(or_dcpl_90 OR (NOT((fsm_output(3)) AND (fsm_output(1)))) OR
      ((fsm_output(2)) AND (NOT (fsm_output(0)))));
  CACHE_UPDATE_LOOP_3_k_and_1_cse <= input_rsc_clken_d_1 AND (NOT(and_dcpl_129 AND
      (NOT (fsm_output(3))) AND and_dcpl_253 AND and_dcpl_218 AND ((fsm_output(4))
      XOR (fsm_output(0)))));
  RESHAPE_2D_TO_3D_LOOP_3_2_and_ssc <= input_rsc_clken_d_1 AND (NOT(and_dcpl_189
      AND and_dcpl_127 AND not_tmp_240));
  LINEAR_FORWARD_NO_MUL_LOOP_2_and_cse <= input_rsc_clken_d_1 AND (NOT(or_dcpl_89
      OR or_tmp_197 OR or_392_cse OR or_dcpl_136));
  nor_566_cse <= NOT(CONV_SL_1_1(fsm_output(3 DOWNTO 2)/=STD_LOGIC_VECTOR'("00")));
  nand_258_cse <= NOT(CONV_SL_1_1(fsm_output(3 DOWNTO 2)=STD_LOGIC_VECTOR'("11")));
  SF_LOOP_3_acc_88_itm <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(SIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_q_d(19))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(19),
      1),2))),5)), 5), 6) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(SIGNED'(
      (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(18)) & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(18))),4)),
      4), 6), 6));
  nor_565_nl <= NOT((NOT (fsm_output(1))) OR (NOT (fsm_output(2))) OR (fsm_output(3))
      OR (fsm_output(4)) OR (fsm_output(6)));
  and_808_nl <= (fsm_output(3)) AND (fsm_output(4)) AND (fsm_output(6));
  mux_959_nl <= MUX_s_1_2_2((NOT or_tmp_547), and_808_nl, fsm_output(2));
  mux_960_nl <= MUX_s_1_2_2(not_tmp_429, mux_959_nl, fsm_output(1));
  mux_961_nl <= MUX_s_1_2_2(nor_565_nl, mux_960_nl, fsm_output(0));
  and_533_itm <= mux_961_nl AND and_dcpl_398;
  and_537_itm <= and_dcpl_398 AND ((fsm_output(6)) XOR (fsm_output(2))) AND and_696_cse
      AND and_692_cse;
  SF_LOOP_3_acc_87_itm <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(19),
      1),4)), 4), 5) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(18),
      1),3)), 3), 5), 5));
  or_1127_nl <= (fsm_output(2)) OR mux_tmp_171;
  mux_989_nl <= MUX_s_1_2_2(or_1127_nl, or_tmp_963, fsm_output(1));
  mux_992_nl <= MUX_s_1_2_2(mux_tmp_991, mux_989_nl, fsm_output(0));
  and_548_itm <= (NOT mux_992_nl) AND and_dcpl_527;
  or_1123_nl <= (NOT (fsm_output(3))) OR (fsm_output(5)) OR (NOT (fsm_output(6)));
  mux_986_nl <= MUX_s_1_2_2(nand_tmp_69, or_1123_nl, fsm_output(2));
  mux_987_nl <= MUX_s_1_2_2(mux_986_nl, or_tmp_955, fsm_output(1));
  mux_984_nl <= MUX_s_1_2_2(nand_tmp_69, or_tmp_953, fsm_output(2));
  mux_985_nl <= MUX_s_1_2_2(nand_tmp_70, mux_984_nl, fsm_output(1));
  mux_988_nl <= MUX_s_1_2_2(mux_987_nl, mux_985_nl, fsm_output(0));
  nor_582_itm <= NOT(mux_988_nl OR or_702_cse);
  nor_261_nl <= NOT((NOT (fsm_output(1))) OR (fsm_output(4)));
  nor_259_nl <= NOT((fsm_output(1)) OR (NOT (fsm_output(4))));
  mux_974_nl <= MUX_s_1_2_2(nor_261_nl, nor_259_nl, fsm_output(0));
  and_542_itm <= mux_974_nl AND and_dcpl_129 AND and_dcpl_218 AND and_dcpl_161;
  mux_979_nl <= MUX_s_1_2_2(nand_tmp_69, or_tmp_955, fsm_output(1));
  or_1113_nl <= (fsm_output(3)) OR mux_tmp_171;
  mux_976_nl <= MUX_s_1_2_2(or_tmp_953, or_1113_nl, CACHE_UPDATE_LOOP_1_and_cse);
  mux_977_nl <= MUX_s_1_2_2(nand_tmp_69, mux_976_nl, fsm_output(2));
  mux_978_nl <= MUX_s_1_2_2(nand_tmp_70, mux_977_nl, fsm_output(1));
  mux_980_nl <= MUX_s_1_2_2(mux_979_nl, mux_978_nl, fsm_output(0));
  and_544_itm <= (NOT mux_980_nl) AND and_dcpl_29 AND (NOT (fsm_output(4)));
  nand_259_nl <= NOT(CONV_SL_1_1(fsm_output(4 DOWNTO 2)=STD_LOGIC_VECTOR'("111")));
  mux_972_nl <= MUX_s_1_2_2(nand_259_nl, or_tmp_24, fsm_output(1));
  mux_970_nl <= MUX_s_1_2_2((fsm_output(3)), or_tmp_24, CACHE_UPDATE_LOOP_1_and_cse);
  mux_971_nl <= MUX_s_1_2_2(mux_tmp_28, (NOT mux_970_nl), fsm_output(2));
  nand_68_nl <= NOT((fsm_output(1)) AND mux_971_nl);
  mux_973_nl <= MUX_s_1_2_2(mux_972_nl, nand_68_nl, fsm_output(0));
  CACHE_UPDATE_LOOP_3_k_nand_1_itm <= NOT((NOT mux_973_nl) AND and_dcpl_518);
  or_1121_nl <= CONV_SL_1_1(fsm_output(4 DOWNTO 2)/=STD_LOGIC_VECTOR'("001"));
  mux_982_nl <= MUX_s_1_2_2(or_1121_nl, or_tmp_958, fsm_output(1));
  or_1119_nl <= CONV_SL_1_1(fsm_output(4 DOWNTO 2)/=STD_LOGIC_VECTOR'("100"));
  mux_981_nl <= MUX_s_1_2_2(or_tmp_958, or_1119_nl, fsm_output(1));
  mux_983_nl <= MUX_s_1_2_2(mux_982_nl, mux_981_nl, fsm_output(0));
  CACHE_UPDATE_LOOP_3_k_and_ssc <= input_rsc_clken_d_1 AND (NOT((NOT mux_983_nl)
      AND and_dcpl_518));
  SF_LOOP_3_and_2_cse <= input_rsc_clken_d_1 AND (NOT(or_dcpl_169 OR or_dcpl_93 OR
      nand_199_cse));
  SF_LOOP_3_and_4_ssc <= input_rsc_clken_d_1 AND (NOT(or_dcpl_169 OR or_dcpl_101));
  SF_LOOP_3_and_11_ssc <= input_rsc_clken_d_1 AND (NOT(or_dcpl_169 OR or_dcpl_116));
  SF_LOOP_3_and_12_ssc <= input_rsc_clken_d_1 AND (NOT(or_dcpl_169 OR or_dcpl_137));
  SF_LOOP_3_and_14_ssc <= input_rsc_clken_d_1 AND (NOT(or_dcpl_169 OR or_dcpl_100
      OR nand_199_cse));
  or_1158_cse <= CONV_SL_1_1(fsm_output(5 DOWNTO 4)/=STD_LOGIC_VECTOR'("00"));
  RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_mux1h_nl <= MUX1HOT_s_1_3_2((attention_abs_1_qr_sva_1(39)),
      QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_39, (attention_abs_3_qr_sva(39)),
      STD_LOGIC_VECTOR'( RMS_NORM_LOOP_2_and_4_ssc_1 & RMS_NORM_LOOP_2_and_1_ssc_1
      & RMS_NORM_LOOP_2_and_6_ssc_1));
  QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_39_mx0w2 <= RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_mux1h_nl
      AND (NOT(RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_nor_ssc_1 OR RMS_NORM_LOOP_2_and_5_ssc_1));
  QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_38_0_mx0w2 <= MUX1HOT_v_39_5_2((input_rsci_q_d(38
      DOWNTO 0)), (attention_abs_1_qr_sva_1(38 DOWNTO 0)), QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_38_0,
      (RMS_NORM_LOOP_2_slc_RMS_NORM_LOOP_2_mul_67_28_ncse_sva(38 DOWNTO 0)), (attention_abs_3_qr_sva(38
      DOWNTO 0)), STD_LOGIC_VECTOR'( RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_nor_ssc_1 &
      RMS_NORM_LOOP_2_and_4_ssc_1 & RMS_NORM_LOOP_2_and_1_ssc_1 & RMS_NORM_LOOP_2_and_5_ssc_1
      & RMS_NORM_LOOP_2_and_6_ssc_1));
  RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_mux1h_nl <= MUX1HOT_s_1_3_2((attention_abs_5_qr_sva_1(39)),
      QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_39, (attention_abs_7_qr_sva(39)),
      STD_LOGIC_VECTOR'( RMS_NORM_LOOP_2_2_and_4_ssc_1 & RMS_NORM_LOOP_2_2_and_1_ssc_1
      & RMS_NORM_LOOP_2_2_and_6_ssc_1));
  QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_39_mx0w2 <= RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_mux1h_nl
      AND (NOT(RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_nor_ssc_1 OR RMS_NORM_LOOP_2_2_and_5_ssc_1));
  QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_38_0_mx0w2 <= MUX1HOT_v_39_5_2((attention_5_1_384_384_8_48_attn_output_2D_rsci_q_d(38
      DOWNTO 0)), (attention_abs_5_qr_sva_1(38 DOWNTO 0)), QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_38_0,
      (RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_slc_71_32_1_ncse_sva(38 DOWNTO 0)), (attention_abs_7_qr_sva(38
      DOWNTO 0)), STD_LOGIC_VECTOR'( RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_nor_ssc_1
      & RMS_NORM_LOOP_2_2_and_4_ssc_1 & RMS_NORM_LOOP_2_2_and_1_ssc_1 & RMS_NORM_LOOP_2_2_and_5_ssc_1
      & RMS_NORM_LOOP_2_2_and_6_ssc_1));
  compute_sqrt_1_for_acc_1_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(RMS_NORM_LOOP_2_2_dfr_sva_9
      & RMS_NORM_LOOP_2_2_dfr_sva_8_0 & compute_sqrt_1_guess_sva_29_0), 40), 41)
      + CONV_SIGNED(CONV_SIGNED(SIGNED(RMS_NORM_LOOP_2_mul_1_itm(39 DOWNTO 0)), 40),
      41), 41));
  compute_sqrt_1_for_acc_1_itm_40_1_1 <= compute_sqrt_1_for_acc_1_nl(40 DOWNTO 1);
  nand_184_cse <= NOT(CONV_SL_1_1(RMS_NORM_LOOP_2_2_dfr_sva_8_0=STD_LOGIC_VECTOR'("111111111"))
      AND RMS_NORM_LOOP_2_2_dfr_sva_9);
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_acc_22_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0),
      3), 4) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(reg_CACHE_UPDATE_LOOP_3_k_5_0_1_ftd
      & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1), 3), 4), 4));
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_acc_15_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(reg_CACHE_UPDATE_LOOP_3_k_5_0_1_ftd
      & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1 & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_0
      & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd),
      2), 6), 6));
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_acc_17_sdt_mx0w5 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(TRANSPOSE_LAST_TWO_DIMS_LOOP_3_acc_22_nl),
      4)) & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_0 & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1
      & '0'), 8), 9) + CONV_UNSIGNED(UNSIGNED(TRANSPOSE_LAST_TWO_DIMS_LOOP_3_acc_15_nl),
      9), 9));
  LINEAR_FORWARD_NO_MUL_LOOP_5_1_LINEAR_FORWARD_NO_MUL_LOOP_5_1_and_3_cse <= CONV_SL_1_1(CACHE_UPDATE_LOOP_3_k_5_0_sva_1_1_0=STD_LOGIC_VECTOR'("10"));
  LINEAR_FORWARD_NO_MUL_LOOP_2_LINEAR_FORWARD_NO_MUL_LOOP_2_nor_tmp <= NOT(z_out_30_2
      OR z_out_28_2 OR z_out_29_2);
  LINEAR_FORWARD_NO_MUL_LOOP_5_LINEAR_FORWARD_NO_MUL_LOOP_5_and_1_tmp <= CONV_SL_1_1(LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_slc_LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_conc_1_1_1_0_svs=STD_LOGIC_VECTOR'("10"));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_3_psp_sva_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED(z_out_8(1
      DOWNTO 0)), 2), 3) + CONV_UNSIGNED(CONV_SIGNED(SIGNED(z_out_17(5 DOWNTO 4)),
      2), 3) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (z_out_17(3)), 1), 1),
      3), 3));
  attention_abs_qif_acc_pmx_lpi_1_dfm_mx0w0 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(NOT
      (rms_norm_384_val_acc_psp_sva_1(30 DOWNTO 0))) + UNSIGNED'( "0000000000000000000000000000001"),
      31));
  attention_abs_qif_acc_pmx_lpi_1_dfm_mx1_30_1 <= MUX_v_30_2_2((rms_norm_384_val_acc_psp_sva_1(30
      DOWNTO 1)), (attention_abs_qif_acc_pmx_lpi_1_dfm_mx0w0(30 DOWNTO 1)), rms_norm_384_val_acc_psp_sva_1(31));
  rms_norm_384_val_acc_psp_sva_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36),
      1),2))) + CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_52_itm),
      31), 32) + CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_51_itm),
      30), 32), 32));
  compute_sqrt_for_acc_1_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(RMS_NORM_LOOP_2_2_dfr_sva_9
      & RMS_NORM_LOOP_2_2_dfr_sva_8_0 & compute_sqrt_guess_sva_29_0), 40), 41) +
      CONV_SIGNED(CONV_SIGNED(SIGNED(RMS_NORM_LOOP_2_mul_1_itm(39 DOWNTO 0)), 40),
      41), 41));
  compute_sqrt_for_acc_1_itm_40_1_1 <= compute_sqrt_for_acc_1_nl(40 DOWNTO 1);
  attention_max_attn_fixed_t_attention_max_attn_fixed_t_and_mut_mx0w2_39 <= QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_dfm_1_39
      AND attention_max_attn_fixed_t_acc_itm_40_1;
  attention_max_attn_fixed_t_attention_max_attn_fixed_t_and_mut_mx0w2_38_0 <= MUX_v_39_2_2(STD_LOGIC_VECTOR'("000000000000000000000000000000000000000"),
      QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_dfm_1_38_0, attention_max_attn_fixed_t_acc_itm_40_1);
  attention_max_attn_fixed_t_1_conc_psp_mx0w11_39 <= QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_dfm_1_39
      AND attention_max_attn_fixed_t_1_acc_itm_40_1;
  attention_max_attn_fixed_t_1_conc_psp_mx0w11_38_0 <= MUX_v_39_2_2(STD_LOGIC_VECTOR'("000000000000000000000000000000000000000"),
      QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_dfm_1_38_0, attention_max_attn_fixed_t_1_acc_itm_40_1);
  exit_QUANTIZE_ACTIVATION_LOOP_2_1_sva_dfm_mx0w0 <= (NOT z_out_29_2) AND nand_184_cse;
  attention_abs_2_mux_2 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(NOT
      (RMS_NORM_LOOP_2_slc_RMS_NORM_LOOP_2_mul_67_28_ncse_sva(38 DOWNTO 0))), 39),
      40) + SIGNED'( "0000000000000000000000000000000000000001"), 40));
  attention_abs_1_qr_sva_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(NOT
      (input_rsci_q_d(38 DOWNTO 0))), 39), 40) + SIGNED'( "0000000000000000000000000000000000000001"),
      40));
  RMS_NORM_LOOP_2_and_4_ssc_1 <= (input_rsci_q_d(39)) AND (NOT CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm);
  RMS_NORM_LOOP_2_and_1_ssc_1 <= (NOT QUANTIZE_ACTIVATION_LOOP_2_slc_40_1_svs) AND
      CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm;
  RMS_NORM_LOOP_2_and_6_ssc_1 <= (RMS_NORM_LOOP_2_slc_RMS_NORM_LOOP_2_mul_67_28_ncse_sva(39))
      AND RMS_NORM_LOOP_2_and_2_m1c_1;
  RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_nor_ssc_1 <= NOT((input_rsci_q_d(39)) OR CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm);
  RMS_NORM_LOOP_2_and_5_ssc_1 <= (NOT (RMS_NORM_LOOP_2_slc_RMS_NORM_LOOP_2_mul_67_28_ncse_sva(39)))
      AND RMS_NORM_LOOP_2_and_2_m1c_1;
  RMS_NORM_LOOP_2_and_2_m1c_1 <= QUANTIZE_ACTIVATION_LOOP_2_slc_40_1_svs AND CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm;
  attention_max_attn_fixed_t_acc_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED((NOT
      QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_dfm_1_39) & (NOT QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_dfm_1_38_0)),
      40), 41) + UNSIGNED'( "00000000000000000000000000000000000000001"), 41));
  attention_max_attn_fixed_t_acc_itm_40_1 <= attention_max_attn_fixed_t_acc_nl(40);
  LINEAR_FORWARD_NO_MUL_LOOP_3_2_ko_2_0_sva_1_mx0w2 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd
      & reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1) + SIGNED'( "001"), 3));
  QUANTIZE_ACTIVATION_LOOP_3_jo_2_0_sva_3 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva)
      + SIGNED'( "001"), 3));
  nor_287_cse <= NOT((NOT (fsm_output(4))) OR (fsm_output(6)));
  RESHAPE_2D_TO_3D_LOOP_3_1_k_5_0_sva_2 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva)
      + SIGNED'( "000001"), 6));
  SF_LOOP_3_acc_61_cse_mx0w4 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(27),
      1), 1), 3) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(28),
      1),2)), 2), 3), 3));
  attention_round_qr_39_16_lpi_4_dfm_mx0w0 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_attention_round_a_cse_slc(2
      DOWNTO 0)) & (RMS_NORM_LOOP_2_mul_1_itm(51 DOWNTO 32))), 23), 24) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(RMS_NORM_LOOP_2_mul_1_itm(31),
      1), 1), 24), 24));
  attention_round_qr_39_16_lpi_4_dfm_mx1_23_7 <= MUX_v_17_2_2((z_out_14_23_0(23 DOWNTO
      7)), (attention_round_qr_39_16_lpi_4_dfm_mx0w0(23 DOWNTO 7)), attention_round_acc_itm_40_1);
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_acc_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED(attention_round_qr_39_16_lpi_4_dfm_mx1_23_7),
      17), 18) + UNSIGNED'( "000000000000000001"), 18));
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_acc_itm_17_1 <= QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_acc_nl(17);
  LINEAR_FORWARD_NO_MUL_LOOP_3_ko_2_0_sva_2 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0)
      + SIGNED'( "001"), 3));
  APPLY_ROTARY_POS_EMB_LOOP_3_acc_30_psp_sva_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1),
      2), 3) + UNSIGNED'( "011"), 3));
  SF_LOOP_3_acc_63_cse_mx0w6 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(27),
      1),2)), 2), 4) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(28),
      1),3)), 3), 4), 4));
  LINEAR_FORWARD_NO_MUL_LOOP_5_3_weight_val_mux_tmp <= MUX_v_2_4_2((LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_sva(1
      DOWNTO 0)), (LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_sva(3 DOWNTO 2)), (LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_sva(5
      DOWNTO 4)), (LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_sva(7 DOWNTO 6)), APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0);
  RESHAPE_2D_TO_3D_LOOP_3_k_5_0_sva_2 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(reg_CACHE_UPDATE_LOOP_3_k_5_0_1_ftd
      & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1 & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_0
      & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1) + SIGNED'( "000001"), 6));
  LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_mux_tmp <= MUX_v_2_4_2((LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_sva(1
      DOWNTO 0)), (LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_sva(3 DOWNTO 2)), (LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_sva(5
      DOWNTO 4)), (LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_sva(7 DOWNTO 6)), CACHE_UPDATE_LOOP_3_k_5_0_sva_1_1_0);
  APPLY_ROTARY_POS_EMB_LOOP_3_k_4_0_sva_2 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1
      & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_0 & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1)
      + SIGNED'( "00001"), 5));
  LINEAR_FORWARD_NO_MUL_LOOP_5_2_LINEAR_FORWARD_NO_MUL_LOOP_5_2_and_1_cse_1 <= CONV_SL_1_1(LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_slc_LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_conc_1_1_1_0_svs=STD_LOGIC_VECTOR'("10"));
  LINEAR_FORWARD_NO_MUL_LOOP_4_ki_4_0_sva_2 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(LINEAR_FORWARD_NO_MUL_LOOP_4_ki_4_0_sva_3_0),
      4), 5) + SIGNED'( "00001"), 5));
  LINEAR_FORWARD_NO_MUL_LOOP_4_2_ki_4_0_sva_2 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp_4),
      4), 5) + SIGNED'( "00001"), 5));
  RESHAPE_2D_TO_3D_LOOP_3_acc_11_psp_1_mx0w0 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(z_out_35(3
      DOWNTO 1)), 3), 4) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0),
      3), 4), 4));
  GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0),
      3), 4) + SIGNED'( "0001"), 4));
  APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0),
      3), 4) + SIGNED'( "0001"), 4));
  APPLY_ROTARY_POS_EMB_LOOP_6_cosval_APPLY_ROTARY_POS_EMB_LOOP_6_cosval_conc_2_9_5
      <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(STD_LOGIC_VECTOR'(
      "111") & (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(5))), 4), 5) + UNSIGNED'( "00001"),
      5));
  CACHE_UPDATE_LOOP_3_qif_acc_4_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED('1'
      & (NOT APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0)), 4), 5) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva
      & '1'), 4), 5), 5));
  CACHE_UPDATE_LOOP_3_qif_acc_5_sdt_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SIGNED(CACHE_UPDATE_LOOP_3_qif_acc_4_nl),
      6) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(z_out_34_2_0), 3), 6), 6));
  CACHE_UPDATE_LOOP_3_1_qif_acc_4_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED('1'
      & (NOT GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0)), 4), 5) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd
      & reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1 & '1'), 4), 5), 5));
  CACHE_UPDATE_LOOP_3_1_qif_acc_5_sdt_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SIGNED(CACHE_UPDATE_LOOP_3_1_qif_acc_4_nl),
      6) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(z_out_36_2_0), 3), 6), 6));
  GEMM_3D_FLOAT_LOOP_4_acc_19_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0),
      3), 4) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(5
      DOWNTO 3)), 3), 4), 4));
  GEMM_3D_FLOAT_LOOP_4_acc_15_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva)
      + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd),
      2), 6), 6));
  GEMM_3D_FLOAT_LOOP_4_acc_17_sdt_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_4_acc_19_nl),
      4)) & (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(2 DOWNTO 0)) & '0'), 8), 9) +
      CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_4_acc_15_nl), 9), 9));
  SF_LOOP_3_acc_64_ncse_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(29),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(36),
      1), 1), 2), 2));
  SF_LOOP_3_mul_8_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED'( UNSIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(4
      DOWNTO 3)) * UNSIGNED'( "1000100100110001")), 17));
  SF_LOOP_3_acc_11_itm_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd
      & STD_LOGIC_VECTOR'( "000") & reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd & STD_LOGIC_VECTOR'(
      "000") & reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd & STD_LOGIC_VECTOR'( "00") &
      reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd & STD_LOGIC_VECTOR'( "00") & reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd
      & '0' & reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd), 17), 18) + CONV_SIGNED(UNSIGNED(SF_LOOP_3_mul_8_nl),
      18), 18));
  SF_LOOP_3_mul_15_itm_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED'( UNSIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(34
      DOWNTO 33)) * UNSIGNED'( "1001110000100111")), 17));
  SF_LOOP_3_acc_32_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_mul_12_itm_16_15
      & STD_LOGIC_VECTOR'( "00") & SF_LOOP_3_mul_19_itm_12_11 & '0' & SF_LOOP_3_mul_19_itm_9_4
      & STD_LOGIC_VECTOR'( "00") & (SF_LOOP_3_mul_12_itm_3_0(1 DOWNTO 0))), 17),
      18) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_5_psp_sva(16 DOWNTO
      0)), 17), 18), 18));
  SF_LOOP_3_acc_34_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(UNSIGNED(SF_LOOP_3_acc_32_nl),
      19) + CONV_SIGNED(CONV_SIGNED(SIGNED((SF_LOOP_3_acc_5_psp_sva(17)) & '0' &
      (SF_LOOP_3_acc_5_psp_sva(17)) & STD_LOGIC_VECTOR'( "000") & (SF_LOOP_3_acc_5_psp_sva(17))
      & STD_LOGIC_VECTOR'( "00") & (SF_LOOP_3_acc_5_psp_sva(17)) & STD_LOGIC_VECTOR'(
      "00") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SF_LOOP_3_acc_5_psp_sva(17),
      1),2)) & STD_LOGIC_VECTOR'( "000") & (SF_LOOP_3_acc_5_psp_sva(17))), 18), 19),
      19));
  SF_LOOP_3_acc_6_psp_sva_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(SIGNED(SF_LOOP_3_acc_34_nl),
      19) + UNSIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0 & (SF_LOOP_3_acc_5_psp_sva(21
      DOWNTO 20)) & LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_slc_LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_conc_1_1_1_0_svs
      & RESHAPE_2D_TO_3D_LOOP_3_2_mux_3_itm_2_0 & RESHAPE_2D_TO_3D_LOOP_3_acc_11_psp_1
      & (SF_LOOP_3_acc_5_psp_sva(20)) & (SF_LOOP_3_acc_5_psp_sva(20)) & SF_LOOP_3_acc_93_psp),
      19));
  SF_LOOP_3_acc_7_psp_sva_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_35_itm)
      + UNSIGNED((SF_LOOP_3_acc_6_psp_sva_18_17(0)) & '0' & (SF_LOOP_3_acc_6_psp_sva_18_17(0))
      & STD_LOGIC_VECTOR'( "000") & (SF_LOOP_3_acc_6_psp_sva_18_17(0)) & STD_LOGIC_VECTOR'(
      "00") & (SF_LOOP_3_acc_6_psp_sva_18_17(0)) & STD_LOGIC_VECTOR'( "00") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SF_LOOP_3_acc_6_psp_sva_18_17(0),
      1),2)) & STD_LOGIC_VECTOR'( "000") & (SF_LOOP_3_acc_6_psp_sva_18_17(0))), 18));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_3_psp_sva_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED(z_out_8(1
      DOWNTO 0)), 2), 3) + CONV_UNSIGNED(CONV_SIGNED(SIGNED(z_out_17(5 DOWNTO 4)),
      2), 3) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (z_out_17(3)), 1), 1),
      3), 3));
  attention_abs_4_qif_acc_pmx_lpi_1_dfm_mx0w0 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(NOT
      (rms_norm_384_1_val_acc_psp_sva_1(30 DOWNTO 0))) + UNSIGNED'( "0000000000000000000000000000001"),
      31));
  attention_abs_4_qif_acc_pmx_lpi_1_dfm_mx1_30_1 <= MUX_v_30_2_2((rms_norm_384_1_val_acc_psp_sva_1(30
      DOWNTO 1)), (attention_abs_4_qif_acc_pmx_lpi_1_dfm_mx0w0(30 DOWNTO 1)), rms_norm_384_1_val_acc_psp_sva_1(31));
  rms_norm_384_1_val_acc_psp_sva_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36),
      1),2))) + CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_52_itm),
      31), 32) + CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_51_itm),
      30), 32), 32));
  attention_abs_6_mux_2 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(NOT
      (RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_slc_71_32_1_ncse_sva(38 DOWNTO 0))), 39),
      40) + SIGNED'( "0000000000000000000000000000000000000001"), 40));
  attention_abs_5_qr_sva_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(NOT
      (attention_5_1_384_384_8_48_attn_output_2D_rsci_q_d(38 DOWNTO 0))), 39), 40)
      + SIGNED'( "0000000000000000000000000000000000000001"), 40));
  RMS_NORM_LOOP_2_2_and_4_ssc_1 <= (attention_5_1_384_384_8_48_attn_output_2D_rsci_q_d(39))
      AND (NOT CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm);
  RMS_NORM_LOOP_2_2_and_1_ssc_1 <= (NOT QUANTIZE_ACTIVATION_LOOP_2_1_slc_40_1_svs)
      AND CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm;
  RMS_NORM_LOOP_2_2_and_6_ssc_1 <= (RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_slc_71_32_1_ncse_sva(39))
      AND RMS_NORM_LOOP_2_2_and_2_m1c_1;
  RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_nor_ssc_1 <= NOT((attention_5_1_384_384_8_48_attn_output_2D_rsci_q_d(39))
      OR CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm);
  RMS_NORM_LOOP_2_2_and_5_ssc_1 <= (NOT (RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_slc_71_32_1_ncse_sva(39)))
      AND RMS_NORM_LOOP_2_2_and_2_m1c_1;
  RMS_NORM_LOOP_2_2_and_2_m1c_1 <= QUANTIZE_ACTIVATION_LOOP_2_1_slc_40_1_svs AND
      CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm;
  attention_max_attn_fixed_t_1_acc_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED((NOT
      QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_dfm_1_39) & (NOT QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_dfm_1_38_0)),
      40), 41) + UNSIGNED'( "00000000000000000000000000000000000000001"), 41));
  attention_max_attn_fixed_t_1_acc_itm_40_1 <= attention_max_attn_fixed_t_1_acc_nl(40);
  attention_round_1_qr_39_16_lpi_4_dfm_mx0w0 <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_attention_round_a_cse_slc(2
      DOWNTO 0)) & (RMS_NORM_LOOP_2_mul_1_itm(51 DOWNTO 32))), 23), 24) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(RMS_NORM_LOOP_2_mul_1_itm(31),
      1), 1), 24), 24));
  attention_round_1_qr_39_16_lpi_4_dfm_mx1_23_7 <= MUX_v_17_2_2((z_out_14_23_0(23
      DOWNTO 7)), (attention_round_1_qr_39_16_lpi_4_dfm_mx0w0(23 DOWNTO 7)), attention_round_1_acc_itm_40_1);
  QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED(attention_round_1_qr_39_16_lpi_4_dfm_mx1_23_7),
      17), 18) + UNSIGNED'( "000000000000000001"), 18));
  QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_itm_17_1 <= QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_nl(17);
  INIT_2D_MEM_LOOP_2_3_INIT_2D_MEM_LOOP_2_3_nor_itm_1 <= NOT(CONV_SL_1_1(SF_LOOP_3_acc_17_itm_8_0/=STD_LOGIC_VECTOR'("000000000")));
  LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_acc_2_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva
      & APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(INIT_2D_MEM_LOOP_2_2_acc_itm(8
      DOWNTO 7)), 2), 7), 7));
  LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_conc_2_15_7
      <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_acc_2_nl),
      9) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva
      & APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt & '0'), 8), 9), 9));
  attention_round_1_acc_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED((NOT
      reg_attention_round_a_cse_slc) & (NOT (RMS_NORM_LOOP_2_mul_1_itm(51 DOWNTO
      16)))), 40), 41) + UNSIGNED'( "00000000000000000000000000000000000000001"),
      41));
  attention_round_1_acc_itm_40_1 <= attention_round_1_acc_nl(40);
  SOFTMAX_LOOP_3_acc_3_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED(INIT_2D_MEM_LOOP_2_1_asn_psp),
      40), 41) - CONV_UNSIGNED(CONV_SIGNED(SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d),
      40), 41), 41));
  SOFTMAX_LOOP_3_acc_3_itm_40_1 <= SOFTMAX_LOOP_3_acc_3_nl(40);
  CACHE_UPDATE_LOOP_1_and_cse <= (APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2(3)) AND
      (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2(3));
  attention_round_acc_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED((NOT
      reg_attention_round_a_cse_slc) & (NOT (RMS_NORM_LOOP_2_mul_1_itm(51 DOWNTO
      16)))), 40), 41) + UNSIGNED'( "00000000000000000000000000000000000000001"),
      41));
  attention_round_acc_itm_40_1 <= attention_round_acc_nl(40);
  or_tmp_5 <= (NOT (fsm_output(8))) OR (fsm_output(4));
  mux_tmp_28 <= MUX_s_1_2_2((NOT (fsm_output(4))), (fsm_output(4)), fsm_output(3));
  or_tmp_24 <= CONV_SL_1_1(fsm_output(4 DOWNTO 3)/=STD_LOGIC_VECTOR'("10"));
  and_dcpl_12 <= NOT(CONV_SL_1_1(fsm_output(8 DOWNTO 7)/=STD_LOGIC_VECTOR'("00")));
  nand_78_cse <= NOT(CONV_SL_1_1(fsm_output(4 DOWNTO 3)=STD_LOGIC_VECTOR'("11")));
  or_tmp_26 <= NOT(nand_78_cse AND (fsm_output(5)));
  not_tmp_35 <= NOT((fsm_output(7)) AND (fsm_output(5)));
  or_tmp_30 <= (fsm_output(7)) OR (NOT (fsm_output(5)));
  or_tmp_32 <= (fsm_output(7)) OR (fsm_output(5));
  or_55_cse <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)/=STD_LOGIC_VECTOR'("011"));
  or_58_cse <= CONV_SL_1_1(fsm_output(8 DOWNTO 5)/=STD_LOGIC_VECTOR'("0010"));
  and_dcpl_25 <= CONV_SL_1_1(fsm_output(1 DOWNTO 0)=STD_LOGIC_VECTOR'("10"));
  and_dcpl_29 <= CONV_SL_1_1(fsm_output(8 DOWNTO 7)=STD_LOGIC_VECTOR'("01"));
  and_dcpl_39 <= (NOT (fsm_output(8))) AND (fsm_output(6));
  or_129_cse <= (fsm_output(4)) OR (NOT (fsm_output(7))) OR (NOT (fsm_output(6)))
      OR (fsm_output(8));
  nand_88_cse <= NOT((fsm_output(4)) AND (fsm_output(7)) AND (fsm_output(6)) AND
      (NOT (fsm_output(8))));
  nand_89_cse <= NOT((fsm_output(6)) AND (fsm_output(8)));
  mux_tmp_125 <= MUX_s_1_2_2((NOT (fsm_output(7))), (fsm_output(7)), fsm_output(4));
  or_164_cse <= (fsm_output(2)) OR (fsm_output(1)) OR (fsm_output(0)) OR (fsm_output(8));
  or_170_cse <= (NOT (fsm_output(0))) OR (fsm_output(8));
  mux_tmp_167 <= MUX_s_1_2_2((NOT (fsm_output(6))), (fsm_output(6)), fsm_output(4));
  mux_tmp_171 <= MUX_s_1_2_2((NOT (fsm_output(6))), (fsm_output(6)), fsm_output(5));
  or_216_cse <= CONV_SL_1_1(fsm_output(6 DOWNTO 5)/=STD_LOGIC_VECTOR'("10"));
  mux_185_cse <= MUX_s_1_2_2((NOT (fsm_output(4))), (fsm_output(4)), fsm_output(7));
  or_231_cse <= (fsm_output(7)) OR (fsm_output(4));
  nor_tmp_54 <= CONV_SL_1_1(fsm_output(7 DOWNTO 6)=STD_LOGIC_VECTOR'("11"));
  nor_238_cse <= NOT(CONV_SL_1_1(fsm_output(7 DOWNTO 6)/=STD_LOGIC_VECTOR'("10")));
  mux_tmp_237 <= MUX_s_1_2_2((NOT (fsm_output(5))), (fsm_output(5)), fsm_output(4));
  or_tmp_197 <= CONV_SL_1_1(fsm_output(5 DOWNTO 4)/=STD_LOGIC_VECTOR'("10"));
  and_578_cse <= CONV_SL_1_1(fsm_output(3 DOWNTO 2)=STD_LOGIC_VECTOR'("11"));
  mux_tmp_238 <= MUX_s_1_2_2(or_tmp_197, mux_tmp_237, and_578_cse);
  mux_tmp_239 <= MUX_s_1_2_2(or_tmp_197, mux_tmp_237, fsm_output(3));
  and_dcpl_88 <= CONV_SL_1_1(fsm_output(8 DOWNTO 7)=STD_LOGIC_VECTOR'("10"));
  or_tmp_216 <= CONV_SL_1_1(fsm_output(5 DOWNTO 4)/=STD_LOGIC_VECTOR'("01"));
  mux_257_cse <= MUX_s_1_2_2(or_tmp_197, or_tmp_216, fsm_output(3));
  mux_tmp_259 <= MUX_s_1_2_2(or_tmp_197, or_tmp_216, and_578_cse);
  nor_239_cse <= NOT(CONV_SL_1_1(fsm_output(5 DOWNTO 4)/=STD_LOGIC_VECTOR'("00")));
  or_tmp_229 <= CONV_SL_1_1(fsm_output(7 DOWNTO 6)/=STD_LOGIC_VECTOR'("10"));
  or_310_cse <= CONV_SL_1_1(fsm_output(7 DOWNTO 5)/=STD_LOGIC_VECTOR'("011"));
  and_dcpl_107 <= nor_566_cse AND nor_494_cse;
  and_dcpl_109 <= NOT(CONV_SL_1_1(fsm_output(7 DOWNTO 6)/=STD_LOGIC_VECTOR'("00")));
  and_dcpl_110 <= and_dcpl_109 AND (NOT (fsm_output(8)));
  and_dcpl_111 <= and_dcpl_110 AND nor_239_cse;
  and_dcpl_116 <= and_578_cse AND and_692_cse;
  and_dcpl_117 <= CONV_SL_1_1(fsm_output(5 DOWNTO 4)=STD_LOGIC_VECTOR'("11"));
  and_dcpl_118 <= and_dcpl_110 AND and_dcpl_117;
  or_dcpl_89 <= or_832_cse OR (fsm_output(8));
  or_dcpl_90 <= or_dcpl_89 OR or_tmp_216;
  or_tmp_233 <= CONV_SL_1_1(fsm_output(7 DOWNTO 6)/=STD_LOGIC_VECTOR'("00"));
  and_tmp_6 <= (fsm_output(8)) AND or_tmp_233;
  and_dcpl_120 <= nor_566_cse AND and_692_cse;
  and_dcpl_121 <= and_dcpl_109 AND (fsm_output(8));
  and_dcpl_122 <= and_dcpl_121 AND and_dcpl_117;
  or_dcpl_93 <= CONV_SL_1_1(fsm_output(3 DOWNTO 2)/=STD_LOGIC_VECTOR'("01"));
  or_dcpl_96 <= or_832_cse OR (NOT (fsm_output(8)));
  or_dcpl_100 <= CONV_SL_1_1(fsm_output(3 DOWNTO 2)/=STD_LOGIC_VECTOR'("10"));
  or_dcpl_101 <= or_dcpl_100 OR or_603_cse;
  mux_tmp_302 <= MUX_s_1_2_2(or_tmp_24, mux_tmp_28, fsm_output(2));
  and_dcpl_126 <= CONV_SL_1_1(fsm_output(1 DOWNTO 0)=STD_LOGIC_VECTOR'("01"));
  and_dcpl_127 <= CONV_SL_1_1(fsm_output(3 DOWNTO 2)=STD_LOGIC_VECTOR'("10"));
  and_dcpl_128 <= and_dcpl_127 AND and_dcpl_126;
  and_dcpl_129 <= CONV_SL_1_1(fsm_output(7 DOWNTO 6)=STD_LOGIC_VECTOR'("10"));
  and_dcpl_131 <= and_dcpl_129 AND (fsm_output(8)) AND nor_239_cse;
  and_dcpl_133 <= NOT((fsm_output(8)) OR (fsm_output(5)));
  and_dcpl_134 <= and_dcpl_109 AND and_dcpl_133;
  and_dcpl_137 <= CONV_SL_1_1(fsm_output(7 DOWNTO 6)=STD_LOGIC_VECTOR'("01"));
  and_dcpl_138 <= and_dcpl_137 AND (NOT (fsm_output(8)));
  and_dcpl_139 <= and_dcpl_138 AND nor_239_cse;
  and_dcpl_140 <= and_dcpl_139 AND and_dcpl_107;
  and_662_cse <= CONV_SL_1_1(fsm_output(3 DOWNTO 1)=STD_LOGIC_VECTOR'("111"));
  mux_315_nl <= MUX_s_1_2_2(nor_566_cse, and_578_cse, fsm_output(1));
  mux_316_nl <= MUX_s_1_2_2(mux_315_nl, and_662_cse, fsm_output(0));
  and_dcpl_144 <= (NOT mux_316_nl) AND (fsm_output(6)) AND and_dcpl_12 AND nor_239_cse;
  and_dcpl_146 <= and_dcpl_109 AND (fsm_output(8)) AND (NOT (fsm_output(5)));
  and_dcpl_149 <= and_dcpl_127 AND and_dcpl_25;
  and_dcpl_152 <= CONV_SL_1_1(fsm_output(5 DOWNTO 4)=STD_LOGIC_VECTOR'("01"));
  and_dcpl_154 <= and_dcpl_110 AND and_dcpl_152 AND and_dcpl_128;
  and_dcpl_156 <= and_dcpl_121 AND and_dcpl_152 AND and_dcpl_149;
  and_dcpl_157 <= CONV_SL_1_1(fsm_output(5 DOWNTO 4)=STD_LOGIC_VECTOR'("10"));
  and_dcpl_158 <= and_dcpl_138 AND and_dcpl_157;
  and_dcpl_159 <= and_dcpl_158 AND and_dcpl_120;
  or_tmp_260 <= CONV_SL_1_1(fsm_output(7 DOWNTO 5)/=STD_LOGIC_VECTOR'("100"));
  or_367_cse <= CONV_SL_1_1(fsm_output(4 DOWNTO 2)/=STD_LOGIC_VECTOR'("000"));
  mux_tmp_332 <= MUX_s_1_2_2(or_tmp_260, or_310_cse, or_367_cse);
  or_366_nl <= (NOT(CONV_SL_1_1(fsm_output(4 DOWNTO 2)/=STD_LOGIC_VECTOR'("000"))))
      OR CONV_SL_1_1(fsm_output(7 DOWNTO 5)/=STD_LOGIC_VECTOR'("011"));
  mux_tmp_333 <= MUX_s_1_2_2(mux_tmp_332, or_366_nl, fsm_output(1));
  and_dcpl_160 <= NOT(mux_tmp_333 OR (fsm_output(8)));
  and_dcpl_161 <= CONV_SL_1_1(fsm_output(3 DOWNTO 2)=STD_LOGIC_VECTOR'("01"));
  and_dcpl_162 <= and_dcpl_161 AND and_dcpl_25;
  and_dcpl_163 <= and_dcpl_137 AND (fsm_output(8));
  and_dcpl_164 <= and_dcpl_163 AND and_dcpl_157;
  or_tmp_276 <= nor_392_cse OR CONV_SL_1_1(fsm_output(7 DOWNTO 5)/=STD_LOGIC_VECTOR'("011"));
  mux_tmp_338 <= MUX_s_1_2_2(or_tmp_260, or_310_cse, or_1215_cse);
  mux_339_nl <= MUX_s_1_2_2(mux_tmp_338, or_tmp_276, fsm_output(2));
  mux_tmp_340 <= MUX_s_1_2_2(mux_339_nl, mux_tmp_332, fsm_output(1));
  and_dcpl_167 <= and_578_cse AND and_dcpl_25;
  and_dcpl_169 <= nor_tmp_54 AND (NOT (fsm_output(8)));
  and_dcpl_170 <= and_dcpl_169 AND and_dcpl_152;
  mux_tmp_344 <= MUX_s_1_2_2(or_tmp_197, mux_tmp_237, and_662_cse);
  mux_tmp_348 <= MUX_s_1_2_2(mux_tmp_239, mux_257_cse, fsm_output(2));
  mux_tmp_350 <= MUX_s_1_2_2(mux_tmp_259, mux_tmp_348, fsm_output(1));
  or_391_cse <= CONV_SL_1_1(fsm_output(4 DOWNTO 1)/=STD_LOGIC_VECTOR'("0000"));
  mux_354_nl <= MUX_s_1_2_2(or_tmp_260, or_310_cse, or_391_cse);
  mux_355_nl <= MUX_s_1_2_2(mux_tmp_333, mux_354_nl, fsm_output(0));
  and_dcpl_174 <= NOT(mux_355_nl OR (fsm_output(8)));
  and_dcpl_175 <= and_dcpl_161 AND nor_494_cse;
  and_dcpl_176 <= and_dcpl_122 AND and_dcpl_175;
  or_tmp_283 <= CONV_SL_1_1(fsm_output(6 DOWNTO 5)/=STD_LOGIC_VECTOR'("01"));
  mux_tmp_356 <= MUX_s_1_2_2(or_216_cse, or_tmp_283, fsm_output(4));
  and_666_nl <= or_392_cse AND (fsm_output(4));
  mux_tmp_358 <= MUX_s_1_2_2(or_216_cse, or_tmp_283, and_666_nl);
  and_dcpl_182 <= and_dcpl_127 AND nor_494_cse;
  not_tmp_240 <= MUX_s_1_2_2((fsm_output(1)), (NOT (fsm_output(1))), fsm_output(0));
  or_dcpl_111 <= or_tmp_233 OR (fsm_output(8));
  mux_tmp_373 <= MUX_s_1_2_2((NOT (fsm_output(5))), (fsm_output(5)), and_696_cse);
  and_dcpl_185 <= and_dcpl_129 AND (NOT (fsm_output(8)));
  mux_375_nl <= MUX_s_1_2_2((fsm_output(5)), (NOT (fsm_output(5))), or_391_cse);
  nor_347_nl <= NOT((NOT(CONV_SL_1_1(fsm_output(4 DOWNTO 1)/=STD_LOGIC_VECTOR'("0000"))))
      OR (fsm_output(5)));
  mux_376_nl <= MUX_s_1_2_2(mux_375_nl, nor_347_nl, fsm_output(0));
  and_dcpl_186 <= mux_376_nl AND and_dcpl_185;
  and_dcpl_188 <= and_578_cse AND and_dcpl_126;
  and_dcpl_189 <= and_dcpl_185 AND and_dcpl_157;
  and_dcpl_190 <= and_dcpl_189 AND and_dcpl_188;
  and_dcpl_196 <= and_dcpl_189 AND and_dcpl_128;
  and_dcpl_197 <= and_dcpl_189 AND and_dcpl_149;
  and_dcpl_201 <= and_dcpl_152 AND (fsm_output(3));
  and_dcpl_204 <= and_dcpl_163 AND and_dcpl_152;
  not_tmp_245 <= NOT((fsm_output(1)) AND (fsm_output(5)));
  and_dcpl_208 <= and_dcpl_169 AND and_dcpl_117;
  and_dcpl_210 <= nor_566_cse AND and_dcpl_126;
  and_dcpl_211 <= and_dcpl_122 AND and_dcpl_210;
  and_dcpl_212 <= and_dcpl_121 AND nor_239_cse;
  and_dcpl_213 <= and_dcpl_212 AND and_dcpl_210;
  and_dcpl_214 <= and_dcpl_121 AND and_dcpl_157;
  and_dcpl_215 <= and_dcpl_214 AND and_dcpl_167;
  and_dcpl_217 <= (fsm_output(4)) AND (fsm_output(2));
  and_dcpl_218 <= (NOT (fsm_output(8))) AND (fsm_output(5));
  or_tmp_314 <= (fsm_output(1)) OR (NOT (fsm_output(3)));
  or_tmp_315 <= (NOT (fsm_output(1))) OR (fsm_output(3));
  and_dcpl_227 <= and_dcpl_208 AND and_dcpl_128;
  and_dcpl_228 <= and_dcpl_208 AND and_dcpl_162;
  or_dcpl_116 <= or_dcpl_100 OR or_1213_cse;
  and_dcpl_233 <= and_dcpl_185 AND and_dcpl_117;
  and_dcpl_234 <= and_dcpl_233 AND and_dcpl_188;
  and_dcpl_238 <= and_dcpl_170 AND and_dcpl_210;
  and_dcpl_239 <= and_dcpl_127 AND and_692_cse;
  and_dcpl_240 <= and_dcpl_170 AND and_dcpl_239;
  and_dcpl_241 <= and_dcpl_233 AND and_dcpl_116;
  and_dcpl_242 <= and_dcpl_169 AND nor_239_cse;
  and_dcpl_243 <= and_dcpl_242 AND and_dcpl_162;
  and_dcpl_245 <= and_dcpl_170 AND and_dcpl_162;
  and_dcpl_246 <= and_dcpl_170 AND and_dcpl_182;
  and_dcpl_247 <= and_dcpl_170 AND and_dcpl_188;
  and_dcpl_248 <= nor_566_cse AND and_dcpl_25;
  and_dcpl_253 <= CONV_SL_1_1(fsm_output(2 DOWNTO 1)=STD_LOGIC_VECTOR'("10"));
  and_dcpl_254 <= and_dcpl_253 AND (NOT (fsm_output(0)));
  and_dcpl_257 <= and_dcpl_185 AND and_dcpl_117 AND (NOT (fsm_output(3)));
  and_dcpl_263 <= and_dcpl_233 AND and_dcpl_182;
  and_dcpl_270 <= CONV_SL_1_1(fsm_output(2 DOWNTO 1)=STD_LOGIC_VECTOR'("01"));
  and_dcpl_271 <= and_dcpl_270 AND (fsm_output(0));
  nor_tmp_104 <= (fsm_output(0)) AND (fsm_output(2));
  and_dcpl_282 <= and_dcpl_161 AND and_dcpl_126;
  and_dcpl_284 <= and_dcpl_189 AND and_dcpl_182;
  and_dcpl_285 <= NOT((fsm_output(8)) OR (fsm_output(2)));
  or_472_nl <= CONV_SL_1_1(fsm_output(7 DOWNTO 4)/=STD_LOGIC_VECTOR'("0110"));
  mux_tmp_401 <= MUX_s_1_2_2(or_472_nl, or_1054_cse, fsm_output(3));
  or_tmp_353 <= NOT((fsm_output(2)) AND (fsm_output(3)) AND (fsm_output(4)) AND (NOT
      (fsm_output(7))) AND (fsm_output(6)));
  or_476_nl <= (fsm_output(2)) OR (fsm_output(3)) OR (fsm_output(4)) OR (NOT (fsm_output(7)))
      OR (fsm_output(6));
  mux_tmp_403 <= MUX_s_1_2_2(or_tmp_353, or_476_nl, fsm_output(1));
  and_dcpl_289 <= and_dcpl_161 AND and_692_cse;
  and_dcpl_290 <= and_dcpl_138 AND and_dcpl_152;
  and_dcpl_291 <= and_dcpl_290 AND and_dcpl_289;
  or_tmp_355 <= (fsm_output(2)) OR (fsm_output(3)) OR (fsm_output(4)) OR (fsm_output(8))
      OR (NOT (fsm_output(7))) OR (fsm_output(6));
  and_dcpl_297 <= and_578_cse AND nor_494_cse;
  and_dcpl_298 <= and_dcpl_290 AND and_dcpl_297;
  and_dcpl_299 <= and_dcpl_185 AND nor_239_cse;
  and_dcpl_303 <= and_dcpl_133 AND (fsm_output(0));
  and_dcpl_306 <= and_dcpl_189 AND and_dcpl_175;
  or_tmp_370 <= CONV_SL_1_1(fsm_output(7 DOWNTO 3)/=STD_LOGIC_VECTOR'("10100"));
  and_dcpl_311 <= and_dcpl_290 AND and_dcpl_167;
  or_506_nl <= (NOT (LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_mux_tmp(0))) OR (fsm_output(2));
  or_505_nl <= (LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_mux_tmp(0)) OR (fsm_output(2));
  mux_tmp_417 <= MUX_s_1_2_2(or_506_nl, or_505_nl, LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_mux_tmp(1));
  nand_tmp_21 <= NOT((fsm_output(1)) AND (NOT mux_tmp_417));
  mux_tmp_418 <= MUX_s_1_2_2((NOT (fsm_output(2))), mux_tmp_417, fsm_output(1));
  and_dcpl_316 <= and_dcpl_290 AND and_dcpl_149;
  and_dcpl_317 <= and_dcpl_290 AND and_dcpl_239;
  or_tmp_381 <= CONV_SL_1_1(fsm_output(7 DOWNTO 3)/=STD_LOGIC_VECTOR'("01100"));
  and_dcpl_331 <= and_dcpl_131 AND and_dcpl_289;
  and_dcpl_342 <= and_dcpl_111 AND and_dcpl_210;
  or_tmp_407 <= (NOT (fsm_output(5))) OR (fsm_output(8));
  or_tmp_408 <= (fsm_output(8)) OR (NOT (fsm_output(2)));
  or_tmp_410 <= (NOT (fsm_output(5))) OR (fsm_output(8)) OR (NOT (fsm_output(2)));
  and_dcpl_349 <= (NOT mux_257_cse) AND and_dcpl_137 AND and_dcpl_285 AND and_692_cse;
  and_dcpl_350 <= and_dcpl_189 AND and_dcpl_167;
  and_dcpl_351 <= and_dcpl_242 AND and_dcpl_107;
  and_dcpl_354 <= and_dcpl_170 AND and_dcpl_297;
  and_dcpl_355 <= and_dcpl_208 AND and_dcpl_289;
  and_dcpl_360 <= and_dcpl_290 AND and_dcpl_162;
  and_dcpl_361 <= and_dcpl_242 AND and_dcpl_289;
  and_dcpl_366 <= (fsm_output(5)) AND (fsm_output(3));
  mux_506_nl <= MUX_s_1_2_2(or_21_cse, or_tmp_5, fsm_output(2));
  and_dcpl_368 <= (NOT mux_506_nl) AND and_dcpl_109;
  and_dcpl_369 <= and_dcpl_368 AND and_dcpl_366 AND and_dcpl_25;
  and_dcpl_370 <= and_dcpl_189 AND and_dcpl_120;
  not_tmp_327 <= NOT((fsm_output(3)) AND (fsm_output(8)));
  and_dcpl_374 <= and_dcpl_189 AND and_578_cse AND not_tmp_240;
  or_1199_nl <= (fsm_output(1)) OR (NOT (fsm_output(2))) OR (fsm_output(4));
  or_1200_nl <= (NOT (fsm_output(1))) OR (fsm_output(2)) OR (NOT (fsm_output(4)));
  mux_518_nl <= MUX_s_1_2_2(or_1199_nl, or_1200_nl, fsm_output(0));
  and_dcpl_379 <= (NOT(mux_518_nl OR (fsm_output(6)))) AND and_dcpl_29 AND (fsm_output(5))
      AND (NOT (fsm_output(3)));
  xnor_cse <= NOT((fsm_output(8)) XOR (fsm_output(0)));
  and_dcpl_393 <= nor_239_cse AND (fsm_output(3)) AND and_dcpl_270 AND and_dcpl_109
      AND xnor_cse;
  or_643_nl <= (fsm_output(8)) OR not_tmp_35;
  or_642_nl <= (CONV_SL_1_1(fsm_output(8 DOWNTO 7)=STD_LOGIC_VECTOR'("11"))) OR (fsm_output(5));
  mux_tmp_528 <= MUX_s_1_2_2(or_643_nl, or_642_nl, fsm_output(6));
  or_tmp_510 <= (fsm_output(8)) OR (NOT or_tmp_30);
  mux_40_nl <= MUX_s_1_2_2((fsm_output(5)), (NOT (fsm_output(5))), fsm_output(7));
  mux_tmp_534 <= MUX_s_1_2_2(mux_40_nl, or_tmp_32, fsm_output(8));
  mux_tmp_542 <= MUX_s_1_2_2(not_tmp_35, or_tmp_32, or_657_cse);
  or_61_nl <= ((fsm_output(6)) AND (fsm_output(8))) OR (fsm_output(7)) OR (fsm_output(5));
  mux_tmp_543 <= MUX_s_1_2_2(or_61_nl, mux_tmp_542, fsm_output(2));
  mux_544_nl <= MUX_s_1_2_2((fsm_output(7)), (NOT or_tmp_30), fsm_output(8));
  nand_26_nl <= NOT((fsm_output(6)) AND mux_544_nl);
  or_656_nl <= (NOT (fsm_output(6))) OR (fsm_output(8)) OR not_tmp_35;
  mux_tmp_545 <= MUX_s_1_2_2(nand_26_nl, or_656_nl, fsm_output(2));
  or_tmp_547 <= (NOT (fsm_output(3))) OR (fsm_output(4)) OR (fsm_output(6));
  or_682_nl <= (fsm_output(3)) OR (NOT mux_tmp_167);
  mux_575_cse <= MUX_s_1_2_2(or_tmp_547, or_682_nl, fsm_output(2));
  and_dcpl_397 <= (NOT mux_575_cse) AND (fsm_output(7)) AND and_dcpl_218 AND nor_494_cse;
  and_dcpl_398 <= and_dcpl_29 AND (fsm_output(5));
  and_dcpl_400 <= and_dcpl_398 AND mux_tmp_167 AND and_dcpl_188;
  mux_tmp_579 <= MUX_s_1_2_2(or_tmp_229, or_832_cse, fsm_output(5));
  and_678_nl <= or_367_cse AND (fsm_output(5));
  mux_582_nl <= MUX_s_1_2_2(or_tmp_229, or_832_cse, and_678_nl);
  mux_580_nl <= MUX_s_1_2_2(or_tmp_229, mux_705_cse, fsm_output(5));
  mux_581_nl <= MUX_s_1_2_2(mux_580_nl, mux_tmp_579, or_367_cse);
  mux_583_nl <= MUX_s_1_2_2(mux_582_nl, mux_581_nl, fsm_output(1));
  and_679_nl <= or_391_cse AND (fsm_output(5));
  mux_578_nl <= MUX_s_1_2_2(or_tmp_229, or_832_cse, and_679_nl);
  mux_584_nl <= MUX_s_1_2_2(mux_583_nl, mux_578_nl, fsm_output(0));
  and_dcpl_409 <= NOT(mux_584_nl OR (fsm_output(8)));
  and_dcpl_431 <= and_dcpl_366 AND (fsm_output(1));
  and_dcpl_438 <= NOT((fsm_output(7)) OR (fsm_output(5)));
  or_tmp_636 <= nor_239_cse OR (fsm_output(8));
  nor_tmp_151 <= (fsm_output(5)) AND (fsm_output(8));
  mux_tmp_649 <= MUX_s_1_2_2(or_tmp_407, nor_tmp_151, fsm_output(4));
  or_tmp_645 <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)/=STD_LOGIC_VECTOR'("001"));
  mux_tmp_662 <= MUX_s_1_2_2(or_tmp_645, or_733_cse, fsm_output(5));
  mux_663_nl <= MUX_s_1_2_2(or_832_cse, or_tmp_233, fsm_output(8));
  nand_tmp_40 <= NOT((fsm_output(5)) AND (NOT mux_663_nl));
  or_786_nl <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)/=STD_LOGIC_VECTOR'("110"));
  mux_tmp_665 <= MUX_s_1_2_2(or_786_nl, or_tmp_645, or_1158_cse);
  mux_tmp_667 <= MUX_s_1_2_2(or_832_cse, or_733_cse, fsm_output(5));
  or_tmp_651 <= CONV_SL_1_1(fsm_output(8 DOWNTO 5)/=STD_LOGIC_VECTOR'("0011"));
  and_dcpl_445 <= and_dcpl_242 AND and_dcpl_128;
  or_dcpl_136 <= CONV_SL_1_1(fsm_output(1 DOWNTO 0)/=STD_LOGIC_VECTOR'("10"));
  or_dcpl_137 <= or_dcpl_100 OR or_dcpl_136;
  or_dcpl_138 <= or_dcpl_111 OR (NOT and_dcpl_117);
  mux_684_cse <= MUX_s_1_2_2((fsm_output(7)), or_832_cse, or_21_cse);
  mux_tmp_685 <= MUX_s_1_2_2(or_833_cse, mux_684_cse, fsm_output(3));
  or_tmp_705 <= (fsm_output(3)) OR (fsm_output(0)) OR (NOT (fsm_output(2)));
  or_tmp_727 <= (fsm_output(1)) OR (fsm_output(8));
  or_tmp_729 <= NOT((fsm_output(7)) AND (fsm_output(2)) AND (fsm_output(0)) AND (fsm_output(1))
      AND (NOT (fsm_output(8))));
  or_tmp_748 <= (fsm_output(3)) OR (NOT (fsm_output(4))) OR (NOT (fsm_output(8)))
      OR (fsm_output(7));
  and_dcpl_454 <= and_dcpl_242 AND and_dcpl_239;
  or_915_nl <= (fsm_output(3)) OR (fsm_output(4)) OR (fsm_output(6));
  mux_tmp_790 <= MUX_s_1_2_2(or_tmp_547, or_915_nl, fsm_output(2));
  not_tmp_429 <= NOT((fsm_output(3)) OR (NOT (fsm_output(4))) OR (fsm_output(6)));
  mux_tmp_803 <= MUX_s_1_2_2(or_745_cse, or_791_cse, fsm_output(4));
  mux_tmp_805 <= MUX_s_1_2_2(nand_89_cse, or_657_cse, fsm_output(7));
  or_957_nl <= (fsm_output(1)) OR (NOT (fsm_output(3))) OR (NOT (fsm_output(4)))
      OR (fsm_output(5)) OR (fsm_output(7)) OR (NOT (fsm_output(6)));
  mux_827_nl <= MUX_s_1_2_2(or_tmp_381, or_tmp_370, fsm_output(1));
  mux_828_nl <= MUX_s_1_2_2(or_957_nl, mux_827_nl, fsm_output(0));
  and_dcpl_461 <= (NOT mux_828_nl) AND and_dcpl_285;
  and_dcpl_462 <= and_dcpl_158 AND and_dcpl_107;
  or_tmp_841 <= (NOT (fsm_output(4))) OR (fsm_output(6)) OR (NOT (fsm_output(7)));
  or_tmp_859 <= (fsm_output(3)) OR (NOT (fsm_output(1))) OR (NOT (fsm_output(7)))
      OR (fsm_output(2));
  and_dcpl_478 <= and_dcpl_290 AND and_dcpl_116;
  mux_906_nl <= MUX_s_1_2_2(or_745_cse, or_733_cse, fsm_output(4));
  nand_tmp_58 <= NOT((fsm_output(3)) AND (NOT mux_906_nl));
  or_tmp_895 <= (NOT (fsm_output(3))) OR (fsm_output(4)) OR (fsm_output(8)) OR (NOT
      (fsm_output(7)));
  and_dcpl_482 <= and_dcpl_39 AND (NOT (fsm_output(5))) AND (fsm_output(3));
  and_dcpl_488 <= and_dcpl_233 AND and_dcpl_120;
  and_dcpl_503 <= and_dcpl_189 AND and_dcpl_239;
  and_690_nl <= (and_692_cse OR CONV_SL_1_1(fsm_output(4 DOWNTO 2)/=STD_LOGIC_VECTOR'("000")))
      AND (fsm_output(5));
  mux_952_nl <= MUX_s_1_2_2(or_tmp_229, or_832_cse, and_690_nl);
  and_dcpl_512 <= NOT(mux_952_nl OR (fsm_output(8)));
  or_tmp_936 <= NOT(CONV_SL_1_1(fsm_output(8 DOWNTO 5)=STD_LOGIC_VECTOR'("0111")));
  or_tmp_937 <= CONV_SL_1_1(fsm_output(8 DOWNTO 5)/=STD_LOGIC_VECTOR'("0101"));
  mux_tmp_963 <= MUX_s_1_2_2((NOT (fsm_output(3))), (fsm_output(3)), fsm_output(2));
  and_dcpl_518 <= and_dcpl_129 AND and_dcpl_218;
  or_tmp_953 <= (fsm_output(3)) OR (fsm_output(5)) OR (NOT (fsm_output(6)));
  nand_tmp_69 <= NOT((fsm_output(3)) AND (NOT mux_tmp_171));
  nand_tmp_70 <= CONV_SL_1_1(fsm_output(3 DOWNTO 2)/=STD_LOGIC_VECTOR'("10")) OR
      mux_tmp_171;
  or_tmp_955 <= (fsm_output(2)) OR (NOT (fsm_output(3))) OR (fsm_output(5)) OR (NOT
      (fsm_output(6)));
  or_tmp_958 <= (fsm_output(2)) OR (NOT and_696_cse);
  and_dcpl_527 <= and_dcpl_29 AND CONV_SL_1_1(fsm_output(4 DOWNTO 3)=STD_LOGIC_VECTOR'("01"));
  or_tmp_963 <= (fsm_output(2)) OR (fsm_output(5)) OR (NOT (fsm_output(6)));
  mux_990_nl <= MUX_s_1_2_2(mux_tmp_171, or_216_cse, fsm_output(2));
  mux_tmp_991 <= MUX_s_1_2_2(mux_990_nl, or_tmp_963, fsm_output(1));
  or_dcpl_169 <= (NOT nor_tmp_54) OR (fsm_output(8)) OR or_1158_cse;
  or_dcpl_181 <= or_tmp_233 OR (NOT (fsm_output(8)));
  or_dcpl_185 <= or_dcpl_181 OR (NOT and_dcpl_117);
  or_tmp_968 <= nor_239_cse OR CONV_SL_1_1(fsm_output(7 DOWNTO 6)/=STD_LOGIC_VECTOR'("01"));
  mux_tmp_996 <= MUX_s_1_2_2(mux_tmp_579, or_310_cse, fsm_output(4));
  attention_5_1_384_384_8_48_attn_output_rsci_radr_d_mx0c1 <= and_dcpl_208 AND and_dcpl_188;
  attention_5_1_384_384_8_48_attn_weights_rsci_radr_d_mx0c2 <= and_dcpl_170 AND and_dcpl_175;
  CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm_mx0c6 <= and_dcpl_158 AND and_dcpl_248;
  and_733_nl <= (fsm_output(1)) AND (fsm_output(8));
  nor_442_nl <= NOT((fsm_output(1)) OR (fsm_output(8)));
  mux_576_nl <= MUX_s_1_2_2(and_733_nl, nor_442_nl, fsm_output(0));
  RMS_NORM_LOOP_2_2_dfr_sva_mx0c0 <= mux_576_nl AND and_dcpl_109 AND nor_239_cse
      AND and_dcpl_127;
  RMS_NORM_LOOP_2_2_dfr_sva_mx0c2 <= and_dcpl_368 AND and_dcpl_366 AND and_dcpl_126;
  nor_443_nl <= NOT((fsm_output(3)) OR (NOT (fsm_output(8))));
  nor_444_nl <= NOT((NOT (fsm_output(3))) OR (fsm_output(8)));
  mux_577_nl <= MUX_s_1_2_2(nor_443_nl, nor_444_nl, fsm_output(2));
  RMS_NORM_LOOP_2_2_dfr_sva_mx0c3 <= mux_577_nl AND and_dcpl_109 AND and_dcpl_117
      AND and_692_cse;
  nor_450_nl <= NOT((NOT (fsm_output(3))) OR (NOT (fsm_output(4))) OR (fsm_output(8))
      OR (fsm_output(6)));
  nor_451_nl <= NOT((NOT (fsm_output(3))) OR (fsm_output(4)) OR (NOT (fsm_output(8)))
      OR (fsm_output(6)));
  mux_597_nl <= MUX_s_1_2_2(nor_450_nl, nor_451_nl, fsm_output(2));
  and_736_nl <= (fsm_output(1)) AND mux_597_nl;
  nor_452_nl <= NOT(CONV_SL_1_1(fsm_output(4 DOWNTO 1)/=STD_LOGIC_VECTOR'("0010"))
      OR nand_89_cse);
  mux_598_nl <= MUX_s_1_2_2(and_736_nl, nor_452_nl, fsm_output(0));
  APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c1 <=
      mux_598_nl AND (NOT (fsm_output(7))) AND (fsm_output(5));
  mux_168_nl <= MUX_s_1_2_2(mux_tmp_167, nor_287_cse, fsm_output(1));
  APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c2 <=
      mux_168_nl AND and_dcpl_29 AND and_dcpl_366 AND nor_tmp_104;
  nor_454_nl <= NOT((NOT (fsm_output(1))) OR (fsm_output(3)) OR (fsm_output(4)));
  nor_455_nl <= NOT((fsm_output(1)) OR (NOT and_696_cse));
  mux_600_nl <= MUX_s_1_2_2(nor_454_nl, nor_455_nl, fsm_output(0));
  APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c4 <=
      mux_600_nl AND (fsm_output(6)) AND and_dcpl_29 AND (NOT (fsm_output(5))) AND
      (fsm_output(2));
  nor_456_nl <= NOT((fsm_output(2)) OR (NOT (fsm_output(3))) OR (fsm_output(5)));
  nor_457_nl <= NOT((NOT (fsm_output(2))) OR (fsm_output(3)) OR (NOT (fsm_output(5))));
  mux_601_nl <= MUX_s_1_2_2(nor_456_nl, nor_457_nl, fsm_output(1));
  APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c6 <=
      mux_601_nl AND (fsm_output(6)) AND and_dcpl_29 AND (fsm_output(4)) AND (NOT
      (fsm_output(0)));
  nor_514_cse <= NOT((NOT CACHE_UPDATE_LOOP_1_and_cse) OR (fsm_output(4)));
  or_1222_nl <= (NOT (fsm_output(0))) OR (fsm_output(4)) OR (NOT (fsm_output(2)))
      OR (NOT (fsm_output(6))) OR (fsm_output(5)) OR (NOT((GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2(3))
      AND (fsm_output(7))));
  nor_556_nl <= NOT(CONV_SL_1_1(fsm_output(7 DOWNTO 5)/=STD_LOGIC_VECTOR'("010")));
  nor_521_nl <= NOT((fsm_output(6)) OR not_tmp_35);
  mux_835_nl <= MUX_s_1_2_2(nor_556_nl, nor_521_nl, fsm_output(2));
  nand_228_nl <= NOT(nor_179_cse AND mux_835_nl);
  mux_836_nl <= MUX_s_1_2_2(or_1222_nl, nand_228_nl, fsm_output(3));
  or_969_nl <= (NOT (fsm_output(4))) OR (fsm_output(2)) OR (fsm_output(6)) OR not_tmp_35;
  or_967_nl <= (NOT(CACHE_UPDATE_LOOP_1_and_cse OR (NOT (fsm_output(2))))) OR (fsm_output(6))
      OR not_tmp_35;
  or_965_nl <= (fsm_output(2)) OR (NOT(CONV_SL_1_1(fsm_output(7 DOWNTO 5)=STD_LOGIC_VECTOR'("111"))));
  mux_833_nl <= MUX_s_1_2_2(or_967_nl, or_965_nl, fsm_output(4));
  mux_834_nl <= MUX_s_1_2_2(or_969_nl, mux_833_nl, fsm_output(0));
  or_1223_nl <= (fsm_output(3)) OR mux_834_nl;
  mux_837_nl <= MUX_s_1_2_2(mux_836_nl, or_1223_nl, fsm_output(1));
  GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0_mx0c0 <= NOT(mux_837_nl OR (fsm_output(8)));
  and_778_nl <= (fsm_output(1)) AND (fsm_output(2)) AND (fsm_output(4)) AND (NOT
      (fsm_output(5))) AND (fsm_output(7));
  nor_525_nl <= NOT((fsm_output(1)) OR (fsm_output(2)) OR (fsm_output(4)) OR (NOT
      (fsm_output(5))) OR (fsm_output(7)));
  mux_838_nl <= MUX_s_1_2_2(and_778_nl, nor_525_nl, fsm_output(0));
  GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0_mx0c1 <= mux_838_nl AND and_dcpl_39 AND (NOT
      (fsm_output(3)));
  mux_841_nl <= MUX_s_1_2_2(or_tmp_283, nand_243_cse, fsm_output(4));
  nor_527_nl <= NOT(CONV_SL_1_1(fsm_output(3 DOWNTO 1)/=STD_LOGIC_VECTOR'("110"))
      OR mux_841_nl);
  nand_232_nl <= NOT((fsm_output(1)) AND (fsm_output(4)) AND (fsm_output(6)) AND
      (NOT (fsm_output(5))));
  or_980_nl <= (fsm_output(4)) OR (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2(3)) OR CONV_SL_1_1(fsm_output(6
      DOWNTO 5)/=STD_LOGIC_VECTOR'("10"));
  or_979_nl <= nor_514_cse OR CONV_SL_1_1(fsm_output(6 DOWNTO 5)/=STD_LOGIC_VECTOR'("01"));
  mux_839_nl <= MUX_s_1_2_2(or_980_nl, or_979_nl, fsm_output(1));
  mux_840_nl <= MUX_s_1_2_2(nand_232_nl, mux_839_nl, fsm_output(2));
  nor_528_nl <= NOT((fsm_output(3)) OR mux_840_nl);
  mux_842_nl <= MUX_s_1_2_2(nor_527_nl, nor_528_nl, fsm_output(0));
  GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0_mx0c2 <= mux_842_nl AND and_dcpl_29;
  or_992_cse <= CONV_SL_1_1(fsm_output(2 DOWNTO 1)/=STD_LOGIC_VECTOR'("10"));
  nor_529_nl <= NOT((fsm_output(4)) OR (NOT nor_tmp_54));
  mux_852_nl <= MUX_s_1_2_2(nor_529_nl, nor_tmp_54, or_992_cse);
  nor_530_nl <= NOT((fsm_output(4)) OR (NOT (fsm_output(6))) OR (fsm_output(7)));
  mux_849_nl <= MUX_s_1_2_2((NOT or_tmp_841), mux_857_cse, fsm_output(0));
  mux_850_nl <= MUX_s_1_2_2(nor_530_nl, mux_849_nl, fsm_output(1));
  mux_851_nl <= MUX_s_1_2_2(mux_850_nl, mux_857_cse, fsm_output(2));
  mux_853_nl <= MUX_s_1_2_2(mux_852_nl, mux_851_nl, fsm_output(5));
  mux_855_nl <= MUX_s_1_2_2((NOT nor_tmp_54), or_832_cse, fsm_output(4));
  mux_862_nl <= MUX_s_1_2_2(nor_238_cse, nor_tmp_54, fsm_output(4));
  mux_844_nl <= MUX_s_1_2_2((NOT mux_857_cse), or_tmp_841, or_603_cse);
  mux_846_nl <= MUX_s_1_2_2((NOT mux_862_nl), mux_844_nl, fsm_output(2));
  mux_848_nl <= MUX_s_1_2_2(mux_855_nl, mux_846_nl, fsm_output(5));
  mux_854_nl <= MUX_s_1_2_2((NOT mux_853_nl), mux_848_nl, fsm_output(3));
  GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0_mx0c3 <= mux_854_nl OR (fsm_output(8));
  mux_873_nl <= MUX_s_1_2_2((fsm_output(2)), (NOT (fsm_output(2))), fsm_output(7));
  or_1014_nl <= (NOT (fsm_output(4))) OR (NOT (fsm_output(3))) OR (fsm_output(1))
      OR mux_873_nl;
  or_1012_nl <= (fsm_output(3)) OR (fsm_output(1)) OR nand_224_cse;
  mux_872_nl <= MUX_s_1_2_2(or_1012_nl, or_tmp_859, fsm_output(4));
  mux_874_nl <= MUX_s_1_2_2(or_1014_nl, mux_872_nl, fsm_output(0));
  nand_240_nl <= NOT((fsm_output(6)) AND (NOT mux_874_nl));
  nor_519_nl <= NOT((NOT (fsm_output(1))) OR (NOT (fsm_output(7))) OR (fsm_output(2)));
  nor_518_nl <= NOT((fsm_output(1)) OR nand_224_cse);
  mux_870_nl <= MUX_s_1_2_2(nor_519_nl, nor_518_nl, fsm_output(3));
  nand_53_nl <= NOT((fsm_output(4)) AND mux_870_nl);
  or_1006_nl <= (fsm_output(3)) OR (NOT((fsm_output(1)) AND (fsm_output(7)) AND (fsm_output(2))));
  mux_869_nl <= MUX_s_1_2_2(or_tmp_859, or_1006_nl, fsm_output(4));
  mux_871_nl <= MUX_s_1_2_2(nand_53_nl, mux_869_nl, fsm_output(0));
  or_1226_nl <= (fsm_output(6)) OR mux_871_nl;
  mux_875_nl <= MUX_s_1_2_2(nand_240_nl, or_1226_nl, fsm_output(5));
  CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c0 <= NOT(mux_875_nl OR (fsm_output(8)));
  nor_538_nl <= NOT((NOT (fsm_output(5))) OR (fsm_output(3)) OR (NOT (fsm_output(0)))
      OR (fsm_output(2)));
  nor_539_nl <= NOT((fsm_output(5)) OR (fsm_output(3)) OR (fsm_output(0)) OR (NOT
      (fsm_output(2))));
  mux_877_nl <= MUX_s_1_2_2(nor_538_nl, nor_539_nl, fsm_output(7));
  nand_241_nl <= NOT((NOT((fsm_output(4)) OR (NOT (fsm_output(6))))) AND mux_877_nl);
  nor_540_nl <= NOT((fsm_output(0)) OR (NOT (fsm_output(2))));
  nor_541_nl <= NOT((NOT (fsm_output(0))) OR (fsm_output(2)));
  mux_876_nl <= MUX_s_1_2_2(nor_540_nl, nor_541_nl, fsm_output(3));
  nand_242_nl <= NOT(CONV_SL_1_1(fsm_output(7 DOWNTO 4)=STD_LOGIC_VECTOR'("1011"))
      AND mux_876_nl);
  mux_878_nl <= MUX_s_1_2_2(nand_241_nl, nand_242_nl, fsm_output(1));
  CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c1 <= NOT(mux_878_nl OR (fsm_output(8)));
  CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c3 <= and_dcpl_170 AND and_dcpl_248;
  CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c5 <= and_dcpl_208 AND and_dcpl_248;
  mux_913_nl <= MUX_s_1_2_2(and_dcpl_270, or_992_cse, fsm_output(0));
  APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_mx0c0 <= mux_913_nl AND and_dcpl_137
      AND and_dcpl_133 AND and_696_cse;
  mux_940_nl <= MUX_s_1_2_2(or_tmp_314, or_tmp_315, fsm_output(0));
  LINEAR_FORWARD_NO_MUL_LOOP_5_or_itm_mx0c1 <= (NOT mux_940_nl) AND and_dcpl_129
      AND and_dcpl_218 AND (NOT (fsm_output(4))) AND (fsm_output(2));
  nor_386_nl <= NOT((NOT (fsm_output(1))) OR (fsm_output(4)) OR (fsm_output(5)));
  nor_387_nl <= NOT((fsm_output(1)) OR (NOT and_dcpl_117));
  mux_396_nl <= MUX_s_1_2_2(nor_386_nl, nor_387_nl, fsm_output(0));
  GEMM_3D_FLOAT_LOOP_3_or_3_cse <= (mux_396_nl AND (fsm_output(6)) AND and_dcpl_29
      AND nor_566_cse) OR and_dcpl_240;
  and_352_nl <= and_dcpl_118 AND and_dcpl_188;
  input_rsci_d_d <= MUX_v_40_2_2(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(strm_in_rsci_idat_mxwt),40)),
      RMS_NORM_LOOP_2_slc_RMS_NORM_LOOP_2_mul_67_28_ncse_sva, and_352_nl);
  INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_5_nl <= MUX_v_3_2_2((INIT_2D_MEM_LOOP_2_2_acc_itm(8
      DOWNTO 6)), GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva, and_350_ssc);
  INIT_2D_MEM_LOOP_2_2_and_3_nl <= MUX_v_3_2_2(STD_LOGIC_VECTOR'("000"), INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_5_nl,
      for_for_and_seb);
  INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_6_nl <= MUX_v_4_2_2((INIT_2D_MEM_LOOP_2_2_acc_itm(5
      DOWNTO 2)), APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt, and_350_ssc);
  INIT_2D_MEM_LOOP_2_2_and_5_nl <= MUX_v_4_2_2(STD_LOGIC_VECTOR'("0000"), INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_6_nl,
      for_for_and_seb);
  INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_7_nl <= MUX_v_2_2_2((INIT_2D_MEM_LOOP_2_2_acc_itm(1
      DOWNTO 0)), APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0, and_350_ssc);
  INIT_2D_MEM_LOOP_2_2_and_6_nl <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"), INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_7_nl,
      for_for_and_seb);
  input_rsci_radr_d <= INIT_2D_MEM_LOOP_2_2_and_3_nl & INIT_2D_MEM_LOOP_2_2_and_5_nl
      & INIT_2D_MEM_LOOP_2_2_and_6_nl;
  nor_393_nl <= NOT(CONV_SL_1_1(fsm_output(6 DOWNTO 4)/=STD_LOGIC_VECTOR'("011"))
      OR (nand_184_cse AND (fsm_output(2))));
  nor_394_nl <= NOT((fsm_output(4)) OR (fsm_output(5)) OR (NOT((fsm_output(6)) AND
      (fsm_output(2)))));
  mux_431_nl <= MUX_s_1_2_2(nor_393_nl, nor_394_nl, fsm_output(0));
  input_rsci_re_d_pff <= mux_431_nl AND and_dcpl_12 AND (fsm_output(3)) AND (fsm_output(1));
  input_rsci_wadr_d <= INIT_2D_MEM_LOOP_2_2_acc_itm;
  or_1207_nl <= CONV_SL_1_1(fsm_output(5 DOWNTO 3)/=STD_LOGIC_VECTOR'("000"));
  nand_186_nl <= NOT(CONV_SL_1_1(fsm_output(5 DOWNTO 3)=STD_LOGIC_VECTOR'("111")));
  mux_432_nl <= MUX_s_1_2_2(or_1207_nl, nand_186_nl, fsm_output(2));
  input_rsci_we_d_pff <= (NOT(mux_432_nl OR (fsm_output(6)))) AND and_dcpl_12 AND
      and_dcpl_126;
  INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_3_nl <= MUX_v_4_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd,
      (LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z(39
      DOWNTO 36)), and_342_ssc);
  INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_6_nl <= MUX_v_3_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_1,
      (LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z(35
      DOWNTO 33)), and_342_ssc);
  INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_7_nl <= MUX_v_4_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_2,
      (LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z(32
      DOWNTO 29)), and_342_ssc);
  INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_8_nl <= MUX_s_1_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_3,
      (LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z(28)),
      and_342_ssc);
  INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_9_nl <= MUX_v_3_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_4,
      (LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z(27
      DOWNTO 25)), and_342_ssc);
  INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_10_nl <= MUX_v_9_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_5,
      (LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z(24
      DOWNTO 16)), and_342_ssc);
  INIT_2D_MEM_LOOP_2_1_and_2_nl <= MUX_v_24_2_2(STD_LOGIC_VECTOR'("000000000000000000000000"),
      (INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_3_nl & INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_6_nl
      & INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_7_nl & INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_8_nl
      & INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_9_nl & INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_10_nl),
      INIT_2D_MEM_LOOP_2_3_nor_seb);
  INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_4_nl <= MUX_v_16_2_2((INIT_2D_MEM_LOOP_2_1_asn_psp(15
      DOWNTO 0)), (LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z(15
      DOWNTO 0)), and_342_ssc);
  INIT_2D_MEM_LOOP_2_1_and_3_nl <= MUX_v_16_2_2(STD_LOGIC_VECTOR'("0000000000000000"),
      INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_4_nl, INIT_2D_MEM_LOOP_2_3_nor_seb);
  output_rsci_d_d <= INIT_2D_MEM_LOOP_2_1_and_2_nl & INIT_2D_MEM_LOOP_2_1_and_3_nl;
  output_rsci_radr_d <= MUX_v_9_2_2(INIT_2D_MEM_LOOP_2_2_acc_itm, SF_LOOP_3_acc_17_itm_8_0,
      and_dcpl_331);
  or_507_nl <= CONV_SL_1_1(fsm_output(7 DOWNTO 4)/=STD_LOGIC_VECTOR'("1000"));
  mux_423_nl <= MUX_s_1_2_2(or_507_nl, or_1054_cse, fsm_output(3));
  mux_424_nl <= MUX_s_1_2_2(or_tmp_381, mux_423_nl, fsm_output(1));
  output_rsci_re_d_pff <= (NOT mux_424_nl) AND (fsm_output(8)) AND (fsm_output(2))
      AND (fsm_output(0));
  mux_427_nl <= MUX_s_1_2_2(or_310_cse, or_tmp_260, fsm_output(2));
  and_336_nl <= (NOT mux_427_nl) AND (fsm_output(8)) AND nor_392_cse AND and_dcpl_126;
  output_rsci_wadr_d <= MUX_v_9_2_2(SF_LOOP_3_acc_17_itm_8_0, INIT_2D_MEM_LOOP_2_2_acc_itm,
      and_336_nl);
  or_512_nl <= CONV_SL_1_1(fsm_output(7 DOWNTO 2)/=STD_LOGIC_VECTOR'("010111"));
  mux_425_nl <= MUX_s_1_2_2(or_tmp_381, or_1330_cse, fsm_output(2));
  mux_426_nl <= MUX_s_1_2_2(or_512_nl, mux_425_nl, fsm_output(0));
  output_rsci_we_d_pff <= (NOT mux_426_nl) AND (fsm_output(8)) AND (NOT (fsm_output(1)));
  QUANTIZE_ACTIVATION_LOOP_5_mux1h_1_nl <= MUX1HOT_v_3_3_2((reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd
      & reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1), GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva,
      GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0, STD_LOGIC_VECTOR'( and_dcpl_316 & and_dcpl_317
      & and_dcpl_298));
  QUANTIZE_ACTIVATION_LOOP_5_mux1h_3_nl <= MUX1HOT_v_4_3_2(APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp_4,
      APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt, LINEAR_FORWARD_NO_MUL_LOOP_4_ki_4_0_sva_3_0,
      STD_LOGIC_VECTOR'( and_dcpl_316 & and_dcpl_317 & and_dcpl_298));
  QUANTIZE_ACTIVATION_LOOP_5_mux1h_4_nl <= MUX1HOT_v_2_3_2(CACHE_UPDATE_LOOP_3_k_5_0_sva_1_1_0,
      APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0, STD_LOGIC_VECTOR'( reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd
      & reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd_1), STD_LOGIC_VECTOR'( and_dcpl_316
      & and_dcpl_317 & and_dcpl_298));
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_radr_d <= QUANTIZE_ACTIVATION_LOOP_5_mux1h_1_nl
      & QUANTIZE_ACTIVATION_LOOP_5_mux1h_3_nl & QUANTIZE_ACTIVATION_LOOP_5_mux1h_4_nl;
  mux_420_nl <= MUX_s_1_2_2(nand_tmp_21, mux_tmp_418, LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_slc_LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_conc_1_1_1_0_svs(1));
  mux_419_nl <= MUX_s_1_2_2(mux_tmp_418, nand_tmp_21, LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_slc_LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_conc_1_1_1_0_svs(1));
  mux_421_nl <= MUX_s_1_2_2(mux_420_nl, mux_419_nl, LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_slc_LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_conc_1_1_1_0_svs(0));
  or_504_nl <= (NOT (CACHE_UPDATE_LOOP_3_k_5_0_sva_1_1_0(0))) OR CONV_SL_1_1(fsm_output(2
      DOWNTO 1)/=STD_LOGIC_VECTOR'("01"));
  or_503_nl <= (CACHE_UPDATE_LOOP_3_k_5_0_sva_1_1_0(0)) OR CONV_SL_1_1(fsm_output(2
      DOWNTO 1)/=STD_LOGIC_VECTOR'("01"));
  mux_416_nl <= MUX_s_1_2_2(or_504_nl, or_503_nl, CACHE_UPDATE_LOOP_3_k_5_0_sva_1_1_0(1));
  mux_422_nl <= MUX_s_1_2_2(mux_421_nl, mux_416_nl, fsm_output(0));
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_re_d_pff <= (NOT mux_422_nl)
      AND and_dcpl_138 AND and_dcpl_201;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_wadr_d <= GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva
      & APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt & APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_we_d_pff <= and_dcpl_290
      AND and_dcpl_120;
  INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_1_nl <= MUX_v_4_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd,
      (rms_norm_384_div_cmp_z_oreg(39 DOWNTO 36)), and_321_ssc);
  INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_5_nl <= MUX_v_3_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_1,
      (rms_norm_384_div_cmp_z_oreg(35 DOWNTO 33)), and_321_ssc);
  INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_6_nl <= MUX_v_4_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_2,
      (rms_norm_384_div_cmp_z_oreg(32 DOWNTO 29)), and_321_ssc);
  INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_7_nl <= MUX_s_1_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_3,
      (rms_norm_384_div_cmp_z_oreg(28)), and_321_ssc);
  INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_8_nl <= MUX_v_3_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_4,
      (rms_norm_384_div_cmp_z_oreg(27 DOWNTO 25)), and_321_ssc);
  INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_9_nl <= MUX_v_9_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_5,
      (rms_norm_384_div_cmp_z_oreg(24 DOWNTO 16)), and_321_ssc);
  INIT_2D_MEM_LOOP_2_and_2_nl <= MUX_v_24_2_2(STD_LOGIC_VECTOR'("000000000000000000000000"),
      (INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_1_nl & INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_5_nl
      & INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_6_nl & INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_7_nl
      & INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_8_nl & INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_9_nl),
      mux_415_seb);
  INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_2_nl <= MUX_v_16_2_2((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(15
      DOWNTO 0)), (rms_norm_384_div_cmp_z_oreg(15 DOWNTO 0)), and_321_ssc);
  INIT_2D_MEM_LOOP_2_and_3_nl <= MUX_v_16_2_2(STD_LOGIC_VECTOR'("0000000000000000"),
      INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_2_nl, mux_415_seb);
  attention_5_1_384_384_8_48_q_proj_re_rsci_d_d <= INIT_2D_MEM_LOOP_2_and_2_nl &
      INIT_2D_MEM_LOOP_2_and_3_nl;
  INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_nl <= MUX_v_4_2_2((reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1(8
      DOWNTO 5)), RESHAPE_2D_TO_3D_LOOP_3_acc_11_psp_1_mx0w0, and_dcpl_306);
  INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_3_nl <= MUX_s_1_2_2((reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1(4)),
      (z_out_35(0)), and_dcpl_306);
  INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_4_nl <= MUX_v_4_2_2((reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1(3
      DOWNTO 0)), ((reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1(0)) & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_0
      & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1), and_dcpl_306);
  attention_5_1_384_384_8_48_q_proj_re_rsci_radr_d <= INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_nl
      & INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_3_nl & INIT_2D_MEM_LOOP_2_INIT_2D_MEM_LOOP_2_mux_4_nl;
  or_485_nl <= CONV_SL_1_1(fsm_output(7 DOWNTO 2)/=STD_LOGIC_VECTOR'("101001"));
  or_484_nl <= (fsm_output(2)) OR mux_tmp_401;
  mux_407_nl <= MUX_s_1_2_2(or_485_nl, or_484_nl, fsm_output(1));
  attention_5_1_384_384_8_48_q_proj_re_rsci_re_d_pff <= NOT(mux_407_nl OR (fsm_output(8))
      OR (fsm_output(0)));
  attention_5_1_384_384_8_48_q_proj_re_rsci_wadr_d <= reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1;
  or_497_nl <= CONV_SL_1_1(fsm_output(7 DOWNTO 3)/=STD_LOGIC_VECTOR'("01011"));
  mux_412_nl <= MUX_s_1_2_2(or_tmp_370, or_497_nl, fsm_output(2));
  or_495_nl <= CONV_SL_1_1(fsm_output(7 DOWNTO 2)/=STD_LOGIC_VECTOR'("010101"));
  mux_413_nl <= MUX_s_1_2_2(mux_412_nl, or_495_nl, fsm_output(0));
  attention_5_1_384_384_8_48_q_proj_re_rsci_we_d_pff <= (NOT mux_413_nl) AND (NOT
      (fsm_output(8))) AND (fsm_output(1));
  INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_2_nl <= MUX_v_4_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd,
      (rms_norm_384_div_cmp_z_oreg(39 DOWNTO 36)), and_317_ssc);
  INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_11_nl <= MUX_v_3_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_1,
      (rms_norm_384_div_cmp_z_oreg(35 DOWNTO 33)), and_317_ssc);
  INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_12_nl <= MUX_v_4_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_2,
      (rms_norm_384_div_cmp_z_oreg(32 DOWNTO 29)), and_317_ssc);
  INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_13_nl <= MUX_s_1_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_3,
      (rms_norm_384_div_cmp_z_oreg(28)), and_317_ssc);
  INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_14_nl <= MUX_v_3_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_4,
      (rms_norm_384_div_cmp_z_oreg(27 DOWNTO 25)), and_317_ssc);
  INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_15_nl <= MUX_v_9_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_5,
      (rms_norm_384_div_cmp_z_oreg(24 DOWNTO 16)), and_317_ssc);
  INIT_2D_MEM_LOOP_2_1_and_1_nl <= MUX_v_24_2_2(STD_LOGIC_VECTOR'("000000000000000000000000"),
      (INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_2_nl & INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_11_nl
      & INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_12_nl & INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_13_nl
      & INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_14_nl & INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_15_nl),
      INIT_2D_MEM_LOOP_2_1_nor_seb);
  INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_5_nl <= MUX_v_16_2_2((INIT_2D_MEM_LOOP_2_1_asn_psp(15
      DOWNTO 0)), (rms_norm_384_div_cmp_z_oreg(15 DOWNTO 0)), and_317_ssc);
  INIT_2D_MEM_LOOP_2_1_and_4_nl <= MUX_v_16_2_2(STD_LOGIC_VECTOR'("0000000000000000"),
      INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_5_nl, INIT_2D_MEM_LOOP_2_1_nor_seb);
  attention_5_1_384_384_8_48_k_proj_re_rsci_d_d <= INIT_2D_MEM_LOOP_2_1_and_1_nl
      & INIT_2D_MEM_LOOP_2_1_and_4_nl;
  INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_3_nl <= MUX_v_4_2_2((INIT_2D_MEM_LOOP_2_2_acc_itm(8
      DOWNTO 5)), z_out_12, and_dcpl_306);
  INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_8_nl <= MUX_s_1_2_2((INIT_2D_MEM_LOOP_2_2_acc_itm(4)),
      (z_out_31(0)), and_dcpl_306);
  INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_9_nl <= MUX_v_4_2_2((INIT_2D_MEM_LOOP_2_2_acc_itm(3
      DOWNTO 0)), (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(3 DOWNTO 0)), and_dcpl_306);
  attention_5_1_384_384_8_48_k_proj_re_rsci_radr_d <= INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_3_nl
      & INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_8_nl & INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_9_nl;
  and_314_nl <= (NOT mux_tmp_403) AND and_dcpl_303;
  attention_5_1_384_384_8_48_k_proj_re_rsci_wadr_d <= MUX_v_9_2_2(SF_LOOP_3_acc_17_itm_8_0,
      INIT_2D_MEM_LOOP_2_2_acc_itm, and_314_nl);
  or_488_nl <= (fsm_output(3)) OR (fsm_output(4)) OR (NOT (fsm_output(7))) OR (fsm_output(6));
  or_487_nl <= (fsm_output(3)) OR (NOT (fsm_output(4))) OR (fsm_output(7)) OR (NOT
      (fsm_output(6)));
  mux_408_nl <= MUX_s_1_2_2(or_488_nl, or_487_nl, fsm_output(2));
  mux_409_nl <= MUX_s_1_2_2(or_tmp_353, mux_408_nl, fsm_output(1));
  attention_5_1_384_384_8_48_k_proj_re_rsci_we_d_pff <= (NOT mux_409_nl) AND and_dcpl_303;
  INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_2_nl <= MUX_v_4_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd,
      (LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z(39
      DOWNTO 36)), and_309_ssc);
  INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_11_nl <= MUX_v_3_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_1,
      (LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z(35
      DOWNTO 33)), and_309_ssc);
  INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_12_nl <= MUX_v_4_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_2,
      (LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z(32
      DOWNTO 29)), and_309_ssc);
  INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_13_nl <= MUX_s_1_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_3,
      (LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z(28)),
      and_309_ssc);
  INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_14_nl <= MUX_v_3_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_4,
      (LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z(27
      DOWNTO 25)), and_309_ssc);
  INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_15_nl <= MUX_v_9_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_5,
      (LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z(24
      DOWNTO 16)), and_309_ssc);
  INIT_2D_MEM_LOOP_2_2_and_2_nl <= MUX_v_24_2_2(STD_LOGIC_VECTOR'("000000000000000000000000"),
      (INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_2_nl & INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_11_nl
      & INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_12_nl & INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_13_nl
      & INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_14_nl & INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_15_nl),
      INIT_2D_MEM_LOOP_2_2_nor_seb);
  INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_10_nl <= MUX_v_16_2_2((INIT_2D_MEM_LOOP_2_2_asn_psp(15
      DOWNTO 0)), (LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z(15
      DOWNTO 0)), and_309_ssc);
  INIT_2D_MEM_LOOP_2_2_and_7_nl <= MUX_v_16_2_2(STD_LOGIC_VECTOR'("0000000000000000"),
      INIT_2D_MEM_LOOP_2_2_INIT_2D_MEM_LOOP_2_2_mux_10_nl, INIT_2D_MEM_LOOP_2_2_nor_seb);
  attention_5_1_384_384_8_48_v_proj_re_rsci_d_d <= INIT_2D_MEM_LOOP_2_2_and_2_nl
      & INIT_2D_MEM_LOOP_2_2_and_7_nl;
  RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_mux_nl <= MUX_v_4_2_2((SF_LOOP_3_acc_17_itm_8_0(8
      DOWNTO 5)), z_out_12, and_dcpl_284);
  RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_mux_3_nl <= MUX_s_1_2_2((SF_LOOP_3_acc_17_itm_8_0(4)),
      (z_out_31(0)), and_dcpl_284);
  RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_mux_4_nl <= MUX_v_4_2_2((SF_LOOP_3_acc_17_itm_8_0(3
      DOWNTO 0)), (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(3 DOWNTO 0)), and_dcpl_284);
  attention_5_1_384_384_8_48_v_proj_re_rsci_radr_d <= RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_mux_nl
      & RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_mux_3_nl & RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_mux_4_nl;
  or_473_nl <= CONV_SL_1_1(fsm_output(7 DOWNTO 3)/=STD_LOGIC_VECTOR'("10101"));
  mux_402_nl <= MUX_s_1_2_2(or_473_nl, mux_tmp_401, fsm_output(1));
  attention_5_1_384_384_8_48_v_proj_re_rsci_re_d_pff <= (NOT mux_402_nl) AND and_dcpl_285
      AND (NOT (fsm_output(0)));
  and_302_nl <= (NOT mux_tmp_403) AND and_dcpl_133 AND (NOT (fsm_output(0)));
  attention_5_1_384_384_8_48_v_proj_re_rsci_wadr_d <= MUX_v_9_2_2(INIT_2D_MEM_LOOP_2_2_acc_itm,
      SF_LOOP_3_acc_17_itm_8_0, and_302_nl);
  or_475_nl <= (NOT (fsm_output(1))) OR (NOT (fsm_output(2))) OR (fsm_output(3))
      OR (NOT (fsm_output(4))) OR (fsm_output(7)) OR (NOT (fsm_output(6)));
  mux_404_nl <= MUX_s_1_2_2(mux_tmp_403, or_475_nl, fsm_output(0));
  attention_5_1_384_384_8_48_v_proj_re_rsci_we_d_pff <= (NOT mux_404_nl) AND and_dcpl_133;
  attention_5_1_384_384_8_48_q_proj_rsci_radr_d <= RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_4_rmff_3_1
      & RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_4_rmff_0 & RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_9_rmff
      & RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_7_rmff & RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_8_rmff_2
      & RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_8_rmff_1_0;
  or_468_nl <= (fsm_output(0)) OR (NOT (fsm_output(2)));
  mux_400_nl <= MUX_s_1_2_2(or_468_nl, nor_tmp_104, LINEAR_FORWARD_NO_MUL_LOOP_5_or_itm);
  attention_5_1_384_384_8_48_q_proj_rsci_re_d_pff <= mux_400_nl AND and_dcpl_129
      AND and_dcpl_218 AND (NOT (fsm_output(4))) AND (fsm_output(3)) AND (NOT (fsm_output(1)));
  attention_5_1_384_384_8_48_q_proj_rsci_wadr_d <= RESHAPE_2D_TO_3D_LOOP_3_acc_11_psp_1
      & (LINEAR_FORWARD_NO_MUL_LOOP_4_ki_4_0_sva_3_0(0)) & (reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1(0))
      & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_0 & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1;
  attention_5_1_384_384_8_48_q_proj_rsci_we_d_pff <= and_dcpl_189 AND and_dcpl_282;
  attention_5_1_384_384_8_48_k_proj_rsci_radr_d <= RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_4_rmff_3_1
      & RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_4_rmff_0 & RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_9_rmff
      & RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_7_rmff & RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_8_rmff_2
      & RESHAPE_2D_TO_3D_LOOP_3_1_mux1h_8_rmff_1_0;
  attention_5_1_384_384_8_48_k_proj_rsci_wadr_d <= APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp_4
      & (APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(0)) & (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(3
      DOWNTO 0));
  attention_5_1_384_384_8_48_v_proj_rsci_radr_d <= z_out_12 & (z_out_31(0)) & (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(3
      DOWNTO 0));
  attention_5_1_384_384_8_48_v_proj_rsci_re_d_pff <= and_dcpl_257 AND and_dcpl_271
      AND and_74_cse;
  attention_5_1_384_384_8_48_v_proj_rsci_wadr_d <= APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp_4
      & (APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(0)) & (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(3
      DOWNTO 0));
  attention_5_1_384_384_8_48_v_proj_rsci_we_d_pff <= and_dcpl_196;
  APPLY_ROTARY_POS_EMB_LOOP_6_acc_7_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_mul_3_itm)
      + SIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_mul_4_itm), 56));
  attention_5_1_384_384_8_48_q_embed_rsci_d_d <= APPLY_ROTARY_POS_EMB_LOOP_6_acc_7_nl(55
      DOWNTO 16);
  attention_5_1_384_384_8_48_q_embed_rsci_radr_d <= z_out_12 & (z_out_31(0)) & (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(3
      DOWNTO 0));
  attention_5_1_384_384_8_48_q_embed_rsci_re_d_pff <= and_dcpl_241;
  attention_5_1_384_384_8_48_q_embed_rsci_wadr_d <= APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp_4
      & (APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(0)) & (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(3
      DOWNTO 0));
  attention_5_1_384_384_8_48_q_embed_rsci_we_d_pff <= and_dcpl_233 AND and_dcpl_107;
  APPLY_ROTARY_POS_EMB_LOOP_6_acc_14_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_mul_8_itm)
      + SIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_mul_9_itm), 56));
  attention_5_1_384_384_8_48_k_embed_rsci_d_d <= APPLY_ROTARY_POS_EMB_LOOP_6_acc_14_nl(55
      DOWNTO 16);
  attention_5_1_384_384_8_48_k_embed_rsci_radr_d <= RESHAPE_2D_TO_3D_LOOP_3_acc_11_psp_1_mx0w0
      & (z_out_35(0)) & (reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1(0)) & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_0
      & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1;
  attention_5_1_384_384_8_48_k_embed_rsci_re_d_pff <= and_dcpl_257 AND and_dcpl_271
      AND and_72_cse;
  attention_5_1_384_384_8_48_k_embed_rsci_wadr_d <= APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp_4
      & (APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(0)) & (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(3
      DOWNTO 0));
  and_278_nl <= and_dcpl_257 AND and_dcpl_254 AND and_72_cse;
  attention_5_1_384_384_8_48_k_cache_upd_rsci_d_d <= MUX_v_40_2_2(CACHE_UPDATE_LOOP_3_qr_sva_1,
      attention_5_1_384_384_8_48_k_embed_rsci_q_d, and_278_nl);
  attention_5_1_384_384_8_48_k_cache_upd_rsci_radr_d <= z_out_33 & (z_out_10(2 DOWNTO
      0)) & (z_out_36_2_0(0)) & (reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1(0)) & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_0
      & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1;
  attention_5_1_384_384_8_48_k_cache_upd_rsci_re_d_pff <= and_dcpl_263;
  attention_5_1_384_384_8_48_k_cache_upd_rsci_wadr_d <= CACHE_UPDATE_LOOP_3_acc_18_psp_1
      & (APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva(2 DOWNTO 0)) & (CACHE_UPDATE_LOOP_3_qif_acc_3_ncse_2_0(0))
      & (reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1(0)) & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_0
      & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1;
  attention_5_1_384_384_8_48_k_cache_upd_rsci_we_d_pff <= and_dcpl_233 AND and_dcpl_175;
  and_271_nl <= and_dcpl_257 AND and_dcpl_254 AND and_74_cse;
  attention_5_1_384_384_8_48_v_cache_upd_rsci_d_d <= MUX_v_40_2_2(CACHE_UPDATE_LOOP_3_1_qr_sva_1,
      attention_5_1_384_384_8_48_v_proj_rsci_q_d, and_271_nl);
  attention_5_1_384_384_8_48_v_cache_upd_rsci_radr_d <= z_out_32 & (z_out_10(2 DOWNTO
      0)) & (z_out_34_2_0(0)) & (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(3 DOWNTO 0));
  attention_5_1_384_384_8_48_v_cache_upd_rsci_re_d_pff <= and_dcpl_228;
  attention_5_1_384_384_8_48_v_cache_upd_rsci_wadr_d <= CACHE_UPDATE_LOOP_3_1_acc_18_psp_1
      & (reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_ftd(0)) & reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd
      & reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd_1 & (RESHAPE_2D_TO_3D_LOOP_3_2_mux_3_itm_2_0(0))
      & (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(3 DOWNTO 0));
  attention_5_1_384_384_8_48_k_proj_transposed_rsci_radr_d <= z_out_32 & (GEMM_3D_FLOAT_LOOP_4_acc_17_sdt_1(6
      DOWNTO 0)) & reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1;
  attention_5_1_384_384_8_48_k_proj_transposed_rsci_wadr_d <= APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt
      & (INIT_2D_MEM_LOOP_2_2_acc_itm(6 DOWNTO 0)) & reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1;
  attention_5_1_384_384_8_48_k_proj_transposed_rsci_we_d_pff <= and_dcpl_233 AND
      and_dcpl_128;
  SF_LOOP_3_SF_LOOP_3_SF_LOOP_3_acc_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_58_itm)
      + SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd,
      1),2)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd,
      1),2)) & STD_LOGIC_VECTOR'( "0000") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd,
      1),2)) & STD_LOGIC_VECTOR'( "00") & reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd &
      '0' & reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd,
      1),2)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd,
      1),2)) & STD_LOGIC_VECTOR'( "00") & reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd &
      '0' & reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd & STD_LOGIC_VECTOR'( "000") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd,
      1),2)) & '0' & reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd & '0' & reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd),
      38));
  FIXED32_MIN_or_nl <= (and_dcpl_242 AND and_dcpl_248) OR and_dcpl_240;
  and_259_nl <= and_dcpl_208 AND and_dcpl_210;
  FIXED32_MIN_mux1h_1_nl <= MUX1HOT_v_40_3_2(z_out, STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_SF_LOOP_3_SF_LOOP_3_acc_nl),
      38),40)), (SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_z(39 DOWNTO 0)), STD_LOGIC_VECTOR'(
      FIXED32_MIN_or_nl & and_dcpl_238 & and_259_nl));
  or_462_nl <= (NOT (fsm_output(1))) OR (fsm_output(3)) OR (fsm_output(4)) OR (fsm_output(5))
      OR (fsm_output(8)) OR (NOT (fsm_output(6)));
  or_460_nl <= (NOT (fsm_output(4))) OR (fsm_output(8)) OR (NOT (fsm_output(6)));
  or_458_nl <= (fsm_output(4)) OR (fsm_output(5)) OR (NOT (fsm_output(8))) OR (fsm_output(6));
  mux_397_nl <= MUX_s_1_2_2(or_460_nl, or_458_nl, fsm_output(3));
  or_457_nl <= (NOT (fsm_output(3))) OR (NOT (fsm_output(4))) OR (fsm_output(5))
      OR (fsm_output(8)) OR (NOT (fsm_output(6)));
  mux_398_nl <= MUX_s_1_2_2(mux_397_nl, or_457_nl, fsm_output(1));
  mux_399_nl <= MUX_s_1_2_2(or_462_nl, mux_398_nl, fsm_output(0));
  nor_573_nl <= NOT(mux_399_nl OR (NOT (fsm_output(7))) OR (fsm_output(2)));
  attention_5_1_384_384_8_48_attn_weights_rsci_d_d <= MUX_v_40_2_2(STD_LOGIC_VECTOR'("0000000000000000000000000000000000000000"),
      FIXED32_MIN_mux1h_1_nl, nor_573_nl);
  GEMM_3D_FLOAT_LOOP_3_or_nl <= and_dcpl_243 OR and_dcpl_245 OR and_dcpl_246 OR and_dcpl_247
      OR and_dcpl_228;
  GEMM_3D_FLOAT_LOOP_3_mux1h_4_nl <= MUX1HOT_v_4_3_2(APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp_4,
      z_out_12, z_out_35, STD_LOGIC_VECTOR'( and_dcpl_241 & GEMM_3D_FLOAT_LOOP_3_or_nl
      & attention_5_1_384_384_8_48_attn_weights_rsci_radr_d_mx0c2));
  GEMM_3D_FLOAT_LOOP_3_or_5_nl <= and_dcpl_243 OR and_dcpl_246 OR and_dcpl_247 OR
      and_dcpl_228;
  GEMM_3D_FLOAT_LOOP_3_mux1h_12_nl <= MUX1HOT_s_1_4_2((APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(0)),
      (z_out_31(0)), (APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0(0)), (z_out_35(0)),
      STD_LOGIC_VECTOR'( and_dcpl_241 & GEMM_3D_FLOAT_LOOP_3_or_5_nl & attention_5_1_384_384_8_48_attn_weights_rsci_radr_d_mx0c2
      & and_dcpl_245));
  GEMM_3D_FLOAT_LOOP_3_or_1_nl <= and_dcpl_241 OR and_dcpl_243 OR and_dcpl_247;
  GEMM_3D_FLOAT_LOOP_3_or_2_nl <= and_dcpl_246 OR and_dcpl_228;
  GEMM_3D_FLOAT_LOOP_3_mux1h_13_nl <= MUX1HOT_s_1_3_2(reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1,
      (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(0)), (GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva(0)),
      STD_LOGIC_VECTOR'( GEMM_3D_FLOAT_LOOP_3_or_1_nl & and_dcpl_245 & GEMM_3D_FLOAT_LOOP_3_or_2_nl));
  GEMM_3D_FLOAT_LOOP_3_and_1_nl <= GEMM_3D_FLOAT_LOOP_3_mux1h_13_nl AND (NOT attention_5_1_384_384_8_48_attn_weights_rsci_radr_d_mx0c2);
  attention_5_1_384_384_8_48_attn_weights_rsci_radr_d <= GEMM_3D_FLOAT_LOOP_3_mux1h_4_nl
      & GEMM_3D_FLOAT_LOOP_3_mux1h_12_nl & GEMM_3D_FLOAT_LOOP_3_and_1_nl;
  and_702_nl <= CONV_SL_1_1(fsm_output(6 DOWNTO 3)=STD_LOGIC_VECTOR'("1011"));
  nor_381_nl <= NOT(CONV_SL_1_1(fsm_output(6 DOWNTO 3)/=STD_LOGIC_VECTOR'("1010")));
  mux_390_nl <= MUX_s_1_2_2(and_702_nl, nor_381_nl, fsm_output(2));
  mux_389_nl <= MUX_s_1_2_2(or_216_cse, (NOT (fsm_output(6))), fsm_output(4));
  nor_382_nl <= NOT(CONV_SL_1_1(fsm_output(3 DOWNTO 2)/=STD_LOGIC_VECTOR'("01"))
      OR mux_389_nl);
  mux_391_nl <= MUX_s_1_2_2(mux_390_nl, nor_382_nl, fsm_output(1));
  and_703_nl <= CONV_SL_1_1(fsm_output(6 DOWNTO 2)=STD_LOGIC_VECTOR'("10111"));
  and_704_nl <= CONV_SL_1_1(fsm_output(6 DOWNTO 2)=STD_LOGIC_VECTOR'("01111"));
  mux_388_nl <= MUX_s_1_2_2(and_703_nl, and_704_nl, fsm_output(1));
  mux_392_nl <= MUX_s_1_2_2(mux_391_nl, mux_388_nl, fsm_output(0));
  attention_5_1_384_384_8_48_attn_weights_rsci_re_d_pff <= mux_392_nl AND and_dcpl_29;
  GEMM_3D_FLOAT_LOOP_3_mux1h_2_nl <= MUX1HOT_v_4_3_2(z_out_12, APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp_4,
      APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt, STD_LOGIC_VECTOR'( and_dcpl_234 & GEMM_3D_FLOAT_LOOP_3_or_3_cse
      & and_dcpl_238));
  GEMM_3D_FLOAT_LOOP_3_mux1h_10_nl <= MUX1HOT_s_1_3_2((z_out_31(0)), (APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(0)),
      (LINEAR_FORWARD_NO_MUL_LOOP_4_ki_4_0_sva_3_0(0)), STD_LOGIC_VECTOR'( and_dcpl_234
      & GEMM_3D_FLOAT_LOOP_3_or_3_cse & and_dcpl_238));
  GEMM_3D_FLOAT_LOOP_3_GEMM_3D_FLOAT_LOOP_3_mux_nl <= MUX_s_1_2_2(reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1,
      (GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva(0)), and_dcpl_240);
  attention_5_1_384_384_8_48_attn_weights_rsci_wadr_d <= GEMM_3D_FLOAT_LOOP_3_mux1h_2_nl
      & GEMM_3D_FLOAT_LOOP_3_mux1h_10_nl & GEMM_3D_FLOAT_LOOP_3_GEMM_3D_FLOAT_LOOP_3_mux_nl;
  nor_383_nl <= NOT(CONV_SL_1_1(fsm_output(6 DOWNTO 1)/=STD_LOGIC_VECTOR'("100001")));
  nor_384_nl <= NOT((fsm_output(3)) OR (NOT((fsm_output(4)) AND (fsm_output(6)))));
  and_706_nl <= CONV_SL_1_1(fsm_output(6 DOWNTO 3)=STD_LOGIC_VECTOR'("0111"));
  mux_393_nl <= MUX_s_1_2_2(nor_384_nl, and_706_nl, fsm_output(2));
  nor_385_nl <= NOT(CONV_SL_1_1(fsm_output(6 DOWNTO 2)/=STD_LOGIC_VECTOR'("10110")));
  mux_394_nl <= MUX_s_1_2_2(mux_393_nl, nor_385_nl, fsm_output(1));
  mux_395_nl <= MUX_s_1_2_2(nor_383_nl, mux_394_nl, fsm_output(0));
  attention_5_1_384_384_8_48_attn_weights_rsci_we_d_pff <= mux_395_nl AND and_dcpl_29;
  nor_379_nl <= NOT((fsm_output(5)) OR (NOT (fsm_output(8))) OR (fsm_output(6)));
  nor_380_nl <= NOT((NOT (fsm_output(5))) OR (fsm_output(8)) OR (NOT (fsm_output(6))));
  mux_387_nl <= MUX_s_1_2_2(nor_379_nl, nor_380_nl, fsm_output(4));
  nor_572_nl <= NOT((NOT(mux_387_nl AND (fsm_output(7)))) OR or_dcpl_116);
  attention_5_1_384_384_8_48_attn_output_rsci_d_d <= MUX_v_40_2_2(STD_LOGIC_VECTOR'("0000000000000000000000000000000000000000"),
      z_out, nor_572_nl);
  GEMM_3D_FLOAT_LOOP_3_1_GEMM_3D_FLOAT_LOOP_3_1_mux_nl <= MUX_v_4_2_2(APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp_4,
      z_out_12, attention_5_1_384_384_8_48_attn_output_rsci_radr_d_mx0c1);
  GEMM_3D_FLOAT_LOOP_3_1_GEMM_3D_FLOAT_LOOP_3_1_mux_1_nl <= MUX_s_1_2_2((APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(0)),
      (z_out_31(0)), attention_5_1_384_384_8_48_attn_output_rsci_radr_d_mx0c1);
  attention_5_1_384_384_8_48_attn_output_rsci_radr_d <= GEMM_3D_FLOAT_LOOP_3_1_GEMM_3D_FLOAT_LOOP_3_1_mux_nl
      & GEMM_3D_FLOAT_LOOP_3_1_GEMM_3D_FLOAT_LOOP_3_1_mux_1_nl & (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(3
      DOWNTO 0));
  mux_385_nl <= MUX_s_1_2_2(or_tmp_315, or_tmp_314, fsm_output(0));
  attention_5_1_384_384_8_48_attn_output_rsci_re_d_pff <= (NOT mux_385_nl) AND nor_tmp_54
      AND and_dcpl_218 AND and_dcpl_217;
  INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_nl <= MUX_v_4_2_2(z_out_12, APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp_4,
      and_dcpl_227);
  INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_1_nl <= MUX_s_1_2_2((z_out_31(0)),
      (APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(0)), and_dcpl_227);
  attention_5_1_384_384_8_48_attn_output_rsci_wadr_d <= INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_nl
      & INIT_2D_MEM_LOOP_2_1_INIT_2D_MEM_LOOP_2_1_mux_1_nl & (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(3
      DOWNTO 0));
  mux_386_nl <= MUX_s_1_2_2(or_dcpl_93, or_dcpl_100, fsm_output(0));
  attention_5_1_384_384_8_48_attn_output_rsci_we_d_pff <= (NOT mux_386_nl) AND nor_tmp_54
      AND and_dcpl_218 AND (fsm_output(4)) AND (NOT (fsm_output(1)));
  attention_5_1_384_384_8_48_attn_output_2D_rsci_d_d <= MUX_v_40_2_2(attention_5_1_384_384_8_48_attn_output_rsci_q_d,
      RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_slc_71_32_1_ncse_sva, and_dcpl_211);
  INIT_2D_MEM_LOOP_2_mux1h_nl <= MUX1HOT_v_3_3_2((reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1(8
      DOWNTO 6)), (INIT_2D_MEM_LOOP_2_2_acc_itm(8 DOWNTO 6)), GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva,
      STD_LOGIC_VECTOR'( and_dcpl_213 & and_dcpl_215 & and_225_ssc));
  INIT_2D_MEM_LOOP_2_and_nl <= MUX_v_3_2_2(STD_LOGIC_VECTOR'("000"), INIT_2D_MEM_LOOP_2_mux1h_nl,
      ATTN_2D_LOOP_3_and_seb);
  INIT_2D_MEM_LOOP_2_mux1h_6_nl <= MUX1HOT_v_4_3_2((reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1(5
      DOWNTO 2)), (INIT_2D_MEM_LOOP_2_2_acc_itm(5 DOWNTO 2)), APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt,
      STD_LOGIC_VECTOR'( and_dcpl_213 & and_dcpl_215 & and_225_ssc));
  INIT_2D_MEM_LOOP_2_and_4_nl <= MUX_v_4_2_2(STD_LOGIC_VECTOR'("0000"), INIT_2D_MEM_LOOP_2_mux1h_6_nl,
      ATTN_2D_LOOP_3_and_seb);
  INIT_2D_MEM_LOOP_2_mux1h_7_nl <= MUX1HOT_v_2_3_2((reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1(1
      DOWNTO 0)), (INIT_2D_MEM_LOOP_2_2_acc_itm(1 DOWNTO 0)), APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0,
      STD_LOGIC_VECTOR'( and_dcpl_213 & and_dcpl_215 & and_225_ssc));
  INIT_2D_MEM_LOOP_2_and_5_nl <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"), INIT_2D_MEM_LOOP_2_mux1h_7_nl,
      ATTN_2D_LOOP_3_and_seb);
  attention_5_1_384_384_8_48_attn_output_2D_rsci_radr_d <= INIT_2D_MEM_LOOP_2_and_nl
      & INIT_2D_MEM_LOOP_2_and_4_nl & INIT_2D_MEM_LOOP_2_and_5_nl;
  nor_372_nl <= NOT((NOT (fsm_output(3))) OR (NOT (fsm_output(2))) OR (fsm_output(6))
      OR not_tmp_245);
  or_414_nl <= (NOT(CONV_SL_1_1(RMS_NORM_LOOP_2_2_dfr_sva_8_0=STD_LOGIC_VECTOR'("111111111"))
      AND RMS_NORM_LOOP_2_2_dfr_sva_9 AND (NOT (fsm_output(6))))) OR not_tmp_245;
  or_412_nl <= (NOT (fsm_output(6))) OR (fsm_output(1)) OR (fsm_output(5));
  mux_378_nl <= MUX_s_1_2_2(or_414_nl, or_412_nl, fsm_output(2));
  nor_373_nl <= NOT((fsm_output(3)) OR mux_378_nl);
  mux_379_nl <= MUX_s_1_2_2(nor_372_nl, nor_373_nl, fsm_output(4));
  nor_374_nl <= NOT(CONV_SL_1_1(fsm_output(6 DOWNTO 1)/=STD_LOGIC_VECTOR'("000000")));
  mux_380_nl <= MUX_s_1_2_2(mux_379_nl, nor_374_nl, fsm_output(0));
  attention_5_1_384_384_8_48_attn_output_2D_rsci_re_d_pff <= mux_380_nl AND and_dcpl_88;
  GEMM_3D_FLOAT_LOOP_3_1_GEMM_3D_FLOAT_LOOP_3_1_mux_2_nl <= MUX_v_4_2_2(APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp_4,
      (INIT_2D_MEM_LOOP_2_2_acc_itm(8 DOWNTO 5)), and_dcpl_211);
  GEMM_3D_FLOAT_LOOP_3_1_GEMM_3D_FLOAT_LOOP_3_1_mux_4_nl <= MUX_s_1_2_2((APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt(0)),
      (INIT_2D_MEM_LOOP_2_2_acc_itm(4)), and_dcpl_211);
  GEMM_3D_FLOAT_LOOP_3_1_GEMM_3D_FLOAT_LOOP_3_1_mux_5_nl <= MUX_v_4_2_2((APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(3
      DOWNTO 0)), (INIT_2D_MEM_LOOP_2_2_acc_itm(3 DOWNTO 0)), and_dcpl_211);
  attention_5_1_384_384_8_48_attn_output_2D_rsci_wadr_d <= GEMM_3D_FLOAT_LOOP_3_1_GEMM_3D_FLOAT_LOOP_3_1_mux_2_nl
      & GEMM_3D_FLOAT_LOOP_3_1_GEMM_3D_FLOAT_LOOP_3_1_mux_4_nl & GEMM_3D_FLOAT_LOOP_3_1_GEMM_3D_FLOAT_LOOP_3_1_mux_5_nl;
  and_699_nl <= (fsm_output(1)) AND (fsm_output(2)) AND (fsm_output(3)) AND (NOT
      (fsm_output(8))) AND nor_tmp_54;
  nor_375_nl <= NOT((fsm_output(1)) OR (fsm_output(2)) OR (fsm_output(3)) OR (NOT
      (fsm_output(8))) OR (fsm_output(7)) OR (fsm_output(6)));
  mux_381_nl <= MUX_s_1_2_2(and_699_nl, nor_375_nl, fsm_output(0));
  attention_5_1_384_384_8_48_attn_output_2D_rsci_we_d_pff <= mux_381_nl AND and_dcpl_117;
  attention_5_1_384_384_8_48_quantized_final_output_rsci_radr_d <= GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva
      & APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt & APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0;
  attention_5_1_384_384_8_48_quantized_final_output_rsci_re_d_pff <= and_dcpl_163
      AND and_dcpl_201 AND and_694_cse AND (fsm_output(0)) AND ((LINEAR_FORWARD_NO_MUL_LOOP_5_3_weight_val_mux_tmp(0))
      XOR (LINEAR_FORWARD_NO_MUL_LOOP_5_3_weight_val_mux_tmp(1)));
  attention_5_1_384_384_8_48_quantized_final_output_rsci_wadr_d <= GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva
      & APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt & APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0;
  attention_5_1_384_384_8_48_quantized_final_output_rsci_we_d_pff <= and_dcpl_204
      AND and_dcpl_182;
  APPLY_ROTARY_POS_EMB_LOOP_3_acc_6_nl <= STD_LOGIC_VECTOR(CONV_SIGNED( -SIGNED(attention_5_1_384_384_8_48_q_proj_rsci_q_d),
      40));
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_d_d <= MUX_v_40_2_2(attention_5_1_384_384_8_48_q_proj_rsci_q_d,
      STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(APPLY_ROTARY_POS_EMB_LOOP_3_acc_6_nl),
      40)), and_dcpl_197);
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_radr_d <= z_out_12 & (z_out_31(0)) &
      (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(3 DOWNTO 0));
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_re_d_pff <= and_dcpl_190;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_wadr_d <= APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_rmff_4_2
      & APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_rmff_1 & APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_rmff_0
      & APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_1_rmff & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_0
      & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_we_d_pff <= and_dcpl_185 AND not_tmp_240
      AND and_dcpl_157 AND (fsm_output(3)) AND (NOT((fsm_output(2)) OR LINEAR_FORWARD_NO_MUL_LOOP_5_or_itm));
  APPLY_ROTARY_POS_EMB_LOOP_3_acc_12_nl <= STD_LOGIC_VECTOR(CONV_SIGNED( -SIGNED(attention_5_1_384_384_8_48_k_proj_rsci_q_d),
      40));
  apply_rotary_pos_emb_1_8_48_rotated_k_rsci_d_d <= MUX_v_40_2_2(attention_5_1_384_384_8_48_k_proj_rsci_q_d,
      STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(APPLY_ROTARY_POS_EMB_LOOP_3_acc_12_nl),
      40)), and_dcpl_197);
  apply_rotary_pos_emb_1_8_48_rotated_k_rsci_radr_d <= z_out_12 & (z_out_31(0)) &
      (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(3 DOWNTO 0));
  apply_rotary_pos_emb_1_8_48_rotated_k_rsci_wadr_d <= APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_rmff_4_2
      & APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_rmff_1 & APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_rmff_0
      & APPLY_ROTARY_POS_EMB_LOOP_3_APPLY_ROTARY_POS_EMB_LOOP_3_mux_1_rmff & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_0
      & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1;
  and_dcpl_550 <= and_dcpl_109 AND (NOT (fsm_output(8))) AND nor_239_cse AND nor_566_cse
      AND and_692_cse;
  and_dcpl_556 <= and_dcpl_109 AND (fsm_output(8)) AND nor_239_cse AND CONV_SL_1_1(fsm_output(3
      DOWNTO 2)=STD_LOGIC_VECTOR'("01")) AND nor_494_cse;
  and_dcpl_559 <= and_dcpl_127 AND CONV_SL_1_1(fsm_output(1 DOWNTO 0)=STD_LOGIC_VECTOR'("01"));
  and_dcpl_562 <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)=STD_LOGIC_VECTOR'("011"));
  and_dcpl_563 <= and_dcpl_562 AND CONV_SL_1_1(fsm_output(5 DOWNTO 4)=STD_LOGIC_VECTOR'("01"));
  and_dcpl_564 <= and_dcpl_563 AND and_dcpl_559;
  and_dcpl_566 <= and_dcpl_563 AND and_dcpl_127 AND and_692_cse;
  and_dcpl_570 <= and_dcpl_562 AND nor_239_cse AND nor_566_cse AND CONV_SL_1_1(fsm_output(1
      DOWNTO 0)=STD_LOGIC_VECTOR'("10"));
  and_dcpl_573 <= and_dcpl_562 AND CONV_SL_1_1(fsm_output(5 DOWNTO 4)=STD_LOGIC_VECTOR'("11"))
      AND and_dcpl_559;
  RMS_NORM_LOOP_1_1_or_ssc <= and_dcpl_550 OR and_dcpl_556 OR and_dcpl_570 OR and_dcpl_573;
  and_dcpl_596 <= CONV_SL_1_1(fsm_output=STD_LOGIC_VECTOR'("001010111"));
  and_dcpl_613 <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)=STD_LOGIC_VECTOR'("011")) AND
      nor_239_cse;
  and_dcpl_614 <= and_dcpl_613 AND CONV_SL_1_1(fsm_output(3 DOWNTO 0)=STD_LOGIC_VECTOR'("0111"));
  and_894_cse <= and_dcpl_613 AND and_dcpl_127 AND nor_494_cse;
  and_897_cse <= and_dcpl_613 AND and_dcpl_127 AND CONV_SL_1_1(fsm_output(1 DOWNTO
      0)=STD_LOGIC_VECTOR'("01"));
  and_dcpl_629 <= and_dcpl_110 AND and_dcpl_152 AND and_dcpl_127 AND nor_494_cse;
  and_dcpl_634 <= and_dcpl_110 AND CONV_SL_1_1(fsm_output(5 DOWNTO 4)=STD_LOGIC_VECTOR'("11"))
      AND and_dcpl_239;
  and_dcpl_641 <= and_dcpl_138 AND and_dcpl_152 AND nor_566_cse AND and_dcpl_126;
  and_dcpl_646 <= and_dcpl_138 AND CONV_SL_1_1(fsm_output(5 DOWNTO 4)=STD_LOGIC_VECTOR'("10"))
      AND nor_566_cse AND and_dcpl_25;
  and_1498_nl <= CONV_SL_1_1(fsm_output(5 DOWNTO 3)=STD_LOGIC_VECTOR'("111"));
  nor_613_nl <= NOT(CONV_SL_1_1(fsm_output(5 DOWNTO 3)/=STD_LOGIC_VECTOR'("000")));
  mux_1015_nl <= MUX_s_1_2_2(and_1498_nl, nor_613_nl, fsm_output(0));
  and_dcpl_651 <= mux_1015_nl AND (fsm_output(7)) AND (fsm_output(6)) AND (NOT (fsm_output(8)))
      AND (NOT(CONV_SL_1_1(fsm_output(2 DOWNTO 1)/=STD_LOGIC_VECTOR'("00"))));
  and_dcpl_656 <= and_dcpl_562 AND nor_239_cse AND and_dcpl_239;
  and_dcpl_659 <= and_dcpl_562 AND and_dcpl_152 AND and_dcpl_127 AND and_dcpl_25;
  and_dcpl_663 <= and_dcpl_121 AND nor_239_cse AND nor_566_cse AND and_692_cse;
  and_dcpl_666 <= and_dcpl_121 AND and_dcpl_152 AND and_dcpl_127 AND and_dcpl_126;
  and_dcpl_671 <= and_dcpl_137 AND (fsm_output(8)) AND and_dcpl_152 AND CONV_SL_1_1(fsm_output(3
      DOWNTO 2)=STD_LOGIC_VECTOR'("01")) AND and_dcpl_25;
  and_dcpl_679 <= CONV_SL_1_1(fsm_output(8 DOWNTO 4)=STD_LOGIC_VECTOR'("00110"))
      AND nor_566_cse AND CONV_SL_1_1(fsm_output(1 DOWNTO 0)=STD_LOGIC_VECTOR'("10"));
  and_dcpl_704 <= CONV_SL_1_1(fsm_output=STD_LOGIC_VECTOR'("101100101"));
  and_dcpl_717 <= and_dcpl_109 AND (NOT (fsm_output(8))) AND nor_239_cse AND and_dcpl_161
      AND CONV_SL_1_1(fsm_output(1 DOWNTO 0)=STD_LOGIC_VECTOR'("01"));
  and_dcpl_722 <= and_dcpl_109 AND (fsm_output(8)) AND nor_239_cse AND and_dcpl_161
      AND CONV_SL_1_1(fsm_output(1 DOWNTO 0)=STD_LOGIC_VECTOR'("10"));
  and_1011_cse <= and_dcpl_109 AND (fsm_output(8)) AND nor_239_cse AND CONV_SL_1_1(fsm_output(3
      DOWNTO 0)=STD_LOGIC_VECTOR'("0110"));
  and_dcpl_742 <= nor_239_cse AND CONV_SL_1_1(fsm_output(3 DOWNTO 1)=STD_LOGIC_VECTOR'("101"))
      AND and_dcpl_109 AND xnor_cse;
  and_dcpl_749 <= and_dcpl_562 AND nor_239_cse AND and_dcpl_161 AND and_692_cse;
  and_dcpl_752 <= CONV_SL_1_1(fsm_output(3 DOWNTO 2)=STD_LOGIC_VECTOR'("10")) AND
      nor_494_cse;
  and_dcpl_755 <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)=STD_LOGIC_VECTOR'("010"));
  and_dcpl_757 <= and_dcpl_755 AND CONV_SL_1_1(fsm_output(5 DOWNTO 4)=STD_LOGIC_VECTOR'("10"))
      AND and_dcpl_752;
  and_dcpl_761 <= and_dcpl_755 AND and_dcpl_117;
  and_dcpl_762 <= and_dcpl_761 AND nor_566_cse AND and_692_cse;
  and_dcpl_763 <= and_dcpl_761 AND and_dcpl_752;
  and_dcpl_767 <= and_dcpl_562 AND and_dcpl_117 AND and_dcpl_161 AND CONV_SL_1_1(fsm_output(1
      DOWNTO 0)=STD_LOGIC_VECTOR'("10"));
  compute_sqrt_for_or_2_cse <= and_dcpl_762 OR and_dcpl_767;
  and_1051_cse <= and_dcpl_613 AND CONV_SL_1_1(fsm_output(3 DOWNTO 2)=STD_LOGIC_VECTOR'("01"))
      AND and_692_cse;
  and_dcpl_779 <= and_dcpl_613 AND CONV_SL_1_1(fsm_output(3 DOWNTO 0)=STD_LOGIC_VECTOR'("1101"));
  and_dcpl_786 <= CONV_SL_1_1(fsm_output(8 DOWNTO 4)=STD_LOGIC_VECTOR'("01011"))
      AND nor_566_cse AND and_692_cse;
  and_dcpl_789 <= CONV_SL_1_1(fsm_output(3 DOWNTO 0)=STD_LOGIC_VECTOR'("1101"));
  nor_632_cse <= NOT((NOT (fsm_output(3))) OR (NOT (fsm_output(4))) OR (fsm_output(6)));
  and_dcpl_808 <= CONV_SL_1_1(fsm_output(3 DOWNTO 0)=STD_LOGIC_VECTOR'("0110"));
  and_dcpl_832 <= and_dcpl_137 AND (NOT (fsm_output(8))) AND and_dcpl_152;
  and_dcpl_833 <= and_dcpl_832 AND CONV_SL_1_1(fsm_output(3 DOWNTO 2)=STD_LOGIC_VECTOR'("10"))
      AND and_692_cse;
  and_dcpl_837 <= and_dcpl_832 AND and_578_cse AND nor_494_cse;
  and_dcpl_840 <= and_dcpl_832 AND and_578_cse AND CONV_SL_1_1(fsm_output(1 DOWNTO
      0)=STD_LOGIC_VECTOR'("01"));
  and_dcpl_846 <= and_dcpl_163 AND CONV_SL_1_1(fsm_output(5 DOWNTO 4)=STD_LOGIC_VECTOR'("10"))
      AND nor_566_cse AND nor_494_cse;
  and_dcpl_917 <= and_dcpl_109 AND (fsm_output(8)) AND (fsm_output(5)) AND (fsm_output(4))
      AND nor_566_cse AND nor_494_cse;
  and_dcpl_931 <= CONV_SL_1_1(fsm_output(8 DOWNTO 2)=STD_LOGIC_VECTOR'("0001111"))
      AND nor_494_cse;
  and_dcpl_942 <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)=STD_LOGIC_VECTOR'("011")) AND
      nor_239_cse AND CONV_SL_1_1(fsm_output(3 DOWNTO 0)=STD_LOGIC_VECTOR'("1011"));
  and_dcpl_953 <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)=STD_LOGIC_VECTOR'("011")) AND
      nor_239_cse AND CONV_SL_1_1(fsm_output(3 DOWNTO 0)=STD_LOGIC_VECTOR'("1010"));
  and_dcpl_964 <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)=STD_LOGIC_VECTOR'("011")) AND
      nor_239_cse AND CONV_SL_1_1(fsm_output(3 DOWNTO 0)=STD_LOGIC_VECTOR'("1001"));
  and_1256_cse <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)=STD_LOGIC_VECTOR'("011")) AND
      nor_239_cse AND CONV_SL_1_1(fsm_output(3 DOWNTO 2)=STD_LOGIC_VECTOR'("10"))
      AND nor_494_cse;
  and_1280_cse <= CONV_SL_1_1(fsm_output(8 DOWNTO 2)=STD_LOGIC_VECTOR'("0101011"))
      AND and_692_cse;
  and_1291_cse <= and_dcpl_613 AND CONV_SL_1_1(fsm_output(3 DOWNTO 2)=STD_LOGIC_VECTOR'("10"))
      AND nor_494_cse;
  mux_1050_nl <= MUX_s_1_2_2(not_tmp_429, nor_632_cse, fsm_output(2));
  and_1509_cse <= (fsm_output(1)) AND mux_1050_nl;
  nor_690_nl <= NOT((fsm_output(1)) OR mux_575_cse);
  mux_1053_nl <= MUX_s_1_2_2(nor_690_nl, and_1509_cse, fsm_output(0));
  and_dcpl_1069 <= mux_1053_nl AND and_dcpl_398;
  nor_629_nl <= NOT((NOT (fsm_output(1))) OR (fsm_output(3)) OR (fsm_output(4)) OR
      (fsm_output(5)) OR (NOT (fsm_output(6))));
  nor_630_nl <= NOT((fsm_output(1)) OR (NOT (fsm_output(3))) OR (NOT (fsm_output(4)))
      OR (NOT (fsm_output(5))) OR (fsm_output(6)));
  mux_1016_nl <= MUX_s_1_2_2(nor_629_nl, nor_630_nl, fsm_output(0));
  and_1353_cse <= mux_1016_nl AND and_dcpl_29 AND (fsm_output(2));
  and_dcpl_1087 <= and_dcpl_562 AND and_dcpl_117 AND CONV_SL_1_1(fsm_output(3 DOWNTO
      0)=STD_LOGIC_VECTOR'("0110"));
  and_dcpl_1094 <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)=STD_LOGIC_VECTOR'("010")) AND
      and_dcpl_117;
  and_dcpl_1152 <= CONV_SL_1_1(fsm_output(8 DOWNTO 4)=STD_LOGIC_VECTOR'("01101"));
  and_dcpl_1208 <= CONV_SL_1_1(fsm_output(8 DOWNTO 2)=STD_LOGIC_VECTOR'("1010110"))
      AND nor_494_cse;
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_nor_3_nl
      <= NOT(QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs
      OR QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_acc_17_svs);
  QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_nor_3_nl
      <= NOT(QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs
      OR QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_17_svs);
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux_7_m1c <= MUX_s_1_2_2(QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_nor_3_nl,
      QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_nor_3_nl,
      and_dcpl_1208);
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux_5_nl <= MUX_s_1_2_2(QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_acc_17_svs,
      QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_17_svs,
      and_dcpl_1208);
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_nor_2_nl
      <= NOT((NOT QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs)
      OR QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_acc_17_svs);
  QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_nor_2_nl
      <= NOT((NOT QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs)
      OR QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_17_svs);
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux_6_nl <= MUX_s_1_2_2(QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_nor_2_nl,
      QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_nor_2_nl,
      and_dcpl_1208);
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_nl <= (NOT and_dcpl_1208)
      AND QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux_7_m1c;
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_1_nl <= and_dcpl_1208 AND
      QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux_7_m1c;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_d_d <= MUX1HOT_v_8_4_2(STD_LOGIC_VECTOR'(
      "10000000"), STD_LOGIC_VECTOR'( "01111111"), attention_round_qr_39_16_lpi_4_dfm_7_0,
      attention_round_1_qr_39_16_lpi_4_dfm_7_0, STD_LOGIC_VECTOR'( QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux_5_nl
      & QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_mux_6_nl & QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_nl
      & QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_and_1_nl));
  compute_sqrt_for_guess_inv_or_cse <= and_dcpl_646 OR and_dcpl_651 OR and_dcpl_659
      OR and_dcpl_663 OR and_dcpl_671;
  LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_or_cse <= NOT(and_894_cse
      OR and_897_cse);
  operator_40_24_true_AC_TRN_AC_WRAP_or_2_cse_1 <= and_dcpl_717 OR and_dcpl_722;
  mux_1056_cse <= MUX_s_1_2_2(nand_195_cse, or_589_cse, fsm_output(4));
  operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_or_cse <= (and_dcpl_832 AND nor_566_cse
      AND CONV_SL_1_1(fsm_output(1 DOWNTO 0)=STD_LOGIC_VECTOR'("10"))) OR (and_dcpl_163
      AND and_dcpl_152 AND CONV_SL_1_1(fsm_output(3 DOWNTO 2)=STD_LOGIC_VECTOR'("01"))
      AND and_692_cse);
  and_1497_nl <= (fsm_output(1)) AND (fsm_output(5)) AND (NOT (fsm_output(8))) AND
      (fsm_output(6));
  nor_605_nl <= NOT((fsm_output(1)) OR (fsm_output(5)) OR (fsm_output(6)));
  mux_1010_nl <= MUX_s_1_2_2(and_1497_nl, nor_605_nl, fsm_output(0));
  and_876_cse <= mux_1010_nl AND nor_510_cse AND nor_566_cse;
  nor_660_nl <= NOT((fsm_output(6)) OR (fsm_output(3)) OR (fsm_output(4)) OR (fsm_output(8))
      OR (fsm_output(2)));
  nor_702_nl <= NOT((NOT (fsm_output(6))) OR (fsm_output(3)) OR (fsm_output(4)) OR
      nand_195_cse);
  mux_1007_nl <= MUX_s_1_2_2(nor_660_nl, nor_702_nl, fsm_output(5));
  nand_296_nl <= NOT((fsm_output(0)) AND mux_1007_nl);
  and_1510_nl <= (fsm_output(3)) AND (NOT mux_1056_cse);
  nor_662_nl <= NOT((fsm_output(3)) OR (fsm_output(4)) OR (fsm_output(8)) OR (fsm_output(2)));
  mux_1006_nl <= MUX_s_1_2_2(and_1510_nl, nor_662_nl, fsm_output(6));
  nand_297_nl <= NOT((NOT((fsm_output(0)) OR (NOT (fsm_output(5))))) AND mux_1006_nl);
  mux_1008_cse <= MUX_s_1_2_2(nand_296_nl, nand_297_nl, fsm_output(1));
  nand_268_nl <= NOT((fsm_output(3)) AND (NOT mux_1056_cse));
  or_1304_nl <= (fsm_output(3)) OR (fsm_output(4)) OR (fsm_output(8)) OR (fsm_output(2));
  mux_1013_nl <= MUX_s_1_2_2(nand_268_nl, or_1304_nl, fsm_output(6));
  nor_705_nl <= NOT((NOT (fsm_output(5))) OR (fsm_output(0)) OR mux_1013_nl);
  nor_706_nl <= NOT((fsm_output(5)) OR (NOT (fsm_output(0))) OR (fsm_output(6)) OR
      (fsm_output(3)) OR (fsm_output(4)) OR nand_195_cse);
  mux_1014_cse <= MUX_s_1_2_2(nor_705_nl, nor_706_nl, fsm_output(7));
  APPLY_ROTARY_POS_EMB_LOOP_6_nor_cse <= NOT(and_1051_cse OR and_1291_cse);
  RMS_NORM_LOOP_1_1_or_1_itm <= and_dcpl_556 OR and_dcpl_570 OR and_dcpl_573;
  compute_sqrt_for_guess_inv_or_2_itm <= and_dcpl_634 OR and_dcpl_641;
  compute_sqrt_for_guess_inv_nor_seb <= NOT(and_dcpl_629 OR and_dcpl_656 OR and_dcpl_666);
  compute_sqrt_for_guess_inv_or_4_itm <= and_dcpl_629 OR and_dcpl_666;
  compute_sqrt_for_guess_inv_or_3_itm <= and_dcpl_641 OR and_dcpl_659 OR and_dcpl_663;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_39 <= '0';
        QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_38_0 <= STD_LOGIC_VECTOR'( "000000000000000000000000000000000000000");
      ELSIF ( QUANTIZE_ACTIVATION_LOOP_1_max_val_and_cse = '1' ) THEN
        QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_39 <= QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_39_mx0w2;
        QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_38_0 <= QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_38_0_mx0w2;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs
            <= '0';
      ELSIF ( (input_rsc_clken_d_1 AND (NOT(or_dcpl_90 OR or_392_cse OR CONV_SL_1_1(fsm_output(1
          DOWNTO 0)/=STD_LOGIC_VECTOR'("10")) OR QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_acc_itm_17_1)))
          = '1' ) THEN
        QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_17_svs
            <= QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_nl(17);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_39 <= '0';
        QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_38_0 <= STD_LOGIC_VECTOR'( "000000000000000000000000000000000000000");
      ELSIF ( QUANTIZE_ACTIVATION_LOOP_1_1_max_val_and_cse = '1' ) THEN
        QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_39 <= QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_39_mx0w2;
        QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_38_0 <= QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_38_0_mx0w2;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs
            <= '0';
      ELSIF ( (input_rsc_clken_d_1 AND (NOT(or_dcpl_96 OR or_tmp_216 OR or_dcpl_93
          OR CONV_SL_1_1(fsm_output(1 DOWNTO 0)/=STD_LOGIC_VECTOR'("11")) OR QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_itm_17_1)))
          = '1' ) THEN
        QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_17_svs
            <= QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_nl(17);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        strm_out_rsci_idat_31_2 <= STD_LOGIC_VECTOR'( "000000000000000000000000000000");
      ELSIF ( (input_rsc_clken_d_1 AND (NOT(or_tmp_229 OR (NOT (fsm_output(8))) OR
          or_1158_cse OR or_dcpl_101))) = '1' ) THEN
        strm_out_rsci_idat_31_2 <= output_rsci_q_d(29 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        reg_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_a_32_0_ftd <= '0';
        reg_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_a_32_0_ftd_1 <= '0';
        operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_29_0 <= STD_LOGIC_VECTOR'(
            "000000000000000000000000000000");
        operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_39 <= '0';
        operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_38_30 <= STD_LOGIC_VECTOR'(
            "000000000");
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_a_71_32
            <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000");
        SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a_55 <= '0';
        SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a_54_16 <= STD_LOGIC_VECTOR'( "000000000000000000000000000000000000000");
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_59_39
            <= STD_LOGIC_VECTOR'( "000000000000000000000");
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_38_0
            <= STD_LOGIC_VECTOR'( "000000000000000000000000000000000000000");
        SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b_39 <= '0';
        SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b_38_0 <= STD_LOGIC_VECTOR'( "000000000000000000000000000000000000000");
        reg_strm_out_rsci_iswt0_cse <= '0';
        reg_strm_in_rsci_iswt0_cse <= '0';
        reg_rms_norm_384_div_cmp_b_ftd_59_38 <= STD_LOGIC_VECTOR'( "0000000000000000000000");
        reg_rms_norm_384_div_cmp_b_ftd_37_0 <= STD_LOGIC_VECTOR'( "00000000000000000000000000000000000000");
        reg_rms_norm_384_div_cmp_b_ftd_1 <= '0';
        reg_rms_norm_384_div_cmp_a_ftd <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000");
        QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_dfm_1_39 <= '0';
        QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_dfm_1_38_0 <= STD_LOGIC_VECTOR'(
            "000000000000000000000000000000000000000");
        QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_dfm_1_39 <= '0';
        QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_dfm_1_38_0 <= STD_LOGIC_VECTOR'(
            "000000000000000000000000000000000000000");
        operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_itm_17
            <= '0';
        for_for_strm_in_tmp_sva_31_2 <= STD_LOGIC_VECTOR'( "000000000000000000000000000000");
        RMS_NORM_LOOP_1_1_slc_RMS_NORM_LOOP_1_1_RMS_NORM_LOOP_1_1_mul_55_16_itm <=
            STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000");
        reg_operator_40_24_true_AC_TRN_AC_WRAP_acc_20_cse <= STD_LOGIC_VECTOR'( "000000");
        operator_40_24_true_AC_TRN_AC_WRAP_acc_29_itm <= STD_LOGIC_VECTOR'( "00000000");
        operator_40_24_true_AC_TRN_AC_WRAP_and_1_itm <= '0';
        operator_40_24_true_AC_TRN_AC_WRAP_acc_30_itm <= STD_LOGIC_VECTOR'( "000000000");
        operator_40_24_true_AC_TRN_AC_WRAP_acc_37_itm <= STD_LOGIC_VECTOR'( "0000000000000000");
        operator_40_24_true_AC_TRN_AC_WRAP_acc_38_itm <= STD_LOGIC_VECTOR'( "00000000000000000");
        operator_40_24_true_AC_TRN_AC_WRAP_acc_45_itm <= STD_LOGIC_VECTOR'( "000000000000000000000000");
        operator_40_24_true_AC_TRN_AC_WRAP_acc_46_itm <= STD_LOGIC_VECTOR'( "0000000000000000000000000");
        operator_40_24_true_AC_TRN_AC_WRAP_acc_52_itm <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000");
        operator_40_24_true_AC_TRN_AC_WRAP_acc_51_itm <= STD_LOGIC_VECTOR'( "000000000000000000000000000000");
        SF_LOOP_3_acc_17_itm_18_9 <= STD_LOGIC_VECTOR'( "0000000000");
        SF_LOOP_3_acc_17_itm_8_0 <= STD_LOGIC_VECTOR'( "000000000");
        reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd <= STD_LOGIC_VECTOR'(
            "0000");
        reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_1 <= STD_LOGIC_VECTOR'(
            "000");
        RMS_NORM_LOOP_2_mul_1_itm <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000000000000000");
        GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva <= STD_LOGIC_VECTOR'( "000");
        reg_attention_round_a_cse_slc <= STD_LOGIC_VECTOR'( "0000");
        attention_round_qr_39_16_lpi_4_dfm_7_0 <= STD_LOGIC_VECTOR'( "00000000");
        QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_acc_17_svs
            <= '0';
        LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_slc_LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_conc_1_1_1_0_svs
            <= STD_LOGIC_VECTOR'( "00");
        RESHAPE_2D_TO_3D_LOOP_3_acc_11_psp_1 <= STD_LOGIC_VECTOR'( "0000");
        APPLY_ROTARY_POS_EMB_LOOP_6_mul_8_itm <= STD_LOGIC_VECTOR'( "00000000000000000000000000000000000000000000000000000000");
        APPLY_ROTARY_POS_EMB_LOOP_6_mul_9_itm <= STD_LOGIC_VECTOR'( "00000000000000000000000000000000000000000000000000000000");
        APPLY_ROTARY_POS_EMB_LOOP_6_mul_3_itm <= STD_LOGIC_VECTOR'( "00000000000000000000000000000000000000000000000000000000");
        APPLY_ROTARY_POS_EMB_LOOP_6_mul_4_itm <= STD_LOGIC_VECTOR'( "00000000000000000000000000000000000000000000000000000000");
        CACHE_UPDATE_LOOP_3_qr_sva_1 <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000");
        CACHE_UPDATE_LOOP_3_1_qr_sva_1 <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000");
        CACHE_UPDATE_LOOP_3_1_acc_18_psp_1 <= STD_LOGIC_VECTOR'( "0000");
        CACHE_UPDATE_LOOP_3_acc_18_psp_1 <= STD_LOGIC_VECTOR'( "0000");
        SF_LOOP_3_acc_11_itm_17_15 <= STD_LOGIC_VECTOR'( "000");
        SF_LOOP_3_acc_11_itm_13_0 <= STD_LOGIC_VECTOR'( "00000000000000");
        SF_LOOP_3_mul_12_itm_16_15 <= STD_LOGIC_VECTOR'( "00");
        SF_LOOP_3_mul_12_itm_12_9_slc <= STD_LOGIC_VECTOR'( "000");
        SF_LOOP_3_mul_12_itm_3_0 <= STD_LOGIC_VECTOR'( "0000");
        SF_LOOP_3_mul_15_itm_16_10 <= STD_LOGIC_VECTOR'( "0000000");
        SF_LOOP_3_mul_15_itm_6_0 <= STD_LOGIC_VECTOR'( "0000000");
        SF_LOOP_3_acc_15_itm <= STD_LOGIC_VECTOR'( "0000000000000000000");
        SF_LOOP_3_acc_16_itm <= STD_LOGIC_VECTOR'( "0000000000000000000");
        SF_LOOP_3_acc_30_psp <= STD_LOGIC_VECTOR'( "00000000000000000000");
        SF_LOOP_3_acc_39_itm <= STD_LOGIC_VECTOR'( "0000000");
        SF_LOOP_3_mul_19_itm_12_11 <= STD_LOGIC_VECTOR'( "00");
        SF_LOOP_3_mul_19_itm_9_4 <= STD_LOGIC_VECTOR'( "000000");
        SF_LOOP_3_acc_93_psp <= STD_LOGIC_VECTOR'( "0000");
        SF_LOOP_3_acc_40_itm <= STD_LOGIC_VECTOR'( "00000000000");
        SF_LOOP_3_acc_6_psp_sva_18_17 <= STD_LOGIC_VECTOR'( "00");
        SF_LOOP_3_acc_35_itm <= STD_LOGIC_VECTOR'( "000000000000000000");
        SF_LOOP_3_acc_46_itm <= STD_LOGIC_VECTOR'( "0000000000000000000");
        SF_LOOP_3_acc_50_itm <= STD_LOGIC_VECTOR'( "00000000000000000000000000");
        SF_LOOP_3_acc_54_itm <= STD_LOGIC_VECTOR'( "00000000000000000000000000000000");
        SF_LOOP_3_acc_58_itm <= STD_LOGIC_VECTOR'( "00000000000000000000000000000000000000");
        operator_80_48_true_AC_TRN_AC_WRAP_operator_80_48_true_AC_TRN_AC_WRAP_slc_SOFTMAX_LOOP_4_sqr_56_1_itm_slc
            <= STD_LOGIC_VECTOR'( "00000");
        operator_40_24_true_AC_TRN_AC_WRAP_2_acc_29_itm <= STD_LOGIC_VECTOR'( "00000000");
        operator_40_24_true_AC_TRN_AC_WRAP_2_acc_30_itm <= STD_LOGIC_VECTOR'( "000000000");
        operator_40_24_true_AC_TRN_AC_WRAP_2_acc_37_itm <= STD_LOGIC_VECTOR'( "0000000000000000");
        operator_40_24_true_AC_TRN_AC_WRAP_2_acc_38_itm <= STD_LOGIC_VECTOR'( "00000000000000000");
        operator_40_24_true_AC_TRN_AC_WRAP_2_acc_45_itm <= STD_LOGIC_VECTOR'( "000000000000000000000000");
        operator_40_24_true_AC_TRN_AC_WRAP_2_acc_46_itm <= STD_LOGIC_VECTOR'( "0000000000000000000000000");
        operator_40_24_true_AC_TRN_AC_WRAP_2_acc_52_itm <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000");
        operator_40_24_true_AC_TRN_AC_WRAP_2_acc_51_itm <= STD_LOGIC_VECTOR'( "000000000000000000000000000000");
        RMS_NORM_LOOP_2_2_mul_1_itm <= STD_LOGIC_VECTOR'( "00000000000000000000000000000000000000000000000000000");
        attention_round_1_qr_39_16_lpi_4_dfm_7_0 <= STD_LOGIC_VECTOR'( "00000000");
        QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_17_svs
            <= '0';
        INIT_2D_MEM_LOOP_2_3_INIT_2D_MEM_LOOP_2_3_nor_itm <= '0';
      ELSIF ( input_rsc_clken_d_1 = '1' ) THEN
        reg_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_a_32_0_ftd <= or_351_ssc;
        reg_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_a_32_0_ftd_1 <= NOT or_351_ssc;
        operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_29_0 <= MUX1HOT_v_30_8_2(compute_sqrt_guess_sva_29_0,
            attention_abs_qif_acc_pmx_lpi_1_dfm_mx1_30_1, (compute_sqrt_for_acc_1_itm_40_1_1(29
            DOWNTO 0)), (attention_max_attn_fixed_t_attention_max_attn_fixed_t_and_mut_mx0w2_38_0(29
            DOWNTO 0)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(29 DOWNTO 0)), compute_sqrt_1_guess_sva_29_0,
            attention_abs_4_qif_acc_pmx_lpi_1_dfm_mx1_30_1, (compute_sqrt_1_for_acc_1_itm_40_1_1(29
            DOWNTO 0)), STD_LOGIC_VECTOR'( and_144_nl & compute_sqrt_guess_and_1_nl
            & and_dcpl_154 & and_dcpl_140 & and_dcpl_144 & and_156_nl & compute_sqrt_guess_and_3_nl
            & and_dcpl_156));
        operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_39 <= operator_40_24_true_AC_TRN_AC_WRAP_mux1h_nl
            AND nor_seb;
        operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_b_38_30 <= MUX_v_9_2_2(STD_LOGIC_VECTOR'("000000000"),
            operator_40_24_true_AC_TRN_AC_WRAP_mux1h_2_nl, nor_seb);
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_a_71_32
            <= MUX1HOT_v_40_5_2(attention_5_1_384_384_8_48_v_proj_re_rsci_q_d, INIT_2D_MEM_LOOP_2_2_asn_psp,
            STD_LOGIC_VECTOR'( "0000000000000000000000000000000001111111"), output_rsci_q_d,
            INIT_2D_MEM_LOOP_2_1_asn_psp, STD_LOGIC_VECTOR'( and_dcpl_159 & and_dcpl_160
            & mux_337_nl & and_174_nl & and_175_nl));
        SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a_55 <= GEMM_3D_FLOAT_LOOP_3_mux_nl
            AND (NOT and_182_ssc);
        SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_a_54_16 <= MUX1HOT_v_39_3_2((attention_5_1_384_384_8_48_attn_weights_rsci_q_d(38
            DOWNTO 0)), reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1, STD_LOGIC_VECTOR'(
            "000000000000000000000010000000000000000"), STD_LOGIC_VECTOR'( and_180_nl
            & and_181_ssc & and_182_ssc));
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_59_39
            <= MUX1HOT_v_21_4_2((LINEAR_FORWARD_NO_MUL_LOOP_2_2_mul_1_itm(59 DOWNTO
            39)), STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_max_attn_fixed_t_1_conc_psp_mx0w11_39,
            1),21)), STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd,
            1),21)), (LINEAR_FORWARD_NO_MUL_LOOP_2_3_mul_1_itm(59 DOWNTO 39)), STD_LOGIC_VECTOR'(
            and_dcpl_174 & and_dcpl_176 & and_187_ssc & and_188_ssc));
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_b_38_0
            <= MUX1HOT_v_39_4_2((LINEAR_FORWARD_NO_MUL_LOOP_2_2_mul_1_itm(38 DOWNTO
            0)), attention_max_attn_fixed_t_1_conc_psp_mx0w11_38_0, reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1,
            (LINEAR_FORWARD_NO_MUL_LOOP_2_3_mul_1_itm(38 DOWNTO 0)), STD_LOGIC_VECTOR'(
            and_dcpl_174 & and_dcpl_176 & and_187_ssc & and_188_ssc));
        SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b_39 <= MUX1HOT_s_1_3_2((softmax_1_8_6_sum_sva_1(39)),
            (compute_sqrt_1_for_acc_1_itm_40_1_1(39)), reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd,
            STD_LOGIC_VECTOR'( and_189_ssc & and_dcpl_156 & and_190_ssc));
        SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_b_38_0 <= MUX1HOT_v_39_3_2((softmax_1_8_6_sum_sva_1(38
            DOWNTO 0)), (compute_sqrt_1_for_acc_1_itm_40_1_1(38 DOWNTO 0)), reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1,
            STD_LOGIC_VECTOR'( and_189_ssc & and_dcpl_156 & and_190_ssc));
        reg_strm_out_rsci_iswt0_cse <= and_dcpl_131 AND and_dcpl_182;
        reg_strm_in_rsci_iswt0_cse <= NOT(or_dcpl_111 OR or_1158_cse OR mux_372_nl
            OR or_392_cse);
        reg_rms_norm_384_div_cmp_b_ftd_59_38 <= MUX1HOT_v_22_4_2(STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(compute_sqrt_for_acc_1_itm_40_1_1(39),
            1),22)), STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd,
            1),22)), (LINEAR_FORWARD_NO_MUL_LOOP_2_1_mul_1_itm(60 DOWNTO 39)), (LINEAR_FORWARD_NO_MUL_LOOP_2_mul_1_itm(59
            DOWNTO 38)), STD_LOGIC_VECTOR'( and_dcpl_154 & and_193_itm & and_dcpl_174
            & and_dcpl_186));
        reg_rms_norm_384_div_cmp_b_ftd_37_0 <= MUX1HOT_v_38_4_2((compute_sqrt_for_acc_1_itm_40_1_1(38
            DOWNTO 1)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(38 DOWNTO 1)), (LINEAR_FORWARD_NO_MUL_LOOP_2_1_mul_1_itm(38
            DOWNTO 1)), (LINEAR_FORWARD_NO_MUL_LOOP_2_mul_1_itm(37 DOWNTO 0)), STD_LOGIC_VECTOR'(
            and_dcpl_154 & and_193_itm & and_dcpl_174 & and_dcpl_186));
        reg_rms_norm_384_div_cmp_b_ftd_1 <= rms_norm_384_mux1h_7_nl AND (NOT and_dcpl_186);
        reg_rms_norm_384_div_cmp_a_ftd <= MUX1HOT_v_40_4_2(STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000001"),
            attention_5_1_384_384_8_48_k_proj_re_rsci_q_d, INIT_2D_MEM_LOOP_2_1_asn_psp,
            GEMM_3D_FLOAT_LOOP_4_1_asn_itm, STD_LOGIC_VECTOR'( and_196_nl & and_dcpl_159
            & and_dcpl_160 & and_dcpl_186));
        QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_dfm_1_39 <= QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_39_mx0w2;
        QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_dfm_1_38_0 <= QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_38_0_mx0w2;
        QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_dfm_1_39 <= QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_39_mx0w2;
        QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_dfm_1_38_0 <= QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_38_0_mx0w2;
        operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_itm_17
            <= MUX_s_1_2_2((operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z(17)),
            (z_out_4(17)), and_dcpl_361);
        for_for_strm_in_tmp_sva_31_2 <= strm_in_rsci_idat_mxwt;
        RMS_NORM_LOOP_1_1_slc_RMS_NORM_LOOP_1_1_RMS_NORM_LOOP_1_1_mul_55_16_itm <=
            z_out_20_67_16(39 DOWNTO 0);
        reg_operator_40_24_true_AC_TRN_AC_WRAP_acc_20_cse <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_82_nl),
            6) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39)),
            1), 1), 6) + CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_74_nl),
            6) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38)),
            1), 1), 6) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(z_out_8), 3), 6) +
            CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_64_nl),
            6) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36)),
            1), 1), 6), 6));
        operator_40_24_true_AC_TRN_AC_WRAP_acc_29_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
            (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(15)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(15))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(15)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(15))),
            7), 8) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_27_nl),
            8) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (operator_40_24_true_AC_TRN_AC_WRAP_acc_3_psp_sva_1(2)),
            1), 1), 8), 8));
        operator_40_24_true_AC_TRN_AC_WRAP_and_1_itm <= (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39))
            AND (NOT (z_out_9_1_0(1))) AND ((z_out_9_1_0(0)) OR CONV_SL_1_1(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(6
            DOWNTO 0)/=STD_LOGIC_VECTOR'("0000000")));
        operator_40_24_true_AC_TRN_AC_WRAP_acc_30_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_28_nl),
            9) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(16))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(16)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(16))
            & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(12),
            1),2))), 8), 9) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_nand_cse,
            1), 1), 9), 9));
        operator_40_24_true_AC_TRN_AC_WRAP_acc_37_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
            (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(23)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(23))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(23)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(23))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(23)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(23))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(23)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(23))),
            15), 16) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_35_nl),
            16), 16));
        operator_40_24_true_AC_TRN_AC_WRAP_acc_38_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(24))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(24)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(24))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(24)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(24))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(24)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(24))
            & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(20),
            1),2))), 16), 17) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_36_nl),
            17), 17));
        operator_40_24_true_AC_TRN_AC_WRAP_acc_45_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
            (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31))),
            23), 24) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_43_nl),
            24), 24));
        operator_40_24_true_AC_TRN_AC_WRAP_acc_46_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32))
            & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28),
            1),2))), 24), 25) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_44_nl),
            25), 25));
        operator_40_24_true_AC_TRN_AC_WRAP_acc_52_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34),
            1),2))), 30), 31) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_50_nl),
            31), 31));
        operator_40_24_true_AC_TRN_AC_WRAP_acc_51_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
            (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37))), 29), 30) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_49_nl),
            30), 30));
        SF_LOOP_3_acc_17_itm_18_9 <= MUX_v_10_2_2((z_out_27(18 DOWNTO 9)), (SF_LOOP_3_acc_17_sdt(18
            DOWNTO 9)), and_dcpl_445);
        SF_LOOP_3_acc_17_itm_8_0 <= MUX1HOT_v_9_3_2(RMS_NORM_LOOP_2_2_asn_SF_LOOP_3_acc_17_itm_1_8_RMS_NORM_LOOP_2_and_nl,
            (z_out_27(8 DOWNTO 0)), (SF_LOOP_3_acc_17_sdt(8 DOWNTO 0)), STD_LOGIC_VECTOR'(
            (NOT mux_680_nl) & and_dcpl_361 & and_dcpl_445));
        reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd <= z_out_14_23_0(23
            DOWNTO 20);
        reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_1 <= MUX_v_3_2_2((z_out_14_23_0(19
            DOWNTO 17)), (operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_conc_2_itm_19_0(19
            DOWNTO 17)), and_461_itm);
        RMS_NORM_LOOP_2_mul_1_itm <= z_out_5(51 DOWNTO 0);
        GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva <= MUX_v_3_2_2(STD_LOGIC_VECTOR'("000"),
            GEMM_3D_FLOAT_LOOP_4_1_l_mux1h_4_nl, mux_742_nl);
        reg_attention_round_a_cse_slc <= z_out_5(55 DOWNTO 52);
        attention_round_qr_39_16_lpi_4_dfm_7_0 <= MUX_v_8_2_2((z_out_14_23_0(7 DOWNTO
            0)), (attention_round_qr_39_16_lpi_4_dfm_mx0w0(7 DOWNTO 0)), attention_round_acc_itm_40_1);
        QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_slc_QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_acc_17_svs
            <= QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_acc_itm_17_1;
        LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_slc_LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_conc_1_1_1_0_svs
            <= MUX_v_2_2_2(LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_mux_tmp, STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_90_nl),
            2)), and_dcpl_454);
        RESHAPE_2D_TO_3D_LOOP_3_acc_11_psp_1 <= MUX_v_4_2_2(RESHAPE_2D_TO_3D_LOOP_3_acc_11_psp_1_mx0w0,
            STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_92_nl), 4)), and_dcpl_454);
        APPLY_ROTARY_POS_EMB_LOOP_6_mul_8_itm <= z_out_25;
        APPLY_ROTARY_POS_EMB_LOOP_6_mul_9_itm <= z_out_26;
        APPLY_ROTARY_POS_EMB_LOOP_6_mul_3_itm <= z_out_27;
        APPLY_ROTARY_POS_EMB_LOOP_6_mul_4_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED'(
            SIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_mux_29_nl & APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_or_2_nl
            & APPLY_ROTARY_POS_EMB_LOOP_6_mux_30_nl & APPLY_ROTARY_POS_EMB_LOOP_6_mux_31_nl)
            * SIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_8_nl
            & APPLY_ROTARY_POS_EMB_LOOP_6_mux_32_nl)), 56));
        CACHE_UPDATE_LOOP_3_qr_sva_1 <= CACHE_UPDATE_LOOP_3_qif_read_rom_k_cache_rom_map_1_itm;
        CACHE_UPDATE_LOOP_3_1_qr_sva_1 <= CACHE_UPDATE_LOOP_3_1_qif_read_rom_v_cache_rom_map_1_itm;
        CACHE_UPDATE_LOOP_3_1_acc_18_psp_1 <= z_out_32;
        CACHE_UPDATE_LOOP_3_acc_18_psp_1 <= z_out_33;
        SF_LOOP_3_acc_11_itm_17_15 <= SF_LOOP_3_acc_11_itm_1(17 DOWNTO 15);
        SF_LOOP_3_acc_11_itm_13_0 <= SF_LOOP_3_acc_11_itm_1(13 DOWNTO 0);
        SF_LOOP_3_mul_12_itm_16_15 <= z_out_21(16 DOWNTO 15);
        SF_LOOP_3_mul_12_itm_12_9_slc <= z_out_21(12 DOWNTO 10);
        SF_LOOP_3_mul_12_itm_3_0 <= z_out_21(3 DOWNTO 0);
        SF_LOOP_3_mul_15_itm_16_10 <= SF_LOOP_3_mul_15_itm_1(16 DOWNTO 10);
        SF_LOOP_3_mul_15_itm_6_0 <= SF_LOOP_3_mul_15_itm_1(6 DOWNTO 0);
        SF_LOOP_3_acc_15_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(z_out_23),
            18), 19) + CONV_SIGNED(CONV_SIGNED(SIGNED(z_out_4), 18), 19), 19));
        SF_LOOP_3_acc_16_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(z_out_23),
            18), 19) + CONV_SIGNED(CONV_SIGNED(SIGNED(z_out_4), 18), 19), 19));
        SF_LOOP_3_acc_30_psp <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_27_nl),
            20) + SIGNED(SF_LOOP_3_acc_26_itm_19_9 & SF_LOOP_3_acc_26_itm_8_0), 20));
        SF_LOOP_3_acc_39_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(UNSIGNED(SF_LOOP_3_acc_38_nl),
            7) + CONV_SIGNED(CONV_SIGNED(SIGNED(STD_LOGIC_VECTOR'( "10111") & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(2))),
            6), 7) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(SF_LOOP_3_acc_5_psp_sva(20),
            1), 1), 7), 7));
        SF_LOOP_3_mul_19_itm_12_11 <= z_out_21(12 DOWNTO 11);
        SF_LOOP_3_mul_19_itm_9_4 <= z_out_21(9 DOWNTO 4);
        SF_LOOP_3_acc_93_psp <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'(
            (SF_LOOP_3_acc_5_psp_sva(20)) & '0' & (SF_LOOP_3_acc_5_psp_sva(20))),
            3), 4) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(SF_LOOP_3_acc_5_psp_sva(21),
            1),3)), 3), 4), 4));
        SF_LOOP_3_acc_40_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_mul_7_itm),
            10), 11) + CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_39_itm), 7),
            11) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(SF_LOOP_3_acc_6_psp_sva_1(17),
            1), 1), 11), 11));
        SF_LOOP_3_acc_6_psp_sva_18_17 <= SF_LOOP_3_acc_6_psp_sva_1(18 DOWNTO 17);
        SF_LOOP_3_acc_35_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED((SF_LOOP_3_acc_6_psp_sva_1(18))
            & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SF_LOOP_3_acc_6_psp_sva_1(18),
            1),3)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SF_LOOP_3_acc_6_psp_sva_1(18),
            1),2)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SF_LOOP_3_acc_6_psp_sva_1(18),
            1),2)) & STD_LOGIC_VECTOR'( "00") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SF_LOOP_3_acc_6_psp_sva_1(18),
            1),4))), 17), 18) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_6_psp_sva_1(16
            DOWNTO 0)), 17), 18), 18));
        SF_LOOP_3_acc_46_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(19
            DOWNTO 18)) & '0' & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(19 DOWNTO
            18)) & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1 & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_0
            & reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1 & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(18))
            & APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva), 17), 19) + CONV_SIGNED(SIGNED(SF_LOOP_3_acc_44_nl),
            19), 19));
        SF_LOOP_3_acc_50_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_49_nl),
            26) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_mul_4_itm_23_22 &
            '0' & SF_LOOP_3_mul_4_itm_20_5 & '0' & SF_LOOP_3_mul_4_itm_3_0), 24),
            26), 26));
        SF_LOOP_3_acc_54_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_mul_6_itm),
            31), 32) + CONV_SIGNED(SIGNED(SF_LOOP_3_acc_53_nl), 32), 32));
        SF_LOOP_3_acc_58_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_57_nl),
            38) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_mul_sdt_sva_35_34
            & '0' & SF_LOOP_3_mul_sdt_sva_32_17 & '0' & SF_LOOP_3_mul_sdt_sva_15_0),
            36), 38), 38));
        operator_80_48_true_AC_TRN_AC_WRAP_operator_80_48_true_AC_TRN_AC_WRAP_slc_SOFTMAX_LOOP_4_sqr_56_1_itm_slc
            <= z_out_5(56 DOWNTO 52);
        operator_40_24_true_AC_TRN_AC_WRAP_2_acc_29_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
            (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(15)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(15))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(15)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(15))),
            7), 8) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_27_nl),
            8) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (operator_40_24_true_AC_TRN_AC_WRAP_2_acc_3_psp_sva_1(2)),
            1), 1), 8), 8));
        operator_40_24_true_AC_TRN_AC_WRAP_2_acc_30_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_28_nl),
            9) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(16))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(16)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(16))
            & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(12),
            1),2))), 8), 9) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_nand_cse,
            1), 1), 9), 9));
        operator_40_24_true_AC_TRN_AC_WRAP_2_acc_37_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
            (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(23)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(23))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(23)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(23))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(23)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(23))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(23)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(23))),
            15), 16) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_35_nl),
            16), 16));
        operator_40_24_true_AC_TRN_AC_WRAP_2_acc_38_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(24))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(24)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(24))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(24)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(24))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(24)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(24))
            & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(20),
            1),2))), 16), 17) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_36_nl),
            17), 17));
        operator_40_24_true_AC_TRN_AC_WRAP_2_acc_45_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
            (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31))),
            23), 24) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_43_nl),
            24), 24));
        operator_40_24_true_AC_TRN_AC_WRAP_2_acc_46_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32))
            & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28),
            1),2))), 24), 25) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_44_nl),
            25), 25));
        operator_40_24_true_AC_TRN_AC_WRAP_2_acc_52_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34),
            1),2))), 30), 31) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_50_nl),
            31), 31));
        operator_40_24_true_AC_TRN_AC_WRAP_2_acc_51_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
            (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37))
            & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37))), 29), 30) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_49_nl),
            30), 30));
        RMS_NORM_LOOP_2_2_mul_1_itm <= z_out_19(52 DOWNTO 0);
        attention_round_1_qr_39_16_lpi_4_dfm_7_0 <= MUX_v_8_2_2((z_out_14_23_0(7
            DOWNTO 0)), (attention_round_1_qr_39_16_lpi_4_dfm_mx0w0(7 DOWNTO 0)),
            attention_round_1_acc_itm_40_1);
        QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_slc_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_17_svs
            <= QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_acc_itm_17_1;
        INIT_2D_MEM_LOOP_2_3_INIT_2D_MEM_LOOP_2_3_nor_itm <= INIT_2D_MEM_LOOP_2_3_INIT_2D_MEM_LOOP_2_3_nor_itm_1;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        GEMM_3D_FLOAT_LOOP_4_1_asn_itm <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000");
      ELSIF ( (input_rsc_clken_d_1 AND mux_465_nl) = '1' ) THEN
        GEMM_3D_FLOAT_LOOP_4_1_asn_itm <= MUX_v_40_2_2(STD_LOGIC_VECTOR'("0000000000000000000000000000000000000000"),
            rms_norm_384_variance_mux1h_nl, GEMM_3D_FLOAT_LOOP_4_1_nand_nl);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        INIT_2D_MEM_LOOP_2_2_acc_itm <= STD_LOGIC_VECTOR'( "000000000");
      ELSIF ( (input_rsc_clken_d_1 AND (NOT mux_476_nl)) = '1' ) THEN
        INIT_2D_MEM_LOOP_2_2_acc_itm <= MUX_v_9_2_2(STD_LOGIC_VECTOR'("000000000"),
            INIT_2D_MEM_LOOP_2_2_mux1h_15_nl, INIT_2D_MEM_LOOP_2_2_nand_nl);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd
            <= STD_LOGIC_VECTOR'( "00000000");
        reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1
            <= STD_LOGIC_VECTOR'( "000000000");
        reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_2 <= STD_LOGIC_VECTOR'(
            "0000");
        reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_3 <= '0';
        reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_4 <= STD_LOGIC_VECTOR'(
            "000");
      ELSIF ( operator_40_24_true_AC_TRN_AC_WRAP_1_and_2_ssc = '1' ) THEN
        reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd
            <= MUX1HOT_v_8_3_2((operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z(16
            DOWNTO 9)), (APPLY_ROTARY_POS_EMB_LOOP_6_cosval_read_rom_cos_tab_rom_map_1_itm(16
            DOWNTO 9)), (z_out_4(16 DOWNTO 9)), STD_LOGIC_VECTOR'( and_382_itm &
            operator_40_24_true_AC_TRN_AC_WRAP_1_and_itm & and_dcpl_361));
        reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1
            <= MUX1HOT_v_9_4_2(for_for_j_and_nl, (operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z(8
            DOWNTO 0)), (APPLY_ROTARY_POS_EMB_LOOP_6_cosval_read_rom_cos_tab_rom_map_1_itm(8
            DOWNTO 0)), (z_out_4(8 DOWNTO 0)), STD_LOGIC_VECTOR'( (NOT mux_516_nl)
            & and_382_itm & operator_40_24_true_AC_TRN_AC_WRAP_1_and_itm & and_dcpl_361));
        reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_2 <= MUX1HOT_v_4_3_2((z_out_14_23_0(16
            DOWNTO 13)), (APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_itm(16
            DOWNTO 13)), (operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_conc_2_itm_19_0(16
            DOWNTO 13)), STD_LOGIC_VECTOR'( operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_or_3_cse
            & and_dcpl_374 & and_461_itm));
        reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_3 <= MUX1HOT_s_1_4_2((z_out_14_23_0(12)),
            (APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_itm(12)),
            (operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_conc_2_itm_19_0(12)), (RMS_NORM_LOOP_2_2_read_rom_ln_weight_rom_map_1_itm(12)),
            STD_LOGIC_VECTOR'( operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_or_3_cse
            & and_dcpl_374 & and_461_itm & and_dcpl_215));
        reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_4 <= MUX1HOT_v_3_5_2((RMS_NORM_LOOP_2_read_rom_ln_weight_in_rom_map_1_itm(11
            DOWNTO 9)), (z_out_14_23_0(11 DOWNTO 9)), (APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_itm(11
            DOWNTO 9)), (operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_conc_2_itm_19_0(11
            DOWNTO 9)), (RMS_NORM_LOOP_2_2_read_rom_ln_weight_rom_map_1_itm(11 DOWNTO
            9)), STD_LOGIC_VECTOR'( and_349_itm & operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_or_3_cse
            & and_dcpl_374 & and_461_itm & and_dcpl_215));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm <= '0';
      ELSIF ( (input_rsc_clken_d_1 AND (and_dcpl_342 OR and_dcpl_369 OR and_dcpl_291
          OR and_dcpl_317 OR and_dcpl_298 OR and_dcpl_311 OR CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm_mx0c6
          OR and_dcpl_379 OR and_dcpl_284)) = '1' ) THEN
        CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm <= MUX1HOT_s_1_9_2(for_for_for_for_nor_nl,
            nand_184_cse, INIT_2D_MEM_LOOP_2_and_1_nl, LINEAR_FORWARD_NO_MUL_LOOP_5_1_or_cse,
            LINEAR_FORWARD_NO_MUL_LOOP_5_LINEAR_FORWARD_NO_MUL_LOOP_5_and_1_tmp,
            LINEAR_FORWARD_NO_MUL_LOOP_5_and_1_nl, LINEAR_FORWARD_NO_MUL_LOOP_2_LINEAR_FORWARD_NO_MUL_LOOP_2_nor_tmp,
            CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_nl, (NOT z_out_28_2), STD_LOGIC_VECTOR'(
            and_dcpl_342 & and_dcpl_369 & and_dcpl_291 & and_dcpl_317 & and_dcpl_298
            & and_dcpl_311 & CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm_mx0c6
            & and_dcpl_379 & and_dcpl_284));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        attention_abs_qif_acc_pmx_lpi_1_dfm <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000");
      ELSIF ( (input_rsc_clken_d_1 AND (NOT(((or_353_cse AND (fsm_output(3))) XOR
          (fsm_output(4))) AND and_dcpl_134))) = '1' ) THEN
        attention_abs_qif_acc_pmx_lpi_1_dfm <= MUX_v_31_2_2(attention_abs_qif_acc_pmx_lpi_1_dfm_mx0w0,
            (rms_norm_384_val_acc_psp_sva_1(30 DOWNTO 0)), and_396_nl);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        compute_sqrt_guess_sva_29_0 <= STD_LOGIC_VECTOR'( "000000000000000000000000000000");
      ELSIF ( (input_rsc_clken_d_1 AND ((and_dcpl_111 AND and_dcpl_128) OR and_dcpl_154))
          = '1' ) THEN
        compute_sqrt_guess_sva_29_0 <= MUX_v_30_2_2(attention_abs_qif_acc_pmx_lpi_1_dfm_mx1_30_1,
            (compute_sqrt_for_acc_1_itm_40_1_1(29 DOWNTO 0)), and_dcpl_154);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt <= STD_LOGIC_VECTOR'( "0000");
      ELSIF ( (input_rsc_clken_d_1 AND mux_560_nl) = '1' ) THEN
        APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt <= MUX_v_4_2_2(STD_LOGIC_VECTOR'("0000"),
            compute_sqrt_for_i_mux1h_nl, mux_573_nl);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        RMS_NORM_LOOP_2_2_dfr_sva_9 <= '0';
        RMS_NORM_LOOP_2_2_dfr_sva_8_0 <= STD_LOGIC_VECTOR'( "000000000");
      ELSIF ( RMS_NORM_LOOP_2_2_and_ssc = '1' ) THEN
        RMS_NORM_LOOP_2_2_dfr_sva_9 <= (operator_40_24_true_AC_TRN_AC_WRAP_mux_nl
            AND (NOT RMS_NORM_LOOP_2_2_dfr_sva_mx0c3) AND (NOT RMS_NORM_LOOP_2_2_dfr_sva_mx0c0))
            OR RMS_NORM_LOOP_2_2_dfr_sva_mx0c2;
        RMS_NORM_LOOP_2_2_dfr_sva_8_0 <= MUX_v_9_2_2(operator_40_24_true_AC_TRN_AC_WRAP_and_1_nl,
            STD_LOGIC_VECTOR'("111111111"), RMS_NORM_LOOP_2_2_dfr_sva_mx0c2);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm <=
            '0';
      ELSIF ( (input_rsc_clken_d_1 AND (and_dcpl_393 OR APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c1
          OR APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c2
          OR and_dcpl_263 OR APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c4
          OR and_dcpl_245 OR APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c6
          OR and_dcpl_213 OR and_dcpl_331)) = '1' ) THEN
        APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm <=
            MUX1HOT_s_1_4_2((z_out_10(3)), z_out_28_2, z_out_29_2, z_out_30_2, STD_LOGIC_VECTOR'(
            and_dcpl_393 & compute_sqrt_for_or_3_nl & compute_sqrt_for_or_4_nl &
            compute_sqrt_for_or_5_nl));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd <= '0';
        reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1 <= STD_LOGIC_VECTOR'( "000000000000000000000000000000000000000");
      ELSIF ( GEMM_3D_FLOAT_LOOP_3_and_ssc = '1' ) THEN
        reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd <= MUX1HOT_s_1_11_2((compute_sqrt_for_acc_1_itm_40_1_1(39)),
            (input_rsci_q_d(39)), attention_max_attn_fixed_t_attention_max_attn_fixed_t_and_mut_mx0w2_39,
            (operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z(39)), (attention_5_1_384_384_8_48_q_proj_rsci_q_d(39)),
            (attention_5_1_384_384_8_48_q_embed_rsci_q_d(39)), (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(39)),
            (z_out(39)), (attention_5_1_384_384_8_48_attn_output_2D_rsci_q_d(39)),
            (compute_sqrt_1_for_acc_1_itm_40_1_1(39)), attention_max_attn_fixed_t_1_conc_psp_mx0w11_39,
            STD_LOGIC_VECTOR'( and_dcpl_154 & and_433_itm & and_dcpl_140 & and_434_itm
            & and_dcpl_350 & and_dcpl_351 & and_439_itm & and_440_itm & and_441_itm
            & and_dcpl_156 & and_dcpl_176));
        reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1 <= MUX1HOT_v_39_11_2((compute_sqrt_for_acc_1_itm_40_1_1(38
            DOWNTO 0)), (input_rsci_q_d(38 DOWNTO 0)), attention_max_attn_fixed_t_attention_max_attn_fixed_t_and_mut_mx0w2_38_0,
            (operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z(38 DOWNTO 0)), (attention_5_1_384_384_8_48_q_proj_rsci_q_d(38
            DOWNTO 0)), (attention_5_1_384_384_8_48_q_embed_rsci_q_d(38 DOWNTO 0)),
            (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(38 DOWNTO 0)), (z_out(38
            DOWNTO 0)), (attention_5_1_384_384_8_48_attn_output_2D_rsci_q_d(38 DOWNTO
            0)), (compute_sqrt_1_for_acc_1_itm_40_1_1(38 DOWNTO 0)), attention_max_attn_fixed_t_1_conc_psp_mx0w11_38_0,
            STD_LOGIC_VECTOR'( and_dcpl_154 & and_433_itm & and_dcpl_140 & and_434_itm
            & and_dcpl_350 & and_dcpl_351 & and_439_itm & and_440_itm & and_441_itm
            & and_dcpl_156 & and_dcpl_176));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        exit_QUANTIZE_ACTIVATION_LOOP_2_sva_dfm <= '0';
      ELSIF ( (input_rsc_clken_d_1 AND (NOT(or_dcpl_138 OR or_dcpl_137))) = '1' )
          THEN
        exit_QUANTIZE_ACTIVATION_LOOP_2_sva_dfm <= exit_QUANTIZE_ACTIVATION_LOOP_2_1_sva_dfm_mx0w0;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_5 <= STD_LOGIC_VECTOR'(
            "000000000");
      ELSIF ( (input_rsc_clken_d_1 AND (NOT and_dcpl_512) AND (NOT and_dcpl_350))
          = '1' ) THEN
        reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_5 <= MUX1HOT_v_9_6_2((RMS_NORM_LOOP_2_read_rom_ln_weight_in_rom_map_1_itm(8
            DOWNTO 0)), (z_out_14_23_0(8 DOWNTO 0)), z_out_3, (APPLY_ROTARY_POS_EMB_LOOP_6_sinval_read_rom_sin_tab_rom_map_1_itm(8
            DOWNTO 0)), (operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_conc_2_itm_19_0(8
            DOWNTO 0)), (RMS_NORM_LOOP_2_2_read_rom_ln_weight_rom_map_1_itm(8 DOWNTO
            0)), STD_LOGIC_VECTOR'( and_349_itm & operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_or_3_cse
            & and_dcpl_409 & and_dcpl_374 & and_461_itm & and_dcpl_215));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        SF_LOOP_3_acc_26_itm_19_9 <= STD_LOGIC_VECTOR'( "00000000000");
      ELSIF ( SF_LOOP_3_and_ssc = '1' ) THEN
        SF_LOOP_3_acc_26_itm_19_9 <= SF_LOOP_3_acc_26_sdt(19 DOWNTO 9);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        SF_LOOP_3_acc_26_itm_8_0 <= STD_LOGIC_VECTOR'( "000000000");
      ELSIF ( (SF_LOOP_3_and_ssc AND mux_693_nl) = '1' ) THEN
        SF_LOOP_3_acc_26_itm_8_0 <= MUX_v_9_2_2(z_out_1, (SF_LOOP_3_acc_26_sdt(8
            DOWNTO 0)), and_dcpl_361);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        RMS_NORM_LOOP_2_slc_RMS_NORM_LOOP_2_mul_67_28_ncse_sva <= STD_LOGIC_VECTOR'(
            "0000000000000000000000000000000000000000");
      ELSIF ( (input_rsc_clken_d_1 AND (NOT(or_dcpl_138 OR nand_258_cse OR or_603_cse)))
          = '1' ) THEN
        RMS_NORM_LOOP_2_slc_RMS_NORM_LOOP_2_mul_67_28_ncse_sva <= z_out_20_67_16(51
            DOWNTO 12);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        attention_abs_3_qr_sva <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000");
      ELSIF ( (input_rsc_clken_d_1 AND (NOT(and_dcpl_118 AND and_dcpl_167))) = '1'
          ) THEN
        attention_abs_3_qr_sva <= attention_abs_2_mux_2;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        QUANTIZE_ACTIVATION_LOOP_2_slc_40_1_svs <= '0';
      ELSIF ( (input_rsc_clken_d_1 AND (NOT(or_dcpl_138 OR nand_258_cse OR or_1213_cse)))
          = '1' ) THEN
        QUANTIZE_ACTIVATION_LOOP_2_slc_40_1_svs <= QUANTIZE_ACTIVATION_LOOP_2_acc_4_nl(40);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_5_2 <= STD_LOGIC_VECTOR'( "0000");
        APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0 <= STD_LOGIC_VECTOR'( "00");
      ELSIF ( APPLY_ROTARY_POS_EMB_LOOP_6_k_and_3_cse = '1' ) THEN
        APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_5_2 <= RESHAPE_2D_TO_3D_LOOP_3_1_k_5_0_sva_2(5
            DOWNTO 2);
        APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0 <= MUX_v_2_2_2(QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_nl,
            (RESHAPE_2D_TO_3D_LOOP_3_1_k_5_0_sva_2(1 DOWNTO 0)), and_469_nl);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0 <= STD_LOGIC_VECTOR'( "000");
      ELSIF ( (input_rsc_clken_d_1 AND mux_817_nl) = '1' ) THEN
        APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0 <= MUX_v_3_2_2(STD_LOGIC_VECTOR'("000"),
            QUANTIZE_ACTIVATION_LOOP_5_1_k_mux1h_1_nl, APPLY_ROTARY_POS_EMB_LOOP_1_i_nand_nl);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LINEAR_FORWARD_NO_MUL_LOOP_4_ki_4_0_sva_3_0 <= STD_LOGIC_VECTOR'( "0000");
      ELSIF ( (input_rsc_clken_d_1 AND (and_dcpl_461 OR and_dcpl_462 OR and_dcpl_306
          OR and_dcpl_243)) = '1' ) THEN
        LINEAR_FORWARD_NO_MUL_LOOP_4_ki_4_0_sva_3_0 <= MUX_v_4_2_2(STD_LOGIC_VECTOR'("0000"),
            LINEAR_FORWARD_NO_MUL_LOOP_4_ki_mux1h_2_nl, not_2161_nl);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0 <= STD_LOGIC_VECTOR'( "000");
      ELSIF ( (input_rsc_clken_d_1 AND (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0_mx0c0
          OR GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0_mx0c1 OR GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0_mx0c2
          OR GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0_mx0c3)) = '1' ) THEN
        GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0 <= MUX_v_3_2_2(STD_LOGIC_VECTOR'("000"),
            GEMM_3D_FLOAT_LOOP_4_1_l_mux1h_5_nl, GEMM_3D_FLOAT_LOOP_1_1_i_not_2_nl);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd <= STD_LOGIC_VECTOR'( "00");
        reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1 <= '0';
      ELSIF ( CACHE_UPDATE_LOOP_2_1_j_and_ssc = '1' ) THEN
        reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"),
            GEMM_3D_FLOAT_LOOP_4_1_l_mux1h_6_nl, CACHE_UPDATE_LOOP_2_1_j_not_1_nl);
        reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1 <= GEMM_3D_FLOAT_LOOP_4_1_l_mux1h_7_nl
            AND (NOT CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c0);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp_4 <= STD_LOGIC_VECTOR'( "0000");
      ELSIF ( (input_rsc_clken_d_1 AND (mux_903_nl OR (fsm_output(8)))) = '1' ) THEN
        APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp_4 <= MUX_v_4_2_2(STD_LOGIC_VECTOR'("0000"),
            APPLY_ROTARY_POS_EMB_LOOP_6_mux1h_15_nl, not_2162_nl);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_sva <= STD_LOGIC_VECTOR'( "00000000");
        LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_sva <= STD_LOGIC_VECTOR'( "00000000");
        LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_sva <= STD_LOGIC_VECTOR'( "00000000");
      ELSIF ( LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_and_cse = '1' ) THEN
        LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_sva <= LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_read_rom_v_weights_rom_map_1_itm;
        LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_sva <= LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_read_rom_k_weights_rom_map_1_itm;
        LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_sva <= LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_read_rom_q_weights_rom_map_1_itm;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_ftd <= STD_LOGIC_VECTOR'( "000");
        reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd <= '0';
        reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd_1 <= '0';
      ELSIF ( APPLY_ROTARY_POS_EMB_LOOP_3_and_ssc = '1' ) THEN
        reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_ftd <= MUX_v_3_2_2((APPLY_ROTARY_POS_EMB_LOOP_3_mux1h_7_itm_4_1(3
            DOWNTO 1)), (z_out_11(4 DOWNTO 2)), APPLY_ROTARY_POS_EMB_LOOP_3_or_2_cse);
        reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd <= MUX1HOT_s_1_3_2(QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_nl,
            (APPLY_ROTARY_POS_EMB_LOOP_3_mux1h_7_itm_4_1(0)), (z_out_11(1)), STD_LOGIC_VECTOR'(
            APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_mx0c0 & and_dcpl_284 & APPLY_ROTARY_POS_EMB_LOOP_3_or_2_cse));
        reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd_1 <= MUX1HOT_s_1_3_2(QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_4_nl,
            (z_out_35(0)), (z_out_11(0)), STD_LOGIC_VECTOR'( APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_cse_sva_mx0c0
            & and_dcpl_284 & APPLY_ROTARY_POS_EMB_LOOP_3_or_2_cse));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        CACHE_UPDATE_LOOP_3_k_5_0_sva_1_5_2 <= STD_LOGIC_VECTOR'( "0000");
        CACHE_UPDATE_LOOP_3_k_5_0_sva_1_1_0 <= STD_LOGIC_VECTOR'( "00");
      ELSIF ( CACHE_UPDATE_LOOP_3_k_and_1_cse = '1' ) THEN
        CACHE_UPDATE_LOOP_3_k_5_0_sva_1_5_2 <= RESHAPE_2D_TO_3D_LOOP_3_k_5_0_sva_2(5
            DOWNTO 2);
        CACHE_UPDATE_LOOP_3_k_5_0_sva_1_1_0 <= MUX_v_2_2_2(QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_1_nl,
            (RESHAPE_2D_TO_3D_LOOP_3_k_5_0_sva_2(1 DOWNTO 0)), and_dcpl_379);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_slc_LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_conc_1_1_1_0_svs
            <= STD_LOGIC_VECTOR'( "00");
      ELSIF ( (input_rsc_clken_d_1 AND (NOT(or_dcpl_90 OR or_dcpl_137))) = '1' )
          THEN
        LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_slc_LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_conc_1_1_1_0_svs
            <= MUX_v_2_4_2((LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_sva(1 DOWNTO
            0)), (LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_sva(3 DOWNTO 2)), (LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_sva(5
            DOWNTO 4)), (LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_sva(7 DOWNTO 6)),
            STD_LOGIC_VECTOR'( reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd & reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd_1));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        CACHE_UPDATE_LOOP_3_qif_acc_3_ncse_2_0 <= STD_LOGIC_VECTOR'( "000");
      ELSIF ( (input_rsc_clken_d_1 AND (NOT((NOT mux_931_nl) AND and_dcpl_482)))
          = '1' ) THEN
        CACHE_UPDATE_LOOP_3_qif_acc_3_ncse_2_0 <= MUX1HOT_v_3_3_2(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(LINEAR_FORWARD_NO_MUL_LOOP_5_acc_2_nl),
            3)), z_out_34_2_0, STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_81_nl),
            3)), STD_LOGIC_VECTOR'( and_dcpl_316 & and_dcpl_488 & and_dcpl_361));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        RESHAPE_2D_TO_3D_LOOP_3_2_mux_3_itm_4_3 <= STD_LOGIC_VECTOR'( "00");
      ELSIF ( RESHAPE_2D_TO_3D_LOOP_3_2_and_ssc = '1' ) THEN
        RESHAPE_2D_TO_3D_LOOP_3_2_mux_3_itm_4_3 <= APPLY_ROTARY_POS_EMB_LOOP_3_k_4_0_sva_2(4
            DOWNTO 3);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        RESHAPE_2D_TO_3D_LOOP_3_2_mux_3_itm_2_0 <= STD_LOGIC_VECTOR'( "000");
      ELSIF ( (RESHAPE_2D_TO_3D_LOOP_3_2_and_ssc AND (NOT(mux_928_nl AND and_dcpl_39)))
          = '1' ) THEN
        RESHAPE_2D_TO_3D_LOOP_3_2_mux_3_itm_2_0 <= MUX1HOT_v_3_6_2(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(LINEAR_FORWARD_NO_MUL_LOOP_5_2_acc_2_nl),
            3)), z_out_36_2_0, STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_69_nl),
            3)), STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_91_nl), 3)),
            LINEAR_FORWARD_NO_MUL_LOOP_3_2_ko_2_0_sva_1_mx0w2, (APPLY_ROTARY_POS_EMB_LOOP_3_k_4_0_sva_2(2
            DOWNTO 0)), STD_LOGIC_VECTOR'( and_dcpl_316 & and_dcpl_488 & and_dcpl_361
            & and_dcpl_454 & and_dcpl_247 & and_dcpl_284));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LINEAR_FORWARD_NO_MUL_LOOP_5_or_itm <= '0';
      ELSIF ( (input_rsc_clken_d_1 AND (and_dcpl_317 OR LINEAR_FORWARD_NO_MUL_LOOP_5_or_itm_mx0c1
          OR and_dcpl_503)) = '1' ) THEN
        LINEAR_FORWARD_NO_MUL_LOOP_5_or_itm <= LINEAR_FORWARD_NO_MUL_LOOP_5_mux_1_nl
            AND (NOT LINEAR_FORWARD_NO_MUL_LOOP_5_or_itm_mx0c1);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        INIT_2D_MEM_LOOP_2_1_asn_psp <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000");
      ELSIF ( (input_rsc_clken_d_1 AND mux_950_nl) = '1' ) THEN
        INIT_2D_MEM_LOOP_2_1_asn_psp <= MUX1HOT_v_40_6_2(attention_5_1_384_384_8_48_k_proj_re_rsci_q_d,
            attention_5_1_384_384_8_48_k_proj_rsci_q_d, attention_5_1_384_384_8_48_k_proj_transposed_rsci_q_d,
            attention_5_1_384_384_8_48_attn_weights_rsci_q_d, attention_5_1_384_384_8_48_v_cache_upd_rsci_q_d,
            output_rsci_q_d, STD_LOGIC_VECTOR'( and_dcpl_349 & and_dcpl_350 & and_dcpl_351
            & and_527_nl & and_dcpl_355 & and_531_nl));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        INIT_2D_MEM_LOOP_2_2_asn_psp <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000");
      ELSIF ( (input_rsc_clken_d_1 AND (and_dcpl_349 OR and_dcpl_350)) = '1' ) THEN
        INIT_2D_MEM_LOOP_2_2_asn_psp <= MUX_v_40_2_2(attention_5_1_384_384_8_48_v_proj_re_rsci_q_d,
            apply_rotary_pos_emb_1_8_48_rotated_q_rsci_q_d, and_dcpl_350);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LINEAR_FORWARD_NO_MUL_LOOP_2_mul_1_itm <= STD_LOGIC_VECTOR'( "000000000000000000000000000000000000000000000000000000000000");
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_mul_1_itm <= STD_LOGIC_VECTOR'( "000000000000000000000000000000000000000000000000000000000000");
        LINEAR_FORWARD_NO_MUL_LOOP_2_1_mul_1_itm <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000000000000000000000000");
      ELSIF ( LINEAR_FORWARD_NO_MUL_LOOP_2_and_cse = '1' ) THEN
        LINEAR_FORWARD_NO_MUL_LOOP_2_mul_1_itm <= z_out_7;
        LINEAR_FORWARD_NO_MUL_LOOP_2_2_mul_1_itm <= z_out_6;
        LINEAR_FORWARD_NO_MUL_LOOP_2_1_mul_1_itm <= z_out_5;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva <= STD_LOGIC_VECTOR'( "000000");
      ELSIF ( (input_rsc_clken_d_1 AND (NOT(mux_969_nl AND and_dcpl_29))) = '1' )
          THEN
        APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva <= MUX_v_6_2_2(STD_LOGIC_VECTOR'("000000"),
            (APPLY_ROTARY_POS_EMB_LOOP_6_k_mux1h_10_nl & APPLY_ROTARY_POS_EMB_LOOP_6_k_mux1h_13_nl),
            mux_958_nl);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        reg_CACHE_UPDATE_LOOP_3_k_5_0_1_ftd <= '0';
        reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1 <= STD_LOGIC_VECTOR'( "00");
        reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_0 <= '0';
        reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1 <= STD_LOGIC_VECTOR'( "00");
      ELSIF ( CACHE_UPDATE_LOOP_3_k_and_ssc = '1' ) THEN
        reg_CACHE_UPDATE_LOOP_3_k_5_0_1_ftd <= APPLY_ROTARY_POS_EMB_LOOP_6_k_APPLY_ROTARY_POS_EMB_LOOP_6_k_mux_1_nl
            AND CACHE_UPDATE_LOOP_3_k_nand_1_itm;
        reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1 <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"),
            APPLY_ROTARY_POS_EMB_LOOP_6_k_mux1h_12_nl, CACHE_UPDATE_LOOP_3_k_nand_1_itm);
        reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_0 <= APPLY_ROTARY_POS_EMB_LOOP_6_k_mux1h_15_nl
            AND CACHE_UPDATE_LOOP_3_k_nand_1_itm;
        reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1 <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"),
            APPLY_ROTARY_POS_EMB_LOOP_6_k_mux1h_14_nl, CACHE_UPDATE_LOOP_3_k_nand_1_itm);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva <= STD_LOGIC_VECTOR'( "00000");
      ELSIF ( (input_rsc_clken_d_1 AND (NOT((NOT mux_993_nl) AND and_dcpl_527)))
          = '1' ) THEN
        APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva <= z_out_10;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        exit_APPLY_ROTARY_POS_EMB_LOOP_3_sva_dfm <= '0';
      ELSIF ( (input_rsc_clken_d_1 AND (NOT(or_tmp_229 OR (fsm_output(8)) OR or_tmp_197
          OR or_dcpl_101))) = '1' ) THEN
        exit_APPLY_ROTARY_POS_EMB_LOOP_3_sva_dfm <= (NOT z_out_29_2) OR LINEAR_FORWARD_NO_MUL_LOOP_5_or_itm;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        SF_LOOP_3_acc_96_psp <= STD_LOGIC_VECTOR'( "00000000000");
        SF_LOOP_3_mul_17_itm <= STD_LOGIC_VECTOR'( "0000000000000000000");
      ELSIF ( SF_LOOP_3_and_2_cse = '1' ) THEN
        SF_LOOP_3_acc_96_psp <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_102_nl),
            11) + CONV_UNSIGNED(CONV_SIGNED(SIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_q_d(2))
            & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(2)) & STD_LOGIC_VECTOR'(
            "000") & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(2)) & STD_LOGIC_VECTOR'(
            "00") & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(2))), 10),
            11), 11));
        SF_LOOP_3_mul_17_itm <= z_out_26(18 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        SF_LOOP_3_mul_5_itm_31_30 <= STD_LOGIC_VECTOR'( "00");
        SF_LOOP_3_mul_5_itm_28_13 <= STD_LOGIC_VECTOR'( "0000000000000000");
        SF_LOOP_3_mul_5_itm_11_0 <= STD_LOGIC_VECTOR'( "000000000000");
        SF_LOOP_3_mul_6_itm <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000");
        SF_LOOP_3_mul_2_itm_18_17 <= STD_LOGIC_VECTOR'( "00");
        SF_LOOP_3_mul_2_itm_15_0 <= STD_LOGIC_VECTOR'( "0000000000000000");
        SF_LOOP_3_mul_3_itm_21_20 <= STD_LOGIC_VECTOR'( "00");
        SF_LOOP_3_mul_3_itm_18_3 <= STD_LOGIC_VECTOR'( "0000000000000000");
        SF_LOOP_3_mul_3_itm_1_0 <= STD_LOGIC_VECTOR'( "00");
        SF_LOOP_3_mul_4_itm_23_22 <= STD_LOGIC_VECTOR'( "00");
        SF_LOOP_3_mul_4_itm_20_5 <= STD_LOGIC_VECTOR'( "0000000000000000");
        SF_LOOP_3_mul_4_itm_3_0 <= STD_LOGIC_VECTOR'( "0000");
        SF_LOOP_3_mul_7_itm <= STD_LOGIC_VECTOR'( "0000000000");
        SF_LOOP_3_acc_28_itm <= STD_LOGIC_VECTOR'( "00000000000000000000");
      ELSIF ( SF_LOOP_3_and_4_ssc = '1' ) THEN
        SF_LOOP_3_mul_5_itm_31_30 <= z_out_25(31 DOWNTO 30);
        SF_LOOP_3_mul_5_itm_28_13 <= z_out_25(28 DOWNTO 13);
        SF_LOOP_3_mul_5_itm_11_0 <= z_out_25(11 DOWNTO 0);
        SF_LOOP_3_mul_6_itm <= z_out_6(30 DOWNTO 0);
        SF_LOOP_3_mul_2_itm_18_17 <= z_out_27(18 DOWNTO 17);
        SF_LOOP_3_mul_2_itm_15_0 <= z_out_27(15 DOWNTO 0);
        SF_LOOP_3_mul_3_itm_21_20 <= z_out_26(21 DOWNTO 20);
        SF_LOOP_3_mul_3_itm_18_3 <= z_out_26(18 DOWNTO 3);
        SF_LOOP_3_mul_3_itm_1_0 <= z_out_26(1 DOWNTO 0);
        SF_LOOP_3_mul_4_itm_23_22 <= z_out_22(23 DOWNTO 22);
        SF_LOOP_3_mul_4_itm_20_5 <= z_out_22(20 DOWNTO 5);
        SF_LOOP_3_mul_4_itm_3_0 <= z_out_22(3 DOWNTO 0);
        SF_LOOP_3_mul_7_itm <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED'( UNSIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(11
            DOWNTO 8)) * UNSIGNED'( "100101")), 10));
        SF_LOOP_3_acc_28_itm <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_1
            & reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_2 & reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_3
            & reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_4 & reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_5)
            + CONV_SIGNED(CONV_SIGNED(SIGNED((SF_LOOP_3_acc_17_itm_18_9(9 DOWNTO
            1)) & '0' & SF_LOOP_3_acc_17_itm_8_0), 19), 20) + CONV_SIGNED(CONV_SIGNED(SIGNED(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_97_nl),
            8)) & (reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd(0))
            & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(16)) & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(16))
            & STD_LOGIC_VECTOR'( "00") & STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_98_nl),
            5))), 18), 20), 20));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        SF_LOOP_3_mul_sdt_sva_35_34 <= STD_LOGIC_VECTOR'( "00");
        SF_LOOP_3_mul_sdt_sva_32_17 <= STD_LOGIC_VECTOR'( "0000000000000000");
        SF_LOOP_3_mul_sdt_sva_15_0 <= STD_LOGIC_VECTOR'( "0000000000000000");
      ELSIF ( SF_LOOP_3_and_11_ssc = '1' ) THEN
        SF_LOOP_3_mul_sdt_sva_35_34 <= z_out_6(35 DOWNTO 34);
        SF_LOOP_3_mul_sdt_sva_32_17 <= z_out_6(32 DOWNTO 17);
        SF_LOOP_3_mul_sdt_sva_15_0 <= z_out_6(15 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        SF_LOOP_3_mul_itm_10_9 <= STD_LOGIC_VECTOR'( "00");
        SF_LOOP_3_mul_itm_7_0 <= STD_LOGIC_VECTOR'( "00000000");
        SF_LOOP_3_acc_5_psp_sva <= STD_LOGIC_VECTOR'( "0000000000000000000000");
      ELSIF ( SF_LOOP_3_and_12_ssc = '1' ) THEN
        SF_LOOP_3_mul_itm_10_9 <= z_out_22(10 DOWNTO 9);
        SF_LOOP_3_mul_itm_7_0 <= z_out_22(7 DOWNTO 0);
        SF_LOOP_3_acc_5_psp_sva <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(SIGNED(SF_LOOP_3_acc_31_nl),
            22) + CONV_UNSIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_30_psp), 20), 22),
            22));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        SF_LOOP_3_mul_1_itm_12_11 <= STD_LOGIC_VECTOR'( "00");
        SF_LOOP_3_mul_1_itm_9_0 <= STD_LOGIC_VECTOR'( "0000000000");
      ELSIF ( SF_LOOP_3_and_14_ssc = '1' ) THEN
        SF_LOOP_3_mul_1_itm_12_11 <= z_out_5(12 DOWNTO 11);
        SF_LOOP_3_mul_1_itm_9_0 <= z_out_5(9 DOWNTO 0);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        softmax_1_8_6_sum_sva_1 <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000");
      ELSIF ( (input_rsc_clken_d_1 AND (NOT((NOT mux_995_nl) AND and_dcpl_169)))
          = '1' ) THEN
        softmax_1_8_6_sum_sva_1 <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm)
            + SIGNED(z_out), 40));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        attention_abs_4_qif_acc_pmx_lpi_1_dfm <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000");
      ELSIF ( (input_rsc_clken_d_1 AND (NOT(((or_354_cse AND (fsm_output(3))) XOR
          (fsm_output(4))) AND and_dcpl_146))) = '1' ) THEN
        attention_abs_4_qif_acc_pmx_lpi_1_dfm <= MUX_v_31_2_2(attention_abs_4_qif_acc_pmx_lpi_1_dfm_mx0w0,
            (rms_norm_384_1_val_acc_psp_sva_1(30 DOWNTO 0)), and_557_nl);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        compute_sqrt_1_guess_sva_29_0 <= STD_LOGIC_VECTOR'( "000000000000000000000000000000");
      ELSIF ( (input_rsc_clken_d_1 AND ((and_dcpl_212 AND and_dcpl_149) OR and_dcpl_156))
          = '1' ) THEN
        compute_sqrt_1_guess_sva_29_0 <= MUX_v_30_2_2(attention_abs_4_qif_acc_pmx_lpi_1_dfm_mx1_30_1,
            (compute_sqrt_1_for_acc_1_itm_40_1_1(29 DOWNTO 0)), and_dcpl_156);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        exit_QUANTIZE_ACTIVATION_LOOP_2_1_sva_dfm <= '0';
      ELSIF ( (input_rsc_clken_d_1 AND (NOT(or_dcpl_181 OR or_tmp_197 OR nand_258_cse
          OR or_dcpl_136))) = '1' ) THEN
        exit_QUANTIZE_ACTIVATION_LOOP_2_1_sva_dfm <= exit_QUANTIZE_ACTIVATION_LOOP_2_1_sva_dfm_mx0w0;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_slc_71_32_1_ncse_sva <= STD_LOGIC_VECTOR'(
            "0000000000000000000000000000000000000000");
      ELSIF ( (input_rsc_clken_d_1 AND (NOT(or_dcpl_185 OR or_392_cse OR or_603_cse)))
          = '1' ) THEN
        RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_slc_71_32_1_ncse_sva <= z_out_19(71 DOWNTO
            32);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        attention_abs_7_qr_sva <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000");
      ELSIF ( (input_rsc_clken_d_1 AND (NOT(and_dcpl_122 AND and_dcpl_248))) = '1'
          ) THEN
        attention_abs_7_qr_sva <= attention_abs_6_mux_2;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        QUANTIZE_ACTIVATION_LOOP_2_1_slc_40_1_svs <= '0';
      ELSIF ( (input_rsc_clken_d_1 AND (NOT(or_dcpl_185 OR or_392_cse OR or_1213_cse)))
          = '1' ) THEN
        QUANTIZE_ACTIVATION_LOOP_2_1_slc_40_1_svs <= QUANTIZE_ACTIVATION_LOOP_2_1_acc_4_nl(40);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva <= STD_LOGIC_VECTOR'( "0000000000000000000000000000000000000000");
      ELSIF ( (input_rsc_clken_d_1 AND (NOT((NOT mux_1002_nl) AND (fsm_output(8)))))
          = '1' ) THEN
        QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva <= LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_div_1_cmp_z(39
            DOWNTO 0);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_sva <= STD_LOGIC_VECTOR'( "00000000");
      ELSIF ( (input_rsc_clken_d_1 AND (NOT(mux_1003_nl AND and_dcpl_163))) = '1'
          ) THEN
        LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_sva <= LINEAR_FORWARD_NO_MUL_LOOP_4_3_packed_val_read_rom_o_weights_rom_map_1_itm;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        LINEAR_FORWARD_NO_MUL_LOOP_2_3_mul_1_itm <= STD_LOGIC_VECTOR'( "000000000000000000000000000000000000000000000000000000000000");
      ELSIF ( (input_rsc_clken_d_1 AND (NOT(or_dcpl_96 OR or_tmp_197 OR or_dcpl_93
          OR or_1213_cse))) = '1' ) THEN
        LINEAR_FORWARD_NO_MUL_LOOP_2_3_mul_1_itm <= z_out_7;
      END IF;
    END IF;
  END PROCESS;
  QUANTIZE_ACTIVATION_LOOP_5_quantized_value_clamped_qelse_acc_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(
      -CONV_SIGNED(CONV_SIGNED(SIGNED(attention_round_qr_39_16_lpi_4_dfm_mx1_23_7),
      17), 18), 18));
  QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qelse_acc_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(
      -CONV_SIGNED(CONV_SIGNED(SIGNED(attention_round_1_qr_39_16_lpi_4_dfm_mx1_23_7),
      17), 18), 18));
  mux_313_nl <= MUX_s_1_2_2(or_tmp_24, mux_tmp_28, or_353_cse);
  or_352_nl <= CONV_SL_1_1(fsm_output(4 DOWNTO 3)/=STD_LOGIC_VECTOR'("01"));
  mux_311_nl <= MUX_s_1_2_2(mux_tmp_28, or_352_nl, fsm_output(2));
  mux_312_nl <= MUX_s_1_2_2(mux_tmp_302, mux_311_nl, fsm_output(1));
  mux_314_nl <= MUX_s_1_2_2(mux_313_nl, mux_312_nl, fsm_output(0));
  and_144_nl <= (NOT mux_314_nl) AND and_dcpl_134;
  compute_sqrt_guess_and_1_nl <= (NOT and_dcpl_154) AND and_dcpl_134 AND and_dcpl_128;
  mux_317_nl <= MUX_s_1_2_2(or_tmp_24, mux_tmp_28, or_354_cse);
  and_156_nl <= (NOT mux_317_nl) AND and_dcpl_146;
  compute_sqrt_guess_and_3_nl <= (NOT and_dcpl_156) AND and_dcpl_146 AND and_dcpl_149;
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_nl <= MUX1HOT_s_1_5_2(RMS_NORM_LOOP_2_2_dfr_sva_9,
      (compute_sqrt_for_acc_1_itm_40_1_1(39)), attention_max_attn_fixed_t_attention_max_attn_fixed_t_and_mut_mx0w2_39,
      reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd, (compute_sqrt_1_for_acc_1_itm_40_1_1(39)),
      STD_LOGIC_VECTOR'( and_160_ssc & and_dcpl_154 & and_dcpl_140 & and_dcpl_144
      & and_dcpl_156));
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_2_nl <= MUX1HOT_v_9_5_2(RMS_NORM_LOOP_2_2_dfr_sva_8_0,
      (compute_sqrt_for_acc_1_itm_40_1_1(38 DOWNTO 30)), (attention_max_attn_fixed_t_attention_max_attn_fixed_t_and_mut_mx0w2_38_0(38
      DOWNTO 30)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(38 DOWNTO 30)), (compute_sqrt_1_for_acc_1_itm_40_1_1(38
      DOWNTO 30)), STD_LOGIC_VECTOR'( and_160_ssc & and_dcpl_154 & and_dcpl_140 &
      and_dcpl_144 & and_dcpl_156));
  mux_335_nl <= MUX_s_1_2_2(nor_366_cse, or_381_cse, fsm_output(2));
  or_379_nl <= (fsm_output(2)) OR (NOT (fsm_output(0))) OR (fsm_output(1)) OR (NOT
      (fsm_output(8)));
  mux_336_nl <= MUX_s_1_2_2(mux_335_nl, or_379_nl, fsm_output(3));
  or_383_nl <= (fsm_output(6)) OR (NOT (fsm_output(7))) OR (fsm_output(4)) OR mux_336_nl;
  mux_334_nl <= MUX_s_1_2_2(nor_365_cse, or_373_cse, fsm_output(2));
  or_376_nl <= CONV_SL_1_1(fsm_output(7 DOWNTO 6)/=STD_LOGIC_VECTOR'("01")) OR (NOT(CONV_SL_1_1(fsm_output(4
      DOWNTO 3)/=STD_LOGIC_VECTOR'("00")) OR mux_334_nl));
  mux_337_nl <= MUX_s_1_2_2(or_383_nl, or_376_nl, fsm_output(5));
  and_174_nl <= and_dcpl_164 AND and_dcpl_162;
  mux_341_nl <= MUX_s_1_2_2(mux_tmp_338, or_tmp_276, and_694_cse);
  mux_342_nl <= MUX_s_1_2_2(mux_341_nl, mux_tmp_340, fsm_output(0));
  and_175_nl <= (NOT mux_342_nl) AND (fsm_output(8));
  GEMM_3D_FLOAT_LOOP_3_mux_nl <= MUX_s_1_2_2((attention_5_1_384_384_8_48_attn_weights_rsci_q_d(39)),
      reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd, and_181_ssc);
  and_180_nl <= and_dcpl_170 AND and_dcpl_167;
  mux_372_nl <= MUX_s_1_2_2(not_tmp_240, or_603_cse, CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm);
  rms_norm_384_mux1h_7_nl <= MUX1HOT_s_1_3_2((compute_sqrt_for_acc_1_itm_40_1_1(0)),
      (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(0)), (LINEAR_FORWARD_NO_MUL_LOOP_2_1_mul_1_itm(0)),
      STD_LOGIC_VECTOR'( and_dcpl_154 & and_193_itm & and_dcpl_174));
  or_410_nl <= CONV_SL_1_1(fsm_output(2 DOWNTO 0)/=STD_LOGIC_VECTOR'("000"));
  mux_377_nl <= MUX_s_1_2_2(or_tmp_26, mux_tmp_373, or_410_nl);
  and_196_nl <= (NOT mux_377_nl) AND and_dcpl_110;
  operator_40_24_true_AC_TRN_AC_WRAP_acc_56_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(15),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(16)),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28)),
      1), 1), 2), 2));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_58_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(17),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(18)),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27),
      1), 1), 2), 2));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_62_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_56_nl),
      3) + CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_58_nl),
      3) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34)),
      1), 1), 3), 3));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_60_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(19),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(20)),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26)),
      1), 1), 2), 2));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_78_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(21),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(22)),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25),
      1), 1), 2), 2));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_80_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_60_nl),
      3) + CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_78_nl),
      3) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33),
      1), 1), 3), 3));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_82_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_62_nl),
      4) + CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_80_nl),
      4) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(37),
      1), 1), 4), 4));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_72_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(11),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(12)),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30)),
      1), 1), 2), 2));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_54_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(13),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(14)),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29),
      1), 1), 2), 2));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_74_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_72_nl),
      3) + CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_54_nl),
      3) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35),
      1), 1), 3), 3));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_64_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(9),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(10)),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(31),
      1), 1), 2), 2));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_25_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(z_out_13),
      3), 4) + CONV_SIGNED(CONV_SIGNED(SIGNED(z_out_17(5 DOWNTO 4)), 2), 4) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(z_out_17(1),
      1), 1), 4), 4));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_27_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(13)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(13))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(13))), 5), 6) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_25_nl),
      6) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(z_out_17(3), 1), 1), 6), 6));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_28_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(z_out_15),
      6), 8) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(14))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(12)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38),
      1),2))), 6), 8) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_3_psp_sva_1(1),
      1), 1), 8), 8));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_31_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(17)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(17))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(17)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(17))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(17))), 9), 10) + CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_29_itm),
      8), 10) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_and_1_itm,
      1), 1), 10), 10));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_33_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(19)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(19))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(19)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(19))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(19)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(19))),
      11), 12) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_31_nl),
      12), 12));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_35_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(21)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(21))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(21)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(21))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(21)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(21))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(21))), 13), 14) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_33_nl),
      14), 14));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_32_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(18))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(18)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(18))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(18)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(14),
      1),2))), 10), 11) + CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_30_itm),
      9), 11), 11));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_34_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(20))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(20)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(20))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(20)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(20))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(16),
      1),2))), 12), 13) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_32_nl),
      13), 13));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_36_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(22))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(22)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(22))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(22)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(22))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(22)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(18),
      1),2))), 14), 15) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_34_nl),
      15), 15));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_39_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25))), 17), 18) + CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_37_itm),
      16), 18), 18));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_41_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27))),
      19), 20) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_39_nl),
      20), 20));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_43_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29))), 21), 22) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_41_nl),
      22), 22));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_40_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(22),
      1),2))), 18), 19) + CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_38_itm),
      17), 19), 19));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_42_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(24),
      1),2))), 20), 21) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_40_nl),
      21), 21));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_44_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26),
      1),2))), 22), 23) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_42_nl),
      23), 23));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_48_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30),
      1),2))), 26), 27) + CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_46_itm),
      25), 27), 27));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_50_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32),
      1),2))), 28), 29) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_48_nl),
      29), 29));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_47_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33))), 25), 26) + CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_45_itm),
      24), 26), 26));
  operator_40_24_true_AC_TRN_AC_WRAP_acc_49_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35))),
      27), 28) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_47_nl),
      28), 28));
  nor_470_nl <= NOT((fsm_output(1)) OR not_tmp_327);
  nor_471_nl <= NOT((NOT (fsm_output(1))) OR (fsm_output(3)) OR (fsm_output(8)));
  mux_645_nl <= MUX_s_1_2_2(nor_470_nl, nor_471_nl, fsm_output(0));
  RMS_NORM_LOOP_2_or_nl <= (and_dcpl_368 AND and_dcpl_431 AND (NOT (fsm_output(0)))
      AND nand_184_cse) OR and_dcpl_331 OR (mux_645_nl AND (fsm_output(6)) AND and_dcpl_438
      AND and_dcpl_217);
  and_448_nl <= and_dcpl_368 AND and_dcpl_431 AND (NOT((fsm_output(0)) OR nand_184_cse));
  and_741_nl <= (fsm_output(4)) AND (fsm_output(8));
  and_742_nl <= (fsm_output(4)) AND (fsm_output(0)) AND (fsm_output(1)) AND (NOT
      (fsm_output(8)));
  mux_640_nl <= MUX_s_1_2_2(and_741_nl, and_742_nl, fsm_output(3));
  nand_38_nl <= NOT((fsm_output(5)) AND mux_640_nl);
  nand_210_nl <= NOT((fsm_output(0)) AND (fsm_output(1)) AND (fsm_output(8)));
  mux_639_nl <= MUX_s_1_2_2(nand_210_nl, (fsm_output(8)), fsm_output(4));
  nand_37_nl <= NOT((fsm_output(5)) AND (fsm_output(3)) AND (NOT mux_639_nl));
  mux_641_nl <= MUX_s_1_2_2(nand_38_nl, nand_37_nl, fsm_output(2));
  nand_36_nl <= NOT(CONV_SL_1_1(fsm_output(4 DOWNTO 3)=STD_LOGIC_VECTOR'("11")) AND
      nor_414_cse);
  mux_637_nl <= MUX_s_1_2_2(nand_36_nl, (fsm_output(8)), fsm_output(5));
  nand_35_nl <= NOT(CONV_SL_1_1(fsm_output(4 DOWNTO 3)=STD_LOGIC_VECTOR'("11")) AND
      (NOT(or_1213_cse AND (fsm_output(8)))));
  mux_636_nl <= MUX_s_1_2_2(nand_35_nl, (fsm_output(8)), fsm_output(5));
  mux_638_nl <= MUX_s_1_2_2(mux_637_nl, mux_636_nl, fsm_output(2));
  mux_642_nl <= MUX_s_1_2_2(mux_641_nl, mux_638_nl, fsm_output(6));
  or_754_nl <= (fsm_output(4)) OR (fsm_output(1)) OR (fsm_output(8));
  or_753_nl <= (fsm_output(4)) OR (fsm_output(1)) OR (NOT (fsm_output(8)));
  mux_635_nl <= MUX_s_1_2_2(or_754_nl, or_753_nl, fsm_output(3));
  or_755_nl <= (fsm_output(6)) OR (fsm_output(2)) OR (fsm_output(5)) OR mux_635_nl;
  mux_643_nl <= MUX_s_1_2_2(mux_642_nl, or_755_nl, fsm_output(7));
  nor_468_nl <= NOT((NOT (fsm_output(2))) OR (fsm_output(3)) OR (fsm_output(8)));
  nor_469_nl <= NOT((fsm_output(2)) OR not_tmp_327);
  mux_644_nl <= MUX_s_1_2_2(nor_468_nl, nor_469_nl, fsm_output(0));
  and_453_nl <= mux_644_nl AND (fsm_output(6)) AND and_dcpl_438 AND (fsm_output(4))
      AND (fsm_output(1));
  RMS_NORM_LOOP_2_mux1h_nl <= MUX1HOT_v_9_5_2(z_out_3, STD_LOGIC_VECTOR'( "000000001"),
      SF_LOOP_3_acc_17_itm_8_0, STD_LOGIC_VECTOR'( "101111111"), reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_5,
      STD_LOGIC_VECTOR'( RMS_NORM_LOOP_2_or_nl & and_448_nl & (NOT mux_643_nl) &
      and_453_nl & and_dcpl_370));
  nand_212_nl <= NOT((fsm_output(4)) AND (fsm_output(5)) AND (fsm_output(8)));
  nand_213_nl <= NOT((fsm_output(1)) AND (fsm_output(4)) AND (fsm_output(5)) AND
      (NOT (fsm_output(8))));
  mux_658_nl <= MUX_s_1_2_2(nand_212_nl, nand_213_nl, fsm_output(3));
  or_778_nl <= (NOT((((fsm_output(0)) OR (NOT CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm))
      AND (fsm_output(4))) OR (fsm_output(5)))) OR (fsm_output(8));
  mux_655_nl <= MUX_s_1_2_2(or_tmp_636, mux_tmp_649, fsm_output(0));
  mux_656_nl <= MUX_s_1_2_2(or_778_nl, mux_655_nl, fsm_output(1));
  mux_657_nl <= MUX_s_1_2_2(or_tmp_407, mux_656_nl, fsm_output(3));
  mux_659_nl <= MUX_s_1_2_2(mux_658_nl, mux_657_nl, fsm_output(6));
  nor_473_nl <= NOT((NOT (fsm_output(4))) OR (NOT (fsm_output(5))) OR (fsm_output(8)));
  mux_652_nl <= MUX_s_1_2_2(nor_tmp_151, (NOT or_tmp_407), fsm_output(4));
  mux_653_nl <= MUX_s_1_2_2(nor_473_nl, mux_652_nl, fsm_output(1));
  nand_39_nl <= NOT((fsm_output(3)) AND mux_653_nl);
  or_775_nl <= (NOT(((fsm_output(1)) AND (fsm_output(4))) OR (fsm_output(5)))) OR
      (fsm_output(8));
  mux_650_nl <= MUX_s_1_2_2(mux_tmp_649, or_tmp_636, fsm_output(1));
  mux_651_nl <= MUX_s_1_2_2(or_775_nl, mux_650_nl, fsm_output(3));
  mux_654_nl <= MUX_s_1_2_2(nand_39_nl, mux_651_nl, fsm_output(6));
  mux_660_nl <= MUX_s_1_2_2(mux_659_nl, mux_654_nl, fsm_output(2));
  or_769_nl <= (fsm_output(4)) OR (fsm_output(5)) OR (fsm_output(8));
  or_768_nl <= (NOT (fsm_output(0))) OR (fsm_output(4)) OR (NOT (fsm_output(5)))
      OR (fsm_output(8));
  mux_646_nl <= MUX_s_1_2_2(or_769_nl, or_768_nl, fsm_output(1));
  or_767_nl <= (fsm_output(1)) OR (fsm_output(4)) OR (fsm_output(5)) OR (NOT (fsm_output(8)));
  mux_647_nl <= MUX_s_1_2_2(mux_646_nl, or_767_nl, fsm_output(3));
  or_770_nl <= (fsm_output(6)) OR mux_647_nl;
  or_765_nl <= (fsm_output(6)) OR (fsm_output(3)) OR (NOT (fsm_output(1))) OR (NOT
      (fsm_output(0))) OR (fsm_output(4)) OR (fsm_output(5)) OR (NOT (fsm_output(8)));
  mux_648_nl <= MUX_s_1_2_2(or_770_nl, or_765_nl, fsm_output(2));
  mux_661_nl <= MUX_s_1_2_2(mux_660_nl, mux_648_nl, fsm_output(7));
  not_2160_nl <= NOT mux_661_nl;
  RMS_NORM_LOOP_2_2_asn_SF_LOOP_3_acc_17_itm_1_8_RMS_NORM_LOOP_2_and_nl <= MUX_v_9_2_2(STD_LOGIC_VECTOR'("000000000"),
      RMS_NORM_LOOP_2_mux1h_nl, not_2160_nl);
  mux_676_nl <= MUX_s_1_2_2(or_791_cse, or_tmp_645, fsm_output(5));
  mux_677_nl <= MUX_s_1_2_2(mux_676_nl, nand_tmp_40, fsm_output(4));
  mux_678_nl <= MUX_s_1_2_2(mux_677_nl, mux_tmp_665, fsm_output(3));
  mux_675_nl <= MUX_s_1_2_2(or_tmp_651, mux_tmp_667, and_696_cse);
  mux_679_nl <= MUX_s_1_2_2(mux_678_nl, mux_675_nl, fsm_output(2));
  mux_670_nl <= MUX_s_1_2_2((NOT (fsm_output(7))), (fsm_output(7)), fsm_output(6));
  or_789_nl <= (NOT (fsm_output(5))) OR (fsm_output(8)) OR mux_670_nl;
  mux_671_nl <= MUX_s_1_2_2(or_tmp_651, or_789_nl, fsm_output(0));
  mux_672_nl <= MUX_s_1_2_2(mux_671_nl, nand_tmp_40, fsm_output(4));
  mux_668_nl <= MUX_s_1_2_2(mux_tmp_662, mux_tmp_667, fsm_output(0));
  mux_669_nl <= MUX_s_1_2_2(or_tmp_651, mux_668_nl, fsm_output(4));
  mux_673_nl <= MUX_s_1_2_2(mux_672_nl, mux_669_nl, fsm_output(3));
  mux_664_nl <= MUX_s_1_2_2(nand_tmp_40, mux_tmp_662, fsm_output(4));
  mux_666_nl <= MUX_s_1_2_2(mux_tmp_665, mux_664_nl, fsm_output(3));
  mux_674_nl <= MUX_s_1_2_2(mux_673_nl, mux_666_nl, fsm_output(2));
  mux_680_nl <= MUX_s_1_2_2(mux_679_nl, mux_674_nl, fsm_output(1));
  nor_487_nl <= NOT(CONV_SL_1_1(fsm_output(7 DOWNTO 4)/=STD_LOGIC_VECTOR'("0110"))
      OR mux_732_cse);
  nor_485_nl <= NOT(CONV_SL_1_1(fsm_output(6 DOWNTO 5)/=STD_LOGIC_VECTOR'("10"))
      OR mux_730_cse);
  nor_486_nl <= NOT((NOT (fsm_output(5))) OR (fsm_output(8)) OR (fsm_output(3)) OR
      (fsm_output(0)) OR (NOT (fsm_output(2))));
  mux_731_nl <= MUX_s_1_2_2(nor_485_nl, nor_486_nl, fsm_output(7));
  and_759_nl <= (fsm_output(4)) AND mux_731_nl;
  mux_733_nl <= MUX_s_1_2_2(nor_487_nl, and_759_nl, fsm_output(1));
  mux_754_nl <= MUX_s_1_2_2(or_734_cse, or_tmp_727, fsm_output(2));
  nand_47_nl <= NOT((fsm_output(5)) AND (fsm_output(4)) AND (fsm_output(7)) AND (NOT
      mux_754_nl));
  mux_750_nl <= MUX_s_1_2_2((fsm_output(8)), nor_366_cse, fsm_output(2));
  or_879_nl <= (fsm_output(2)) OR (fsm_output(1)) OR (fsm_output(8));
  mux_751_nl <= MUX_s_1_2_2(mux_750_nl, or_879_nl, fsm_output(7));
  mux_752_nl <= MUX_s_1_2_2(or_tmp_729, mux_751_nl, fsm_output(4));
  or_878_nl <= (fsm_output(7)) OR (fsm_output(2)) OR (NOT(nor_494_cse OR (fsm_output(8))));
  mux_749_nl <= MUX_s_1_2_2(or_878_nl, or_tmp_729, fsm_output(4));
  mux_753_nl <= MUX_s_1_2_2(mux_752_nl, mux_749_nl, fsm_output(5));
  mux_755_nl <= MUX_s_1_2_2(nand_47_nl, mux_753_nl, fsm_output(6));
  nand_215_nl <= NOT((fsm_output(2)) AND (fsm_output(0)) AND (fsm_output(1)) AND
      (NOT (fsm_output(8))));
  mux_746_nl <= MUX_s_1_2_2(nand_215_nl, (fsm_output(8)), fsm_output(7));
  mux_743_nl <= MUX_s_1_2_2(or_tmp_727, nand_200_cse, fsm_output(0));
  mux_744_nl <= MUX_s_1_2_2(mux_743_nl, or_373_cse, fsm_output(2));
  nor_496_nl <= NOT((fsm_output(2)) OR or_612_cse);
  mux_745_nl <= MUX_s_1_2_2(mux_744_nl, nor_496_nl, fsm_output(7));
  mux_747_nl <= MUX_s_1_2_2((NOT mux_746_nl), mux_745_nl, fsm_output(4));
  nor_497_nl <= NOT((NOT (fsm_output(4))) OR (NOT (fsm_output(7))) OR (fsm_output(2))
      OR or_612_cse);
  mux_748_nl <= MUX_s_1_2_2(mux_747_nl, nor_497_nl, fsm_output(5));
  nand_46_nl <= NOT((fsm_output(6)) AND mux_748_nl);
  mux_756_nl <= MUX_s_1_2_2(mux_755_nl, nand_46_nl, fsm_output(3));
  GEMM_3D_FLOAT_LOOP_4_1_l_mux1h_4_nl <= MUX1HOT_v_3_4_2(QUANTIZE_ACTIVATION_LOOP_3_jo_2_0_sva_3,
      LINEAR_FORWARD_NO_MUL_LOOP_3_2_ko_2_0_sva_1_mx0w2, (reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd
      & reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1), GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva,
      STD_LOGIC_VECTOR'( mux_733_nl & and_dcpl_243 & and_dcpl_354 & (NOT mux_756_nl)));
  nor_488_nl <= NOT((fsm_output(8)) OR (NOT (fsm_output(6))) OR (fsm_output(7)) OR
      (NOT (fsm_output(3))) OR (fsm_output(5)));
  nor_489_nl <= NOT((fsm_output(8)) OR (fsm_output(6)) OR (NOT (fsm_output(7))) OR
      (fsm_output(3)) OR (NOT (fsm_output(5))));
  mux_740_nl <= MUX_s_1_2_2(nor_488_nl, nor_489_nl, fsm_output(1));
  nand_261_nl <= NOT((fsm_output(4)) AND mux_740_nl);
  mux_739_nl <= MUX_s_1_2_2(or_1328_cse, or_518_cse, fsm_output(8));
  or_nl <= (fsm_output(4)) OR (NOT (fsm_output(1))) OR mux_739_nl;
  mux_741_nl <= MUX_s_1_2_2(nand_261_nl, or_nl, fsm_output(2));
  or_1231_nl <= (NOT (fsm_output(1))) OR (fsm_output(8)) OR (fsm_output(6)) OR (NOT
      (fsm_output(7))) OR (fsm_output(3)) OR (NOT (fsm_output(5)));
  or_1232_nl <= (NOT (fsm_output(1))) OR (NOT (fsm_output(8))) OR (NOT (fsm_output(6)))
      OR (fsm_output(7)) OR (fsm_output(3)) OR (fsm_output(5));
  mux_737_nl <= MUX_s_1_2_2(or_1231_nl, or_1232_nl, fsm_output(4));
  nand_214_nl <= NOT((fsm_output(6)) AND (fsm_output(7)) AND (NOT (fsm_output(3)))
      AND (fsm_output(5)));
  mux_735_nl <= MUX_s_1_2_2(nand_214_nl, or_1328_cse, fsm_output(8));
  or_855_nl <= (NOT (fsm_output(7))) OR (fsm_output(3)) OR (NOT (fsm_output(5)));
  or_853_nl <= (NOT (fsm_output(7))) OR (fsm_output(3)) OR (fsm_output(5));
  mux_734_nl <= MUX_s_1_2_2(or_855_nl, or_853_nl, fsm_output(6));
  or_856_nl <= (fsm_output(8)) OR mux_734_nl;
  mux_736_nl <= MUX_s_1_2_2(mux_735_nl, or_856_nl, fsm_output(1));
  nand_262_nl <= NOT((fsm_output(4)) AND (NOT mux_736_nl));
  mux_738_nl <= MUX_s_1_2_2(mux_737_nl, nand_262_nl, fsm_output(2));
  mux_742_nl <= MUX_s_1_2_2(mux_741_nl, mux_738_nl, fsm_output(0));
  SF_LOOP_3_acc_90_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(SF_LOOP_3_acc_5_psp_sva(20),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(SF_LOOP_3_acc_5_psp_sva(21),
      1), 1), 2), 2));
  SF_LOOP_3_acc_92_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(SF_LOOP_3_acc_5_psp_sva(20),
      1),3)), 3), 4) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'( (SF_LOOP_3_acc_5_psp_sva(21))
      & '0' & (SF_LOOP_3_acc_5_psp_sva(21))), 3), 4), 4));
  APPLY_ROTARY_POS_EMB_LOOP_6_mux_29_nl <= MUX_v_4_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_2,
      STD_LOGIC_VECTOR'( "0110"), and_1256_cse);
  APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_or_2_nl <= reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_3
      OR and_1256_cse;
  APPLY_ROTARY_POS_EMB_LOOP_6_mux_30_nl <= MUX_v_3_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_4,
      STD_LOGIC_VECTOR'( "001"), and_1256_cse);
  APPLY_ROTARY_POS_EMB_LOOP_6_mux_31_nl <= MUX_v_9_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_5,
      STD_LOGIC_VECTOR'( "010111001"), and_1256_cse);
  not_2715_nl <= NOT and_1256_cse;
  APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_8_nl <= MUX_v_38_2_2(STD_LOGIC_VECTOR'("00000000000000000000000000000000000000"),
      (INIT_2D_MEM_LOOP_2_2_asn_psp(39 DOWNTO 2)), not_2715_nl);
  APPLY_ROTARY_POS_EMB_LOOP_6_mux_32_nl <= MUX_v_2_2_2((INIT_2D_MEM_LOOP_2_2_asn_psp(1
      DOWNTO 0)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(7 DOWNTO 6)), and_1256_cse);
  SF_LOOP_3_acc_99_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_mul_12_itm_16_15
      & STD_LOGIC_VECTOR'( "00") & SF_LOOP_3_mul_12_itm_12_9_slc), 7), 8) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_mul_15_itm_16_10),
      7), 8), 8));
  SF_LOOP_3_acc_100_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((SF_LOOP_3_mul_19_itm_9_4(2
      DOWNTO 1)) & '0' & SF_LOOP_3_mul_12_itm_3_0), 7), 8) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_mul_15_itm_6_0),
      7), 8), 8));
  SF_LOOP_3_acc_21_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_11_itm_17_15
      & '0' & SF_LOOP_3_acc_11_itm_13_0), 18), 20) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_99_nl),
      8)) & (SF_LOOP_3_mul_19_itm_9_4(5)) & '0' & STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_100_nl),
      8))), 18), 20), 20));
  SF_LOOP_3_acc_27_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_21_nl),
      20) + CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_96_psp & '0' & RESHAPE_2D_TO_3D_LOOP_3_2_mux_3_itm_2_0
      & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(18)) & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(18))
      & APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0), 19), 20), 20));
  SF_LOOP_3_acc_38_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(7
      DOWNTO 5)) & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(7 DOWNTO 6))), 5), 6)
      + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(SF_LOOP_3_acc_5_psp_sva(17), 1),
      1), 6) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((NOT (SF_LOOP_3_acc_5_psp_sva(21)))
      & STD_LOGIC_VECTOR'( "11") & (NOT (SF_LOOP_3_acc_5_psp_sva(21)))), 4), 6) +
      CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(5),
      1), 1), 6) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((SF_LOOP_3_acc_5_psp_sva(20))
      & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(4 DOWNTO 3))), 3), 6) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_5_psp_sva(19
      DOWNTO 18)), 2), 6) + UNSIGNED'( "000001"), 6));
  SF_LOOP_3_and_1_nl <= reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd AND (NOT (SF_LOOP_3_acc_7_psp_sva_1(17)))
      AND (CONV_SL_1_1(SF_LOOP_3_acc_7_psp_sva_1(16 DOWNTO 0)/=STD_LOGIC_VECTOR'("00000000000000000")));
  SF_LOOP_3_acc_95_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(17),
      1),3)), 3), 4) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(16),
      1),2)), 2), 4) + CONV_UNSIGNED(CONV_UNSIGNED(SF_LOOP_3_and_1_nl, 1), 4), 4));
  SF_LOOP_3_acc_41_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_40_itm),
      11), 13) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_mul_itm_10_9 & '0'
      & SF_LOOP_3_mul_itm_7_0), 11), 13) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(NOT
      (SF_LOOP_3_acc_6_psp_sva_18_17(1)), 1), 1), 13), 13));
  SF_LOOP_3_SF_LOOP_3_nand_nl <= NOT((SF_LOOP_3_acc_7_psp_sva_1(17)) AND (NOT reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd));
  SF_LOOP_3_acc_42_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_41_nl),
      15) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_mul_1_itm_12_11 & '0' &
      SF_LOOP_3_mul_1_itm_9_0), 13), 15) + CONV_SIGNED(CONV_UNSIGNED(SF_LOOP_3_SF_LOOP_3_nand_nl,
      1), 15), 15));
  SF_LOOP_3_acc_44_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(17
      DOWNTO 16)) & '0' & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(17 DOWNTO 16))
      & z_out_11 & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(16)) & STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_95_nl),
      4))), 15), 17) + CONV_SIGNED(SIGNED(SF_LOOP_3_acc_42_nl), 17), 17));
  SF_LOOP_3_acc_47_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_46_itm),
      19), 21) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_mul_2_itm_18_17 & '0'
      & SF_LOOP_3_mul_2_itm_15_0), 19), 21), 21));
  SF_LOOP_3_acc_48_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_47_nl),
      22) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(22))
      & STD_LOGIC_VECTOR'( "00") & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(22)) &
      STD_LOGIC_VECTOR'( "00") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(22),
      1),4)) & STD_LOGIC_VECTOR'( "00") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(22),
      1),2)) & '0' & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(22)) & '0' & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(22))
      & '0' & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(22))), 20), 22), 22));
  SF_LOOP_3_acc_49_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_48_nl),
      24) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_mul_3_itm_21_20 & '0' &
      SF_LOOP_3_mul_3_itm_18_3 & '0' & SF_LOOP_3_mul_3_itm_1_0), 22), 24), 24));
  SF_LOOP_3_acc_52_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(28
      DOWNTO 27)) & '0' & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(28 DOWNTO 27))
      & APPLY_ROTARY_POS_EMB_LOOP_3_acc_37_cse_sva & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(27))
      & APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0 & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(27))
      & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(28 DOWNTO 27)) & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(28
      DOWNTO 27)) & '0' & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(28 DOWNTO 27))
      & APPLY_ROTARY_POS_EMB_LOOP_6_acc_29_psp_4), 26), 28) + CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_50_itm),
      26), 28), 28));
  SF_LOOP_3_acc_53_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_52_nl),
      29) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(29))
      & STD_LOGIC_VECTOR'( "00") & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(29)) &
      STD_LOGIC_VECTOR'( "00") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(29),
      1),4)) & STD_LOGIC_VECTOR'( "00") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(29),
      1),2)) & '0' & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(29)) & '0' & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(29))
      & STD_LOGIC_VECTOR'( "00") & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(29)) &
      STD_LOGIC_VECTOR'( "00") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(29),
      1),2)) & '0' & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(29))), 27), 29), 29));
  SF_LOOP_3_acc_55_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_54_itm),
      32), 34) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_mul_5_itm_31_30 & '0'
      & SF_LOOP_3_mul_5_itm_28_13 & '0' & SF_LOOP_3_mul_5_itm_11_0), 32), 34), 34));
  SF_LOOP_3_acc_57_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(36
      DOWNTO 35)) & '0' & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(36 DOWNTO 35))
      & reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_ftd & reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd
      & reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd_1 & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(35))
      & CACHE_UPDATE_LOOP_3_qif_acc_3_ncse_2_0 & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(35))
      & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(36 DOWNTO 35)) & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(36
      DOWNTO 35)) & '0' & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(36 DOWNTO 35))
      & INIT_2D_MEM_LOOP_2_2_acc_itm & (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(35))
      & CACHE_UPDATE_LOOP_3_k_5_0_sva_1_1_0), 34), 36) + CONV_SIGNED(SIGNED(SF_LOOP_3_acc_55_nl),
      36), 36));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_25_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(z_out_13),
      3), 4) + CONV_SIGNED(CONV_SIGNED(SIGNED(z_out_17(5 DOWNTO 4)), 2), 4) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(z_out_17(1),
      1), 1), 4), 4));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_27_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(13)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(13))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(13))), 5), 6) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_25_nl),
      6) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(z_out_17(3), 1), 1), 6), 6));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_28_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(z_out_15),
      6), 8) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(14))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(12)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38),
      1),2))), 6), 8) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_3_psp_sva_1(1),
      1), 1), 8), 8));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_31_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(17)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(17))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(17)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(17))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(17))), 9), 10) + CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_29_itm),
      8), 10) + CONV_SIGNED(CONV_UNSIGNED(CONV_UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_and_1_itm,
      1), 1), 10), 10));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_33_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(19)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(19))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(19)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(19))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(19)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(19))),
      11), 12) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_31_nl),
      12), 12));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_35_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(21)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(21))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(21)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(21))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(21)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(21))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(21))), 13), 14) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_33_nl),
      14), 14));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_32_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(18))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(18)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(18))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(18)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(14),
      1),2))), 10), 11) + CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_30_itm),
      9), 11), 11));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_34_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(20))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(20)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(20))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(20)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(20))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(16),
      1),2))), 12), 13) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_32_nl),
      13), 13));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_36_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(22))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(22)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(22))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(22)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(22))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(22)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(18),
      1),2))), 14), 15) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_34_nl),
      15), 15));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_39_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(25))), 17), 18) + CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_37_itm),
      16), 18), 18));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_41_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(27))),
      19), 20) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_39_nl),
      20), 20));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_43_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(29))), 21), 22) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_41_nl),
      22), 22));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_40_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(22),
      1),2))), 18), 19) + CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_38_itm),
      17), 19), 19));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_42_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(28))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(24),
      1),2))), 20), 21) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_40_nl),
      21), 21));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_44_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(26),
      1),2))), 22), 23) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_42_nl),
      23), 23));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_48_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(34)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30),
      1),2))), 26), 27) + CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_46_itm),
      25), 27), 27));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_50_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(36))
      & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32),
      1),2))), 28), 29) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_48_nl),
      29), 29));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_47_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(33))), 25), 26) + CONV_SIGNED(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_45_itm),
      24), 26), 26));
  operator_40_24_true_AC_TRN_AC_WRAP_2_acc_49_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35))
      & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35)) & '0' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35))),
      27), 28) + CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_2_acc_47_nl),
      28), 28));
  rms_norm_384_variance_or_nl <= (and_dcpl_111 AND and_dcpl_120) OR (and_dcpl_212
      AND and_dcpl_175);
  and_355_nl <= and_dcpl_118 AND and_dcpl_128;
  and_356_nl <= and_dcpl_290 AND and_dcpl_107;
  and_366_nl <= and_dcpl_214 AND and_dcpl_188;
  rms_norm_384_variance_mux1h_nl <= MUX1HOT_v_40_9_2(z_out, rms_norm_384_div_cmp_z_oreg,
      input_rsci_q_d, attention_5_1_384_384_8_48_q_proj_re_rsci_q_d, apply_rotary_pos_emb_1_8_48_rotated_k_rsci_q_d,
      attention_5_1_384_384_8_48_attn_weights_rsci_q_d, softmax_1_8_6_sum_sva_1,
      attention_5_1_384_384_8_48_attn_output_rsci_q_d, (SOFTMAX_LOOP_5_SOFTMAX_LOOP_5_div_1_cmp_z(39
      DOWNTO 0)), STD_LOGIC_VECTOR'( rms_norm_384_variance_or_nl & and_355_nl & and_356_nl
      & and_dcpl_349 & and_dcpl_350 & and_dcpl_351 & and_dcpl_354 & and_dcpl_355
      & and_366_nl));
  nor_406_nl <= NOT((fsm_output(1)) OR (fsm_output(2)) OR (fsm_output(4)) OR (fsm_output(7))
      OR (fsm_output(6)));
  and_713_nl <= (fsm_output(1)) AND (fsm_output(2)) AND (fsm_output(4)) AND (NOT
      (fsm_output(8))) AND nor_tmp_54;
  mux_466_nl <= MUX_s_1_2_2(nor_406_nl, and_713_nl, fsm_output(0));
  GEMM_3D_FLOAT_LOOP_4_1_nand_nl <= NOT(mux_466_nl AND (NOT((fsm_output(5)) OR (fsm_output(3)))));
  or_550_nl <= (fsm_output(5)) OR (NOT((fsm_output(0)) OR (NOT or_tmp_408)));
  or_548_nl <= (fsm_output(5)) OR (NOT((NOT (fsm_output(0))) OR (fsm_output(8)) OR
      (fsm_output(2))));
  mux_461_nl <= MUX_s_1_2_2(or_550_nl, or_548_nl, fsm_output(1));
  or_546_nl <= (NOT (fsm_output(5))) OR (NOT (fsm_output(8))) OR (fsm_output(2));
  mux_462_nl <= MUX_s_1_2_2(mux_461_nl, or_546_nl, fsm_output(4));
  mux_460_nl <= MUX_s_1_2_2(or_tmp_410, or_tmp_407, fsm_output(4));
  mux_463_nl <= MUX_s_1_2_2(mux_462_nl, mux_460_nl, fsm_output(6));
  or_1208_nl <= (fsm_output(5)) OR (NOT((NOT (fsm_output(0))) OR (fsm_output(8))))
      OR (fsm_output(2));
  nand_188_nl <= NOT((fsm_output(5)) AND (fsm_output(8)) AND (fsm_output(2)));
  mux_457_nl <= MUX_s_1_2_2(or_1208_nl, nand_188_nl, fsm_output(1));
  mux_456_nl <= MUX_s_1_2_2(or_tmp_410, or_tmp_407, fsm_output(1));
  mux_458_nl <= MUX_s_1_2_2(mux_457_nl, mux_456_nl, fsm_output(4));
  mux_454_nl <= MUX_s_1_2_2(or_tmp_408, (fsm_output(8)), fsm_output(5));
  or_538_nl <= (NOT (fsm_output(4))) OR (fsm_output(1));
  mux_455_nl <= MUX_s_1_2_2(mux_454_nl, or_tmp_407, or_538_nl);
  mux_459_nl <= MUX_s_1_2_2(mux_458_nl, mux_455_nl, fsm_output(6));
  mux_464_nl <= MUX_s_1_2_2(mux_463_nl, mux_459_nl, fsm_output(3));
  or_537_nl <= (fsm_output(4)) OR (fsm_output(1)) OR (fsm_output(5)) OR (NOT (fsm_output(0)))
      OR (fsm_output(8)) OR (fsm_output(2));
  mux_452_nl <= MUX_s_1_2_2(or_15_cse, or_537_nl, fsm_output(6));
  nor_404_nl <= NOT(((fsm_output(5)) AND (fsm_output(0))) OR (fsm_output(8)) OR (fsm_output(2)));
  mux_450_nl <= MUX_s_1_2_2(nor_404_nl, nor_405_cse, fsm_output(1));
  nand_22_nl <= NOT((fsm_output(4)) AND mux_450_nl);
  mux_451_nl <= MUX_s_1_2_2(or_15_cse, nand_22_nl, fsm_output(6));
  mux_453_nl <= MUX_s_1_2_2(mux_452_nl, mux_451_nl, fsm_output(3));
  mux_465_nl <= MUX_s_1_2_2(mux_464_nl, mux_453_nl, fsm_output(7));
  SF_LOOP_3_acc_82_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(SIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_q_d(36))
      & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(36)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(36),
      1),3))),8)), 8), 9) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(SIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_q_d(35))
      & '0' & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(35)) & '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(35),
      1),2))),7)), 7), 9), 9));
  INIT_2D_MEM_LOOP_2_2_or_3_nl <= and_dcpl_342 OR and_dcpl_291;
  nor_418_nl <= NOT((NOT (fsm_output(2))) OR (fsm_output(3)) OR (fsm_output(4)) OR
      (fsm_output(5)) OR (NOT(CONV_SL_1_1(fsm_output(8 DOWNTO 7)=STD_LOGIC_VECTOR'("11")))));
  or_572_nl <= (NOT (fsm_output(5))) OR (fsm_output(8)) OR (NOT (fsm_output(7)));
  or_1181_nl <= (NOT (fsm_output(8))) OR (NOT (fsm_output(5))) OR (fsm_output(7));
  mux_477_nl <= MUX_s_1_2_2(or_572_nl, or_1181_nl, fsm_output(4));
  nor_419_nl <= NOT((fsm_output(3)) OR mux_477_nl);
  nor_420_nl <= NOT((NOT (fsm_output(3))) OR (NOT (fsm_output(4))) OR (NOT (fsm_output(5)))
      OR (fsm_output(8)) OR (fsm_output(7)));
  mux_478_nl <= MUX_s_1_2_2(nor_419_nl, nor_420_nl, fsm_output(2));
  mux_479_nl <= MUX_s_1_2_2(nor_418_nl, mux_478_nl, fsm_output(0));
  and_369_nl <= mux_479_nl AND (NOT (fsm_output(6))) AND (fsm_output(1));
  INIT_2D_MEM_LOOP_2_2_mux1h_15_nl <= MUX1HOT_v_9_5_2(z_out_1, SF_LOOP_3_acc_26_itm_8_0,
      STD_LOGIC_VECTOR'( "101111111"), TRANSPOSE_LAST_TWO_DIMS_LOOP_3_acc_17_sdt_mx0w5,
      STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_82_nl), 9)), STD_LOGIC_VECTOR'(
      INIT_2D_MEM_LOOP_2_2_or_3_nl & and_369_nl & and_dcpl_360 & and_dcpl_263 & and_dcpl_361));
  and_720_nl <= (fsm_output(5)) AND (fsm_output(0)) AND (fsm_output(2)) AND (fsm_output(8));
  mux_481_nl <= MUX_s_1_2_2(nor_405_cse, and_720_nl, fsm_output(3));
  nor_424_nl <= NOT((NOT (fsm_output(3))) OR (NOT (fsm_output(5))) OR (NOT (fsm_output(0)))
      OR (fsm_output(2)) OR (fsm_output(8)));
  mux_482_nl <= MUX_s_1_2_2(mux_481_nl, nor_424_nl, fsm_output(4));
  or_1211_nl <= (NOT CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm) OR (fsm_output(2))
      OR (fsm_output(8));
  mux_480_nl <= MUX_s_1_2_2(or_1211_nl, nand_195_cse, fsm_output(0));
  nor_425_nl <= NOT(CONV_SL_1_1(fsm_output(5 DOWNTO 3)/=STD_LOGIC_VECTOR'("011"))
      OR mux_480_nl);
  mux_483_nl <= MUX_s_1_2_2(mux_482_nl, nor_425_nl, fsm_output(6));
  INIT_2D_MEM_LOOP_2_2_nand_nl <= NOT(mux_483_nl AND (NOT((fsm_output(7)) OR (fsm_output(1)))));
  nor_412_nl <= NOT((fsm_output(3)) OR (fsm_output(2)) OR (NOT (fsm_output(1))) OR
      (fsm_output(8)));
  and_715_nl <= (fsm_output(3)) AND (fsm_output(2)) AND (fsm_output(1)) AND (fsm_output(8));
  mux_473_nl <= MUX_s_1_2_2(nor_412_nl, and_715_nl, fsm_output(5));
  nor_409_nl <= NOT((fsm_output(2)) OR (fsm_output(0)) OR (fsm_output(1)) OR (NOT
      (fsm_output(8))));
  mux_471_nl <= MUX_s_1_2_2(nor_366_cse, nor_411_cse, fsm_output(2));
  mux_472_nl <= MUX_s_1_2_2(nor_409_nl, mux_471_nl, fsm_output(3));
  and_716_nl <= (fsm_output(5)) AND mux_472_nl;
  mux_474_nl <= MUX_s_1_2_2(mux_473_nl, and_716_nl, fsm_output(4));
  mux_469_nl <= MUX_s_1_2_2(nor_414_cse, or_373_cse, fsm_output(2));
  or_563_nl <= (fsm_output(5)) OR ((fsm_output(3)) AND mux_469_nl);
  mux_470_nl <= MUX_s_1_2_2((fsm_output(5)), or_563_nl, fsm_output(4));
  mux_475_nl <= MUX_s_1_2_2(mux_474_nl, mux_470_nl, fsm_output(6));
  mux_467_nl <= MUX_s_1_2_2(nor_365_cse, or_381_cse, fsm_output(2));
  nor_416_nl <= NOT(CONV_SL_1_1(fsm_output(5 DOWNTO 3)/=STD_LOGIC_VECTOR'("000"))
      OR mux_467_nl);
  nor_417_nl <= NOT((fsm_output(4)) OR (fsm_output(5)) OR (NOT (fsm_output(3))) OR
      (fsm_output(8)));
  mux_468_nl <= MUX_s_1_2_2(nor_416_nl, nor_417_nl, fsm_output(6));
  mux_476_nl <= MUX_s_1_2_2(mux_475_nl, mux_468_nl, fsm_output(7));
  for_for_j_or_nl <= (and_dcpl_109 AND nor_239_cse AND and_dcpl_210) OR and_dcpl_369
      OR and_dcpl_291;
  mux_501_nl <= MUX_s_1_2_2((NOT (fsm_output(1))), or_603_cse, fsm_output(2));
  mux_502_nl <= MUX_s_1_2_2(or_604_cse, mux_501_nl, fsm_output(8));
  or_605_nl <= CONV_SL_1_1(fsm_output(4 DOWNTO 3)/=STD_LOGIC_VECTOR'("00")) OR mux_502_nl;
  nand_197_nl <= NOT((fsm_output(3)) AND (fsm_output(8)) AND (fsm_output(2)) AND
      (fsm_output(0)) AND (fsm_output(1)));
  mux_498_nl <= MUX_s_1_2_2((NOT and_692_cse), and_692_cse, fsm_output(2));
  or_599_nl <= (fsm_output(8)) OR mux_498_nl;
  mux_499_nl <= MUX_s_1_2_2(or_601_cse, or_599_nl, fsm_output(3));
  mux_500_nl <= MUX_s_1_2_2(nand_197_nl, mux_499_nl, fsm_output(4));
  mux_503_nl <= MUX_s_1_2_2(or_605_nl, mux_500_nl, fsm_output(5));
  or_598_nl <= (NOT (fsm_output(4))) OR (NOT (fsm_output(3))) OR (fsm_output(8))
      OR (NOT((fsm_output(2)) OR (fsm_output(0)) OR (NOT CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm)
      OR (fsm_output(1))));
  mux_497_nl <= MUX_s_1_2_2(or_598_nl, (fsm_output(8)), fsm_output(5));
  mux_504_nl <= MUX_s_1_2_2(mux_503_nl, mux_497_nl, fsm_output(6));
  or_594_nl <= (fsm_output(4)) OR (fsm_output(3)) OR (fsm_output(8)) OR (fsm_output(2))
      OR (fsm_output(1));
  mux_496_nl <= MUX_s_1_2_2((fsm_output(8)), or_594_nl, fsm_output(5));
  or_595_nl <= (fsm_output(6)) OR mux_496_nl;
  mux_505_nl <= MUX_s_1_2_2(mux_504_nl, or_595_nl, fsm_output(7));
  for_for_j_mux1h_nl <= MUX1HOT_v_9_4_2(z_out_2, reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1,
      STD_LOGIC_VECTOR'( "101111111"), RMS_NORM_LOOP_2_2_dfr_sva_8_0, STD_LOGIC_VECTOR'(
      for_for_j_or_nl & (NOT mux_505_nl) & and_dcpl_360 & and_dcpl_370));
  mux_492_nl <= MUX_s_1_2_2(nand_195_cse, (fsm_output(2)), or_603_cse);
  or_593_nl <= CONV_SL_1_1(fsm_output(4 DOWNTO 3)/=STD_LOGIC_VECTOR'("00")) OR mux_492_nl;
  nand_196_nl <= NOT((fsm_output(3)) AND (fsm_output(1)) AND (fsm_output(8)) AND
      (fsm_output(2)));
  mux_488_nl <= MUX_s_1_2_2((fsm_output(8)), or_589_cse, fsm_output(0));
  mux_489_nl <= MUX_s_1_2_2(or_tmp_408, mux_488_nl, fsm_output(1));
  mux_490_nl <= MUX_s_1_2_2(or_601_cse, mux_489_nl, fsm_output(3));
  mux_491_nl <= MUX_s_1_2_2(nand_196_nl, mux_490_nl, fsm_output(4));
  mux_493_nl <= MUX_s_1_2_2(or_593_nl, mux_491_nl, fsm_output(5));
  or_588_nl <= (NOT (fsm_output(1))) OR (fsm_output(8)) OR (NOT (fsm_output(2)));
  mux_485_nl <= MUX_s_1_2_2((fsm_output(8)), or_tmp_408, nor_413_cse);
  mux_486_nl <= MUX_s_1_2_2(or_588_nl, mux_485_nl, fsm_output(3));
  nand_24_nl <= NOT((fsm_output(4)) AND (NOT mux_486_nl));
  mux_487_nl <= MUX_s_1_2_2(nand_24_nl, (fsm_output(8)), fsm_output(5));
  mux_494_nl <= MUX_s_1_2_2(mux_493_nl, mux_487_nl, fsm_output(6));
  mux_495_nl <= MUX_s_1_2_2(mux_494_nl, or_609_cse, fsm_output(7));
  INIT_2D_MEM_LOOP_2_not_1_nl <= NOT mux_495_nl;
  for_for_j_and_nl <= MUX_v_9_2_2(STD_LOGIC_VECTOR'("000000000"), for_for_j_mux1h_nl,
      INIT_2D_MEM_LOOP_2_not_1_nl);
  or_616_nl <= (fsm_output(4)) OR (fsm_output(0)) OR (fsm_output(1)) OR (NOT (fsm_output(8)));
  mux_513_nl <= MUX_s_1_2_2((fsm_output(4)), or_616_nl, fsm_output(2));
  or_617_nl <= (fsm_output(3)) OR mux_513_nl;
  nand_25_nl <= NOT(nor_126_cse AND nand_199_cse AND (fsm_output(8)));
  or_23_nl <= (NOT (fsm_output(1))) OR (fsm_output(8)) OR (NOT (fsm_output(4)));
  mux_510_nl <= MUX_s_1_2_2(nand_200_cse, or_612_cse, fsm_output(4));
  mux_511_nl <= MUX_s_1_2_2(or_23_nl, mux_510_nl, fsm_output(2));
  mux_512_nl <= MUX_s_1_2_2(nand_25_nl, mux_511_nl, fsm_output(3));
  mux_514_nl <= MUX_s_1_2_2(or_617_nl, mux_512_nl, fsm_output(5));
  nand_201_nl <= NOT((fsm_output(2)) AND (fsm_output(4)) AND (fsm_output(1)) AND
      (NOT (fsm_output(8))));
  mux_508_nl <= MUX_s_1_2_2(nand_201_nl, or_21_cse, fsm_output(3));
  mux_509_nl <= MUX_s_1_2_2(mux_508_nl, (fsm_output(8)), fsm_output(5));
  mux_515_nl <= MUX_s_1_2_2(mux_514_nl, mux_509_nl, fsm_output(6));
  mux_516_nl <= MUX_s_1_2_2(mux_515_nl, or_609_cse, fsm_output(7));
  for_for_for_for_nor_nl <= NOT(z_out_28_2 OR z_out_30_2);
  INIT_2D_MEM_LOOP_2_and_1_nl <= CONV_SL_1_1(reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1=STD_LOGIC_VECTOR'("000000000"))
      AND INIT_2D_MEM_LOOP_2_3_INIT_2D_MEM_LOOP_2_3_nor_itm_1 AND CONV_SL_1_1(INIT_2D_MEM_LOOP_2_2_acc_itm=STD_LOGIC_VECTOR'("000000000"));
  LINEAR_FORWARD_NO_MUL_LOOP_5_and_1_nl <= (CACHE_UPDATE_LOOP_3_qif_acc_3_ncse_2_0(2))
      AND (APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0(2)) AND (RESHAPE_2D_TO_3D_LOOP_3_2_mux_3_itm_2_0(2));
  CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_nl <= NOT(z_out_29_2 OR z_out_28_2);
  and_396_nl <= and_dcpl_111 AND and_dcpl_127 AND CONV_SL_1_1(fsm_output(1 DOWNTO
      0)=STD_LOGIC_VECTOR'("01")) AND (NOT (rms_norm_384_val_acc_psp_sva_1(31)));
  or_663_nl <= (fsm_output(3)) OR (fsm_output(1)) OR (fsm_output(8));
  or_662_nl <= (fsm_output(3)) OR nand_200_cse;
  mux_562_nl <= MUX_s_1_2_2(or_663_nl, or_662_nl, fsm_output(0));
  nor_431_nl <= NOT((NOT (fsm_output(5))) OR (fsm_output(2)) OR mux_562_nl);
  or_659_nl <= (fsm_output(0)) OR (NOT((fsm_output(3)) AND (fsm_output(1)) AND (fsm_output(8))));
  or_658_nl <= (NOT (fsm_output(0))) OR (fsm_output(3)) OR (fsm_output(1)) OR (fsm_output(8));
  mux_561_nl <= MUX_s_1_2_2(or_659_nl, or_658_nl, fsm_output(2));
  nor_432_nl <= NOT((fsm_output(5)) OR mux_561_nl);
  mux_563_nl <= MUX_s_1_2_2(nor_431_nl, nor_432_nl, fsm_output(4));
  compute_sqrt_for_i_or_1_nl <= and_dcpl_393 OR (mux_563_nl AND and_dcpl_137);
  compute_sqrt_for_i_or_nl <= and_dcpl_397 OR and_dcpl_400 OR and_dcpl_263 OR and_dcpl_234
      OR and_dcpl_246 OR and_dcpl_247;
  compute_sqrt_for_i_mux1h_nl <= MUX1HOT_v_4_3_2((z_out_16_4_0(3 DOWNTO 0)), z_out_31,
      z_out_12, STD_LOGIC_VECTOR'( compute_sqrt_for_i_or_1_nl & compute_sqrt_for_i_or_nl
      & and_dcpl_243));
  or_1325_nl <= CONV_SL_1_1(fsm_output(8 DOWNTO 3)/=STD_LOGIC_VECTOR'("001011"));
  or_1326_nl <= CONV_SL_1_1(fsm_output(8 DOWNTO 3)/=STD_LOGIC_VECTOR'("101100"));
  mux_571_nl <= MUX_s_1_2_2(or_1325_nl, or_1326_nl, fsm_output(2));
  or_1327_nl <= CONV_SL_1_1(fsm_output(8 DOWNTO 3)/=STD_LOGIC_VECTOR'("100001"));
  or_1329_nl <= (NOT (fsm_output(6))) OR (fsm_output(3)) OR (fsm_output(7)) OR (fsm_output(5));
  mux_568_nl <= MUX_s_1_2_2(or_1328_cse, or_1329_nl, fsm_output(4));
  mux_569_nl <= MUX_s_1_2_2(mux_568_nl, or_1330_cse, fsm_output(8));
  mux_570_nl <= MUX_s_1_2_2(or_1327_nl, mux_569_nl, fsm_output(2));
  mux_572_nl <= MUX_s_1_2_2(mux_571_nl, mux_570_nl, fsm_output(1));
  or_673_nl <= (NOT (fsm_output(3))) OR (fsm_output(7)) OR (fsm_output(5));
  or_672_nl <= (fsm_output(3)) OR (fsm_output(7)) OR (NOT (fsm_output(5)));
  mux_565_nl <= MUX_s_1_2_2(or_673_nl, or_672_nl, fsm_output(6));
  or_1331_nl <= (fsm_output(8)) OR (fsm_output(4)) OR mux_565_nl;
  or_1332_nl <= CONV_SL_1_1(fsm_output(8 DOWNTO 3)/=STD_LOGIC_VECTOR'("101011"));
  mux_566_nl <= MUX_s_1_2_2(or_1331_nl, or_1332_nl, fsm_output(2));
  or_667_nl <= (fsm_output(4)) OR (fsm_output(6)) OR (fsm_output(3)) OR not_tmp_35;
  mux_564_nl <= MUX_s_1_2_2(or_667_nl, or_1054_cse, fsm_output(8));
  or_1333_nl <= (fsm_output(2)) OR mux_564_nl;
  mux_567_nl <= MUX_s_1_2_2(mux_566_nl, or_1333_nl, fsm_output(1));
  mux_573_nl <= MUX_s_1_2_2(mux_572_nl, mux_567_nl, fsm_output(0));
  nor_132_nl <= NOT((fsm_output(2)) OR (NOT (fsm_output(6))));
  mux_556_nl <= MUX_s_1_2_2(or_tmp_32, or_tmp_510, nor_132_nl);
  mux_557_nl <= MUX_s_1_2_2(mux_556_nl, mux_tmp_543, fsm_output(0));
  mux_558_nl <= MUX_s_1_2_2(mux_tmp_545, mux_557_nl, fsm_output(4));
  mux_553_nl <= MUX_s_1_2_2(or_tmp_32, or_745_cse, fsm_output(6));
  mux_554_nl <= MUX_s_1_2_2(or_55_cse, mux_553_nl, fsm_output(2));
  mux_551_nl <= MUX_s_1_2_2(mux_tmp_542, or_58_cse, fsm_output(2));
  mux_549_nl <= MUX_s_1_2_2((NOT or_tmp_30), or_tmp_32, or_657_cse);
  mux_550_nl <= MUX_s_1_2_2(mux_549_nl, or_58_cse, fsm_output(2));
  mux_552_nl <= MUX_s_1_2_2(mux_551_nl, mux_550_nl, fsm_output(0));
  mux_555_nl <= MUX_s_1_2_2(mux_554_nl, mux_552_nl, fsm_output(4));
  mux_559_nl <= MUX_s_1_2_2(mux_558_nl, mux_555_nl, fsm_output(3));
  mux_546_nl <= MUX_s_1_2_2(mux_tmp_545, or_55_cse, fsm_output(0));
  mux_547_nl <= MUX_s_1_2_2(mux_546_nl, mux_tmp_543, fsm_output(4));
  mux_538_nl <= MUX_s_1_2_2(mux_tmp_534, or_745_cse, fsm_output(6));
  mux_539_nl <= MUX_s_1_2_2(or_55_cse, mux_538_nl, fsm_output(2));
  or_650_nl <= (fsm_output(8)) OR (fsm_output(7)) OR (fsm_output(5));
  mux_536_nl <= MUX_s_1_2_2(or_650_nl, or_745_cse, fsm_output(6));
  mux_535_nl <= MUX_s_1_2_2(mux_tmp_534, or_tmp_510, fsm_output(6));
  mux_537_nl <= MUX_s_1_2_2(mux_536_nl, mux_535_nl, fsm_output(2));
  mux_540_nl <= MUX_s_1_2_2(mux_539_nl, mux_537_nl, fsm_output(0));
  or_647_nl <= (NOT (fsm_output(8))) OR (fsm_output(7)) OR (fsm_output(5));
  mux_530_nl <= MUX_s_1_2_2(or_647_nl, or_tmp_510, fsm_output(6));
  mux_531_nl <= MUX_s_1_2_2(mux_530_nl, mux_tmp_528, fsm_output(2));
  mux_529_nl <= MUX_s_1_2_2(or_58_cse, mux_tmp_528, fsm_output(2));
  mux_532_nl <= MUX_s_1_2_2(mux_531_nl, mux_529_nl, fsm_output(0));
  mux_541_nl <= MUX_s_1_2_2(mux_540_nl, mux_532_nl, fsm_output(4));
  mux_548_nl <= MUX_s_1_2_2(mux_547_nl, mux_541_nl, fsm_output(3));
  mux_560_nl <= MUX_s_1_2_2(mux_559_nl, mux_548_nl, fsm_output(1));
  operator_40_24_true_AC_TRN_AC_WRAP_mux_nl <= MUX_s_1_2_2((compute_sqrt_for_acc_1_itm_40_1_1(39)),
      (compute_sqrt_1_for_acc_1_itm_40_1_1(39)), and_dcpl_156);
  operator_40_24_true_AC_TRN_AC_WRAP_and_2_nl <= (NOT and_dcpl_512) AND and_dcpl_409;
  operator_40_24_true_AC_TRN_AC_WRAP_mux1h_1_nl <= MUX1HOT_v_9_5_2((compute_sqrt_for_acc_1_itm_40_1_1(38
      DOWNTO 30)), reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1,
      z_out_2, RMS_NORM_LOOP_2_2_dfr_sva_8_0, (compute_sqrt_1_for_acc_1_itm_40_1_1(38
      DOWNTO 30)), STD_LOGIC_VECTOR'( and_dcpl_154 & RMS_NORM_LOOP_2_2_dfr_sva_mx0c3
      & operator_40_24_true_AC_TRN_AC_WRAP_and_2_nl & and_dcpl_512 & and_dcpl_156));
  RMS_NORM_LOOP_2_2_not_5_nl <= NOT RMS_NORM_LOOP_2_2_dfr_sva_mx0c0;
  operator_40_24_true_AC_TRN_AC_WRAP_and_1_nl <= MUX_v_9_2_2(STD_LOGIC_VECTOR'("000000000"),
      operator_40_24_true_AC_TRN_AC_WRAP_mux1h_1_nl, RMS_NORM_LOOP_2_2_not_5_nl);
  compute_sqrt_for_or_3_nl <= APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c1
      OR APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c2
      OR APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c4;
  compute_sqrt_for_or_4_nl <= and_dcpl_263 OR APPLY_ROTARY_POS_EMB_LOOP_6_slc_APPLY_ROTARY_POS_EMB_LOOP_6_acc_2_itm_mx0c6
      OR and_dcpl_331;
  compute_sqrt_for_or_5_nl <= and_dcpl_245 OR and_dcpl_213;
  mux_691_nl <= MUX_s_1_2_2(mux_710_cse, mux_tmp_685, and_692_cse);
  mux_692_nl <= MUX_s_1_2_2(or_817_cse, mux_691_nl, fsm_output(5));
  or_19_nl <= (NOT (fsm_output(3))) OR (fsm_output(8)) OR (NOT (fsm_output(4)));
  mux_682_nl <= MUX_s_1_2_2((fsm_output(7)), or_832_cse, or_19_nl);
  nor_157_nl <= NOT((NOT (fsm_output(3))) OR (fsm_output(4)) OR (NOT (fsm_output(8))));
  mux_681_nl <= MUX_s_1_2_2(or_832_cse, (fsm_output(7)), nor_157_nl);
  mux_683_nl <= MUX_s_1_2_2(mux_682_nl, mux_681_nl, fsm_output(0));
  mux_686_nl <= MUX_s_1_2_2(mux_tmp_685, mux_683_nl, fsm_output(1));
  mux_687_nl <= MUX_s_1_2_2(or_802_cse, mux_686_nl, fsm_output(5));
  mux_693_nl <= MUX_s_1_2_2(mux_692_nl, mux_687_nl, fsm_output(2));
  QUANTIZE_ACTIVATION_LOOP_2_attention_abs_2_nand_nl <= NOT((attention_abs_2_mux_2(39))
      AND (RMS_NORM_LOOP_2_slc_RMS_NORM_LOOP_2_mul_67_28_ncse_sva(39)));
  attention_abs_2_mux_3_nl <= MUX_v_39_2_2((RMS_NORM_LOOP_2_slc_RMS_NORM_LOOP_2_mul_67_28_ncse_sva(38
      DOWNTO 0)), (attention_abs_2_mux_2(38 DOWNTO 0)), RMS_NORM_LOOP_2_slc_RMS_NORM_LOOP_2_mul_67_28_ncse_sva(39));
  QUANTIZE_ACTIVATION_LOOP_2_acc_4_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED(QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_39
      & QUANTIZE_ACTIVATION_LOOP_1_max_val_lpi_2_38_0), 40), 41) + CONV_UNSIGNED(CONV_SIGNED(SIGNED(QUANTIZE_ACTIVATION_LOOP_2_attention_abs_2_nand_nl
      & (NOT attention_abs_2_mux_3_nl)), 40), 41) + UNSIGNED'( "00000000000000000000000000000000000000001"),
      41));
  SF_LOOP_3_acc_70_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(18),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(2),
      1), 1), 2), 2));
  SF_LOOP_3_acc_89_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(CONV_SIGNED(SF_LOOP_3_acc_5_psp_sva(20),
      1), 1), 2) + CONV_UNSIGNED(CONV_SIGNED(CONV_SIGNED(SF_LOOP_3_acc_5_psp_sva(21),
      1), 1), 2), 2));
  mux_770_nl <= MUX_s_1_2_2(or_913_cse, or_702_cse, fsm_output(3));
  mux_771_nl <= MUX_s_1_2_2(mux_770_nl, or_tmp_748, fsm_output(2));
  mux_769_nl <= MUX_s_1_2_2(or_913_cse, or_tmp_748, fsm_output(2));
  mux_772_nl <= MUX_s_1_2_2(mux_771_nl, mux_769_nl, fsm_output(1));
  or_895_nl <= (fsm_output(3)) OR (NOT (fsm_output(4))) OR (fsm_output(8)) OR (fsm_output(7));
  mux_767_nl <= MUX_s_1_2_2(or_895_nl, or_tmp_748, fsm_output(2));
  nor_498_nl <= NOT((NOT (fsm_output(4))) OR (NOT (fsm_output(8))) OR (fsm_output(7)));
  nor_499_nl <= NOT((fsm_output(4)) OR (fsm_output(8)) OR (fsm_output(7)));
  mux_766_nl <= MUX_s_1_2_2(nor_498_nl, nor_499_nl, fsm_output(3));
  nand_49_nl <= NOT((fsm_output(2)) AND mux_766_nl);
  mux_768_nl <= MUX_s_1_2_2(mux_767_nl, nand_49_nl, fsm_output(1));
  mux_773_nl <= MUX_s_1_2_2(mux_772_nl, mux_768_nl, fsm_output(0));
  nor_500_nl <= NOT(mux_773_nl OR or_216_cse);
  nor_501_nl <= NOT((NOT (fsm_output(2))) OR (fsm_output(3)) OR (NOT (fsm_output(4)))
      OR (fsm_output(5)) OR (fsm_output(8)));
  nor_502_nl <= NOT((fsm_output(2)) OR (fsm_output(3)) OR (fsm_output(4)) OR (NOT((fsm_output(5))
      AND (fsm_output(8)))));
  mux_775_nl <= MUX_s_1_2_2(nor_501_nl, nor_502_nl, fsm_output(1));
  nor_503_nl <= NOT((fsm_output(2)) OR (NOT (fsm_output(3))) OR (NOT (fsm_output(4)))
      OR (fsm_output(5)) OR (NOT (fsm_output(8))));
  nor_504_nl <= NOT((NOT (fsm_output(2))) OR (NOT (fsm_output(3))) OR (NOT (fsm_output(4)))
      OR (fsm_output(5)) OR (fsm_output(8)));
  mux_774_nl <= MUX_s_1_2_2(nor_503_nl, nor_504_nl, fsm_output(1));
  mux_776_nl <= MUX_s_1_2_2(mux_775_nl, mux_774_nl, fsm_output(0));
  and_465_nl <= mux_776_nl AND and_dcpl_137;
  QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_mux1h_nl <= MUX1HOT_v_2_4_2(APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0,
      (APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0(1 DOWNTO 0)), STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_70_nl),
      2)), STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_89_nl), 2)), STD_LOGIC_VECTOR'(
      nor_500_nl & and_465_nl & and_dcpl_361 & and_dcpl_454));
  nor_177_nl <= NOT((fsm_output(1)) OR (NOT (fsm_output(3))));
  mux_761_nl <= MUX_s_1_2_2(or_890_cse, or_360_cse, nor_177_nl);
  or_889_nl <= (NOT (fsm_output(3))) OR (fsm_output(4)) OR (NOT (fsm_output(7)));
  mux_760_nl <= MUX_s_1_2_2(or_909_cse, or_889_nl, fsm_output(1));
  mux_762_nl <= MUX_s_1_2_2(mux_761_nl, mux_760_nl, fsm_output(0));
  or_887_nl <= (NOT (fsm_output(0))) OR (fsm_output(1)) OR (NOT (fsm_output(3)))
      OR (NOT (fsm_output(4))) OR (fsm_output(7));
  mux_763_nl <= MUX_s_1_2_2(mux_762_nl, or_887_nl, fsm_output(8));
  or_886_nl <= (NOT (fsm_output(8))) OR (fsm_output(0)) OR (NOT (fsm_output(1)))
      OR (fsm_output(3)) OR (fsm_output(4)) OR (fsm_output(7));
  mux_764_nl <= MUX_s_1_2_2(mux_763_nl, or_886_nl, fsm_output(5));
  or_884_nl <= (fsm_output(1)) OR (fsm_output(3)) OR (NOT (fsm_output(4))) OR (fsm_output(7));
  mux_757_nl <= MUX_s_1_2_2(or_360_cse, (fsm_output(7)), fsm_output(3));
  nand_48_nl <= NOT((fsm_output(1)) AND (NOT mux_757_nl));
  mux_758_nl <= MUX_s_1_2_2(or_884_nl, nand_48_nl, fsm_output(0));
  mux_759_nl <= MUX_s_1_2_2(mux_758_nl, or_909_cse, fsm_output(8));
  or_885_nl <= (fsm_output(5)) OR mux_759_nl;
  mux_765_nl <= MUX_s_1_2_2(mux_764_nl, or_885_nl, fsm_output(2));
  nor_579_nl <= NOT(mux_765_nl OR (NOT (fsm_output(6))));
  QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_nl <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"),
      QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_mux1h_nl, nor_579_nl);
  nor_506_nl <= NOT((fsm_output(2)) OR (fsm_output(3)) OR (NOT (fsm_output(4))) OR
      (fsm_output(6)));
  mux_789_nl <= MUX_s_1_2_2(and_766_cse, nor_506_nl, fsm_output(1));
  mux_791_nl <= MUX_s_1_2_2(nor_505_cse, mux_789_nl, fsm_output(0));
  and_469_nl <= mux_791_nl AND and_dcpl_398;
  QUANTIZE_ACTIVATION_LOOP_5_1_acc_3_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0),
      2), 3) + SIGNED'( "001"), 3));
  nor_507_nl <= NOT(CONV_SL_1_1(fsm_output(3 DOWNTO 2)/=STD_LOGIC_VECTOR'("01"))
      OR nand_93_cse);
  nor_508_nl <= NOT((fsm_output(2)) OR (NOT (fsm_output(3))) OR (NOT (fsm_output(4)))
      OR (fsm_output(8)));
  mux_797_nl <= MUX_s_1_2_2(nor_507_nl, nor_508_nl, fsm_output(1));
  mux_796_nl <= MUX_s_1_2_2((NOT (fsm_output(8))), (fsm_output(8)), fsm_output(4));
  and_473_nl <= CONV_SL_1_1(fsm_output(3 DOWNTO 1)=STD_LOGIC_VECTOR'("111")) AND
      mux_796_nl;
  mux_798_nl <= MUX_s_1_2_2(mux_797_nl, and_473_nl, fsm_output(0));
  and_474_nl <= mux_798_nl AND and_dcpl_137 AND (NOT (fsm_output(5)));
  or_954_nl <= (fsm_output(0)) OR (fsm_output(4)) OR (fsm_output(6)) OR (fsm_output(5))
      OR (fsm_output(7)) OR (NOT (fsm_output(8)));
  or_952_nl <= (APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2(3)) OR CONV_SL_1_1(fsm_output(8
      DOWNTO 4)/=STD_LOGIC_VECTOR'("01011"));
  nand_223_nl <= NOT(CONV_SL_1_1(fsm_output(8 DOWNTO 4)=STD_LOGIC_VECTOR'("01111")));
  mux_824_nl <= MUX_s_1_2_2(or_952_nl, nand_223_nl, fsm_output(0));
  mux_825_nl <= MUX_s_1_2_2(or_954_nl, mux_824_nl, fsm_output(1));
  nor_515_nl <= NOT((fsm_output(3)) OR mux_825_nl);
  nor_516_nl <= NOT(CONV_SL_1_1(fsm_output(1 DOWNTO 0)/=STD_LOGIC_VECTOR'("11"))
      OR CACHE_UPDATE_LOOP_1_and_cse OR CONV_SL_1_1(fsm_output(8 DOWNTO 5)/=STD_LOGIC_VECTOR'("0101")));
  nor_517_nl <= NOT(CONV_SL_1_1(fsm_output(1 DOWNTO 0)/=STD_LOGIC_VECTOR'("00"))
      OR nor_514_cse OR CONV_SL_1_1(fsm_output(8 DOWNTO 5)/=STD_LOGIC_VECTOR'("0101")));
  mux_823_nl <= MUX_s_1_2_2(nor_516_nl, nor_517_nl, fsm_output(3));
  mux_826_nl <= MUX_s_1_2_2(nor_515_nl, mux_823_nl, fsm_output(2));
  QUANTIZE_ACTIVATION_LOOP_5_1_k_mux1h_1_nl <= MUX1HOT_v_3_3_2(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(QUANTIZE_ACTIVATION_LOOP_5_1_acc_3_nl),
      3)), (APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2(2 DOWNTO 0)), SF_LOOP_3_acc_61_cse_mx0w4,
      STD_LOGIC_VECTOR'( and_474_nl & mux_826_nl & and_dcpl_361));
  or_1221_nl <= (NOT CACHE_UPDATE_LOOP_1_and_cse) OR CONV_SL_1_1(fsm_output(6 DOWNTO
      5)/=STD_LOGIC_VECTOR'("01"));
  mux_821_nl <= MUX_s_1_2_2(or_1221_nl, nand_243_cse, fsm_output(4));
  nor_512_nl <= NOT((NOT (fsm_output(3))) OR (NOT (fsm_output(2))) OR (fsm_output(0))
      OR mux_821_nl);
  nand_221_nl <= NOT((fsm_output(4)) AND (APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2(3))
      AND CONV_SL_1_1(fsm_output(6 DOWNTO 5)=STD_LOGIC_VECTOR'("01")));
  mux_879_nl <= MUX_s_1_2_2(or_tmp_283, or_216_cse, fsm_output(4));
  mux_819_nl <= MUX_s_1_2_2(nand_221_nl, mux_879_nl, fsm_output(0));
  nand_222_nl <= NOT((fsm_output(0)) AND CACHE_UPDATE_LOOP_1_and_cse AND CONV_SL_1_1(fsm_output(6
      DOWNTO 5)=STD_LOGIC_VECTOR'("01")));
  mux_820_nl <= MUX_s_1_2_2(mux_819_nl, nand_222_nl, fsm_output(2));
  nor_513_nl <= NOT((fsm_output(3)) OR mux_820_nl);
  mux_822_nl <= MUX_s_1_2_2(nor_512_nl, nor_513_nl, fsm_output(1));
  APPLY_ROTARY_POS_EMB_LOOP_1_i_nand_nl <= NOT(mux_822_nl AND and_dcpl_29);
  or_934_nl <= (NOT (fsm_output(4))) OR (fsm_output(7)) OR (NOT (fsm_output(6)))
      OR (fsm_output(8));
  mux_813_nl <= MUX_s_1_2_2(mux_tmp_805, or_745_cse, fsm_output(4));
  mux_812_nl <= MUX_s_1_2_2(or_55_cse, or_791_cse, and_768_cse);
  mux_814_nl <= MUX_s_1_2_2(mux_813_nl, mux_812_nl, fsm_output(1));
  mux_815_nl <= MUX_s_1_2_2(or_934_nl, mux_814_nl, fsm_output(5));
  mux_809_nl <= MUX_s_1_2_2(or_55_cse, mux_tmp_805, nor_179_cse);
  or_933_nl <= (NOT(and_768_cse OR (fsm_output(7)))) OR (NOT (fsm_output(6))) OR
      (fsm_output(8));
  mux_810_nl <= MUX_s_1_2_2(mux_809_nl, or_933_nl, fsm_output(1));
  mux_811_nl <= MUX_s_1_2_2(mux_810_nl, mux_tmp_803, fsm_output(5));
  mux_816_nl <= MUX_s_1_2_2(mux_815_nl, mux_811_nl, fsm_output(3));
  nand_50_nl <= NOT((fsm_output(4)) AND (NOT mux_tmp_805));
  mux_806_nl <= MUX_s_1_2_2(nand_88_cse, nand_50_nl, or_603_cse);
  mux_804_nl <= MUX_s_1_2_2(mux_tmp_803, or_129_cse, and_692_cse);
  mux_807_nl <= MUX_s_1_2_2(mux_806_nl, mux_804_nl, fsm_output(5));
  or_928_nl <= nor_510_cse OR (NOT (fsm_output(6))) OR (fsm_output(8));
  mux_801_nl <= MUX_s_1_2_2(or_928_nl, nand_88_cse, and_692_cse);
  mux_799_nl <= MUX_s_1_2_2(or_745_cse, or_55_cse, fsm_output(4));
  mux_800_nl <= MUX_s_1_2_2(or_129_cse, mux_799_nl, or_603_cse);
  mux_802_nl <= MUX_s_1_2_2(mux_801_nl, mux_800_nl, fsm_output(5));
  mux_808_nl <= MUX_s_1_2_2(mux_807_nl, mux_802_nl, fsm_output(3));
  mux_817_nl <= MUX_s_1_2_2(mux_816_nl, mux_808_nl, fsm_output(2));
  LINEAR_FORWARD_NO_MUL_LOOP_4_ki_mux1h_2_nl <= MUX1HOT_v_4_3_2((LINEAR_FORWARD_NO_MUL_LOOP_4_ki_4_0_sva_2(3
      DOWNTO 0)), z_out_35, z_out_31, STD_LOGIC_VECTOR'( and_dcpl_462 & and_dcpl_306
      & and_dcpl_243));
  not_2161_nl <= NOT and_dcpl_461;
  GEMM_3D_FLOAT_LOOP_4_1_l_mux1h_5_nl <= MUX1HOT_v_3_3_2(LINEAR_FORWARD_NO_MUL_LOOP_3_ko_2_0_sva_2,
      (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2(2 DOWNTO 0)), STD_LOGIC_VECTOR'( "001"),
      STD_LOGIC_VECTOR'( GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0_mx0c1 & GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0_mx0c2
      & GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0_mx0c3));
  GEMM_3D_FLOAT_LOOP_1_1_i_not_2_nl <= NOT GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0_mx0c0;
  GEMM_3D_FLOAT_LOOP_4_1_l_mux1h_6_nl <= MUX1HOT_v_2_4_2((LINEAR_FORWARD_NO_MUL_LOOP_3_2_ko_2_0_sva_1_mx0w2(2
      DOWNTO 1)), (GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva(2 DOWNTO 1)), (QUANTIZE_ACTIVATION_LOOP_3_jo_2_0_sva_3(2
      DOWNTO 1)), (RESHAPE_2D_TO_3D_LOOP_3_2_mux_3_itm_2_0(2 DOWNTO 1)), STD_LOGIC_VECTOR'(
      CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c1 & CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c3
      & and_dcpl_246 & CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c5));
  CACHE_UPDATE_LOOP_2_1_j_not_1_nl <= NOT CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c0;
  GEMM_3D_FLOAT_LOOP_4_1_l_mux1h_7_nl <= MUX1HOT_s_1_5_2((LINEAR_FORWARD_NO_MUL_LOOP_3_2_ko_2_0_sva_1_mx0w2(0)),
      (APPLY_ROTARY_POS_EMB_LOOP_3_acc_30_psp_sva_1(0)), (GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva(0)),
      (QUANTIZE_ACTIVATION_LOOP_3_jo_2_0_sva_3(0)), (RESHAPE_2D_TO_3D_LOOP_3_2_mux_3_itm_2_0(0)),
      STD_LOGIC_VECTOR'( CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c1 & and_dcpl_284 & CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c3
      & and_dcpl_246 & CACHE_UPDATE_LOOP_2_1_j_2_0_sva_mx0c5));
  APPLY_ROTARY_POS_EMB_LOOP_6_or_nl <= and_dcpl_397 OR and_dcpl_400 OR and_dcpl_234
      OR and_dcpl_246 OR and_dcpl_247;
  APPLY_ROTARY_POS_EMB_LOOP_6_mux1h_15_nl <= MUX1HOT_v_4_3_2((LINEAR_FORWARD_NO_MUL_LOOP_4_2_ki_4_0_sva_2(3
      DOWNTO 0)), z_out_12, SF_LOOP_3_acc_63_cse_mx0w6, STD_LOGIC_VECTOR'( and_dcpl_462
      & APPLY_ROTARY_POS_EMB_LOOP_6_or_nl & and_dcpl_361));
  not_2162_nl <= NOT and_dcpl_461;
  nand_246_nl <= NOT((fsm_output(2)) AND (fsm_output(5)) AND (fsm_output(3)) AND
      (fsm_output(1)) AND (fsm_output(7)));
  mux_898_nl <= MUX_s_1_2_2(or_360_cse, (NOT or_231_cse), fsm_output(0));
  mux_897_nl <= MUX_s_1_2_2((NOT or_231_cse), mux_185_cse, fsm_output(0));
  mux_899_nl <= MUX_s_1_2_2(mux_898_nl, mux_897_nl, fsm_output(1));
  mux_900_nl <= MUX_s_1_2_2(or_360_cse, mux_899_nl, fsm_output(3));
  mux_895_nl <= MUX_s_1_2_2((NOT (fsm_output(7))), or_360_cse, or_603_cse);
  mux_894_nl <= MUX_s_1_2_2((NOT (fsm_output(7))), or_360_cse, and_692_cse);
  mux_896_nl <= MUX_s_1_2_2(mux_895_nl, mux_894_nl, fsm_output(3));
  mux_901_nl <= MUX_s_1_2_2(mux_900_nl, mux_896_nl, fsm_output(5));
  or_1038_nl <= (NOT((fsm_output(0)) OR (NOT (fsm_output(7))))) OR (fsm_output(4));
  mux_892_nl <= MUX_s_1_2_2((NOT mux_185_cse), or_1038_nl, fsm_output(1));
  nand_247_nl <= NOT((fsm_output(3)) AND mux_892_nl);
  mux_889_nl <= MUX_s_1_2_2(or_360_cse, (NOT (fsm_output(7))), or_603_cse);
  mux_890_nl <= MUX_s_1_2_2(mux_889_nl, or_360_cse, fsm_output(3));
  mux_893_nl <= MUX_s_1_2_2(nand_247_nl, mux_890_nl, fsm_output(5));
  mux_902_nl <= MUX_s_1_2_2(mux_901_nl, mux_893_nl, fsm_output(2));
  mux_903_nl <= MUX_s_1_2_2(nand_246_nl, mux_902_nl, fsm_output(6));
  QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_mux_nl <= MUX_s_1_2_2(reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd,
      (CACHE_UPDATE_LOOP_3_qif_acc_3_ncse_2_0(1)), and_dcpl_478);
  QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_nl
      <= QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_mux_nl AND nor_580_seb;
  QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_mux_1_nl <= MUX_s_1_2_2(reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd_1,
      (CACHE_UPDATE_LOOP_3_qif_acc_3_ncse_2_0(0)), and_dcpl_478);
  QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_4_nl
      <= QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_mux_1_nl AND nor_580_seb;
  SF_LOOP_3_acc_83_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(36),
      1), 1), 2) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(35),
      1), 1), 2), 2));
  QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_2_nl <= CONV_SL_1_1(APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0=STD_LOGIC_VECTOR'("00"))
      AND and_dcpl_316;
  QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_3_nl <= CONV_SL_1_1(APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0=STD_LOGIC_VECTOR'("01"))
      AND and_dcpl_316;
  QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_4_nl <= CONV_SL_1_1(APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0=STD_LOGIC_VECTOR'("10"))
      AND and_dcpl_316;
  QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_5_nl <= CONV_SL_1_1(APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0=STD_LOGIC_VECTOR'("11"))
      AND and_dcpl_316;
  or_1050_nl <= CONV_SL_1_1(fsm_output(2 DOWNTO 0)/=STD_LOGIC_VECTOR'("011"));
  mux_912_nl <= MUX_s_1_2_2(mux_tmp_125, or_360_cse, or_1050_nl);
  and_500_nl <= (NOT mux_912_nl) AND and_dcpl_482;
  and_501_nl <= and_dcpl_204 AND and_dcpl_116;
  QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_mux1h_2_nl <= MUX1HOT_v_2_8_2((LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_sva(1
      DOWNTO 0)), (LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_sva(3 DOWNTO 2)), (LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_sva(5
      DOWNTO 4)), (LINEAR_FORWARD_NO_MUL_LOOP_4_1_packed_val_sva(7 DOWNTO 6)), CACHE_UPDATE_LOOP_3_k_5_0_sva_1_1_0,
      (RESHAPE_2D_TO_3D_LOOP_3_2_mux_3_itm_2_0(1 DOWNTO 0)), STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_83_nl),
      2)), LINEAR_FORWARD_NO_MUL_LOOP_5_3_weight_val_mux_tmp, STD_LOGIC_VECTOR'(
      QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_2_nl & QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_3_nl
      & QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_4_nl & QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_5_nl
      & and_500_nl & and_dcpl_478 & and_dcpl_361 & and_501_nl));
  mux_909_nl <= MUX_s_1_2_2(nand_tmp_58, or_tmp_895, or_604_cse);
  mux_904_nl <= MUX_s_1_2_2(or_745_cse, (fsm_output(7)), fsm_output(4));
  mux_905_nl <= MUX_s_1_2_2(or_702_cse, mux_904_nl, fsm_output(3));
  mux_907_nl <= MUX_s_1_2_2(nand_tmp_58, mux_905_nl, fsm_output(2));
  mux_908_nl <= MUX_s_1_2_2(or_tmp_895, mux_907_nl, fsm_output(1));
  mux_910_nl <= MUX_s_1_2_2(mux_909_nl, mux_908_nl, fsm_output(0));
  nor_581_nl <= NOT(mux_910_nl OR or_216_cse);
  QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_and_1_nl <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"),
      QUANTIZE_ACTIVATION_LOOP_5_1_quantized_value_clamped_qif_mux1h_2_nl, nor_581_nl);
  LINEAR_FORWARD_NO_MUL_LOOP_5_acc_2_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED'(
      reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd & reg_APPLY_ROTARY_POS_EMB_LOOP_3_acc_36_1_ftd_1),
      2), 3) + SIGNED'( "001"), 3));
  SF_LOOP_3_acc_81_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(36),
      1),2)), 2), 3) + CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(35),
      1), 1), 3), 3));
  mux_930_nl <= MUX_s_1_2_2(or_360_cse, mux_tmp_125, fsm_output(2));
  mux_929_nl <= MUX_s_1_2_2(mux_tmp_125, or_360_cse, fsm_output(2));
  mux_931_nl <= MUX_s_1_2_2(mux_930_nl, mux_929_nl, and_692_cse);
  LINEAR_FORWARD_NO_MUL_LOOP_5_2_acc_2_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(CACHE_UPDATE_LOOP_3_k_5_0_sva_1_1_0),
      2), 3) + SIGNED'( "001"), 3));
  SF_LOOP_3_acc_69_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'(
      (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(18)) & (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(18))),
      2), 3) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(2),
      1),2)), 2), 3), 3));
  SF_LOOP_3_acc_91_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(SF_LOOP_3_acc_5_psp_sva(20),
      1),2)), 2), 3) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(SF_LOOP_3_acc_5_psp_sva(21),
      1),2)), 2), 3), 3));
  nor_546_nl <= NOT((NOT (fsm_output(3))) OR (fsm_output(0)) OR (fsm_output(1)) OR
      (NOT (fsm_output(7))));
  and_796_nl <= (fsm_output(3)) AND (fsm_output(0)) AND (fsm_output(1)) AND (NOT
      (fsm_output(7)));
  mux_926_nl <= MUX_s_1_2_2(nor_546_nl, and_796_nl, fsm_output(4));
  or_1066_nl <= (fsm_output(1)) OR (NOT (fsm_output(7)));
  mux_924_nl <= MUX_s_1_2_2((NOT (fsm_output(7))), (fsm_output(7)), fsm_output(1));
  mux_925_nl <= MUX_s_1_2_2(or_1066_nl, mux_924_nl, fsm_output(0));
  and_797_nl <= CONV_SL_1_1(fsm_output(4 DOWNTO 3)=STD_LOGIC_VECTOR'("11")) AND mux_925_nl;
  mux_927_nl <= MUX_s_1_2_2(mux_926_nl, and_797_nl, fsm_output(2));
  nor_547_nl <= NOT((fsm_output(3)) OR (fsm_output(1)) OR (NOT (fsm_output(7))));
  mux_922_nl <= MUX_s_1_2_2((fsm_output(7)), nor_547_nl, fsm_output(4));
  nor_548_nl <= NOT((fsm_output(4)) OR (NOT (fsm_output(7))));
  mux_923_nl <= MUX_s_1_2_2(mux_922_nl, nor_548_nl, fsm_output(2));
  mux_928_nl <= MUX_s_1_2_2(mux_927_nl, mux_923_nl, fsm_output(5));
  LINEAR_FORWARD_NO_MUL_LOOP_5_or_nl <= (CONV_SL_1_1(LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_slc_LINEAR_FORWARD_NO_MUL_LOOP_4_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_5_weight_val_conc_1_1_1_0_svs=STD_LOGIC_VECTOR'("01")))
      OR LINEAR_FORWARD_NO_MUL_LOOP_5_LINEAR_FORWARD_NO_MUL_LOOP_5_and_1_tmp;
  LINEAR_FORWARD_NO_MUL_LOOP_5_mux_1_nl <= MUX_s_1_2_2(LINEAR_FORWARD_NO_MUL_LOOP_5_or_nl,
      exit_APPLY_ROTARY_POS_EMB_LOOP_3_sva_dfm, and_dcpl_503);
  and_527_nl <= and_dcpl_169 AND ((NOT (fsm_output(1))) OR SOFTMAX_LOOP_3_acc_3_itm_40_1)
      AND and_dcpl_152 AND (NOT (fsm_output(3))) AND nor_tmp_104;
  and_531_nl <= and_dcpl_163 AND (NOT((fsm_output(2)) XOR (fsm_output(1)))) AND and_dcpl_157
      AND (NOT((fsm_output(3)) OR (fsm_output(0))));
  nor_557_nl <= NOT((NOT (fsm_output(7))) OR (fsm_output(1)) OR (fsm_output(0)));
  mux_949_nl <= MUX_s_1_2_2(nor_557_nl, (fsm_output(7)), fsm_output(8));
  or_1090_nl <= CONV_SL_1_1(fsm_output(5 DOWNTO 2)/=STD_LOGIC_VECTOR'("0000")) OR
      (NOT mux_949_nl);
  and_805_nl <= (fsm_output(2)) AND (NOT (fsm_output(8))) AND (fsm_output(7)) AND
      (fsm_output(1)) AND (NOT(SOFTMAX_LOOP_3_acc_3_itm_40_1 AND (fsm_output(0))));
  nor_558_nl <= NOT(CONV_SL_1_1(fsm_output(8 DOWNTO 7)/=STD_LOGIC_VECTOR'("01")));
  mux_946_nl <= MUX_s_1_2_2(nor_558_nl, nor_411_cse, fsm_output(2));
  mux_947_nl <= MUX_s_1_2_2(and_805_nl, mux_946_nl, fsm_output(3));
  nand_63_nl <= NOT((fsm_output(4)) AND mux_947_nl);
  or_1085_nl <= (fsm_output(7)) OR nand_199_cse;
  mux_944_nl <= MUX_s_1_2_2((fsm_output(7)), or_1085_nl, fsm_output(8));
  nand_61_nl <= NOT((fsm_output(2)) AND (NOT mux_944_nl));
  mux_945_nl <= MUX_s_1_2_2(nand_61_nl, (fsm_output(7)), or_1215_cse);
  mux_948_nl <= MUX_s_1_2_2(nand_63_nl, mux_945_nl, fsm_output(5));
  mux_950_nl <= MUX_s_1_2_2(or_1090_nl, mux_948_nl, fsm_output(6));
  APPLY_ROTARY_POS_EMB_LOOP_6_k_mux1h_10_nl <= MUX1HOT_v_4_3_2(APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_5_2,
      (SF_LOOP_3_acc_88_itm(5 DOWNTO 2)), (RESHAPE_2D_TO_3D_LOOP_3_1_k_5_0_sva_2(5
      DOWNTO 2)), STD_LOGIC_VECTOR'( and_533_itm & and_dcpl_361 & and_537_itm));
  APPLY_ROTARY_POS_EMB_LOOP_6_k_mux1h_13_nl <= MUX1HOT_v_2_3_2(APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva_1_1_0,
      (SF_LOOP_3_acc_88_itm(1 DOWNTO 0)), (RESHAPE_2D_TO_3D_LOOP_3_1_k_5_0_sva_2(1
      DOWNTO 0)), STD_LOGIC_VECTOR'( and_533_itm & and_dcpl_361 & and_537_itm));
  or_1334_nl <= (fsm_output(2)) OR (fsm_output(4)) OR (fsm_output(6)) OR (fsm_output(5))
      OR (fsm_output(7)) OR (NOT (fsm_output(8)));
  or_1335_nl <= CONV_SL_1_1(fsm_output(8 DOWNTO 4)/=STD_LOGIC_VECTOR'("01011"));
  mux_956_nl <= MUX_s_1_2_2(or_1334_nl, or_1335_nl, fsm_output(1));
  mux_954_nl <= MUX_s_1_2_2(or_tmp_937, or_tmp_936, fsm_output(4));
  nand_280_nl <= NOT((fsm_output(2)) AND (NOT mux_954_nl));
  or_1336_nl <= (NOT (fsm_output(2))) OR (NOT (fsm_output(4))) OR (fsm_output(6))
      OR (NOT (fsm_output(5))) OR (NOT (fsm_output(7))) OR (fsm_output(8));
  mux_955_nl <= MUX_s_1_2_2(nand_280_nl, or_1336_nl, fsm_output(1));
  mux_957_nl <= MUX_s_1_2_2(mux_956_nl, mux_955_nl, fsm_output(3));
  mux_953_nl <= MUX_s_1_2_2(or_tmp_937, or_tmp_936, nor_126_cse);
  or_1337_nl <= (fsm_output(3)) OR (NOT (fsm_output(1))) OR mux_953_nl;
  mux_958_nl <= MUX_s_1_2_2(mux_957_nl, or_1337_nl, fsm_output(0));
  mux_967_nl <= MUX_s_1_2_2(mux_tmp_963, nand_258_cse, or_603_cse);
  or_1109_nl <= CONV_SL_1_1(fsm_output(3 DOWNTO 0)/=STD_LOGIC_VECTOR'("0011"));
  mux_968_nl <= MUX_s_1_2_2(mux_967_nl, or_1109_nl, fsm_output(4));
  and_810_nl <= (fsm_output(5)) AND (NOT mux_968_nl);
  mux_965_nl <= MUX_s_1_2_2((NOT or_dcpl_93), (fsm_output(2)), or_603_cse);
  nor_567_nl <= NOT((fsm_output(4)) OR mux_965_nl);
  mux_962_nl <= MUX_s_1_2_2(nor_566_cse, or_dcpl_93, fsm_output(1));
  mux_964_nl <= MUX_s_1_2_2(mux_tmp_963, mux_962_nl, fsm_output(0));
  and_811_nl <= (fsm_output(4)) AND (NOT mux_964_nl);
  mux_966_nl <= MUX_s_1_2_2(nor_567_nl, and_811_nl, fsm_output(5));
  mux_969_nl <= MUX_s_1_2_2(and_810_nl, mux_966_nl, fsm_output(6));
  APPLY_ROTARY_POS_EMB_LOOP_6_k_APPLY_ROTARY_POS_EMB_LOOP_6_k_mux_1_nl <= MUX_s_1_2_2((CACHE_UPDATE_LOOP_3_k_5_0_sva_1_5_2(3)),
      (RESHAPE_2D_TO_3D_LOOP_3_k_5_0_sva_2(5)), and_dcpl_263);
  SOFTMAX_LOOP_2_mux1h_nl <= MUX1HOT_v_2_3_2(reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1,
      RESHAPE_2D_TO_3D_LOOP_3_2_mux_3_itm_4_3, (SF_LOOP_3_acc_87_itm(4 DOWNTO 3)),
      STD_LOGIC_VECTOR'( and_548_itm & and_dcpl_503 & and_dcpl_361));
  SOFTMAX_LOOP_2_and_nl <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"), SOFTMAX_LOOP_2_mux1h_nl,
      nor_582_itm);
  APPLY_ROTARY_POS_EMB_LOOP_6_k_mux1h_12_nl <= MUX1HOT_v_2_3_2((CACHE_UPDATE_LOOP_3_k_5_0_sva_1_5_2(2
      DOWNTO 1)), SOFTMAX_LOOP_2_and_nl, (RESHAPE_2D_TO_3D_LOOP_3_k_5_0_sva_2(4 DOWNTO
      3)), STD_LOGIC_VECTOR'( and_542_itm & and_544_itm & and_dcpl_263));
  SOFTMAX_LOOP_2_mux1h_1_nl <= MUX1HOT_s_1_3_2(reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_0,
      (RESHAPE_2D_TO_3D_LOOP_3_2_mux_3_itm_2_0(2)), (SF_LOOP_3_acc_87_itm(2)), STD_LOGIC_VECTOR'(
      and_548_itm & and_dcpl_503 & and_dcpl_361));
  SOFTMAX_LOOP_2_and_1_nl <= SOFTMAX_LOOP_2_mux1h_1_nl AND nor_582_itm;
  APPLY_ROTARY_POS_EMB_LOOP_6_k_mux1h_15_nl <= MUX1HOT_s_1_3_2((CACHE_UPDATE_LOOP_3_k_5_0_sva_1_5_2(0)),
      SOFTMAX_LOOP_2_and_1_nl, (RESHAPE_2D_TO_3D_LOOP_3_k_5_0_sva_2(2)), STD_LOGIC_VECTOR'(
      and_542_itm & and_544_itm & and_dcpl_263));
  SOFTMAX_LOOP_2_mux1h_2_nl <= MUX1HOT_v_2_3_2(reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_1,
      (RESHAPE_2D_TO_3D_LOOP_3_2_mux_3_itm_2_0(1 DOWNTO 0)), (SF_LOOP_3_acc_87_itm(1
      DOWNTO 0)), STD_LOGIC_VECTOR'( and_548_itm & and_dcpl_503 & and_dcpl_361));
  SOFTMAX_LOOP_2_and_2_nl <= MUX_v_2_2_2(STD_LOGIC_VECTOR'("00"), SOFTMAX_LOOP_2_mux1h_2_nl,
      nor_582_itm);
  APPLY_ROTARY_POS_EMB_LOOP_6_k_mux1h_14_nl <= MUX1HOT_v_2_3_2(CACHE_UPDATE_LOOP_3_k_5_0_sva_1_1_0,
      SOFTMAX_LOOP_2_and_2_nl, (RESHAPE_2D_TO_3D_LOOP_3_k_5_0_sva_2(1 DOWNTO 0)),
      STD_LOGIC_VECTOR'( and_542_itm & and_544_itm & and_dcpl_263));
  mux_993_nl <= MUX_s_1_2_2(or_216_cse, mux_tmp_991, fsm_output(0));
  SF_LOOP_3_acc_102_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED((NOT
      (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(18))) & STD_LOGIC_VECTOR'(
      "1000000") & (NOT (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(18)))),
      9), 10) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((attention_5_1_384_384_8_48_attn_weights_rsci_q_d(1
      DOWNTO 0)) & STD_LOGIC_VECTOR'( "1111111")), 9), 10), 10));
  SF_LOOP_3_acc_97_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_itm_17
      & (reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd(7
      DOWNTO 1))) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED((reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(16))
      & STD_LOGIC_VECTOR'( "000") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(16),
      1),3))), 7), 8), 8));
  SF_LOOP_3_acc_98_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1(3
      DOWNTO 0)), 4), 5) + CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(16),
      1),2)), 2), 5), 5));
  SF_LOOP_3_acc_29_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_1
      & reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_2 & reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_3
      & reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_4 & reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_5)
      + CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_17_itm_18_9 & SF_LOOP_3_acc_17_itm_8_0),
      19), 20) + CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_16_itm), 19), 20),
      20));
  SF_LOOP_3_acc_31_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_29_nl),
      21) + CONV_SIGNED(CONV_SIGNED(SIGNED(SF_LOOP_3_acc_28_itm), 20), 21), 21));
  mux_994_nl <= MUX_s_1_2_2(or_tmp_26, mux_tmp_239, fsm_output(2));
  mux_995_nl <= MUX_s_1_2_2(mux_994_nl, mux_tmp_238, and_692_cse);
  and_557_nl <= and_dcpl_212 AND and_dcpl_127 AND (fsm_output(1)) AND (NOT((fsm_output(0))
      OR (rms_norm_384_1_val_acc_psp_sva_1(31))));
  QUANTIZE_ACTIVATION_LOOP_2_1_attention_abs_6_nand_nl <= NOT((attention_abs_6_mux_2(39))
      AND (RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_slc_71_32_1_ncse_sva(39)));
  attention_abs_6_mux_3_nl <= MUX_v_39_2_2((RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_slc_71_32_1_ncse_sva(38
      DOWNTO 0)), (attention_abs_6_mux_2(38 DOWNTO 0)), RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_slc_71_32_1_ncse_sva(39));
  QUANTIZE_ACTIVATION_LOOP_2_1_acc_4_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED(QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_39
      & QUANTIZE_ACTIVATION_LOOP_1_1_max_val_lpi_2_38_0), 40), 41) + CONV_UNSIGNED(CONV_SIGNED(SIGNED(QUANTIZE_ACTIVATION_LOOP_2_1_attention_abs_6_nand_nl
      & (NOT attention_abs_6_mux_3_nl)), 40), 41) + UNSIGNED'( "00000000000000000000000000000000000000001"),
      41));
  mux_1000_nl <= MUX_s_1_2_2(mux_tmp_996, or_tmp_968, fsm_output(3));
  mux_998_nl <= MUX_s_1_2_2(or_tmp_229, or_832_cse, or_1158_cse);
  mux_999_nl <= MUX_s_1_2_2(mux_998_nl, or_tmp_968, fsm_output(3));
  mux_1001_nl <= MUX_s_1_2_2(mux_1000_nl, mux_999_nl, fsm_output(2));
  mux_997_nl <= MUX_s_1_2_2(mux_tmp_996, or_tmp_968, or_392_cse);
  mux_1002_nl <= MUX_s_1_2_2(mux_1001_nl, mux_997_nl, and_692_cse);
  nor_571_nl <= NOT(CONV_SL_1_1(fsm_output(5 DOWNTO 2)/=STD_LOGIC_VECTOR'("1000")));
  and_816_nl <= CONV_SL_1_1(fsm_output(5 DOWNTO 2)=STD_LOGIC_VECTOR'("0111"));
  mux_1003_nl <= MUX_s_1_2_2(nor_571_nl, and_816_nl, and_692_cse);
  operator_40_24_true_AC_TRN_AC_WRAP_acc_1_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(operator_80_48_true_AC_TRN_AC_WRAP_operator_80_48_true_AC_TRN_AC_WRAP_slc_SOFTMAX_LOOP_4_sqr_56_1_itm_slc
      & (RMS_NORM_LOOP_2_mul_1_itm(51 DOWNTO 33))) + UNSIGNED'( "000000000000000000000001"),
      24));
  RMS_NORM_LOOP_1_1_mux1h_5_nl <= MUX1HOT_v_24_3_2((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39
      DOWNTO 16)), (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(39 DOWNTO 16)),
      STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_acc_1_nl),
      24)), STD_LOGIC_VECTOR'( RMS_NORM_LOOP_1_1_or_ssc & and_dcpl_564 & and_dcpl_566));
  RMS_NORM_LOOP_1_1_mux1h_6_nl <= MUX1HOT_v_16_3_2((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(15
      DOWNTO 0)), (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(15 DOWNTO 0)),
      (RMS_NORM_LOOP_2_mul_1_itm(32 DOWNTO 17)), STD_LOGIC_VECTOR'( RMS_NORM_LOOP_1_1_or_ssc
      & and_dcpl_564 & and_dcpl_566));
  RMS_NORM_LOOP_1_1_or_3_nl <= (NOT(and_dcpl_550 OR and_dcpl_556 OR and_dcpl_566
      OR and_dcpl_570 OR and_dcpl_573)) OR and_dcpl_564;
  RMS_NORM_LOOP_1_1_mux1h_7_nl <= MUX1HOT_s_1_4_2((RMS_NORM_LOOP_1_1_slc_RMS_NORM_LOOP_1_1_RMS_NORM_LOOP_1_1_mul_55_16_itm(39)),
      (reg_attention_round_a_cse_slc(3)), (NOT (INIT_2D_MEM_LOOP_2_1_asn_psp(39))),
      reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd, STD_LOGIC_VECTOR'( and_dcpl_550 & RMS_NORM_LOOP_1_1_or_1_itm
      & and_dcpl_564 & and_dcpl_566));
  RMS_NORM_LOOP_1_1_mux1h_8_nl <= MUX1HOT_v_3_4_2((RMS_NORM_LOOP_1_1_slc_RMS_NORM_LOOP_1_1_RMS_NORM_LOOP_1_1_mul_55_16_itm(38
      DOWNTO 36)), (reg_attention_round_a_cse_slc(2 DOWNTO 0)), (NOT (INIT_2D_MEM_LOOP_2_1_asn_psp(38
      DOWNTO 36))), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(38 DOWNTO 36)), STD_LOGIC_VECTOR'(
      and_dcpl_550 & RMS_NORM_LOOP_1_1_or_1_itm & and_dcpl_564 & and_dcpl_566));
  RMS_NORM_LOOP_1_1_mux1h_9_nl <= MUX1HOT_v_36_4_2((RMS_NORM_LOOP_1_1_slc_RMS_NORM_LOOP_1_1_RMS_NORM_LOOP_1_1_mul_55_16_itm(35
      DOWNTO 0)), (RMS_NORM_LOOP_2_mul_1_itm(51 DOWNTO 16)), (NOT (INIT_2D_MEM_LOOP_2_1_asn_psp(35
      DOWNTO 0))), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(35 DOWNTO 0)), STD_LOGIC_VECTOR'(
      and_dcpl_550 & RMS_NORM_LOOP_1_1_or_1_itm & and_dcpl_564 & and_dcpl_566));
  acc_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(RMS_NORM_LOOP_1_1_mux1h_5_nl
      & RMS_NORM_LOOP_1_1_mux1h_6_nl & RMS_NORM_LOOP_1_1_or_3_nl) + UNSIGNED(RMS_NORM_LOOP_1_1_mux1h_7_nl
      & RMS_NORM_LOOP_1_1_mux1h_8_nl & RMS_NORM_LOOP_1_1_mux1h_9_nl & '1'), 41));
  z_out <= acc_nl(40 DOWNTO 1);
  INIT_2D_MEM_LOOP_2_2_or_4_nl <= mux_1008_cse OR (fsm_output(7));
  z_out_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(INIT_2D_MEM_LOOP_2_2_acc_itm)
      + CONV_UNSIGNED(CONV_SIGNED(SIGNED'( INIT_2D_MEM_LOOP_2_2_or_4_nl & '1'), 2),
      9), 9));
  RMS_NORM_LOOP_2_or_3_nl <= and_dcpl_596 OR and_876_cse;
  RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_mux_1_nl <= MUX_v_9_2_2(RMS_NORM_LOOP_2_2_dfr_sva_8_0,
      reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1,
      RMS_NORM_LOOP_2_or_3_nl);
  z_out_2 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(RMS_NORM_LOOP_2_RMS_NORM_LOOP_2_mux_1_nl)
      + CONV_UNSIGNED(CONV_SIGNED(SIGNED'( and_dcpl_596 & '1'), 2), 9), 9));
  INIT_2D_MEM_LOOP_2_1_nand_1_nl <= NOT(mux_1014_cse AND (fsm_output(1)));
  z_out_3 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_acc_17_itm_8_0) +
      CONV_UNSIGNED(CONV_SIGNED(SIGNED'( INIT_2D_MEM_LOOP_2_1_nand_1_nl & '1'), 2),
      9), 9));
  SF_LOOP_3_mux1h_10_nl <= MUX1HOT_v_2_3_2((attention_5_1_384_384_8_48_attn_weights_rsci_q_d(38
      DOWNTO 37)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(26 DOWNTO 25)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(15
      DOWNTO 14)), STD_LOGIC_VECTOR'( and_dcpl_614 & and_894_cse & and_897_cse));
  SF_LOOP_3_mux1h_11_nl <= MUX1HOT_v_7_3_2(STD_LOGIC_VECTOR'( "0111100"), STD_LOGIC_VECTOR'(
      "1100101"), STD_LOGIC_VECTOR'( "1010011"), STD_LOGIC_VECTOR'( and_dcpl_614
      & and_894_cse & and_897_cse));
  SF_LOOP_3_mux1h_12_nl <= MUX1HOT_v_5_3_2(STD_LOGIC_VECTOR'( "00001"), STD_LOGIC_VECTOR'(
      "01010"), STD_LOGIC_VECTOR'( "10110"), STD_LOGIC_VECTOR'( and_dcpl_614 & and_894_cse
      & and_897_cse));
  z_out_4 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(SIGNED'( CONV_SIGNED(UNSIGNED(SF_LOOP_3_mux1h_10_nl),
      3) * SIGNED(STD_LOGIC_VECTOR'( "101") & SF_LOOP_3_mux1h_11_nl & '0' & SF_LOOP_3_mux1h_12_nl
      & '1')), 18));
  compute_sqrt_for_guess_inv_mux_2_nl <= MUX_s_1_2_2((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39)),
      reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd, compute_sqrt_for_guess_inv_or_cse);
  compute_sqrt_for_guess_inv_compute_sqrt_for_guess_inv_and_2_nl <= compute_sqrt_for_guess_inv_mux_2_nl
      AND compute_sqrt_for_guess_inv_nor_seb;
  compute_sqrt_for_guess_inv_mux_3_nl <= MUX_v_8_2_2((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38
      DOWNTO 31)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(38 DOWNTO 31)), compute_sqrt_for_guess_inv_or_cse);
  compute_sqrt_for_guess_inv_compute_sqrt_for_guess_inv_and_3_nl <= MUX_v_8_2_2(STD_LOGIC_VECTOR'("00000000"),
      compute_sqrt_for_guess_inv_mux_3_nl, compute_sqrt_for_guess_inv_nor_seb);
  compute_sqrt_for_guess_inv_mux1h_7_nl <= MUX1HOT_v_29_4_2((attention_abs_qif_acc_pmx_lpi_1_dfm(30
      DOWNTO 2)), (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(30 DOWNTO 2)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(30
      DOWNTO 2)), (attention_abs_4_qif_acc_pmx_lpi_1_dfm(30 DOWNTO 2)), STD_LOGIC_VECTOR'(
      and_dcpl_629 & compute_sqrt_for_guess_inv_or_2_itm & compute_sqrt_for_guess_inv_or_cse
      & and_dcpl_666));
  not_2700_nl <= NOT and_dcpl_656;
  compute_sqrt_for_guess_inv_and_6_nl <= MUX_v_29_2_2(STD_LOGIC_VECTOR'("00000000000000000000000000000"),
      compute_sqrt_for_guess_inv_mux1h_7_nl, not_2700_nl);
  compute_sqrt_for_guess_inv_mux1h_8_nl <= MUX1HOT_v_2_5_2((attention_abs_qif_acc_pmx_lpi_1_dfm(1
      DOWNTO 0)), (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(1 DOWNTO 0)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(1
      DOWNTO 0)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(15 DOWNTO 14)), (attention_abs_4_qif_acc_pmx_lpi_1_dfm(1
      DOWNTO 0)), STD_LOGIC_VECTOR'( and_dcpl_629 & compute_sqrt_for_guess_inv_or_2_itm
      & compute_sqrt_for_guess_inv_or_cse & and_dcpl_656 & and_dcpl_666));
  compute_sqrt_for_guess_inv_mux1h_9_nl <= MUX1HOT_s_1_4_2(operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_itm_17,
      reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd, (INIT_2D_MEM_LOOP_2_1_asn_psp(39)), (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(39)),
      STD_LOGIC_VECTOR'( compute_sqrt_for_guess_inv_or_4_itm & compute_sqrt_for_guess_inv_or_3_itm
      & and_dcpl_651 & and_dcpl_671));
  compute_sqrt_for_guess_inv_and_7_nl <= compute_sqrt_for_guess_inv_mux1h_9_nl AND
      (NOT and_dcpl_634) AND (NOT(and_dcpl_646 OR and_dcpl_656));
  compute_sqrt_for_guess_inv_mux1h_10_nl <= MUX1HOT_v_22_5_2(STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_itm_17,
      1),22)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(38 DOWNTO 17)), STD_LOGIC_VECTOR'(
      "0000000000000000001001"), (INIT_2D_MEM_LOOP_2_1_asn_psp(38 DOWNTO 17)), (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(38
      DOWNTO 17)), STD_LOGIC_VECTOR'( compute_sqrt_for_guess_inv_or_4_itm & compute_sqrt_for_guess_inv_or_3_itm
      & and_dcpl_646 & and_dcpl_651 & and_dcpl_671));
  compute_sqrt_for_guess_inv_and_8_nl <= compute_sqrt_for_guess_inv_mux1h_10_nl AND
      STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT and_dcpl_634, 1),22)) AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT
      and_dcpl_656, 1),22));
  compute_sqrt_for_guess_inv_mux1h_11_nl <= MUX1HOT_v_5_5_2((reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd(7
      DOWNTO 3)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(16 DOWNTO 12)), STD_LOGIC_VECTOR'(
      "01101"), (INIT_2D_MEM_LOOP_2_1_asn_psp(16 DOWNTO 12)), (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(16
      DOWNTO 12)), STD_LOGIC_VECTOR'( compute_sqrt_for_guess_inv_or_4_itm & compute_sqrt_for_guess_inv_or_3_itm
      & and_dcpl_646 & and_dcpl_651 & and_dcpl_671));
  compute_sqrt_for_guess_inv_and_9_nl <= compute_sqrt_for_guess_inv_mux1h_11_nl AND
      STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT and_dcpl_634, 1),5)) AND STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT
      and_dcpl_656, 1),5));
  compute_sqrt_for_guess_inv_mux1h_12_nl <= MUX1HOT_v_3_7_2((reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd(2
      DOWNTO 0)), reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_4, (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(11
      DOWNTO 9)), STD_LOGIC_VECTOR'( "010"), (INIT_2D_MEM_LOOP_2_1_asn_psp(11 DOWNTO
      9)), STD_LOGIC_VECTOR'( "100"), (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(11
      DOWNTO 9)), STD_LOGIC_VECTOR'( compute_sqrt_for_guess_inv_or_4_itm & and_dcpl_634
      & compute_sqrt_for_guess_inv_or_3_itm & and_dcpl_646 & and_dcpl_651 & and_dcpl_656
      & and_dcpl_671));
  compute_sqrt_for_guess_inv_mux1h_13_nl <= MUX1HOT_v_9_7_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1,
      reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_5, (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(8
      DOWNTO 0)), STD_LOGIC_VECTOR'( "110010011"), (INIT_2D_MEM_LOOP_2_1_asn_psp(8
      DOWNTO 0)), STD_LOGIC_VECTOR'( "100111101"), (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(8
      DOWNTO 0)), STD_LOGIC_VECTOR'( compute_sqrt_for_guess_inv_or_4_itm & and_dcpl_634
      & compute_sqrt_for_guess_inv_or_3_itm & and_dcpl_646 & and_dcpl_651 & and_dcpl_656
      & and_dcpl_671));
  z_out_5 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(SIGNED'( SIGNED(compute_sqrt_for_guess_inv_compute_sqrt_for_guess_inv_and_2_nl
      & compute_sqrt_for_guess_inv_compute_sqrt_for_guess_inv_and_3_nl & compute_sqrt_for_guess_inv_and_6_nl
      & compute_sqrt_for_guess_inv_mux1h_8_nl) * SIGNED(compute_sqrt_for_guess_inv_and_7_nl
      & compute_sqrt_for_guess_inv_and_8_nl & compute_sqrt_for_guess_inv_and_9_nl
      & compute_sqrt_for_guess_inv_mux1h_12_nl & compute_sqrt_for_guess_inv_mux1h_13_nl)),
      61));
  LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_or_11_nl <= ((reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(32))
      AND (NOT and_897_cse)) OR and_dcpl_679;
  LINEAR_FORWARD_NO_MUL_LOOP_2_2_mux1h_5_nl <= MUX1HOT_v_2_3_2(STD_LOGIC_VECTOR'(
      "01"), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(31 DOWNTO 30)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(38
      DOWNTO 37)), STD_LOGIC_VECTOR'( and_dcpl_679 & and_894_cse & and_897_cse));
  LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_and_1_nl <= reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd
      AND LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_or_cse;
  LINEAR_FORWARD_NO_MUL_LOOP_2_2_mux1h_6_nl <= MUX1HOT_v_39_3_2(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1,
      STD_LOGIC_VECTOR'( "000000000001001001111001101010010011011"), STD_LOGIC_VECTOR'(
      "000010010011110011010100100110101110011"), STD_LOGIC_VECTOR'( and_dcpl_679
      & and_894_cse & and_897_cse));
  z_out_6 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(SIGNED'( CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_or_cse
      & '0' & LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_or_cse
      & '0' & LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_or_cse
      & LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_or_cse & LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_or_cse
      & '0' & LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_or_cse
      & LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_or_cse & '0'
      & LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_or_cse & STD_LOGIC_VECTOR'(
      "000") & LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_or_cse
      & LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_or_cse & LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_or_11_nl
      & LINEAR_FORWARD_NO_MUL_LOOP_2_2_mux1h_5_nl), 20), 21) * SIGNED(LINEAR_FORWARD_NO_MUL_LOOP_2_2_LINEAR_FORWARD_NO_MUL_LOOP_2_2_and_1_nl
      & LINEAR_FORWARD_NO_MUL_LOOP_2_2_mux1h_6_nl)), 60));
  LINEAR_FORWARD_NO_MUL_LOOP_2_mux_3_nl <= MUX_s_1_2_2(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd,
      (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(39)), and_dcpl_704);
  LINEAR_FORWARD_NO_MUL_LOOP_2_mux_4_nl <= MUX_v_39_2_2(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1,
      (QUANTIZE_ACTIVATION_LOOP_1_1_scale_sva(38 DOWNTO 0)), and_dcpl_704);
  z_out_7 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(SIGNED'( CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(STD_LOGIC_VECTOR'(
      "10") & and_dcpl_704 & '1' & (NOT and_dcpl_704) & STD_LOGIC_VECTOR'( "001")
      & and_dcpl_704 & STD_LOGIC_VECTOR'( "10") & (NOT and_dcpl_704) & STD_LOGIC_VECTOR'(
      "01") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT and_dcpl_704, 1),2)) &
      '0' & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(and_dcpl_704, 1),2)) & '1'),
      20), 21) * SIGNED(LINEAR_FORWARD_NO_MUL_LOOP_2_mux_3_nl & LINEAR_FORWARD_NO_MUL_LOOP_2_mux_4_nl)),
      60));
  operator_40_24_true_AC_TRN_AC_WRAP_or_5_nl <= (operator_40_24_true_AC_TRN_AC_WRAP_acc_66_itm(1))
      OR and_dcpl_717 OR and_dcpl_722;
  operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_mux_3_nl
      <= MUX_s_1_2_2((operator_40_24_true_AC_TRN_AC_WRAP_acc_66_itm(0)), (z_out_17(0)),
      operator_40_24_true_AC_TRN_AC_WRAP_or_2_cse_1);
  operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_mux_4_nl
      <= MUX_s_1_2_2((NOT (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(32))), (z_out_17(2)), operator_40_24_true_AC_TRN_AC_WRAP_or_2_cse_1);
  operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_mux_5_nl
      <= MUX_s_1_2_2((NOT (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(8))), (NOT (z_out_17(1))),
      operator_40_24_true_AC_TRN_AC_WRAP_or_2_cse_1);
  acc_4_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'(
      operator_40_24_true_AC_TRN_AC_WRAP_or_5_nl & operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_mux_3_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_mux_4_nl),
      3), 4) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'( operator_40_24_true_AC_TRN_AC_WRAP_operator_40_24_true_AC_TRN_AC_WRAP_mux_5_nl
      & '1'), 2), 4), 4));
  z_out_8 <= acc_4_nl(3 DOWNTO 1);
  operator_40_24_true_AC_TRN_AC_WRAP_mux_16_nl <= MUX_s_1_2_2((operator_40_24_true_AC_TRN_AC_WRAP_acc_3_psp_sva_1(0)),
      (operator_40_24_true_AC_TRN_AC_WRAP_2_acc_3_psp_sva_1(0)), and_1011_cse);
  operator_40_24_true_AC_TRN_AC_WRAP_mux_17_nl <= MUX_s_1_2_2((NOT (operator_40_24_true_AC_TRN_AC_WRAP_acc_3_psp_sva_1(2))),
      (NOT (operator_40_24_true_AC_TRN_AC_WRAP_2_acc_3_psp_sva_1(2))), and_1011_cse);
  operator_40_24_true_AC_TRN_AC_WRAP_mux_18_nl <= MUX_s_1_2_2((NOT (operator_40_24_true_AC_TRN_AC_WRAP_acc_3_psp_sva_1(1))),
      (NOT (operator_40_24_true_AC_TRN_AC_WRAP_2_acc_3_psp_sva_1(1))), and_1011_cse);
  acc_5_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED'( '1' & operator_40_24_true_AC_TRN_AC_WRAP_mux_16_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_mux_17_nl) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'(
      operator_40_24_true_AC_TRN_AC_WRAP_mux_18_nl & '1'), 2), 3), 3));
  z_out_9_1_0 <= acc_5_nl(2 DOWNTO 1);
  compute_sqrt_for_mux1h_4_nl <= MUX1HOT_v_3_5_2(STD_LOGIC_VECTOR'( "101"), STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(28),
      1),3)), APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0, (z_out_38(3 DOWNTO 1)),
      (z_out_37(3 DOWNTO 1)), STD_LOGIC_VECTOR'( and_dcpl_742 & and_dcpl_749 & and_dcpl_757
      & compute_sqrt_for_or_2_cse & and_dcpl_763));
  compute_sqrt_for_mux1h_5_nl <= MUX1HOT_s_1_3_2((attention_5_1_384_384_8_48_attn_weights_rsci_q_d(28)),
      (z_out_38(0)), (z_out_37(0)), STD_LOGIC_VECTOR'( and_dcpl_749 & compute_sqrt_for_or_2_cse
      & and_dcpl_763));
  compute_sqrt_for_or_7_nl <= (compute_sqrt_for_mux1h_5_nl AND (NOT and_dcpl_757))
      OR and_dcpl_742;
  compute_sqrt_for_and_3_nl <= (reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1(1)) AND (NOT(and_dcpl_742
      OR and_dcpl_749 OR and_dcpl_762 OR and_dcpl_763 OR and_dcpl_767));
  compute_sqrt_for_or_8_nl <= and_dcpl_757 OR and_dcpl_762 OR and_dcpl_763;
  compute_sqrt_for_mux1h_6_nl <= MUX1HOT_v_3_4_2((z_out_16_4_0(3 DOWNTO 1)), STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(27),
      1),3)), APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0, GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0,
      STD_LOGIC_VECTOR'( and_dcpl_742 & and_dcpl_749 & compute_sqrt_for_or_8_nl &
      and_dcpl_767));
  acc_6_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(compute_sqrt_for_mux1h_4_nl
      & compute_sqrt_for_or_7_nl & compute_sqrt_for_and_3_nl), 5), 6) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(compute_sqrt_for_mux1h_6_nl
      & '1'), 4), 6), 6));
  z_out_10 <= acc_6_nl(5 DOWNTO 1);
  SF_LOOP_3_mux1h_13_nl <= MUX1HOT_v_4_3_2(STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(36),
      1),4)), STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(17),
      1),4)), z_out_37, STD_LOGIC_VECTOR'( and_1051_cse & and_dcpl_779 & and_dcpl_786));
  SF_LOOP_3_mux1h_14_nl <= MUX1HOT_v_3_3_2(STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(attention_5_1_384_384_8_48_attn_weights_rsci_q_d(35),
      1),3)), STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(16),
      1),3)), GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0, STD_LOGIC_VECTOR'( and_1051_cse
      & and_dcpl_779 & and_dcpl_786));
  z_out_11 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_mux1h_13_nl),
      5) + CONV_UNSIGNED(UNSIGNED(SF_LOOP_3_mux1h_14_nl), 5), 5));
  and_1523_nl <= and_dcpl_562 AND CONV_SL_1_1(fsm_output(5 DOWNTO 4)=STD_LOGIC_VECTOR'("01"))
      AND and_dcpl_808;
  APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_mux_2_nl <= MUX_v_3_2_2((z_out_31(3
      DOWNTO 1)), (z_out_35(3 DOWNTO 1)), and_1523_nl);
  or_1348_nl <= (fsm_output(3)) OR ((fsm_output(6)) XOR (fsm_output(4)));
  mux_1060_nl <= MUX_s_1_2_2(or_tmp_547, or_1348_nl, fsm_output(2));
  nor_713_nl <= NOT((fsm_output(1)) OR mux_1060_nl);
  mux_1059_nl <= MUX_s_1_2_2(nor_713_nl, and_1509_cse, fsm_output(0));
  APPLY_ROTARY_POS_EMB_LOOP_6_or_7_nl <= and_1353_cse OR (mux_1059_nl AND and_dcpl_29
      AND (fsm_output(5))) OR (and_dcpl_562 AND CONV_SL_1_1(fsm_output(5 DOWNTO 4)=STD_LOGIC_VECTOR'("11"))
      AND and_dcpl_808);
  APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_mux_3_nl <= MUX_v_3_2_2(APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0,
      GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0, APPLY_ROTARY_POS_EMB_LOOP_6_or_7_nl);
  z_out_12 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_mux_2_nl),
      4) + CONV_UNSIGNED(UNSIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_mux_3_nl),
      4), 4));
  acc_9_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED'(
      (z_out_17(3)) & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(8)) & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(11))),
      3), 4) + CONV_UNSIGNED(CONV_SIGNED(SIGNED'( '1' & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(10))
      & '1'), 3), 4), 4));
  z_out_13 <= acc_9_nl(3 DOWNTO 1);
  or_1349_tmp <= (((CONV_SL_1_1(LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_slc_LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_conc_1_1_1_0_svs=STD_LOGIC_VECTOR'("01")))
      OR LINEAR_FORWARD_NO_MUL_LOOP_5_2_LINEAR_FORWARD_NO_MUL_LOOP_5_2_and_1_cse_1)
      AND and_dcpl_833) OR (LINEAR_FORWARD_NO_MUL_LOOP_5_or_itm AND and_dcpl_840)
      OR (CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm AND and_dcpl_837);
  and_1556_nl <= CONV_SL_1_1(fsm_output(8 DOWNTO 4)=STD_LOGIC_VECTOR'("00101")) AND
      and_578_cse AND CONV_SL_1_1(fsm_output(1 DOWNTO 0)=STD_LOGIC_VECTOR'("01"));
  LINEAR_FORWARD_NO_MUL_LOOP_5_2_mux1h_1_tmp <= MUX1HOT_s_1_3_2(LINEAR_FORWARD_NO_MUL_LOOP_5_2_LINEAR_FORWARD_NO_MUL_LOOP_5_2_and_1_cse_1,
      LINEAR_FORWARD_NO_MUL_LOOP_5_1_LINEAR_FORWARD_NO_MUL_LOOP_5_1_and_3_cse, CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm,
      STD_LOGIC_VECTOR'( (fsm_output(1)) & (NOT (fsm_output(0))) & and_1556_nl));
  operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_mux1h_3_nl <= MUX1HOT_v_4_5_2((attention_5_1_384_384_8_48_v_proj_re_rsci_q_d(39
      DOWNTO 36)), (INIT_2D_MEM_LOOP_2_1_asn_psp(39 DOWNTO 36)), (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39
      DOWNTO 36)), (output_rsci_q_d(39 DOWNTO 36)), reg_attention_round_a_cse_slc,
      STD_LOGIC_VECTOR'( and_dcpl_833 & and_dcpl_837 & and_dcpl_840 & and_dcpl_846
      & operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_or_cse));
  operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_mux1h_4_nl <= MUX1HOT_v_20_5_2((attention_5_1_384_384_8_48_v_proj_re_rsci_q_d(35
      DOWNTO 16)), (INIT_2D_MEM_LOOP_2_1_asn_psp(35 DOWNTO 16)), (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(35
      DOWNTO 16)), (output_rsci_q_d(35 DOWNTO 16)), (RMS_NORM_LOOP_2_mul_1_itm(51
      DOWNTO 32)), STD_LOGIC_VECTOR'( and_dcpl_833 & and_dcpl_837 & and_dcpl_840
      & and_dcpl_846 & operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_or_cse));
  LINEAR_FORWARD_NO_MUL_LOOP_5_3_else_if_acc_3_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(
      -SIGNED(attention_5_1_384_384_8_48_quantized_final_output_rsci_q_d), 8));
  operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_and_2_nl <= (NOT LINEAR_FORWARD_NO_MUL_LOOP_5_1_LINEAR_FORWARD_NO_MUL_LOOP_5_1_and_3_cse)
      AND and_dcpl_846;
  operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_and_3_nl <= LINEAR_FORWARD_NO_MUL_LOOP_5_1_LINEAR_FORWARD_NO_MUL_LOOP_5_1_and_3_cse
      AND and_dcpl_846;
  operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_mux1h_5_nl <= MUX1HOT_v_8_3_2(attention_5_1_384_384_8_48_quantized_final_output_rsci_q_d,
      STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(LINEAR_FORWARD_NO_MUL_LOOP_5_3_else_if_acc_3_nl),
      8)), STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT (RMS_NORM_LOOP_2_mul_1_itm(31)),
      1),8)), STD_LOGIC_VECTOR'( operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_and_2_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_and_3_nl & operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_or_cse));
  operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_or_5_nl <= and_dcpl_833 OR and_dcpl_837
      OR and_dcpl_840;
  operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_or_4_nl <= MUX_v_8_2_2(operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_mux1h_5_nl,
      STD_LOGIC_VECTOR'("11111111"), operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_or_5_nl);
  LINEAR_FORWARD_NO_MUL_LOOP_5_2_else_if_acc_3_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(
      -SIGNED(attention_5_1_384_384_8_48_quantized_hidden_states_rsci_q_d), 8));
  and_1557_nl <= (NOT LINEAR_FORWARD_NO_MUL_LOOP_5_2_mux1h_1_tmp) AND or_1349_tmp;
  and_1558_nl <= LINEAR_FORWARD_NO_MUL_LOOP_5_2_mux1h_1_tmp AND or_1349_tmp;
  mux1h_1_nl <= MUX1HOT_v_8_3_2(operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_or_4_nl,
      attention_5_1_384_384_8_48_quantized_hidden_states_rsci_q_d, STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(LINEAR_FORWARD_NO_MUL_LOOP_5_2_else_if_acc_3_nl),
      8)), STD_LOGIC_VECTOR'( (NOT or_1349_tmp) & and_1557_nl & and_1558_nl));
  nor_714_nl <= NOT(((CONV_SL_1_1(LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_slc_LINEAR_FORWARD_NO_MUL_LOOP_4_2_packed_val_LINEAR_FORWARD_NO_MUL_LOOP_5_2_weight_val_conc_1_1_1_0_svs/=STD_LOGIC_VECTOR'("01")))
      AND (NOT LINEAR_FORWARD_NO_MUL_LOOP_5_2_LINEAR_FORWARD_NO_MUL_LOOP_5_2_and_1_cse_1)
      AND and_dcpl_833) OR ((NOT LINEAR_FORWARD_NO_MUL_LOOP_5_or_itm) AND and_dcpl_840)
      OR ((NOT CACHE_UPDATE_LOOP_3_CACHE_UPDATE_LOOP_3_nor_itm) AND and_dcpl_837)
      OR ((NOT LINEAR_FORWARD_NO_MUL_LOOP_5_1_or_cse) AND and_dcpl_846));
  and_1528_nl <= MUX_v_8_2_2(STD_LOGIC_VECTOR'("00000000"), mux1h_1_nl, nor_714_nl);
  z_out_14_23_0 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_mux1h_3_nl
      & operator_40_24_true_AC_TRN_AC_WRAP_8_true_2_mux1h_4_nl) + CONV_UNSIGNED(SIGNED(and_1528_nl),
      24), 24));
  acc_11_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(14))
      & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(11 DOWNTO 9)) & (z_out_17(2))), 5), 7) +
      CONV_UNSIGNED(CONV_SIGNED(SIGNED((z_out_17(5 DOWNTO 4)) & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39),
      1),2)) & '1'), 5), 7), 7));
  z_out_15 <= acc_11_nl(6 DOWNTO 1);
  z_out_16_4_0 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_acc_28_sdt),
      4), 5) + UNSIGNED'( "00001"), 5));
  z_out_17 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(reg_operator_40_24_true_AC_TRN_AC_WRAP_acc_20_cse)
      + UNSIGNED(STD_LOGIC_VECTOR'( "10111") & (GEMM_3D_FLOAT_LOOP_4_1_asn_itm(7))),
      6));
  RMS_NORM_LOOP_2_2_mux_6_nl <= MUX_s_1_2_2((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39)),
      reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd, and_dcpl_917);
  RMS_NORM_LOOP_2_2_mux_7_nl <= MUX_v_39_2_2((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(38 DOWNTO
      0)), reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1, and_dcpl_917);
  RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_and_2_nl <= MUX_v_40_2_2(STD_LOGIC_VECTOR'("0000000000000000000000000000000000000000"),
      (RMS_NORM_LOOP_2_2_mul_1_itm(52 DOWNTO 13)), and_dcpl_917);
  RMS_NORM_LOOP_2_2_mux_8_nl <= MUX_s_1_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_3,
      (RMS_NORM_LOOP_2_2_mul_1_itm(12)), and_dcpl_917);
  RMS_NORM_LOOP_2_2_mux_9_nl <= MUX_v_3_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_4,
      (RMS_NORM_LOOP_2_2_mul_1_itm(11 DOWNTO 9)), and_dcpl_917);
  RMS_NORM_LOOP_2_2_mux_10_nl <= MUX_v_9_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_5,
      (RMS_NORM_LOOP_2_2_mul_1_itm(8 DOWNTO 0)), and_dcpl_917);
  z_out_19 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(SIGNED'( SIGNED(RMS_NORM_LOOP_2_2_mux_6_nl
      & RMS_NORM_LOOP_2_2_mux_7_nl) * SIGNED(RMS_NORM_LOOP_2_2_RMS_NORM_LOOP_2_2_and_2_nl
      & RMS_NORM_LOOP_2_2_mux_8_nl & RMS_NORM_LOOP_2_2_mux_9_nl & RMS_NORM_LOOP_2_2_mux_10_nl)),
      72));
  RMS_NORM_LOOP_1_1_mux_36_nl <= MUX_s_1_2_2((for_for_strm_in_tmp_sva_31_2(29)),
      reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd, and_dcpl_931);
  RMS_NORM_LOOP_1_1_mux_37_nl <= MUX_v_39_2_2(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(for_for_strm_in_tmp_sva_31_2),39)),
      reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1, and_dcpl_931);
  RMS_NORM_LOOP_1_1_mux_38_nl <= MUX_v_52_2_2(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(for_for_strm_in_tmp_sva_31_2),52)),
      RMS_NORM_LOOP_2_mul_1_itm, and_dcpl_931);
  mul_5_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(SIGNED'( SIGNED(RMS_NORM_LOOP_1_1_mux_36_nl
      & RMS_NORM_LOOP_1_1_mux_37_nl) * SIGNED(RMS_NORM_LOOP_1_1_mux_38_nl)), 68));
  z_out_20_67_16 <= mul_5_nl(67 DOWNTO 16);
  SF_LOOP_3_mux_22_nl <= MUX_v_2_2_2((reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(21 DOWNTO
      20)), (SF_LOOP_3_acc_5_psp_sva(19 DOWNTO 18)), and_dcpl_942);
  SF_LOOP_3_mux_23_nl <= MUX_v_4_2_2(STD_LOGIC_VECTOR'( "0110"), STD_LOGIC_VECTOR'(
      "1001"), and_dcpl_942);
  z_out_21 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED'( UNSIGNED(SF_LOOP_3_mux_22_nl)
      * UNSIGNED(STD_LOGIC_VECTOR'( "1000") & SF_LOOP_3_mux_23_nl & STD_LOGIC_VECTOR'(
      "001") & and_dcpl_942 & '0' & (NOT and_dcpl_942) & STD_LOGIC_VECTOR'( "01"))),
      17));
  SF_LOOP_3_mux_24_nl <= MUX_v_2_2_2((reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(26 DOWNTO
      25)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(13 DOWNTO 12)), and_dcpl_953);
  SF_LOOP_3_mux_25_nl <= MUX_v_3_2_2(STD_LOGIC_VECTOR'( "101"), STD_LOGIC_VECTOR'(
      "010"), and_dcpl_953);
  z_out_22 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED'( UNSIGNED(SF_LOOP_3_mux_24_nl)
      * UNSIGNED((NOT and_dcpl_953) & STD_LOGIC_VECTOR'( "00") & (NOT and_dcpl_953)
      & STD_LOGIC_VECTOR'( "00") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(NOT and_dcpl_953,
      1),4)) & STD_LOGIC_VECTOR'( "00") & (NOT and_dcpl_953) & STD_LOGIC_VECTOR'(
      "10") & SF_LOOP_3_mux_25_nl & '0' & and_dcpl_953 & '1' & and_dcpl_953 & '1')),
      24));
  SF_LOOP_3_mux_26_nl <= MUX_v_2_2_2((reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(24 DOWNTO
      23)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(13 DOWNTO 12)), and_dcpl_964);
  z_out_23 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED'( UNSIGNED(SF_LOOP_3_mux_26_nl)
      * UNSIGNED(STD_LOGIC_VECTOR'( "101110") & (NOT and_dcpl_964) & STD_LOGIC_VECTOR'(
      "00") & (NOT and_dcpl_964) & STD_LOGIC_VECTOR'( "011") & STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(and_dcpl_964,
      1),2)) & '1')), 18));
  not_2716_nl <= NOT and_1256_cse;
  APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_9_nl <= MUX_v_8_2_2(STD_LOGIC_VECTOR'("00000000"),
      reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd,
      not_2716_nl);
  not_2717_nl <= NOT and_1256_cse;
  APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_10_nl <= MUX_v_7_2_2(STD_LOGIC_VECTOR'("0000000"),
      (reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1(8
      DOWNTO 2)), not_2717_nl);
  APPLY_ROTARY_POS_EMB_LOOP_6_mux_33_nl <= MUX_v_2_2_2((reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1(1
      DOWNTO 0)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(34 DOWNTO 33)), and_1256_cse);
  APPLY_ROTARY_POS_EMB_LOOP_6_mux_34_nl <= MUX_v_40_2_2(INIT_2D_MEM_LOOP_2_1_asn_psp,
      STD_LOGIC_VECTOR'( "0000000001001001111001101010010011010111"), and_1256_cse);
  z_out_25 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(SIGNED'( SIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_9_nl
      & APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_10_nl & APPLY_ROTARY_POS_EMB_LOOP_6_mux_33_nl)
      * SIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_mux_34_nl)), 56));
  APPLY_ROTARY_POS_EMB_LOOP_6_mux_35_nl <= MUX_v_4_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_2,
      STD_LOGIC_VECTOR'( "1101"), and_1051_cse);
  not_2718_nl <= NOT and_1291_cse;
  APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_11_nl <= MUX_v_4_2_2(STD_LOGIC_VECTOR'("0000"),
      APPLY_ROTARY_POS_EMB_LOOP_6_mux_35_nl, not_2718_nl);
  APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_12_nl <= reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_3
      AND APPLY_ROTARY_POS_EMB_LOOP_6_nor_cse;
  APPLY_ROTARY_POS_EMB_LOOP_6_mux_36_nl <= MUX_v_3_2_2(reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_4,
      STD_LOGIC_VECTOR'( "010"), and_1051_cse);
  not_2719_nl <= NOT and_1291_cse;
  APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_13_nl <= MUX_v_3_2_2(STD_LOGIC_VECTOR'("000"),
      APPLY_ROTARY_POS_EMB_LOOP_6_mux_36_nl, not_2719_nl);
  APPLY_ROTARY_POS_EMB_LOOP_6_mux_37_nl <= MUX_v_7_2_2((reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_5(8
      DOWNTO 2)), STD_LOGIC_VECTOR'( "0101010"), and_1051_cse);
  not_2720_nl <= NOT and_1291_cse;
  APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_14_nl <= MUX_v_7_2_2(STD_LOGIC_VECTOR'("0000000"),
      APPLY_ROTARY_POS_EMB_LOOP_6_mux_37_nl, not_2720_nl);
  APPLY_ROTARY_POS_EMB_LOOP_6_mux_38_nl <= MUX_v_2_2_2((reg_operator_40_24_true_AC_TRN_AC_WRAP_8_true_1_acc_ftd_5(1
      DOWNTO 0)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(24 DOWNTO 23)), and_1291_cse);
  APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_or_3_nl <= MUX_v_2_2_2(APPLY_ROTARY_POS_EMB_LOOP_6_mux_38_nl,
      STD_LOGIC_VECTOR'("11"), and_1051_cse);
  APPLY_ROTARY_POS_EMB_LOOP_6_mux_39_nl <= MUX_v_37_2_2((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(39
      DOWNTO 3)), STD_LOGIC_VECTOR'( "0000000000000000000100100111100110101"), and_1291_cse);
  not_2721_nl <= NOT and_1051_cse;
  APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_15_nl <= MUX_v_37_2_2(STD_LOGIC_VECTOR'("0000000000000000000000000000000000000"),
      APPLY_ROTARY_POS_EMB_LOOP_6_mux_39_nl, not_2721_nl);
  APPLY_ROTARY_POS_EMB_LOOP_6_mux1h_20_nl <= MUX1HOT_v_3_3_2((GEMM_3D_FLOAT_LOOP_4_1_asn_itm(2
      DOWNTO 0)), (attention_5_1_384_384_8_48_attn_weights_rsci_q_d(32 DOWNTO 30)),
      STD_LOGIC_VECTOR'( "001"), STD_LOGIC_VECTOR'( and_1280_cse & and_1051_cse &
      and_1291_cse));
  z_out_26 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(SIGNED'( SIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_11_nl
      & APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_12_nl & APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_13_nl
      & APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_14_nl & APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_or_3_nl)
      * SIGNED(APPLY_ROTARY_POS_EMB_LOOP_6_APPLY_ROTARY_POS_EMB_LOOP_6_and_15_nl
      & APPLY_ROTARY_POS_EMB_LOOP_6_mux1h_20_nl)), 56));
  SF_LOOP_3_mux_27_nl <= MUX_v_8_2_2(STD_LOGIC_VECTOR'( "11101010"), reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd,
      and_1280_cse);
  not_2722_nl <= NOT and_1291_cse;
  SF_LOOP_3_SF_LOOP_3_and_4_nl <= MUX_v_8_2_2(STD_LOGIC_VECTOR'("00000000"), SF_LOOP_3_mux_27_nl,
      not_2722_nl);
  SF_LOOP_3_mux_28_nl <= MUX_v_7_2_2(STD_LOGIC_VECTOR'( "0000101"), (reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1(8
      DOWNTO 2)), and_1280_cse);
  not_2723_nl <= NOT and_1291_cse;
  SF_LOOP_3_SF_LOOP_3_and_5_nl <= MUX_v_7_2_2(STD_LOGIC_VECTOR'("0000000"), SF_LOOP_3_mux_28_nl,
      not_2723_nl);
  SF_LOOP_3_mux1h_15_nl <= MUX1HOT_v_2_3_2(STD_LOGIC_VECTOR'( "01"), (reg_operator_40_24_true_AC_TRN_AC_WRAP_1_slc_operator_40_24_true_AC_TRN_AC_WRAP_1_div_cmp_z_17_0_1_ftd_1(1
      DOWNTO 0)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(21 DOWNTO 20)), STD_LOGIC_VECTOR'(
      and_1051_cse & and_1280_cse & and_1291_cse));
  SF_LOOP_3_SF_LOOP_3_and_6_nl <= reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd AND APPLY_ROTARY_POS_EMB_LOOP_6_nor_cse;
  SF_LOOP_3_mux_29_nl <= MUX_v_35_2_2((reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(38
      DOWNTO 4)), STD_LOGIC_VECTOR'( "00000000000000000000010010011110011"), and_1291_cse);
  not_2724_nl <= NOT and_1051_cse;
  SF_LOOP_3_SF_LOOP_3_and_7_nl <= MUX_v_35_2_2(STD_LOGIC_VECTOR'("00000000000000000000000000000000000"),
      SF_LOOP_3_mux_29_nl, not_2724_nl);
  SF_LOOP_3_mux1h_16_nl <= MUX1HOT_v_4_3_2((attention_5_1_384_384_8_48_attn_weights_rsci_q_d(11
      DOWNTO 8)), (reg_GEMM_3D_FLOAT_LOOP_3_asn_psp_ftd_1(3 DOWNTO 0)), STD_LOGIC_VECTOR'(
      "0101"), STD_LOGIC_VECTOR'( and_1051_cse & and_1280_cse & and_1291_cse));
  z_out_27 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(SIGNED'( SIGNED(SF_LOOP_3_SF_LOOP_3_and_4_nl
      & SF_LOOP_3_SF_LOOP_3_and_5_nl & SF_LOOP_3_mux1h_15_nl) * SIGNED(SF_LOOP_3_SF_LOOP_3_and_6_nl
      & SF_LOOP_3_SF_LOOP_3_and_7_nl & SF_LOOP_3_mux1h_16_nl)), 56));
  nor_715_nl <= NOT(mux_1008_cse OR (fsm_output(7)));
  nor_718_nl <= NOT(CONV_SL_1_1(fsm_output(6 DOWNTO 5)/=STD_LOGIC_VECTOR'("10")));
  nor_719_nl <= NOT((fsm_output(6)) OR not_tmp_245);
  mux_1064_nl <= MUX_s_1_2_2(nor_718_nl, nor_719_nl, fsm_output(4));
  nand_298_nl <= NOT((NOT((fsm_output(3)) OR (NOT (fsm_output(7))) OR (NOT (fsm_output(2)))))
      AND mux_1064_nl);
  or_1352_nl <= (fsm_output(7)) OR (fsm_output(2)) OR (fsm_output(4)) OR (NOT (fsm_output(6)))
      OR (fsm_output(1)) OR (NOT (fsm_output(5)));
  nor_720_nl <= NOT((NOT (fsm_output(4))) OR (fsm_output(6)) OR not_tmp_245);
  nor_721_nl <= NOT((NOT (fsm_output(4))) OR (NOT (fsm_output(6))) OR (fsm_output(1))
      OR (fsm_output(5)));
  mux_1066_nl <= MUX_s_1_2_2(nor_720_nl, nor_721_nl, fsm_output(2));
  nand_299_nl <= NOT((fsm_output(7)) AND mux_1066_nl);
  mux_1065_nl <= MUX_s_1_2_2(or_1352_nl, nand_299_nl, fsm_output(3));
  mux_1063_nl <= MUX_s_1_2_2(nand_298_nl, mux_1065_nl, fsm_output(0));
  nor_716_nl <= NOT(mux_1063_nl OR (fsm_output(8)));
  and_1538_nl <= (fsm_output(4)) AND (fsm_output(6));
  mux_1070_nl <= MUX_s_1_2_2(nor_287_cse, and_1538_nl, fsm_output(3));
  mux_1069_nl <= MUX_s_1_2_2(mux_1070_nl, nor_632_cse, fsm_output(2));
  mux_1068_nl <= MUX_s_1_2_2(and_766_cse, mux_1069_nl, fsm_output(1));
  mux_1067_nl <= MUX_s_1_2_2(nor_505_cse, mux_1068_nl, fsm_output(0));
  and_1537_nl <= mux_1067_nl AND (fsm_output(7)) AND (NOT (fsm_output(8))) AND (fsm_output(5));
  for_for_mux1h_7_nl <= MUX1HOT_v_2_3_2((z_out_1(8 DOWNTO 7)), (LINEAR_FORWARD_NO_MUL_LOOP_3_2_ko_2_0_sva_1_mx0w2(2
      DOWNTO 1)), (RESHAPE_2D_TO_3D_LOOP_3_1_k_5_0_sva_2(5 DOWNTO 4)), STD_LOGIC_VECTOR'(
      nor_715_nl & nor_716_nl & and_1537_nl));
  for_for_acc_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED('1' & for_for_mux1h_7_nl)
      + UNSIGNED'( "001"), 3));
  z_out_28_2 <= for_for_acc_nl(2);
  nor_723_nl <= NOT((NOT (fsm_output(5))) OR (NOT (fsm_output(4))) OR (NOT (fsm_output(1)))
      OR (NOT (fsm_output(7))) OR (fsm_output(8)) OR (fsm_output(0)) OR (NOT (fsm_output(2)))
      OR (fsm_output(3)));
  nor_724_nl <= NOT((NOT (fsm_output(7))) OR (fsm_output(8)) OR (fsm_output(0)) OR
      (fsm_output(2)) OR (NOT (fsm_output(3))));
  nor_725_nl <= NOT((fsm_output(7)) OR mux_730_cse);
  mux_1073_nl <= MUX_s_1_2_2(nor_724_nl, nor_725_nl, fsm_output(1));
  and_1539_nl <= (fsm_output(4)) AND mux_1073_nl;
  nor_726_nl <= NOT((fsm_output(1)) OR (fsm_output(7)) OR mux_732_cse);
  nor_727_nl <= NOT((NOT (fsm_output(1))) OR (NOT (fsm_output(7))) OR (fsm_output(8))
      OR (fsm_output(0)) OR (NOT (fsm_output(2))) OR (fsm_output(3)));
  mux_1074_nl <= MUX_s_1_2_2(nor_726_nl, nor_727_nl, fsm_output(4));
  mux_1072_nl <= MUX_s_1_2_2(and_1539_nl, mux_1074_nl, fsm_output(5));
  mux_1071_nl <= MUX_s_1_2_2(nor_723_nl, mux_1072_nl, fsm_output(6));
  mux_1076_nl <= MUX_s_1_2_2(nand_78_cse, or_1215_cse, fsm_output(2));
  nor_728_nl <= NOT((fsm_output(1)) OR mux_1076_nl);
  nor_729_nl <= NOT(CONV_SL_1_1(fsm_output(4 DOWNTO 1)/=STD_LOGIC_VECTOR'("1001")));
  mux_1075_nl <= MUX_s_1_2_2(nor_728_nl, nor_729_nl, fsm_output(0));
  and_1540_nl <= mux_1075_nl AND and_dcpl_129 AND (NOT (fsm_output(8))) AND (fsm_output(5));
  and_1541_nl <= mux_1014_cse AND (fsm_output(1));
  and_1542_nl <= and_dcpl_129 AND (NOT (fsm_output(8))) AND (fsm_output(5)) AND (NOT
      (fsm_output(4))) AND (fsm_output(3)) AND (NOT (fsm_output(2))) AND nor_494_cse;
  QUANTIZE_ACTIVATION_LOOP_3_mux1h_3_nl <= MUX1HOT_v_2_4_2((QUANTIZE_ACTIVATION_LOOP_3_jo_2_0_sva_3(2
      DOWNTO 1)), (RESHAPE_2D_TO_3D_LOOP_3_k_5_0_sva_2(5 DOWNTO 4)), (z_out_3(8 DOWNTO
      7)), (APPLY_ROTARY_POS_EMB_LOOP_3_k_4_0_sva_2(4 DOWNTO 3)), STD_LOGIC_VECTOR'(
      mux_1071_nl & and_1540_nl & and_1541_nl & and_1542_nl));
  QUANTIZE_ACTIVATION_LOOP_3_acc_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED('1'
      & QUANTIZE_ACTIVATION_LOOP_3_mux1h_3_nl) + UNSIGNED'( "001"), 3));
  z_out_29_2 <= QUANTIZE_ACTIVATION_LOOP_3_acc_nl(2);
  LINEAR_FORWARD_NO_MUL_LOOP_3_mux_3_nl <= MUX_v_2_2_2((LINEAR_FORWARD_NO_MUL_LOOP_3_ko_2_0_sva_2(2
      DOWNTO 1)), (z_out_2(8 DOWNTO 7)), and_876_cse);
  LINEAR_FORWARD_NO_MUL_LOOP_3_acc_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED('1'
      & LINEAR_FORWARD_NO_MUL_LOOP_3_mux_3_nl) + UNSIGNED'( "001"), 3));
  z_out_30_2 <= LINEAR_FORWARD_NO_MUL_LOOP_3_acc_nl(2);
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_4_nl <= and_dcpl_1069 OR and_1353_cse OR and_dcpl_1087;
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux_1_nl <= MUX_v_3_2_2(APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0,
      GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0, TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_4_nl);
  and_1543_nl <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)=STD_LOGIC_VECTOR'("010")) AND
      and_dcpl_117 AND and_dcpl_752;
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_5_nl <= and_dcpl_1069 OR (and_dcpl_398 AND mux_tmp_167
      AND and_dcpl_789);
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_6_nl <= and_1353_cse OR (and_dcpl_563 AND and_dcpl_789);
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_7_nl <= (and_dcpl_563 AND and_dcpl_752) OR and_dcpl_1087;
  TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_7_nl <= MUX1HOT_v_2_4_2((TRANSPOSE_LAST_TWO_DIMS_LOOP_3_acc_17_sdt_mx0w5(8
      DOWNTO 7)), (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(5 DOWNTO 4)), reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd,
      (GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva(2 DOWNTO 1)), STD_LOGIC_VECTOR'( and_1543_nl
      & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_5_nl & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_6_nl
      & TRANSPOSE_LAST_TWO_DIMS_LOOP_3_or_7_nl));
  z_out_31 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(TRANSPOSE_LAST_TWO_DIMS_LOOP_3_TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux_1_nl),
      4) + CONV_UNSIGNED(UNSIGNED(TRANSPOSE_LAST_TWO_DIMS_LOOP_3_mux1h_7_nl), 4),
      4));
  and_1547_nl <= and_dcpl_1094 AND nor_566_cse AND and_692_cse;
  and_1548_nl <= CONV_SL_1_1(fsm_output(8 DOWNTO 6)=STD_LOGIC_VECTOR'("011")) AND
      and_dcpl_117 AND CONV_SL_1_1(fsm_output(3 DOWNTO 0)=STD_LOGIC_VECTOR'("0110"));
  and_1549_nl <= and_dcpl_1094 AND CONV_SL_1_1(fsm_output(3 DOWNTO 2)=STD_LOGIC_VECTOR'("11"))
      AND and_692_cse;
  CACHE_UPDATE_LOOP_3_1_mux1h_9_nl <= MUX1HOT_v_2_3_2((z_out_11(4 DOWNTO 3)), (z_out_10(4
      DOWNTO 3)), (GEMM_3D_FLOAT_LOOP_4_acc_17_sdt_1(8 DOWNTO 7)), STD_LOGIC_VECTOR'(
      and_1547_nl & and_1548_nl & and_1549_nl));
  z_out_32 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0),
      3), 4) + CONV_UNSIGNED(UNSIGNED(CACHE_UPDATE_LOOP_3_1_mux1h_9_nl), 4), 4));
  z_out_33 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0),
      3), 4) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(z_out_10(4 DOWNTO 3)), 2), 4),
      4));
  and_1550_nl <= CONV_SL_1_1(fsm_output=STD_LOGIC_VECTOR'("011110110"));
  CACHE_UPDATE_LOOP_3_qif_mux_1_nl <= MUX_v_2_2_2(STD_LOGIC_VECTOR'( reg_CACHE_UPDATE_LOOP_3_k_5_0_1_ftd
      & (reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1(1))), (APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(5
      DOWNTO 4)), and_1550_nl);
  z_out_34_2_0 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva)
      + CONV_UNSIGNED(UNSIGNED(CACHE_UPDATE_LOOP_3_qif_mux_1_nl), 3), 3));
  nor_730_nl <= NOT((fsm_output(1)) OR (NOT (fsm_output(2))) OR (fsm_output(4)));
  nor_731_nl <= NOT((NOT (fsm_output(1))) OR (fsm_output(2)) OR (NOT (fsm_output(4))));
  mux_1077_nl <= MUX_s_1_2_2(nor_730_nl, nor_731_nl, fsm_output(0));
  and_1551_nl <= mux_1077_nl AND (fsm_output(7)) AND (NOT((fsm_output(6)) OR (fsm_output(8))))
      AND (fsm_output(5)) AND (NOT (fsm_output(3)));
  and_1552_nl <= CONV_SL_1_1(fsm_output(8 DOWNTO 2)=STD_LOGIC_VECTOR'("0101010"))
      AND nor_494_cse;
  and_1553_nl <= and_dcpl_1152 AND and_dcpl_161 AND CONV_SL_1_1(fsm_output(1 DOWNTO
      0)=STD_LOGIC_VECTOR'("10"));
  and_1554_nl <= and_dcpl_1152 AND and_dcpl_161 AND nor_494_cse;
  RESHAPE_2D_TO_3D_LOOP_3_mux1h_6_nl <= MUX1HOT_v_2_4_2(STD_LOGIC_VECTOR'( reg_CACHE_UPDATE_LOOP_3_k_5_0_1_ftd
      & (reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1(1))), (APPLY_ROTARY_POS_EMB_LOOP_3_acc_30_psp_sva_1(2
      DOWNTO 1)), (GEMM_3D_FLOAT_LOOP_1_1_i_3_0_sva_2_0(2 DOWNTO 1)), (APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0(2
      DOWNTO 1)), STD_LOGIC_VECTOR'( and_1551_nl & and_1552_nl & and_1553_nl & and_1554_nl));
  z_out_35 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(APPLY_ROTARY_POS_EMB_LOOP_1_i_3_0_sva_2_0),
      3), 4) + CONV_UNSIGNED(UNSIGNED(RESHAPE_2D_TO_3D_LOOP_3_mux1h_6_nl), 4), 4));
  and_1555_nl <= CONV_SL_1_1(fsm_output(8 DOWNTO 2)=STD_LOGIC_VECTOR'("0101110"))
      AND nor_494_cse;
  CACHE_UPDATE_LOOP_3_1_qif_mux_1_nl <= MUX_v_2_2_2((APPLY_ROTARY_POS_EMB_LOOP_6_k_5_0_sva(5
      DOWNTO 4)), STD_LOGIC_VECTOR'( reg_CACHE_UPDATE_LOOP_3_k_5_0_1_ftd & (reg_CACHE_UPDATE_LOOP_3_k_5_0_3_ftd_2_1(1))),
      and_1555_nl);
  z_out_36_2_0 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd
      & reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1) + CONV_UNSIGNED(UNSIGNED(CACHE_UPDATE_LOOP_3_1_qif_mux_1_nl),
      3), 3));
  z_out_37 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd
      & reg_CACHE_UPDATE_LOOP_2_1_j_2_0_ftd_1), 3), 4) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(z_out_36_2_0(2
      DOWNTO 1)), 2), 4), 4));
  z_out_38 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(GEMM_3D_FLOAT_LOOP_4_1_l_2_0_sva),
      3), 4) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(z_out_34_2_0(2 DOWNTO 1)), 2),
      4), 4));
END v14;

-- ------------------------------------------------------------------
--  Design Unit:    dut
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.ccs_in_wait_pkg_v1.ALL;
USE mgc_hls.ccs_out_wait_pkg_v1.ALL;
USE mgc_hls.mgc_comps.ALL;
USE mgc_hls.BLOCK_1R1W_RBW_pkg.ALL;


ENTITY dut IS
  PORT(
    clk : IN STD_LOGIC;
    en : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    strm_in_rsc_dat : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
    strm_in_rsc_vld : IN STD_LOGIC;
    strm_in_rsc_rdy : OUT STD_LOGIC;
    strm_out_rsc_dat : OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
    strm_out_rsc_vld : OUT STD_LOGIC;
    strm_out_rsc_rdy : IN STD_LOGIC
  );
END dut;

ARCHITECTURE v14 OF dut IS
  -- Interconnect Declarations
  SIGNAL input_rsci_clken_d : STD_LOGIC;
  SIGNAL input_rsci_d_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL input_rsci_q_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL input_rsci_radr_d : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL input_rsci_wadr_d : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL output_rsci_d_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL output_rsci_q_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL output_rsci_radr_d : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL output_rsci_wadr_d : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_d_d : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_q_d : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_radr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_wadr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_d_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_q_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_radr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_wadr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_d_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_q_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_radr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_wadr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_d_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_q_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_radr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_wadr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_q_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_radr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_wadr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_q_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_radr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_wadr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_q_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_radr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_wadr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_d_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_q_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_radr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_wadr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_d_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_q_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_radr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_wadr_d : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_d_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_q_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_radr_d : STD_LOGIC_VECTOR (11
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_wadr_d : STD_LOGIC_VECTOR (11
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_d_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_q_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_radr_d : STD_LOGIC_VECTOR (11
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_wadr_d : STD_LOGIC_VECTOR (11
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_q_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_radr_d : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_wadr_d : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_d_d : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_q_d : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_radr_d : STD_LOGIC_VECTOR (5
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_wadr_d : STD_LOGIC_VECTOR (5
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_d_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_q_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_radr_d : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_wadr_d : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_d_d : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_q_d : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_radr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_wadr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_q_d : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_radr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_wadr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_d_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_q_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_radr_d : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_wadr_d : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_d_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_q_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_radr_d : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_wadr_d : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL rms_norm_384_div_cmp_a : STD_LOGIC_VECTOR (71 DOWNTO 0);
  SIGNAL rms_norm_384_div_cmp_b : STD_LOGIC_VECTOR (60 DOWNTO 0);
  SIGNAL rms_norm_384_div_cmp_z : STD_LOGIC_VECTOR (71 DOWNTO 0);
  SIGNAL input_rsc_clken : STD_LOGIC;
  SIGNAL input_rsc_q : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL input_rsc_re : STD_LOGIC;
  SIGNAL input_rsc_radr : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL input_rsc_we : STD_LOGIC;
  SIGNAL input_rsc_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL input_rsc_wadr : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL output_rsc_clken : STD_LOGIC;
  SIGNAL output_rsc_q : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL output_rsc_re : STD_LOGIC;
  SIGNAL output_rsc_radr : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL output_rsc_we : STD_LOGIC;
  SIGNAL output_rsc_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL output_rsc_wadr : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsc_clken : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsc_q : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsc_re : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsc_radr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsc_we : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsc_d : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsc_wadr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsc_clken : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsc_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsc_re : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsc_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsc_we : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsc_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsc_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsc_clken : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsc_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsc_re : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsc_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsc_we : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsc_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsc_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsc_clken : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsc_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsc_re : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsc_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsc_we : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsc_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsc_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsc_clken : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsc_q : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsc_re : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsc_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsc_we : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsc_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsc_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsc_clken : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsc_q : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsc_re : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsc_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsc_we : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsc_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsc_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsc_clken : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsc_q : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsc_re : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsc_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsc_we : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsc_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsc_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsc_clken : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsc_q : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsc_re : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsc_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsc_we : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsc_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsc_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsc_clken : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsc_q : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsc_re : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsc_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsc_we : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsc_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsc_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsc_clken : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsc_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsc_re : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsc_radr : STD_LOGIC_VECTOR (11 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsc_we : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsc_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsc_wadr : STD_LOGIC_VECTOR (11 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsc_clken : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsc_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsc_re : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsc_radr : STD_LOGIC_VECTOR (11 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsc_we : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsc_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsc_wadr : STD_LOGIC_VECTOR (11 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsc_clken : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsc_q : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsc_re : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsc_radr : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsc_we : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsc_d : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsc_wadr : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsc_clken : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsc_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsc_re : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsc_radr : STD_LOGIC_VECTOR (5 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsc_we : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsc_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsc_wadr : STD_LOGIC_VECTOR (5 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsc_clken : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsc_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsc_re : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsc_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsc_we : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsc_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsc_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsc_clken : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsc_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsc_re : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsc_radr : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsc_we : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsc_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsc_wadr : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsc_clken : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsc_q : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsc_re : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsc_radr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsc_we : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsc_d : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsc_wadr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsc_clken : STD_LOGIC;
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsc_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsc_re : STD_LOGIC;
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsc_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsc_we : STD_LOGIC;
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsc_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsc_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsc_clken : STD_LOGIC;
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsc_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsc_re : STD_LOGIC;
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsc_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsc_we : STD_LOGIC;
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsc_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsc_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL input_rsci_re_d_iff : STD_LOGIC;
  SIGNAL input_rsci_we_d_iff : STD_LOGIC;
  SIGNAL output_rsci_re_d_iff : STD_LOGIC;
  SIGNAL output_rsci_we_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_re_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_we_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_re_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_we_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_we_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_re_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_we_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_re_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_we_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_re_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_we_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_re_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_we_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_re_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_re_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_we_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_re_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_we_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_re_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_we_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_re_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_we_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_re_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_we_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_re_d_iff : STD_LOGIC;
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_we_d_iff : STD_LOGIC;
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_re_d_iff : STD_LOGIC;
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_we_d_iff : STD_LOGIC;

  SIGNAL rms_norm_384_div_cmp_a_1 : STD_LOGIC_VECTOR (71 DOWNTO 0);
  SIGNAL rms_norm_384_div_cmp_b_1 : STD_LOGIC_VECTOR (60 DOWNTO 0);
  SIGNAL rms_norm_384_div_cmp_z_1 : STD_LOGIC_VECTOR (71 DOWNTO 0);

  SIGNAL input_rsc_comp_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL input_rsc_comp_q : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL input_rsc_comp_radr : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL input_rsc_comp_wadr : STD_LOGIC_VECTOR (8 DOWNTO 0);

  SIGNAL output_rsc_comp_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL output_rsc_comp_q : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL output_rsc_comp_radr : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL output_rsc_comp_wadr : STD_LOGIC_VECTOR (8 DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_d : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_q : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_radr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_wadr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsc_comp_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsc_comp_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsc_comp_radr : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsc_comp_wadr : STD_LOGIC_VECTOR (8
      DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsc_comp_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsc_comp_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsc_comp_radr : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsc_comp_wadr : STD_LOGIC_VECTOR (8
      DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsc_comp_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsc_comp_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsc_comp_radr : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsc_comp_wadr : STD_LOGIC_VECTOR (8
      DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_q_proj_rsc_comp_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsc_comp_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsc_comp_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsc_comp_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);

  SIGNAL attention_5_1_384_384_8_48_k_proj_rsc_comp_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsc_comp_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsc_comp_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsc_comp_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);

  SIGNAL attention_5_1_384_384_8_48_v_proj_rsc_comp_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsc_comp_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsc_comp_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsc_comp_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);

  SIGNAL attention_5_1_384_384_8_48_q_embed_rsc_comp_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsc_comp_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsc_comp_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsc_comp_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);

  SIGNAL attention_5_1_384_384_8_48_k_embed_rsc_comp_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsc_comp_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsc_comp_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsc_comp_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);

  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_d : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_q : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_radr : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_wadr : STD_LOGIC_VECTOR
      (11 DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_d : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_q : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_radr : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_wadr : STD_LOGIC_VECTOR
      (11 DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_q : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_radr : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_wadr : STD_LOGIC_VECTOR
      (11 DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsc_comp_d : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsc_comp_q : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsc_comp_radr : STD_LOGIC_VECTOR
      (5 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsc_comp_wadr : STD_LOGIC_VECTOR
      (5 DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_attn_output_rsc_comp_d : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsc_comp_q : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsc_comp_radr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsc_comp_wadr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_q : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_radr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_wadr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);

  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_d : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_q : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_radr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_wadr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);

  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_d : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_q : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_radr : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_wadr : STD_LOGIC_VECTOR (8
      DOWNTO 0);

  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_d : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_q : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_radr : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_wadr : STD_LOGIC_VECTOR (8
      DOWNTO 0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_3_9_40_384_1_384_40_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL input_rsci_q : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL input_rsci_radr : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL input_rsci_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL input_rsci_wadr : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL input_rsci_d_d_1 : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL input_rsci_q_d_1 : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL input_rsci_radr_d_1 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL input_rsci_wadr_d_1 : STD_LOGIC_VECTOR (8 DOWNTO 0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_4_9_40_384_1_384_40_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL output_rsci_q : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL output_rsci_radr : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL output_rsci_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL output_rsci_wadr : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL output_rsci_d_d_1 : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL output_rsci_q_d_1 : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL output_rsci_radr_d_1 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL output_rsci_wadr_d_1 : STD_LOGIC_VECTOR (8 DOWNTO 0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_5_9_8_384_1_384_8_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_q : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_radr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_d : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_wadr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_d_d_1 : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_q_d_1 : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_radr_d_1 : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_hidden_states_rsci_wadr_d_1 : STD_LOGIC_VECTOR
      (8 DOWNTO 0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_6_9_40_384_1_384_40_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_d_d_1 : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_q_d_1 : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_radr_d_1 : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_re_rsci_wadr_d_1 : STD_LOGIC_VECTOR (8
      DOWNTO 0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_7_9_40_384_1_384_40_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_d_d_1 : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_q_d_1 : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_radr_d_1 : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_re_rsci_wadr_d_1 : STD_LOGIC_VECTOR (8
      DOWNTO 0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_8_9_40_384_1_384_40_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_d_d_1 : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_q_d_1 : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_radr_d_1 : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_re_rsci_wadr_d_1 : STD_LOGIC_VECTOR (8
      DOWNTO 0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_9_9_40_384_1_384_40_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_q : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_d_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_q_d_1 : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_radr_d_1 : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_proj_rsci_wadr_d_1 : STD_LOGIC_VECTOR (8 DOWNTO
      0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_10_9_40_384_1_384_40_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_q : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_d_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_q_d_1 : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_radr_d_1 : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_rsci_wadr_d_1 : STD_LOGIC_VECTOR (8 DOWNTO
      0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_11_9_40_384_1_384_40_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_q : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_d_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_q_d_1 : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_radr_d_1 : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_proj_rsci_wadr_d_1 : STD_LOGIC_VECTOR (8 DOWNTO
      0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_12_9_40_384_1_384_40_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_d_d_1 : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_q_d_1 : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_radr_d_1 : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_q_embed_rsci_wadr_d_1 : STD_LOGIC_VECTOR (8 DOWNTO
      0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_13_9_40_384_1_384_40_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_d_d_1 : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_q_d_1 : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_radr_d_1 : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_embed_rsci_wadr_d_1 : STD_LOGIC_VECTOR (8 DOWNTO
      0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_14_12_40_2304_1_2304_40_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (11 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (11 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_radr : STD_LOGIC_VECTOR (11
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_wadr : STD_LOGIC_VECTOR (11
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_d_d_1 : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_q_d_1 : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_radr_d_1 : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_cache_upd_rsci_wadr_d_1 : STD_LOGIC_VECTOR
      (11 DOWNTO 0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_15_12_40_2304_1_2304_40_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (11 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (11 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_radr : STD_LOGIC_VECTOR (11
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_wadr : STD_LOGIC_VECTOR (11
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_d_d_1 : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_q_d_1 : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_radr_d_1 : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_v_cache_upd_rsci_wadr_d_1 : STD_LOGIC_VECTOR
      (11 DOWNTO 0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_16_12_40_2304_1_2304_40_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (11 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (11 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (11 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_q : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_radr : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_d : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_wadr : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_d_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_q_d_1 : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_radr_d_1 : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_k_proj_transposed_rsci_wadr_d_1 : STD_LOGIC_VECTOR
      (11 DOWNTO 0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_17_6_40_48_1_48_40_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (5 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (5 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (5 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (5 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_radr : STD_LOGIC_VECTOR (5
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_wadr : STD_LOGIC_VECTOR (5
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_d_d_1 : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_q_d_1 : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_radr_d_1 : STD_LOGIC_VECTOR
      (5 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_weights_rsci_wadr_d_1 : STD_LOGIC_VECTOR
      (5 DOWNTO 0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_18_9_40_384_1_384_40_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_d_d_1 : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_q_d_1 : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_radr_d_1 : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_rsci_wadr_d_1 : STD_LOGIC_VECTOR
      (8 DOWNTO 0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_19_9_40_384_1_384_40_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_q : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_radr : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_d : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_wadr : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_d_d_1 : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_q_d_1 : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_radr_d_1 : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_attn_output_2D_rsci_wadr_d_1 : STD_LOGIC_VECTOR
      (8 DOWNTO 0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_20_9_8_384_1_384_8_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_q : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_radr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_d : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_wadr : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_d_d : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_q_d_1 : STD_LOGIC_VECTOR
      (7 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_radr_d_1 : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL attention_5_1_384_384_8_48_quantized_final_output_rsci_wadr_d_1 : STD_LOGIC_VECTOR
      (8 DOWNTO 0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_21_9_40_384_1_384_40_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_d_d_1 : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_q_d_1 : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_radr_d_1 : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_q_rsci_wadr_d_1 : STD_LOGIC_VECTOR (8
      DOWNTO 0);

  COMPONENT dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_22_9_40_384_1_384_40_1_gen
    PORT(
      clken : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      re : OUT STD_LOGIC;
      radr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      clken_d : IN STD_LOGIC;
      d_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      q_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      re_d : IN STD_LOGIC;
      wadr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      we_d : IN STD_LOGIC;
      writeA_w_ram_ir_internal_WMASK_B_d : IN STD_LOGIC;
      readA_r_ram_ir_internal_RMASK_B_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_q : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_radr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_d : STD_LOGIC_VECTOR (39 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_wadr : STD_LOGIC_VECTOR (8 DOWNTO
      0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_d_d_1 : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_q_d_1 : STD_LOGIC_VECTOR (39
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_radr_d_1 : STD_LOGIC_VECTOR (8
      DOWNTO 0);
  SIGNAL apply_rotary_pos_emb_1_8_48_rotated_k_rsci_wadr_d_1 : STD_LOGIC_VECTOR (8
      DOWNTO 0);

  COMPONENT dut_core
    PORT(
      clk : IN STD_LOGIC;
      en : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      strm_in_rsc_dat : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
      strm_in_rsc_vld : IN STD_LOGIC;
      strm_in_rsc_rdy : OUT STD_LOGIC;
      strm_out_rsc_dat : OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
      strm_out_rsc_vld : OUT STD_LOGIC;
      strm_out_rsc_rdy : IN STD_LOGIC;
      input_rsci_clken_d : OUT STD_LOGIC;
      input_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      input_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      input_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      input_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      output_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO 0);
      output_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO 0);
      output_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      output_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      attention_5_1_384_384_8_48_quantized_hidden_states_rsci_d_d : OUT STD_LOGIC_VECTOR
          (7 DOWNTO 0);
      attention_5_1_384_384_8_48_quantized_hidden_states_rsci_q_d : IN STD_LOGIC_VECTOR
          (7 DOWNTO 0);
      attention_5_1_384_384_8_48_quantized_hidden_states_rsci_radr_d : OUT STD_LOGIC_VECTOR
          (8 DOWNTO 0);
      attention_5_1_384_384_8_48_quantized_hidden_states_rsci_wadr_d : OUT STD_LOGIC_VECTOR
          (8 DOWNTO 0);
      attention_5_1_384_384_8_48_q_proj_re_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
          0);
      attention_5_1_384_384_8_48_q_proj_re_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
          0);
      attention_5_1_384_384_8_48_q_proj_re_rsci_radr_d : OUT STD_LOGIC_VECTOR (8
          DOWNTO 0);
      attention_5_1_384_384_8_48_q_proj_re_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8
          DOWNTO 0);
      attention_5_1_384_384_8_48_k_proj_re_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
          0);
      attention_5_1_384_384_8_48_k_proj_re_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
          0);
      attention_5_1_384_384_8_48_k_proj_re_rsci_radr_d : OUT STD_LOGIC_VECTOR (8
          DOWNTO 0);
      attention_5_1_384_384_8_48_k_proj_re_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8
          DOWNTO 0);
      attention_5_1_384_384_8_48_v_proj_re_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
          0);
      attention_5_1_384_384_8_48_v_proj_re_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
          0);
      attention_5_1_384_384_8_48_v_proj_re_rsci_radr_d : OUT STD_LOGIC_VECTOR (8
          DOWNTO 0);
      attention_5_1_384_384_8_48_v_proj_re_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8
          DOWNTO 0);
      attention_5_1_384_384_8_48_q_proj_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
          0);
      attention_5_1_384_384_8_48_q_proj_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
          0);
      attention_5_1_384_384_8_48_q_proj_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
          0);
      attention_5_1_384_384_8_48_k_proj_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
          0);
      attention_5_1_384_384_8_48_k_proj_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
          0);
      attention_5_1_384_384_8_48_k_proj_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
          0);
      attention_5_1_384_384_8_48_v_proj_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
          0);
      attention_5_1_384_384_8_48_v_proj_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
          0);
      attention_5_1_384_384_8_48_v_proj_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
          0);
      attention_5_1_384_384_8_48_q_embed_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
          0);
      attention_5_1_384_384_8_48_q_embed_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
          0);
      attention_5_1_384_384_8_48_q_embed_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
          0);
      attention_5_1_384_384_8_48_q_embed_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
          0);
      attention_5_1_384_384_8_48_k_embed_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
          0);
      attention_5_1_384_384_8_48_k_embed_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
          0);
      attention_5_1_384_384_8_48_k_embed_rsci_radr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
          0);
      attention_5_1_384_384_8_48_k_embed_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO
          0);
      attention_5_1_384_384_8_48_k_cache_upd_rsci_d_d : OUT STD_LOGIC_VECTOR (39
          DOWNTO 0);
      attention_5_1_384_384_8_48_k_cache_upd_rsci_radr_d : OUT STD_LOGIC_VECTOR (11
          DOWNTO 0);
      attention_5_1_384_384_8_48_k_cache_upd_rsci_wadr_d : OUT STD_LOGIC_VECTOR (11
          DOWNTO 0);
      attention_5_1_384_384_8_48_v_cache_upd_rsci_d_d : OUT STD_LOGIC_VECTOR (39
          DOWNTO 0);
      attention_5_1_384_384_8_48_v_cache_upd_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
          0);
      attention_5_1_384_384_8_48_v_cache_upd_rsci_radr_d : OUT STD_LOGIC_VECTOR (11
          DOWNTO 0);
      attention_5_1_384_384_8_48_v_cache_upd_rsci_wadr_d : OUT STD_LOGIC_VECTOR (11
          DOWNTO 0);
      attention_5_1_384_384_8_48_k_proj_transposed_rsci_q_d : IN STD_LOGIC_VECTOR
          (39 DOWNTO 0);
      attention_5_1_384_384_8_48_k_proj_transposed_rsci_radr_d : OUT STD_LOGIC_VECTOR
          (11 DOWNTO 0);
      attention_5_1_384_384_8_48_k_proj_transposed_rsci_wadr_d : OUT STD_LOGIC_VECTOR
          (11 DOWNTO 0);
      attention_5_1_384_384_8_48_attn_weights_rsci_d_d : OUT STD_LOGIC_VECTOR (39
          DOWNTO 0);
      attention_5_1_384_384_8_48_attn_weights_rsci_q_d : IN STD_LOGIC_VECTOR (39
          DOWNTO 0);
      attention_5_1_384_384_8_48_attn_weights_rsci_radr_d : OUT STD_LOGIC_VECTOR
          (5 DOWNTO 0);
      attention_5_1_384_384_8_48_attn_weights_rsci_wadr_d : OUT STD_LOGIC_VECTOR
          (5 DOWNTO 0);
      attention_5_1_384_384_8_48_attn_output_rsci_d_d : OUT STD_LOGIC_VECTOR (39
          DOWNTO 0);
      attention_5_1_384_384_8_48_attn_output_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
          0);
      attention_5_1_384_384_8_48_attn_output_rsci_radr_d : OUT STD_LOGIC_VECTOR (8
          DOWNTO 0);
      attention_5_1_384_384_8_48_attn_output_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8
          DOWNTO 0);
      attention_5_1_384_384_8_48_attn_output_2D_rsci_d_d : OUT STD_LOGIC_VECTOR (39
          DOWNTO 0);
      attention_5_1_384_384_8_48_attn_output_2D_rsci_q_d : IN STD_LOGIC_VECTOR (39
          DOWNTO 0);
      attention_5_1_384_384_8_48_attn_output_2D_rsci_radr_d : OUT STD_LOGIC_VECTOR
          (8 DOWNTO 0);
      attention_5_1_384_384_8_48_attn_output_2D_rsci_wadr_d : OUT STD_LOGIC_VECTOR
          (8 DOWNTO 0);
      attention_5_1_384_384_8_48_quantized_final_output_rsci_q_d : IN STD_LOGIC_VECTOR
          (7 DOWNTO 0);
      attention_5_1_384_384_8_48_quantized_final_output_rsci_radr_d : OUT STD_LOGIC_VECTOR
          (8 DOWNTO 0);
      attention_5_1_384_384_8_48_quantized_final_output_rsci_wadr_d : OUT STD_LOGIC_VECTOR
          (8 DOWNTO 0);
      apply_rotary_pos_emb_1_8_48_rotated_q_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
          0);
      apply_rotary_pos_emb_1_8_48_rotated_q_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
          0);
      apply_rotary_pos_emb_1_8_48_rotated_q_rsci_radr_d : OUT STD_LOGIC_VECTOR (8
          DOWNTO 0);
      apply_rotary_pos_emb_1_8_48_rotated_q_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8
          DOWNTO 0);
      apply_rotary_pos_emb_1_8_48_rotated_k_rsci_d_d : OUT STD_LOGIC_VECTOR (39 DOWNTO
          0);
      apply_rotary_pos_emb_1_8_48_rotated_k_rsci_q_d : IN STD_LOGIC_VECTOR (39 DOWNTO
          0);
      apply_rotary_pos_emb_1_8_48_rotated_k_rsci_radr_d : OUT STD_LOGIC_VECTOR (8
          DOWNTO 0);
      apply_rotary_pos_emb_1_8_48_rotated_k_rsci_wadr_d : OUT STD_LOGIC_VECTOR (8
          DOWNTO 0);
      rms_norm_384_div_cmp_a : OUT STD_LOGIC_VECTOR (71 DOWNTO 0);
      rms_norm_384_div_cmp_b : OUT STD_LOGIC_VECTOR (60 DOWNTO 0);
      rms_norm_384_div_cmp_z : IN STD_LOGIC_VECTOR (71 DOWNTO 0);
      input_rsci_re_d_pff : OUT STD_LOGIC;
      input_rsci_we_d_pff : OUT STD_LOGIC;
      output_rsci_re_d_pff : OUT STD_LOGIC;
      output_rsci_we_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_quantized_hidden_states_rsci_re_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_quantized_hidden_states_rsci_we_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_q_proj_re_rsci_re_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_q_proj_re_rsci_we_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_k_proj_re_rsci_we_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_v_proj_re_rsci_re_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_v_proj_re_rsci_we_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_q_proj_rsci_re_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_q_proj_rsci_we_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_v_proj_rsci_re_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_v_proj_rsci_we_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_q_embed_rsci_re_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_q_embed_rsci_we_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_k_embed_rsci_re_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_k_cache_upd_rsci_re_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_k_cache_upd_rsci_we_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_v_cache_upd_rsci_re_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_k_proj_transposed_rsci_we_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_attn_weights_rsci_re_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_attn_weights_rsci_we_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_attn_output_rsci_re_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_attn_output_rsci_we_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_attn_output_2D_rsci_re_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_attn_output_2D_rsci_we_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_quantized_final_output_rsci_re_d_pff : OUT STD_LOGIC;
      attention_5_1_384_384_8_48_quantized_final_output_rsci_we_d_pff : OUT STD_LOGIC;
      apply_rotary_pos_emb_1_8_48_rotated_q_rsci_re_d_pff : OUT STD_LOGIC;
      apply_rotary_pos_emb_1_8_48_rotated_q_rsci_we_d_pff : OUT STD_LOGIC
    );
  END COMPONENT;
  SIGNAL dut_core_inst_strm_in_rsc_dat : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL dut_core_inst_strm_out_rsc_dat : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL dut_core_inst_input_rsci_d_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL dut_core_inst_input_rsci_q_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL dut_core_inst_input_rsci_radr_d : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL dut_core_inst_input_rsci_wadr_d : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL dut_core_inst_output_rsci_d_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL dut_core_inst_output_rsci_q_d : STD_LOGIC_VECTOR (39 DOWNTO 0);
  SIGNAL dut_core_inst_output_rsci_radr_d : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL dut_core_inst_output_rsci_wadr_d : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_d_d
      : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_q_d
      : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_radr_d
      : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_wadr_d
      : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_d_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_q_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_radr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_wadr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_d_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_q_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_radr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_wadr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_d_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_q_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_radr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_wadr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_proj_rsci_q_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_proj_rsci_radr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_proj_rsci_wadr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_proj_rsci_q_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_proj_rsci_radr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_proj_rsci_wadr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_proj_rsci_q_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_proj_rsci_radr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_proj_rsci_wadr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_d_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_q_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_radr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_wadr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_d_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_q_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_radr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_wadr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_cache_upd_rsci_d_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_cache_upd_rsci_radr_d : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_cache_upd_rsci_wadr_d : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_d_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_q_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_radr_d : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_wadr_d : STD_LOGIC_VECTOR
      (11 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_proj_transposed_rsci_q_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_proj_transposed_rsci_radr_d :
      STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_k_proj_transposed_rsci_wadr_d :
      STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_d_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_q_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_radr_d : STD_LOGIC_VECTOR
      (5 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_wadr_d : STD_LOGIC_VECTOR
      (5 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_d_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_q_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_radr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_wadr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_d_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_q_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_radr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_wadr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_quantized_final_output_rsci_q_d
      : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_quantized_final_output_rsci_radr_d
      : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL dut_core_inst_attention_5_1_384_384_8_48_quantized_final_output_rsci_wadr_d
      : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_d_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_q_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_radr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_wadr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_d_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_q_d : STD_LOGIC_VECTOR
      (39 DOWNTO 0);
  SIGNAL dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_radr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_wadr_d : STD_LOGIC_VECTOR
      (8 DOWNTO 0);
  SIGNAL dut_core_inst_rms_norm_384_div_cmp_a : STD_LOGIC_VECTOR (71 DOWNTO 0);
  SIGNAL dut_core_inst_rms_norm_384_div_cmp_b : STD_LOGIC_VECTOR (60 DOWNTO 0);
  SIGNAL dut_core_inst_rms_norm_384_div_cmp_z : STD_LOGIC_VECTOR (71 DOWNTO 0);

BEGIN
  rms_norm_384_div_cmp : mgc_hls.mgc_comps.mgc_div
    GENERIC MAP(
      width_a => 72,
      width_b => 61,
      signd => 1
      )
    PORT MAP(
      a => rms_norm_384_div_cmp_a_1,
      b => rms_norm_384_div_cmp_b_1,
      z => rms_norm_384_div_cmp_z_1
    );
  rms_norm_384_div_cmp_a_1 <= rms_norm_384_div_cmp_a;
  rms_norm_384_div_cmp_b_1 <= rms_norm_384_div_cmp_b;
  rms_norm_384_div_cmp_z <= rms_norm_384_div_cmp_z_1;

  input_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 9,
      data_width => 40,
      depth => 384,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => input_rsc_clken,
      d => input_rsc_comp_d,
      q => input_rsc_comp_q,
      radr => input_rsc_comp_radr,
      re => input_rsc_re,
      wadr => input_rsc_comp_wadr,
      we => input_rsc_we
    );
  input_rsc_comp_d <= input_rsc_d;
  input_rsc_q <= input_rsc_comp_q;
  input_rsc_comp_radr <= input_rsc_radr;
  input_rsc_comp_wadr <= input_rsc_wadr;

  output_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 9,
      data_width => 40,
      depth => 384,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => output_rsc_clken,
      d => output_rsc_comp_d,
      q => output_rsc_comp_q,
      radr => output_rsc_comp_radr,
      re => output_rsc_re,
      wadr => output_rsc_comp_wadr,
      we => output_rsc_we
    );
  output_rsc_comp_d <= output_rsc_d;
  output_rsc_q <= output_rsc_comp_q;
  output_rsc_comp_radr <= output_rsc_radr;
  output_rsc_comp_wadr <= output_rsc_wadr;

  attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 9,
      data_width => 8,
      depth => 384,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => attention_5_1_384_384_8_48_quantized_hidden_states_rsc_clken,
      d => attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_d,
      q => attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_q,
      radr => attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_radr,
      re => attention_5_1_384_384_8_48_quantized_hidden_states_rsc_re,
      wadr => attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_wadr,
      we => attention_5_1_384_384_8_48_quantized_hidden_states_rsc_we
    );
  attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_d <= attention_5_1_384_384_8_48_quantized_hidden_states_rsc_d;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsc_q <= attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_q;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_radr <= attention_5_1_384_384_8_48_quantized_hidden_states_rsc_radr;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsc_comp_wadr <= attention_5_1_384_384_8_48_quantized_hidden_states_rsc_wadr;

  attention_5_1_384_384_8_48_q_proj_re_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 9,
      data_width => 40,
      depth => 384,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => attention_5_1_384_384_8_48_q_proj_re_rsc_clken,
      d => attention_5_1_384_384_8_48_q_proj_re_rsc_comp_d,
      q => attention_5_1_384_384_8_48_q_proj_re_rsc_comp_q,
      radr => attention_5_1_384_384_8_48_q_proj_re_rsc_comp_radr,
      re => attention_5_1_384_384_8_48_q_proj_re_rsc_re,
      wadr => attention_5_1_384_384_8_48_q_proj_re_rsc_comp_wadr,
      we => attention_5_1_384_384_8_48_q_proj_re_rsc_we
    );
  attention_5_1_384_384_8_48_q_proj_re_rsc_comp_d <= attention_5_1_384_384_8_48_q_proj_re_rsc_d;
  attention_5_1_384_384_8_48_q_proj_re_rsc_q <= attention_5_1_384_384_8_48_q_proj_re_rsc_comp_q;
  attention_5_1_384_384_8_48_q_proj_re_rsc_comp_radr <= attention_5_1_384_384_8_48_q_proj_re_rsc_radr;
  attention_5_1_384_384_8_48_q_proj_re_rsc_comp_wadr <= attention_5_1_384_384_8_48_q_proj_re_rsc_wadr;

  attention_5_1_384_384_8_48_k_proj_re_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 9,
      data_width => 40,
      depth => 384,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => attention_5_1_384_384_8_48_k_proj_re_rsc_clken,
      d => attention_5_1_384_384_8_48_k_proj_re_rsc_comp_d,
      q => attention_5_1_384_384_8_48_k_proj_re_rsc_comp_q,
      radr => attention_5_1_384_384_8_48_k_proj_re_rsc_comp_radr,
      re => attention_5_1_384_384_8_48_k_proj_re_rsc_re,
      wadr => attention_5_1_384_384_8_48_k_proj_re_rsc_comp_wadr,
      we => attention_5_1_384_384_8_48_k_proj_re_rsc_we
    );
  attention_5_1_384_384_8_48_k_proj_re_rsc_comp_d <= attention_5_1_384_384_8_48_k_proj_re_rsc_d;
  attention_5_1_384_384_8_48_k_proj_re_rsc_q <= attention_5_1_384_384_8_48_k_proj_re_rsc_comp_q;
  attention_5_1_384_384_8_48_k_proj_re_rsc_comp_radr <= attention_5_1_384_384_8_48_k_proj_re_rsc_radr;
  attention_5_1_384_384_8_48_k_proj_re_rsc_comp_wadr <= attention_5_1_384_384_8_48_k_proj_re_rsc_wadr;

  attention_5_1_384_384_8_48_v_proj_re_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 9,
      data_width => 40,
      depth => 384,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => attention_5_1_384_384_8_48_v_proj_re_rsc_clken,
      d => attention_5_1_384_384_8_48_v_proj_re_rsc_comp_d,
      q => attention_5_1_384_384_8_48_v_proj_re_rsc_comp_q,
      radr => attention_5_1_384_384_8_48_v_proj_re_rsc_comp_radr,
      re => attention_5_1_384_384_8_48_v_proj_re_rsc_re,
      wadr => attention_5_1_384_384_8_48_v_proj_re_rsc_comp_wadr,
      we => attention_5_1_384_384_8_48_v_proj_re_rsc_we
    );
  attention_5_1_384_384_8_48_v_proj_re_rsc_comp_d <= attention_5_1_384_384_8_48_v_proj_re_rsc_d;
  attention_5_1_384_384_8_48_v_proj_re_rsc_q <= attention_5_1_384_384_8_48_v_proj_re_rsc_comp_q;
  attention_5_1_384_384_8_48_v_proj_re_rsc_comp_radr <= attention_5_1_384_384_8_48_v_proj_re_rsc_radr;
  attention_5_1_384_384_8_48_v_proj_re_rsc_comp_wadr <= attention_5_1_384_384_8_48_v_proj_re_rsc_wadr;

  attention_5_1_384_384_8_48_q_proj_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 9,
      data_width => 40,
      depth => 384,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => attention_5_1_384_384_8_48_q_proj_rsc_clken,
      d => attention_5_1_384_384_8_48_q_proj_rsc_comp_d,
      q => attention_5_1_384_384_8_48_q_proj_rsc_comp_q,
      radr => attention_5_1_384_384_8_48_q_proj_rsc_comp_radr,
      re => attention_5_1_384_384_8_48_q_proj_rsc_re,
      wadr => attention_5_1_384_384_8_48_q_proj_rsc_comp_wadr,
      we => attention_5_1_384_384_8_48_q_proj_rsc_we
    );
  attention_5_1_384_384_8_48_q_proj_rsc_comp_d <= attention_5_1_384_384_8_48_q_proj_rsc_d;
  attention_5_1_384_384_8_48_q_proj_rsc_q <= attention_5_1_384_384_8_48_q_proj_rsc_comp_q;
  attention_5_1_384_384_8_48_q_proj_rsc_comp_radr <= attention_5_1_384_384_8_48_q_proj_rsc_radr;
  attention_5_1_384_384_8_48_q_proj_rsc_comp_wadr <= attention_5_1_384_384_8_48_q_proj_rsc_wadr;

  attention_5_1_384_384_8_48_k_proj_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 9,
      data_width => 40,
      depth => 384,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => attention_5_1_384_384_8_48_k_proj_rsc_clken,
      d => attention_5_1_384_384_8_48_k_proj_rsc_comp_d,
      q => attention_5_1_384_384_8_48_k_proj_rsc_comp_q,
      radr => attention_5_1_384_384_8_48_k_proj_rsc_comp_radr,
      re => attention_5_1_384_384_8_48_k_proj_rsc_re,
      wadr => attention_5_1_384_384_8_48_k_proj_rsc_comp_wadr,
      we => attention_5_1_384_384_8_48_k_proj_rsc_we
    );
  attention_5_1_384_384_8_48_k_proj_rsc_comp_d <= attention_5_1_384_384_8_48_k_proj_rsc_d;
  attention_5_1_384_384_8_48_k_proj_rsc_q <= attention_5_1_384_384_8_48_k_proj_rsc_comp_q;
  attention_5_1_384_384_8_48_k_proj_rsc_comp_radr <= attention_5_1_384_384_8_48_k_proj_rsc_radr;
  attention_5_1_384_384_8_48_k_proj_rsc_comp_wadr <= attention_5_1_384_384_8_48_k_proj_rsc_wadr;

  attention_5_1_384_384_8_48_v_proj_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 9,
      data_width => 40,
      depth => 384,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => attention_5_1_384_384_8_48_v_proj_rsc_clken,
      d => attention_5_1_384_384_8_48_v_proj_rsc_comp_d,
      q => attention_5_1_384_384_8_48_v_proj_rsc_comp_q,
      radr => attention_5_1_384_384_8_48_v_proj_rsc_comp_radr,
      re => attention_5_1_384_384_8_48_v_proj_rsc_re,
      wadr => attention_5_1_384_384_8_48_v_proj_rsc_comp_wadr,
      we => attention_5_1_384_384_8_48_v_proj_rsc_we
    );
  attention_5_1_384_384_8_48_v_proj_rsc_comp_d <= attention_5_1_384_384_8_48_v_proj_rsc_d;
  attention_5_1_384_384_8_48_v_proj_rsc_q <= attention_5_1_384_384_8_48_v_proj_rsc_comp_q;
  attention_5_1_384_384_8_48_v_proj_rsc_comp_radr <= attention_5_1_384_384_8_48_v_proj_rsc_radr;
  attention_5_1_384_384_8_48_v_proj_rsc_comp_wadr <= attention_5_1_384_384_8_48_v_proj_rsc_wadr;

  attention_5_1_384_384_8_48_q_embed_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 9,
      data_width => 40,
      depth => 384,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => attention_5_1_384_384_8_48_q_embed_rsc_clken,
      d => attention_5_1_384_384_8_48_q_embed_rsc_comp_d,
      q => attention_5_1_384_384_8_48_q_embed_rsc_comp_q,
      radr => attention_5_1_384_384_8_48_q_embed_rsc_comp_radr,
      re => attention_5_1_384_384_8_48_q_embed_rsc_re,
      wadr => attention_5_1_384_384_8_48_q_embed_rsc_comp_wadr,
      we => attention_5_1_384_384_8_48_q_embed_rsc_we
    );
  attention_5_1_384_384_8_48_q_embed_rsc_comp_d <= attention_5_1_384_384_8_48_q_embed_rsc_d;
  attention_5_1_384_384_8_48_q_embed_rsc_q <= attention_5_1_384_384_8_48_q_embed_rsc_comp_q;
  attention_5_1_384_384_8_48_q_embed_rsc_comp_radr <= attention_5_1_384_384_8_48_q_embed_rsc_radr;
  attention_5_1_384_384_8_48_q_embed_rsc_comp_wadr <= attention_5_1_384_384_8_48_q_embed_rsc_wadr;

  attention_5_1_384_384_8_48_k_embed_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 9,
      data_width => 40,
      depth => 384,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => attention_5_1_384_384_8_48_k_embed_rsc_clken,
      d => attention_5_1_384_384_8_48_k_embed_rsc_comp_d,
      q => attention_5_1_384_384_8_48_k_embed_rsc_comp_q,
      radr => attention_5_1_384_384_8_48_k_embed_rsc_comp_radr,
      re => attention_5_1_384_384_8_48_k_embed_rsc_re,
      wadr => attention_5_1_384_384_8_48_k_embed_rsc_comp_wadr,
      we => attention_5_1_384_384_8_48_k_embed_rsc_we
    );
  attention_5_1_384_384_8_48_k_embed_rsc_comp_d <= attention_5_1_384_384_8_48_k_embed_rsc_d;
  attention_5_1_384_384_8_48_k_embed_rsc_q <= attention_5_1_384_384_8_48_k_embed_rsc_comp_q;
  attention_5_1_384_384_8_48_k_embed_rsc_comp_radr <= attention_5_1_384_384_8_48_k_embed_rsc_radr;
  attention_5_1_384_384_8_48_k_embed_rsc_comp_wadr <= attention_5_1_384_384_8_48_k_embed_rsc_wadr;

  attention_5_1_384_384_8_48_k_cache_upd_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 12,
      data_width => 40,
      depth => 2304,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => attention_5_1_384_384_8_48_k_cache_upd_rsc_clken,
      d => attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_d,
      q => attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_q,
      radr => attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_radr,
      re => attention_5_1_384_384_8_48_k_cache_upd_rsc_re,
      wadr => attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_wadr,
      we => attention_5_1_384_384_8_48_k_cache_upd_rsc_we
    );
  attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_d <= attention_5_1_384_384_8_48_k_cache_upd_rsc_d;
  attention_5_1_384_384_8_48_k_cache_upd_rsc_q <= attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_q;
  attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_radr <= attention_5_1_384_384_8_48_k_cache_upd_rsc_radr;
  attention_5_1_384_384_8_48_k_cache_upd_rsc_comp_wadr <= attention_5_1_384_384_8_48_k_cache_upd_rsc_wadr;

  attention_5_1_384_384_8_48_v_cache_upd_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 12,
      data_width => 40,
      depth => 2304,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => attention_5_1_384_384_8_48_v_cache_upd_rsc_clken,
      d => attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_d,
      q => attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_q,
      radr => attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_radr,
      re => attention_5_1_384_384_8_48_v_cache_upd_rsc_re,
      wadr => attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_wadr,
      we => attention_5_1_384_384_8_48_v_cache_upd_rsc_we
    );
  attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_d <= attention_5_1_384_384_8_48_v_cache_upd_rsc_d;
  attention_5_1_384_384_8_48_v_cache_upd_rsc_q <= attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_q;
  attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_radr <= attention_5_1_384_384_8_48_v_cache_upd_rsc_radr;
  attention_5_1_384_384_8_48_v_cache_upd_rsc_comp_wadr <= attention_5_1_384_384_8_48_v_cache_upd_rsc_wadr;

  attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 12,
      data_width => 40,
      depth => 2304,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => attention_5_1_384_384_8_48_k_proj_transposed_rsc_clken,
      d => attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_d,
      q => attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_q,
      radr => attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_radr,
      re => attention_5_1_384_384_8_48_k_proj_transposed_rsc_re,
      wadr => attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_wadr,
      we => attention_5_1_384_384_8_48_k_proj_transposed_rsc_we
    );
  attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_d <= attention_5_1_384_384_8_48_k_proj_transposed_rsc_d;
  attention_5_1_384_384_8_48_k_proj_transposed_rsc_q <= attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_q;
  attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_radr <= attention_5_1_384_384_8_48_k_proj_transposed_rsc_radr;
  attention_5_1_384_384_8_48_k_proj_transposed_rsc_comp_wadr <= attention_5_1_384_384_8_48_k_proj_transposed_rsc_wadr;

  attention_5_1_384_384_8_48_attn_weights_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 6,
      data_width => 40,
      depth => 48,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => attention_5_1_384_384_8_48_attn_weights_rsc_clken,
      d => attention_5_1_384_384_8_48_attn_weights_rsc_comp_d,
      q => attention_5_1_384_384_8_48_attn_weights_rsc_comp_q,
      radr => attention_5_1_384_384_8_48_attn_weights_rsc_comp_radr,
      re => attention_5_1_384_384_8_48_attn_weights_rsc_re,
      wadr => attention_5_1_384_384_8_48_attn_weights_rsc_comp_wadr,
      we => attention_5_1_384_384_8_48_attn_weights_rsc_we
    );
  attention_5_1_384_384_8_48_attn_weights_rsc_comp_d <= attention_5_1_384_384_8_48_attn_weights_rsc_d;
  attention_5_1_384_384_8_48_attn_weights_rsc_q <= attention_5_1_384_384_8_48_attn_weights_rsc_comp_q;
  attention_5_1_384_384_8_48_attn_weights_rsc_comp_radr <= attention_5_1_384_384_8_48_attn_weights_rsc_radr;
  attention_5_1_384_384_8_48_attn_weights_rsc_comp_wadr <= attention_5_1_384_384_8_48_attn_weights_rsc_wadr;

  attention_5_1_384_384_8_48_attn_output_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 9,
      data_width => 40,
      depth => 384,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => attention_5_1_384_384_8_48_attn_output_rsc_clken,
      d => attention_5_1_384_384_8_48_attn_output_rsc_comp_d,
      q => attention_5_1_384_384_8_48_attn_output_rsc_comp_q,
      radr => attention_5_1_384_384_8_48_attn_output_rsc_comp_radr,
      re => attention_5_1_384_384_8_48_attn_output_rsc_re,
      wadr => attention_5_1_384_384_8_48_attn_output_rsc_comp_wadr,
      we => attention_5_1_384_384_8_48_attn_output_rsc_we
    );
  attention_5_1_384_384_8_48_attn_output_rsc_comp_d <= attention_5_1_384_384_8_48_attn_output_rsc_d;
  attention_5_1_384_384_8_48_attn_output_rsc_q <= attention_5_1_384_384_8_48_attn_output_rsc_comp_q;
  attention_5_1_384_384_8_48_attn_output_rsc_comp_radr <= attention_5_1_384_384_8_48_attn_output_rsc_radr;
  attention_5_1_384_384_8_48_attn_output_rsc_comp_wadr <= attention_5_1_384_384_8_48_attn_output_rsc_wadr;

  attention_5_1_384_384_8_48_attn_output_2D_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 9,
      data_width => 40,
      depth => 384,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => attention_5_1_384_384_8_48_attn_output_2D_rsc_clken,
      d => attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_d,
      q => attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_q,
      radr => attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_radr,
      re => attention_5_1_384_384_8_48_attn_output_2D_rsc_re,
      wadr => attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_wadr,
      we => attention_5_1_384_384_8_48_attn_output_2D_rsc_we
    );
  attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_d <= attention_5_1_384_384_8_48_attn_output_2D_rsc_d;
  attention_5_1_384_384_8_48_attn_output_2D_rsc_q <= attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_q;
  attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_radr <= attention_5_1_384_384_8_48_attn_output_2D_rsc_radr;
  attention_5_1_384_384_8_48_attn_output_2D_rsc_comp_wadr <= attention_5_1_384_384_8_48_attn_output_2D_rsc_wadr;

  attention_5_1_384_384_8_48_quantized_final_output_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 9,
      data_width => 8,
      depth => 384,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => attention_5_1_384_384_8_48_quantized_final_output_rsc_clken,
      d => attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_d,
      q => attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_q,
      radr => attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_radr,
      re => attention_5_1_384_384_8_48_quantized_final_output_rsc_re,
      wadr => attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_wadr,
      we => attention_5_1_384_384_8_48_quantized_final_output_rsc_we
    );
  attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_d <= attention_5_1_384_384_8_48_quantized_final_output_rsc_d;
  attention_5_1_384_384_8_48_quantized_final_output_rsc_q <= attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_q;
  attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_radr <= attention_5_1_384_384_8_48_quantized_final_output_rsc_radr;
  attention_5_1_384_384_8_48_quantized_final_output_rsc_comp_wadr <= attention_5_1_384_384_8_48_quantized_final_output_rsc_wadr;

  apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 9,
      data_width => 40,
      depth => 384,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => apply_rotary_pos_emb_1_8_48_rotated_q_rsc_clken,
      d => apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_d,
      q => apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_q,
      radr => apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_radr,
      re => apply_rotary_pos_emb_1_8_48_rotated_q_rsc_re,
      wadr => apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_wadr,
      we => apply_rotary_pos_emb_1_8_48_rotated_q_rsc_we
    );
  apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_d <= apply_rotary_pos_emb_1_8_48_rotated_q_rsc_d;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsc_q <= apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_q;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_radr <= apply_rotary_pos_emb_1_8_48_rotated_q_rsc_radr;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsc_comp_wadr <= apply_rotary_pos_emb_1_8_48_rotated_q_rsc_wadr;

  apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp : mgc_hls.block_1r1w_rbw_pkg.BLOCK_1R1W_RBW
    GENERIC MAP(
      addr_width => 9,
      data_width => 40,
      depth => 384,
      latency => 1,
      suppress_sim_read_addr_range_errs => 1
      )
    PORT MAP(
      clk => clk,
      clken => apply_rotary_pos_emb_1_8_48_rotated_k_rsc_clken,
      d => apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_d,
      q => apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_q,
      radr => apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_radr,
      re => apply_rotary_pos_emb_1_8_48_rotated_k_rsc_re,
      wadr => apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_wadr,
      we => apply_rotary_pos_emb_1_8_48_rotated_k_rsc_we
    );
  apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_d <= apply_rotary_pos_emb_1_8_48_rotated_k_rsc_d;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsc_q <= apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_q;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_radr <= apply_rotary_pos_emb_1_8_48_rotated_k_rsc_radr;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsc_comp_wadr <= apply_rotary_pos_emb_1_8_48_rotated_k_rsc_wadr;

  input_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_3_9_40_384_1_384_40_1_gen
    PORT MAP(
      clken => input_rsc_clken,
      q => input_rsci_q,
      re => input_rsc_re,
      radr => input_rsci_radr,
      we => input_rsc_we,
      d => input_rsci_d,
      wadr => input_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => input_rsci_d_d_1,
      q_d => input_rsci_q_d_1,
      radr_d => input_rsci_radr_d_1,
      re_d => input_rsci_re_d_iff,
      wadr_d => input_rsci_wadr_d_1,
      we_d => input_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => input_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => input_rsci_re_d_iff
    );
  input_rsci_q <= input_rsc_q;
  input_rsc_radr <= input_rsci_radr;
  input_rsc_d <= input_rsci_d;
  input_rsc_wadr <= input_rsci_wadr;
  input_rsci_d_d_1 <= input_rsci_d_d;
  input_rsci_q_d <= input_rsci_q_d_1;
  input_rsci_radr_d_1 <= input_rsci_radr_d;
  input_rsci_wadr_d_1 <= input_rsci_wadr_d;

  output_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_4_9_40_384_1_384_40_1_gen
    PORT MAP(
      clken => output_rsc_clken,
      q => output_rsci_q,
      re => output_rsc_re,
      radr => output_rsci_radr,
      we => output_rsc_we,
      d => output_rsci_d,
      wadr => output_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => output_rsci_d_d_1,
      q_d => output_rsci_q_d_1,
      radr_d => output_rsci_radr_d_1,
      re_d => output_rsci_re_d_iff,
      wadr_d => output_rsci_wadr_d_1,
      we_d => output_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => output_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => output_rsci_re_d_iff
    );
  output_rsci_q <= output_rsc_q;
  output_rsc_radr <= output_rsci_radr;
  output_rsc_d <= output_rsci_d;
  output_rsc_wadr <= output_rsci_wadr;
  output_rsci_d_d_1 <= output_rsci_d_d;
  output_rsci_q_d <= output_rsci_q_d_1;
  output_rsci_radr_d_1 <= output_rsci_radr_d;
  output_rsci_wadr_d_1 <= output_rsci_wadr_d;

  attention_5_1_384_384_8_48_quantized_hidden_states_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_5_9_8_384_1_384_8_1_gen
    PORT MAP(
      clken => attention_5_1_384_384_8_48_quantized_hidden_states_rsc_clken,
      q => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_q,
      re => attention_5_1_384_384_8_48_quantized_hidden_states_rsc_re,
      radr => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_radr,
      we => attention_5_1_384_384_8_48_quantized_hidden_states_rsc_we,
      d => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_d,
      wadr => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_d_d_1,
      q_d => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_q_d_1,
      radr_d => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_radr_d_1,
      re_d => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_re_d_iff,
      wadr_d => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_wadr_d_1,
      we_d => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_re_d_iff
    );
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_q <= attention_5_1_384_384_8_48_quantized_hidden_states_rsc_q;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsc_radr <= attention_5_1_384_384_8_48_quantized_hidden_states_rsci_radr;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsc_d <= attention_5_1_384_384_8_48_quantized_hidden_states_rsci_d;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsc_wadr <= attention_5_1_384_384_8_48_quantized_hidden_states_rsci_wadr;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_d_d_1 <= attention_5_1_384_384_8_48_quantized_hidden_states_rsci_d_d;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_q_d <= attention_5_1_384_384_8_48_quantized_hidden_states_rsci_q_d_1;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_radr_d_1 <= attention_5_1_384_384_8_48_quantized_hidden_states_rsci_radr_d;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_wadr_d_1 <= attention_5_1_384_384_8_48_quantized_hidden_states_rsci_wadr_d;

  attention_5_1_384_384_8_48_q_proj_re_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_6_9_40_384_1_384_40_1_gen
    PORT MAP(
      clken => attention_5_1_384_384_8_48_q_proj_re_rsc_clken,
      q => attention_5_1_384_384_8_48_q_proj_re_rsci_q,
      re => attention_5_1_384_384_8_48_q_proj_re_rsc_re,
      radr => attention_5_1_384_384_8_48_q_proj_re_rsci_radr,
      we => attention_5_1_384_384_8_48_q_proj_re_rsc_we,
      d => attention_5_1_384_384_8_48_q_proj_re_rsci_d,
      wadr => attention_5_1_384_384_8_48_q_proj_re_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => attention_5_1_384_384_8_48_q_proj_re_rsci_d_d_1,
      q_d => attention_5_1_384_384_8_48_q_proj_re_rsci_q_d_1,
      radr_d => attention_5_1_384_384_8_48_q_proj_re_rsci_radr_d_1,
      re_d => attention_5_1_384_384_8_48_q_proj_re_rsci_re_d_iff,
      wadr_d => attention_5_1_384_384_8_48_q_proj_re_rsci_wadr_d_1,
      we_d => attention_5_1_384_384_8_48_q_proj_re_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => attention_5_1_384_384_8_48_q_proj_re_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => attention_5_1_384_384_8_48_q_proj_re_rsci_re_d_iff
    );
  attention_5_1_384_384_8_48_q_proj_re_rsci_q <= attention_5_1_384_384_8_48_q_proj_re_rsc_q;
  attention_5_1_384_384_8_48_q_proj_re_rsc_radr <= attention_5_1_384_384_8_48_q_proj_re_rsci_radr;
  attention_5_1_384_384_8_48_q_proj_re_rsc_d <= attention_5_1_384_384_8_48_q_proj_re_rsci_d;
  attention_5_1_384_384_8_48_q_proj_re_rsc_wadr <= attention_5_1_384_384_8_48_q_proj_re_rsci_wadr;
  attention_5_1_384_384_8_48_q_proj_re_rsci_d_d_1 <= attention_5_1_384_384_8_48_q_proj_re_rsci_d_d;
  attention_5_1_384_384_8_48_q_proj_re_rsci_q_d <= attention_5_1_384_384_8_48_q_proj_re_rsci_q_d_1;
  attention_5_1_384_384_8_48_q_proj_re_rsci_radr_d_1 <= attention_5_1_384_384_8_48_q_proj_re_rsci_radr_d;
  attention_5_1_384_384_8_48_q_proj_re_rsci_wadr_d_1 <= attention_5_1_384_384_8_48_q_proj_re_rsci_wadr_d;

  attention_5_1_384_384_8_48_k_proj_re_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_7_9_40_384_1_384_40_1_gen
    PORT MAP(
      clken => attention_5_1_384_384_8_48_k_proj_re_rsc_clken,
      q => attention_5_1_384_384_8_48_k_proj_re_rsci_q,
      re => attention_5_1_384_384_8_48_k_proj_re_rsc_re,
      radr => attention_5_1_384_384_8_48_k_proj_re_rsci_radr,
      we => attention_5_1_384_384_8_48_k_proj_re_rsc_we,
      d => attention_5_1_384_384_8_48_k_proj_re_rsci_d,
      wadr => attention_5_1_384_384_8_48_k_proj_re_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => attention_5_1_384_384_8_48_k_proj_re_rsci_d_d_1,
      q_d => attention_5_1_384_384_8_48_k_proj_re_rsci_q_d_1,
      radr_d => attention_5_1_384_384_8_48_k_proj_re_rsci_radr_d_1,
      re_d => attention_5_1_384_384_8_48_q_proj_re_rsci_re_d_iff,
      wadr_d => attention_5_1_384_384_8_48_k_proj_re_rsci_wadr_d_1,
      we_d => attention_5_1_384_384_8_48_k_proj_re_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => attention_5_1_384_384_8_48_k_proj_re_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => attention_5_1_384_384_8_48_q_proj_re_rsci_re_d_iff
    );
  attention_5_1_384_384_8_48_k_proj_re_rsci_q <= attention_5_1_384_384_8_48_k_proj_re_rsc_q;
  attention_5_1_384_384_8_48_k_proj_re_rsc_radr <= attention_5_1_384_384_8_48_k_proj_re_rsci_radr;
  attention_5_1_384_384_8_48_k_proj_re_rsc_d <= attention_5_1_384_384_8_48_k_proj_re_rsci_d;
  attention_5_1_384_384_8_48_k_proj_re_rsc_wadr <= attention_5_1_384_384_8_48_k_proj_re_rsci_wadr;
  attention_5_1_384_384_8_48_k_proj_re_rsci_d_d_1 <= attention_5_1_384_384_8_48_k_proj_re_rsci_d_d;
  attention_5_1_384_384_8_48_k_proj_re_rsci_q_d <= attention_5_1_384_384_8_48_k_proj_re_rsci_q_d_1;
  attention_5_1_384_384_8_48_k_proj_re_rsci_radr_d_1 <= attention_5_1_384_384_8_48_k_proj_re_rsci_radr_d;
  attention_5_1_384_384_8_48_k_proj_re_rsci_wadr_d_1 <= attention_5_1_384_384_8_48_k_proj_re_rsci_wadr_d;

  attention_5_1_384_384_8_48_v_proj_re_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_8_9_40_384_1_384_40_1_gen
    PORT MAP(
      clken => attention_5_1_384_384_8_48_v_proj_re_rsc_clken,
      q => attention_5_1_384_384_8_48_v_proj_re_rsci_q,
      re => attention_5_1_384_384_8_48_v_proj_re_rsc_re,
      radr => attention_5_1_384_384_8_48_v_proj_re_rsci_radr,
      we => attention_5_1_384_384_8_48_v_proj_re_rsc_we,
      d => attention_5_1_384_384_8_48_v_proj_re_rsci_d,
      wadr => attention_5_1_384_384_8_48_v_proj_re_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => attention_5_1_384_384_8_48_v_proj_re_rsci_d_d_1,
      q_d => attention_5_1_384_384_8_48_v_proj_re_rsci_q_d_1,
      radr_d => attention_5_1_384_384_8_48_v_proj_re_rsci_radr_d_1,
      re_d => attention_5_1_384_384_8_48_v_proj_re_rsci_re_d_iff,
      wadr_d => attention_5_1_384_384_8_48_v_proj_re_rsci_wadr_d_1,
      we_d => attention_5_1_384_384_8_48_v_proj_re_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => attention_5_1_384_384_8_48_v_proj_re_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => attention_5_1_384_384_8_48_v_proj_re_rsci_re_d_iff
    );
  attention_5_1_384_384_8_48_v_proj_re_rsci_q <= attention_5_1_384_384_8_48_v_proj_re_rsc_q;
  attention_5_1_384_384_8_48_v_proj_re_rsc_radr <= attention_5_1_384_384_8_48_v_proj_re_rsci_radr;
  attention_5_1_384_384_8_48_v_proj_re_rsc_d <= attention_5_1_384_384_8_48_v_proj_re_rsci_d;
  attention_5_1_384_384_8_48_v_proj_re_rsc_wadr <= attention_5_1_384_384_8_48_v_proj_re_rsci_wadr;
  attention_5_1_384_384_8_48_v_proj_re_rsci_d_d_1 <= attention_5_1_384_384_8_48_v_proj_re_rsci_d_d;
  attention_5_1_384_384_8_48_v_proj_re_rsci_q_d <= attention_5_1_384_384_8_48_v_proj_re_rsci_q_d_1;
  attention_5_1_384_384_8_48_v_proj_re_rsci_radr_d_1 <= attention_5_1_384_384_8_48_v_proj_re_rsci_radr_d;
  attention_5_1_384_384_8_48_v_proj_re_rsci_wadr_d_1 <= attention_5_1_384_384_8_48_v_proj_re_rsci_wadr_d;

  attention_5_1_384_384_8_48_q_proj_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_9_9_40_384_1_384_40_1_gen
    PORT MAP(
      clken => attention_5_1_384_384_8_48_q_proj_rsc_clken,
      q => attention_5_1_384_384_8_48_q_proj_rsci_q,
      re => attention_5_1_384_384_8_48_q_proj_rsc_re,
      radr => attention_5_1_384_384_8_48_q_proj_rsci_radr,
      we => attention_5_1_384_384_8_48_q_proj_rsc_we,
      d => attention_5_1_384_384_8_48_q_proj_rsci_d,
      wadr => attention_5_1_384_384_8_48_q_proj_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => attention_5_1_384_384_8_48_q_proj_rsci_d_d,
      q_d => attention_5_1_384_384_8_48_q_proj_rsci_q_d_1,
      radr_d => attention_5_1_384_384_8_48_q_proj_rsci_radr_d_1,
      re_d => attention_5_1_384_384_8_48_q_proj_rsci_re_d_iff,
      wadr_d => attention_5_1_384_384_8_48_q_proj_rsci_wadr_d_1,
      we_d => attention_5_1_384_384_8_48_q_proj_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => attention_5_1_384_384_8_48_q_proj_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => attention_5_1_384_384_8_48_q_proj_rsci_re_d_iff
    );
  attention_5_1_384_384_8_48_q_proj_rsci_q <= attention_5_1_384_384_8_48_q_proj_rsc_q;
  attention_5_1_384_384_8_48_q_proj_rsc_radr <= attention_5_1_384_384_8_48_q_proj_rsci_radr;
  attention_5_1_384_384_8_48_q_proj_rsc_d <= attention_5_1_384_384_8_48_q_proj_rsci_d;
  attention_5_1_384_384_8_48_q_proj_rsc_wadr <= attention_5_1_384_384_8_48_q_proj_rsci_wadr;
  attention_5_1_384_384_8_48_q_proj_rsci_d_d <= attention_5_1_384_384_8_48_q_proj_re_rsci_q_d;
  attention_5_1_384_384_8_48_q_proj_rsci_q_d <= attention_5_1_384_384_8_48_q_proj_rsci_q_d_1;
  attention_5_1_384_384_8_48_q_proj_rsci_radr_d_1 <= attention_5_1_384_384_8_48_q_proj_rsci_radr_d;
  attention_5_1_384_384_8_48_q_proj_rsci_wadr_d_1 <= attention_5_1_384_384_8_48_q_proj_rsci_wadr_d;

  attention_5_1_384_384_8_48_k_proj_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_10_9_40_384_1_384_40_1_gen
    PORT MAP(
      clken => attention_5_1_384_384_8_48_k_proj_rsc_clken,
      q => attention_5_1_384_384_8_48_k_proj_rsci_q,
      re => attention_5_1_384_384_8_48_k_proj_rsc_re,
      radr => attention_5_1_384_384_8_48_k_proj_rsci_radr,
      we => attention_5_1_384_384_8_48_k_proj_rsc_we,
      d => attention_5_1_384_384_8_48_k_proj_rsci_d,
      wadr => attention_5_1_384_384_8_48_k_proj_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => attention_5_1_384_384_8_48_k_proj_rsci_d_d,
      q_d => attention_5_1_384_384_8_48_k_proj_rsci_q_d_1,
      radr_d => attention_5_1_384_384_8_48_k_proj_rsci_radr_d_1,
      re_d => attention_5_1_384_384_8_48_q_proj_rsci_re_d_iff,
      wadr_d => attention_5_1_384_384_8_48_k_proj_rsci_wadr_d_1,
      we_d => attention_5_1_384_384_8_48_q_proj_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => attention_5_1_384_384_8_48_q_proj_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => attention_5_1_384_384_8_48_q_proj_rsci_re_d_iff
    );
  attention_5_1_384_384_8_48_k_proj_rsci_q <= attention_5_1_384_384_8_48_k_proj_rsc_q;
  attention_5_1_384_384_8_48_k_proj_rsc_radr <= attention_5_1_384_384_8_48_k_proj_rsci_radr;
  attention_5_1_384_384_8_48_k_proj_rsc_d <= attention_5_1_384_384_8_48_k_proj_rsci_d;
  attention_5_1_384_384_8_48_k_proj_rsc_wadr <= attention_5_1_384_384_8_48_k_proj_rsci_wadr;
  attention_5_1_384_384_8_48_k_proj_rsci_d_d <= attention_5_1_384_384_8_48_k_proj_re_rsci_q_d;
  attention_5_1_384_384_8_48_k_proj_rsci_q_d <= attention_5_1_384_384_8_48_k_proj_rsci_q_d_1;
  attention_5_1_384_384_8_48_k_proj_rsci_radr_d_1 <= attention_5_1_384_384_8_48_k_proj_rsci_radr_d;
  attention_5_1_384_384_8_48_k_proj_rsci_wadr_d_1 <= attention_5_1_384_384_8_48_k_proj_rsci_wadr_d;

  attention_5_1_384_384_8_48_v_proj_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_11_9_40_384_1_384_40_1_gen
    PORT MAP(
      clken => attention_5_1_384_384_8_48_v_proj_rsc_clken,
      q => attention_5_1_384_384_8_48_v_proj_rsci_q,
      re => attention_5_1_384_384_8_48_v_proj_rsc_re,
      radr => attention_5_1_384_384_8_48_v_proj_rsci_radr,
      we => attention_5_1_384_384_8_48_v_proj_rsc_we,
      d => attention_5_1_384_384_8_48_v_proj_rsci_d,
      wadr => attention_5_1_384_384_8_48_v_proj_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => attention_5_1_384_384_8_48_v_proj_rsci_d_d,
      q_d => attention_5_1_384_384_8_48_v_proj_rsci_q_d_1,
      radr_d => attention_5_1_384_384_8_48_v_proj_rsci_radr_d_1,
      re_d => attention_5_1_384_384_8_48_v_proj_rsci_re_d_iff,
      wadr_d => attention_5_1_384_384_8_48_v_proj_rsci_wadr_d_1,
      we_d => attention_5_1_384_384_8_48_v_proj_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => attention_5_1_384_384_8_48_v_proj_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => attention_5_1_384_384_8_48_v_proj_rsci_re_d_iff
    );
  attention_5_1_384_384_8_48_v_proj_rsci_q <= attention_5_1_384_384_8_48_v_proj_rsc_q;
  attention_5_1_384_384_8_48_v_proj_rsc_radr <= attention_5_1_384_384_8_48_v_proj_rsci_radr;
  attention_5_1_384_384_8_48_v_proj_rsc_d <= attention_5_1_384_384_8_48_v_proj_rsci_d;
  attention_5_1_384_384_8_48_v_proj_rsc_wadr <= attention_5_1_384_384_8_48_v_proj_rsci_wadr;
  attention_5_1_384_384_8_48_v_proj_rsci_d_d <= attention_5_1_384_384_8_48_v_proj_re_rsci_q_d;
  attention_5_1_384_384_8_48_v_proj_rsci_q_d <= attention_5_1_384_384_8_48_v_proj_rsci_q_d_1;
  attention_5_1_384_384_8_48_v_proj_rsci_radr_d_1 <= attention_5_1_384_384_8_48_v_proj_rsci_radr_d;
  attention_5_1_384_384_8_48_v_proj_rsci_wadr_d_1 <= attention_5_1_384_384_8_48_v_proj_rsci_wadr_d;

  attention_5_1_384_384_8_48_q_embed_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_12_9_40_384_1_384_40_1_gen
    PORT MAP(
      clken => attention_5_1_384_384_8_48_q_embed_rsc_clken,
      q => attention_5_1_384_384_8_48_q_embed_rsci_q,
      re => attention_5_1_384_384_8_48_q_embed_rsc_re,
      radr => attention_5_1_384_384_8_48_q_embed_rsci_radr,
      we => attention_5_1_384_384_8_48_q_embed_rsc_we,
      d => attention_5_1_384_384_8_48_q_embed_rsci_d,
      wadr => attention_5_1_384_384_8_48_q_embed_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => attention_5_1_384_384_8_48_q_embed_rsci_d_d_1,
      q_d => attention_5_1_384_384_8_48_q_embed_rsci_q_d_1,
      radr_d => attention_5_1_384_384_8_48_q_embed_rsci_radr_d_1,
      re_d => attention_5_1_384_384_8_48_q_embed_rsci_re_d_iff,
      wadr_d => attention_5_1_384_384_8_48_q_embed_rsci_wadr_d_1,
      we_d => attention_5_1_384_384_8_48_q_embed_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => attention_5_1_384_384_8_48_q_embed_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => attention_5_1_384_384_8_48_q_embed_rsci_re_d_iff
    );
  attention_5_1_384_384_8_48_q_embed_rsci_q <= attention_5_1_384_384_8_48_q_embed_rsc_q;
  attention_5_1_384_384_8_48_q_embed_rsc_radr <= attention_5_1_384_384_8_48_q_embed_rsci_radr;
  attention_5_1_384_384_8_48_q_embed_rsc_d <= attention_5_1_384_384_8_48_q_embed_rsci_d;
  attention_5_1_384_384_8_48_q_embed_rsc_wadr <= attention_5_1_384_384_8_48_q_embed_rsci_wadr;
  attention_5_1_384_384_8_48_q_embed_rsci_d_d_1 <= attention_5_1_384_384_8_48_q_embed_rsci_d_d;
  attention_5_1_384_384_8_48_q_embed_rsci_q_d <= attention_5_1_384_384_8_48_q_embed_rsci_q_d_1;
  attention_5_1_384_384_8_48_q_embed_rsci_radr_d_1 <= attention_5_1_384_384_8_48_q_embed_rsci_radr_d;
  attention_5_1_384_384_8_48_q_embed_rsci_wadr_d_1 <= attention_5_1_384_384_8_48_q_embed_rsci_wadr_d;

  attention_5_1_384_384_8_48_k_embed_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_13_9_40_384_1_384_40_1_gen
    PORT MAP(
      clken => attention_5_1_384_384_8_48_k_embed_rsc_clken,
      q => attention_5_1_384_384_8_48_k_embed_rsci_q,
      re => attention_5_1_384_384_8_48_k_embed_rsc_re,
      radr => attention_5_1_384_384_8_48_k_embed_rsci_radr,
      we => attention_5_1_384_384_8_48_k_embed_rsc_we,
      d => attention_5_1_384_384_8_48_k_embed_rsci_d,
      wadr => attention_5_1_384_384_8_48_k_embed_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => attention_5_1_384_384_8_48_k_embed_rsci_d_d_1,
      q_d => attention_5_1_384_384_8_48_k_embed_rsci_q_d_1,
      radr_d => attention_5_1_384_384_8_48_k_embed_rsci_radr_d_1,
      re_d => attention_5_1_384_384_8_48_k_embed_rsci_re_d_iff,
      wadr_d => attention_5_1_384_384_8_48_k_embed_rsci_wadr_d_1,
      we_d => attention_5_1_384_384_8_48_q_embed_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => attention_5_1_384_384_8_48_q_embed_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => attention_5_1_384_384_8_48_k_embed_rsci_re_d_iff
    );
  attention_5_1_384_384_8_48_k_embed_rsci_q <= attention_5_1_384_384_8_48_k_embed_rsc_q;
  attention_5_1_384_384_8_48_k_embed_rsc_radr <= attention_5_1_384_384_8_48_k_embed_rsci_radr;
  attention_5_1_384_384_8_48_k_embed_rsc_d <= attention_5_1_384_384_8_48_k_embed_rsci_d;
  attention_5_1_384_384_8_48_k_embed_rsc_wadr <= attention_5_1_384_384_8_48_k_embed_rsci_wadr;
  attention_5_1_384_384_8_48_k_embed_rsci_d_d_1 <= attention_5_1_384_384_8_48_k_embed_rsci_d_d;
  attention_5_1_384_384_8_48_k_embed_rsci_q_d <= attention_5_1_384_384_8_48_k_embed_rsci_q_d_1;
  attention_5_1_384_384_8_48_k_embed_rsci_radr_d_1 <= attention_5_1_384_384_8_48_k_embed_rsci_radr_d;
  attention_5_1_384_384_8_48_k_embed_rsci_wadr_d_1 <= attention_5_1_384_384_8_48_k_embed_rsci_wadr_d;

  attention_5_1_384_384_8_48_k_cache_upd_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_14_12_40_2304_1_2304_40_1_gen
    PORT MAP(
      clken => attention_5_1_384_384_8_48_k_cache_upd_rsc_clken,
      q => attention_5_1_384_384_8_48_k_cache_upd_rsci_q,
      re => attention_5_1_384_384_8_48_k_cache_upd_rsc_re,
      radr => attention_5_1_384_384_8_48_k_cache_upd_rsci_radr,
      we => attention_5_1_384_384_8_48_k_cache_upd_rsc_we,
      d => attention_5_1_384_384_8_48_k_cache_upd_rsci_d,
      wadr => attention_5_1_384_384_8_48_k_cache_upd_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => attention_5_1_384_384_8_48_k_cache_upd_rsci_d_d_1,
      q_d => attention_5_1_384_384_8_48_k_cache_upd_rsci_q_d_1,
      radr_d => attention_5_1_384_384_8_48_k_cache_upd_rsci_radr_d_1,
      re_d => attention_5_1_384_384_8_48_k_cache_upd_rsci_re_d_iff,
      wadr_d => attention_5_1_384_384_8_48_k_cache_upd_rsci_wadr_d_1,
      we_d => attention_5_1_384_384_8_48_k_cache_upd_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => attention_5_1_384_384_8_48_k_cache_upd_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => attention_5_1_384_384_8_48_k_cache_upd_rsci_re_d_iff
    );
  attention_5_1_384_384_8_48_k_cache_upd_rsci_q <= attention_5_1_384_384_8_48_k_cache_upd_rsc_q;
  attention_5_1_384_384_8_48_k_cache_upd_rsc_radr <= attention_5_1_384_384_8_48_k_cache_upd_rsci_radr;
  attention_5_1_384_384_8_48_k_cache_upd_rsc_d <= attention_5_1_384_384_8_48_k_cache_upd_rsci_d;
  attention_5_1_384_384_8_48_k_cache_upd_rsc_wadr <= attention_5_1_384_384_8_48_k_cache_upd_rsci_wadr;
  attention_5_1_384_384_8_48_k_cache_upd_rsci_d_d_1 <= attention_5_1_384_384_8_48_k_cache_upd_rsci_d_d;
  attention_5_1_384_384_8_48_k_cache_upd_rsci_q_d <= attention_5_1_384_384_8_48_k_cache_upd_rsci_q_d_1;
  attention_5_1_384_384_8_48_k_cache_upd_rsci_radr_d_1 <= attention_5_1_384_384_8_48_k_cache_upd_rsci_radr_d;
  attention_5_1_384_384_8_48_k_cache_upd_rsci_wadr_d_1 <= attention_5_1_384_384_8_48_k_cache_upd_rsci_wadr_d;

  attention_5_1_384_384_8_48_v_cache_upd_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_15_12_40_2304_1_2304_40_1_gen
    PORT MAP(
      clken => attention_5_1_384_384_8_48_v_cache_upd_rsc_clken,
      q => attention_5_1_384_384_8_48_v_cache_upd_rsci_q,
      re => attention_5_1_384_384_8_48_v_cache_upd_rsc_re,
      radr => attention_5_1_384_384_8_48_v_cache_upd_rsci_radr,
      we => attention_5_1_384_384_8_48_v_cache_upd_rsc_we,
      d => attention_5_1_384_384_8_48_v_cache_upd_rsci_d,
      wadr => attention_5_1_384_384_8_48_v_cache_upd_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => attention_5_1_384_384_8_48_v_cache_upd_rsci_d_d_1,
      q_d => attention_5_1_384_384_8_48_v_cache_upd_rsci_q_d_1,
      radr_d => attention_5_1_384_384_8_48_v_cache_upd_rsci_radr_d_1,
      re_d => attention_5_1_384_384_8_48_v_cache_upd_rsci_re_d_iff,
      wadr_d => attention_5_1_384_384_8_48_v_cache_upd_rsci_wadr_d_1,
      we_d => attention_5_1_384_384_8_48_k_cache_upd_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => attention_5_1_384_384_8_48_k_cache_upd_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => attention_5_1_384_384_8_48_v_cache_upd_rsci_re_d_iff
    );
  attention_5_1_384_384_8_48_v_cache_upd_rsci_q <= attention_5_1_384_384_8_48_v_cache_upd_rsc_q;
  attention_5_1_384_384_8_48_v_cache_upd_rsc_radr <= attention_5_1_384_384_8_48_v_cache_upd_rsci_radr;
  attention_5_1_384_384_8_48_v_cache_upd_rsc_d <= attention_5_1_384_384_8_48_v_cache_upd_rsci_d;
  attention_5_1_384_384_8_48_v_cache_upd_rsc_wadr <= attention_5_1_384_384_8_48_v_cache_upd_rsci_wadr;
  attention_5_1_384_384_8_48_v_cache_upd_rsci_d_d_1 <= attention_5_1_384_384_8_48_v_cache_upd_rsci_d_d;
  attention_5_1_384_384_8_48_v_cache_upd_rsci_q_d <= attention_5_1_384_384_8_48_v_cache_upd_rsci_q_d_1;
  attention_5_1_384_384_8_48_v_cache_upd_rsci_radr_d_1 <= attention_5_1_384_384_8_48_v_cache_upd_rsci_radr_d;
  attention_5_1_384_384_8_48_v_cache_upd_rsci_wadr_d_1 <= attention_5_1_384_384_8_48_v_cache_upd_rsci_wadr_d;

  attention_5_1_384_384_8_48_k_proj_transposed_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_16_12_40_2304_1_2304_40_1_gen
    PORT MAP(
      clken => attention_5_1_384_384_8_48_k_proj_transposed_rsc_clken,
      q => attention_5_1_384_384_8_48_k_proj_transposed_rsci_q,
      re => attention_5_1_384_384_8_48_k_proj_transposed_rsc_re,
      radr => attention_5_1_384_384_8_48_k_proj_transposed_rsci_radr,
      we => attention_5_1_384_384_8_48_k_proj_transposed_rsc_we,
      d => attention_5_1_384_384_8_48_k_proj_transposed_rsci_d,
      wadr => attention_5_1_384_384_8_48_k_proj_transposed_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => attention_5_1_384_384_8_48_k_proj_transposed_rsci_d_d,
      q_d => attention_5_1_384_384_8_48_k_proj_transposed_rsci_q_d_1,
      radr_d => attention_5_1_384_384_8_48_k_proj_transposed_rsci_radr_d_1,
      re_d => attention_5_1_384_384_8_48_q_embed_rsci_re_d_iff,
      wadr_d => attention_5_1_384_384_8_48_k_proj_transposed_rsci_wadr_d_1,
      we_d => attention_5_1_384_384_8_48_k_proj_transposed_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => attention_5_1_384_384_8_48_k_proj_transposed_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => attention_5_1_384_384_8_48_q_embed_rsci_re_d_iff
    );
  attention_5_1_384_384_8_48_k_proj_transposed_rsci_q <= attention_5_1_384_384_8_48_k_proj_transposed_rsc_q;
  attention_5_1_384_384_8_48_k_proj_transposed_rsc_radr <= attention_5_1_384_384_8_48_k_proj_transposed_rsci_radr;
  attention_5_1_384_384_8_48_k_proj_transposed_rsc_d <= attention_5_1_384_384_8_48_k_proj_transposed_rsci_d;
  attention_5_1_384_384_8_48_k_proj_transposed_rsc_wadr <= attention_5_1_384_384_8_48_k_proj_transposed_rsci_wadr;
  attention_5_1_384_384_8_48_k_proj_transposed_rsci_d_d <= attention_5_1_384_384_8_48_k_cache_upd_rsci_q_d;
  attention_5_1_384_384_8_48_k_proj_transposed_rsci_q_d <= attention_5_1_384_384_8_48_k_proj_transposed_rsci_q_d_1;
  attention_5_1_384_384_8_48_k_proj_transposed_rsci_radr_d_1 <= attention_5_1_384_384_8_48_k_proj_transposed_rsci_radr_d;
  attention_5_1_384_384_8_48_k_proj_transposed_rsci_wadr_d_1 <= attention_5_1_384_384_8_48_k_proj_transposed_rsci_wadr_d;

  attention_5_1_384_384_8_48_attn_weights_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_17_6_40_48_1_48_40_1_gen
    PORT MAP(
      clken => attention_5_1_384_384_8_48_attn_weights_rsc_clken,
      q => attention_5_1_384_384_8_48_attn_weights_rsci_q,
      re => attention_5_1_384_384_8_48_attn_weights_rsc_re,
      radr => attention_5_1_384_384_8_48_attn_weights_rsci_radr,
      we => attention_5_1_384_384_8_48_attn_weights_rsc_we,
      d => attention_5_1_384_384_8_48_attn_weights_rsci_d,
      wadr => attention_5_1_384_384_8_48_attn_weights_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => attention_5_1_384_384_8_48_attn_weights_rsci_d_d_1,
      q_d => attention_5_1_384_384_8_48_attn_weights_rsci_q_d_1,
      radr_d => attention_5_1_384_384_8_48_attn_weights_rsci_radr_d_1,
      re_d => attention_5_1_384_384_8_48_attn_weights_rsci_re_d_iff,
      wadr_d => attention_5_1_384_384_8_48_attn_weights_rsci_wadr_d_1,
      we_d => attention_5_1_384_384_8_48_attn_weights_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => attention_5_1_384_384_8_48_attn_weights_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => attention_5_1_384_384_8_48_attn_weights_rsci_re_d_iff
    );
  attention_5_1_384_384_8_48_attn_weights_rsci_q <= attention_5_1_384_384_8_48_attn_weights_rsc_q;
  attention_5_1_384_384_8_48_attn_weights_rsc_radr <= attention_5_1_384_384_8_48_attn_weights_rsci_radr;
  attention_5_1_384_384_8_48_attn_weights_rsc_d <= attention_5_1_384_384_8_48_attn_weights_rsci_d;
  attention_5_1_384_384_8_48_attn_weights_rsc_wadr <= attention_5_1_384_384_8_48_attn_weights_rsci_wadr;
  attention_5_1_384_384_8_48_attn_weights_rsci_d_d_1 <= attention_5_1_384_384_8_48_attn_weights_rsci_d_d;
  attention_5_1_384_384_8_48_attn_weights_rsci_q_d <= attention_5_1_384_384_8_48_attn_weights_rsci_q_d_1;
  attention_5_1_384_384_8_48_attn_weights_rsci_radr_d_1 <= attention_5_1_384_384_8_48_attn_weights_rsci_radr_d;
  attention_5_1_384_384_8_48_attn_weights_rsci_wadr_d_1 <= attention_5_1_384_384_8_48_attn_weights_rsci_wadr_d;

  attention_5_1_384_384_8_48_attn_output_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_18_9_40_384_1_384_40_1_gen
    PORT MAP(
      clken => attention_5_1_384_384_8_48_attn_output_rsc_clken,
      q => attention_5_1_384_384_8_48_attn_output_rsci_q,
      re => attention_5_1_384_384_8_48_attn_output_rsc_re,
      radr => attention_5_1_384_384_8_48_attn_output_rsci_radr,
      we => attention_5_1_384_384_8_48_attn_output_rsc_we,
      d => attention_5_1_384_384_8_48_attn_output_rsci_d,
      wadr => attention_5_1_384_384_8_48_attn_output_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => attention_5_1_384_384_8_48_attn_output_rsci_d_d_1,
      q_d => attention_5_1_384_384_8_48_attn_output_rsci_q_d_1,
      radr_d => attention_5_1_384_384_8_48_attn_output_rsci_radr_d_1,
      re_d => attention_5_1_384_384_8_48_attn_output_rsci_re_d_iff,
      wadr_d => attention_5_1_384_384_8_48_attn_output_rsci_wadr_d_1,
      we_d => attention_5_1_384_384_8_48_attn_output_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => attention_5_1_384_384_8_48_attn_output_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => attention_5_1_384_384_8_48_attn_output_rsci_re_d_iff
    );
  attention_5_1_384_384_8_48_attn_output_rsci_q <= attention_5_1_384_384_8_48_attn_output_rsc_q;
  attention_5_1_384_384_8_48_attn_output_rsc_radr <= attention_5_1_384_384_8_48_attn_output_rsci_radr;
  attention_5_1_384_384_8_48_attn_output_rsc_d <= attention_5_1_384_384_8_48_attn_output_rsci_d;
  attention_5_1_384_384_8_48_attn_output_rsc_wadr <= attention_5_1_384_384_8_48_attn_output_rsci_wadr;
  attention_5_1_384_384_8_48_attn_output_rsci_d_d_1 <= attention_5_1_384_384_8_48_attn_output_rsci_d_d;
  attention_5_1_384_384_8_48_attn_output_rsci_q_d <= attention_5_1_384_384_8_48_attn_output_rsci_q_d_1;
  attention_5_1_384_384_8_48_attn_output_rsci_radr_d_1 <= attention_5_1_384_384_8_48_attn_output_rsci_radr_d;
  attention_5_1_384_384_8_48_attn_output_rsci_wadr_d_1 <= attention_5_1_384_384_8_48_attn_output_rsci_wadr_d;

  attention_5_1_384_384_8_48_attn_output_2D_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_19_9_40_384_1_384_40_1_gen
    PORT MAP(
      clken => attention_5_1_384_384_8_48_attn_output_2D_rsc_clken,
      q => attention_5_1_384_384_8_48_attn_output_2D_rsci_q,
      re => attention_5_1_384_384_8_48_attn_output_2D_rsc_re,
      radr => attention_5_1_384_384_8_48_attn_output_2D_rsci_radr,
      we => attention_5_1_384_384_8_48_attn_output_2D_rsc_we,
      d => attention_5_1_384_384_8_48_attn_output_2D_rsci_d,
      wadr => attention_5_1_384_384_8_48_attn_output_2D_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => attention_5_1_384_384_8_48_attn_output_2D_rsci_d_d_1,
      q_d => attention_5_1_384_384_8_48_attn_output_2D_rsci_q_d_1,
      radr_d => attention_5_1_384_384_8_48_attn_output_2D_rsci_radr_d_1,
      re_d => attention_5_1_384_384_8_48_attn_output_2D_rsci_re_d_iff,
      wadr_d => attention_5_1_384_384_8_48_attn_output_2D_rsci_wadr_d_1,
      we_d => attention_5_1_384_384_8_48_attn_output_2D_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => attention_5_1_384_384_8_48_attn_output_2D_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => attention_5_1_384_384_8_48_attn_output_2D_rsci_re_d_iff
    );
  attention_5_1_384_384_8_48_attn_output_2D_rsci_q <= attention_5_1_384_384_8_48_attn_output_2D_rsc_q;
  attention_5_1_384_384_8_48_attn_output_2D_rsc_radr <= attention_5_1_384_384_8_48_attn_output_2D_rsci_radr;
  attention_5_1_384_384_8_48_attn_output_2D_rsc_d <= attention_5_1_384_384_8_48_attn_output_2D_rsci_d;
  attention_5_1_384_384_8_48_attn_output_2D_rsc_wadr <= attention_5_1_384_384_8_48_attn_output_2D_rsci_wadr;
  attention_5_1_384_384_8_48_attn_output_2D_rsci_d_d_1 <= attention_5_1_384_384_8_48_attn_output_2D_rsci_d_d;
  attention_5_1_384_384_8_48_attn_output_2D_rsci_q_d <= attention_5_1_384_384_8_48_attn_output_2D_rsci_q_d_1;
  attention_5_1_384_384_8_48_attn_output_2D_rsci_radr_d_1 <= attention_5_1_384_384_8_48_attn_output_2D_rsci_radr_d;
  attention_5_1_384_384_8_48_attn_output_2D_rsci_wadr_d_1 <= attention_5_1_384_384_8_48_attn_output_2D_rsci_wadr_d;

  attention_5_1_384_384_8_48_quantized_final_output_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_20_9_8_384_1_384_8_1_gen
    PORT MAP(
      clken => attention_5_1_384_384_8_48_quantized_final_output_rsc_clken,
      q => attention_5_1_384_384_8_48_quantized_final_output_rsci_q,
      re => attention_5_1_384_384_8_48_quantized_final_output_rsc_re,
      radr => attention_5_1_384_384_8_48_quantized_final_output_rsci_radr,
      we => attention_5_1_384_384_8_48_quantized_final_output_rsc_we,
      d => attention_5_1_384_384_8_48_quantized_final_output_rsci_d,
      wadr => attention_5_1_384_384_8_48_quantized_final_output_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => attention_5_1_384_384_8_48_quantized_final_output_rsci_d_d,
      q_d => attention_5_1_384_384_8_48_quantized_final_output_rsci_q_d_1,
      radr_d => attention_5_1_384_384_8_48_quantized_final_output_rsci_radr_d_1,
      re_d => attention_5_1_384_384_8_48_quantized_final_output_rsci_re_d_iff,
      wadr_d => attention_5_1_384_384_8_48_quantized_final_output_rsci_wadr_d_1,
      we_d => attention_5_1_384_384_8_48_quantized_final_output_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => attention_5_1_384_384_8_48_quantized_final_output_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => attention_5_1_384_384_8_48_quantized_final_output_rsci_re_d_iff
    );
  attention_5_1_384_384_8_48_quantized_final_output_rsci_q <= attention_5_1_384_384_8_48_quantized_final_output_rsc_q;
  attention_5_1_384_384_8_48_quantized_final_output_rsc_radr <= attention_5_1_384_384_8_48_quantized_final_output_rsci_radr;
  attention_5_1_384_384_8_48_quantized_final_output_rsc_d <= attention_5_1_384_384_8_48_quantized_final_output_rsci_d;
  attention_5_1_384_384_8_48_quantized_final_output_rsc_wadr <= attention_5_1_384_384_8_48_quantized_final_output_rsci_wadr;
  attention_5_1_384_384_8_48_quantized_final_output_rsci_d_d <= attention_5_1_384_384_8_48_quantized_hidden_states_rsci_d_d;
  attention_5_1_384_384_8_48_quantized_final_output_rsci_q_d <= attention_5_1_384_384_8_48_quantized_final_output_rsci_q_d_1;
  attention_5_1_384_384_8_48_quantized_final_output_rsci_radr_d_1 <= attention_5_1_384_384_8_48_quantized_final_output_rsci_radr_d;
  attention_5_1_384_384_8_48_quantized_final_output_rsci_wadr_d_1 <= attention_5_1_384_384_8_48_quantized_final_output_rsci_wadr_d;

  apply_rotary_pos_emb_1_8_48_rotated_q_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_21_9_40_384_1_384_40_1_gen
    PORT MAP(
      clken => apply_rotary_pos_emb_1_8_48_rotated_q_rsc_clken,
      q => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_q,
      re => apply_rotary_pos_emb_1_8_48_rotated_q_rsc_re,
      radr => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_radr,
      we => apply_rotary_pos_emb_1_8_48_rotated_q_rsc_we,
      d => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_d,
      wadr => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_d_d_1,
      q_d => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_q_d_1,
      radr_d => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_radr_d_1,
      re_d => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_re_d_iff,
      wadr_d => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_wadr_d_1,
      we_d => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_re_d_iff
    );
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_q <= apply_rotary_pos_emb_1_8_48_rotated_q_rsc_q;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsc_radr <= apply_rotary_pos_emb_1_8_48_rotated_q_rsci_radr;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsc_d <= apply_rotary_pos_emb_1_8_48_rotated_q_rsci_d;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsc_wadr <= apply_rotary_pos_emb_1_8_48_rotated_q_rsci_wadr;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_d_d_1 <= apply_rotary_pos_emb_1_8_48_rotated_q_rsci_d_d;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_q_d <= apply_rotary_pos_emb_1_8_48_rotated_q_rsci_q_d_1;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_radr_d_1 <= apply_rotary_pos_emb_1_8_48_rotated_q_rsci_radr_d;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_wadr_d_1 <= apply_rotary_pos_emb_1_8_48_rotated_q_rsci_wadr_d;

  apply_rotary_pos_emb_1_8_48_rotated_k_rsci : dut_Xilinx_RAMS_BLOCK_1R1W_RBW_rwport_en_22_9_40_384_1_384_40_1_gen
    PORT MAP(
      clken => apply_rotary_pos_emb_1_8_48_rotated_k_rsc_clken,
      q => apply_rotary_pos_emb_1_8_48_rotated_k_rsci_q,
      re => apply_rotary_pos_emb_1_8_48_rotated_k_rsc_re,
      radr => apply_rotary_pos_emb_1_8_48_rotated_k_rsci_radr,
      we => apply_rotary_pos_emb_1_8_48_rotated_k_rsc_we,
      d => apply_rotary_pos_emb_1_8_48_rotated_k_rsci_d,
      wadr => apply_rotary_pos_emb_1_8_48_rotated_k_rsci_wadr,
      clken_d => input_rsci_clken_d,
      d_d => apply_rotary_pos_emb_1_8_48_rotated_k_rsci_d_d_1,
      q_d => apply_rotary_pos_emb_1_8_48_rotated_k_rsci_q_d_1,
      radr_d => apply_rotary_pos_emb_1_8_48_rotated_k_rsci_radr_d_1,
      re_d => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_re_d_iff,
      wadr_d => apply_rotary_pos_emb_1_8_48_rotated_k_rsci_wadr_d_1,
      we_d => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_we_d_iff,
      writeA_w_ram_ir_internal_WMASK_B_d => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_we_d_iff,
      readA_r_ram_ir_internal_RMASK_B_d => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_re_d_iff
    );
  apply_rotary_pos_emb_1_8_48_rotated_k_rsci_q <= apply_rotary_pos_emb_1_8_48_rotated_k_rsc_q;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsc_radr <= apply_rotary_pos_emb_1_8_48_rotated_k_rsci_radr;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsc_d <= apply_rotary_pos_emb_1_8_48_rotated_k_rsci_d;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsc_wadr <= apply_rotary_pos_emb_1_8_48_rotated_k_rsci_wadr;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsci_d_d_1 <= apply_rotary_pos_emb_1_8_48_rotated_k_rsci_d_d;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsci_q_d <= apply_rotary_pos_emb_1_8_48_rotated_k_rsci_q_d_1;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsci_radr_d_1 <= apply_rotary_pos_emb_1_8_48_rotated_k_rsci_radr_d;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsci_wadr_d_1 <= apply_rotary_pos_emb_1_8_48_rotated_k_rsci_wadr_d;

  dut_core_inst : dut_core
    PORT MAP(
      clk => clk,
      en => en,
      rst => rst,
      strm_in_rsc_dat => dut_core_inst_strm_in_rsc_dat,
      strm_in_rsc_vld => strm_in_rsc_vld,
      strm_in_rsc_rdy => strm_in_rsc_rdy,
      strm_out_rsc_dat => dut_core_inst_strm_out_rsc_dat,
      strm_out_rsc_vld => strm_out_rsc_vld,
      strm_out_rsc_rdy => strm_out_rsc_rdy,
      input_rsci_clken_d => input_rsci_clken_d,
      input_rsci_d_d => dut_core_inst_input_rsci_d_d,
      input_rsci_q_d => dut_core_inst_input_rsci_q_d,
      input_rsci_radr_d => dut_core_inst_input_rsci_radr_d,
      input_rsci_wadr_d => dut_core_inst_input_rsci_wadr_d,
      output_rsci_d_d => dut_core_inst_output_rsci_d_d,
      output_rsci_q_d => dut_core_inst_output_rsci_q_d,
      output_rsci_radr_d => dut_core_inst_output_rsci_radr_d,
      output_rsci_wadr_d => dut_core_inst_output_rsci_wadr_d,
      attention_5_1_384_384_8_48_quantized_hidden_states_rsci_d_d => dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_d_d,
      attention_5_1_384_384_8_48_quantized_hidden_states_rsci_q_d => dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_q_d,
      attention_5_1_384_384_8_48_quantized_hidden_states_rsci_radr_d => dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_radr_d,
      attention_5_1_384_384_8_48_quantized_hidden_states_rsci_wadr_d => dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_wadr_d,
      attention_5_1_384_384_8_48_q_proj_re_rsci_d_d => dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_d_d,
      attention_5_1_384_384_8_48_q_proj_re_rsci_q_d => dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_q_d,
      attention_5_1_384_384_8_48_q_proj_re_rsci_radr_d => dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_radr_d,
      attention_5_1_384_384_8_48_q_proj_re_rsci_wadr_d => dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_wadr_d,
      attention_5_1_384_384_8_48_k_proj_re_rsci_d_d => dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_d_d,
      attention_5_1_384_384_8_48_k_proj_re_rsci_q_d => dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_q_d,
      attention_5_1_384_384_8_48_k_proj_re_rsci_radr_d => dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_radr_d,
      attention_5_1_384_384_8_48_k_proj_re_rsci_wadr_d => dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_wadr_d,
      attention_5_1_384_384_8_48_v_proj_re_rsci_d_d => dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_d_d,
      attention_5_1_384_384_8_48_v_proj_re_rsci_q_d => dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_q_d,
      attention_5_1_384_384_8_48_v_proj_re_rsci_radr_d => dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_radr_d,
      attention_5_1_384_384_8_48_v_proj_re_rsci_wadr_d => dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_wadr_d,
      attention_5_1_384_384_8_48_q_proj_rsci_q_d => dut_core_inst_attention_5_1_384_384_8_48_q_proj_rsci_q_d,
      attention_5_1_384_384_8_48_q_proj_rsci_radr_d => dut_core_inst_attention_5_1_384_384_8_48_q_proj_rsci_radr_d,
      attention_5_1_384_384_8_48_q_proj_rsci_wadr_d => dut_core_inst_attention_5_1_384_384_8_48_q_proj_rsci_wadr_d,
      attention_5_1_384_384_8_48_k_proj_rsci_q_d => dut_core_inst_attention_5_1_384_384_8_48_k_proj_rsci_q_d,
      attention_5_1_384_384_8_48_k_proj_rsci_radr_d => dut_core_inst_attention_5_1_384_384_8_48_k_proj_rsci_radr_d,
      attention_5_1_384_384_8_48_k_proj_rsci_wadr_d => dut_core_inst_attention_5_1_384_384_8_48_k_proj_rsci_wadr_d,
      attention_5_1_384_384_8_48_v_proj_rsci_q_d => dut_core_inst_attention_5_1_384_384_8_48_v_proj_rsci_q_d,
      attention_5_1_384_384_8_48_v_proj_rsci_radr_d => dut_core_inst_attention_5_1_384_384_8_48_v_proj_rsci_radr_d,
      attention_5_1_384_384_8_48_v_proj_rsci_wadr_d => dut_core_inst_attention_5_1_384_384_8_48_v_proj_rsci_wadr_d,
      attention_5_1_384_384_8_48_q_embed_rsci_d_d => dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_d_d,
      attention_5_1_384_384_8_48_q_embed_rsci_q_d => dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_q_d,
      attention_5_1_384_384_8_48_q_embed_rsci_radr_d => dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_radr_d,
      attention_5_1_384_384_8_48_q_embed_rsci_wadr_d => dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_wadr_d,
      attention_5_1_384_384_8_48_k_embed_rsci_d_d => dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_d_d,
      attention_5_1_384_384_8_48_k_embed_rsci_q_d => dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_q_d,
      attention_5_1_384_384_8_48_k_embed_rsci_radr_d => dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_radr_d,
      attention_5_1_384_384_8_48_k_embed_rsci_wadr_d => dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_wadr_d,
      attention_5_1_384_384_8_48_k_cache_upd_rsci_d_d => dut_core_inst_attention_5_1_384_384_8_48_k_cache_upd_rsci_d_d,
      attention_5_1_384_384_8_48_k_cache_upd_rsci_radr_d => dut_core_inst_attention_5_1_384_384_8_48_k_cache_upd_rsci_radr_d,
      attention_5_1_384_384_8_48_k_cache_upd_rsci_wadr_d => dut_core_inst_attention_5_1_384_384_8_48_k_cache_upd_rsci_wadr_d,
      attention_5_1_384_384_8_48_v_cache_upd_rsci_d_d => dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_d_d,
      attention_5_1_384_384_8_48_v_cache_upd_rsci_q_d => dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_q_d,
      attention_5_1_384_384_8_48_v_cache_upd_rsci_radr_d => dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_radr_d,
      attention_5_1_384_384_8_48_v_cache_upd_rsci_wadr_d => dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_wadr_d,
      attention_5_1_384_384_8_48_k_proj_transposed_rsci_q_d => dut_core_inst_attention_5_1_384_384_8_48_k_proj_transposed_rsci_q_d,
      attention_5_1_384_384_8_48_k_proj_transposed_rsci_radr_d => dut_core_inst_attention_5_1_384_384_8_48_k_proj_transposed_rsci_radr_d,
      attention_5_1_384_384_8_48_k_proj_transposed_rsci_wadr_d => dut_core_inst_attention_5_1_384_384_8_48_k_proj_transposed_rsci_wadr_d,
      attention_5_1_384_384_8_48_attn_weights_rsci_d_d => dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_d_d,
      attention_5_1_384_384_8_48_attn_weights_rsci_q_d => dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_q_d,
      attention_5_1_384_384_8_48_attn_weights_rsci_radr_d => dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_radr_d,
      attention_5_1_384_384_8_48_attn_weights_rsci_wadr_d => dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_wadr_d,
      attention_5_1_384_384_8_48_attn_output_rsci_d_d => dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_d_d,
      attention_5_1_384_384_8_48_attn_output_rsci_q_d => dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_q_d,
      attention_5_1_384_384_8_48_attn_output_rsci_radr_d => dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_radr_d,
      attention_5_1_384_384_8_48_attn_output_rsci_wadr_d => dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_wadr_d,
      attention_5_1_384_384_8_48_attn_output_2D_rsci_d_d => dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_d_d,
      attention_5_1_384_384_8_48_attn_output_2D_rsci_q_d => dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_q_d,
      attention_5_1_384_384_8_48_attn_output_2D_rsci_radr_d => dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_radr_d,
      attention_5_1_384_384_8_48_attn_output_2D_rsci_wadr_d => dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_wadr_d,
      attention_5_1_384_384_8_48_quantized_final_output_rsci_q_d => dut_core_inst_attention_5_1_384_384_8_48_quantized_final_output_rsci_q_d,
      attention_5_1_384_384_8_48_quantized_final_output_rsci_radr_d => dut_core_inst_attention_5_1_384_384_8_48_quantized_final_output_rsci_radr_d,
      attention_5_1_384_384_8_48_quantized_final_output_rsci_wadr_d => dut_core_inst_attention_5_1_384_384_8_48_quantized_final_output_rsci_wadr_d,
      apply_rotary_pos_emb_1_8_48_rotated_q_rsci_d_d => dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_d_d,
      apply_rotary_pos_emb_1_8_48_rotated_q_rsci_q_d => dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_q_d,
      apply_rotary_pos_emb_1_8_48_rotated_q_rsci_radr_d => dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_radr_d,
      apply_rotary_pos_emb_1_8_48_rotated_q_rsci_wadr_d => dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_wadr_d,
      apply_rotary_pos_emb_1_8_48_rotated_k_rsci_d_d => dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_d_d,
      apply_rotary_pos_emb_1_8_48_rotated_k_rsci_q_d => dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_q_d,
      apply_rotary_pos_emb_1_8_48_rotated_k_rsci_radr_d => dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_radr_d,
      apply_rotary_pos_emb_1_8_48_rotated_k_rsci_wadr_d => dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_wadr_d,
      rms_norm_384_div_cmp_a => dut_core_inst_rms_norm_384_div_cmp_a,
      rms_norm_384_div_cmp_b => dut_core_inst_rms_norm_384_div_cmp_b,
      rms_norm_384_div_cmp_z => dut_core_inst_rms_norm_384_div_cmp_z,
      input_rsci_re_d_pff => input_rsci_re_d_iff,
      input_rsci_we_d_pff => input_rsci_we_d_iff,
      output_rsci_re_d_pff => output_rsci_re_d_iff,
      output_rsci_we_d_pff => output_rsci_we_d_iff,
      attention_5_1_384_384_8_48_quantized_hidden_states_rsci_re_d_pff => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_re_d_iff,
      attention_5_1_384_384_8_48_quantized_hidden_states_rsci_we_d_pff => attention_5_1_384_384_8_48_quantized_hidden_states_rsci_we_d_iff,
      attention_5_1_384_384_8_48_q_proj_re_rsci_re_d_pff => attention_5_1_384_384_8_48_q_proj_re_rsci_re_d_iff,
      attention_5_1_384_384_8_48_q_proj_re_rsci_we_d_pff => attention_5_1_384_384_8_48_q_proj_re_rsci_we_d_iff,
      attention_5_1_384_384_8_48_k_proj_re_rsci_we_d_pff => attention_5_1_384_384_8_48_k_proj_re_rsci_we_d_iff,
      attention_5_1_384_384_8_48_v_proj_re_rsci_re_d_pff => attention_5_1_384_384_8_48_v_proj_re_rsci_re_d_iff,
      attention_5_1_384_384_8_48_v_proj_re_rsci_we_d_pff => attention_5_1_384_384_8_48_v_proj_re_rsci_we_d_iff,
      attention_5_1_384_384_8_48_q_proj_rsci_re_d_pff => attention_5_1_384_384_8_48_q_proj_rsci_re_d_iff,
      attention_5_1_384_384_8_48_q_proj_rsci_we_d_pff => attention_5_1_384_384_8_48_q_proj_rsci_we_d_iff,
      attention_5_1_384_384_8_48_v_proj_rsci_re_d_pff => attention_5_1_384_384_8_48_v_proj_rsci_re_d_iff,
      attention_5_1_384_384_8_48_v_proj_rsci_we_d_pff => attention_5_1_384_384_8_48_v_proj_rsci_we_d_iff,
      attention_5_1_384_384_8_48_q_embed_rsci_re_d_pff => attention_5_1_384_384_8_48_q_embed_rsci_re_d_iff,
      attention_5_1_384_384_8_48_q_embed_rsci_we_d_pff => attention_5_1_384_384_8_48_q_embed_rsci_we_d_iff,
      attention_5_1_384_384_8_48_k_embed_rsci_re_d_pff => attention_5_1_384_384_8_48_k_embed_rsci_re_d_iff,
      attention_5_1_384_384_8_48_k_cache_upd_rsci_re_d_pff => attention_5_1_384_384_8_48_k_cache_upd_rsci_re_d_iff,
      attention_5_1_384_384_8_48_k_cache_upd_rsci_we_d_pff => attention_5_1_384_384_8_48_k_cache_upd_rsci_we_d_iff,
      attention_5_1_384_384_8_48_v_cache_upd_rsci_re_d_pff => attention_5_1_384_384_8_48_v_cache_upd_rsci_re_d_iff,
      attention_5_1_384_384_8_48_k_proj_transposed_rsci_we_d_pff => attention_5_1_384_384_8_48_k_proj_transposed_rsci_we_d_iff,
      attention_5_1_384_384_8_48_attn_weights_rsci_re_d_pff => attention_5_1_384_384_8_48_attn_weights_rsci_re_d_iff,
      attention_5_1_384_384_8_48_attn_weights_rsci_we_d_pff => attention_5_1_384_384_8_48_attn_weights_rsci_we_d_iff,
      attention_5_1_384_384_8_48_attn_output_rsci_re_d_pff => attention_5_1_384_384_8_48_attn_output_rsci_re_d_iff,
      attention_5_1_384_384_8_48_attn_output_rsci_we_d_pff => attention_5_1_384_384_8_48_attn_output_rsci_we_d_iff,
      attention_5_1_384_384_8_48_attn_output_2D_rsci_re_d_pff => attention_5_1_384_384_8_48_attn_output_2D_rsci_re_d_iff,
      attention_5_1_384_384_8_48_attn_output_2D_rsci_we_d_pff => attention_5_1_384_384_8_48_attn_output_2D_rsci_we_d_iff,
      attention_5_1_384_384_8_48_quantized_final_output_rsci_re_d_pff => attention_5_1_384_384_8_48_quantized_final_output_rsci_re_d_iff,
      attention_5_1_384_384_8_48_quantized_final_output_rsci_we_d_pff => attention_5_1_384_384_8_48_quantized_final_output_rsci_we_d_iff,
      apply_rotary_pos_emb_1_8_48_rotated_q_rsci_re_d_pff => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_re_d_iff,
      apply_rotary_pos_emb_1_8_48_rotated_q_rsci_we_d_pff => apply_rotary_pos_emb_1_8_48_rotated_q_rsci_we_d_iff
    );
  dut_core_inst_strm_in_rsc_dat <= strm_in_rsc_dat;
  strm_out_rsc_dat <= dut_core_inst_strm_out_rsc_dat;
  input_rsci_d_d <= dut_core_inst_input_rsci_d_d;
  dut_core_inst_input_rsci_q_d <= input_rsci_q_d;
  input_rsci_radr_d <= dut_core_inst_input_rsci_radr_d;
  input_rsci_wadr_d <= dut_core_inst_input_rsci_wadr_d;
  output_rsci_d_d <= dut_core_inst_output_rsci_d_d;
  dut_core_inst_output_rsci_q_d <= output_rsci_q_d;
  output_rsci_radr_d <= dut_core_inst_output_rsci_radr_d;
  output_rsci_wadr_d <= dut_core_inst_output_rsci_wadr_d;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_d_d <= dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_d_d;
  dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_q_d <= attention_5_1_384_384_8_48_quantized_hidden_states_rsci_q_d;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_radr_d <= dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_radr_d;
  attention_5_1_384_384_8_48_quantized_hidden_states_rsci_wadr_d <= dut_core_inst_attention_5_1_384_384_8_48_quantized_hidden_states_rsci_wadr_d;
  attention_5_1_384_384_8_48_q_proj_re_rsci_d_d <= dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_d_d;
  dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_q_d <= attention_5_1_384_384_8_48_q_proj_re_rsci_q_d;
  attention_5_1_384_384_8_48_q_proj_re_rsci_radr_d <= dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_radr_d;
  attention_5_1_384_384_8_48_q_proj_re_rsci_wadr_d <= dut_core_inst_attention_5_1_384_384_8_48_q_proj_re_rsci_wadr_d;
  attention_5_1_384_384_8_48_k_proj_re_rsci_d_d <= dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_d_d;
  dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_q_d <= attention_5_1_384_384_8_48_k_proj_re_rsci_q_d;
  attention_5_1_384_384_8_48_k_proj_re_rsci_radr_d <= dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_radr_d;
  attention_5_1_384_384_8_48_k_proj_re_rsci_wadr_d <= dut_core_inst_attention_5_1_384_384_8_48_k_proj_re_rsci_wadr_d;
  attention_5_1_384_384_8_48_v_proj_re_rsci_d_d <= dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_d_d;
  dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_q_d <= attention_5_1_384_384_8_48_v_proj_re_rsci_q_d;
  attention_5_1_384_384_8_48_v_proj_re_rsci_radr_d <= dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_radr_d;
  attention_5_1_384_384_8_48_v_proj_re_rsci_wadr_d <= dut_core_inst_attention_5_1_384_384_8_48_v_proj_re_rsci_wadr_d;
  dut_core_inst_attention_5_1_384_384_8_48_q_proj_rsci_q_d <= attention_5_1_384_384_8_48_q_proj_rsci_q_d;
  attention_5_1_384_384_8_48_q_proj_rsci_radr_d <= dut_core_inst_attention_5_1_384_384_8_48_q_proj_rsci_radr_d;
  attention_5_1_384_384_8_48_q_proj_rsci_wadr_d <= dut_core_inst_attention_5_1_384_384_8_48_q_proj_rsci_wadr_d;
  dut_core_inst_attention_5_1_384_384_8_48_k_proj_rsci_q_d <= attention_5_1_384_384_8_48_k_proj_rsci_q_d;
  attention_5_1_384_384_8_48_k_proj_rsci_radr_d <= dut_core_inst_attention_5_1_384_384_8_48_k_proj_rsci_radr_d;
  attention_5_1_384_384_8_48_k_proj_rsci_wadr_d <= dut_core_inst_attention_5_1_384_384_8_48_k_proj_rsci_wadr_d;
  dut_core_inst_attention_5_1_384_384_8_48_v_proj_rsci_q_d <= attention_5_1_384_384_8_48_v_proj_rsci_q_d;
  attention_5_1_384_384_8_48_v_proj_rsci_radr_d <= dut_core_inst_attention_5_1_384_384_8_48_v_proj_rsci_radr_d;
  attention_5_1_384_384_8_48_v_proj_rsci_wadr_d <= dut_core_inst_attention_5_1_384_384_8_48_v_proj_rsci_wadr_d;
  attention_5_1_384_384_8_48_q_embed_rsci_d_d <= dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_d_d;
  dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_q_d <= attention_5_1_384_384_8_48_q_embed_rsci_q_d;
  attention_5_1_384_384_8_48_q_embed_rsci_radr_d <= dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_radr_d;
  attention_5_1_384_384_8_48_q_embed_rsci_wadr_d <= dut_core_inst_attention_5_1_384_384_8_48_q_embed_rsci_wadr_d;
  attention_5_1_384_384_8_48_k_embed_rsci_d_d <= dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_d_d;
  dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_q_d <= attention_5_1_384_384_8_48_k_embed_rsci_q_d;
  attention_5_1_384_384_8_48_k_embed_rsci_radr_d <= dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_radr_d;
  attention_5_1_384_384_8_48_k_embed_rsci_wadr_d <= dut_core_inst_attention_5_1_384_384_8_48_k_embed_rsci_wadr_d;
  attention_5_1_384_384_8_48_k_cache_upd_rsci_d_d <= dut_core_inst_attention_5_1_384_384_8_48_k_cache_upd_rsci_d_d;
  attention_5_1_384_384_8_48_k_cache_upd_rsci_radr_d <= dut_core_inst_attention_5_1_384_384_8_48_k_cache_upd_rsci_radr_d;
  attention_5_1_384_384_8_48_k_cache_upd_rsci_wadr_d <= dut_core_inst_attention_5_1_384_384_8_48_k_cache_upd_rsci_wadr_d;
  attention_5_1_384_384_8_48_v_cache_upd_rsci_d_d <= dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_d_d;
  dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_q_d <= attention_5_1_384_384_8_48_v_cache_upd_rsci_q_d;
  attention_5_1_384_384_8_48_v_cache_upd_rsci_radr_d <= dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_radr_d;
  attention_5_1_384_384_8_48_v_cache_upd_rsci_wadr_d <= dut_core_inst_attention_5_1_384_384_8_48_v_cache_upd_rsci_wadr_d;
  dut_core_inst_attention_5_1_384_384_8_48_k_proj_transposed_rsci_q_d <= attention_5_1_384_384_8_48_k_proj_transposed_rsci_q_d;
  attention_5_1_384_384_8_48_k_proj_transposed_rsci_radr_d <= dut_core_inst_attention_5_1_384_384_8_48_k_proj_transposed_rsci_radr_d;
  attention_5_1_384_384_8_48_k_proj_transposed_rsci_wadr_d <= dut_core_inst_attention_5_1_384_384_8_48_k_proj_transposed_rsci_wadr_d;
  attention_5_1_384_384_8_48_attn_weights_rsci_d_d <= dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_d_d;
  dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_q_d <= attention_5_1_384_384_8_48_attn_weights_rsci_q_d;
  attention_5_1_384_384_8_48_attn_weights_rsci_radr_d <= dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_radr_d;
  attention_5_1_384_384_8_48_attn_weights_rsci_wadr_d <= dut_core_inst_attention_5_1_384_384_8_48_attn_weights_rsci_wadr_d;
  attention_5_1_384_384_8_48_attn_output_rsci_d_d <= dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_d_d;
  dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_q_d <= attention_5_1_384_384_8_48_attn_output_rsci_q_d;
  attention_5_1_384_384_8_48_attn_output_rsci_radr_d <= dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_radr_d;
  attention_5_1_384_384_8_48_attn_output_rsci_wadr_d <= dut_core_inst_attention_5_1_384_384_8_48_attn_output_rsci_wadr_d;
  attention_5_1_384_384_8_48_attn_output_2D_rsci_d_d <= dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_d_d;
  dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_q_d <= attention_5_1_384_384_8_48_attn_output_2D_rsci_q_d;
  attention_5_1_384_384_8_48_attn_output_2D_rsci_radr_d <= dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_radr_d;
  attention_5_1_384_384_8_48_attn_output_2D_rsci_wadr_d <= dut_core_inst_attention_5_1_384_384_8_48_attn_output_2D_rsci_wadr_d;
  dut_core_inst_attention_5_1_384_384_8_48_quantized_final_output_rsci_q_d <= attention_5_1_384_384_8_48_quantized_final_output_rsci_q_d;
  attention_5_1_384_384_8_48_quantized_final_output_rsci_radr_d <= dut_core_inst_attention_5_1_384_384_8_48_quantized_final_output_rsci_radr_d;
  attention_5_1_384_384_8_48_quantized_final_output_rsci_wadr_d <= dut_core_inst_attention_5_1_384_384_8_48_quantized_final_output_rsci_wadr_d;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_d_d <= dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_d_d;
  dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_q_d <= apply_rotary_pos_emb_1_8_48_rotated_q_rsci_q_d;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_radr_d <= dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_radr_d;
  apply_rotary_pos_emb_1_8_48_rotated_q_rsci_wadr_d <= dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_q_rsci_wadr_d;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsci_d_d <= dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_d_d;
  dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_q_d <= apply_rotary_pos_emb_1_8_48_rotated_k_rsci_q_d;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsci_radr_d <= dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_radr_d;
  apply_rotary_pos_emb_1_8_48_rotated_k_rsci_wadr_d <= dut_core_inst_apply_rotary_pos_emb_1_8_48_rotated_k_rsci_wadr_d;
  rms_norm_384_div_cmp_a <= dut_core_inst_rms_norm_384_div_cmp_a;
  rms_norm_384_div_cmp_b <= dut_core_inst_rms_norm_384_div_cmp_b;
  dut_core_inst_rms_norm_384_div_cmp_z <= rms_norm_384_div_cmp_z;

END v14;



