// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _GEMM_3D_float2_HH_
#define _GEMM_3D_float2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "attention_fadd_32pcA.h"
#include "attention_fmul_32qcK.h"

namespace ap_rtl {

struct GEMM_3D_float2 : public sc_module {
    // Port declarations 17
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<7> > v246_0_address0;
    sc_out< sc_logic > v246_0_ce0;
    sc_in< sc_lv<32> > v246_0_q0;
    sc_out< sc_lv<14> > v247_address0;
    sc_out< sc_logic > v247_ce0;
    sc_in< sc_lv<32> > v247_q0;
    sc_out< sc_lv<11> > v248_0_address0;
    sc_out< sc_logic > v248_0_ce0;
    sc_out< sc_logic > v248_0_we0;
    sc_out< sc_lv<32> > v248_0_d0;
    sc_in< sc_lv<32> > v248_0_q0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    GEMM_3D_float2(sc_module_name name);
    SC_HAS_PROCESS(GEMM_3D_float2);

    ~GEMM_3D_float2();

    sc_trace_file* mVcdFile;

    attention_fadd_32pcA<1,5,32,32,32>* attention_fadd_32pcA_U83;
    attention_fmul_32qcK<1,4,32,32,32>* attention_fmul_32qcK_U84;
    sc_signal< sc_lv<16> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > h5_fu_147_p2;
    sc_signal< sc_lv<5> > h5_reg_306;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<10> > sext_ln430_fu_183_p1;
    sc_signal< sc_lv<10> > sext_ln430_reg_311;
    sc_signal< sc_lv<1> > icmp_ln426_fu_141_p2;
    sc_signal< sc_lv<12> > sub_ln433_fu_207_p2;
    sc_signal< sc_lv<12> > sub_ln433_reg_316;
    sc_signal< sc_lv<7> > add_ln428_fu_219_p2;
    sc_signal< sc_lv<7> > add_ln428_reg_324;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<15> > zext_ln433_1_fu_225_p1;
    sc_signal< sc_lv<15> > zext_ln433_1_reg_329;
    sc_signal< sc_lv<1> > icmp_ln428_fu_213_p2;
    sc_signal< sc_lv<11> > v248_0_addr_reg_334;
    sc_signal< sc_lv<3> > add_ln429_fu_249_p2;
    sc_signal< sc_lv<3> > add_ln429_reg_342;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<10> > add_ln430_fu_259_p2;
    sc_signal< sc_lv<10> > add_ln430_reg_347;
    sc_signal< sc_lv<1> > icmp_ln429_fu_243_p2;
    sc_signal< sc_lv<15> > add_ln431_fu_290_p2;
    sc_signal< sc_lv<15> > add_ln431_reg_352;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > v246_0_load_reg_367;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > v247_load_reg_372;
    sc_signal< sc_lv<32> > grp_fu_137_p2;
    sc_signal< sc_lv<32> > v_reg_377;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<32> > v248_0_load_reg_382;
    sc_signal< sc_lv<32> > grp_fu_133_p2;
    sc_signal< sc_lv<32> > v4_reg_387;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<5> > h5_0_reg_100;
    sc_signal< sc_lv<7> > j8_0_0_reg_111;
    sc_signal< sc_lv<3> > k8_0_0_reg_122;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<64> > sext_ln433_fu_238_p1;
    sc_signal< sc_lv<64> > sext_ln430_1_fu_295_p1;
    sc_signal< sc_lv<64> > zext_ln431_fu_299_p1;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<8> > tmp_49_fu_153_p3;
    sc_signal< sc_lv<6> > tmp_50_fu_165_p3;
    sc_signal< sc_lv<9> > zext_ln430_fu_161_p1;
    sc_signal< sc_lv<9> > zext_ln430_1_fu_173_p1;
    sc_signal< sc_lv<9> > sub_ln430_fu_177_p2;
    sc_signal< sc_lv<10> > tmp_52_fu_195_p3;
    sc_signal< sc_lv<12> > tmp_51_fu_187_p3;
    sc_signal< sc_lv<12> > zext_ln433_fu_203_p1;
    sc_signal< sc_lv<12> > zext_ln433_2_fu_229_p1;
    sc_signal< sc_lv<12> > add_ln433_fu_233_p2;
    sc_signal< sc_lv<10> > zext_ln430_2_fu_255_p1;
    sc_signal< sc_lv<8> > trunc_ln431_fu_264_p1;
    sc_signal< sc_lv<15> > p_shl4_cast_fu_268_p3;
    sc_signal< sc_lv<15> > p_shl5_cast_fu_276_p3;
    sc_signal< sc_lv<15> > sub_ln431_fu_284_p2;
    sc_signal< sc_lv<16> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<16> ap_ST_fsm_state1;
    static const sc_lv<16> ap_ST_fsm_state2;
    static const sc_lv<16> ap_ST_fsm_state3;
    static const sc_lv<16> ap_ST_fsm_state4;
    static const sc_lv<16> ap_ST_fsm_state5;
    static const sc_lv<16> ap_ST_fsm_state6;
    static const sc_lv<16> ap_ST_fsm_state7;
    static const sc_lv<16> ap_ST_fsm_state8;
    static const sc_lv<16> ap_ST_fsm_state9;
    static const sc_lv<16> ap_ST_fsm_state10;
    static const sc_lv<16> ap_ST_fsm_state11;
    static const sc_lv<16> ap_ST_fsm_state12;
    static const sc_lv<16> ap_ST_fsm_state13;
    static const sc_lv<16> ap_ST_fsm_state14;
    static const sc_lv<16> ap_ST_fsm_state15;
    static const sc_lv<16> ap_ST_fsm_state16;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<7> ap_const_lv7_60;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln428_fu_219_p2();
    void thread_add_ln429_fu_249_p2();
    void thread_add_ln430_fu_259_p2();
    void thread_add_ln431_fu_290_p2();
    void thread_add_ln433_fu_233_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_h5_fu_147_p2();
    void thread_icmp_ln426_fu_141_p2();
    void thread_icmp_ln428_fu_213_p2();
    void thread_icmp_ln429_fu_243_p2();
    void thread_p_shl4_cast_fu_268_p3();
    void thread_p_shl5_cast_fu_276_p3();
    void thread_sext_ln430_1_fu_295_p1();
    void thread_sext_ln430_fu_183_p1();
    void thread_sext_ln433_fu_238_p1();
    void thread_sub_ln430_fu_177_p2();
    void thread_sub_ln431_fu_284_p2();
    void thread_sub_ln433_fu_207_p2();
    void thread_tmp_49_fu_153_p3();
    void thread_tmp_50_fu_165_p3();
    void thread_tmp_51_fu_187_p3();
    void thread_tmp_52_fu_195_p3();
    void thread_trunc_ln431_fu_264_p1();
    void thread_v246_0_address0();
    void thread_v246_0_ce0();
    void thread_v247_address0();
    void thread_v247_ce0();
    void thread_v248_0_address0();
    void thread_v248_0_ce0();
    void thread_v248_0_d0();
    void thread_v248_0_we0();
    void thread_zext_ln430_1_fu_173_p1();
    void thread_zext_ln430_2_fu_255_p1();
    void thread_zext_ln430_fu_161_p1();
    void thread_zext_ln431_fu_299_p1();
    void thread_zext_ln433_1_fu_225_p1();
    void thread_zext_ln433_2_fu_229_p1();
    void thread_zext_ln433_fu_203_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
