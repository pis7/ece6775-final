// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="attention,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.386250,HLS_SYN_LAT=111494276,HLS_SYN_TPT=none,HLS_SYN_MEM=182,HLS_SYN_DSP=79,HLS_SYN_FF=18979,HLS_SYN_LUT=29792,HLS_VERSION=2019_2}" *)

module attention (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v258_address0,
        v258_ce0,
        v258_q0,
        v259_address0,
        v259_ce0,
        v259_q0,
        v260,
        v261_address0,
        v261_ce0,
        v261_q0,
        v262,
        v263_address0,
        v263_ce0,
        v263_q0,
        v264,
        v265_address0,
        v265_ce0,
        v265_q0,
        v266,
        v267_address0,
        v267_ce0,
        v267_q0,
        v268_address0,
        v268_ce0,
        v268_q0,
        v269_address0,
        v269_ce0,
        v269_q0,
        v270_address0,
        v270_ce0,
        v270_q0,
        v271_address0,
        v271_ce0,
        v271_q0,
        v272_address0,
        v272_ce0,
        v272_q0,
        v273,
        v274_address0,
        v274_ce0,
        v274_we0,
        v274_d0,
        v274_q0
);

parameter    ap_ST_fsm_state1 = 76'd1;
parameter    ap_ST_fsm_state2 = 76'd2;
parameter    ap_ST_fsm_state3 = 76'd4;
parameter    ap_ST_fsm_state4 = 76'd8;
parameter    ap_ST_fsm_state5 = 76'd16;
parameter    ap_ST_fsm_state6 = 76'd32;
parameter    ap_ST_fsm_state7 = 76'd64;
parameter    ap_ST_fsm_state8 = 76'd128;
parameter    ap_ST_fsm_state9 = 76'd256;
parameter    ap_ST_fsm_state10 = 76'd512;
parameter    ap_ST_fsm_state11 = 76'd1024;
parameter    ap_ST_fsm_state12 = 76'd2048;
parameter    ap_ST_fsm_state13 = 76'd4096;
parameter    ap_ST_fsm_state14 = 76'd8192;
parameter    ap_ST_fsm_state15 = 76'd16384;
parameter    ap_ST_fsm_state16 = 76'd32768;
parameter    ap_ST_fsm_state17 = 76'd65536;
parameter    ap_ST_fsm_state18 = 76'd131072;
parameter    ap_ST_fsm_state19 = 76'd262144;
parameter    ap_ST_fsm_state20 = 76'd524288;
parameter    ap_ST_fsm_state21 = 76'd1048576;
parameter    ap_ST_fsm_state22 = 76'd2097152;
parameter    ap_ST_fsm_state23 = 76'd4194304;
parameter    ap_ST_fsm_state24 = 76'd8388608;
parameter    ap_ST_fsm_state25 = 76'd16777216;
parameter    ap_ST_fsm_state26 = 76'd33554432;
parameter    ap_ST_fsm_state27 = 76'd67108864;
parameter    ap_ST_fsm_state28 = 76'd134217728;
parameter    ap_ST_fsm_state29 = 76'd268435456;
parameter    ap_ST_fsm_state30 = 76'd536870912;
parameter    ap_ST_fsm_state31 = 76'd1073741824;
parameter    ap_ST_fsm_state32 = 76'd2147483648;
parameter    ap_ST_fsm_state33 = 76'd4294967296;
parameter    ap_ST_fsm_state34 = 76'd8589934592;
parameter    ap_ST_fsm_state35 = 76'd17179869184;
parameter    ap_ST_fsm_state36 = 76'd34359738368;
parameter    ap_ST_fsm_state37 = 76'd68719476736;
parameter    ap_ST_fsm_state38 = 76'd137438953472;
parameter    ap_ST_fsm_state39 = 76'd274877906944;
parameter    ap_ST_fsm_state40 = 76'd549755813888;
parameter    ap_ST_fsm_state41 = 76'd1099511627776;
parameter    ap_ST_fsm_state42 = 76'd2199023255552;
parameter    ap_ST_fsm_state43 = 76'd4398046511104;
parameter    ap_ST_fsm_state44 = 76'd8796093022208;
parameter    ap_ST_fsm_state45 = 76'd17592186044416;
parameter    ap_ST_fsm_state46 = 76'd35184372088832;
parameter    ap_ST_fsm_state47 = 76'd70368744177664;
parameter    ap_ST_fsm_state48 = 76'd140737488355328;
parameter    ap_ST_fsm_state49 = 76'd281474976710656;
parameter    ap_ST_fsm_state50 = 76'd562949953421312;
parameter    ap_ST_fsm_state51 = 76'd1125899906842624;
parameter    ap_ST_fsm_state52 = 76'd2251799813685248;
parameter    ap_ST_fsm_state53 = 76'd4503599627370496;
parameter    ap_ST_fsm_state54 = 76'd9007199254740992;
parameter    ap_ST_fsm_state55 = 76'd18014398509481984;
parameter    ap_ST_fsm_state56 = 76'd36028797018963968;
parameter    ap_ST_fsm_state57 = 76'd72057594037927936;
parameter    ap_ST_fsm_state58 = 76'd144115188075855872;
parameter    ap_ST_fsm_state59 = 76'd288230376151711744;
parameter    ap_ST_fsm_state60 = 76'd576460752303423488;
parameter    ap_ST_fsm_state61 = 76'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 76'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 76'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 76'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 76'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 76'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 76'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 76'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 76'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 76'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 76'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 76'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 76'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 76'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 76'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 76'd37778931862957161709568;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] v258_address0;
output   v258_ce0;
input  [31:0] v258_q0;
output  [19:0] v259_address0;
output   v259_ce0;
input  [7:0] v259_q0;
input  [31:0] v260;
output  [19:0] v261_address0;
output   v261_ce0;
input  [7:0] v261_q0;
input  [31:0] v262;
output  [19:0] v263_address0;
output   v263_ce0;
input  [7:0] v263_q0;
input  [31:0] v264;
output  [19:0] v265_address0;
output   v265_ce0;
input  [7:0] v265_q0;
input  [31:0] v266;
output  [9:0] v267_address0;
output   v267_ce0;
input  [31:0] v267_q0;
output  [9:0] v268_address0;
output   v268_ce0;
input  [31:0] v268_q0;
output  [10:0] v269_address0;
output   v269_ce0;
input  [31:0] v269_q0;
output  [10:0] v270_address0;
output   v270_ce0;
input  [31:0] v270_q0;
output  [12:0] v271_address0;
output   v271_ce0;
input  [31:0] v271_q0;
output  [12:0] v272_address0;
output   v272_ce0;
input  [31:0] v272_q0;
input  [31:0] v273;
output  [10:0] v274_address0;
output   v274_ce0;
output   v274_we0;
output  [31:0] v274_d0;
input  [31:0] v274_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg v258_ce0;
reg v259_ce0;
reg v261_ce0;
reg v263_ce0;
reg v265_ce0;
reg v269_ce0;
reg v270_ce0;
reg v271_ce0;
reg v272_ce0;
reg[10:0] v274_address0;
reg v274_ce0;
reg v274_we0;
reg[31:0] v274_d0;

(* fsm_encoding = "none" *) reg   [75:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [10:0] quantized_hidden_sta_address0;
reg    quantized_hidden_sta_ce0;
reg    quantized_hidden_sta_we0;
wire   [7:0] quantized_hidden_sta_q0;
reg   [10:0] q_proj_0_address0;
reg    q_proj_0_ce0;
reg    q_proj_0_we0;
wire   [31:0] q_proj_0_q0;
reg    q_proj_0_ce1;
wire   [31:0] q_proj_0_q1;
reg   [10:0] k_proj_0_address0;
reg    k_proj_0_ce0;
reg    k_proj_0_we0;
wire   [31:0] k_proj_0_q0;
reg    k_proj_0_ce1;
wire   [31:0] k_proj_0_q1;
reg   [10:0] v_proj_0_address0;
reg    v_proj_0_ce0;
reg    v_proj_0_we0;
wire   [31:0] v_proj_0_q0;
reg   [13:0] k_proj_transposed_address0;
reg    k_proj_transposed_ce0;
reg    k_proj_transposed_we0;
wire   [31:0] k_proj_transposed_q0;
reg   [10:0] quantized_final_outp_address0;
reg    quantized_final_outp_ce0;
reg    quantized_final_outp_we0;
wire   [7:0] quantized_final_outp_q0;
wire   [31:0] grp_quantize_activation_fu_822_ap_return;
reg   [31:0] reg_897;
wire    ap_CS_fsm_state5;
wire    grp_quantize_activation_fu_822_ap_ready;
wire    grp_quantize_activation_fu_822_ap_done;
wire    ap_CS_fsm_state74;
wire   [31:0] attn_weights_0_q0;
reg   [31:0] reg_902;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state54;
wire   [10:0] add_ln465_fu_914_p2;
wire    ap_CS_fsm_state2;
wire   [10:0] add_ln484_fu_931_p2;
wire    ap_CS_fsm_state6;
wire   [10:0] add_ln490_fu_948_p2;
wire    ap_CS_fsm_state7;
wire   [10:0] add_ln496_fu_965_p2;
wire    ap_CS_fsm_state8;
wire   [4:0] v307_fu_982_p2;
reg   [4:0] v307_reg_1858;
wire    ap_CS_fsm_state16;
wire   [11:0] sub_ln534_fu_1008_p2;
reg   [11:0] sub_ln534_reg_1863;
wire   [0:0] icmp_ln531_fu_976_p2;
wire   [6:0] add_ln533_fu_1020_p2;
wire    ap_CS_fsm_state17;
wire   [4:0] v311_fu_1046_p2;
reg   [4:0] v311_reg_1879;
wire    ap_CS_fsm_state18;
wire   [11:0] sub_ln542_fu_1072_p2;
reg   [11:0] sub_ln542_reg_1884;
wire   [0:0] icmp_ln539_fu_1040_p2;
wire   [6:0] add_ln541_fu_1084_p2;
wire    ap_CS_fsm_state19;
wire   [4:0] v315_fu_1110_p2;
reg   [4:0] v315_reg_1900;
wire    ap_CS_fsm_state21;
wire  signed [9:0] sext_ln551_fu_1146_p1;
reg  signed [9:0] sext_ln551_reg_1905;
wire   [0:0] icmp_ln548_fu_1104_p2;
wire   [2:0] v316_fu_1156_p2;
reg   [2:0] v316_reg_1913;
wire    ap_CS_fsm_state22;
wire   [14:0] sub_ln551_1_fu_1191_p2;
reg   [14:0] sub_ln551_1_reg_1918;
wire   [0:0] icmp_ln549_fu_1150_p2;
wire   [6:0] v317_fu_1203_p2;
wire    ap_CS_fsm_state23;
wire   [4:0] v319_fu_1229_p2;
reg   [4:0] v319_reg_1934;
wire    ap_CS_fsm_state24;
wire  signed [9:0] sext_ln559_fu_1265_p1;
reg  signed [9:0] sext_ln559_reg_1939;
wire   [0:0] icmp_ln556_fu_1223_p2;
wire   [2:0] v320_fu_1275_p2;
reg   [2:0] v320_reg_1947;
wire    ap_CS_fsm_state25;
wire   [14:0] sub_ln559_1_fu_1310_p2;
reg   [14:0] sub_ln559_1_reg_1952;
wire   [0:0] icmp_ln557_fu_1269_p2;
wire   [6:0] v321_fu_1322_p2;
wire    ap_CS_fsm_state26;
wire   [4:0] v327_fu_1348_p2;
reg   [4:0] v327_reg_1968;
wire    ap_CS_fsm_state30;
wire   [7:0] sub_ln578_fu_1374_p2;
reg   [7:0] sub_ln578_reg_1973;
wire   [0:0] icmp_ln575_fu_1342_p2;
wire   [2:0] add_ln577_fu_1386_p2;
wire    ap_CS_fsm_state31;
wire   [4:0] i10_fu_1412_p2;
reg   [4:0] i10_reg_1989;
wire    ap_CS_fsm_state33;
wire   [7:0] sub_ln588_fu_1438_p2;
reg   [7:0] sub_ln588_reg_1994;
wire   [0:0] icmp_ln585_fu_1406_p2;
wire   [2:0] add_ln587_fu_1450_p2;
reg   [2:0] add_ln587_reg_2002;
wire    ap_CS_fsm_state34;
reg   [6:0] attn_weights_0_addr_2_reg_2007;
wire   [0:0] icmp_ln587_fu_1444_p2;
wire   [31:0] grp_fu_892_p2;
reg   [31:0] v_reg_2012;
wire    ap_CS_fsm_state51;
wire   [4:0] h6_fu_1476_p2;
reg   [4:0] h6_reg_2020;
wire    ap_CS_fsm_state53;
reg   [6:0] attn_weights_0_addr_1_reg_2025;
wire   [0:0] icmp_ln602_fu_1470_p2;
wire   [31:0] grp_fu_887_p2;
reg   [31:0] v7_reg_2030;
wire    ap_CS_fsm_state59;
wire   [4:0] v347_fu_1519_p2;
reg   [4:0] v347_reg_2038;
wire    ap_CS_fsm_state61;
wire   [7:0] sub_ln616_fu_1545_p2;
reg   [7:0] sub_ln616_reg_2043;
wire   [0:0] icmp_ln613_fu_1513_p2;
wire   [2:0] add_ln615_fu_1557_p2;
wire    ap_CS_fsm_state62;
wire   [4:0] v351_fu_1583_p2;
reg   [4:0] v351_reg_2059;
wire    ap_CS_fsm_state64;
wire   [11:0] sub_ln625_fu_1609_p2;
reg   [11:0] sub_ln625_reg_2064;
wire   [0:0] icmp_ln622_fu_1577_p2;
wire   [6:0] add_ln624_fu_1621_p2;
wire    ap_CS_fsm_state65;
wire   [10:0] add_ln632_fu_1647_p2;
wire    ap_CS_fsm_state67;
wire   [4:0] add_ln637_fu_1664_p2;
reg   [4:0] add_ln637_reg_2088;
wire    ap_CS_fsm_state68;
wire   [11:0] sub_ln639_fu_1690_p2;
reg   [11:0] sub_ln639_reg_2093;
wire   [0:0] icmp_ln637_fu_1658_p2;
wire   [11:0] sub_ln640_fu_1724_p2;
reg   [11:0] sub_ln640_reg_2098;
wire   [6:0] add_ln638_fu_1740_p2;
reg   [6:0] add_ln638_reg_2106;
wire    ap_CS_fsm_state69;
wire   [0:0] icmp_ln638_fu_1734_p2;
wire   [11:0] add_ln640_fu_1756_p2;
reg   [11:0] add_ln640_reg_2116;
wire   [10:0] add_ln646_fu_1775_p2;
wire    ap_CS_fsm_state71;
wire   [10:0] add_ln664_fu_1792_p2;
wire    ap_CS_fsm_state75;
reg   [10:0] rms_hidden_states_0_address0;
reg    rms_hidden_states_0_ce0;
reg    rms_hidden_states_0_we0;
reg   [31:0] rms_hidden_states_0_d0;
wire   [31:0] rms_hidden_states_0_q0;
reg   [10:0] q_proj_re_address0;
reg    q_proj_re_ce0;
reg    q_proj_re_we0;
reg   [31:0] q_proj_re_d0;
wire   [31:0] q_proj_re_q0;
reg   [10:0] k_proj_re_address0;
reg    k_proj_re_ce0;
reg    k_proj_re_we0;
reg   [31:0] k_proj_re_d0;
wire   [31:0] k_proj_re_q0;
reg   [10:0] v_proj_re_address0;
reg    v_proj_re_ce0;
reg    v_proj_re_we0;
reg   [31:0] v_proj_re_d0;
wire   [31:0] v_proj_re_q0;
reg   [10:0] q_embed_0_address0;
reg    q_embed_0_ce0;
reg    q_embed_0_we0;
reg   [31:0] q_embed_0_d0;
wire   [31:0] q_embed_0_q0;
reg   [10:0] k_embed_0_address0;
reg    k_embed_0_ce0;
reg    k_embed_0_we0;
reg   [31:0] k_embed_0_d0;
wire   [31:0] k_embed_0_q0;
reg   [13:0] updated_k_cache_address0;
reg    updated_k_cache_ce0;
reg    updated_k_cache_we0;
reg   [31:0] updated_k_cache_d0;
wire   [31:0] updated_k_cache_q0;
reg   [13:0] updated_v_cache_address0;
reg    updated_v_cache_ce0;
reg    updated_v_cache_we0;
reg   [31:0] updated_v_cache_d0;
wire   [31:0] updated_v_cache_q0;
reg   [6:0] attn_weights_0_address0;
reg    attn_weights_0_ce0;
reg    attn_weights_0_we0;
reg   [31:0] attn_weights_0_d0;
reg   [6:0] softmax_attn_weights_address0;
reg    softmax_attn_weights_ce0;
reg    softmax_attn_weights_we0;
reg   [31:0] softmax_attn_weights_d0;
wire   [31:0] softmax_attn_weights_q0;
reg   [10:0] attn_output_0_address0;
reg    attn_output_0_ce0;
reg    attn_output_0_we0;
reg   [31:0] attn_output_0_d0;
wire   [31:0] attn_output_0_q0;
reg   [10:0] attn_output_2D_address0;
reg    attn_output_2D_ce0;
reg    attn_output_2D_we0;
reg   [31:0] attn_output_2D_d0;
wire   [31:0] attn_output_2D_q0;
reg   [10:0] rms_attn_output_0_address0;
reg    rms_attn_output_0_ce0;
reg    rms_attn_output_0_we0;
reg   [31:0] rms_attn_output_0_d0;
wire   [31:0] rms_attn_output_0_q0;
wire    grp_softmax_fu_764_ap_start;
wire    grp_softmax_fu_764_ap_done;
wire    grp_softmax_fu_764_ap_idle;
wire    grp_softmax_fu_764_ap_ready;
wire   [6:0] grp_softmax_fu_764_v219_0_address0;
wire    grp_softmax_fu_764_v219_0_ce0;
wire   [6:0] grp_softmax_fu_764_v220_0_address0;
wire    grp_softmax_fu_764_v220_0_ce0;
wire    grp_softmax_fu_764_v220_0_we0;
wire   [31:0] grp_softmax_fu_764_v220_0_d0;
wire    grp_rms_norm_fu_784_ap_start;
wire    grp_rms_norm_fu_784_ap_done;
wire    grp_rms_norm_fu_784_ap_idle;
wire    grp_rms_norm_fu_784_ap_ready;
wire   [10:0] grp_rms_norm_fu_784_v0_address0;
wire    grp_rms_norm_fu_784_v0_ce0;
reg   [31:0] grp_rms_norm_fu_784_v0_q0;
wire   [10:0] grp_rms_norm_fu_784_v1_address0;
wire    grp_rms_norm_fu_784_v1_ce0;
reg   [31:0] grp_rms_norm_fu_784_v1_q0;
wire   [10:0] grp_rms_norm_fu_784_v3_0_address0;
wire    grp_rms_norm_fu_784_v3_0_ce0;
wire    grp_rms_norm_fu_784_v3_0_we0;
wire   [31:0] grp_rms_norm_fu_784_v3_0_d0;
wire    grp_apply_rotary_pos_emb_fu_808_ap_start;
wire    grp_apply_rotary_pos_emb_fu_808_ap_done;
wire    grp_apply_rotary_pos_emb_fu_808_ap_idle;
wire    grp_apply_rotary_pos_emb_fu_808_ap_ready;
wire   [9:0] grp_apply_rotary_pos_emb_fu_808_v157_address0;
wire    grp_apply_rotary_pos_emb_fu_808_v157_ce0;
wire   [9:0] grp_apply_rotary_pos_emb_fu_808_v158_address0;
wire    grp_apply_rotary_pos_emb_fu_808_v158_ce0;
wire   [10:0] grp_apply_rotary_pos_emb_fu_808_v159_0_address0;
wire    grp_apply_rotary_pos_emb_fu_808_v159_0_ce0;
wire    grp_apply_rotary_pos_emb_fu_808_v159_0_we0;
wire   [31:0] grp_apply_rotary_pos_emb_fu_808_v159_0_d0;
wire   [10:0] grp_apply_rotary_pos_emb_fu_808_v160_0_address0;
wire    grp_apply_rotary_pos_emb_fu_808_v160_0_ce0;
wire    grp_apply_rotary_pos_emb_fu_808_v160_0_we0;
wire   [31:0] grp_apply_rotary_pos_emb_fu_808_v160_0_d0;
wire   [10:0] grp_apply_rotary_pos_emb_fu_808_q_proj_0_address0;
wire    grp_apply_rotary_pos_emb_fu_808_q_proj_0_ce0;
wire   [10:0] grp_apply_rotary_pos_emb_fu_808_q_proj_0_address1;
wire    grp_apply_rotary_pos_emb_fu_808_q_proj_0_ce1;
wire   [10:0] grp_apply_rotary_pos_emb_fu_808_k_proj_0_address0;
wire    grp_apply_rotary_pos_emb_fu_808_k_proj_0_ce0;
wire   [10:0] grp_apply_rotary_pos_emb_fu_808_k_proj_0_address1;
wire    grp_apply_rotary_pos_emb_fu_808_k_proj_0_ce1;
wire    grp_quantize_activation_fu_822_ap_start;
wire    grp_quantize_activation_fu_822_ap_idle;
wire   [10:0] grp_quantize_activation_fu_822_v22_0_address0;
wire    grp_quantize_activation_fu_822_v22_0_ce0;
reg   [31:0] grp_quantize_activation_fu_822_v22_0_q0;
wire   [10:0] grp_quantize_activation_fu_822_v24_0_address0;
wire    grp_quantize_activation_fu_822_v24_0_ce0;
wire    grp_quantize_activation_fu_822_v24_0_we0;
wire   [7:0] grp_quantize_activation_fu_822_v24_0_d0;
wire    grp_linear_forward_no_mu_fu_830_ap_start;
wire    grp_linear_forward_no_mu_fu_830_ap_done;
wire    grp_linear_forward_no_mu_fu_830_ap_idle;
wire    grp_linear_forward_no_mu_fu_830_ap_ready;
wire   [10:0] grp_linear_forward_no_mu_fu_830_v77_0_address0;
wire    grp_linear_forward_no_mu_fu_830_v77_0_ce0;
reg   [7:0] grp_linear_forward_no_mu_fu_830_v77_0_q0;
wire   [19:0] grp_linear_forward_no_mu_fu_830_v79_address0;
wire    grp_linear_forward_no_mu_fu_830_v79_ce0;
reg   [7:0] grp_linear_forward_no_mu_fu_830_v79_q0;
reg   [31:0] grp_linear_forward_no_mu_fu_830_v80;
wire   [10:0] grp_linear_forward_no_mu_fu_830_v81_address0;
wire    grp_linear_forward_no_mu_fu_830_v81_ce0;
wire    grp_linear_forward_no_mu_fu_830_v81_we0;
wire   [31:0] grp_linear_forward_no_mu_fu_830_v81_d0;
reg   [31:0] grp_linear_forward_no_mu_fu_830_v81_q0;
wire    grp_GEMM_3D_float_fu_846_ap_start;
wire    grp_GEMM_3D_float_fu_846_ap_done;
wire    grp_GEMM_3D_float_fu_846_ap_idle;
wire    grp_GEMM_3D_float_fu_846_ap_ready;
wire   [10:0] grp_GEMM_3D_float_fu_846_v204_0_address0;
wire    grp_GEMM_3D_float_fu_846_v204_0_ce0;
wire   [6:0] grp_GEMM_3D_float_fu_846_v206_0_address0;
wire    grp_GEMM_3D_float_fu_846_v206_0_ce0;
wire    grp_GEMM_3D_float_fu_846_v206_0_we0;
wire   [31:0] grp_GEMM_3D_float_fu_846_v206_0_d0;
wire   [13:0] grp_GEMM_3D_float_fu_846_k_proj_transposed_address0;
wire    grp_GEMM_3D_float_fu_846_k_proj_transposed_ce0;
wire    grp_GEMM_3D_float2_fu_854_ap_start;
wire    grp_GEMM_3D_float2_fu_854_ap_done;
wire    grp_GEMM_3D_float2_fu_854_ap_idle;
wire    grp_GEMM_3D_float2_fu_854_ap_ready;
wire   [6:0] grp_GEMM_3D_float2_fu_854_v246_0_address0;
wire    grp_GEMM_3D_float2_fu_854_v246_0_ce0;
wire   [13:0] grp_GEMM_3D_float2_fu_854_v247_address0;
wire    grp_GEMM_3D_float2_fu_854_v247_ce0;
wire   [10:0] grp_GEMM_3D_float2_fu_854_v248_0_address0;
wire    grp_GEMM_3D_float2_fu_854_v248_0_ce0;
wire    grp_GEMM_3D_float2_fu_854_v248_0_we0;
wire   [31:0] grp_GEMM_3D_float2_fu_854_v248_0_d0;
wire    grp_cache_update_fu_861_ap_start;
wire    grp_cache_update_fu_861_ap_done;
wire    grp_cache_update_fu_861_ap_idle;
wire    grp_cache_update_fu_861_ap_ready;
wire   [12:0] grp_cache_update_fu_861_v187_address0;
wire    grp_cache_update_fu_861_v187_ce0;
reg   [31:0] grp_cache_update_fu_861_v187_q0;
wire   [10:0] grp_cache_update_fu_861_v188_0_address0;
wire    grp_cache_update_fu_861_v188_0_ce0;
reg   [31:0] grp_cache_update_fu_861_v188_0_q0;
wire   [13:0] grp_cache_update_fu_861_v189_address0;
wire    grp_cache_update_fu_861_v189_ce0;
wire    grp_cache_update_fu_861_v189_we0;
wire   [31:0] grp_cache_update_fu_861_v189_d0;
wire    grp_transpose_last_two_d_fu_871_ap_start;
wire    grp_transpose_last_two_d_fu_871_ap_done;
wire    grp_transpose_last_two_d_fu_871_ap_idle;
wire    grp_transpose_last_two_d_fu_871_ap_ready;
wire   [13:0] grp_transpose_last_two_d_fu_871_v198_address0;
wire    grp_transpose_last_two_d_fu_871_v198_ce0;
wire   [13:0] grp_transpose_last_two_d_fu_871_v199_address0;
wire    grp_transpose_last_two_d_fu_871_v199_ce0;
wire    grp_transpose_last_two_d_fu_871_v199_we0;
wire   [31:0] grp_transpose_last_two_d_fu_871_v199_d0;
wire    grp_reshape_2D_to_3D_fu_878_ap_start;
wire    grp_reshape_2D_to_3D_fu_878_ap_done;
wire    grp_reshape_2D_to_3D_fu_878_ap_idle;
wire    grp_reshape_2D_to_3D_fu_878_ap_ready;
wire   [10:0] grp_reshape_2D_to_3D_fu_878_v141_address0;
wire    grp_reshape_2D_to_3D_fu_878_v141_ce0;
reg   [31:0] grp_reshape_2D_to_3D_fu_878_v141_q0;
wire   [10:0] grp_reshape_2D_to_3D_fu_878_v142_0_address0;
wire    grp_reshape_2D_to_3D_fu_878_v142_0_ce0;
wire    grp_reshape_2D_to_3D_fu_878_v142_0_we0;
wire   [31:0] grp_reshape_2D_to_3D_fu_878_v142_0_d0;
reg   [10:0] v278_0_0_reg_456;
wire   [0:0] icmp_ln465_fu_908_p2;
reg   [10:0] v287_0_0_reg_467;
wire   [0:0] icmp_ln484_fu_925_p2;
reg   [10:0] v290_0_0_reg_478;
wire   [0:0] icmp_ln490_fu_942_p2;
reg   [10:0] v293_0_0_reg_489;
wire   [0:0] icmp_ln496_fu_959_p2;
reg   [4:0] v307_0_reg_500;
wire    ap_CS_fsm_state15;
wire   [0:0] icmp_ln533_fu_1014_p2;
reg   [6:0] v309_0_0_reg_511;
reg   [4:0] v311_0_reg_522;
wire   [0:0] icmp_ln541_fu_1078_p2;
reg   [6:0] v313_0_0_reg_533;
reg   [4:0] v315_0_reg_544;
wire    ap_CS_fsm_state20;
reg   [2:0] v316_0_reg_555;
wire   [0:0] icmp_ln550_fu_1197_p2;
reg   [6:0] v317_0_reg_566;
reg   [4:0] v319_0_reg_577;
reg   [2:0] v320_0_reg_588;
wire   [0:0] icmp_ln558_fu_1316_p2;
reg   [6:0] v321_0_reg_599;
reg   [4:0] v327_0_reg_610;
wire    ap_CS_fsm_state29;
reg    ap_block_state29_on_subcall_done;
wire   [0:0] icmp_ln577_fu_1380_p2;
reg   [2:0] v329_0_0_reg_621;
reg   [4:0] i10_0_reg_632;
wire    ap_CS_fsm_state32;
reg   [2:0] k9_0_0_reg_643;
wire    ap_CS_fsm_state52;
reg   [4:0] h6_0_reg_654;
wire    ap_CS_fsm_state60;
reg   [4:0] v347_0_reg_665;
wire   [0:0] icmp_ln615_fu_1551_p2;
reg   [2:0] v349_0_0_reg_676;
reg   [4:0] v351_0_reg_687;
wire    ap_CS_fsm_state63;
wire   [0:0] icmp_ln624_fu_1615_p2;
reg   [6:0] v353_0_0_reg_698;
reg   [10:0] v356_0_0_reg_709;
wire   [0:0] icmp_ln632_fu_1641_p2;
wire    ap_CS_fsm_state66;
reg   [4:0] h7_0_0_reg_720;
reg   [6:0] d4_0_0_reg_731;
wire    ap_CS_fsm_state70;
reg   [10:0] v363_0_0_reg_742;
wire   [0:0] icmp_ln646_fu_1769_p2;
reg   [10:0] v371_0_0_reg_753;
wire   [0:0] icmp_ln664_fu_1786_p2;
reg    grp_softmax_fu_764_ap_start_reg;
reg    grp_rms_norm_fu_784_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state72;
reg    grp_apply_rotary_pos_emb_fu_808_ap_start_reg;
reg    grp_quantize_activation_fu_822_ap_start_reg;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state73;
reg    grp_linear_forward_no_mu_fu_830_ap_start_reg;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state76;
reg    grp_GEMM_3D_float_fu_846_ap_start_reg;
reg    grp_GEMM_3D_float2_fu_854_ap_start_reg;
reg    grp_cache_update_fu_861_ap_start_reg;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state27;
reg    grp_transpose_last_two_d_fu_871_ap_start_reg;
reg    grp_reshape_2D_to_3D_fu_878_ap_start_reg;
wire    ap_CS_fsm_state14;
wire   [63:0] zext_ln466_fu_920_p1;
wire   [63:0] zext_ln485_fu_937_p1;
wire   [63:0] zext_ln491_fu_954_p1;
wire   [63:0] zext_ln497_fu_971_p1;
wire  signed [63:0] sext_ln534_fu_1035_p1;
wire  signed [63:0] sext_ln542_fu_1099_p1;
wire   [63:0] zext_ln551_4_fu_1218_p1;
wire   [63:0] zext_ln559_4_fu_1337_p1;
wire  signed [63:0] sext_ln578_fu_1401_p1;
wire  signed [63:0] sext_ln588_fu_1465_p1;
wire  signed [63:0] sext_ln606_fu_1508_p1;
wire  signed [63:0] sext_ln616_fu_1572_p1;
wire  signed [63:0] sext_ln625_fu_1636_p1;
wire   [63:0] zext_ln633_fu_1653_p1;
wire  signed [63:0] sext_ln639_fu_1751_p1;
wire   [63:0] zext_ln640_fu_1764_p1;
wire   [63:0] zext_ln647_fu_1781_p1;
wire   [63:0] zext_ln665_fu_1798_p1;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state36;
wire   [9:0] tmp_25_fu_996_p3;
wire   [11:0] tmp_24_fu_988_p3;
wire   [11:0] zext_ln534_fu_1004_p1;
wire   [11:0] zext_ln534_1_fu_1026_p1;
wire   [11:0] add_ln534_fu_1030_p2;
wire   [9:0] tmp_27_fu_1060_p3;
wire   [11:0] tmp_26_fu_1052_p3;
wire   [11:0] zext_ln542_fu_1068_p1;
wire   [11:0] zext_ln542_1_fu_1090_p1;
wire   [11:0] add_ln542_fu_1094_p2;
wire   [7:0] tmp_28_fu_1116_p3;
wire   [5:0] tmp_29_fu_1128_p3;
wire   [8:0] zext_ln551_fu_1124_p1;
wire   [8:0] zext_ln551_1_fu_1136_p1;
wire   [8:0] sub_ln551_fu_1140_p2;
wire   [9:0] zext_ln551_2_fu_1162_p1;
wire   [9:0] add_ln551_fu_1166_p2;
wire   [7:0] trunc_ln551_fu_1171_p1;
wire   [14:0] p_shl6_cast_fu_1175_p3;
wire   [14:0] p_shl7_cast_fu_1183_p3;
wire   [14:0] zext_ln551_3_fu_1209_p1;
wire   [14:0] add_ln551_1_fu_1213_p2;
wire   [7:0] tmp_30_fu_1235_p3;
wire   [5:0] tmp_31_fu_1247_p3;
wire   [8:0] zext_ln559_fu_1243_p1;
wire   [8:0] zext_ln559_1_fu_1255_p1;
wire   [8:0] sub_ln559_fu_1259_p2;
wire   [9:0] zext_ln559_2_fu_1281_p1;
wire   [9:0] add_ln559_fu_1285_p2;
wire   [7:0] trunc_ln559_fu_1290_p1;
wire   [14:0] p_shl_cast_fu_1294_p3;
wire   [14:0] p_shl2_cast_fu_1302_p3;
wire   [14:0] zext_ln559_3_fu_1328_p1;
wire   [14:0] add_ln559_1_fu_1332_p2;
wire   [5:0] tmp_33_fu_1362_p3;
wire   [7:0] tmp_32_fu_1354_p3;
wire   [7:0] zext_ln578_fu_1370_p1;
wire   [7:0] zext_ln578_1_fu_1392_p1;
wire   [7:0] add_ln578_fu_1396_p2;
wire   [5:0] tmp_35_fu_1426_p3;
wire   [7:0] tmp_34_fu_1418_p3;
wire   [7:0] zext_ln588_fu_1434_p1;
wire   [7:0] zext_ln588_1_fu_1456_p1;
wire   [7:0] add_ln588_fu_1460_p2;
wire   [5:0] tmp_37_fu_1490_p3;
wire   [7:0] tmp_36_fu_1482_p3;
wire   [7:0] zext_ln606_fu_1498_p1;
wire   [7:0] sub_ln606_fu_1502_p2;
wire   [5:0] tmp_39_fu_1533_p3;
wire   [7:0] tmp_38_fu_1525_p3;
wire   [7:0] zext_ln616_fu_1541_p1;
wire   [7:0] zext_ln616_1_fu_1563_p1;
wire   [7:0] add_ln616_fu_1567_p2;
wire   [9:0] tmp_41_fu_1597_p3;
wire   [11:0] tmp_40_fu_1589_p3;
wire   [11:0] zext_ln625_fu_1605_p1;
wire   [11:0] zext_ln625_1_fu_1627_p1;
wire   [11:0] add_ln625_fu_1631_p2;
wire   [9:0] tmp_43_fu_1678_p3;
wire   [11:0] tmp_42_fu_1670_p3;
wire   [11:0] zext_ln639_fu_1686_p1;
wire   [3:0] trunc_ln640_fu_1696_p1;
wire   [10:0] shl_ln_fu_1700_p3;
wire   [8:0] shl_ln640_1_fu_1712_p3;
wire   [11:0] zext_ln640_1_fu_1708_p1;
wire   [11:0] zext_ln640_2_fu_1720_p1;
wire   [11:0] zext_ln638_fu_1730_p1;
wire   [11:0] add_ln639_fu_1746_p2;
wire  signed [31:0] sext_ln640_fu_1761_p1;
reg   [75:0] ap_NS_fsm;
reg    ap_block_state11_on_subcall_done;
reg    ap_block_state13_on_subcall_done;

// power-on initialization
initial begin
#0 ap_CS_fsm = 76'd1;
#0 grp_softmax_fu_764_ap_start_reg = 1'b0;
#0 grp_rms_norm_fu_784_ap_start_reg = 1'b0;
#0 grp_apply_rotary_pos_emb_fu_808_ap_start_reg = 1'b0;
#0 grp_quantize_activation_fu_822_ap_start_reg = 1'b0;
#0 grp_linear_forward_no_mu_fu_830_ap_start_reg = 1'b0;
#0 grp_GEMM_3D_float_fu_846_ap_start_reg = 1'b0;
#0 grp_GEMM_3D_float2_fu_854_ap_start_reg = 1'b0;
#0 grp_cache_update_fu_861_ap_start_reg = 1'b0;
#0 grp_transpose_last_two_d_fu_871_ap_start_reg = 1'b0;
#0 grp_reshape_2D_to_3D_fu_878_ap_start_reg = 1'b0;
end

attention_quantizxdS #(
    .DataWidth( 8 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
quantized_hidden_sta_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(quantized_hidden_sta_address0),
    .ce0(quantized_hidden_sta_ce0),
    .we0(quantized_hidden_sta_we0),
    .d0(grp_quantize_activation_fu_822_v24_0_d0),
    .q0(quantized_hidden_sta_q0)
);

attention_q_proj_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
q_proj_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(q_proj_0_address0),
    .ce0(q_proj_0_ce0),
    .we0(q_proj_0_we0),
    .d0(grp_reshape_2D_to_3D_fu_878_v142_0_d0),
    .q0(q_proj_0_q0),
    .address1(grp_apply_rotary_pos_emb_fu_808_q_proj_0_address1),
    .ce1(q_proj_0_ce1),
    .q1(q_proj_0_q1)
);

attention_q_proj_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
k_proj_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_proj_0_address0),
    .ce0(k_proj_0_ce0),
    .we0(k_proj_0_we0),
    .d0(grp_reshape_2D_to_3D_fu_878_v142_0_d0),
    .q0(k_proj_0_q0),
    .address1(grp_apply_rotary_pos_emb_fu_808_k_proj_0_address1),
    .ce1(k_proj_0_ce1),
    .q1(k_proj_0_q1)
);

attention_v_proj_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
v_proj_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(v_proj_0_address0),
    .ce0(v_proj_0_ce0),
    .we0(v_proj_0_we0),
    .d0(grp_reshape_2D_to_3D_fu_878_v142_0_d0),
    .q0(v_proj_0_q0)
);

attention_k_proj_yd2 #(
    .DataWidth( 32 ),
    .AddressRange( 9216 ),
    .AddressWidth( 14 ))
k_proj_transposed_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_proj_transposed_address0),
    .ce0(k_proj_transposed_ce0),
    .we0(k_proj_transposed_we0),
    .d0(grp_transpose_last_two_d_fu_871_v199_d0),
    .q0(k_proj_transposed_q0)
);

attention_quantizxdS #(
    .DataWidth( 8 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
quantized_final_outp_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(quantized_final_outp_address0),
    .ce0(quantized_final_outp_ce0),
    .we0(quantized_final_outp_we0),
    .d0(grp_quantize_activation_fu_822_v24_0_d0),
    .q0(quantized_final_outp_q0)
);

attention_rms_hidAem #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
rms_hidden_states_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rms_hidden_states_0_address0),
    .ce0(rms_hidden_states_0_ce0),
    .we0(rms_hidden_states_0_we0),
    .d0(rms_hidden_states_0_d0),
    .q0(rms_hidden_states_0_q0)
);

attention_rms_hidAem #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
q_proj_re_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(q_proj_re_address0),
    .ce0(q_proj_re_ce0),
    .we0(q_proj_re_we0),
    .d0(q_proj_re_d0),
    .q0(q_proj_re_q0)
);

attention_rms_hidAem #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
k_proj_re_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_proj_re_address0),
    .ce0(k_proj_re_ce0),
    .we0(k_proj_re_we0),
    .d0(k_proj_re_d0),
    .q0(k_proj_re_q0)
);

attention_rms_hidAem #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
v_proj_re_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(v_proj_re_address0),
    .ce0(v_proj_re_ce0),
    .we0(v_proj_re_we0),
    .d0(v_proj_re_d0),
    .q0(v_proj_re_q0)
);

attention_rms_hidAem #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
q_embed_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(q_embed_0_address0),
    .ce0(q_embed_0_ce0),
    .we0(q_embed_0_we0),
    .d0(q_embed_0_d0),
    .q0(q_embed_0_q0)
);

attention_rms_hidAem #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
k_embed_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_embed_0_address0),
    .ce0(k_embed_0_ce0),
    .we0(k_embed_0_we0),
    .d0(k_embed_0_d0),
    .q0(k_embed_0_q0)
);

attention_updatedBew #(
    .DataWidth( 32 ),
    .AddressRange( 9216 ),
    .AddressWidth( 14 ))
updated_k_cache_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(updated_k_cache_address0),
    .ce0(updated_k_cache_ce0),
    .we0(updated_k_cache_we0),
    .d0(updated_k_cache_d0),
    .q0(updated_k_cache_q0)
);

attention_updatedBew #(
    .DataWidth( 32 ),
    .AddressRange( 9216 ),
    .AddressWidth( 14 ))
updated_v_cache_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(updated_v_cache_address0),
    .ce0(updated_v_cache_ce0),
    .we0(updated_v_cache_we0),
    .d0(updated_v_cache_d0),
    .q0(updated_v_cache_q0)
);

attention_attn_weDeQ #(
    .DataWidth( 32 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
attn_weights_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(attn_weights_0_address0),
    .ce0(attn_weights_0_ce0),
    .we0(attn_weights_0_we0),
    .d0(attn_weights_0_d0),
    .q0(attn_weights_0_q0)
);

attention_attn_weDeQ #(
    .DataWidth( 32 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
softmax_attn_weights_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(softmax_attn_weights_address0),
    .ce0(softmax_attn_weights_ce0),
    .we0(softmax_attn_weights_we0),
    .d0(softmax_attn_weights_d0),
    .q0(softmax_attn_weights_q0)
);

attention_rms_hidAem #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
attn_output_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(attn_output_0_address0),
    .ce0(attn_output_0_ce0),
    .we0(attn_output_0_we0),
    .d0(attn_output_0_d0),
    .q0(attn_output_0_q0)
);

attention_rms_hidAem #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
attn_output_2D_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(attn_output_2D_address0),
    .ce0(attn_output_2D_ce0),
    .we0(attn_output_2D_we0),
    .d0(attn_output_2D_d0),
    .q0(attn_output_2D_q0)
);

attention_rms_hidAem #(
    .DataWidth( 32 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
rms_attn_output_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rms_attn_output_0_address0),
    .ce0(rms_attn_output_0_ce0),
    .we0(rms_attn_output_0_we0),
    .d0(rms_attn_output_0_d0),
    .q0(rms_attn_output_0_q0)
);

softmax grp_softmax_fu_764(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_softmax_fu_764_ap_start),
    .ap_done(grp_softmax_fu_764_ap_done),
    .ap_idle(grp_softmax_fu_764_ap_idle),
    .ap_ready(grp_softmax_fu_764_ap_ready),
    .v219_0_address0(grp_softmax_fu_764_v219_0_address0),
    .v219_0_ce0(grp_softmax_fu_764_v219_0_ce0),
    .v219_0_q0(attn_weights_0_q0),
    .v220_0_address0(grp_softmax_fu_764_v220_0_address0),
    .v220_0_ce0(grp_softmax_fu_764_v220_0_ce0),
    .v220_0_we0(grp_softmax_fu_764_v220_0_we0),
    .v220_0_d0(grp_softmax_fu_764_v220_0_d0),
    .v220_0_q0(softmax_attn_weights_q0)
);

rms_norm grp_rms_norm_fu_784(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_rms_norm_fu_784_ap_start),
    .ap_done(grp_rms_norm_fu_784_ap_done),
    .ap_idle(grp_rms_norm_fu_784_ap_idle),
    .ap_ready(grp_rms_norm_fu_784_ap_ready),
    .v0_address0(grp_rms_norm_fu_784_v0_address0),
    .v0_ce0(grp_rms_norm_fu_784_v0_ce0),
    .v0_q0(grp_rms_norm_fu_784_v0_q0),
    .v1_address0(grp_rms_norm_fu_784_v1_address0),
    .v1_ce0(grp_rms_norm_fu_784_v1_ce0),
    .v1_q0(grp_rms_norm_fu_784_v1_q0),
    .v3_0_address0(grp_rms_norm_fu_784_v3_0_address0),
    .v3_0_ce0(grp_rms_norm_fu_784_v3_0_ce0),
    .v3_0_we0(grp_rms_norm_fu_784_v3_0_we0),
    .v3_0_d0(grp_rms_norm_fu_784_v3_0_d0)
);

apply_rotary_pos_emb grp_apply_rotary_pos_emb_fu_808(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_apply_rotary_pos_emb_fu_808_ap_start),
    .ap_done(grp_apply_rotary_pos_emb_fu_808_ap_done),
    .ap_idle(grp_apply_rotary_pos_emb_fu_808_ap_idle),
    .ap_ready(grp_apply_rotary_pos_emb_fu_808_ap_ready),
    .v157_address0(grp_apply_rotary_pos_emb_fu_808_v157_address0),
    .v157_ce0(grp_apply_rotary_pos_emb_fu_808_v157_ce0),
    .v157_q0(v267_q0),
    .v158_address0(grp_apply_rotary_pos_emb_fu_808_v158_address0),
    .v158_ce0(grp_apply_rotary_pos_emb_fu_808_v158_ce0),
    .v158_q0(v268_q0),
    .v159_0_address0(grp_apply_rotary_pos_emb_fu_808_v159_0_address0),
    .v159_0_ce0(grp_apply_rotary_pos_emb_fu_808_v159_0_ce0),
    .v159_0_we0(grp_apply_rotary_pos_emb_fu_808_v159_0_we0),
    .v159_0_d0(grp_apply_rotary_pos_emb_fu_808_v159_0_d0),
    .v160_0_address0(grp_apply_rotary_pos_emb_fu_808_v160_0_address0),
    .v160_0_ce0(grp_apply_rotary_pos_emb_fu_808_v160_0_ce0),
    .v160_0_we0(grp_apply_rotary_pos_emb_fu_808_v160_0_we0),
    .v160_0_d0(grp_apply_rotary_pos_emb_fu_808_v160_0_d0),
    .q_proj_0_address0(grp_apply_rotary_pos_emb_fu_808_q_proj_0_address0),
    .q_proj_0_ce0(grp_apply_rotary_pos_emb_fu_808_q_proj_0_ce0),
    .q_proj_0_q0(q_proj_0_q0),
    .q_proj_0_address1(grp_apply_rotary_pos_emb_fu_808_q_proj_0_address1),
    .q_proj_0_ce1(grp_apply_rotary_pos_emb_fu_808_q_proj_0_ce1),
    .q_proj_0_q1(q_proj_0_q1),
    .k_proj_0_address0(grp_apply_rotary_pos_emb_fu_808_k_proj_0_address0),
    .k_proj_0_ce0(grp_apply_rotary_pos_emb_fu_808_k_proj_0_ce0),
    .k_proj_0_q0(k_proj_0_q0),
    .k_proj_0_address1(grp_apply_rotary_pos_emb_fu_808_k_proj_0_address1),
    .k_proj_0_ce1(grp_apply_rotary_pos_emb_fu_808_k_proj_0_ce1),
    .k_proj_0_q1(k_proj_0_q1)
);

quantize_activation grp_quantize_activation_fu_822(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_quantize_activation_fu_822_ap_start),
    .ap_done(grp_quantize_activation_fu_822_ap_done),
    .ap_idle(grp_quantize_activation_fu_822_ap_idle),
    .ap_ready(grp_quantize_activation_fu_822_ap_ready),
    .v22_0_address0(grp_quantize_activation_fu_822_v22_0_address0),
    .v22_0_ce0(grp_quantize_activation_fu_822_v22_0_ce0),
    .v22_0_q0(grp_quantize_activation_fu_822_v22_0_q0),
    .v24_0_address0(grp_quantize_activation_fu_822_v24_0_address0),
    .v24_0_ce0(grp_quantize_activation_fu_822_v24_0_ce0),
    .v24_0_we0(grp_quantize_activation_fu_822_v24_0_we0),
    .v24_0_d0(grp_quantize_activation_fu_822_v24_0_d0),
    .ap_return(grp_quantize_activation_fu_822_ap_return)
);

linear_forward_no_mu grp_linear_forward_no_mu_fu_830(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_linear_forward_no_mu_fu_830_ap_start),
    .ap_done(grp_linear_forward_no_mu_fu_830_ap_done),
    .ap_idle(grp_linear_forward_no_mu_fu_830_ap_idle),
    .ap_ready(grp_linear_forward_no_mu_fu_830_ap_ready),
    .v77_0_address0(grp_linear_forward_no_mu_fu_830_v77_0_address0),
    .v77_0_ce0(grp_linear_forward_no_mu_fu_830_v77_0_ce0),
    .v77_0_q0(grp_linear_forward_no_mu_fu_830_v77_0_q0),
    .p_read(reg_897),
    .v79_address0(grp_linear_forward_no_mu_fu_830_v79_address0),
    .v79_ce0(grp_linear_forward_no_mu_fu_830_v79_ce0),
    .v79_q0(grp_linear_forward_no_mu_fu_830_v79_q0),
    .v80(grp_linear_forward_no_mu_fu_830_v80),
    .v81_address0(grp_linear_forward_no_mu_fu_830_v81_address0),
    .v81_ce0(grp_linear_forward_no_mu_fu_830_v81_ce0),
    .v81_we0(grp_linear_forward_no_mu_fu_830_v81_we0),
    .v81_d0(grp_linear_forward_no_mu_fu_830_v81_d0),
    .v81_q0(grp_linear_forward_no_mu_fu_830_v81_q0)
);

GEMM_3D_float grp_GEMM_3D_float_fu_846(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GEMM_3D_float_fu_846_ap_start),
    .ap_done(grp_GEMM_3D_float_fu_846_ap_done),
    .ap_idle(grp_GEMM_3D_float_fu_846_ap_idle),
    .ap_ready(grp_GEMM_3D_float_fu_846_ap_ready),
    .v204_0_address0(grp_GEMM_3D_float_fu_846_v204_0_address0),
    .v204_0_ce0(grp_GEMM_3D_float_fu_846_v204_0_ce0),
    .v204_0_q0(q_embed_0_q0),
    .v206_0_address0(grp_GEMM_3D_float_fu_846_v206_0_address0),
    .v206_0_ce0(grp_GEMM_3D_float_fu_846_v206_0_ce0),
    .v206_0_we0(grp_GEMM_3D_float_fu_846_v206_0_we0),
    .v206_0_d0(grp_GEMM_3D_float_fu_846_v206_0_d0),
    .v206_0_q0(attn_weights_0_q0),
    .k_proj_transposed_address0(grp_GEMM_3D_float_fu_846_k_proj_transposed_address0),
    .k_proj_transposed_ce0(grp_GEMM_3D_float_fu_846_k_proj_transposed_ce0),
    .k_proj_transposed_q0(k_proj_transposed_q0)
);

GEMM_3D_float2 grp_GEMM_3D_float2_fu_854(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_GEMM_3D_float2_fu_854_ap_start),
    .ap_done(grp_GEMM_3D_float2_fu_854_ap_done),
    .ap_idle(grp_GEMM_3D_float2_fu_854_ap_idle),
    .ap_ready(grp_GEMM_3D_float2_fu_854_ap_ready),
    .v246_0_address0(grp_GEMM_3D_float2_fu_854_v246_0_address0),
    .v246_0_ce0(grp_GEMM_3D_float2_fu_854_v246_0_ce0),
    .v246_0_q0(softmax_attn_weights_q0),
    .v247_address0(grp_GEMM_3D_float2_fu_854_v247_address0),
    .v247_ce0(grp_GEMM_3D_float2_fu_854_v247_ce0),
    .v247_q0(updated_v_cache_q0),
    .v248_0_address0(grp_GEMM_3D_float2_fu_854_v248_0_address0),
    .v248_0_ce0(grp_GEMM_3D_float2_fu_854_v248_0_ce0),
    .v248_0_we0(grp_GEMM_3D_float2_fu_854_v248_0_we0),
    .v248_0_d0(grp_GEMM_3D_float2_fu_854_v248_0_d0),
    .v248_0_q0(attn_output_0_q0)
);

cache_update grp_cache_update_fu_861(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_cache_update_fu_861_ap_start),
    .ap_done(grp_cache_update_fu_861_ap_done),
    .ap_idle(grp_cache_update_fu_861_ap_idle),
    .ap_ready(grp_cache_update_fu_861_ap_ready),
    .v187_address0(grp_cache_update_fu_861_v187_address0),
    .v187_ce0(grp_cache_update_fu_861_v187_ce0),
    .v187_q0(grp_cache_update_fu_861_v187_q0),
    .v188_0_address0(grp_cache_update_fu_861_v188_0_address0),
    .v188_0_ce0(grp_cache_update_fu_861_v188_0_ce0),
    .v188_0_q0(grp_cache_update_fu_861_v188_0_q0),
    .v189_address0(grp_cache_update_fu_861_v189_address0),
    .v189_ce0(grp_cache_update_fu_861_v189_ce0),
    .v189_we0(grp_cache_update_fu_861_v189_we0),
    .v189_d0(grp_cache_update_fu_861_v189_d0)
);

transpose_last_two_d grp_transpose_last_two_d_fu_871(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_transpose_last_two_d_fu_871_ap_start),
    .ap_done(grp_transpose_last_two_d_fu_871_ap_done),
    .ap_idle(grp_transpose_last_two_d_fu_871_ap_idle),
    .ap_ready(grp_transpose_last_two_d_fu_871_ap_ready),
    .v198_address0(grp_transpose_last_two_d_fu_871_v198_address0),
    .v198_ce0(grp_transpose_last_two_d_fu_871_v198_ce0),
    .v198_q0(updated_k_cache_q0),
    .v199_address0(grp_transpose_last_two_d_fu_871_v199_address0),
    .v199_ce0(grp_transpose_last_two_d_fu_871_v199_ce0),
    .v199_we0(grp_transpose_last_two_d_fu_871_v199_we0),
    .v199_d0(grp_transpose_last_two_d_fu_871_v199_d0)
);

reshape_2D_to_3D grp_reshape_2D_to_3D_fu_878(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_reshape_2D_to_3D_fu_878_ap_start),
    .ap_done(grp_reshape_2D_to_3D_fu_878_ap_done),
    .ap_idle(grp_reshape_2D_to_3D_fu_878_ap_idle),
    .ap_ready(grp_reshape_2D_to_3D_fu_878_ap_ready),
    .v141_address0(grp_reshape_2D_to_3D_fu_878_v141_address0),
    .v141_ce0(grp_reshape_2D_to_3D_fu_878_v141_ce0),
    .v141_q0(grp_reshape_2D_to_3D_fu_878_v141_q0),
    .v142_0_address0(grp_reshape_2D_to_3D_fu_878_v142_0_address0),
    .v142_0_ce0(grp_reshape_2D_to_3D_fu_878_v142_0_ce0),
    .v142_0_we0(grp_reshape_2D_to_3D_fu_878_v142_0_we0),
    .v142_0_d0(grp_reshape_2D_to_3D_fu_878_v142_0_d0)
);

attention_fadd_32pcA #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
attention_fadd_32pcA_U88(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_902),
    .din1(32'd0),
    .ce(1'b1),
    .dout(grp_fu_887_p2)
);

attention_fdiv_32rcU #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
attention_fdiv_32rcU_U89(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_902),
    .din1(32'd1092404337),
    .ce(1'b1),
    .dout(grp_fu_892_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_GEMM_3D_float2_fu_854_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln622_fu_1577_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state64))) begin
            grp_GEMM_3D_float2_fu_854_ap_start_reg <= 1'b1;
        end else if ((grp_GEMM_3D_float2_fu_854_ap_ready == 1'b1)) begin
            grp_GEMM_3D_float2_fu_854_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_GEMM_3D_float_fu_846_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln575_fu_1342_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state30))) begin
            grp_GEMM_3D_float_fu_846_ap_start_reg <= 1'b1;
        end else if ((grp_GEMM_3D_float_fu_846_ap_ready == 1'b1)) begin
            grp_GEMM_3D_float_fu_846_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_apply_rotary_pos_emb_fu_808_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln539_fu_1040_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
            grp_apply_rotary_pos_emb_fu_808_ap_start_reg <= 1'b1;
        end else if ((grp_apply_rotary_pos_emb_fu_808_ap_ready == 1'b1)) begin
            grp_apply_rotary_pos_emb_fu_808_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_cache_update_fu_861_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state28) | ((icmp_ln556_fu_1223_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24)))) begin
            grp_cache_update_fu_861_ap_start_reg <= 1'b1;
        end else if ((grp_cache_update_fu_861_ap_ready == 1'b1)) begin
            grp_cache_update_fu_861_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_linear_forward_no_mu_fu_830_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | ((icmp_ln664_fu_1786_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state75)) | ((icmp_ln496_fu_959_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8)))) begin
            grp_linear_forward_no_mu_fu_830_ap_start_reg <= 1'b1;
        end else if ((grp_linear_forward_no_mu_fu_830_ap_ready == 1'b1)) begin
            grp_linear_forward_no_mu_fu_830_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_quantize_activation_fu_822_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state4))) begin
            grp_quantize_activation_fu_822_ap_start_reg <= 1'b1;
        end else if ((grp_quantize_activation_fu_822_ap_ready == 1'b1)) begin
            grp_quantize_activation_fu_822_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_reshape_2D_to_3D_fu_878_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10))) begin
            grp_reshape_2D_to_3D_fu_878_ap_start_reg <= 1'b1;
        end else if ((grp_reshape_2D_to_3D_fu_878_ap_ready == 1'b1)) begin
            grp_reshape_2D_to_3D_fu_878_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_rms_norm_fu_784_ap_start_reg <= 1'b0;
    end else begin
        if ((((icmp_ln646_fu_1769_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state71)) | ((icmp_ln465_fu_908_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
            grp_rms_norm_fu_784_ap_start_reg <= 1'b1;
        end else if ((grp_rms_norm_fu_784_ap_ready == 1'b1)) begin
            grp_rms_norm_fu_784_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_softmax_fu_764_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln613_fu_1513_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state61))) begin
            grp_softmax_fu_764_ap_start_reg <= 1'b1;
        end else if ((grp_softmax_fu_764_ap_ready == 1'b1)) begin
            grp_softmax_fu_764_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_transpose_last_two_d_fu_871_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state28)) begin
            grp_transpose_last_two_d_fu_871_ap_start_reg <= 1'b1;
        end else if ((grp_transpose_last_two_d_fu_871_ap_ready == 1'b1)) begin
            grp_transpose_last_two_d_fu_871_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        d4_0_0_reg_731 <= add_ln638_reg_2106;
    end else if (((icmp_ln637_fu_1658_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state68))) begin
        d4_0_0_reg_731 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln585_fu_1406_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
        h6_0_reg_654 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        h6_0_reg_654 <= h6_reg_2020;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln638_fu_1734_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state69))) begin
        h7_0_0_reg_720 <= add_ln637_reg_2088;
    end else if (((icmp_ln632_fu_1641_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state67))) begin
        h7_0_0_reg_720 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln587_fu_1444_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state34))) begin
        i10_0_reg_632 <= i10_reg_1989;
    end else if (((grp_GEMM_3D_float_fu_846_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
        i10_0_reg_632 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        k9_0_0_reg_643 <= add_ln587_reg_2002;
    end else if (((icmp_ln585_fu_1406_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state33))) begin
        k9_0_0_reg_643 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        v278_0_0_reg_456 <= 11'd0;
    end else if (((icmp_ln465_fu_908_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        v278_0_0_reg_456 <= add_ln465_fu_914_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_quantize_activation_fu_822_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        v287_0_0_reg_467 <= 11'd0;
    end else if (((icmp_ln484_fu_925_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        v287_0_0_reg_467 <= add_ln484_fu_931_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln484_fu_925_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        v290_0_0_reg_478 <= 11'd0;
    end else if (((icmp_ln490_fu_942_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        v290_0_0_reg_478 <= add_ln490_fu_948_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln490_fu_942_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        v293_0_0_reg_489 <= 11'd0;
    end else if (((icmp_ln496_fu_959_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        v293_0_0_reg_489 <= add_ln496_fu_965_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln533_fu_1014_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        v307_0_reg_500 <= v307_reg_1858;
    end else if (((grp_reshape_2D_to_3D_fu_878_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        v307_0_reg_500 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln531_fu_976_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        v309_0_0_reg_511 <= 7'd0;
    end else if (((icmp_ln533_fu_1014_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        v309_0_0_reg_511 <= add_ln533_fu_1020_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln531_fu_976_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        v311_0_reg_522 <= 5'd0;
    end else if (((icmp_ln541_fu_1078_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
        v311_0_reg_522 <= v311_reg_1879;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln539_fu_1040_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        v313_0_0_reg_533 <= 7'd0;
    end else if (((icmp_ln541_fu_1078_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        v313_0_0_reg_533 <= add_ln541_fu_1084_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln549_fu_1150_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
        v315_0_reg_544 <= v315_reg_1900;
    end else if (((grp_apply_rotary_pos_emb_fu_808_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
        v315_0_reg_544 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln550_fu_1197_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        v316_0_reg_555 <= v316_reg_1913;
    end else if (((icmp_ln548_fu_1104_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        v316_0_reg_555 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln549_fu_1150_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        v317_0_reg_566 <= 7'd0;
    end else if (((icmp_ln550_fu_1197_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        v317_0_reg_566 <= v317_fu_1203_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln548_fu_1104_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        v319_0_reg_577 <= 5'd0;
    end else if (((icmp_ln557_fu_1269_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        v319_0_reg_577 <= v319_reg_1934;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln558_fu_1316_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        v320_0_reg_588 <= v320_reg_1947;
    end else if (((icmp_ln556_fu_1223_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        v320_0_reg_588 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln557_fu_1269_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        v321_0_reg_599 <= 7'd0;
    end else if (((icmp_ln558_fu_1316_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        v321_0_reg_599 <= v321_fu_1322_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln577_fu_1380_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        v327_0_reg_610 <= v327_reg_1968;
    end else if (((1'b0 == ap_block_state29_on_subcall_done) & (1'b1 == ap_CS_fsm_state29))) begin
        v327_0_reg_610 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln575_fu_1342_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
        v329_0_0_reg_621 <= 3'd0;
    end else if (((icmp_ln577_fu_1380_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        v329_0_0_reg_621 <= add_ln577_fu_1386_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln602_fu_1470_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state53))) begin
        v347_0_reg_665 <= 5'd0;
    end else if (((icmp_ln615_fu_1551_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state62))) begin
        v347_0_reg_665 <= v347_reg_2038;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln613_fu_1513_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state61))) begin
        v349_0_0_reg_676 <= 3'd0;
    end else if (((icmp_ln615_fu_1551_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state62))) begin
        v349_0_0_reg_676 <= add_ln615_fu_1557_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln624_fu_1615_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state65))) begin
        v351_0_reg_687 <= v351_reg_2059;
    end else if (((grp_softmax_fu_764_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state63))) begin
        v351_0_reg_687 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln622_fu_1577_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state64))) begin
        v353_0_0_reg_698 <= 7'd0;
    end else if (((icmp_ln624_fu_1615_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state65))) begin
        v353_0_0_reg_698 <= add_ln624_fu_1621_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_GEMM_3D_float2_fu_854_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state66))) begin
        v356_0_0_reg_709 <= 11'd0;
    end else if (((icmp_ln632_fu_1641_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state67))) begin
        v356_0_0_reg_709 <= add_ln632_fu_1647_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln637_fu_1658_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state68))) begin
        v363_0_0_reg_742 <= 11'd0;
    end else if (((icmp_ln646_fu_1769_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state71))) begin
        v363_0_0_reg_742 <= add_ln646_fu_1775_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_quantize_activation_fu_822_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state74))) begin
        v371_0_0_reg_753 <= 11'd0;
    end else if (((icmp_ln664_fu_1786_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state75))) begin
        v371_0_0_reg_753 <= add_ln664_fu_1792_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        add_ln587_reg_2002 <= add_ln587_fu_1450_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        add_ln637_reg_2088 <= add_ln637_fu_1664_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        add_ln638_reg_2106 <= add_ln638_fu_1740_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln638_fu_1734_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state69))) begin
        add_ln640_reg_2116 <= add_ln640_fu_1756_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln602_fu_1470_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state53))) begin
        attn_weights_0_addr_1_reg_2025[6 : 1] <= sext_ln606_fu_1508_p1[6 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln587_fu_1444_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state34))) begin
        attn_weights_0_addr_2_reg_2007 <= sext_ln588_fu_1465_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        h6_reg_2020 <= h6_fu_1476_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        i10_reg_1989 <= i10_fu_1412_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((grp_quantize_activation_fu_822_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state74)) | ((grp_quantize_activation_fu_822_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)))) begin
        reg_897 <= grp_quantize_activation_fu_822_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state35))) begin
        reg_902 <= attn_weights_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln548_fu_1104_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        sext_ln551_reg_1905[9 : 1] <= sext_ln551_fu_1146_p1[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln556_fu_1223_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        sext_ln559_reg_1939[9 : 1] <= sext_ln559_fu_1265_p1[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln531_fu_976_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        sub_ln534_reg_1863[11 : 5] <= sub_ln534_fu_1008_p2[11 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln539_fu_1040_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        sub_ln542_reg_1884[11 : 5] <= sub_ln542_fu_1072_p2[11 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln549_fu_1150_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        sub_ln551_1_reg_1918[14 : 5] <= sub_ln551_1_fu_1191_p2[14 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln557_fu_1269_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        sub_ln559_1_reg_1952[14 : 5] <= sub_ln559_1_fu_1310_p2[14 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln575_fu_1342_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
        sub_ln578_reg_1973[7 : 1] <= sub_ln578_fu_1374_p2[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln585_fu_1406_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state33))) begin
        sub_ln588_reg_1994[7 : 1] <= sub_ln588_fu_1438_p2[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln613_fu_1513_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state61))) begin
        sub_ln616_reg_2043[7 : 1] <= sub_ln616_fu_1545_p2[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln622_fu_1577_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state64))) begin
        sub_ln625_reg_2064[11 : 5] <= sub_ln625_fu_1609_p2[11 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln637_fu_1658_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state68))) begin
        sub_ln639_reg_2093[11 : 5] <= sub_ln639_fu_1690_p2[11 : 5];
        sub_ln640_reg_2098[11 : 5] <= sub_ln640_fu_1724_p2[11 : 5];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        v307_reg_1858 <= v307_fu_982_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        v311_reg_1879 <= v311_fu_1046_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        v315_reg_1900 <= v315_fu_1110_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        v316_reg_1913 <= v316_fu_1156_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        v319_reg_1934 <= v319_fu_1229_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        v320_reg_1947 <= v320_fu_1275_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        v327_reg_1968 <= v327_fu_1348_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        v347_reg_2038 <= v347_fu_1519_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        v351_reg_2059 <= v351_fu_1583_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        v7_reg_2030 <= grp_fu_887_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        v_reg_2012 <= grp_fu_892_p2;
    end
end

always @ (*) begin
    if (((grp_linear_forward_no_mu_fu_830_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state76))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_linear_forward_no_mu_fu_830_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state76))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        attn_output_0_address0 = sext_ln639_fu_1751_p1;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        attn_output_0_address0 = sext_ln625_fu_1636_p1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        attn_output_0_address0 = grp_GEMM_3D_float2_fu_854_v248_0_address0;
    end else begin
        attn_output_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state65))) begin
        attn_output_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        attn_output_0_ce0 = grp_GEMM_3D_float2_fu_854_v248_0_ce0;
    end else begin
        attn_output_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        attn_output_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        attn_output_0_d0 = grp_GEMM_3D_float2_fu_854_v248_0_d0;
    end else begin
        attn_output_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln624_fu_1615_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state65))) begin
        attn_output_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        attn_output_0_we0 = grp_GEMM_3D_float2_fu_854_v248_0_we0;
    end else begin
        attn_output_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        attn_output_2D_address0 = zext_ln640_fu_1764_p1;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        attn_output_2D_address0 = zext_ln633_fu_1653_p1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        attn_output_2D_address0 = grp_rms_norm_fu_784_v0_address0;
    end else begin
        attn_output_2D_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state70))) begin
        attn_output_2D_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        attn_output_2D_ce0 = grp_rms_norm_fu_784_v0_ce0;
    end else begin
        attn_output_2D_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        attn_output_2D_d0 = attn_output_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        attn_output_2D_d0 = 32'd0;
    end else begin
        attn_output_2D_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state70) | ((icmp_ln632_fu_1641_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state67)))) begin
        attn_output_2D_we0 = 1'b1;
    end else begin
        attn_output_2D_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        attn_weights_0_address0 = attn_weights_0_addr_1_reg_2025;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        attn_weights_0_address0 = sext_ln606_fu_1508_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        attn_weights_0_address0 = attn_weights_0_addr_2_reg_2007;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        attn_weights_0_address0 = sext_ln588_fu_1465_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        attn_weights_0_address0 = sext_ln578_fu_1401_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        attn_weights_0_address0 = grp_GEMM_3D_float_fu_846_v206_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        attn_weights_0_address0 = grp_softmax_fu_764_v219_0_address0;
    end else begin
        attn_weights_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state31))) begin
        attn_weights_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        attn_weights_0_ce0 = grp_GEMM_3D_float_fu_846_v206_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        attn_weights_0_ce0 = grp_softmax_fu_764_v219_0_ce0;
    end else begin
        attn_weights_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        attn_weights_0_d0 = v7_reg_2030;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        attn_weights_0_d0 = v_reg_2012;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        attn_weights_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        attn_weights_0_d0 = grp_GEMM_3D_float_fu_846_v206_0_d0;
    end else begin
        attn_weights_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state52) | ((icmp_ln577_fu_1380_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31)))) begin
        attn_weights_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        attn_weights_0_we0 = grp_GEMM_3D_float_fu_846_v206_0_we0;
    end else begin
        attn_weights_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_cache_update_fu_861_v187_q0 = v272_q0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_cache_update_fu_861_v187_q0 = v271_q0;
    end else begin
        grp_cache_update_fu_861_v187_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_cache_update_fu_861_v188_0_q0 = v_proj_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_cache_update_fu_861_v188_0_q0 = k_embed_0_q0;
    end else begin
        grp_cache_update_fu_861_v188_0_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        grp_linear_forward_no_mu_fu_830_v77_0_q0 = quantized_final_outp_q0;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_linear_forward_no_mu_fu_830_v77_0_q0 = quantized_hidden_sta_q0;
    end else begin
        grp_linear_forward_no_mu_fu_830_v77_0_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        grp_linear_forward_no_mu_fu_830_v79_q0 = v265_q0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_linear_forward_no_mu_fu_830_v79_q0 = v263_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_linear_forward_no_mu_fu_830_v79_q0 = v261_q0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_linear_forward_no_mu_fu_830_v79_q0 = v259_q0;
    end else begin
        grp_linear_forward_no_mu_fu_830_v79_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        grp_linear_forward_no_mu_fu_830_v80 = v266;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_linear_forward_no_mu_fu_830_v80 = v264;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_linear_forward_no_mu_fu_830_v80 = v262;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_linear_forward_no_mu_fu_830_v80 = v260;
    end else begin
        grp_linear_forward_no_mu_fu_830_v80 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        grp_linear_forward_no_mu_fu_830_v81_q0 = v274_q0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_linear_forward_no_mu_fu_830_v81_q0 = v_proj_re_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_linear_forward_no_mu_fu_830_v81_q0 = k_proj_re_q0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_linear_forward_no_mu_fu_830_v81_q0 = q_proj_re_q0;
    end else begin
        grp_linear_forward_no_mu_fu_830_v81_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        grp_quantize_activation_fu_822_v22_0_q0 = rms_attn_output_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_quantize_activation_fu_822_v22_0_q0 = rms_hidden_states_0_q0;
    end else begin
        grp_quantize_activation_fu_822_v22_0_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_reshape_2D_to_3D_fu_878_v141_q0 = v_proj_re_q0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_reshape_2D_to_3D_fu_878_v141_q0 = k_proj_re_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_reshape_2D_to_3D_fu_878_v141_q0 = q_proj_re_q0;
    end else begin
        grp_reshape_2D_to_3D_fu_878_v141_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        grp_rms_norm_fu_784_v0_q0 = attn_output_2D_q0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_rms_norm_fu_784_v0_q0 = v258_q0;
    end else begin
        grp_rms_norm_fu_784_v0_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        grp_rms_norm_fu_784_v1_q0 = v270_q0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_rms_norm_fu_784_v1_q0 = v269_q0;
    end else begin
        grp_rms_norm_fu_784_v1_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        k_embed_0_address0 = sext_ln542_fu_1099_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        k_embed_0_address0 = grp_cache_update_fu_861_v188_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        k_embed_0_address0 = grp_apply_rotary_pos_emb_fu_808_v160_0_address0;
    end else begin
        k_embed_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        k_embed_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        k_embed_0_ce0 = grp_cache_update_fu_861_v188_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        k_embed_0_ce0 = grp_apply_rotary_pos_emb_fu_808_v160_0_ce0;
    end else begin
        k_embed_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        k_embed_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        k_embed_0_d0 = grp_apply_rotary_pos_emb_fu_808_v160_0_d0;
    end else begin
        k_embed_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln541_fu_1078_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        k_embed_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        k_embed_0_we0 = grp_apply_rotary_pos_emb_fu_808_v160_0_we0;
    end else begin
        k_embed_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        k_proj_0_address0 = grp_reshape_2D_to_3D_fu_878_v142_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        k_proj_0_address0 = grp_apply_rotary_pos_emb_fu_808_k_proj_0_address0;
    end else begin
        k_proj_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        k_proj_0_ce0 = grp_reshape_2D_to_3D_fu_878_v142_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        k_proj_0_ce0 = grp_apply_rotary_pos_emb_fu_808_k_proj_0_ce0;
    end else begin
        k_proj_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        k_proj_0_ce1 = grp_apply_rotary_pos_emb_fu_808_k_proj_0_ce1;
    end else begin
        k_proj_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        k_proj_0_we0 = grp_reshape_2D_to_3D_fu_878_v142_0_we0;
    end else begin
        k_proj_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        k_proj_re_address0 = zext_ln491_fu_954_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        k_proj_re_address0 = grp_reshape_2D_to_3D_fu_878_v141_address0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        k_proj_re_address0 = grp_linear_forward_no_mu_fu_830_v81_address0;
    end else begin
        k_proj_re_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        k_proj_re_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        k_proj_re_ce0 = grp_reshape_2D_to_3D_fu_878_v141_ce0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        k_proj_re_ce0 = grp_linear_forward_no_mu_fu_830_v81_ce0;
    end else begin
        k_proj_re_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        k_proj_re_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        k_proj_re_d0 = grp_linear_forward_no_mu_fu_830_v81_d0;
    end else begin
        k_proj_re_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln490_fu_942_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        k_proj_re_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        k_proj_re_we0 = grp_linear_forward_no_mu_fu_830_v81_we0;
    end else begin
        k_proj_re_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        k_proj_transposed_address0 = grp_transpose_last_two_d_fu_871_v199_address0;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        k_proj_transposed_address0 = grp_GEMM_3D_float_fu_846_k_proj_transposed_address0;
    end else begin
        k_proj_transposed_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        k_proj_transposed_ce0 = grp_transpose_last_two_d_fu_871_v199_ce0;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        k_proj_transposed_ce0 = grp_GEMM_3D_float_fu_846_k_proj_transposed_ce0;
    end else begin
        k_proj_transposed_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        k_proj_transposed_we0 = grp_transpose_last_two_d_fu_871_v199_we0;
    end else begin
        k_proj_transposed_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        q_embed_0_address0 = sext_ln534_fu_1035_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        q_embed_0_address0 = grp_GEMM_3D_float_fu_846_v204_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        q_embed_0_address0 = grp_apply_rotary_pos_emb_fu_808_v159_0_address0;
    end else begin
        q_embed_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        q_embed_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        q_embed_0_ce0 = grp_GEMM_3D_float_fu_846_v204_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        q_embed_0_ce0 = grp_apply_rotary_pos_emb_fu_808_v159_0_ce0;
    end else begin
        q_embed_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        q_embed_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        q_embed_0_d0 = grp_apply_rotary_pos_emb_fu_808_v159_0_d0;
    end else begin
        q_embed_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln533_fu_1014_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        q_embed_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        q_embed_0_we0 = grp_apply_rotary_pos_emb_fu_808_v159_0_we0;
    end else begin
        q_embed_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        q_proj_0_address0 = grp_reshape_2D_to_3D_fu_878_v142_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        q_proj_0_address0 = grp_apply_rotary_pos_emb_fu_808_q_proj_0_address0;
    end else begin
        q_proj_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        q_proj_0_ce0 = grp_reshape_2D_to_3D_fu_878_v142_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        q_proj_0_ce0 = grp_apply_rotary_pos_emb_fu_808_q_proj_0_ce0;
    end else begin
        q_proj_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        q_proj_0_ce1 = grp_apply_rotary_pos_emb_fu_808_q_proj_0_ce1;
    end else begin
        q_proj_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        q_proj_0_we0 = grp_reshape_2D_to_3D_fu_878_v142_0_we0;
    end else begin
        q_proj_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        q_proj_re_address0 = zext_ln485_fu_937_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        q_proj_re_address0 = grp_reshape_2D_to_3D_fu_878_v141_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        q_proj_re_address0 = grp_linear_forward_no_mu_fu_830_v81_address0;
    end else begin
        q_proj_re_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        q_proj_re_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        q_proj_re_ce0 = grp_reshape_2D_to_3D_fu_878_v141_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        q_proj_re_ce0 = grp_linear_forward_no_mu_fu_830_v81_ce0;
    end else begin
        q_proj_re_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        q_proj_re_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        q_proj_re_d0 = grp_linear_forward_no_mu_fu_830_v81_d0;
    end else begin
        q_proj_re_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln484_fu_925_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        q_proj_re_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        q_proj_re_we0 = grp_linear_forward_no_mu_fu_830_v81_we0;
    end else begin
        q_proj_re_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        quantized_final_outp_address0 = grp_linear_forward_no_mu_fu_830_v77_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        quantized_final_outp_address0 = grp_quantize_activation_fu_822_v24_0_address0;
    end else begin
        quantized_final_outp_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        quantized_final_outp_ce0 = grp_linear_forward_no_mu_fu_830_v77_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        quantized_final_outp_ce0 = grp_quantize_activation_fu_822_v24_0_ce0;
    end else begin
        quantized_final_outp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        quantized_final_outp_we0 = grp_quantize_activation_fu_822_v24_0_we0;
    end else begin
        quantized_final_outp_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
        quantized_hidden_sta_address0 = grp_linear_forward_no_mu_fu_830_v77_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        quantized_hidden_sta_address0 = grp_quantize_activation_fu_822_v24_0_address0;
    end else begin
        quantized_hidden_sta_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
        quantized_hidden_sta_ce0 = grp_linear_forward_no_mu_fu_830_v77_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        quantized_hidden_sta_ce0 = grp_quantize_activation_fu_822_v24_0_ce0;
    end else begin
        quantized_hidden_sta_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        quantized_hidden_sta_we0 = grp_quantize_activation_fu_822_v24_0_we0;
    end else begin
        quantized_hidden_sta_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln646_fu_1769_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state71))) begin
        rms_attn_output_0_address0 = zext_ln647_fu_1781_p1;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        rms_attn_output_0_address0 = grp_quantize_activation_fu_822_v22_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        rms_attn_output_0_address0 = grp_rms_norm_fu_784_v3_0_address0;
    end else begin
        rms_attn_output_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln646_fu_1769_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state71))) begin
        rms_attn_output_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        rms_attn_output_0_ce0 = grp_quantize_activation_fu_822_v22_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        rms_attn_output_0_ce0 = grp_rms_norm_fu_784_v3_0_ce0;
    end else begin
        rms_attn_output_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln646_fu_1769_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state71))) begin
        rms_attn_output_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        rms_attn_output_0_d0 = grp_rms_norm_fu_784_v3_0_d0;
    end else begin
        rms_attn_output_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln646_fu_1769_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state71))) begin
        rms_attn_output_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        rms_attn_output_0_we0 = grp_rms_norm_fu_784_v3_0_we0;
    end else begin
        rms_attn_output_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln465_fu_908_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        rms_hidden_states_0_address0 = zext_ln466_fu_920_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        rms_hidden_states_0_address0 = grp_quantize_activation_fu_822_v22_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        rms_hidden_states_0_address0 = grp_rms_norm_fu_784_v3_0_address0;
    end else begin
        rms_hidden_states_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln465_fu_908_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        rms_hidden_states_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        rms_hidden_states_0_ce0 = grp_quantize_activation_fu_822_v22_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        rms_hidden_states_0_ce0 = grp_rms_norm_fu_784_v3_0_ce0;
    end else begin
        rms_hidden_states_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln465_fu_908_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        rms_hidden_states_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        rms_hidden_states_0_d0 = grp_rms_norm_fu_784_v3_0_d0;
    end else begin
        rms_hidden_states_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln465_fu_908_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        rms_hidden_states_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        rms_hidden_states_0_we0 = grp_rms_norm_fu_784_v3_0_we0;
    end else begin
        rms_hidden_states_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        softmax_attn_weights_address0 = sext_ln616_fu_1572_p1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        softmax_attn_weights_address0 = grp_GEMM_3D_float2_fu_854_v246_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        softmax_attn_weights_address0 = grp_softmax_fu_764_v220_0_address0;
    end else begin
        softmax_attn_weights_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        softmax_attn_weights_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        softmax_attn_weights_ce0 = grp_GEMM_3D_float2_fu_854_v246_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        softmax_attn_weights_ce0 = grp_softmax_fu_764_v220_0_ce0;
    end else begin
        softmax_attn_weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        softmax_attn_weights_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        softmax_attn_weights_d0 = grp_softmax_fu_764_v220_0_d0;
    end else begin
        softmax_attn_weights_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln615_fu_1551_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state62))) begin
        softmax_attn_weights_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        softmax_attn_weights_we0 = grp_softmax_fu_764_v220_0_we0;
    end else begin
        softmax_attn_weights_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        updated_k_cache_address0 = zext_ln551_4_fu_1218_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        updated_k_cache_address0 = grp_transpose_last_two_d_fu_871_v198_address0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        updated_k_cache_address0 = grp_cache_update_fu_861_v189_address0;
    end else begin
        updated_k_cache_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        updated_k_cache_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        updated_k_cache_ce0 = grp_transpose_last_two_d_fu_871_v198_ce0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        updated_k_cache_ce0 = grp_cache_update_fu_861_v189_ce0;
    end else begin
        updated_k_cache_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        updated_k_cache_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        updated_k_cache_d0 = grp_cache_update_fu_861_v189_d0;
    end else begin
        updated_k_cache_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln550_fu_1197_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        updated_k_cache_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        updated_k_cache_we0 = grp_cache_update_fu_861_v189_we0;
    end else begin
        updated_k_cache_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        updated_v_cache_address0 = zext_ln559_4_fu_1337_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        updated_v_cache_address0 = grp_cache_update_fu_861_v189_address0;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        updated_v_cache_address0 = grp_GEMM_3D_float2_fu_854_v247_address0;
    end else begin
        updated_v_cache_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        updated_v_cache_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        updated_v_cache_ce0 = grp_cache_update_fu_861_v189_ce0;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        updated_v_cache_ce0 = grp_GEMM_3D_float2_fu_854_v247_ce0;
    end else begin
        updated_v_cache_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        updated_v_cache_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        updated_v_cache_d0 = grp_cache_update_fu_861_v189_d0;
    end else begin
        updated_v_cache_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln558_fu_1316_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        updated_v_cache_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        updated_v_cache_we0 = grp_cache_update_fu_861_v189_we0;
    end else begin
        updated_v_cache_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        v258_ce0 = grp_rms_norm_fu_784_v0_ce0;
    end else begin
        v258_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        v259_ce0 = grp_linear_forward_no_mu_fu_830_v79_ce0;
    end else begin
        v259_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        v261_ce0 = grp_linear_forward_no_mu_fu_830_v79_ce0;
    end else begin
        v261_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        v263_ce0 = grp_linear_forward_no_mu_fu_830_v79_ce0;
    end else begin
        v263_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        v265_ce0 = grp_linear_forward_no_mu_fu_830_v79_ce0;
    end else begin
        v265_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        v269_ce0 = grp_rms_norm_fu_784_v1_ce0;
    end else begin
        v269_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        v270_ce0 = grp_rms_norm_fu_784_v1_ce0;
    end else begin
        v270_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        v271_ce0 = grp_cache_update_fu_861_v187_ce0;
    end else begin
        v271_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        v272_ce0 = grp_cache_update_fu_861_v187_ce0;
    end else begin
        v272_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln664_fu_1786_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state75))) begin
        v274_address0 = zext_ln665_fu_1798_p1;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        v274_address0 = grp_linear_forward_no_mu_fu_830_v81_address0;
    end else begin
        v274_address0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln664_fu_1786_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state75))) begin
        v274_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        v274_ce0 = grp_linear_forward_no_mu_fu_830_v81_ce0;
    end else begin
        v274_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln664_fu_1786_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state75))) begin
        v274_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        v274_d0 = grp_linear_forward_no_mu_fu_830_v81_d0;
    end else begin
        v274_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln664_fu_1786_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state75))) begin
        v274_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        v274_we0 = grp_linear_forward_no_mu_fu_830_v81_we0;
    end else begin
        v274_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        v_proj_0_address0 = grp_reshape_2D_to_3D_fu_878_v142_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        v_proj_0_address0 = grp_cache_update_fu_861_v188_0_address0;
    end else begin
        v_proj_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        v_proj_0_ce0 = grp_reshape_2D_to_3D_fu_878_v142_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        v_proj_0_ce0 = grp_cache_update_fu_861_v188_0_ce0;
    end else begin
        v_proj_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        v_proj_0_we0 = grp_reshape_2D_to_3D_fu_878_v142_0_we0;
    end else begin
        v_proj_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        v_proj_re_address0 = zext_ln497_fu_971_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        v_proj_re_address0 = grp_reshape_2D_to_3D_fu_878_v141_address0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        v_proj_re_address0 = grp_linear_forward_no_mu_fu_830_v81_address0;
    end else begin
        v_proj_re_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        v_proj_re_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        v_proj_re_ce0 = grp_reshape_2D_to_3D_fu_878_v141_ce0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        v_proj_re_ce0 = grp_linear_forward_no_mu_fu_830_v81_ce0;
    end else begin
        v_proj_re_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        v_proj_re_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        v_proj_re_d0 = grp_linear_forward_no_mu_fu_830_v81_d0;
    end else begin
        v_proj_re_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln496_fu_959_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        v_proj_re_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        v_proj_re_we0 = grp_linear_forward_no_mu_fu_830_v81_we0;
    end else begin
        v_proj_re_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln465_fu_908_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((grp_rms_norm_fu_784_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((grp_quantize_activation_fu_822_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln484_fu_925_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln490_fu_942_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((icmp_ln496_fu_959_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((grp_linear_forward_no_mu_fu_830_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (1'b0 == ap_block_state11_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (1'b0 == ap_block_state13_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((grp_reshape_2D_to_3D_fu_878_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((icmp_ln531_fu_976_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((icmp_ln533_fu_1014_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((icmp_ln539_fu_1040_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((icmp_ln541_fu_1078_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((grp_apply_rotary_pos_emb_fu_808_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((icmp_ln548_fu_1104_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((icmp_ln549_fu_1150_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((icmp_ln550_fu_1197_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((icmp_ln556_fu_1223_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((icmp_ln557_fu_1269_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((icmp_ln558_fu_1316_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((grp_cache_update_fu_861_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            if (((1'b0 == ap_block_state29_on_subcall_done) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state30 : begin
            if (((icmp_ln575_fu_1342_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state31 : begin
            if (((icmp_ln577_fu_1380_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state32 : begin
            if (((grp_GEMM_3D_float_fu_846_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            if (((icmp_ln585_fu_1406_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((icmp_ln587_fu_1444_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state53 : begin
            if (((icmp_ln602_fu_1470_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state53))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state61 : begin
            if (((icmp_ln613_fu_1513_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state61))) begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end
        end
        ap_ST_fsm_state62 : begin
            if (((icmp_ln615_fu_1551_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state62))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end
        end
        ap_ST_fsm_state63 : begin
            if (((grp_softmax_fu_764_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state63))) begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end
        end
        ap_ST_fsm_state64 : begin
            if (((icmp_ln622_fu_1577_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state64))) begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end
        end
        ap_ST_fsm_state65 : begin
            if (((icmp_ln624_fu_1615_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state65))) begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end
        end
        ap_ST_fsm_state66 : begin
            if (((grp_GEMM_3D_float2_fu_854_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state66))) begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end
        end
        ap_ST_fsm_state67 : begin
            if (((icmp_ln632_fu_1641_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state67))) begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end
        end
        ap_ST_fsm_state68 : begin
            if (((icmp_ln637_fu_1658_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state68))) begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end
        end
        ap_ST_fsm_state69 : begin
            if (((icmp_ln638_fu_1734_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state69))) begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state71 : begin
            if (((icmp_ln646_fu_1769_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state71))) begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end
        end
        ap_ST_fsm_state72 : begin
            if (((grp_rms_norm_fu_784_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state72))) begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            if (((grp_quantize_activation_fu_822_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state74))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end
        end
        ap_ST_fsm_state75 : begin
            if (((icmp_ln664_fu_1786_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state75))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end
        end
        ap_ST_fsm_state76 : begin
            if (((grp_linear_forward_no_mu_fu_830_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state76))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln465_fu_914_p2 = (v278_0_0_reg_456 + 11'd1);

assign add_ln484_fu_931_p2 = (v287_0_0_reg_467 + 11'd1);

assign add_ln490_fu_948_p2 = (v290_0_0_reg_478 + 11'd1);

assign add_ln496_fu_965_p2 = (v293_0_0_reg_489 + 11'd1);

assign add_ln533_fu_1020_p2 = (v309_0_0_reg_511 + 7'd1);

assign add_ln534_fu_1030_p2 = (sub_ln534_reg_1863 + zext_ln534_1_fu_1026_p1);

assign add_ln541_fu_1084_p2 = (v313_0_0_reg_533 + 7'd1);

assign add_ln542_fu_1094_p2 = (sub_ln542_reg_1884 + zext_ln542_1_fu_1090_p1);

assign add_ln551_1_fu_1213_p2 = (sub_ln551_1_reg_1918 + zext_ln551_3_fu_1209_p1);

assign add_ln551_fu_1166_p2 = ($signed(zext_ln551_2_fu_1162_p1) + $signed(sext_ln551_reg_1905));

assign add_ln559_1_fu_1332_p2 = (sub_ln559_1_reg_1952 + zext_ln559_3_fu_1328_p1);

assign add_ln559_fu_1285_p2 = ($signed(zext_ln559_2_fu_1281_p1) + $signed(sext_ln559_reg_1939));

assign add_ln577_fu_1386_p2 = (v329_0_0_reg_621 + 3'd1);

assign add_ln578_fu_1396_p2 = (sub_ln578_reg_1973 + zext_ln578_1_fu_1392_p1);

assign add_ln587_fu_1450_p2 = (k9_0_0_reg_643 + 3'd1);

assign add_ln588_fu_1460_p2 = (sub_ln588_reg_1994 + zext_ln588_1_fu_1456_p1);

assign add_ln615_fu_1557_p2 = (v349_0_0_reg_676 + 3'd1);

assign add_ln616_fu_1567_p2 = (sub_ln616_reg_2043 + zext_ln616_1_fu_1563_p1);

assign add_ln624_fu_1621_p2 = (v353_0_0_reg_698 + 7'd1);

assign add_ln625_fu_1631_p2 = (sub_ln625_reg_2064 + zext_ln625_1_fu_1627_p1);

assign add_ln632_fu_1647_p2 = (v356_0_0_reg_709 + 11'd1);

assign add_ln637_fu_1664_p2 = (h7_0_0_reg_720 + 5'd1);

assign add_ln638_fu_1740_p2 = (d4_0_0_reg_731 + 7'd1);

assign add_ln639_fu_1746_p2 = (sub_ln639_reg_2093 + zext_ln638_fu_1730_p1);

assign add_ln640_fu_1756_p2 = (zext_ln638_fu_1730_p1 + sub_ln640_reg_2098);

assign add_ln646_fu_1775_p2 = (v363_0_0_reg_742 + 11'd1);

assign add_ln664_fu_1792_p2 = (v371_0_0_reg_753 + 11'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state11_on_subcall_done = ((grp_reshape_2D_to_3D_fu_878_ap_done == 1'b0) | (grp_linear_forward_no_mu_fu_830_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state13_on_subcall_done = ((grp_reshape_2D_to_3D_fu_878_ap_done == 1'b0) | (grp_linear_forward_no_mu_fu_830_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state29_on_subcall_done = ((grp_transpose_last_two_d_fu_871_ap_done == 1'b0) | (grp_cache_update_fu_861_ap_done == 1'b0));
end

assign grp_GEMM_3D_float2_fu_854_ap_start = grp_GEMM_3D_float2_fu_854_ap_start_reg;

assign grp_GEMM_3D_float_fu_846_ap_start = grp_GEMM_3D_float_fu_846_ap_start_reg;

assign grp_apply_rotary_pos_emb_fu_808_ap_start = grp_apply_rotary_pos_emb_fu_808_ap_start_reg;

assign grp_cache_update_fu_861_ap_start = grp_cache_update_fu_861_ap_start_reg;

assign grp_linear_forward_no_mu_fu_830_ap_start = grp_linear_forward_no_mu_fu_830_ap_start_reg;

assign grp_quantize_activation_fu_822_ap_start = grp_quantize_activation_fu_822_ap_start_reg;

assign grp_reshape_2D_to_3D_fu_878_ap_start = grp_reshape_2D_to_3D_fu_878_ap_start_reg;

assign grp_rms_norm_fu_784_ap_start = grp_rms_norm_fu_784_ap_start_reg;

assign grp_softmax_fu_764_ap_start = grp_softmax_fu_764_ap_start_reg;

assign grp_transpose_last_two_d_fu_871_ap_start = grp_transpose_last_two_d_fu_871_ap_start_reg;

assign h6_fu_1476_p2 = (h6_0_reg_654 + 5'd1);

assign i10_fu_1412_p2 = (i10_0_reg_632 + 5'd1);

assign icmp_ln465_fu_908_p2 = ((v278_0_0_reg_456 == 11'd1536) ? 1'b1 : 1'b0);

assign icmp_ln484_fu_925_p2 = ((v287_0_0_reg_467 == 11'd1536) ? 1'b1 : 1'b0);

assign icmp_ln490_fu_942_p2 = ((v290_0_0_reg_478 == 11'd1536) ? 1'b1 : 1'b0);

assign icmp_ln496_fu_959_p2 = ((v293_0_0_reg_489 == 11'd1536) ? 1'b1 : 1'b0);

assign icmp_ln531_fu_976_p2 = ((v307_0_reg_500 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln533_fu_1014_p2 = ((v309_0_0_reg_511 == 7'd96) ? 1'b1 : 1'b0);

assign icmp_ln539_fu_1040_p2 = ((v311_0_reg_522 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln541_fu_1078_p2 = ((v313_0_0_reg_533 == 7'd96) ? 1'b1 : 1'b0);

assign icmp_ln548_fu_1104_p2 = ((v315_0_reg_544 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln549_fu_1150_p2 = ((v316_0_reg_555 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln550_fu_1197_p2 = ((v317_0_reg_566 == 7'd96) ? 1'b1 : 1'b0);

assign icmp_ln556_fu_1223_p2 = ((v319_0_reg_577 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln557_fu_1269_p2 = ((v320_0_reg_588 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln558_fu_1316_p2 = ((v321_0_reg_599 == 7'd96) ? 1'b1 : 1'b0);

assign icmp_ln575_fu_1342_p2 = ((v327_0_reg_610 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln577_fu_1380_p2 = ((v329_0_0_reg_621 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_1406_p2 = ((i10_0_reg_632 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln587_fu_1444_p2 = ((k9_0_0_reg_643 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln602_fu_1470_p2 = ((h6_0_reg_654 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln613_fu_1513_p2 = ((v347_0_reg_665 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln615_fu_1551_p2 = ((v349_0_0_reg_676 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln622_fu_1577_p2 = ((v351_0_reg_687 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln624_fu_1615_p2 = ((v353_0_0_reg_698 == 7'd96) ? 1'b1 : 1'b0);

assign icmp_ln632_fu_1641_p2 = ((v356_0_0_reg_709 == 11'd1536) ? 1'b1 : 1'b0);

assign icmp_ln637_fu_1658_p2 = ((h7_0_0_reg_720 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln638_fu_1734_p2 = ((d4_0_0_reg_731 == 7'd96) ? 1'b1 : 1'b0);

assign icmp_ln646_fu_1769_p2 = ((v363_0_0_reg_742 == 11'd1536) ? 1'b1 : 1'b0);

assign icmp_ln664_fu_1786_p2 = ((v371_0_0_reg_753 == 11'd1536) ? 1'b1 : 1'b0);

assign p_shl2_cast_fu_1302_p3 = {{add_ln559_fu_1285_p2}, {5'd0}};

assign p_shl6_cast_fu_1175_p3 = {{trunc_ln551_fu_1171_p1}, {7'd0}};

assign p_shl7_cast_fu_1183_p3 = {{add_ln551_fu_1166_p2}, {5'd0}};

assign p_shl_cast_fu_1294_p3 = {{trunc_ln559_fu_1290_p1}, {7'd0}};

assign sext_ln534_fu_1035_p1 = $signed(add_ln534_fu_1030_p2);

assign sext_ln542_fu_1099_p1 = $signed(add_ln542_fu_1094_p2);

assign sext_ln551_fu_1146_p1 = $signed(sub_ln551_fu_1140_p2);

assign sext_ln559_fu_1265_p1 = $signed(sub_ln559_fu_1259_p2);

assign sext_ln578_fu_1401_p1 = $signed(add_ln578_fu_1396_p2);

assign sext_ln588_fu_1465_p1 = $signed(add_ln588_fu_1460_p2);

assign sext_ln606_fu_1508_p1 = $signed(sub_ln606_fu_1502_p2);

assign sext_ln616_fu_1572_p1 = $signed(add_ln616_fu_1567_p2);

assign sext_ln625_fu_1636_p1 = $signed(add_ln625_fu_1631_p2);

assign sext_ln639_fu_1751_p1 = $signed(add_ln639_fu_1746_p2);

assign sext_ln640_fu_1761_p1 = $signed(add_ln640_reg_2116);

assign shl_ln640_1_fu_1712_p3 = {{trunc_ln640_fu_1696_p1}, {5'd0}};

assign shl_ln_fu_1700_p3 = {{trunc_ln640_fu_1696_p1}, {7'd0}};

assign sub_ln534_fu_1008_p2 = (tmp_24_fu_988_p3 - zext_ln534_fu_1004_p1);

assign sub_ln542_fu_1072_p2 = (tmp_26_fu_1052_p3 - zext_ln542_fu_1068_p1);

assign sub_ln551_1_fu_1191_p2 = (p_shl6_cast_fu_1175_p3 - p_shl7_cast_fu_1183_p3);

assign sub_ln551_fu_1140_p2 = (zext_ln551_fu_1124_p1 - zext_ln551_1_fu_1136_p1);

assign sub_ln559_1_fu_1310_p2 = (p_shl_cast_fu_1294_p3 - p_shl2_cast_fu_1302_p3);

assign sub_ln559_fu_1259_p2 = (zext_ln559_fu_1243_p1 - zext_ln559_1_fu_1255_p1);

assign sub_ln578_fu_1374_p2 = (tmp_32_fu_1354_p3 - zext_ln578_fu_1370_p1);

assign sub_ln588_fu_1438_p2 = (tmp_34_fu_1418_p3 - zext_ln588_fu_1434_p1);

assign sub_ln606_fu_1502_p2 = (tmp_36_fu_1482_p3 - zext_ln606_fu_1498_p1);

assign sub_ln616_fu_1545_p2 = (tmp_38_fu_1525_p3 - zext_ln616_fu_1541_p1);

assign sub_ln625_fu_1609_p2 = (tmp_40_fu_1589_p3 - zext_ln625_fu_1605_p1);

assign sub_ln639_fu_1690_p2 = (tmp_42_fu_1670_p3 - zext_ln639_fu_1686_p1);

assign sub_ln640_fu_1724_p2 = (zext_ln640_1_fu_1708_p1 - zext_ln640_2_fu_1720_p1);

assign tmp_24_fu_988_p3 = {{v307_0_reg_500}, {7'd0}};

assign tmp_25_fu_996_p3 = {{v307_0_reg_500}, {5'd0}};

assign tmp_26_fu_1052_p3 = {{v311_0_reg_522}, {7'd0}};

assign tmp_27_fu_1060_p3 = {{v311_0_reg_522}, {5'd0}};

assign tmp_28_fu_1116_p3 = {{v315_0_reg_544}, {3'd0}};

assign tmp_29_fu_1128_p3 = {{v315_0_reg_544}, {1'd0}};

assign tmp_30_fu_1235_p3 = {{v319_0_reg_577}, {3'd0}};

assign tmp_31_fu_1247_p3 = {{v319_0_reg_577}, {1'd0}};

assign tmp_32_fu_1354_p3 = {{v327_0_reg_610}, {3'd0}};

assign tmp_33_fu_1362_p3 = {{v327_0_reg_610}, {1'd0}};

assign tmp_34_fu_1418_p3 = {{i10_0_reg_632}, {3'd0}};

assign tmp_35_fu_1426_p3 = {{i10_0_reg_632}, {1'd0}};

assign tmp_36_fu_1482_p3 = {{h6_0_reg_654}, {3'd0}};

assign tmp_37_fu_1490_p3 = {{h6_0_reg_654}, {1'd0}};

assign tmp_38_fu_1525_p3 = {{v347_0_reg_665}, {3'd0}};

assign tmp_39_fu_1533_p3 = {{v347_0_reg_665}, {1'd0}};

assign tmp_40_fu_1589_p3 = {{v351_0_reg_687}, {7'd0}};

assign tmp_41_fu_1597_p3 = {{v351_0_reg_687}, {5'd0}};

assign tmp_42_fu_1670_p3 = {{h7_0_0_reg_720}, {7'd0}};

assign tmp_43_fu_1678_p3 = {{h7_0_0_reg_720}, {5'd0}};

assign trunc_ln551_fu_1171_p1 = add_ln551_fu_1166_p2[7:0];

assign trunc_ln559_fu_1290_p1 = add_ln559_fu_1285_p2[7:0];

assign trunc_ln640_fu_1696_p1 = h7_0_0_reg_720[3:0];

assign v258_address0 = grp_rms_norm_fu_784_v0_address0;

assign v259_address0 = grp_linear_forward_no_mu_fu_830_v79_address0;

assign v261_address0 = grp_linear_forward_no_mu_fu_830_v79_address0;

assign v263_address0 = grp_linear_forward_no_mu_fu_830_v79_address0;

assign v265_address0 = grp_linear_forward_no_mu_fu_830_v79_address0;

assign v267_address0 = grp_apply_rotary_pos_emb_fu_808_v157_address0;

assign v267_ce0 = grp_apply_rotary_pos_emb_fu_808_v157_ce0;

assign v268_address0 = grp_apply_rotary_pos_emb_fu_808_v158_address0;

assign v268_ce0 = grp_apply_rotary_pos_emb_fu_808_v158_ce0;

assign v269_address0 = grp_rms_norm_fu_784_v1_address0;

assign v270_address0 = grp_rms_norm_fu_784_v1_address0;

assign v271_address0 = grp_cache_update_fu_861_v187_address0;

assign v272_address0 = grp_cache_update_fu_861_v187_address0;

assign v307_fu_982_p2 = (v307_0_reg_500 + 5'd1);

assign v311_fu_1046_p2 = (v311_0_reg_522 + 5'd1);

assign v315_fu_1110_p2 = (v315_0_reg_544 + 5'd1);

assign v316_fu_1156_p2 = (v316_0_reg_555 + 3'd1);

assign v317_fu_1203_p2 = (v317_0_reg_566 + 7'd1);

assign v319_fu_1229_p2 = (v319_0_reg_577 + 5'd1);

assign v320_fu_1275_p2 = (v320_0_reg_588 + 3'd1);

assign v321_fu_1322_p2 = (v321_0_reg_599 + 7'd1);

assign v327_fu_1348_p2 = (v327_0_reg_610 + 5'd1);

assign v347_fu_1519_p2 = (v347_0_reg_665 + 5'd1);

assign v351_fu_1583_p2 = (v351_0_reg_687 + 5'd1);

assign zext_ln466_fu_920_p1 = v278_0_0_reg_456;

assign zext_ln485_fu_937_p1 = v287_0_0_reg_467;

assign zext_ln491_fu_954_p1 = v290_0_0_reg_478;

assign zext_ln497_fu_971_p1 = v293_0_0_reg_489;

assign zext_ln534_1_fu_1026_p1 = v309_0_0_reg_511;

assign zext_ln534_fu_1004_p1 = tmp_25_fu_996_p3;

assign zext_ln542_1_fu_1090_p1 = v313_0_0_reg_533;

assign zext_ln542_fu_1068_p1 = tmp_27_fu_1060_p3;

assign zext_ln551_1_fu_1136_p1 = tmp_29_fu_1128_p3;

assign zext_ln551_2_fu_1162_p1 = v316_0_reg_555;

assign zext_ln551_3_fu_1209_p1 = v317_0_reg_566;

assign zext_ln551_4_fu_1218_p1 = add_ln551_1_fu_1213_p2;

assign zext_ln551_fu_1124_p1 = tmp_28_fu_1116_p3;

assign zext_ln559_1_fu_1255_p1 = tmp_31_fu_1247_p3;

assign zext_ln559_2_fu_1281_p1 = v320_0_reg_588;

assign zext_ln559_3_fu_1328_p1 = v321_0_reg_599;

assign zext_ln559_4_fu_1337_p1 = add_ln559_1_fu_1332_p2;

assign zext_ln559_fu_1243_p1 = tmp_30_fu_1235_p3;

assign zext_ln578_1_fu_1392_p1 = v329_0_0_reg_621;

assign zext_ln578_fu_1370_p1 = tmp_33_fu_1362_p3;

assign zext_ln588_1_fu_1456_p1 = k9_0_0_reg_643;

assign zext_ln588_fu_1434_p1 = tmp_35_fu_1426_p3;

assign zext_ln606_fu_1498_p1 = tmp_37_fu_1490_p3;

assign zext_ln616_1_fu_1563_p1 = v349_0_0_reg_676;

assign zext_ln616_fu_1541_p1 = tmp_39_fu_1533_p3;

assign zext_ln625_1_fu_1627_p1 = v353_0_0_reg_698;

assign zext_ln625_fu_1605_p1 = tmp_41_fu_1597_p3;

assign zext_ln633_fu_1653_p1 = v356_0_0_reg_709;

assign zext_ln638_fu_1730_p1 = d4_0_0_reg_731;

assign zext_ln639_fu_1686_p1 = tmp_43_fu_1678_p3;

assign zext_ln640_1_fu_1708_p1 = shl_ln_fu_1700_p3;

assign zext_ln640_2_fu_1720_p1 = shl_ln640_1_fu_1712_p3;

assign zext_ln640_fu_1764_p1 = $unsigned(sext_ln640_fu_1761_p1);

assign zext_ln647_fu_1781_p1 = v363_0_0_reg_742;

assign zext_ln665_fu_1798_p1 = v371_0_0_reg_753;

always @ (posedge ap_clk) begin
    sub_ln534_reg_1863[4:0] <= 5'b00000;
    sub_ln542_reg_1884[4:0] <= 5'b00000;
    sext_ln551_reg_1905[0] <= 1'b0;
    sub_ln551_1_reg_1918[4:0] <= 5'b00000;
    sext_ln559_reg_1939[0] <= 1'b0;
    sub_ln559_1_reg_1952[4:0] <= 5'b00000;
    sub_ln578_reg_1973[0] <= 1'b0;
    sub_ln588_reg_1994[0] <= 1'b0;
    attn_weights_0_addr_1_reg_2025[0] <= 1'b0;
    sub_ln616_reg_2043[0] <= 1'b0;
    sub_ln625_reg_2064[4:0] <= 5'b00000;
    sub_ln639_reg_2093[4:0] <= 5'b00000;
    sub_ln640_reg_2098[4:0] <= 5'b00000;
end

endmodule //attention
