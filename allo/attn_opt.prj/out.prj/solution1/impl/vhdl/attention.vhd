-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity attention is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    v263_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    v263_ce0 : OUT STD_LOGIC;
    v263_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v264_0_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
    v264_0_ce0 : OUT STD_LOGIC;
    v264_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    v264_1_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
    v264_1_ce0 : OUT STD_LOGIC;
    v264_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    v265 : IN STD_LOGIC_VECTOR (31 downto 0);
    v266_0_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
    v266_0_ce0 : OUT STD_LOGIC;
    v266_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    v266_1_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
    v266_1_ce0 : OUT STD_LOGIC;
    v266_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    v267 : IN STD_LOGIC_VECTOR (31 downto 0);
    v268_0_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
    v268_0_ce0 : OUT STD_LOGIC;
    v268_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    v268_1_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
    v268_1_ce0 : OUT STD_LOGIC;
    v268_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    v269 : IN STD_LOGIC_VECTOR (31 downto 0);
    v270_0_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
    v270_0_ce0 : OUT STD_LOGIC;
    v270_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    v270_1_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
    v270_1_ce0 : OUT STD_LOGIC;
    v270_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    v271 : IN STD_LOGIC_VECTOR (31 downto 0);
    v272_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v272_ce0 : OUT STD_LOGIC;
    v272_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v273_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v273_ce0 : OUT STD_LOGIC;
    v273_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v274_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    v274_ce0 : OUT STD_LOGIC;
    v274_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v275_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    v275_ce0 : OUT STD_LOGIC;
    v275_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v276_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    v276_ce0 : OUT STD_LOGIC;
    v276_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v277_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    v277_ce0 : OUT STD_LOGIC;
    v277_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v278 : IN STD_LOGIC_VECTOR (31 downto 0);
    v279_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    v279_ce0 : OUT STD_LOGIC;
    v279_we0 : OUT STD_LOGIC;
    v279_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of attention is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "attention,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.386250,HLS_SYN_LAT=1371080,HLS_SYN_TPT=none,HLS_SYN_MEM=198,HLS_SYN_DSP=88,HLS_SYN_FF=39557,HLS_SYN_LUT=52672,HLS_VERSION=2019_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (79 downto 0) := "00000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (79 downto 0) := "00000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (79 downto 0) := "00000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (79 downto 0) := "00000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (79 downto 0) := "00000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (79 downto 0) := "00000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (79 downto 0) := "00001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (79 downto 0) := "00010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (79 downto 0) := "00100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (79 downto 0) := "01000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (79 downto 0) := "10000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_411CC471 : STD_LOGIC_VECTOR (31 downto 0) := "01000001000111001100010001110001";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv11_600 : STD_LOGIC_VECTOR (10 downto 0) := "11000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_14 : STD_LOGIC_VECTOR (11 downto 0) := "000000010100";
    constant ap_const_lv12_FEC : STD_LOGIC_VECTOR (11 downto 0) := "111111101100";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv7_60 : STD_LOGIC_VECTOR (6 downto 0) := "1100000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal quantized_hidden_sta_8_ce0 : STD_LOGIC;
    signal quantized_hidden_sta_8_we0 : STD_LOGIC;
    signal quantized_hidden_sta_7_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_7_ce0 : STD_LOGIC;
    signal quantized_hidden_sta_7_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_6_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_6_ce0 : STD_LOGIC;
    signal quantized_hidden_sta_6_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_5_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_5_ce0 : STD_LOGIC;
    signal quantized_hidden_sta_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_4_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_4_ce0 : STD_LOGIC;
    signal quantized_hidden_sta_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_3_ce0 : STD_LOGIC;
    signal quantized_hidden_sta_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_2_ce0 : STD_LOGIC;
    signal quantized_hidden_sta_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_1_ce0 : STD_LOGIC;
    signal quantized_hidden_sta_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_ce0 : STD_LOGIC;
    signal quantized_hidden_sta_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_proj_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal q_proj_0_ce0 : STD_LOGIC;
    signal q_proj_0_we0 : STD_LOGIC;
    signal q_proj_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal q_proj_0_ce1 : STD_LOGIC;
    signal q_proj_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_proj_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_proj_0_ce0 : STD_LOGIC;
    signal k_proj_0_we0 : STD_LOGIC;
    signal k_proj_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_proj_0_ce1 : STD_LOGIC;
    signal k_proj_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_proj_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal v_proj_0_ce0 : STD_LOGIC;
    signal v_proj_0_we0 : STD_LOGIC;
    signal v_proj_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_proj_transposed_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal k_proj_transposed_ce0 : STD_LOGIC;
    signal k_proj_transposed_we0 : STD_LOGIC;
    signal k_proj_transposed_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal quantized_final_outp_8_ce0 : STD_LOGIC;
    signal quantized_final_outp_8_we0 : STD_LOGIC;
    signal quantized_final_outp_7_ce0 : STD_LOGIC;
    signal quantized_final_outp_7_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_final_outp_6_ce0 : STD_LOGIC;
    signal quantized_final_outp_6_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_final_outp_5_ce0 : STD_LOGIC;
    signal quantized_final_outp_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_final_outp_4_ce0 : STD_LOGIC;
    signal quantized_final_outp_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_final_outp_3_ce0 : STD_LOGIC;
    signal quantized_final_outp_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_final_outp_2_ce0 : STD_LOGIC;
    signal quantized_final_outp_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_final_outp_1_ce0 : STD_LOGIC;
    signal quantized_final_outp_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_final_outp_ce0 : STD_LOGIC;
    signal quantized_final_outp_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_quantize_activation_fu_969_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1041 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_quantize_activation_fu_969_ap_ready : STD_LOGIC;
    signal grp_quantize_activation_fu_969_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal attn_weights_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1046 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal add_ln479_fu_1058_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln500_fu_1075_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal add_ln506_fu_1092_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal add_ln512_fu_1109_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal select_ln570_fu_1172_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln570_reg_3646 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal icmp_ln571_4_fu_1180_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_4_reg_3651 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_4_fu_1192_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_4_reg_3657 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln581_fu_1210_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln581_reg_3663 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln582_4_fu_1218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_4_reg_3669 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln583_4_fu_1224_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln583_4_reg_3675 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_70_reg_3681 : STD_LOGIC_VECTOR (6 downto 0);
    signal man_V_2_fu_1290_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_2_reg_3686 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal icmp_ln571_fu_1298_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_reg_3691 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_fu_1310_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_reg_3697 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_fu_1328_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_reg_3703 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln582_fu_1336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_reg_3709 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln583_fu_1342_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln583_reg_3715 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_reg_3721 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln581_4_fu_1356_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln581_4_reg_3726 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln585_1_fu_1460_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln585_1_reg_3731 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln603_4_fu_1479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_4_reg_3736 : STD_LOGIC_VECTOR (0 downto 0);
    signal v300_V_fu_1636_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal v300_V_reg_3741 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal scales_fixed_0_V_fu_1648_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal scales_fixed_0_V_reg_3746 : STD_LOGIC_VECTOR (31 downto 0);
    signal man_V_5_fu_1706_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_5_reg_3752 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal icmp_ln571_1_fu_1714_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_1_reg_3757 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_1_fu_1726_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_1_reg_3763 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_1_fu_1744_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_1_reg_3769 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln582_1_fu_1752_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_1_reg_3775 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln583_1_fu_1758_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln583_1_reg_3781 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_41_reg_3787 : STD_LOGIC_VECTOR (6 downto 0);
    signal man_V_8_fu_1824_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_8_reg_3792 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln571_2_fu_1832_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_2_reg_3797 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_2_fu_1844_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_2_reg_3803 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_2_fu_1862_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_2_reg_3809 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln582_2_fu_1870_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_2_reg_3815 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln583_2_fu_1876_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln583_2_reg_3821 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_52_reg_3827 : STD_LOGIC_VECTOR (6 downto 0);
    signal v302_V_fu_2041_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal v302_V_reg_3832 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal grp_linear_forward_no_mu_fu_844_ap_ready : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_844_ap_done : STD_LOGIC;
    signal v304_V_fu_2200_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal v304_V_reg_3837 : STD_LOGIC_VECTOR (31 downto 0);
    signal man_V_11_fu_2260_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_11_reg_3842 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal icmp_ln571_3_fu_2268_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_3_reg_3847 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_3_fu_2280_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_3_reg_3853 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_amt_3_fu_2298_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_3_reg_3859 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln582_3_fu_2306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_3_reg_3865 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln583_3_fu_2312_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln583_3_reg_3871 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_57_reg_3877 : STD_LOGIC_VECTOR (6 downto 0);
    signal v306_V_fu_2477_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal v306_V_reg_3882 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal grp_reshape_2D_to_3D_fu_1009_ap_ready : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_1009_ap_done : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_1017_ap_ready : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_1017_ap_done : STD_LOGIC;
    signal ap_block_state17_on_subcall_done : BOOLEAN;
    signal v338_fu_2491_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal v338_reg_3890 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal sub_ln593_fu_2517_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln593_reg_3895 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln590_fu_2485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln592_fu_2529_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal v342_fu_2555_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal v342_reg_3911 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal sub_ln601_fu_2581_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln601_reg_3916 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln598_fu_2549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln600_fu_2593_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal v346_fu_2619_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal v346_reg_3932 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal sext_ln610_fu_2655_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln610_reg_3937 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln607_fu_2613_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v347_fu_2665_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal v347_reg_3945 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal sub_ln610_1_fu_2700_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln610_1_reg_3950 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln608_fu_2659_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v348_fu_2712_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal v350_fu_2738_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal v350_reg_3966 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal sext_ln618_fu_2774_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln618_reg_3971 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln615_fu_2732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v351_fu_2784_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal v351_reg_3979 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal sub_ln618_1_fu_2819_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln618_1_reg_3984 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln616_fu_2778_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v352_fu_2831_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal v358_fu_2857_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal v358_reg_4000 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal sub_ln637_fu_2883_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln637_reg_4005 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln634_fu_2851_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln636_fu_2895_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal i12_fu_2921_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i12_reg_4021 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal sub_ln647_fu_2947_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln647_reg_4026 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln644_fu_2915_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln646_fu_2959_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln646_reg_4034 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal attn_weights_0_addr_2_reg_4039 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln646_fu_2953_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1029_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_reg_4044 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal h6_fu_2985_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal h6_reg_4052 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal attn_weights_0_addr_1_reg_4057 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln661_fu_2979_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1024_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal v2_reg_4062 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal v378_fu_3028_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal v378_reg_4070 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal sub_ln675_fu_3054_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln675_reg_4075 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln672_fu_3022_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln674_fu_3066_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal v382_fu_3092_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal v382_reg_4091 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal sub_ln684_fu_3118_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln684_reg_4096 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln681_fu_3086_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln683_fu_3130_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal add_ln691_fu_3156_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal add_ln696_fu_3173_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln696_reg_4120 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal sub_ln698_fu_3199_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln698_reg_4125 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln696_fu_3167_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln699_fu_3233_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln699_reg_4130 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln697_fu_3249_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln697_reg_4138 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal icmp_ln697_fu_3243_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln699_fu_3265_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln699_reg_4148 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln705_fu_3284_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state73 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal select_ln570_1_fu_3347_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal select_ln570_1_reg_4161 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_CS_fsm_state77 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state77 : signal is "none";
    signal icmp_ln571_5_fu_3355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_5_reg_4166 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_5_fu_3367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_5_reg_4172 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln581_1_fu_3385_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln581_1_reg_4178 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln582_5_fu_3393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_5_reg_4184 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln583_5_fu_3399_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln583_5_reg_4190 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_73_reg_4196 : STD_LOGIC_VECTOR (6 downto 0);
    signal final_scales_fixed_0_fu_3565_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal final_scales_fixed_0_reg_4201 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state78 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state78 : signal is "none";
    signal add_ln753_fu_3579_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state79 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state79 : signal is "none";
    signal rms_hidden_states_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal rms_hidden_states_0_ce0 : STD_LOGIC;
    signal rms_hidden_states_0_we0 : STD_LOGIC;
    signal rms_hidden_states_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rms_hidden_states_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal q_proj_re_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal q_proj_re_ce0 : STD_LOGIC;
    signal q_proj_re_we0 : STD_LOGIC;
    signal q_proj_re_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal q_proj_re_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_proj_re_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_proj_re_ce0 : STD_LOGIC;
    signal k_proj_re_we0 : STD_LOGIC;
    signal k_proj_re_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_proj_re_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_proj_re_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal v_proj_re_ce0 : STD_LOGIC;
    signal v_proj_re_we0 : STD_LOGIC;
    signal v_proj_re_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_proj_re_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal q_embed_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal q_embed_0_ce0 : STD_LOGIC;
    signal q_embed_0_we0 : STD_LOGIC;
    signal q_embed_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal q_embed_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_embed_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_embed_0_ce0 : STD_LOGIC;
    signal k_embed_0_we0 : STD_LOGIC;
    signal k_embed_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_embed_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal updated_k_cache_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal updated_k_cache_ce0 : STD_LOGIC;
    signal updated_k_cache_we0 : STD_LOGIC;
    signal updated_k_cache_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal updated_k_cache_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal updated_v_cache_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal updated_v_cache_ce0 : STD_LOGIC;
    signal updated_v_cache_we0 : STD_LOGIC;
    signal updated_v_cache_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal updated_v_cache_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal attn_weights_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal attn_weights_0_ce0 : STD_LOGIC;
    signal attn_weights_0_we0 : STD_LOGIC;
    signal attn_weights_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal softmax_attn_weights_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal softmax_attn_weights_ce0 : STD_LOGIC;
    signal softmax_attn_weights_we0 : STD_LOGIC;
    signal softmax_attn_weights_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal softmax_attn_weights_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal attn_output_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal attn_output_0_ce0 : STD_LOGIC;
    signal attn_output_0_we0 : STD_LOGIC;
    signal attn_output_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal attn_output_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal attn_output_2D_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal attn_output_2D_ce0 : STD_LOGIC;
    signal attn_output_2D_we0 : STD_LOGIC;
    signal attn_output_2D_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal attn_output_2D_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rms_attn_output_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal rms_attn_output_0_ce0 : STD_LOGIC;
    signal rms_attn_output_0_we0 : STD_LOGIC;
    signal rms_attn_output_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rms_attn_output_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_linear_forward_no_mu_fu_844_ap_start : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_844_ap_idle : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_844_v78_0_0_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v78_0_0_0_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_844_v78_0_0_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v78_0_0_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v78_0_0_1_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_844_v78_0_0_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v78_0_0_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v78_0_0_2_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_844_v78_0_0_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v78_0_0_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v78_0_0_3_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_844_v78_0_0_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v78_1_0_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v78_1_0_0_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_844_v78_1_0_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v78_1_0_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v78_1_0_1_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_844_v78_1_0_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v78_1_0_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v78_1_0_2_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_844_v78_1_0_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v78_1_0_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v78_1_0_3_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_844_v78_1_0_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v79_0_V_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v80_0_address0 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v80_0_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_844_v80_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v80_1_address0 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v80_1_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_844_v80_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v81_V : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v82_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_linear_forward_no_mu_fu_844_v82_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_844_v82_we0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_844_v82_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_linear_forward_no_mu_fu_873_ap_start : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_873_ap_done : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_873_ap_idle : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_873_ap_ready : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_873_v78_0_0_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_873_v78_0_0_0_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_873_v78_0_0_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_873_v78_0_0_1_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_873_v78_0_0_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_873_v78_0_0_2_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_873_v78_0_0_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_873_v78_0_0_3_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_873_v78_1_0_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_873_v78_1_0_0_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_873_v78_1_0_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_873_v78_1_0_1_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_873_v78_1_0_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_873_v78_1_0_2_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_873_v78_1_0_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_873_v78_1_0_3_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_873_v80_0_address0 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_linear_forward_no_mu_fu_873_v80_0_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_873_v80_1_address0 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_linear_forward_no_mu_fu_873_v80_1_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_873_v82_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_linear_forward_no_mu_fu_873_v82_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_873_v82_we0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_873_v82_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_softmax_fu_911_ap_start : STD_LOGIC;
    signal grp_softmax_fu_911_ap_done : STD_LOGIC;
    signal grp_softmax_fu_911_ap_idle : STD_LOGIC;
    signal grp_softmax_fu_911_ap_ready : STD_LOGIC;
    signal grp_softmax_fu_911_v224_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_softmax_fu_911_v224_0_ce0 : STD_LOGIC;
    signal grp_softmax_fu_911_v225_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_softmax_fu_911_v225_0_ce0 : STD_LOGIC;
    signal grp_softmax_fu_911_v225_0_we0 : STD_LOGIC;
    signal grp_softmax_fu_911_v225_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rms_norm_fu_931_ap_start : STD_LOGIC;
    signal grp_rms_norm_fu_931_ap_done : STD_LOGIC;
    signal grp_rms_norm_fu_931_ap_idle : STD_LOGIC;
    signal grp_rms_norm_fu_931_ap_ready : STD_LOGIC;
    signal grp_rms_norm_fu_931_v0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_rms_norm_fu_931_v0_ce0 : STD_LOGIC;
    signal grp_rms_norm_fu_931_v0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rms_norm_fu_931_v1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_rms_norm_fu_931_v1_ce0 : STD_LOGIC;
    signal grp_rms_norm_fu_931_v1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rms_norm_fu_931_v3_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_rms_norm_fu_931_v3_0_ce0 : STD_LOGIC;
    signal grp_rms_norm_fu_931_v3_0_we0 : STD_LOGIC;
    signal grp_rms_norm_fu_931_v3_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_apply_rotary_pos_emb_fu_955_ap_start : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_955_ap_done : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_955_ap_idle : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_955_ap_ready : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_955_v162_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_apply_rotary_pos_emb_fu_955_v162_ce0 : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_955_v163_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_apply_rotary_pos_emb_fu_955_v163_ce0 : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_955_v164_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_apply_rotary_pos_emb_fu_955_v164_0_ce0 : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_955_v164_0_we0 : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_955_v164_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_apply_rotary_pos_emb_fu_955_v165_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_apply_rotary_pos_emb_fu_955_v165_0_ce0 : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_955_v165_0_we0 : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_955_v165_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_apply_rotary_pos_emb_fu_955_q_proj_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_apply_rotary_pos_emb_fu_955_q_proj_0_ce0 : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_955_q_proj_0_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_apply_rotary_pos_emb_fu_955_q_proj_0_ce1 : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_955_k_proj_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_apply_rotary_pos_emb_fu_955_k_proj_0_ce0 : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_955_k_proj_0_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_apply_rotary_pos_emb_fu_955_k_proj_0_ce1 : STD_LOGIC;
    signal grp_quantize_activation_fu_969_ap_start : STD_LOGIC;
    signal grp_quantize_activation_fu_969_ap_idle : STD_LOGIC;
    signal grp_quantize_activation_fu_969_v22_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_quantize_activation_fu_969_v22_0_ce0 : STD_LOGIC;
    signal grp_quantize_activation_fu_969_v22_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_quantize_activation_fu_969_v24_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_quantize_activation_fu_969_v24_0_ce0 : STD_LOGIC;
    signal grp_quantize_activation_fu_969_v24_0_we0 : STD_LOGIC;
    signal grp_quantize_activation_fu_969_v24_0_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_GEMM_3D_float_fu_977_ap_start : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_977_ap_done : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_977_ap_idle : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_977_ap_ready : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_977_v209_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_GEMM_3D_float_fu_977_v209_0_ce0 : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_977_v211_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_GEMM_3D_float_fu_977_v211_0_ce0 : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_977_v211_0_we0 : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_977_v211_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_GEMM_3D_float_fu_977_k_proj_transposed_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_GEMM_3D_float_fu_977_k_proj_transposed_ce0 : STD_LOGIC;
    signal grp_GEMM_3D_float2_fu_985_ap_start : STD_LOGIC;
    signal grp_GEMM_3D_float2_fu_985_ap_done : STD_LOGIC;
    signal grp_GEMM_3D_float2_fu_985_ap_idle : STD_LOGIC;
    signal grp_GEMM_3D_float2_fu_985_ap_ready : STD_LOGIC;
    signal grp_GEMM_3D_float2_fu_985_v251_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_GEMM_3D_float2_fu_985_v251_0_ce0 : STD_LOGIC;
    signal grp_GEMM_3D_float2_fu_985_v252_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_GEMM_3D_float2_fu_985_v252_ce0 : STD_LOGIC;
    signal grp_GEMM_3D_float2_fu_985_v253_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_GEMM_3D_float2_fu_985_v253_0_ce0 : STD_LOGIC;
    signal grp_GEMM_3D_float2_fu_985_v253_0_we0 : STD_LOGIC;
    signal grp_GEMM_3D_float2_fu_985_v253_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cache_update_fu_992_ap_start : STD_LOGIC;
    signal grp_cache_update_fu_992_ap_done : STD_LOGIC;
    signal grp_cache_update_fu_992_ap_idle : STD_LOGIC;
    signal grp_cache_update_fu_992_ap_ready : STD_LOGIC;
    signal grp_cache_update_fu_992_v192_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_cache_update_fu_992_v192_ce0 : STD_LOGIC;
    signal grp_cache_update_fu_992_v192_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cache_update_fu_992_v193_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_cache_update_fu_992_v193_0_ce0 : STD_LOGIC;
    signal grp_cache_update_fu_992_v193_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cache_update_fu_992_v194_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cache_update_fu_992_v194_ce0 : STD_LOGIC;
    signal grp_cache_update_fu_992_v194_we0 : STD_LOGIC;
    signal grp_cache_update_fu_992_v194_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_transpose_last_two_d_fu_1002_ap_start : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_1002_ap_done : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_1002_ap_idle : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_1002_ap_ready : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_1002_v203_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_transpose_last_two_d_fu_1002_v203_ce0 : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_1002_v204_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_transpose_last_two_d_fu_1002_v204_ce0 : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_1002_v204_we0 : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_1002_v204_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_reshape_2D_to_3D_fu_1009_ap_start : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_1009_ap_idle : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_1009_v146_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_reshape_2D_to_3D_fu_1009_v146_ce0 : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_1009_v146_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_reshape_2D_to_3D_fu_1009_v147_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_reshape_2D_to_3D_fu_1009_v147_0_ce0 : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_1009_v147_0_we0 : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_1009_v147_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_reshape_2D_to_3D_fu_1017_ap_start : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_1017_ap_idle : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_1017_v146_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_reshape_2D_to_3D_fu_1017_v146_ce0 : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_1017_v147_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_reshape_2D_to_3D_fu_1017_v147_0_ce0 : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_1017_v147_0_we0 : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_1017_v147_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal v283_0_0_reg_536 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln479_fu_1052_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v293_0_0_reg_547 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln500_fu_1069_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v296_0_0_reg_558 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln506_fu_1086_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v299_0_0_reg_569 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln512_fu_1103_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v338_0_reg_580 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln592_fu_2523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v340_0_0_reg_591 : STD_LOGIC_VECTOR (6 downto 0);
    signal v342_0_reg_602 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln600_fu_2587_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v344_0_0_reg_613 : STD_LOGIC_VECTOR (6 downto 0);
    signal v346_0_reg_624 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal v347_0_reg_635 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln609_fu_2706_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v348_0_reg_646 : STD_LOGIC_VECTOR (6 downto 0);
    signal v350_0_reg_657 : STD_LOGIC_VECTOR (4 downto 0);
    signal v351_0_reg_668 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln617_fu_2825_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v352_0_reg_679 : STD_LOGIC_VECTOR (6 downto 0);
    signal v358_0_reg_690 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_block_state31_on_subcall_done : BOOLEAN;
    signal icmp_ln636_fu_2889_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v360_0_0_reg_701 : STD_LOGIC_VECTOR (2 downto 0);
    signal i12_0_reg_712 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal k10_0_0_reg_723 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal h6_0_reg_734 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal v378_0_reg_745 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln674_fu_3060_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v380_0_0_reg_756 : STD_LOGIC_VECTOR (2 downto 0);
    signal v382_0_reg_767 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal icmp_ln683_fu_3124_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v384_0_0_reg_778 : STD_LOGIC_VECTOR (6 downto 0);
    signal v387_0_0_reg_789 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln691_fu_3150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal h7_0_0_reg_800 : STD_LOGIC_VECTOR (4 downto 0);
    signal d4_0_0_reg_811 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal v394_0_0_reg_822 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln705_fu_3278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v417_0_0_reg_833 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln753_fu_3573_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_linear_forward_no_mu_fu_844_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state80 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state80 : signal is "none";
    signal grp_linear_forward_no_mu_fu_873_ap_start_reg : STD_LOGIC := '0';
    signal grp_softmax_fu_911_ap_start_reg : STD_LOGIC := '0';
    signal grp_rms_norm_fu_931_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state74 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal grp_apply_rotary_pos_emb_fu_955_ap_start_reg : STD_LOGIC := '0';
    signal grp_quantize_activation_fu_969_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state75 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal grp_GEMM_3D_float_fu_977_ap_start_reg : STD_LOGIC := '0';
    signal grp_GEMM_3D_float2_fu_985_ap_start_reg : STD_LOGIC := '0';
    signal grp_cache_update_fu_992_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal grp_transpose_last_two_d_fu_1002_ap_start_reg : STD_LOGIC := '0';
    signal grp_reshape_2D_to_3D_fu_1009_ap_start_reg : STD_LOGIC := '0';
    signal grp_reshape_2D_to_3D_fu_1017_ap_start_reg : STD_LOGIC := '0';
    signal zext_ln480_fu_1064_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln501_fu_1081_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln507_fu_1098_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln513_fu_1115_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln593_fu_2544_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln601_fu_2608_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln610_4_fu_2727_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln618_4_fu_2846_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln637_fu_2910_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln647_fu_2974_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln665_fu_3017_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln675_fu_3081_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln684_fu_3145_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln692_fu_3162_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln698_fu_3260_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln699_fu_3273_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln706_fu_3290_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln754_fu_3585_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal grp_fu_1034_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1034_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln696_7_fu_1120_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_9_fu_1136_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln565_4_fu_1150_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_1_fu_1154_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln569_fu_1162_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_69_fu_1128_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln461_fu_1166_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln557_fu_1124_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln461_4_fu_1146_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln575_fu_1186_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln581_4_fu_1198_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_4_fu_1204_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ireg_V_fu_1238_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_fu_1254_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln565_fu_1268_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_fu_1272_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_53_fu_1280_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_s_fu_1246_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_1_fu_1284_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln556_fu_1242_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln461_fu_1264_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_fu_1304_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln581_fu_1316_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_fu_1322_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln586_4_fu_1369_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_4_fu_1373_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal bitcast_ln696_8_fu_1382_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_71_fu_1386_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_4_fu_1402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln582_4_fu_1407_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln582_4_fu_1419_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_4_fu_1423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_4_fu_1359_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_4_fu_1429_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln585_4_fu_1434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_8_fu_1440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln588_4_fu_1394_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln582_fu_1412_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln585_9_fu_1454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln586_4_fu_1378_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln585_fu_1446_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln581_4_fu_1468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_4_fu_1364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_4_fu_1473_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln581_fu_1485_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln586_fu_1498_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_fu_1502_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal bitcast_ln696_fu_1511_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_fu_1514_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_fu_1535_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln582_fu_1545_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_fu_1549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_fu_1488_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_fu_1555_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln585_fu_1560_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_fu_1578_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_fu_1493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_fu_1583_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_fu_1589_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln604_fu_1530_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln586_fu_1507_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln585_1_fu_1572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_fu_1566_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln588_fu_1522_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln582_fu_1540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_fu_1603_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_fu_1595_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln603_1_fu_1609_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln603_1_fu_1616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_2_fu_1630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_2_fu_1622_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln604_4_fu_1644_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ireg_V_1_fu_1654_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_1_fu_1670_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln565_1_fu_1684_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_s_fu_1688_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_55_fu_1696_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_54_fu_1662_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_4_fu_1700_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln556_1_fu_1658_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln461_1_fu_1680_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_1_fu_1720_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln581_1_fu_1732_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_1_fu_1738_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1037_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_V_2_fu_1772_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_2_fu_1788_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln565_2_fu_1802_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_8_fu_1806_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_57_fu_1814_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_56_fu_1780_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_7_fu_1818_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln556_2_fu_1776_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln461_2_fu_1798_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_2_fu_1838_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln581_2_fu_1850_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_2_fu_1856_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln581_1_fu_1890_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln586_1_fu_1903_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_1_fu_1907_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal bitcast_ln696_2_fu_1916_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_42_fu_1919_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_1_fu_1940_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln582_1_fu_1950_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_1_fu_1954_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_1_fu_1893_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_1_fu_1960_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln585_1_fu_1965_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_1_fu_1983_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_1_fu_1898_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_1_fu_1988_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_1_fu_1994_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln604_1_fu_1935_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln586_1_fu_1912_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln585_3_fu_1977_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_2_fu_1971_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln588_1_fu_1927_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln582_1_fu_1945_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_3_fu_2008_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_4_fu_2000_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln603_5_fu_2014_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln603_4_fu_2021_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_5_fu_2035_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_6_fu_2027_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln581_2_fu_2049_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln586_2_fu_2062_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_2_fu_2066_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal bitcast_ln696_4_fu_2075_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_53_fu_2078_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_2_fu_2099_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln582_2_fu_2109_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_2_fu_2113_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_2_fu_2052_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_2_fu_2119_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln585_2_fu_2124_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_2_fu_2142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_2_fu_2057_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_2_fu_2147_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_2_fu_2153_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln604_2_fu_2094_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln586_2_fu_2071_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln585_5_fu_2136_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_4_fu_2130_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln588_2_fu_2086_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln582_2_fu_2104_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_6_fu_2167_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_8_fu_2159_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln603_9_fu_2173_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln603_7_fu_2180_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_8_fu_2194_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_10_fu_2186_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ireg_V_3_fu_2208_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_3_fu_2224_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln565_3_fu_2238_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_9_fu_2242_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_59_fu_2250_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_58_fu_2216_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_10_fu_2254_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln556_3_fu_2212_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln461_3_fu_2234_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_3_fu_2274_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln581_3_fu_2286_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_3_fu_2292_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln581_3_fu_2326_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln586_3_fu_2339_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_3_fu_2343_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal bitcast_ln696_6_fu_2352_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_68_fu_2355_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_3_fu_2376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln582_3_fu_2386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_3_fu_2390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_3_fu_2329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_3_fu_2396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln585_3_fu_2401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_3_fu_2419_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_3_fu_2334_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_3_fu_2424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_3_fu_2430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln604_3_fu_2371_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln586_3_fu_2348_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln585_7_fu_2413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_6_fu_2407_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln588_3_fu_2363_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln582_3_fu_2381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_9_fu_2444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_12_fu_2436_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln603_13_fu_2450_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln603_10_fu_2457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_11_fu_2471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_14_fu_2463_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_fu_2505_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_24_fu_2497_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln593_fu_2513_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln593_1_fu_2535_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln593_fu_2539_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_27_fu_2569_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_26_fu_2561_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln601_fu_2577_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln601_1_fu_2599_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln601_fu_2603_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_28_fu_2625_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_29_fu_2637_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln610_fu_2633_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln610_1_fu_2645_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln610_fu_2649_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln610_2_fu_2671_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln610_fu_2675_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln610_fu_2680_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl8_cast_fu_2684_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl9_cast_fu_2692_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln610_3_fu_2718_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln610_1_fu_2722_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_30_fu_2744_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_31_fu_2756_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln618_fu_2752_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln618_1_fu_2764_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln618_fu_2768_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln618_2_fu_2790_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln618_fu_2794_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln618_fu_2799_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl_cast_fu_2803_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl2_cast_fu_2811_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln618_3_fu_2837_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln618_1_fu_2841_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_33_fu_2871_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_32_fu_2863_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln637_fu_2879_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln637_1_fu_2901_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln637_fu_2905_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_35_fu_2935_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_34_fu_2927_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln647_fu_2943_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln647_1_fu_2965_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln647_fu_2969_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_37_fu_2999_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_36_fu_2991_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln665_fu_3007_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln665_fu_3011_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_43_fu_3042_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_40_fu_3034_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln675_fu_3050_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln675_1_fu_3072_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln675_fu_3076_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_45_fu_3106_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_44_fu_3098_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln684_fu_3114_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln684_1_fu_3136_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln684_fu_3140_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_47_fu_3187_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_46_fu_3179_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln698_fu_3195_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln699_fu_3205_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln_fu_3209_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln699_1_fu_3221_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln699_1_fu_3217_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln699_2_fu_3229_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln697_fu_3239_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln698_fu_3255_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln699_fu_3270_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln696_9_fu_3295_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_s_97_fu_3311_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln565_5_fu_3325_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_5_fu_3329_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln569_1_fu_3337_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_72_fu_3303_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln461_1_fu_3341_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln557_1_fu_3299_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln461_5_fu_3321_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln575_1_fu_3361_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln581_5_fu_3373_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_5_fu_3379_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln581_5_fu_3413_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln586_5_fu_3426_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_5_fu_3430_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal bitcast_ln696_10_fu_3439_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_74_fu_3443_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_5_fu_3464_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln582_5_fu_3474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_5_fu_3478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_5_fu_3416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_5_fu_3484_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln585_5_fu_3489_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_5_fu_3507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_5_fu_3421_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_5_fu_3512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_5_fu_3518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln604_5_fu_3459_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln586_5_fu_3435_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln585_11_fu_3501_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_10_fu_3495_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln588_5_fu_3451_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln582_5_fu_3469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_12_fu_3532_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_17_fu_3524_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln603_18_fu_3538_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln603_13_fu_3545_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_14_fu_3559_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_19_fu_3551_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1034_ce : STD_LOGIC;
    signal ap_block_state15_on_subcall_done : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (79 downto 0);

    component linear_forward_no_mu IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v78_0_0_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        v78_0_0_0_ce0 : OUT STD_LOGIC;
        v78_0_0_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        v78_0_0_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        v78_0_0_1_ce0 : OUT STD_LOGIC;
        v78_0_0_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        v78_0_0_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        v78_0_0_2_ce0 : OUT STD_LOGIC;
        v78_0_0_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        v78_0_0_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        v78_0_0_3_ce0 : OUT STD_LOGIC;
        v78_0_0_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        v78_1_0_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        v78_1_0_0_ce0 : OUT STD_LOGIC;
        v78_1_0_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        v78_1_0_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        v78_1_0_1_ce0 : OUT STD_LOGIC;
        v78_1_0_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        v78_1_0_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        v78_1_0_2_ce0 : OUT STD_LOGIC;
        v78_1_0_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        v78_1_0_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        v78_1_0_3_ce0 : OUT STD_LOGIC;
        v78_1_0_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        v79_0_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        v80_0_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
        v80_0_ce0 : OUT STD_LOGIC;
        v80_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        v80_1_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
        v80_1_ce0 : OUT STD_LOGIC;
        v80_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        v81_V : IN STD_LOGIC_VECTOR (31 downto 0);
        v82_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v82_ce0 : OUT STD_LOGIC;
        v82_we0 : OUT STD_LOGIC;
        v82_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component softmax IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v224_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        v224_0_ce0 : OUT STD_LOGIC;
        v224_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v225_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        v225_0_ce0 : OUT STD_LOGIC;
        v225_0_we0 : OUT STD_LOGIC;
        v225_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        v225_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component rms_norm IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v0_ce0 : OUT STD_LOGIC;
        v0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v1_ce0 : OUT STD_LOGIC;
        v1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v3_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v3_0_ce0 : OUT STD_LOGIC;
        v3_0_we0 : OUT STD_LOGIC;
        v3_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component apply_rotary_pos_emb IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v162_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v162_ce0 : OUT STD_LOGIC;
        v162_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v163_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v163_ce0 : OUT STD_LOGIC;
        v163_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v164_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v164_0_ce0 : OUT STD_LOGIC;
        v164_0_we0 : OUT STD_LOGIC;
        v164_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        v165_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v165_0_ce0 : OUT STD_LOGIC;
        v165_0_we0 : OUT STD_LOGIC;
        v165_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        q_proj_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        q_proj_0_ce0 : OUT STD_LOGIC;
        q_proj_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q_proj_0_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        q_proj_0_ce1 : OUT STD_LOGIC;
        q_proj_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        k_proj_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k_proj_0_ce0 : OUT STD_LOGIC;
        k_proj_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        k_proj_0_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k_proj_0_ce1 : OUT STD_LOGIC;
        k_proj_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component quantize_activation IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v22_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v22_0_ce0 : OUT STD_LOGIC;
        v22_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v24_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v24_0_ce0 : OUT STD_LOGIC;
        v24_0_we0 : OUT STD_LOGIC;
        v24_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component GEMM_3D_float IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v209_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v209_0_ce0 : OUT STD_LOGIC;
        v209_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v211_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        v211_0_ce0 : OUT STD_LOGIC;
        v211_0_we0 : OUT STD_LOGIC;
        v211_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        v211_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        k_proj_transposed_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        k_proj_transposed_ce0 : OUT STD_LOGIC;
        k_proj_transposed_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component GEMM_3D_float2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v251_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        v251_0_ce0 : OUT STD_LOGIC;
        v251_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v252_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        v252_ce0 : OUT STD_LOGIC;
        v252_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v253_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v253_0_ce0 : OUT STD_LOGIC;
        v253_0_we0 : OUT STD_LOGIC;
        v253_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        v253_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cache_update IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v192_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        v192_ce0 : OUT STD_LOGIC;
        v192_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v193_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v193_0_ce0 : OUT STD_LOGIC;
        v193_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v194_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        v194_ce0 : OUT STD_LOGIC;
        v194_we0 : OUT STD_LOGIC;
        v194_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component transpose_last_two_d IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v203_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        v203_ce0 : OUT STD_LOGIC;
        v203_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v204_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        v204_ce0 : OUT STD_LOGIC;
        v204_we0 : OUT STD_LOGIC;
        v204_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component reshape_2D_to_3D IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v146_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v146_ce0 : OUT STD_LOGIC;
        v146_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v147_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v147_0_ce0 : OUT STD_LOGIC;
        v147_0_we0 : OUT STD_LOGIC;
        v147_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component attention_fadd_32pcA IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component attention_fdiv_32rcU IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component attention_fpext_3Zio IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component attention_quantizyd2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component attention_quantizzec IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component attention_q_proj_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component attention_v_proj_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component attention_k_proj_Hfu IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component attention_rms_hidRg6 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component attention_updatedShg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component attention_attn_weUhA IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    quantized_hidden_sta_8_U : component attention_quantizyd2
    generic map (
        DataWidth => 8,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_quantize_activation_fu_969_v24_0_address0,
        ce0 => quantized_hidden_sta_8_ce0,
        we0 => quantized_hidden_sta_8_we0,
        d0 => grp_quantize_activation_fu_969_v24_0_d0);

    quantized_hidden_sta_7_U : component attention_quantizzec
    generic map (
        DataWidth => 8,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => quantized_hidden_sta_7_address0,
        ce0 => quantized_hidden_sta_7_ce0,
        q0 => quantized_hidden_sta_7_q0);

    quantized_hidden_sta_6_U : component attention_quantizzec
    generic map (
        DataWidth => 8,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => quantized_hidden_sta_6_address0,
        ce0 => quantized_hidden_sta_6_ce0,
        q0 => quantized_hidden_sta_6_q0);

    quantized_hidden_sta_5_U : component attention_quantizzec
    generic map (
        DataWidth => 8,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => quantized_hidden_sta_5_address0,
        ce0 => quantized_hidden_sta_5_ce0,
        q0 => quantized_hidden_sta_5_q0);

    quantized_hidden_sta_4_U : component attention_quantizzec
    generic map (
        DataWidth => 8,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => quantized_hidden_sta_4_address0,
        ce0 => quantized_hidden_sta_4_ce0,
        q0 => quantized_hidden_sta_4_q0);

    quantized_hidden_sta_3_U : component attention_quantizzec
    generic map (
        DataWidth => 8,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => quantized_hidden_sta_3_address0,
        ce0 => quantized_hidden_sta_3_ce0,
        q0 => quantized_hidden_sta_3_q0);

    quantized_hidden_sta_2_U : component attention_quantizzec
    generic map (
        DataWidth => 8,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => quantized_hidden_sta_2_address0,
        ce0 => quantized_hidden_sta_2_ce0,
        q0 => quantized_hidden_sta_2_q0);

    quantized_hidden_sta_1_U : component attention_quantizzec
    generic map (
        DataWidth => 8,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => quantized_hidden_sta_1_address0,
        ce0 => quantized_hidden_sta_1_ce0,
        q0 => quantized_hidden_sta_1_q0);

    quantized_hidden_sta_U : component attention_quantizzec
    generic map (
        DataWidth => 8,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => quantized_hidden_sta_address0,
        ce0 => quantized_hidden_sta_ce0,
        q0 => quantized_hidden_sta_q0);

    q_proj_0_U : component attention_q_proj_0
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => q_proj_0_address0,
        ce0 => q_proj_0_ce0,
        we0 => q_proj_0_we0,
        d0 => grp_reshape_2D_to_3D_fu_1009_v147_0_d0,
        q0 => q_proj_0_q0,
        address1 => grp_apply_rotary_pos_emb_fu_955_q_proj_0_address1,
        ce1 => q_proj_0_ce1,
        q1 => q_proj_0_q1);

    k_proj_0_U : component attention_q_proj_0
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_proj_0_address0,
        ce0 => k_proj_0_ce0,
        we0 => k_proj_0_we0,
        d0 => grp_reshape_2D_to_3D_fu_1009_v147_0_d0,
        q0 => k_proj_0_q0,
        address1 => grp_apply_rotary_pos_emb_fu_955_k_proj_0_address1,
        ce1 => k_proj_0_ce1,
        q1 => k_proj_0_q1);

    v_proj_0_U : component attention_v_proj_0
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => v_proj_0_address0,
        ce0 => v_proj_0_ce0,
        we0 => v_proj_0_we0,
        d0 => grp_reshape_2D_to_3D_fu_1017_v147_0_d0,
        q0 => v_proj_0_q0);

    k_proj_transposed_U : component attention_k_proj_Hfu
    generic map (
        DataWidth => 32,
        AddressRange => 9216,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_proj_transposed_address0,
        ce0 => k_proj_transposed_ce0,
        we0 => k_proj_transposed_we0,
        d0 => grp_transpose_last_two_d_fu_1002_v204_d0,
        q0 => k_proj_transposed_q0);

    quantized_final_outp_8_U : component attention_quantizyd2
    generic map (
        DataWidth => 8,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_quantize_activation_fu_969_v24_0_address0,
        ce0 => quantized_final_outp_8_ce0,
        we0 => quantized_final_outp_8_we0,
        d0 => grp_quantize_activation_fu_969_v24_0_d0);

    quantized_final_outp_7_U : component attention_quantizzec
    generic map (
        DataWidth => 8,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_linear_forward_no_mu_fu_844_v78_0_0_0_address0,
        ce0 => quantized_final_outp_7_ce0,
        q0 => quantized_final_outp_7_q0);

    quantized_final_outp_6_U : component attention_quantizzec
    generic map (
        DataWidth => 8,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_linear_forward_no_mu_fu_844_v78_0_0_1_address0,
        ce0 => quantized_final_outp_6_ce0,
        q0 => quantized_final_outp_6_q0);

    quantized_final_outp_5_U : component attention_quantizzec
    generic map (
        DataWidth => 8,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_linear_forward_no_mu_fu_844_v78_0_0_2_address0,
        ce0 => quantized_final_outp_5_ce0,
        q0 => quantized_final_outp_5_q0);

    quantized_final_outp_4_U : component attention_quantizzec
    generic map (
        DataWidth => 8,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_linear_forward_no_mu_fu_844_v78_0_0_3_address0,
        ce0 => quantized_final_outp_4_ce0,
        q0 => quantized_final_outp_4_q0);

    quantized_final_outp_3_U : component attention_quantizzec
    generic map (
        DataWidth => 8,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_linear_forward_no_mu_fu_844_v78_1_0_0_address0,
        ce0 => quantized_final_outp_3_ce0,
        q0 => quantized_final_outp_3_q0);

    quantized_final_outp_2_U : component attention_quantizzec
    generic map (
        DataWidth => 8,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_linear_forward_no_mu_fu_844_v78_1_0_1_address0,
        ce0 => quantized_final_outp_2_ce0,
        q0 => quantized_final_outp_2_q0);

    quantized_final_outp_1_U : component attention_quantizzec
    generic map (
        DataWidth => 8,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_linear_forward_no_mu_fu_844_v78_1_0_2_address0,
        ce0 => quantized_final_outp_1_ce0,
        q0 => quantized_final_outp_1_q0);

    quantized_final_outp_U : component attention_quantizzec
    generic map (
        DataWidth => 8,
        AddressRange => 192,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_linear_forward_no_mu_fu_844_v78_1_0_3_address0,
        ce0 => quantized_final_outp_ce0,
        q0 => quantized_final_outp_q0);

    rms_hidden_states_0_U : component attention_rms_hidRg6
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rms_hidden_states_0_address0,
        ce0 => rms_hidden_states_0_ce0,
        we0 => rms_hidden_states_0_we0,
        d0 => rms_hidden_states_0_d0,
        q0 => rms_hidden_states_0_q0);

    q_proj_re_U : component attention_rms_hidRg6
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => q_proj_re_address0,
        ce0 => q_proj_re_ce0,
        we0 => q_proj_re_we0,
        d0 => q_proj_re_d0,
        q0 => q_proj_re_q0);

    k_proj_re_U : component attention_rms_hidRg6
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_proj_re_address0,
        ce0 => k_proj_re_ce0,
        we0 => k_proj_re_we0,
        d0 => k_proj_re_d0,
        q0 => k_proj_re_q0);

    v_proj_re_U : component attention_rms_hidRg6
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => v_proj_re_address0,
        ce0 => v_proj_re_ce0,
        we0 => v_proj_re_we0,
        d0 => v_proj_re_d0,
        q0 => v_proj_re_q0);

    q_embed_0_U : component attention_rms_hidRg6
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => q_embed_0_address0,
        ce0 => q_embed_0_ce0,
        we0 => q_embed_0_we0,
        d0 => q_embed_0_d0,
        q0 => q_embed_0_q0);

    k_embed_0_U : component attention_rms_hidRg6
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_embed_0_address0,
        ce0 => k_embed_0_ce0,
        we0 => k_embed_0_we0,
        d0 => k_embed_0_d0,
        q0 => k_embed_0_q0);

    updated_k_cache_U : component attention_updatedShg
    generic map (
        DataWidth => 32,
        AddressRange => 9216,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => updated_k_cache_address0,
        ce0 => updated_k_cache_ce0,
        we0 => updated_k_cache_we0,
        d0 => updated_k_cache_d0,
        q0 => updated_k_cache_q0);

    updated_v_cache_U : component attention_updatedShg
    generic map (
        DataWidth => 32,
        AddressRange => 9216,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => updated_v_cache_address0,
        ce0 => updated_v_cache_ce0,
        we0 => updated_v_cache_we0,
        d0 => updated_v_cache_d0,
        q0 => updated_v_cache_q0);

    attn_weights_0_U : component attention_attn_weUhA
    generic map (
        DataWidth => 32,
        AddressRange => 96,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => attn_weights_0_address0,
        ce0 => attn_weights_0_ce0,
        we0 => attn_weights_0_we0,
        d0 => attn_weights_0_d0,
        q0 => attn_weights_0_q0);

    softmax_attn_weights_U : component attention_attn_weUhA
    generic map (
        DataWidth => 32,
        AddressRange => 96,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => softmax_attn_weights_address0,
        ce0 => softmax_attn_weights_ce0,
        we0 => softmax_attn_weights_we0,
        d0 => softmax_attn_weights_d0,
        q0 => softmax_attn_weights_q0);

    attn_output_0_U : component attention_rms_hidRg6
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => attn_output_0_address0,
        ce0 => attn_output_0_ce0,
        we0 => attn_output_0_we0,
        d0 => attn_output_0_d0,
        q0 => attn_output_0_q0);

    attn_output_2D_U : component attention_rms_hidRg6
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => attn_output_2D_address0,
        ce0 => attn_output_2D_ce0,
        we0 => attn_output_2D_we0,
        d0 => attn_output_2D_d0,
        q0 => attn_output_2D_q0);

    rms_attn_output_0_U : component attention_rms_hidRg6
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rms_attn_output_0_address0,
        ce0 => rms_attn_output_0_ce0,
        we0 => rms_attn_output_0_we0,
        d0 => rms_attn_output_0_d0,
        q0 => rms_attn_output_0_q0);

    grp_linear_forward_no_mu_fu_844 : component linear_forward_no_mu
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_linear_forward_no_mu_fu_844_ap_start,
        ap_done => grp_linear_forward_no_mu_fu_844_ap_done,
        ap_idle => grp_linear_forward_no_mu_fu_844_ap_idle,
        ap_ready => grp_linear_forward_no_mu_fu_844_ap_ready,
        v78_0_0_0_address0 => grp_linear_forward_no_mu_fu_844_v78_0_0_0_address0,
        v78_0_0_0_ce0 => grp_linear_forward_no_mu_fu_844_v78_0_0_0_ce0,
        v78_0_0_0_q0 => grp_linear_forward_no_mu_fu_844_v78_0_0_0_q0,
        v78_0_0_1_address0 => grp_linear_forward_no_mu_fu_844_v78_0_0_1_address0,
        v78_0_0_1_ce0 => grp_linear_forward_no_mu_fu_844_v78_0_0_1_ce0,
        v78_0_0_1_q0 => grp_linear_forward_no_mu_fu_844_v78_0_0_1_q0,
        v78_0_0_2_address0 => grp_linear_forward_no_mu_fu_844_v78_0_0_2_address0,
        v78_0_0_2_ce0 => grp_linear_forward_no_mu_fu_844_v78_0_0_2_ce0,
        v78_0_0_2_q0 => grp_linear_forward_no_mu_fu_844_v78_0_0_2_q0,
        v78_0_0_3_address0 => grp_linear_forward_no_mu_fu_844_v78_0_0_3_address0,
        v78_0_0_3_ce0 => grp_linear_forward_no_mu_fu_844_v78_0_0_3_ce0,
        v78_0_0_3_q0 => grp_linear_forward_no_mu_fu_844_v78_0_0_3_q0,
        v78_1_0_0_address0 => grp_linear_forward_no_mu_fu_844_v78_1_0_0_address0,
        v78_1_0_0_ce0 => grp_linear_forward_no_mu_fu_844_v78_1_0_0_ce0,
        v78_1_0_0_q0 => grp_linear_forward_no_mu_fu_844_v78_1_0_0_q0,
        v78_1_0_1_address0 => grp_linear_forward_no_mu_fu_844_v78_1_0_1_address0,
        v78_1_0_1_ce0 => grp_linear_forward_no_mu_fu_844_v78_1_0_1_ce0,
        v78_1_0_1_q0 => grp_linear_forward_no_mu_fu_844_v78_1_0_1_q0,
        v78_1_0_2_address0 => grp_linear_forward_no_mu_fu_844_v78_1_0_2_address0,
        v78_1_0_2_ce0 => grp_linear_forward_no_mu_fu_844_v78_1_0_2_ce0,
        v78_1_0_2_q0 => grp_linear_forward_no_mu_fu_844_v78_1_0_2_q0,
        v78_1_0_3_address0 => grp_linear_forward_no_mu_fu_844_v78_1_0_3_address0,
        v78_1_0_3_ce0 => grp_linear_forward_no_mu_fu_844_v78_1_0_3_ce0,
        v78_1_0_3_q0 => grp_linear_forward_no_mu_fu_844_v78_1_0_3_q0,
        v79_0_V_read => grp_linear_forward_no_mu_fu_844_v79_0_V_read,
        v80_0_address0 => grp_linear_forward_no_mu_fu_844_v80_0_address0,
        v80_0_ce0 => grp_linear_forward_no_mu_fu_844_v80_0_ce0,
        v80_0_q0 => grp_linear_forward_no_mu_fu_844_v80_0_q0,
        v80_1_address0 => grp_linear_forward_no_mu_fu_844_v80_1_address0,
        v80_1_ce0 => grp_linear_forward_no_mu_fu_844_v80_1_ce0,
        v80_1_q0 => grp_linear_forward_no_mu_fu_844_v80_1_q0,
        v81_V => grp_linear_forward_no_mu_fu_844_v81_V,
        v82_address0 => grp_linear_forward_no_mu_fu_844_v82_address0,
        v82_ce0 => grp_linear_forward_no_mu_fu_844_v82_ce0,
        v82_we0 => grp_linear_forward_no_mu_fu_844_v82_we0,
        v82_d0 => grp_linear_forward_no_mu_fu_844_v82_d0);

    grp_linear_forward_no_mu_fu_873 : component linear_forward_no_mu
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_linear_forward_no_mu_fu_873_ap_start,
        ap_done => grp_linear_forward_no_mu_fu_873_ap_done,
        ap_idle => grp_linear_forward_no_mu_fu_873_ap_idle,
        ap_ready => grp_linear_forward_no_mu_fu_873_ap_ready,
        v78_0_0_0_address0 => grp_linear_forward_no_mu_fu_873_v78_0_0_0_address0,
        v78_0_0_0_ce0 => grp_linear_forward_no_mu_fu_873_v78_0_0_0_ce0,
        v78_0_0_0_q0 => quantized_hidden_sta_7_q0,
        v78_0_0_1_address0 => grp_linear_forward_no_mu_fu_873_v78_0_0_1_address0,
        v78_0_0_1_ce0 => grp_linear_forward_no_mu_fu_873_v78_0_0_1_ce0,
        v78_0_0_1_q0 => quantized_hidden_sta_6_q0,
        v78_0_0_2_address0 => grp_linear_forward_no_mu_fu_873_v78_0_0_2_address0,
        v78_0_0_2_ce0 => grp_linear_forward_no_mu_fu_873_v78_0_0_2_ce0,
        v78_0_0_2_q0 => quantized_hidden_sta_5_q0,
        v78_0_0_3_address0 => grp_linear_forward_no_mu_fu_873_v78_0_0_3_address0,
        v78_0_0_3_ce0 => grp_linear_forward_no_mu_fu_873_v78_0_0_3_ce0,
        v78_0_0_3_q0 => quantized_hidden_sta_4_q0,
        v78_1_0_0_address0 => grp_linear_forward_no_mu_fu_873_v78_1_0_0_address0,
        v78_1_0_0_ce0 => grp_linear_forward_no_mu_fu_873_v78_1_0_0_ce0,
        v78_1_0_0_q0 => quantized_hidden_sta_3_q0,
        v78_1_0_1_address0 => grp_linear_forward_no_mu_fu_873_v78_1_0_1_address0,
        v78_1_0_1_ce0 => grp_linear_forward_no_mu_fu_873_v78_1_0_1_ce0,
        v78_1_0_1_q0 => quantized_hidden_sta_2_q0,
        v78_1_0_2_address0 => grp_linear_forward_no_mu_fu_873_v78_1_0_2_address0,
        v78_1_0_2_ce0 => grp_linear_forward_no_mu_fu_873_v78_1_0_2_ce0,
        v78_1_0_2_q0 => quantized_hidden_sta_1_q0,
        v78_1_0_3_address0 => grp_linear_forward_no_mu_fu_873_v78_1_0_3_address0,
        v78_1_0_3_ce0 => grp_linear_forward_no_mu_fu_873_v78_1_0_3_ce0,
        v78_1_0_3_q0 => quantized_hidden_sta_q0,
        v79_0_V_read => scales_fixed_0_V_reg_3746,
        v80_0_address0 => grp_linear_forward_no_mu_fu_873_v80_0_address0,
        v80_0_ce0 => grp_linear_forward_no_mu_fu_873_v80_0_ce0,
        v80_0_q0 => v268_0_q0,
        v80_1_address0 => grp_linear_forward_no_mu_fu_873_v80_1_address0,
        v80_1_ce0 => grp_linear_forward_no_mu_fu_873_v80_1_ce0,
        v80_1_q0 => v268_1_q0,
        v81_V => v304_V_reg_3837,
        v82_address0 => grp_linear_forward_no_mu_fu_873_v82_address0,
        v82_ce0 => grp_linear_forward_no_mu_fu_873_v82_ce0,
        v82_we0 => grp_linear_forward_no_mu_fu_873_v82_we0,
        v82_d0 => grp_linear_forward_no_mu_fu_873_v82_d0);

    grp_softmax_fu_911 : component softmax
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_softmax_fu_911_ap_start,
        ap_done => grp_softmax_fu_911_ap_done,
        ap_idle => grp_softmax_fu_911_ap_idle,
        ap_ready => grp_softmax_fu_911_ap_ready,
        v224_0_address0 => grp_softmax_fu_911_v224_0_address0,
        v224_0_ce0 => grp_softmax_fu_911_v224_0_ce0,
        v224_0_q0 => attn_weights_0_q0,
        v225_0_address0 => grp_softmax_fu_911_v225_0_address0,
        v225_0_ce0 => grp_softmax_fu_911_v225_0_ce0,
        v225_0_we0 => grp_softmax_fu_911_v225_0_we0,
        v225_0_d0 => grp_softmax_fu_911_v225_0_d0,
        v225_0_q0 => softmax_attn_weights_q0);

    grp_rms_norm_fu_931 : component rms_norm
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_rms_norm_fu_931_ap_start,
        ap_done => grp_rms_norm_fu_931_ap_done,
        ap_idle => grp_rms_norm_fu_931_ap_idle,
        ap_ready => grp_rms_norm_fu_931_ap_ready,
        v0_address0 => grp_rms_norm_fu_931_v0_address0,
        v0_ce0 => grp_rms_norm_fu_931_v0_ce0,
        v0_q0 => grp_rms_norm_fu_931_v0_q0,
        v1_address0 => grp_rms_norm_fu_931_v1_address0,
        v1_ce0 => grp_rms_norm_fu_931_v1_ce0,
        v1_q0 => grp_rms_norm_fu_931_v1_q0,
        v3_0_address0 => grp_rms_norm_fu_931_v3_0_address0,
        v3_0_ce0 => grp_rms_norm_fu_931_v3_0_ce0,
        v3_0_we0 => grp_rms_norm_fu_931_v3_0_we0,
        v3_0_d0 => grp_rms_norm_fu_931_v3_0_d0);

    grp_apply_rotary_pos_emb_fu_955 : component apply_rotary_pos_emb
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_apply_rotary_pos_emb_fu_955_ap_start,
        ap_done => grp_apply_rotary_pos_emb_fu_955_ap_done,
        ap_idle => grp_apply_rotary_pos_emb_fu_955_ap_idle,
        ap_ready => grp_apply_rotary_pos_emb_fu_955_ap_ready,
        v162_address0 => grp_apply_rotary_pos_emb_fu_955_v162_address0,
        v162_ce0 => grp_apply_rotary_pos_emb_fu_955_v162_ce0,
        v162_q0 => v272_q0,
        v163_address0 => grp_apply_rotary_pos_emb_fu_955_v163_address0,
        v163_ce0 => grp_apply_rotary_pos_emb_fu_955_v163_ce0,
        v163_q0 => v273_q0,
        v164_0_address0 => grp_apply_rotary_pos_emb_fu_955_v164_0_address0,
        v164_0_ce0 => grp_apply_rotary_pos_emb_fu_955_v164_0_ce0,
        v164_0_we0 => grp_apply_rotary_pos_emb_fu_955_v164_0_we0,
        v164_0_d0 => grp_apply_rotary_pos_emb_fu_955_v164_0_d0,
        v165_0_address0 => grp_apply_rotary_pos_emb_fu_955_v165_0_address0,
        v165_0_ce0 => grp_apply_rotary_pos_emb_fu_955_v165_0_ce0,
        v165_0_we0 => grp_apply_rotary_pos_emb_fu_955_v165_0_we0,
        v165_0_d0 => grp_apply_rotary_pos_emb_fu_955_v165_0_d0,
        q_proj_0_address0 => grp_apply_rotary_pos_emb_fu_955_q_proj_0_address0,
        q_proj_0_ce0 => grp_apply_rotary_pos_emb_fu_955_q_proj_0_ce0,
        q_proj_0_q0 => q_proj_0_q0,
        q_proj_0_address1 => grp_apply_rotary_pos_emb_fu_955_q_proj_0_address1,
        q_proj_0_ce1 => grp_apply_rotary_pos_emb_fu_955_q_proj_0_ce1,
        q_proj_0_q1 => q_proj_0_q1,
        k_proj_0_address0 => grp_apply_rotary_pos_emb_fu_955_k_proj_0_address0,
        k_proj_0_ce0 => grp_apply_rotary_pos_emb_fu_955_k_proj_0_ce0,
        k_proj_0_q0 => k_proj_0_q0,
        k_proj_0_address1 => grp_apply_rotary_pos_emb_fu_955_k_proj_0_address1,
        k_proj_0_ce1 => grp_apply_rotary_pos_emb_fu_955_k_proj_0_ce1,
        k_proj_0_q1 => k_proj_0_q1);

    grp_quantize_activation_fu_969 : component quantize_activation
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_quantize_activation_fu_969_ap_start,
        ap_done => grp_quantize_activation_fu_969_ap_done,
        ap_idle => grp_quantize_activation_fu_969_ap_idle,
        ap_ready => grp_quantize_activation_fu_969_ap_ready,
        v22_0_address0 => grp_quantize_activation_fu_969_v22_0_address0,
        v22_0_ce0 => grp_quantize_activation_fu_969_v22_0_ce0,
        v22_0_q0 => grp_quantize_activation_fu_969_v22_0_q0,
        v24_0_address0 => grp_quantize_activation_fu_969_v24_0_address0,
        v24_0_ce0 => grp_quantize_activation_fu_969_v24_0_ce0,
        v24_0_we0 => grp_quantize_activation_fu_969_v24_0_we0,
        v24_0_d0 => grp_quantize_activation_fu_969_v24_0_d0,
        ap_return => grp_quantize_activation_fu_969_ap_return);

    grp_GEMM_3D_float_fu_977 : component GEMM_3D_float
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_GEMM_3D_float_fu_977_ap_start,
        ap_done => grp_GEMM_3D_float_fu_977_ap_done,
        ap_idle => grp_GEMM_3D_float_fu_977_ap_idle,
        ap_ready => grp_GEMM_3D_float_fu_977_ap_ready,
        v209_0_address0 => grp_GEMM_3D_float_fu_977_v209_0_address0,
        v209_0_ce0 => grp_GEMM_3D_float_fu_977_v209_0_ce0,
        v209_0_q0 => q_embed_0_q0,
        v211_0_address0 => grp_GEMM_3D_float_fu_977_v211_0_address0,
        v211_0_ce0 => grp_GEMM_3D_float_fu_977_v211_0_ce0,
        v211_0_we0 => grp_GEMM_3D_float_fu_977_v211_0_we0,
        v211_0_d0 => grp_GEMM_3D_float_fu_977_v211_0_d0,
        v211_0_q0 => attn_weights_0_q0,
        k_proj_transposed_address0 => grp_GEMM_3D_float_fu_977_k_proj_transposed_address0,
        k_proj_transposed_ce0 => grp_GEMM_3D_float_fu_977_k_proj_transposed_ce0,
        k_proj_transposed_q0 => k_proj_transposed_q0);

    grp_GEMM_3D_float2_fu_985 : component GEMM_3D_float2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_GEMM_3D_float2_fu_985_ap_start,
        ap_done => grp_GEMM_3D_float2_fu_985_ap_done,
        ap_idle => grp_GEMM_3D_float2_fu_985_ap_idle,
        ap_ready => grp_GEMM_3D_float2_fu_985_ap_ready,
        v251_0_address0 => grp_GEMM_3D_float2_fu_985_v251_0_address0,
        v251_0_ce0 => grp_GEMM_3D_float2_fu_985_v251_0_ce0,
        v251_0_q0 => softmax_attn_weights_q0,
        v252_address0 => grp_GEMM_3D_float2_fu_985_v252_address0,
        v252_ce0 => grp_GEMM_3D_float2_fu_985_v252_ce0,
        v252_q0 => updated_v_cache_q0,
        v253_0_address0 => grp_GEMM_3D_float2_fu_985_v253_0_address0,
        v253_0_ce0 => grp_GEMM_3D_float2_fu_985_v253_0_ce0,
        v253_0_we0 => grp_GEMM_3D_float2_fu_985_v253_0_we0,
        v253_0_d0 => grp_GEMM_3D_float2_fu_985_v253_0_d0,
        v253_0_q0 => attn_output_0_q0);

    grp_cache_update_fu_992 : component cache_update
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cache_update_fu_992_ap_start,
        ap_done => grp_cache_update_fu_992_ap_done,
        ap_idle => grp_cache_update_fu_992_ap_idle,
        ap_ready => grp_cache_update_fu_992_ap_ready,
        v192_address0 => grp_cache_update_fu_992_v192_address0,
        v192_ce0 => grp_cache_update_fu_992_v192_ce0,
        v192_q0 => grp_cache_update_fu_992_v192_q0,
        v193_0_address0 => grp_cache_update_fu_992_v193_0_address0,
        v193_0_ce0 => grp_cache_update_fu_992_v193_0_ce0,
        v193_0_q0 => grp_cache_update_fu_992_v193_0_q0,
        v194_address0 => grp_cache_update_fu_992_v194_address0,
        v194_ce0 => grp_cache_update_fu_992_v194_ce0,
        v194_we0 => grp_cache_update_fu_992_v194_we0,
        v194_d0 => grp_cache_update_fu_992_v194_d0);

    grp_transpose_last_two_d_fu_1002 : component transpose_last_two_d
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_transpose_last_two_d_fu_1002_ap_start,
        ap_done => grp_transpose_last_two_d_fu_1002_ap_done,
        ap_idle => grp_transpose_last_two_d_fu_1002_ap_idle,
        ap_ready => grp_transpose_last_two_d_fu_1002_ap_ready,
        v203_address0 => grp_transpose_last_two_d_fu_1002_v203_address0,
        v203_ce0 => grp_transpose_last_two_d_fu_1002_v203_ce0,
        v203_q0 => updated_k_cache_q0,
        v204_address0 => grp_transpose_last_two_d_fu_1002_v204_address0,
        v204_ce0 => grp_transpose_last_two_d_fu_1002_v204_ce0,
        v204_we0 => grp_transpose_last_two_d_fu_1002_v204_we0,
        v204_d0 => grp_transpose_last_two_d_fu_1002_v204_d0);

    grp_reshape_2D_to_3D_fu_1009 : component reshape_2D_to_3D
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_reshape_2D_to_3D_fu_1009_ap_start,
        ap_done => grp_reshape_2D_to_3D_fu_1009_ap_done,
        ap_idle => grp_reshape_2D_to_3D_fu_1009_ap_idle,
        ap_ready => grp_reshape_2D_to_3D_fu_1009_ap_ready,
        v146_address0 => grp_reshape_2D_to_3D_fu_1009_v146_address0,
        v146_ce0 => grp_reshape_2D_to_3D_fu_1009_v146_ce0,
        v146_q0 => grp_reshape_2D_to_3D_fu_1009_v146_q0,
        v147_0_address0 => grp_reshape_2D_to_3D_fu_1009_v147_0_address0,
        v147_0_ce0 => grp_reshape_2D_to_3D_fu_1009_v147_0_ce0,
        v147_0_we0 => grp_reshape_2D_to_3D_fu_1009_v147_0_we0,
        v147_0_d0 => grp_reshape_2D_to_3D_fu_1009_v147_0_d0);

    grp_reshape_2D_to_3D_fu_1017 : component reshape_2D_to_3D
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_reshape_2D_to_3D_fu_1017_ap_start,
        ap_done => grp_reshape_2D_to_3D_fu_1017_ap_done,
        ap_idle => grp_reshape_2D_to_3D_fu_1017_ap_idle,
        ap_ready => grp_reshape_2D_to_3D_fu_1017_ap_ready,
        v146_address0 => grp_reshape_2D_to_3D_fu_1017_v146_address0,
        v146_ce0 => grp_reshape_2D_to_3D_fu_1017_v146_ce0,
        v146_q0 => v_proj_re_q0,
        v147_0_address0 => grp_reshape_2D_to_3D_fu_1017_v147_0_address0,
        v147_0_ce0 => grp_reshape_2D_to_3D_fu_1017_v147_0_ce0,
        v147_0_we0 => grp_reshape_2D_to_3D_fu_1017_v147_0_we0,
        v147_0_d0 => grp_reshape_2D_to_3D_fu_1017_v147_0_d0);

    attention_fadd_32pcA_U95 : component attention_fadd_32pcA
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_1046,
        din1 => ap_const_lv32_0,
        ce => ap_const_logic_1,
        dout => grp_fu_1024_p2);

    attention_fdiv_32rcU_U96 : component attention_fdiv_32rcU
    generic map (
        ID => 1,
        NUM_STAGE => 16,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_1046,
        din1 => ap_const_lv32_411CC471,
        ce => ap_const_logic_1,
        dout => grp_fu_1029_p2);

    attention_fpext_3Zio_U97 : component attention_fpext_3Zio
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1034_p0,
        ce => grp_fu_1034_ce,
        dout => grp_fu_1034_p1);

    attention_fpext_3Zio_U98 : component attention_fpext_3Zio
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => v269,
        ce => ap_const_logic_1,
        dout => grp_fu_1037_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_GEMM_3D_float2_fu_985_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_GEMM_3D_float2_fu_985_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln681_fu_3086_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state66))) then 
                    grp_GEMM_3D_float2_fu_985_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_GEMM_3D_float2_fu_985_ap_ready = ap_const_logic_1)) then 
                    grp_GEMM_3D_float2_fu_985_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_GEMM_3D_float_fu_977_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_GEMM_3D_float_fu_977_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln634_fu_2851_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
                    grp_GEMM_3D_float_fu_977_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_GEMM_3D_float_fu_977_ap_ready = ap_const_logic_1)) then 
                    grp_GEMM_3D_float_fu_977_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_apply_rotary_pos_emb_fu_955_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_apply_rotary_pos_emb_fu_955_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln598_fu_2549_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                    grp_apply_rotary_pos_emb_fu_955_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_apply_rotary_pos_emb_fu_955_ap_ready = ap_const_logic_1)) then 
                    grp_apply_rotary_pos_emb_fu_955_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cache_update_fu_992_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_cache_update_fu_992_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state30) or ((icmp_ln615_fu_2732_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26)))) then 
                    grp_cache_update_fu_992_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cache_update_fu_992_ap_ready = ap_const_logic_1)) then 
                    grp_cache_update_fu_992_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_linear_forward_no_mu_fu_844_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_linear_forward_no_mu_fu_844_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_const_logic_1 = ap_CS_fsm_state79) and (icmp_ln753_fu_3573_p2 = ap_const_lv1_1)))) then 
                    grp_linear_forward_no_mu_fu_844_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_linear_forward_no_mu_fu_844_ap_ready = ap_const_logic_1)) then 
                    grp_linear_forward_no_mu_fu_844_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_linear_forward_no_mu_fu_873_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_linear_forward_no_mu_fu_873_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    grp_linear_forward_no_mu_fu_873_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_linear_forward_no_mu_fu_873_ap_ready = ap_const_logic_1)) then 
                    grp_linear_forward_no_mu_fu_873_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_quantize_activation_fu_969_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_quantize_activation_fu_969_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    grp_quantize_activation_fu_969_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_quantize_activation_fu_969_ap_ready = ap_const_logic_1)) then 
                    grp_quantize_activation_fu_969_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_reshape_2D_to_3D_fu_1009_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_reshape_2D_to_3D_fu_1009_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                    grp_reshape_2D_to_3D_fu_1009_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_reshape_2D_to_3D_fu_1009_ap_ready = ap_const_logic_1)) then 
                    grp_reshape_2D_to_3D_fu_1009_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_reshape_2D_to_3D_fu_1017_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_reshape_2D_to_3D_fu_1017_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                    grp_reshape_2D_to_3D_fu_1017_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_reshape_2D_to_3D_fu_1017_ap_ready = ap_const_logic_1)) then 
                    grp_reshape_2D_to_3D_fu_1017_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_rms_norm_fu_931_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_rms_norm_fu_931_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_state73) and (icmp_ln705_fu_3278_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln479_fu_1052_p2 = ap_const_lv1_1)))) then 
                    grp_rms_norm_fu_931_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_rms_norm_fu_931_ap_ready = ap_const_logic_1)) then 
                    grp_rms_norm_fu_931_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_softmax_fu_911_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_softmax_fu_911_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln672_fu_3022_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state63))) then 
                    grp_softmax_fu_911_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_softmax_fu_911_ap_ready = ap_const_logic_1)) then 
                    grp_softmax_fu_911_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_transpose_last_two_d_fu_1002_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_transpose_last_two_d_fu_1002_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
                    grp_transpose_last_two_d_fu_1002_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_transpose_last_two_d_fu_1002_ap_ready = ap_const_logic_1)) then 
                    grp_transpose_last_two_d_fu_1002_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    d4_0_0_reg_811_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
                d4_0_0_reg_811 <= add_ln697_reg_4138;
            elsif (((icmp_ln696_fu_3167_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state70))) then 
                d4_0_0_reg_811 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    h6_0_reg_734_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln644_fu_2915_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                h6_0_reg_734 <= ap_const_lv5_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
                h6_0_reg_734 <= h6_reg_4052;
            end if; 
        end if;
    end process;

    h7_0_0_reg_800_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln697_fu_3243_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                h7_0_0_reg_800 <= add_ln696_reg_4120;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state69) and (icmp_ln691_fu_3150_p2 = ap_const_lv1_1))) then 
                h7_0_0_reg_800 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    i12_0_reg_712_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln646_fu_2953_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then 
                i12_0_reg_712 <= i12_reg_4021;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state34) and (grp_GEMM_3D_float_fu_977_ap_done = ap_const_logic_1))) then 
                i12_0_reg_712 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    k10_0_0_reg_723_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
                k10_0_0_reg_723 <= add_ln646_reg_4034;
            elsif (((icmp_ln644_fu_2915_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                k10_0_0_reg_723 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    v283_0_0_reg_536_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                v283_0_0_reg_536 <= ap_const_lv11_0;
            elsif (((icmp_ln479_fu_1052_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                v283_0_0_reg_536 <= add_ln479_fu_1058_p2;
            end if; 
        end if;
    end process;

    v293_0_0_reg_547_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_quantize_activation_fu_969_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                v293_0_0_reg_547 <= ap_const_lv11_0;
            elsif (((icmp_ln500_fu_1069_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                v293_0_0_reg_547 <= add_ln500_fu_1075_p2;
            end if; 
        end if;
    end process;

    v296_0_0_reg_558_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln500_fu_1069_p2 = ap_const_lv1_1))) then 
                v296_0_0_reg_558 <= ap_const_lv11_0;
            elsif (((icmp_ln506_fu_1086_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                v296_0_0_reg_558 <= add_ln506_fu_1092_p2;
            end if; 
        end if;
    end process;

    v299_0_0_reg_569_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln506_fu_1086_p2 = ap_const_lv1_1))) then 
                v299_0_0_reg_569 <= ap_const_lv11_0;
            elsif (((icmp_ln512_fu_1103_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                v299_0_0_reg_569 <= add_ln512_fu_1109_p2;
            end if; 
        end if;
    end process;

    v338_0_reg_580_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln592_fu_2523_p2 = ap_const_lv1_1))) then 
                v338_0_reg_580 <= v338_reg_3890;
            elsif (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                v338_0_reg_580 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    v340_0_0_reg_591_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln590_fu_2485_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                v340_0_0_reg_591 <= ap_const_lv7_0;
            elsif (((icmp_ln592_fu_2523_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                v340_0_0_reg_591 <= add_ln592_fu_2529_p2;
            end if; 
        end if;
    end process;

    v342_0_reg_602_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln590_fu_2485_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                v342_0_reg_602 <= ap_const_lv5_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state21) and (icmp_ln600_fu_2587_p2 = ap_const_lv1_1))) then 
                v342_0_reg_602 <= v342_reg_3911;
            end if; 
        end if;
    end process;

    v344_0_0_reg_613_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln598_fu_2549_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                v344_0_0_reg_613 <= ap_const_lv7_0;
            elsif (((icmp_ln600_fu_2587_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                v344_0_0_reg_613 <= add_ln600_fu_2593_p2;
            end if; 
        end if;
    end process;

    v346_0_reg_624_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln608_fu_2659_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                v346_0_reg_624 <= v346_reg_3932;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state22) and (grp_apply_rotary_pos_emb_fu_955_ap_done = ap_const_logic_1))) then 
                v346_0_reg_624 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    v347_0_reg_635_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state25) and (icmp_ln609_fu_2706_p2 = ap_const_lv1_1))) then 
                v347_0_reg_635 <= v347_reg_3945;
            elsif (((icmp_ln607_fu_2613_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                v347_0_reg_635 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    v348_0_reg_646_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln608_fu_2659_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                v348_0_reg_646 <= ap_const_lv7_0;
            elsif (((icmp_ln609_fu_2706_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
                v348_0_reg_646 <= v348_fu_2712_p2;
            end if; 
        end if;
    end process;

    v350_0_reg_657_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln607_fu_2613_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                v350_0_reg_657 <= ap_const_lv5_0;
            elsif (((icmp_ln616_fu_2778_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                v350_0_reg_657 <= v350_reg_3966;
            end if; 
        end if;
    end process;

    v351_0_reg_668_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state28) and (icmp_ln617_fu_2825_p2 = ap_const_lv1_1))) then 
                v351_0_reg_668 <= v351_reg_3979;
            elsif (((icmp_ln615_fu_2732_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                v351_0_reg_668 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    v352_0_reg_679_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln616_fu_2778_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                v352_0_reg_679 <= ap_const_lv7_0;
            elsif (((icmp_ln617_fu_2825_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
                v352_0_reg_679 <= v352_fu_2831_p2;
            end if; 
        end if;
    end process;

    v358_0_reg_690_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln636_fu_2889_p2 = ap_const_lv1_1))) then 
                v358_0_reg_690 <= v358_reg_4000;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state31) and (ap_const_boolean_0 = ap_block_state31_on_subcall_done))) then 
                v358_0_reg_690 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    v360_0_0_reg_701_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln634_fu_2851_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
                v360_0_0_reg_701 <= ap_const_lv3_0;
            elsif (((icmp_ln636_fu_2889_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33))) then 
                v360_0_0_reg_701 <= add_ln636_fu_2895_p2;
            end if; 
        end if;
    end process;

    v378_0_reg_745_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln661_fu_2979_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state55))) then 
                v378_0_reg_745 <= ap_const_lv5_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state64) and (icmp_ln674_fu_3060_p2 = ap_const_lv1_1))) then 
                v378_0_reg_745 <= v378_reg_4070;
            end if; 
        end if;
    end process;

    v380_0_0_reg_756_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln672_fu_3022_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state63))) then 
                v380_0_0_reg_756 <= ap_const_lv3_0;
            elsif (((icmp_ln674_fu_3060_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state64))) then 
                v380_0_0_reg_756 <= add_ln674_fu_3066_p2;
            end if; 
        end if;
    end process;

    v382_0_reg_767_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state67) and (icmp_ln683_fu_3124_p2 = ap_const_lv1_1))) then 
                v382_0_reg_767 <= v382_reg_4091;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state65) and (grp_softmax_fu_911_ap_done = ap_const_logic_1))) then 
                v382_0_reg_767 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    v384_0_0_reg_778_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln681_fu_3086_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state66))) then 
                v384_0_0_reg_778 <= ap_const_lv7_0;
            elsif (((icmp_ln683_fu_3124_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state67))) then 
                v384_0_0_reg_778 <= add_ln683_fu_3130_p2;
            end if; 
        end if;
    end process;

    v387_0_0_reg_789_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state68) and (grp_GEMM_3D_float2_fu_985_ap_done = ap_const_logic_1))) then 
                v387_0_0_reg_789 <= ap_const_lv11_0;
            elsif (((icmp_ln691_fu_3150_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state69))) then 
                v387_0_0_reg_789 <= add_ln691_fu_3156_p2;
            end if; 
        end if;
    end process;

    v394_0_0_reg_822_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln696_fu_3167_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state70))) then 
                v394_0_0_reg_822 <= ap_const_lv11_0;
            elsif (((icmp_ln705_fu_3278_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state73))) then 
                v394_0_0_reg_822 <= add_ln705_fu_3284_p2;
            end if; 
        end if;
    end process;

    v417_0_0_reg_833_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
                v417_0_0_reg_833 <= ap_const_lv11_0;
            elsif (((icmp_ln753_fu_3573_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state79))) then 
                v417_0_0_reg_833 <= add_ln753_fu_3579_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                add_ln646_reg_4034 <= add_ln646_fu_2959_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state70)) then
                add_ln696_reg_4120 <= add_ln696_fu_3173_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state71)) then
                add_ln697_reg_4138 <= add_ln697_fu_3249_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln697_fu_3243_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then
                add_ln699_reg_4148 <= add_ln699_fu_3265_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                and_ln603_4_reg_3736 <= and_ln603_4_fu_1479_p2;
                icmp_ln571_reg_3691 <= icmp_ln571_fu_1298_p2;
                icmp_ln581_reg_3697 <= icmp_ln581_fu_1310_p2;
                icmp_ln582_reg_3709 <= icmp_ln582_fu_1336_p2;
                man_V_2_reg_3686 <= man_V_2_fu_1290_p3;
                select_ln585_1_reg_3731 <= select_ln585_1_fu_1460_p3;
                sext_ln581_4_reg_3726 <= sext_ln581_4_fu_1356_p1;
                sh_amt_reg_3703 <= sh_amt_fu_1328_p3;
                tmp_38_reg_3721 <= sh_amt_fu_1328_p3(11 downto 5);
                trunc_ln583_reg_3715 <= trunc_ln583_fu_1342_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln661_fu_2979_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state55))) then
                    attn_weights_0_addr_1_reg_4057(6 downto 1) <= sext_ln665_fu_3017_p1(7 - 1 downto 0)(6 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln646_fu_2953_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state36))) then
                attn_weights_0_addr_2_reg_4039 <= sext_ln647_fu_2974_p1(7 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state78)) then
                final_scales_fixed_0_reg_4201 <= final_scales_fixed_0_fu_3565_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state55)) then
                h6_reg_4052 <= h6_fu_2985_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then
                i12_reg_4021 <= i12_fu_2921_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                icmp_ln571_1_reg_3757 <= icmp_ln571_1_fu_1714_p2;
                icmp_ln571_2_reg_3797 <= icmp_ln571_2_fu_1832_p2;
                icmp_ln581_1_reg_3763 <= icmp_ln581_1_fu_1726_p2;
                icmp_ln581_2_reg_3803 <= icmp_ln581_2_fu_1844_p2;
                icmp_ln582_1_reg_3775 <= icmp_ln582_1_fu_1752_p2;
                icmp_ln582_2_reg_3815 <= icmp_ln582_2_fu_1870_p2;
                man_V_5_reg_3752 <= man_V_5_fu_1706_p3;
                man_V_8_reg_3792 <= man_V_8_fu_1824_p3;
                sh_amt_1_reg_3769 <= sh_amt_1_fu_1744_p3;
                sh_amt_2_reg_3809 <= sh_amt_2_fu_1862_p3;
                tmp_41_reg_3787 <= sh_amt_1_fu_1744_p3(11 downto 5);
                tmp_52_reg_3827 <= sh_amt_2_fu_1862_p3(11 downto 5);
                trunc_ln583_1_reg_3781 <= trunc_ln583_1_fu_1758_p1;
                trunc_ln583_2_reg_3821 <= trunc_ln583_2_fu_1876_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                icmp_ln571_3_reg_3847 <= icmp_ln571_3_fu_2268_p2;
                icmp_ln581_3_reg_3853 <= icmp_ln581_3_fu_2280_p2;
                icmp_ln582_3_reg_3865 <= icmp_ln582_3_fu_2306_p2;
                man_V_11_reg_3842 <= man_V_11_fu_2260_p3;
                sh_amt_3_reg_3859 <= sh_amt_3_fu_2298_p3;
                tmp_57_reg_3877 <= sh_amt_3_fu_2298_p3(11 downto 5);
                trunc_ln583_3_reg_3871 <= trunc_ln583_3_fu_2312_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                icmp_ln571_4_reg_3651 <= icmp_ln571_4_fu_1180_p2;
                icmp_ln581_4_reg_3657 <= icmp_ln581_4_fu_1192_p2;
                icmp_ln582_4_reg_3669 <= icmp_ln582_4_fu_1218_p2;
                select_ln570_reg_3646 <= select_ln570_fu_1172_p3;
                select_ln581_reg_3663 <= select_ln581_fu_1210_p3;
                tmp_70_reg_3681 <= select_ln581_fu_1210_p3(11 downto 5);
                trunc_ln583_4_reg_3675 <= trunc_ln583_4_fu_1224_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state77)) then
                icmp_ln571_5_reg_4166 <= icmp_ln571_5_fu_3355_p2;
                icmp_ln581_5_reg_4172 <= icmp_ln581_5_fu_3367_p2;
                icmp_ln582_5_reg_4184 <= icmp_ln582_5_fu_3393_p2;
                select_ln570_1_reg_4161 <= select_ln570_1_fu_3347_p3;
                select_ln581_1_reg_4178 <= select_ln581_1_fu_3385_p3;
                tmp_73_reg_4196 <= select_ln581_1_fu_3385_p3(11 downto 5);
                trunc_ln583_5_reg_4190 <= trunc_ln583_5_fu_3399_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((grp_quantize_activation_fu_969_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state76)) or ((grp_quantize_activation_fu_969_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then
                reg_1041 <= grp_quantize_activation_fu_969_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state37))) then
                reg_1046 <= attn_weights_0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                scales_fixed_0_V_reg_3746 <= scales_fixed_0_V_fu_1648_p3;
                v300_V_reg_3741 <= v300_V_fu_1636_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln607_fu_2613_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    sext_ln610_reg_3937(9 downto 1) <= sext_ln610_fu_2655_p1(9 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln615_fu_2732_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    sext_ln618_reg_3971(9 downto 1) <= sext_ln618_fu_2774_p1(9 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln590_fu_2485_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    sub_ln593_reg_3895(11 downto 5) <= sub_ln593_fu_2517_p2(11 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln598_fu_2549_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    sub_ln601_reg_3916(11 downto 5) <= sub_ln601_fu_2581_p2(11 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln608_fu_2659_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    sub_ln610_1_reg_3950(14 downto 5) <= sub_ln610_1_fu_2700_p2(14 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln616_fu_2778_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    sub_ln618_1_reg_3984(14 downto 5) <= sub_ln618_1_fu_2819_p2(14 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln634_fu_2851_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32))) then
                    sub_ln637_reg_4005(7 downto 1) <= sub_ln637_fu_2883_p2(7 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln644_fu_2915_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                    sub_ln647_reg_4026(7 downto 1) <= sub_ln647_fu_2947_p2(7 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln672_fu_3022_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state63))) then
                    sub_ln675_reg_4075(7 downto 1) <= sub_ln675_fu_3054_p2(7 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln681_fu_3086_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state66))) then
                    sub_ln684_reg_4096(11 downto 5) <= sub_ln684_fu_3118_p2(11 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln696_fu_3167_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state70))) then
                    sub_ln698_reg_4125(11 downto 5) <= sub_ln698_fu_3199_p2(11 downto 5);
                    sub_ln699_reg_4130(11 downto 5) <= sub_ln699_fu_3233_p2(11 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state61)) then
                v2_reg_4062 <= grp_fu_1024_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_linear_forward_no_mu_fu_844_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                v302_V_reg_3832 <= v302_V_fu_2041_p3;
                v304_V_reg_3837 <= v304_V_fu_2200_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                v306_V_reg_3882 <= v306_V_fu_2477_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                v338_reg_3890 <= v338_fu_2491_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                v342_reg_3911 <= v342_fu_2555_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                v346_reg_3932 <= v346_fu_2619_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                v347_reg_3945 <= v347_fu_2665_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                v350_reg_3966 <= v350_fu_2738_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then
                v351_reg_3979 <= v351_fu_2784_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then
                v358_reg_4000 <= v358_fu_2857_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state63)) then
                v378_reg_4070 <= v378_fu_3028_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state66)) then
                v382_reg_4091 <= v382_fu_3092_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state53)) then
                v_reg_4044 <= grp_fu_1029_p2;
            end if;
        end if;
    end process;
    sub_ln593_reg_3895(4 downto 0) <= "00000";
    sub_ln601_reg_3916(4 downto 0) <= "00000";
    sext_ln610_reg_3937(0) <= '0';
    sub_ln610_1_reg_3950(4 downto 0) <= "00000";
    sext_ln618_reg_3971(0) <= '0';
    sub_ln618_1_reg_3984(4 downto 0) <= "00000";
    sub_ln637_reg_4005(0) <= '0';
    sub_ln647_reg_4026(0) <= '0';
    attn_weights_0_addr_1_reg_4057(0) <= '0';
    sub_ln675_reg_4075(0) <= '0';
    sub_ln684_reg_4096(4 downto 0) <= "00000";
    sub_ln698_reg_4125(4 downto 0) <= "00000";
    sub_ln699_reg_4130(4 downto 0) <= "00000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state5, grp_quantize_activation_fu_969_ap_done, ap_CS_fsm_state76, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state13, grp_linear_forward_no_mu_fu_844_ap_done, ap_CS_fsm_state17, ap_block_state17_on_subcall_done, ap_CS_fsm_state18, icmp_ln590_fu_2485_p2, ap_CS_fsm_state19, ap_CS_fsm_state20, icmp_ln598_fu_2549_p2, ap_CS_fsm_state21, ap_CS_fsm_state23, icmp_ln607_fu_2613_p2, ap_CS_fsm_state24, icmp_ln608_fu_2659_p2, ap_CS_fsm_state25, ap_CS_fsm_state26, icmp_ln615_fu_2732_p2, ap_CS_fsm_state27, icmp_ln616_fu_2778_p2, ap_CS_fsm_state28, ap_CS_fsm_state32, icmp_ln634_fu_2851_p2, ap_CS_fsm_state33, ap_CS_fsm_state35, icmp_ln644_fu_2915_p2, ap_CS_fsm_state36, icmp_ln646_fu_2953_p2, ap_CS_fsm_state55, icmp_ln661_fu_2979_p2, ap_CS_fsm_state63, icmp_ln672_fu_3022_p2, ap_CS_fsm_state64, ap_CS_fsm_state66, icmp_ln681_fu_3086_p2, ap_CS_fsm_state67, ap_CS_fsm_state69, ap_CS_fsm_state70, icmp_ln696_fu_3167_p2, ap_CS_fsm_state71, icmp_ln697_fu_3243_p2, ap_CS_fsm_state73, ap_CS_fsm_state79, grp_softmax_fu_911_ap_done, grp_rms_norm_fu_931_ap_done, grp_apply_rotary_pos_emb_fu_955_ap_done, grp_GEMM_3D_float_fu_977_ap_done, grp_GEMM_3D_float2_fu_985_ap_done, grp_cache_update_fu_992_ap_done, icmp_ln479_fu_1052_p2, icmp_ln500_fu_1069_p2, icmp_ln506_fu_1086_p2, icmp_ln512_fu_1103_p2, icmp_ln592_fu_2523_p2, icmp_ln600_fu_2587_p2, ap_CS_fsm_state22, icmp_ln609_fu_2706_p2, icmp_ln617_fu_2825_p2, ap_CS_fsm_state31, ap_block_state31_on_subcall_done, icmp_ln636_fu_2889_p2, ap_CS_fsm_state34, icmp_ln674_fu_3060_p2, ap_CS_fsm_state65, icmp_ln683_fu_3124_p2, icmp_ln691_fu_3150_p2, ap_CS_fsm_state68, icmp_ln705_fu_3278_p2, icmp_ln753_fu_3573_p2, ap_CS_fsm_state15, ap_CS_fsm_state80, ap_CS_fsm_state3, ap_CS_fsm_state74, ap_CS_fsm_state29, ap_block_state15_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln479_fu_1052_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_rms_norm_fu_931_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((grp_quantize_activation_fu_969_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln500_fu_1069_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln506_fu_1086_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((icmp_ln512_fu_1103_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((grp_linear_forward_no_mu_fu_844_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((ap_const_boolean_0 = ap_block_state15_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                if (((icmp_ln590_fu_2485_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state19 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln592_fu_2523_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                if (((icmp_ln598_fu_2549_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state21 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state21) and (icmp_ln600_fu_2587_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state22 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state22) and (grp_apply_rotary_pos_emb_fu_955_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                if (((icmp_ln607_fu_2613_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state24 => 
                if (((icmp_ln608_fu_2659_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state25 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state25) and (icmp_ln609_fu_2706_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state26 => 
                if (((icmp_ln615_fu_2732_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state27 => 
                if (((icmp_ln616_fu_2778_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state28 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state28) and (icmp_ln617_fu_2825_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state29 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state29) and (grp_cache_update_fu_992_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state31) and (ap_const_boolean_0 = ap_block_state31_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state32 => 
                if (((icmp_ln634_fu_2851_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state34;
                end if;
            when ap_ST_fsm_state33 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln636_fu_2889_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state33;
                end if;
            when ap_ST_fsm_state34 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state34) and (grp_GEMM_3D_float_fu_977_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state35;
                else
                    ap_NS_fsm <= ap_ST_fsm_state34;
                end if;
            when ap_ST_fsm_state35 => 
                if (((icmp_ln644_fu_2915_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                    ap_NS_fsm <= ap_ST_fsm_state55;
                else
                    ap_NS_fsm <= ap_ST_fsm_state36;
                end if;
            when ap_ST_fsm_state36 => 
                if (((icmp_ln646_fu_2953_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then
                    ap_NS_fsm <= ap_ST_fsm_state35;
                else
                    ap_NS_fsm <= ap_ST_fsm_state37;
                end if;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state55 => 
                if (((icmp_ln661_fu_2979_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state55))) then
                    ap_NS_fsm <= ap_ST_fsm_state63;
                else
                    ap_NS_fsm <= ap_ST_fsm_state56;
                end if;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state63 => 
                if (((icmp_ln672_fu_3022_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state63))) then
                    ap_NS_fsm <= ap_ST_fsm_state64;
                else
                    ap_NS_fsm <= ap_ST_fsm_state65;
                end if;
            when ap_ST_fsm_state64 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state64) and (icmp_ln674_fu_3060_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state63;
                else
                    ap_NS_fsm <= ap_ST_fsm_state64;
                end if;
            when ap_ST_fsm_state65 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state65) and (grp_softmax_fu_911_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state66;
                else
                    ap_NS_fsm <= ap_ST_fsm_state65;
                end if;
            when ap_ST_fsm_state66 => 
                if (((icmp_ln681_fu_3086_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state66))) then
                    ap_NS_fsm <= ap_ST_fsm_state67;
                else
                    ap_NS_fsm <= ap_ST_fsm_state68;
                end if;
            when ap_ST_fsm_state67 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state67) and (icmp_ln683_fu_3124_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state66;
                else
                    ap_NS_fsm <= ap_ST_fsm_state67;
                end if;
            when ap_ST_fsm_state68 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state68) and (grp_GEMM_3D_float2_fu_985_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state69;
                else
                    ap_NS_fsm <= ap_ST_fsm_state68;
                end if;
            when ap_ST_fsm_state69 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state69) and (icmp_ln691_fu_3150_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state70;
                else
                    ap_NS_fsm <= ap_ST_fsm_state69;
                end if;
            when ap_ST_fsm_state70 => 
                if (((icmp_ln696_fu_3167_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state70))) then
                    ap_NS_fsm <= ap_ST_fsm_state73;
                else
                    ap_NS_fsm <= ap_ST_fsm_state71;
                end if;
            when ap_ST_fsm_state71 => 
                if (((icmp_ln697_fu_3243_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state71))) then
                    ap_NS_fsm <= ap_ST_fsm_state70;
                else
                    ap_NS_fsm <= ap_ST_fsm_state72;
                end if;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state73 => 
                if (((icmp_ln705_fu_3278_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state73))) then
                    ap_NS_fsm <= ap_ST_fsm_state73;
                else
                    ap_NS_fsm <= ap_ST_fsm_state74;
                end if;
            when ap_ST_fsm_state74 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state74) and (grp_rms_norm_fu_931_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state75;
                else
                    ap_NS_fsm <= ap_ST_fsm_state74;
                end if;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                if (((grp_quantize_activation_fu_969_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state76))) then
                    ap_NS_fsm <= ap_ST_fsm_state77;
                else
                    ap_NS_fsm <= ap_ST_fsm_state76;
                end if;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                if (((icmp_ln753_fu_3573_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state79))) then
                    ap_NS_fsm <= ap_ST_fsm_state79;
                else
                    ap_NS_fsm <= ap_ST_fsm_state80;
                end if;
            when ap_ST_fsm_state80 => 
                if (((grp_linear_forward_no_mu_fu_844_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state80))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state80;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    F2_1_fu_1720_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln461_1_fu_1680_p1));
    F2_2_fu_1838_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln461_2_fu_1798_p1));
    F2_3_fu_2274_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln461_3_fu_2234_p1));
    F2_fu_1304_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln461_fu_1264_p1));
    add_ln479_fu_1058_p2 <= std_logic_vector(unsigned(v283_0_0_reg_536) + unsigned(ap_const_lv11_1));
    add_ln500_fu_1075_p2 <= std_logic_vector(unsigned(v293_0_0_reg_547) + unsigned(ap_const_lv11_1));
    add_ln506_fu_1092_p2 <= std_logic_vector(unsigned(v296_0_0_reg_558) + unsigned(ap_const_lv11_1));
    add_ln512_fu_1109_p2 <= std_logic_vector(unsigned(v299_0_0_reg_569) + unsigned(ap_const_lv11_1));
    add_ln581_1_fu_1732_p2 <= std_logic_vector(signed(ap_const_lv12_FEC) + signed(F2_1_fu_1720_p2));
    add_ln581_2_fu_1850_p2 <= std_logic_vector(signed(ap_const_lv12_FEC) + signed(F2_2_fu_1838_p2));
    add_ln581_3_fu_2286_p2 <= std_logic_vector(signed(ap_const_lv12_FEC) + signed(F2_3_fu_2274_p2));
    add_ln581_4_fu_1198_p2 <= std_logic_vector(signed(ap_const_lv12_FEC) + signed(sub_ln575_fu_1186_p2));
    add_ln581_5_fu_3373_p2 <= std_logic_vector(signed(ap_const_lv12_FEC) + signed(sub_ln575_1_fu_3361_p2));
    add_ln581_fu_1316_p2 <= std_logic_vector(signed(ap_const_lv12_FEC) + signed(F2_fu_1304_p2));
    add_ln592_fu_2529_p2 <= std_logic_vector(unsigned(v340_0_0_reg_591) + unsigned(ap_const_lv7_1));
    add_ln593_fu_2539_p2 <= std_logic_vector(unsigned(sub_ln593_reg_3895) + unsigned(zext_ln593_1_fu_2535_p1));
    add_ln600_fu_2593_p2 <= std_logic_vector(unsigned(v344_0_0_reg_613) + unsigned(ap_const_lv7_1));
    add_ln601_fu_2603_p2 <= std_logic_vector(unsigned(sub_ln601_reg_3916) + unsigned(zext_ln601_1_fu_2599_p1));
    add_ln610_1_fu_2722_p2 <= std_logic_vector(unsigned(sub_ln610_1_reg_3950) + unsigned(zext_ln610_3_fu_2718_p1));
    add_ln610_fu_2675_p2 <= std_logic_vector(unsigned(zext_ln610_2_fu_2671_p1) + unsigned(sext_ln610_reg_3937));
    add_ln618_1_fu_2841_p2 <= std_logic_vector(unsigned(sub_ln618_1_reg_3984) + unsigned(zext_ln618_3_fu_2837_p1));
    add_ln618_fu_2794_p2 <= std_logic_vector(unsigned(zext_ln618_2_fu_2790_p1) + unsigned(sext_ln618_reg_3971));
    add_ln636_fu_2895_p2 <= std_logic_vector(unsigned(v360_0_0_reg_701) + unsigned(ap_const_lv3_1));
    add_ln637_fu_2905_p2 <= std_logic_vector(unsigned(sub_ln637_reg_4005) + unsigned(zext_ln637_1_fu_2901_p1));
    add_ln646_fu_2959_p2 <= std_logic_vector(unsigned(k10_0_0_reg_723) + unsigned(ap_const_lv3_1));
    add_ln647_fu_2969_p2 <= std_logic_vector(unsigned(sub_ln647_reg_4026) + unsigned(zext_ln647_1_fu_2965_p1));
    add_ln674_fu_3066_p2 <= std_logic_vector(unsigned(v380_0_0_reg_756) + unsigned(ap_const_lv3_1));
    add_ln675_fu_3076_p2 <= std_logic_vector(unsigned(sub_ln675_reg_4075) + unsigned(zext_ln675_1_fu_3072_p1));
    add_ln683_fu_3130_p2 <= std_logic_vector(unsigned(v384_0_0_reg_778) + unsigned(ap_const_lv7_1));
    add_ln684_fu_3140_p2 <= std_logic_vector(unsigned(sub_ln684_reg_4096) + unsigned(zext_ln684_1_fu_3136_p1));
    add_ln691_fu_3156_p2 <= std_logic_vector(unsigned(v387_0_0_reg_789) + unsigned(ap_const_lv11_1));
    add_ln696_fu_3173_p2 <= std_logic_vector(unsigned(h7_0_0_reg_800) + unsigned(ap_const_lv5_1));
    add_ln697_fu_3249_p2 <= std_logic_vector(unsigned(d4_0_0_reg_811) + unsigned(ap_const_lv7_1));
    add_ln698_fu_3255_p2 <= std_logic_vector(unsigned(sub_ln698_reg_4125) + unsigned(zext_ln697_fu_3239_p1));
    add_ln699_fu_3265_p2 <= std_logic_vector(unsigned(zext_ln697_fu_3239_p1) + unsigned(sub_ln699_reg_4130));
    add_ln705_fu_3284_p2 <= std_logic_vector(unsigned(v394_0_0_reg_822) + unsigned(ap_const_lv11_1));
    add_ln753_fu_3579_p2 <= std_logic_vector(unsigned(v417_0_0_reg_833) + unsigned(ap_const_lv11_1));
    and_ln581_1_fu_1960_p2 <= (xor_ln582_1_fu_1954_p2 and icmp_ln581_1_reg_3763);
    and_ln581_2_fu_2119_p2 <= (xor_ln582_2_fu_2113_p2 and icmp_ln581_2_reg_3803);
    and_ln581_3_fu_2396_p2 <= (xor_ln582_3_fu_2390_p2 and icmp_ln581_3_reg_3853);
    and_ln581_4_fu_1429_p2 <= (xor_ln582_4_fu_1423_p2 and icmp_ln581_4_reg_3657);
    and_ln581_5_fu_3484_p2 <= (xor_ln582_5_fu_3478_p2 and icmp_ln581_5_reg_4172);
    and_ln581_fu_1555_p2 <= (xor_ln582_fu_1549_p2 and icmp_ln581_reg_3697);
    and_ln582_1_fu_1945_p2 <= (xor_ln571_1_fu_1940_p2 and icmp_ln582_1_reg_3775);
    and_ln582_2_fu_2104_p2 <= (xor_ln571_2_fu_2099_p2 and icmp_ln582_2_reg_3815);
    and_ln582_3_fu_2381_p2 <= (xor_ln571_3_fu_2376_p2 and icmp_ln582_3_reg_3865);
    and_ln582_4_fu_1407_p2 <= (xor_ln571_4_fu_1402_p2 and icmp_ln582_4_reg_3669);
    and_ln582_5_fu_3469_p2 <= (xor_ln571_5_fu_3464_p2 and icmp_ln582_5_reg_4184);
    and_ln582_fu_1540_p2 <= (xor_ln571_fu_1535_p2 and icmp_ln582_reg_3709);
    and_ln585_10_fu_3495_p2 <= (xor_ln585_5_fu_3489_p2 and and_ln581_5_fu_3484_p2);
    and_ln585_11_fu_3501_p2 <= (icmp_ln585_5_fu_3416_p2 and and_ln581_5_fu_3484_p2);
    and_ln585_1_fu_1572_p2 <= (icmp_ln585_fu_1488_p2 and and_ln581_fu_1555_p2);
    and_ln585_2_fu_1971_p2 <= (xor_ln585_1_fu_1965_p2 and and_ln581_1_fu_1960_p2);
    and_ln585_3_fu_1977_p2 <= (icmp_ln585_1_fu_1893_p2 and and_ln581_1_fu_1960_p2);
    and_ln585_4_fu_2130_p2 <= (xor_ln585_2_fu_2124_p2 and and_ln581_2_fu_2119_p2);
    and_ln585_5_fu_2136_p2 <= (icmp_ln585_2_fu_2052_p2 and and_ln581_2_fu_2119_p2);
    and_ln585_6_fu_2407_p2 <= (xor_ln585_3_fu_2401_p2 and and_ln581_3_fu_2396_p2);
    and_ln585_7_fu_2413_p2 <= (icmp_ln585_3_fu_2329_p2 and and_ln581_3_fu_2396_p2);
    and_ln585_8_fu_1440_p2 <= (xor_ln585_4_fu_1434_p2 and and_ln581_4_fu_1429_p2);
    and_ln585_9_fu_1454_p2 <= (icmp_ln585_4_fu_1359_p2 and and_ln581_4_fu_1429_p2);
    and_ln585_fu_1566_p2 <= (xor_ln585_fu_1560_p2 and and_ln581_fu_1555_p2);
    and_ln603_1_fu_1994_p2 <= (xor_ln581_1_fu_1988_p2 and icmp_ln603_1_fu_1898_p2);
    and_ln603_2_fu_2153_p2 <= (xor_ln581_2_fu_2147_p2 and icmp_ln603_2_fu_2057_p2);
    and_ln603_3_fu_2430_p2 <= (xor_ln581_3_fu_2424_p2 and icmp_ln603_3_fu_2334_p2);
    and_ln603_4_fu_1479_p2 <= (xor_ln581_4_fu_1473_p2 and icmp_ln603_4_fu_1364_p2);
    and_ln603_5_fu_3518_p2 <= (xor_ln581_5_fu_3512_p2 and icmp_ln603_5_fu_3421_p2);
    and_ln603_fu_1589_p2 <= (xor_ln581_fu_1583_p2 and icmp_ln603_fu_1493_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62);
    ap_CS_fsm_state64 <= ap_CS_fsm(63);
    ap_CS_fsm_state65 <= ap_CS_fsm(64);
    ap_CS_fsm_state66 <= ap_CS_fsm(65);
    ap_CS_fsm_state67 <= ap_CS_fsm(66);
    ap_CS_fsm_state68 <= ap_CS_fsm(67);
    ap_CS_fsm_state69 <= ap_CS_fsm(68);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state70 <= ap_CS_fsm(69);
    ap_CS_fsm_state71 <= ap_CS_fsm(70);
    ap_CS_fsm_state72 <= ap_CS_fsm(71);
    ap_CS_fsm_state73 <= ap_CS_fsm(72);
    ap_CS_fsm_state74 <= ap_CS_fsm(73);
    ap_CS_fsm_state75 <= ap_CS_fsm(74);
    ap_CS_fsm_state76 <= ap_CS_fsm(75);
    ap_CS_fsm_state77 <= ap_CS_fsm(76);
    ap_CS_fsm_state78 <= ap_CS_fsm(77);
    ap_CS_fsm_state79 <= ap_CS_fsm(78);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state80 <= ap_CS_fsm(79);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state15_on_subcall_done_assign_proc : process(grp_linear_forward_no_mu_fu_844_ap_done, grp_reshape_2D_to_3D_fu_1009_ap_done, grp_linear_forward_no_mu_fu_873_ap_done)
    begin
                ap_block_state15_on_subcall_done <= ((grp_reshape_2D_to_3D_fu_1009_ap_done = ap_const_logic_0) or (grp_linear_forward_no_mu_fu_844_ap_done = ap_const_logic_0) or (grp_linear_forward_no_mu_fu_873_ap_done = ap_const_logic_0));
    end process;


    ap_block_state17_on_subcall_done_assign_proc : process(grp_reshape_2D_to_3D_fu_1009_ap_done, grp_reshape_2D_to_3D_fu_1017_ap_done)
    begin
                ap_block_state17_on_subcall_done <= ((grp_reshape_2D_to_3D_fu_1017_ap_done = ap_const_logic_0) or (grp_reshape_2D_to_3D_fu_1009_ap_done = ap_const_logic_0));
    end process;


    ap_block_state31_on_subcall_done_assign_proc : process(grp_cache_update_fu_992_ap_done, grp_transpose_last_two_d_fu_1002_ap_done)
    begin
                ap_block_state31_on_subcall_done <= ((grp_transpose_last_two_d_fu_1002_ap_done = ap_const_logic_0) or (grp_cache_update_fu_992_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(grp_linear_forward_no_mu_fu_844_ap_done, ap_CS_fsm_state80)
    begin
        if (((grp_linear_forward_no_mu_fu_844_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state80))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_linear_forward_no_mu_fu_844_ap_done, ap_CS_fsm_state80)
    begin
        if (((grp_linear_forward_no_mu_fu_844_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state80))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ashr_ln586_1_fu_1907_p2 <= std_logic_vector(shift_right(signed(man_V_5_reg_3752),to_integer(unsigned('0' & zext_ln586_1_fu_1903_p1(31-1 downto 0)))));
    ashr_ln586_2_fu_2066_p2 <= std_logic_vector(shift_right(signed(man_V_8_reg_3792),to_integer(unsigned('0' & zext_ln586_2_fu_2062_p1(31-1 downto 0)))));
    ashr_ln586_3_fu_2343_p2 <= std_logic_vector(shift_right(signed(man_V_11_reg_3842),to_integer(unsigned('0' & zext_ln586_3_fu_2339_p1(31-1 downto 0)))));
    ashr_ln586_4_fu_1373_p2 <= std_logic_vector(shift_right(signed(select_ln570_reg_3646),to_integer(unsigned('0' & zext_ln586_4_fu_1369_p1(31-1 downto 0)))));
    ashr_ln586_5_fu_3430_p2 <= std_logic_vector(shift_right(signed(select_ln570_1_reg_4161),to_integer(unsigned('0' & zext_ln586_5_fu_3426_p1(31-1 downto 0)))));
    ashr_ln586_fu_1502_p2 <= std_logic_vector(shift_right(signed(man_V_2_reg_3686),to_integer(unsigned('0' & zext_ln586_fu_1498_p1(31-1 downto 0)))));

    attn_output_0_address0_assign_proc : process(ap_CS_fsm_state67, ap_CS_fsm_state71, grp_GEMM_3D_float2_fu_985_v253_0_address0, ap_CS_fsm_state68, sext_ln684_fu_3145_p1, sext_ln698_fu_3260_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            attn_output_0_address0 <= sext_ln698_fu_3260_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            attn_output_0_address0 <= sext_ln684_fu_3145_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            attn_output_0_address0 <= grp_GEMM_3D_float2_fu_985_v253_0_address0;
        else 
            attn_output_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    attn_output_0_ce0_assign_proc : process(ap_CS_fsm_state67, ap_CS_fsm_state71, grp_GEMM_3D_float2_fu_985_v253_0_ce0, ap_CS_fsm_state68)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state67))) then 
            attn_output_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            attn_output_0_ce0 <= grp_GEMM_3D_float2_fu_985_v253_0_ce0;
        else 
            attn_output_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    attn_output_0_d0_assign_proc : process(ap_CS_fsm_state67, grp_GEMM_3D_float2_fu_985_v253_0_d0, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            attn_output_0_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            attn_output_0_d0 <= grp_GEMM_3D_float2_fu_985_v253_0_d0;
        else 
            attn_output_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    attn_output_0_we0_assign_proc : process(ap_CS_fsm_state67, grp_GEMM_3D_float2_fu_985_v253_0_we0, icmp_ln683_fu_3124_p2, ap_CS_fsm_state68)
    begin
        if (((icmp_ln683_fu_3124_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state67))) then 
            attn_output_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            attn_output_0_we0 <= grp_GEMM_3D_float2_fu_985_v253_0_we0;
        else 
            attn_output_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    attn_output_2D_address0_assign_proc : process(ap_CS_fsm_state69, grp_rms_norm_fu_931_v0_address0, ap_CS_fsm_state72, ap_CS_fsm_state74, zext_ln692_fu_3162_p1, zext_ln699_fu_3273_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            attn_output_2D_address0 <= zext_ln699_fu_3273_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            attn_output_2D_address0 <= zext_ln692_fu_3162_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            attn_output_2D_address0 <= grp_rms_norm_fu_931_v0_address0;
        else 
            attn_output_2D_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    attn_output_2D_ce0_assign_proc : process(ap_CS_fsm_state69, grp_rms_norm_fu_931_v0_ce0, ap_CS_fsm_state72, ap_CS_fsm_state74)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            attn_output_2D_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            attn_output_2D_ce0 <= grp_rms_norm_fu_931_v0_ce0;
        else 
            attn_output_2D_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    attn_output_2D_d0_assign_proc : process(ap_CS_fsm_state69, attn_output_0_q0, ap_CS_fsm_state72)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            attn_output_2D_d0 <= attn_output_0_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            attn_output_2D_d0 <= ap_const_lv32_0;
        else 
            attn_output_2D_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    attn_output_2D_we0_assign_proc : process(ap_CS_fsm_state69, icmp_ln691_fu_3150_p2, ap_CS_fsm_state72)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state72) or ((icmp_ln691_fu_3150_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state69)))) then 
            attn_output_2D_we0 <= ap_const_logic_1;
        else 
            attn_output_2D_we0 <= ap_const_logic_0;
        end if; 
    end process;


    attn_weights_0_address0_assign_proc : process(ap_CS_fsm_state33, ap_CS_fsm_state36, attn_weights_0_addr_2_reg_4039, ap_CS_fsm_state55, attn_weights_0_addr_1_reg_4057, grp_softmax_fu_911_v224_0_address0, grp_GEMM_3D_float_fu_977_v211_0_address0, ap_CS_fsm_state34, ap_CS_fsm_state54, ap_CS_fsm_state62, ap_CS_fsm_state65, sext_ln637_fu_2910_p1, sext_ln647_fu_2974_p1, sext_ln665_fu_3017_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            attn_weights_0_address0 <= attn_weights_0_addr_1_reg_4057;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            attn_weights_0_address0 <= sext_ln665_fu_3017_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            attn_weights_0_address0 <= attn_weights_0_addr_2_reg_4039;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            attn_weights_0_address0 <= sext_ln647_fu_2974_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            attn_weights_0_address0 <= sext_ln637_fu_2910_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            attn_weights_0_address0 <= grp_GEMM_3D_float_fu_977_v211_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            attn_weights_0_address0 <= grp_softmax_fu_911_v224_0_address0;
        else 
            attn_weights_0_address0 <= "XXXXXXX";
        end if; 
    end process;


    attn_weights_0_ce0_assign_proc : process(ap_CS_fsm_state33, ap_CS_fsm_state36, ap_CS_fsm_state55, grp_softmax_fu_911_v224_0_ce0, grp_GEMM_3D_float_fu_977_v211_0_ce0, ap_CS_fsm_state34, ap_CS_fsm_state54, ap_CS_fsm_state62, ap_CS_fsm_state65)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            attn_weights_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            attn_weights_0_ce0 <= grp_GEMM_3D_float_fu_977_v211_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            attn_weights_0_ce0 <= grp_softmax_fu_911_v224_0_ce0;
        else 
            attn_weights_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    attn_weights_0_d0_assign_proc : process(ap_CS_fsm_state33, v_reg_4044, v2_reg_4062, grp_GEMM_3D_float_fu_977_v211_0_d0, ap_CS_fsm_state34, ap_CS_fsm_state54, ap_CS_fsm_state62)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            attn_weights_0_d0 <= v2_reg_4062;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            attn_weights_0_d0 <= v_reg_4044;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            attn_weights_0_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            attn_weights_0_d0 <= grp_GEMM_3D_float_fu_977_v211_0_d0;
        else 
            attn_weights_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    attn_weights_0_we0_assign_proc : process(ap_CS_fsm_state33, grp_GEMM_3D_float_fu_977_v211_0_we0, icmp_ln636_fu_2889_p2, ap_CS_fsm_state34, ap_CS_fsm_state54, ap_CS_fsm_state62)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state54) or ((icmp_ln636_fu_2889_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            attn_weights_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            attn_weights_0_we0 <= grp_GEMM_3D_float_fu_977_v211_0_we0;
        else 
            attn_weights_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln696_10_fu_3439_p1 <= reg_1041;
    bitcast_ln696_2_fu_1916_p1 <= v267;
    bitcast_ln696_4_fu_2075_p1 <= v269;
    bitcast_ln696_6_fu_2352_p1 <= v271;
    bitcast_ln696_7_fu_1120_p1 <= grp_fu_1034_p1;
    bitcast_ln696_8_fu_1382_p1 <= reg_1041;
    bitcast_ln696_9_fu_3295_p1 <= grp_fu_1034_p1;
    bitcast_ln696_fu_1511_p1 <= v265;
    exp_tmp_V_1_fu_1670_p4 <= ireg_V_1_fu_1654_p1(62 downto 52);
    exp_tmp_V_2_fu_1788_p4 <= ireg_V_2_fu_1772_p1(62 downto 52);
    exp_tmp_V_3_fu_2224_p4 <= ireg_V_3_fu_2208_p1(62 downto 52);
    exp_tmp_V_fu_1254_p4 <= ireg_V_fu_1238_p1(62 downto 52);
    final_scales_fixed_0_fu_3565_p3 <= 
        select_ln603_19_fu_3551_p3 when (or_ln603_14_fu_3559_p2(0) = '1') else 
        ap_const_lv32_0;
    grp_GEMM_3D_float2_fu_985_ap_start <= grp_GEMM_3D_float2_fu_985_ap_start_reg;
    grp_GEMM_3D_float_fu_977_ap_start <= grp_GEMM_3D_float_fu_977_ap_start_reg;
    grp_apply_rotary_pos_emb_fu_955_ap_start <= grp_apply_rotary_pos_emb_fu_955_ap_start_reg;
    grp_cache_update_fu_992_ap_start <= grp_cache_update_fu_992_ap_start_reg;

    grp_cache_update_fu_992_v192_q0_assign_proc : process(v276_q0, v277_q0, ap_CS_fsm_state31, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            grp_cache_update_fu_992_v192_q0 <= v277_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_cache_update_fu_992_v192_q0 <= v276_q0;
        else 
            grp_cache_update_fu_992_v192_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_cache_update_fu_992_v193_0_q0_assign_proc : process(v_proj_0_q0, k_embed_0_q0, ap_CS_fsm_state31, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            grp_cache_update_fu_992_v193_0_q0 <= v_proj_0_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_cache_update_fu_992_v193_0_q0 <= k_embed_0_q0;
        else 
            grp_cache_update_fu_992_v193_0_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1034_ce_assign_proc : process(grp_quantize_activation_fu_969_ap_done, ap_CS_fsm_state76, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state16, ap_CS_fsm_state77, ap_CS_fsm_state15, ap_block_state15_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((grp_quantize_activation_fu_969_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state76)) or ((ap_const_boolean_0 = ap_block_state15_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            grp_fu_1034_ce <= ap_const_logic_1;
        else 
            grp_fu_1034_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1034_p0_assign_proc : process(v265, v267, v271, grp_quantize_activation_fu_969_ap_return, reg_1041, ap_CS_fsm_state76, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            grp_fu_1034_p0 <= grp_quantize_activation_fu_969_ap_return;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_1034_p0 <= v271;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_1034_p0 <= v267;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_1034_p0 <= v265;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_1034_p0 <= reg_1041;
        else 
            grp_fu_1034_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_linear_forward_no_mu_fu_844_ap_start <= grp_linear_forward_no_mu_fu_844_ap_start_reg;

    grp_linear_forward_no_mu_fu_844_v78_0_0_0_q0_assign_proc : process(quantized_hidden_sta_7_q0, quantized_final_outp_7_q0, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            grp_linear_forward_no_mu_fu_844_v78_0_0_0_q0 <= quantized_final_outp_7_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            grp_linear_forward_no_mu_fu_844_v78_0_0_0_q0 <= quantized_hidden_sta_7_q0;
        else 
            grp_linear_forward_no_mu_fu_844_v78_0_0_0_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_844_v78_0_0_1_q0_assign_proc : process(quantized_hidden_sta_6_q0, quantized_final_outp_6_q0, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            grp_linear_forward_no_mu_fu_844_v78_0_0_1_q0 <= quantized_final_outp_6_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            grp_linear_forward_no_mu_fu_844_v78_0_0_1_q0 <= quantized_hidden_sta_6_q0;
        else 
            grp_linear_forward_no_mu_fu_844_v78_0_0_1_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_844_v78_0_0_2_q0_assign_proc : process(quantized_hidden_sta_5_q0, quantized_final_outp_5_q0, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            grp_linear_forward_no_mu_fu_844_v78_0_0_2_q0 <= quantized_final_outp_5_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            grp_linear_forward_no_mu_fu_844_v78_0_0_2_q0 <= quantized_hidden_sta_5_q0;
        else 
            grp_linear_forward_no_mu_fu_844_v78_0_0_2_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_844_v78_0_0_3_q0_assign_proc : process(quantized_hidden_sta_4_q0, quantized_final_outp_4_q0, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            grp_linear_forward_no_mu_fu_844_v78_0_0_3_q0 <= quantized_final_outp_4_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            grp_linear_forward_no_mu_fu_844_v78_0_0_3_q0 <= quantized_hidden_sta_4_q0;
        else 
            grp_linear_forward_no_mu_fu_844_v78_0_0_3_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_844_v78_1_0_0_q0_assign_proc : process(quantized_hidden_sta_3_q0, quantized_final_outp_3_q0, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            grp_linear_forward_no_mu_fu_844_v78_1_0_0_q0 <= quantized_final_outp_3_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            grp_linear_forward_no_mu_fu_844_v78_1_0_0_q0 <= quantized_hidden_sta_3_q0;
        else 
            grp_linear_forward_no_mu_fu_844_v78_1_0_0_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_844_v78_1_0_1_q0_assign_proc : process(quantized_hidden_sta_2_q0, quantized_final_outp_2_q0, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            grp_linear_forward_no_mu_fu_844_v78_1_0_1_q0 <= quantized_final_outp_2_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            grp_linear_forward_no_mu_fu_844_v78_1_0_1_q0 <= quantized_hidden_sta_2_q0;
        else 
            grp_linear_forward_no_mu_fu_844_v78_1_0_1_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_844_v78_1_0_2_q0_assign_proc : process(quantized_hidden_sta_1_q0, quantized_final_outp_1_q0, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            grp_linear_forward_no_mu_fu_844_v78_1_0_2_q0 <= quantized_final_outp_1_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            grp_linear_forward_no_mu_fu_844_v78_1_0_2_q0 <= quantized_hidden_sta_1_q0;
        else 
            grp_linear_forward_no_mu_fu_844_v78_1_0_2_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_844_v78_1_0_3_q0_assign_proc : process(quantized_hidden_sta_q0, quantized_final_outp_q0, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            grp_linear_forward_no_mu_fu_844_v78_1_0_3_q0 <= quantized_final_outp_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            grp_linear_forward_no_mu_fu_844_v78_1_0_3_q0 <= quantized_hidden_sta_q0;
        else 
            grp_linear_forward_no_mu_fu_844_v78_1_0_3_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_844_v79_0_V_read_assign_proc : process(scales_fixed_0_V_reg_3746, ap_CS_fsm_state13, final_scales_fixed_0_reg_4201, ap_CS_fsm_state15, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            grp_linear_forward_no_mu_fu_844_v79_0_V_read <= final_scales_fixed_0_reg_4201;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            grp_linear_forward_no_mu_fu_844_v79_0_V_read <= scales_fixed_0_V_reg_3746;
        else 
            grp_linear_forward_no_mu_fu_844_v79_0_V_read <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_844_v80_0_q0_assign_proc : process(v264_0_q0, v266_0_q0, v270_0_q0, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            grp_linear_forward_no_mu_fu_844_v80_0_q0 <= v270_0_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_linear_forward_no_mu_fu_844_v80_0_q0 <= v266_0_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_linear_forward_no_mu_fu_844_v80_0_q0 <= v264_0_q0;
        else 
            grp_linear_forward_no_mu_fu_844_v80_0_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_844_v80_1_q0_assign_proc : process(v264_1_q0, v266_1_q0, v270_1_q0, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            grp_linear_forward_no_mu_fu_844_v80_1_q0 <= v270_1_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_linear_forward_no_mu_fu_844_v80_1_q0 <= v266_1_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_linear_forward_no_mu_fu_844_v80_1_q0 <= v264_1_q0;
        else 
            grp_linear_forward_no_mu_fu_844_v80_1_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_844_v81_V_assign_proc : process(v300_V_reg_3741, v302_V_reg_3832, ap_CS_fsm_state13, v306_V_reg_3882, ap_CS_fsm_state15, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            grp_linear_forward_no_mu_fu_844_v81_V <= v306_V_reg_3882;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_linear_forward_no_mu_fu_844_v81_V <= v302_V_reg_3832;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_linear_forward_no_mu_fu_844_v81_V <= v300_V_reg_3741;
        else 
            grp_linear_forward_no_mu_fu_844_v81_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_linear_forward_no_mu_fu_873_ap_start <= grp_linear_forward_no_mu_fu_873_ap_start_reg;
    grp_quantize_activation_fu_969_ap_start <= grp_quantize_activation_fu_969_ap_start_reg;

    grp_quantize_activation_fu_969_v22_0_q0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state76, rms_hidden_states_0_q0, rms_attn_output_0_q0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            grp_quantize_activation_fu_969_v22_0_q0 <= rms_attn_output_0_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_quantize_activation_fu_969_v22_0_q0 <= rms_hidden_states_0_q0;
        else 
            grp_quantize_activation_fu_969_v22_0_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_reshape_2D_to_3D_fu_1009_ap_start <= grp_reshape_2D_to_3D_fu_1009_ap_start_reg;

    grp_reshape_2D_to_3D_fu_1009_v146_q0_assign_proc : process(ap_CS_fsm_state17, q_proj_re_q0, k_proj_re_q0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_reshape_2D_to_3D_fu_1009_v146_q0 <= k_proj_re_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_reshape_2D_to_3D_fu_1009_v146_q0 <= q_proj_re_q0;
        else 
            grp_reshape_2D_to_3D_fu_1009_v146_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_reshape_2D_to_3D_fu_1017_ap_start <= grp_reshape_2D_to_3D_fu_1017_ap_start_reg;
    grp_rms_norm_fu_931_ap_start <= grp_rms_norm_fu_931_ap_start_reg;

    grp_rms_norm_fu_931_v0_q0_assign_proc : process(v263_q0, attn_output_2D_q0, ap_CS_fsm_state3, ap_CS_fsm_state74)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            grp_rms_norm_fu_931_v0_q0 <= attn_output_2D_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_rms_norm_fu_931_v0_q0 <= v263_q0;
        else 
            grp_rms_norm_fu_931_v0_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_rms_norm_fu_931_v1_q0_assign_proc : process(v274_q0, v275_q0, ap_CS_fsm_state3, ap_CS_fsm_state74)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            grp_rms_norm_fu_931_v1_q0 <= v275_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_rms_norm_fu_931_v1_q0 <= v274_q0;
        else 
            grp_rms_norm_fu_931_v1_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_softmax_fu_911_ap_start <= grp_softmax_fu_911_ap_start_reg;
    grp_transpose_last_two_d_fu_1002_ap_start <= grp_transpose_last_two_d_fu_1002_ap_start_reg;
    h6_fu_2985_p2 <= std_logic_vector(unsigned(h6_0_reg_734) + unsigned(ap_const_lv5_1));
    i12_fu_2921_p2 <= std_logic_vector(unsigned(i12_0_reg_712) + unsigned(ap_const_lv5_1));
    icmp_ln479_fu_1052_p2 <= "1" when (v283_0_0_reg_536 = ap_const_lv11_600) else "0";
    icmp_ln500_fu_1069_p2 <= "1" when (v293_0_0_reg_547 = ap_const_lv11_600) else "0";
    icmp_ln506_fu_1086_p2 <= "1" when (v296_0_0_reg_558 = ap_const_lv11_600) else "0";
    icmp_ln512_fu_1103_p2 <= "1" when (v299_0_0_reg_569 = ap_const_lv11_600) else "0";
    icmp_ln571_1_fu_1714_p2 <= "1" when (trunc_ln556_1_fu_1658_p1 = ap_const_lv63_0) else "0";
    icmp_ln571_2_fu_1832_p2 <= "1" when (trunc_ln556_2_fu_1776_p1 = ap_const_lv63_0) else "0";
    icmp_ln571_3_fu_2268_p2 <= "1" when (trunc_ln556_3_fu_2212_p1 = ap_const_lv63_0) else "0";
    icmp_ln571_4_fu_1180_p2 <= "1" when (trunc_ln557_fu_1124_p1 = ap_const_lv63_0) else "0";
    icmp_ln571_5_fu_3355_p2 <= "1" when (trunc_ln557_1_fu_3299_p1 = ap_const_lv63_0) else "0";
    icmp_ln571_fu_1298_p2 <= "1" when (trunc_ln556_fu_1242_p1 = ap_const_lv63_0) else "0";
    icmp_ln581_1_fu_1726_p2 <= "1" when (signed(F2_1_fu_1720_p2) > signed(ap_const_lv12_14)) else "0";
    icmp_ln581_2_fu_1844_p2 <= "1" when (signed(F2_2_fu_1838_p2) > signed(ap_const_lv12_14)) else "0";
    icmp_ln581_3_fu_2280_p2 <= "1" when (signed(F2_3_fu_2274_p2) > signed(ap_const_lv12_14)) else "0";
    icmp_ln581_4_fu_1192_p2 <= "1" when (signed(sub_ln575_fu_1186_p2) > signed(ap_const_lv12_14)) else "0";
    icmp_ln581_5_fu_3367_p2 <= "1" when (signed(sub_ln575_1_fu_3361_p2) > signed(ap_const_lv12_14)) else "0";
    icmp_ln581_fu_1310_p2 <= "1" when (signed(F2_fu_1304_p2) > signed(ap_const_lv12_14)) else "0";
    icmp_ln582_1_fu_1752_p2 <= "1" when (F2_1_fu_1720_p2 = ap_const_lv12_14) else "0";
    icmp_ln582_2_fu_1870_p2 <= "1" when (F2_2_fu_1838_p2 = ap_const_lv12_14) else "0";
    icmp_ln582_3_fu_2306_p2 <= "1" when (F2_3_fu_2274_p2 = ap_const_lv12_14) else "0";
    icmp_ln582_4_fu_1218_p2 <= "1" when (sub_ln575_fu_1186_p2 = ap_const_lv12_14) else "0";
    icmp_ln582_5_fu_3393_p2 <= "1" when (sub_ln575_1_fu_3361_p2 = ap_const_lv12_14) else "0";
    icmp_ln582_fu_1336_p2 <= "1" when (F2_fu_1304_p2 = ap_const_lv12_14) else "0";
    icmp_ln585_1_fu_1893_p2 <= "1" when (unsigned(sh_amt_1_reg_3769) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln585_2_fu_2052_p2 <= "1" when (unsigned(sh_amt_2_reg_3809) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln585_3_fu_2329_p2 <= "1" when (unsigned(sh_amt_3_reg_3859) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln585_4_fu_1359_p2 <= "1" when (unsigned(select_ln581_reg_3663) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln585_5_fu_3416_p2 <= "1" when (unsigned(select_ln581_1_reg_4178) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln585_fu_1488_p2 <= "1" when (unsigned(sh_amt_reg_3703) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln590_fu_2485_p2 <= "1" when (v338_0_reg_580 = ap_const_lv5_10) else "0";
    icmp_ln592_fu_2523_p2 <= "1" when (v340_0_0_reg_591 = ap_const_lv7_60) else "0";
    icmp_ln598_fu_2549_p2 <= "1" when (v342_0_reg_602 = ap_const_lv5_10) else "0";
    icmp_ln600_fu_2587_p2 <= "1" when (v344_0_0_reg_613 = ap_const_lv7_60) else "0";
    icmp_ln603_1_fu_1898_p2 <= "1" when (tmp_41_reg_3787 = ap_const_lv7_0) else "0";
    icmp_ln603_2_fu_2057_p2 <= "1" when (tmp_52_reg_3827 = ap_const_lv7_0) else "0";
    icmp_ln603_3_fu_2334_p2 <= "1" when (tmp_57_reg_3877 = ap_const_lv7_0) else "0";
    icmp_ln603_4_fu_1364_p2 <= "1" when (tmp_70_reg_3681 = ap_const_lv7_0) else "0";
    icmp_ln603_5_fu_3421_p2 <= "1" when (tmp_73_reg_4196 = ap_const_lv7_0) else "0";
    icmp_ln603_fu_1493_p2 <= "1" when (tmp_38_reg_3721 = ap_const_lv7_0) else "0";
    icmp_ln607_fu_2613_p2 <= "1" when (v346_0_reg_624 = ap_const_lv5_10) else "0";
    icmp_ln608_fu_2659_p2 <= "1" when (v347_0_reg_635 = ap_const_lv3_6) else "0";
    icmp_ln609_fu_2706_p2 <= "1" when (v348_0_reg_646 = ap_const_lv7_60) else "0";
    icmp_ln615_fu_2732_p2 <= "1" when (v350_0_reg_657 = ap_const_lv5_10) else "0";
    icmp_ln616_fu_2778_p2 <= "1" when (v351_0_reg_668 = ap_const_lv3_6) else "0";
    icmp_ln617_fu_2825_p2 <= "1" when (v352_0_reg_679 = ap_const_lv7_60) else "0";
    icmp_ln634_fu_2851_p2 <= "1" when (v358_0_reg_690 = ap_const_lv5_10) else "0";
    icmp_ln636_fu_2889_p2 <= "1" when (v360_0_0_reg_701 = ap_const_lv3_6) else "0";
    icmp_ln644_fu_2915_p2 <= "1" when (i12_0_reg_712 = ap_const_lv5_10) else "0";
    icmp_ln646_fu_2953_p2 <= "1" when (k10_0_0_reg_723 = ap_const_lv3_6) else "0";
    icmp_ln661_fu_2979_p2 <= "1" when (h6_0_reg_734 = ap_const_lv5_10) else "0";
    icmp_ln672_fu_3022_p2 <= "1" when (v378_0_reg_745 = ap_const_lv5_10) else "0";
    icmp_ln674_fu_3060_p2 <= "1" when (v380_0_0_reg_756 = ap_const_lv3_6) else "0";
    icmp_ln681_fu_3086_p2 <= "1" when (v382_0_reg_767 = ap_const_lv5_10) else "0";
    icmp_ln683_fu_3124_p2 <= "1" when (v384_0_0_reg_778 = ap_const_lv7_60) else "0";
    icmp_ln691_fu_3150_p2 <= "1" when (v387_0_0_reg_789 = ap_const_lv11_600) else "0";
    icmp_ln696_fu_3167_p2 <= "1" when (h7_0_0_reg_800 = ap_const_lv5_10) else "0";
    icmp_ln697_fu_3243_p2 <= "1" when (d4_0_0_reg_811 = ap_const_lv7_60) else "0";
    icmp_ln705_fu_3278_p2 <= "1" when (v394_0_0_reg_822 = ap_const_lv11_600) else "0";
    icmp_ln753_fu_3573_p2 <= "1" when (v417_0_0_reg_833 = ap_const_lv11_600) else "0";
    ireg_V_1_fu_1654_p1 <= grp_fu_1034_p1;
    ireg_V_2_fu_1772_p1 <= grp_fu_1037_p1;
    ireg_V_3_fu_2208_p1 <= grp_fu_1034_p1;
    ireg_V_fu_1238_p1 <= grp_fu_1034_p1;

    k_embed_0_address0_assign_proc : process(ap_CS_fsm_state21, grp_apply_rotary_pos_emb_fu_955_v165_0_address0, grp_cache_update_fu_992_v193_0_address0, ap_CS_fsm_state22, ap_CS_fsm_state29, sext_ln601_fu_2608_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            k_embed_0_address0 <= sext_ln601_fu_2608_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            k_embed_0_address0 <= grp_cache_update_fu_992_v193_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            k_embed_0_address0 <= grp_apply_rotary_pos_emb_fu_955_v165_0_address0;
        else 
            k_embed_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    k_embed_0_ce0_assign_proc : process(ap_CS_fsm_state21, grp_apply_rotary_pos_emb_fu_955_v165_0_ce0, grp_cache_update_fu_992_v193_0_ce0, ap_CS_fsm_state22, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            k_embed_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            k_embed_0_ce0 <= grp_cache_update_fu_992_v193_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            k_embed_0_ce0 <= grp_apply_rotary_pos_emb_fu_955_v165_0_ce0;
        else 
            k_embed_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_embed_0_d0_assign_proc : process(ap_CS_fsm_state21, grp_apply_rotary_pos_emb_fu_955_v165_0_d0, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            k_embed_0_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            k_embed_0_d0 <= grp_apply_rotary_pos_emb_fu_955_v165_0_d0;
        else 
            k_embed_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    k_embed_0_we0_assign_proc : process(ap_CS_fsm_state21, grp_apply_rotary_pos_emb_fu_955_v165_0_we0, icmp_ln600_fu_2587_p2, ap_CS_fsm_state22)
    begin
        if (((icmp_ln600_fu_2587_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            k_embed_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            k_embed_0_we0 <= grp_apply_rotary_pos_emb_fu_955_v165_0_we0;
        else 
            k_embed_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_0_address0_assign_proc : process(ap_CS_fsm_state17, grp_apply_rotary_pos_emb_fu_955_k_proj_0_address0, grp_reshape_2D_to_3D_fu_1009_v147_0_address0, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            k_proj_0_address0 <= grp_reshape_2D_to_3D_fu_1009_v147_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            k_proj_0_address0 <= grp_apply_rotary_pos_emb_fu_955_k_proj_0_address0;
        else 
            k_proj_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    k_proj_0_ce0_assign_proc : process(ap_CS_fsm_state17, grp_apply_rotary_pos_emb_fu_955_k_proj_0_ce0, grp_reshape_2D_to_3D_fu_1009_v147_0_ce0, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            k_proj_0_ce0 <= grp_reshape_2D_to_3D_fu_1009_v147_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            k_proj_0_ce0 <= grp_apply_rotary_pos_emb_fu_955_k_proj_0_ce0;
        else 
            k_proj_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_0_ce1_assign_proc : process(grp_apply_rotary_pos_emb_fu_955_k_proj_0_ce1, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            k_proj_0_ce1 <= grp_apply_rotary_pos_emb_fu_955_k_proj_0_ce1;
        else 
            k_proj_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_0_we0_assign_proc : process(ap_CS_fsm_state17, grp_reshape_2D_to_3D_fu_1009_v147_0_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            k_proj_0_we0 <= grp_reshape_2D_to_3D_fu_1009_v147_0_we0;
        else 
            k_proj_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_re_address0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state17, grp_linear_forward_no_mu_fu_844_v82_address0, grp_reshape_2D_to_3D_fu_1009_v146_address0, ap_CS_fsm_state15, zext_ln507_fu_1098_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            k_proj_re_address0 <= zext_ln507_fu_1098_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            k_proj_re_address0 <= grp_reshape_2D_to_3D_fu_1009_v146_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            k_proj_re_address0 <= grp_linear_forward_no_mu_fu_844_v82_address0;
        else 
            k_proj_re_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    k_proj_re_ce0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state17, grp_linear_forward_no_mu_fu_844_v82_ce0, grp_reshape_2D_to_3D_fu_1009_v146_ce0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            k_proj_re_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            k_proj_re_ce0 <= grp_reshape_2D_to_3D_fu_1009_v146_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            k_proj_re_ce0 <= grp_linear_forward_no_mu_fu_844_v82_ce0;
        else 
            k_proj_re_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_re_d0_assign_proc : process(ap_CS_fsm_state7, grp_linear_forward_no_mu_fu_844_v82_d0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            k_proj_re_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            k_proj_re_d0 <= grp_linear_forward_no_mu_fu_844_v82_d0;
        else 
            k_proj_re_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    k_proj_re_we0_assign_proc : process(ap_CS_fsm_state7, grp_linear_forward_no_mu_fu_844_v82_we0, icmp_ln506_fu_1086_p2, ap_CS_fsm_state15)
    begin
        if (((icmp_ln506_fu_1086_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            k_proj_re_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            k_proj_re_we0 <= grp_linear_forward_no_mu_fu_844_v82_we0;
        else 
            k_proj_re_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_transposed_address0_assign_proc : process(grp_GEMM_3D_float_fu_977_k_proj_transposed_address0, grp_transpose_last_two_d_fu_1002_v204_address0, ap_CS_fsm_state31, ap_CS_fsm_state34)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            k_proj_transposed_address0 <= grp_transpose_last_two_d_fu_1002_v204_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            k_proj_transposed_address0 <= grp_GEMM_3D_float_fu_977_k_proj_transposed_address0;
        else 
            k_proj_transposed_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    k_proj_transposed_ce0_assign_proc : process(grp_GEMM_3D_float_fu_977_k_proj_transposed_ce0, grp_transpose_last_two_d_fu_1002_v204_ce0, ap_CS_fsm_state31, ap_CS_fsm_state34)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            k_proj_transposed_ce0 <= grp_transpose_last_two_d_fu_1002_v204_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            k_proj_transposed_ce0 <= grp_GEMM_3D_float_fu_977_k_proj_transposed_ce0;
        else 
            k_proj_transposed_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_transposed_we0_assign_proc : process(grp_transpose_last_two_d_fu_1002_v204_we0, ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            k_proj_transposed_we0 <= grp_transpose_last_two_d_fu_1002_v204_we0;
        else 
            k_proj_transposed_we0 <= ap_const_logic_0;
        end if; 
    end process;

    man_V_10_fu_2254_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_59_fu_2250_p1));
    man_V_11_fu_2260_p3 <= 
        man_V_10_fu_2254_p2 when (p_Result_58_fu_2216_p3(0) = '1') else 
        p_Result_59_fu_2250_p1;
    man_V_1_fu_1284_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_53_fu_1280_p1));
    man_V_2_fu_1290_p3 <= 
        man_V_1_fu_1284_p2 when (p_Result_s_fu_1246_p3(0) = '1') else 
        p_Result_53_fu_1280_p1;
    man_V_4_fu_1700_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_55_fu_1696_p1));
    man_V_5_fu_1706_p3 <= 
        man_V_4_fu_1700_p2 when (p_Result_54_fu_1662_p3(0) = '1') else 
        p_Result_55_fu_1696_p1;
    man_V_7_fu_1818_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_57_fu_1814_p1));
    man_V_8_fu_1824_p3 <= 
        man_V_7_fu_1818_p2 when (p_Result_56_fu_1780_p3(0) = '1') else 
        p_Result_57_fu_1814_p1;
    or_ln581_1_fu_1983_p2 <= (or_ln582_1_fu_1950_p2 or icmp_ln581_1_reg_3763);
    or_ln581_2_fu_2142_p2 <= (or_ln582_2_fu_2109_p2 or icmp_ln581_2_reg_3803);
    or_ln581_3_fu_2419_p2 <= (or_ln582_3_fu_2386_p2 or icmp_ln581_3_reg_3853);
    or_ln581_4_fu_1468_p2 <= (or_ln582_4_fu_1419_p2 or icmp_ln581_4_reg_3657);
    or_ln581_5_fu_3507_p2 <= (or_ln582_5_fu_3474_p2 or icmp_ln581_5_reg_4172);
    or_ln581_fu_1578_p2 <= (or_ln582_fu_1545_p2 or icmp_ln581_reg_3697);
    or_ln582_1_fu_1950_p2 <= (icmp_ln582_1_reg_3775 or icmp_ln571_1_reg_3757);
    or_ln582_2_fu_2109_p2 <= (icmp_ln582_2_reg_3815 or icmp_ln571_2_reg_3797);
    or_ln582_3_fu_2386_p2 <= (icmp_ln582_3_reg_3865 or icmp_ln571_3_reg_3847);
    or_ln582_4_fu_1419_p2 <= (icmp_ln582_4_reg_3669 or icmp_ln571_4_reg_3651);
    or_ln582_5_fu_3474_p2 <= (icmp_ln582_5_reg_4184 or icmp_ln571_5_reg_4166);
    or_ln582_fu_1545_p2 <= (icmp_ln582_reg_3709 or icmp_ln571_reg_3691);
    or_ln603_10_fu_2457_p2 <= (and_ln585_6_fu_2407_p2 or and_ln582_3_fu_2381_p2);
    or_ln603_11_fu_2471_p2 <= (or_ln603_9_fu_2444_p2 or or_ln603_10_fu_2457_p2);
    or_ln603_12_fu_3532_p2 <= (and_ln603_5_fu_3518_p2 or and_ln585_11_fu_3501_p2);
    or_ln603_13_fu_3545_p2 <= (and_ln585_10_fu_3495_p2 or and_ln582_5_fu_3469_p2);
    or_ln603_14_fu_3559_p2 <= (or_ln603_13_fu_3545_p2 or or_ln603_12_fu_3532_p2);
    or_ln603_1_fu_1616_p2 <= (and_ln585_fu_1566_p2 or and_ln582_fu_1540_p2);
    or_ln603_2_fu_1630_p2 <= (or_ln603_fu_1603_p2 or or_ln603_1_fu_1616_p2);
    or_ln603_3_fu_2008_p2 <= (and_ln603_1_fu_1994_p2 or and_ln585_3_fu_1977_p2);
    or_ln603_4_fu_2021_p2 <= (and_ln585_2_fu_1971_p2 or and_ln582_1_fu_1945_p2);
    or_ln603_5_fu_2035_p2 <= (or_ln603_4_fu_2021_p2 or or_ln603_3_fu_2008_p2);
    or_ln603_6_fu_2167_p2 <= (and_ln603_2_fu_2153_p2 or and_ln585_5_fu_2136_p2);
    or_ln603_7_fu_2180_p2 <= (and_ln585_4_fu_2130_p2 or and_ln582_2_fu_2104_p2);
    or_ln603_8_fu_2194_p2 <= (or_ln603_7_fu_2180_p2 or or_ln603_6_fu_2167_p2);
    or_ln603_9_fu_2444_p2 <= (and_ln603_3_fu_2430_p2 or and_ln585_7_fu_2413_p2);
    or_ln603_fu_1603_p2 <= (and_ln603_fu_1589_p2 or and_ln585_1_fu_1572_p2);
    p_Result_53_fu_1280_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_1272_p3),54));
    p_Result_54_fu_1662_p3 <= ireg_V_1_fu_1654_p1(63 downto 63);
    p_Result_55_fu_1696_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_1688_p3),54));
    p_Result_56_fu_1780_p3 <= ireg_V_2_fu_1772_p1(63 downto 63);
    p_Result_57_fu_1814_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_1806_p3),54));
    p_Result_58_fu_2216_p3 <= ireg_V_3_fu_2208_p1(63 downto 63);
    p_Result_59_fu_2250_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_2242_p3),54));
    p_Result_9_fu_1136_p4 <= bitcast_ln696_7_fu_1120_p1(62 downto 52);
    p_Result_s_97_fu_3311_p4 <= bitcast_ln696_9_fu_3295_p1(62 downto 52);
    p_Result_s_fu_1246_p3 <= ireg_V_fu_1238_p1(63 downto 63);
    p_shl2_cast_fu_2811_p3 <= (add_ln618_fu_2794_p2 & ap_const_lv5_0);
    p_shl8_cast_fu_2684_p3 <= (trunc_ln610_fu_2680_p1 & ap_const_lv7_0);
    p_shl9_cast_fu_2692_p3 <= (add_ln610_fu_2675_p2 & ap_const_lv5_0);
    p_shl_cast_fu_2803_p3 <= (trunc_ln618_fu_2799_p1 & ap_const_lv7_0);

    q_embed_0_address0_assign_proc : process(ap_CS_fsm_state19, grp_apply_rotary_pos_emb_fu_955_v164_0_address0, grp_GEMM_3D_float_fu_977_v209_0_address0, ap_CS_fsm_state22, ap_CS_fsm_state34, sext_ln593_fu_2544_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            q_embed_0_address0 <= sext_ln593_fu_2544_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            q_embed_0_address0 <= grp_GEMM_3D_float_fu_977_v209_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            q_embed_0_address0 <= grp_apply_rotary_pos_emb_fu_955_v164_0_address0;
        else 
            q_embed_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    q_embed_0_ce0_assign_proc : process(ap_CS_fsm_state19, grp_apply_rotary_pos_emb_fu_955_v164_0_ce0, grp_GEMM_3D_float_fu_977_v209_0_ce0, ap_CS_fsm_state22, ap_CS_fsm_state34)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            q_embed_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            q_embed_0_ce0 <= grp_GEMM_3D_float_fu_977_v209_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            q_embed_0_ce0 <= grp_apply_rotary_pos_emb_fu_955_v164_0_ce0;
        else 
            q_embed_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    q_embed_0_d0_assign_proc : process(ap_CS_fsm_state19, grp_apply_rotary_pos_emb_fu_955_v164_0_d0, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            q_embed_0_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            q_embed_0_d0 <= grp_apply_rotary_pos_emb_fu_955_v164_0_d0;
        else 
            q_embed_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    q_embed_0_we0_assign_proc : process(ap_CS_fsm_state19, grp_apply_rotary_pos_emb_fu_955_v164_0_we0, icmp_ln592_fu_2523_p2, ap_CS_fsm_state22)
    begin
        if (((icmp_ln592_fu_2523_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            q_embed_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            q_embed_0_we0 <= grp_apply_rotary_pos_emb_fu_955_v164_0_we0;
        else 
            q_embed_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    q_proj_0_address0_assign_proc : process(grp_apply_rotary_pos_emb_fu_955_q_proj_0_address0, grp_reshape_2D_to_3D_fu_1009_v147_0_address0, ap_CS_fsm_state22, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            q_proj_0_address0 <= grp_reshape_2D_to_3D_fu_1009_v147_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            q_proj_0_address0 <= grp_apply_rotary_pos_emb_fu_955_q_proj_0_address0;
        else 
            q_proj_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    q_proj_0_ce0_assign_proc : process(grp_apply_rotary_pos_emb_fu_955_q_proj_0_ce0, grp_reshape_2D_to_3D_fu_1009_v147_0_ce0, ap_CS_fsm_state22, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            q_proj_0_ce0 <= grp_reshape_2D_to_3D_fu_1009_v147_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            q_proj_0_ce0 <= grp_apply_rotary_pos_emb_fu_955_q_proj_0_ce0;
        else 
            q_proj_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    q_proj_0_ce1_assign_proc : process(grp_apply_rotary_pos_emb_fu_955_q_proj_0_ce1, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            q_proj_0_ce1 <= grp_apply_rotary_pos_emb_fu_955_q_proj_0_ce1;
        else 
            q_proj_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    q_proj_0_we0_assign_proc : process(grp_reshape_2D_to_3D_fu_1009_v147_0_we0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            q_proj_0_we0 <= grp_reshape_2D_to_3D_fu_1009_v147_0_we0;
        else 
            q_proj_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    q_proj_re_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state13, grp_linear_forward_no_mu_fu_844_v82_address0, grp_reshape_2D_to_3D_fu_1009_v146_address0, ap_CS_fsm_state15, zext_ln501_fu_1081_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            q_proj_re_address0 <= zext_ln501_fu_1081_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            q_proj_re_address0 <= grp_reshape_2D_to_3D_fu_1009_v146_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            q_proj_re_address0 <= grp_linear_forward_no_mu_fu_844_v82_address0;
        else 
            q_proj_re_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    q_proj_re_ce0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state13, grp_linear_forward_no_mu_fu_844_v82_ce0, grp_reshape_2D_to_3D_fu_1009_v146_ce0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            q_proj_re_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            q_proj_re_ce0 <= grp_reshape_2D_to_3D_fu_1009_v146_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            q_proj_re_ce0 <= grp_linear_forward_no_mu_fu_844_v82_ce0;
        else 
            q_proj_re_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    q_proj_re_d0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state13, grp_linear_forward_no_mu_fu_844_v82_d0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            q_proj_re_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            q_proj_re_d0 <= grp_linear_forward_no_mu_fu_844_v82_d0;
        else 
            q_proj_re_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    q_proj_re_we0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state13, grp_linear_forward_no_mu_fu_844_v82_we0, icmp_ln500_fu_1069_p2)
    begin
        if (((icmp_ln500_fu_1069_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            q_proj_re_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            q_proj_re_we0 <= grp_linear_forward_no_mu_fu_844_v82_we0;
        else 
            q_proj_re_we0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_final_outp_1_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_844_v78_1_0_2_ce0, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            quantized_final_outp_1_ce0 <= grp_linear_forward_no_mu_fu_844_v78_1_0_2_ce0;
        else 
            quantized_final_outp_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_final_outp_2_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_844_v78_1_0_1_ce0, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            quantized_final_outp_2_ce0 <= grp_linear_forward_no_mu_fu_844_v78_1_0_1_ce0;
        else 
            quantized_final_outp_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_final_outp_3_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_844_v78_1_0_0_ce0, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            quantized_final_outp_3_ce0 <= grp_linear_forward_no_mu_fu_844_v78_1_0_0_ce0;
        else 
            quantized_final_outp_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_final_outp_4_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_844_v78_0_0_3_ce0, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            quantized_final_outp_4_ce0 <= grp_linear_forward_no_mu_fu_844_v78_0_0_3_ce0;
        else 
            quantized_final_outp_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_final_outp_5_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_844_v78_0_0_2_ce0, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            quantized_final_outp_5_ce0 <= grp_linear_forward_no_mu_fu_844_v78_0_0_2_ce0;
        else 
            quantized_final_outp_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_final_outp_6_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_844_v78_0_0_1_ce0, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            quantized_final_outp_6_ce0 <= grp_linear_forward_no_mu_fu_844_v78_0_0_1_ce0;
        else 
            quantized_final_outp_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_final_outp_7_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_844_v78_0_0_0_ce0, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            quantized_final_outp_7_ce0 <= grp_linear_forward_no_mu_fu_844_v78_0_0_0_ce0;
        else 
            quantized_final_outp_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_final_outp_8_ce0_assign_proc : process(ap_CS_fsm_state76, grp_quantize_activation_fu_969_v24_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            quantized_final_outp_8_ce0 <= grp_quantize_activation_fu_969_v24_0_ce0;
        else 
            quantized_final_outp_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_final_outp_8_we0_assign_proc : process(ap_CS_fsm_state76, grp_quantize_activation_fu_969_v24_0_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            quantized_final_outp_8_we0 <= grp_quantize_activation_fu_969_v24_0_we0;
        else 
            quantized_final_outp_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_final_outp_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_844_v78_1_0_3_ce0, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            quantized_final_outp_ce0 <= grp_linear_forward_no_mu_fu_844_v78_1_0_3_ce0;
        else 
            quantized_final_outp_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_hidden_sta_1_address0_assign_proc : process(ap_CS_fsm_state13, grp_linear_forward_no_mu_fu_844_v78_1_0_2_address0, grp_linear_forward_no_mu_fu_873_v78_1_0_2_address0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            quantized_hidden_sta_1_address0 <= grp_linear_forward_no_mu_fu_873_v78_1_0_2_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            quantized_hidden_sta_1_address0 <= grp_linear_forward_no_mu_fu_844_v78_1_0_2_address0;
        else 
            quantized_hidden_sta_1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    quantized_hidden_sta_1_ce0_assign_proc : process(ap_CS_fsm_state13, grp_linear_forward_no_mu_fu_844_v78_1_0_2_ce0, grp_linear_forward_no_mu_fu_873_v78_1_0_2_ce0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            quantized_hidden_sta_1_ce0 <= grp_linear_forward_no_mu_fu_873_v78_1_0_2_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            quantized_hidden_sta_1_ce0 <= grp_linear_forward_no_mu_fu_844_v78_1_0_2_ce0;
        else 
            quantized_hidden_sta_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_hidden_sta_2_address0_assign_proc : process(ap_CS_fsm_state13, grp_linear_forward_no_mu_fu_844_v78_1_0_1_address0, grp_linear_forward_no_mu_fu_873_v78_1_0_1_address0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            quantized_hidden_sta_2_address0 <= grp_linear_forward_no_mu_fu_873_v78_1_0_1_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            quantized_hidden_sta_2_address0 <= grp_linear_forward_no_mu_fu_844_v78_1_0_1_address0;
        else 
            quantized_hidden_sta_2_address0 <= "XXXXXXXX";
        end if; 
    end process;


    quantized_hidden_sta_2_ce0_assign_proc : process(ap_CS_fsm_state13, grp_linear_forward_no_mu_fu_844_v78_1_0_1_ce0, grp_linear_forward_no_mu_fu_873_v78_1_0_1_ce0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            quantized_hidden_sta_2_ce0 <= grp_linear_forward_no_mu_fu_873_v78_1_0_1_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            quantized_hidden_sta_2_ce0 <= grp_linear_forward_no_mu_fu_844_v78_1_0_1_ce0;
        else 
            quantized_hidden_sta_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_hidden_sta_3_address0_assign_proc : process(ap_CS_fsm_state13, grp_linear_forward_no_mu_fu_844_v78_1_0_0_address0, grp_linear_forward_no_mu_fu_873_v78_1_0_0_address0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            quantized_hidden_sta_3_address0 <= grp_linear_forward_no_mu_fu_873_v78_1_0_0_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            quantized_hidden_sta_3_address0 <= grp_linear_forward_no_mu_fu_844_v78_1_0_0_address0;
        else 
            quantized_hidden_sta_3_address0 <= "XXXXXXXX";
        end if; 
    end process;


    quantized_hidden_sta_3_ce0_assign_proc : process(ap_CS_fsm_state13, grp_linear_forward_no_mu_fu_844_v78_1_0_0_ce0, grp_linear_forward_no_mu_fu_873_v78_1_0_0_ce0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            quantized_hidden_sta_3_ce0 <= grp_linear_forward_no_mu_fu_873_v78_1_0_0_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            quantized_hidden_sta_3_ce0 <= grp_linear_forward_no_mu_fu_844_v78_1_0_0_ce0;
        else 
            quantized_hidden_sta_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_hidden_sta_4_address0_assign_proc : process(ap_CS_fsm_state13, grp_linear_forward_no_mu_fu_844_v78_0_0_3_address0, grp_linear_forward_no_mu_fu_873_v78_0_0_3_address0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            quantized_hidden_sta_4_address0 <= grp_linear_forward_no_mu_fu_873_v78_0_0_3_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            quantized_hidden_sta_4_address0 <= grp_linear_forward_no_mu_fu_844_v78_0_0_3_address0;
        else 
            quantized_hidden_sta_4_address0 <= "XXXXXXXX";
        end if; 
    end process;


    quantized_hidden_sta_4_ce0_assign_proc : process(ap_CS_fsm_state13, grp_linear_forward_no_mu_fu_844_v78_0_0_3_ce0, grp_linear_forward_no_mu_fu_873_v78_0_0_3_ce0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            quantized_hidden_sta_4_ce0 <= grp_linear_forward_no_mu_fu_873_v78_0_0_3_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            quantized_hidden_sta_4_ce0 <= grp_linear_forward_no_mu_fu_844_v78_0_0_3_ce0;
        else 
            quantized_hidden_sta_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_hidden_sta_5_address0_assign_proc : process(ap_CS_fsm_state13, grp_linear_forward_no_mu_fu_844_v78_0_0_2_address0, grp_linear_forward_no_mu_fu_873_v78_0_0_2_address0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            quantized_hidden_sta_5_address0 <= grp_linear_forward_no_mu_fu_873_v78_0_0_2_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            quantized_hidden_sta_5_address0 <= grp_linear_forward_no_mu_fu_844_v78_0_0_2_address0;
        else 
            quantized_hidden_sta_5_address0 <= "XXXXXXXX";
        end if; 
    end process;


    quantized_hidden_sta_5_ce0_assign_proc : process(ap_CS_fsm_state13, grp_linear_forward_no_mu_fu_844_v78_0_0_2_ce0, grp_linear_forward_no_mu_fu_873_v78_0_0_2_ce0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            quantized_hidden_sta_5_ce0 <= grp_linear_forward_no_mu_fu_873_v78_0_0_2_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            quantized_hidden_sta_5_ce0 <= grp_linear_forward_no_mu_fu_844_v78_0_0_2_ce0;
        else 
            quantized_hidden_sta_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_hidden_sta_6_address0_assign_proc : process(ap_CS_fsm_state13, grp_linear_forward_no_mu_fu_844_v78_0_0_1_address0, grp_linear_forward_no_mu_fu_873_v78_0_0_1_address0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            quantized_hidden_sta_6_address0 <= grp_linear_forward_no_mu_fu_873_v78_0_0_1_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            quantized_hidden_sta_6_address0 <= grp_linear_forward_no_mu_fu_844_v78_0_0_1_address0;
        else 
            quantized_hidden_sta_6_address0 <= "XXXXXXXX";
        end if; 
    end process;


    quantized_hidden_sta_6_ce0_assign_proc : process(ap_CS_fsm_state13, grp_linear_forward_no_mu_fu_844_v78_0_0_1_ce0, grp_linear_forward_no_mu_fu_873_v78_0_0_1_ce0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            quantized_hidden_sta_6_ce0 <= grp_linear_forward_no_mu_fu_873_v78_0_0_1_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            quantized_hidden_sta_6_ce0 <= grp_linear_forward_no_mu_fu_844_v78_0_0_1_ce0;
        else 
            quantized_hidden_sta_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_hidden_sta_7_address0_assign_proc : process(ap_CS_fsm_state13, grp_linear_forward_no_mu_fu_844_v78_0_0_0_address0, grp_linear_forward_no_mu_fu_873_v78_0_0_0_address0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            quantized_hidden_sta_7_address0 <= grp_linear_forward_no_mu_fu_873_v78_0_0_0_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            quantized_hidden_sta_7_address0 <= grp_linear_forward_no_mu_fu_844_v78_0_0_0_address0;
        else 
            quantized_hidden_sta_7_address0 <= "XXXXXXXX";
        end if; 
    end process;


    quantized_hidden_sta_7_ce0_assign_proc : process(ap_CS_fsm_state13, grp_linear_forward_no_mu_fu_844_v78_0_0_0_ce0, grp_linear_forward_no_mu_fu_873_v78_0_0_0_ce0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            quantized_hidden_sta_7_ce0 <= grp_linear_forward_no_mu_fu_873_v78_0_0_0_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            quantized_hidden_sta_7_ce0 <= grp_linear_forward_no_mu_fu_844_v78_0_0_0_ce0;
        else 
            quantized_hidden_sta_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_hidden_sta_8_ce0_assign_proc : process(ap_CS_fsm_state5, grp_quantize_activation_fu_969_v24_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            quantized_hidden_sta_8_ce0 <= grp_quantize_activation_fu_969_v24_0_ce0;
        else 
            quantized_hidden_sta_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_hidden_sta_8_we0_assign_proc : process(ap_CS_fsm_state5, grp_quantize_activation_fu_969_v24_0_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            quantized_hidden_sta_8_we0 <= grp_quantize_activation_fu_969_v24_0_we0;
        else 
            quantized_hidden_sta_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_hidden_sta_address0_assign_proc : process(ap_CS_fsm_state13, grp_linear_forward_no_mu_fu_844_v78_1_0_3_address0, grp_linear_forward_no_mu_fu_873_v78_1_0_3_address0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            quantized_hidden_sta_address0 <= grp_linear_forward_no_mu_fu_873_v78_1_0_3_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            quantized_hidden_sta_address0 <= grp_linear_forward_no_mu_fu_844_v78_1_0_3_address0;
        else 
            quantized_hidden_sta_address0 <= "XXXXXXXX";
        end if; 
    end process;


    quantized_hidden_sta_ce0_assign_proc : process(ap_CS_fsm_state13, grp_linear_forward_no_mu_fu_844_v78_1_0_3_ce0, grp_linear_forward_no_mu_fu_873_v78_1_0_3_ce0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            quantized_hidden_sta_ce0 <= grp_linear_forward_no_mu_fu_873_v78_1_0_3_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            quantized_hidden_sta_ce0 <= grp_linear_forward_no_mu_fu_844_v78_1_0_3_ce0;
        else 
            quantized_hidden_sta_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rms_attn_output_0_address0_assign_proc : process(ap_CS_fsm_state76, ap_CS_fsm_state73, grp_rms_norm_fu_931_v3_0_address0, grp_quantize_activation_fu_969_v22_0_address0, icmp_ln705_fu_3278_p2, ap_CS_fsm_state74, zext_ln706_fu_3290_p1)
    begin
        if (((icmp_ln705_fu_3278_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state73))) then 
            rms_attn_output_0_address0 <= zext_ln706_fu_3290_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            rms_attn_output_0_address0 <= grp_quantize_activation_fu_969_v22_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            rms_attn_output_0_address0 <= grp_rms_norm_fu_931_v3_0_address0;
        else 
            rms_attn_output_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    rms_attn_output_0_ce0_assign_proc : process(ap_CS_fsm_state76, ap_CS_fsm_state73, grp_rms_norm_fu_931_v3_0_ce0, grp_quantize_activation_fu_969_v22_0_ce0, icmp_ln705_fu_3278_p2, ap_CS_fsm_state74)
    begin
        if (((icmp_ln705_fu_3278_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state73))) then 
            rms_attn_output_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            rms_attn_output_0_ce0 <= grp_quantize_activation_fu_969_v22_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            rms_attn_output_0_ce0 <= grp_rms_norm_fu_931_v3_0_ce0;
        else 
            rms_attn_output_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rms_attn_output_0_d0_assign_proc : process(ap_CS_fsm_state73, grp_rms_norm_fu_931_v3_0_d0, icmp_ln705_fu_3278_p2, ap_CS_fsm_state74)
    begin
        if (((icmp_ln705_fu_3278_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state73))) then 
            rms_attn_output_0_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            rms_attn_output_0_d0 <= grp_rms_norm_fu_931_v3_0_d0;
        else 
            rms_attn_output_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    rms_attn_output_0_we0_assign_proc : process(ap_CS_fsm_state73, grp_rms_norm_fu_931_v3_0_we0, icmp_ln705_fu_3278_p2, ap_CS_fsm_state74)
    begin
        if (((icmp_ln705_fu_3278_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state73))) then 
            rms_attn_output_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            rms_attn_output_0_we0 <= grp_rms_norm_fu_931_v3_0_we0;
        else 
            rms_attn_output_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rms_hidden_states_0_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state2, grp_rms_norm_fu_931_v3_0_address0, grp_quantize_activation_fu_969_v22_0_address0, icmp_ln479_fu_1052_p2, ap_CS_fsm_state3, zext_ln480_fu_1064_p1)
    begin
        if (((icmp_ln479_fu_1052_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rms_hidden_states_0_address0 <= zext_ln480_fu_1064_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            rms_hidden_states_0_address0 <= grp_quantize_activation_fu_969_v22_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rms_hidden_states_0_address0 <= grp_rms_norm_fu_931_v3_0_address0;
        else 
            rms_hidden_states_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    rms_hidden_states_0_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state2, grp_rms_norm_fu_931_v3_0_ce0, grp_quantize_activation_fu_969_v22_0_ce0, icmp_ln479_fu_1052_p2, ap_CS_fsm_state3)
    begin
        if (((icmp_ln479_fu_1052_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rms_hidden_states_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            rms_hidden_states_0_ce0 <= grp_quantize_activation_fu_969_v22_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rms_hidden_states_0_ce0 <= grp_rms_norm_fu_931_v3_0_ce0;
        else 
            rms_hidden_states_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rms_hidden_states_0_d0_assign_proc : process(ap_CS_fsm_state2, grp_rms_norm_fu_931_v3_0_d0, icmp_ln479_fu_1052_p2, ap_CS_fsm_state3)
    begin
        if (((icmp_ln479_fu_1052_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rms_hidden_states_0_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rms_hidden_states_0_d0 <= grp_rms_norm_fu_931_v3_0_d0;
        else 
            rms_hidden_states_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    rms_hidden_states_0_we0_assign_proc : process(ap_CS_fsm_state2, grp_rms_norm_fu_931_v3_0_we0, icmp_ln479_fu_1052_p2, ap_CS_fsm_state3)
    begin
        if (((icmp_ln479_fu_1052_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rms_hidden_states_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rms_hidden_states_0_we0 <= grp_rms_norm_fu_931_v3_0_we0;
        else 
            rms_hidden_states_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    scales_fixed_0_V_fu_1648_p3 <= 
        shl_ln604_4_fu_1644_p2 when (and_ln603_4_reg_3736(0) = '1') else 
        select_ln585_1_reg_3731;
    select_ln570_1_fu_3347_p3 <= 
        sub_ln461_1_fu_3341_p2 when (tmp_72_fu_3303_p3(0) = '1') else 
        zext_ln569_1_fu_3337_p1;
    select_ln570_fu_1172_p3 <= 
        sub_ln461_fu_1166_p2 when (tmp_69_fu_1128_p3(0) = '1') else 
        zext_ln569_fu_1162_p1;
    select_ln581_1_fu_3385_p3 <= 
        add_ln581_5_fu_3373_p2 when (icmp_ln581_5_fu_3367_p2(0) = '1') else 
        sub_ln581_5_fu_3379_p2;
    select_ln581_fu_1210_p3 <= 
        add_ln581_4_fu_1198_p2 when (icmp_ln581_4_fu_1192_p2(0) = '1') else 
        sub_ln581_4_fu_1204_p2;
    select_ln582_fu_1412_p3 <= 
        trunc_ln583_4_reg_3675 when (and_ln582_4_fu_1407_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln585_1_fu_1460_p3 <= 
        trunc_ln586_4_fu_1378_p1 when (and_ln585_9_fu_1454_p2(0) = '1') else 
        select_ln585_fu_1446_p3;
    select_ln585_fu_1446_p3 <= 
        select_ln588_4_fu_1394_p3 when (and_ln585_8_fu_1440_p2(0) = '1') else 
        select_ln582_fu_1412_p3;
    select_ln588_1_fu_1927_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_42_fu_1919_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln588_2_fu_2086_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_53_fu_2078_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln588_3_fu_2363_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_68_fu_2355_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln588_4_fu_1394_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_71_fu_1386_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln588_5_fu_3451_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_74_fu_3443_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln588_fu_1522_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_39_fu_1514_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln603_10_fu_2186_p3 <= 
        select_ln603_8_fu_2159_p3 when (or_ln603_6_fu_2167_p2(0) = '1') else 
        select_ln603_9_fu_2173_p3;
    select_ln603_12_fu_2436_p3 <= 
        shl_ln604_3_fu_2371_p2 when (and_ln603_3_fu_2430_p2(0) = '1') else 
        trunc_ln586_3_fu_2348_p1;
    select_ln603_13_fu_2450_p3 <= 
        select_ln588_3_fu_2363_p3 when (and_ln585_6_fu_2407_p2(0) = '1') else 
        trunc_ln583_3_reg_3871;
    select_ln603_14_fu_2463_p3 <= 
        select_ln603_12_fu_2436_p3 when (or_ln603_9_fu_2444_p2(0) = '1') else 
        select_ln603_13_fu_2450_p3;
    select_ln603_17_fu_3524_p3 <= 
        shl_ln604_5_fu_3459_p2 when (and_ln603_5_fu_3518_p2(0) = '1') else 
        trunc_ln586_5_fu_3435_p1;
    select_ln603_18_fu_3538_p3 <= 
        select_ln588_5_fu_3451_p3 when (and_ln585_10_fu_3495_p2(0) = '1') else 
        trunc_ln583_5_reg_4190;
    select_ln603_19_fu_3551_p3 <= 
        select_ln603_17_fu_3524_p3 when (or_ln603_12_fu_3532_p2(0) = '1') else 
        select_ln603_18_fu_3538_p3;
    select_ln603_1_fu_1609_p3 <= 
        select_ln588_fu_1522_p3 when (and_ln585_fu_1566_p2(0) = '1') else 
        trunc_ln583_reg_3715;
    select_ln603_2_fu_1622_p3 <= 
        select_ln603_fu_1595_p3 when (or_ln603_fu_1603_p2(0) = '1') else 
        select_ln603_1_fu_1609_p3;
    select_ln603_4_fu_2000_p3 <= 
        shl_ln604_1_fu_1935_p2 when (and_ln603_1_fu_1994_p2(0) = '1') else 
        trunc_ln586_1_fu_1912_p1;
    select_ln603_5_fu_2014_p3 <= 
        select_ln588_1_fu_1927_p3 when (and_ln585_2_fu_1971_p2(0) = '1') else 
        trunc_ln583_1_reg_3781;
    select_ln603_6_fu_2027_p3 <= 
        select_ln603_4_fu_2000_p3 when (or_ln603_3_fu_2008_p2(0) = '1') else 
        select_ln603_5_fu_2014_p3;
    select_ln603_8_fu_2159_p3 <= 
        shl_ln604_2_fu_2094_p2 when (and_ln603_2_fu_2153_p2(0) = '1') else 
        trunc_ln586_2_fu_2071_p1;
    select_ln603_9_fu_2173_p3 <= 
        select_ln588_2_fu_2086_p3 when (and_ln585_4_fu_2130_p2(0) = '1') else 
        trunc_ln583_2_reg_3821;
    select_ln603_fu_1595_p3 <= 
        shl_ln604_fu_1530_p2 when (and_ln603_fu_1589_p2(0) = '1') else 
        trunc_ln586_fu_1507_p1;
        sext_ln581_1_fu_1890_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_1_reg_3769),32));

        sext_ln581_2_fu_2049_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_2_reg_3809),32));

        sext_ln581_3_fu_2326_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_3_reg_3859),32));

        sext_ln581_4_fu_1356_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln581_reg_3663),32));

        sext_ln581_5_fu_3413_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln581_1_reg_4178),32));

        sext_ln581_fu_1485_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_reg_3703),32));

        sext_ln593_fu_2544_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln593_fu_2539_p2),64));

        sext_ln601_fu_2608_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln601_fu_2603_p2),64));

        sext_ln610_fu_2655_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln610_fu_2649_p2),10));

        sext_ln618_fu_2774_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln618_fu_2768_p2),10));

        sext_ln637_fu_2910_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln637_fu_2905_p2),64));

        sext_ln647_fu_2974_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln647_fu_2969_p2),64));

        sext_ln665_fu_3017_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln665_fu_3011_p2),64));

        sext_ln675_fu_3081_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln675_fu_3076_p2),64));

        sext_ln684_fu_3145_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln684_fu_3140_p2),64));

        sext_ln698_fu_3260_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln698_fu_3255_p2),64));

        sext_ln699_fu_3270_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln699_reg_4148),32));

    sh_amt_1_fu_1744_p3 <= 
        add_ln581_1_fu_1732_p2 when (icmp_ln581_1_fu_1726_p2(0) = '1') else 
        sub_ln581_1_fu_1738_p2;
    sh_amt_2_fu_1862_p3 <= 
        add_ln581_2_fu_1850_p2 when (icmp_ln581_2_fu_1844_p2(0) = '1') else 
        sub_ln581_2_fu_1856_p2;
    sh_amt_3_fu_2298_p3 <= 
        add_ln581_3_fu_2286_p2 when (icmp_ln581_3_fu_2280_p2(0) = '1') else 
        sub_ln581_3_fu_2292_p2;
    sh_amt_fu_1328_p3 <= 
        add_ln581_fu_1316_p2 when (icmp_ln581_fu_1310_p2(0) = '1') else 
        sub_ln581_fu_1322_p2;
    shl_ln604_1_fu_1935_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_1_reg_3781),to_integer(unsigned('0' & sext_ln581_1_fu_1890_p1(31-1 downto 0)))));
    shl_ln604_2_fu_2094_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_2_reg_3821),to_integer(unsigned('0' & sext_ln581_2_fu_2049_p1(31-1 downto 0)))));
    shl_ln604_3_fu_2371_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_3_reg_3871),to_integer(unsigned('0' & sext_ln581_3_fu_2326_p1(31-1 downto 0)))));
    shl_ln604_4_fu_1644_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_4_reg_3675),to_integer(unsigned('0' & sext_ln581_4_reg_3726(31-1 downto 0)))));
    shl_ln604_5_fu_3459_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_5_reg_4190),to_integer(unsigned('0' & sext_ln581_5_fu_3413_p1(31-1 downto 0)))));
    shl_ln604_fu_1530_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_reg_3715),to_integer(unsigned('0' & sext_ln581_fu_1485_p1(31-1 downto 0)))));
    shl_ln699_1_fu_3221_p3 <= (trunc_ln699_fu_3205_p1 & ap_const_lv5_0);
    shl_ln_fu_3209_p3 <= (trunc_ln699_fu_3205_p1 & ap_const_lv7_0);

    softmax_attn_weights_address0_assign_proc : process(ap_CS_fsm_state64, grp_softmax_fu_911_v225_0_address0, grp_GEMM_3D_float2_fu_985_v251_0_address0, ap_CS_fsm_state65, ap_CS_fsm_state68, sext_ln675_fu_3081_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            softmax_attn_weights_address0 <= sext_ln675_fu_3081_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            softmax_attn_weights_address0 <= grp_GEMM_3D_float2_fu_985_v251_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            softmax_attn_weights_address0 <= grp_softmax_fu_911_v225_0_address0;
        else 
            softmax_attn_weights_address0 <= "XXXXXXX";
        end if; 
    end process;


    softmax_attn_weights_ce0_assign_proc : process(ap_CS_fsm_state64, grp_softmax_fu_911_v225_0_ce0, grp_GEMM_3D_float2_fu_985_v251_0_ce0, ap_CS_fsm_state65, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            softmax_attn_weights_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            softmax_attn_weights_ce0 <= grp_GEMM_3D_float2_fu_985_v251_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            softmax_attn_weights_ce0 <= grp_softmax_fu_911_v225_0_ce0;
        else 
            softmax_attn_weights_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    softmax_attn_weights_d0_assign_proc : process(ap_CS_fsm_state64, grp_softmax_fu_911_v225_0_d0, ap_CS_fsm_state65)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            softmax_attn_weights_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            softmax_attn_weights_d0 <= grp_softmax_fu_911_v225_0_d0;
        else 
            softmax_attn_weights_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    softmax_attn_weights_we0_assign_proc : process(ap_CS_fsm_state64, grp_softmax_fu_911_v225_0_we0, icmp_ln674_fu_3060_p2, ap_CS_fsm_state65)
    begin
        if (((icmp_ln674_fu_3060_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state64))) then 
            softmax_attn_weights_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            softmax_attn_weights_we0 <= grp_softmax_fu_911_v225_0_we0;
        else 
            softmax_attn_weights_we0 <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln461_1_fu_3341_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln569_1_fu_3337_p1));
    sub_ln461_fu_1166_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln569_fu_1162_p1));
    sub_ln575_1_fu_3361_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln461_5_fu_3321_p1));
    sub_ln575_fu_1186_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln461_4_fu_1146_p1));
    sub_ln581_1_fu_1738_p2 <= std_logic_vector(unsigned(ap_const_lv12_14) - unsigned(F2_1_fu_1720_p2));
    sub_ln581_2_fu_1856_p2 <= std_logic_vector(unsigned(ap_const_lv12_14) - unsigned(F2_2_fu_1838_p2));
    sub_ln581_3_fu_2292_p2 <= std_logic_vector(unsigned(ap_const_lv12_14) - unsigned(F2_3_fu_2274_p2));
    sub_ln581_4_fu_1204_p2 <= std_logic_vector(unsigned(ap_const_lv12_14) - unsigned(sub_ln575_fu_1186_p2));
    sub_ln581_5_fu_3379_p2 <= std_logic_vector(unsigned(ap_const_lv12_14) - unsigned(sub_ln575_1_fu_3361_p2));
    sub_ln581_fu_1322_p2 <= std_logic_vector(unsigned(ap_const_lv12_14) - unsigned(F2_fu_1304_p2));
    sub_ln593_fu_2517_p2 <= std_logic_vector(unsigned(tmp_24_fu_2497_p3) - unsigned(zext_ln593_fu_2513_p1));
    sub_ln601_fu_2581_p2 <= std_logic_vector(unsigned(tmp_26_fu_2561_p3) - unsigned(zext_ln601_fu_2577_p1));
    sub_ln610_1_fu_2700_p2 <= std_logic_vector(unsigned(p_shl8_cast_fu_2684_p3) - unsigned(p_shl9_cast_fu_2692_p3));
    sub_ln610_fu_2649_p2 <= std_logic_vector(unsigned(zext_ln610_fu_2633_p1) - unsigned(zext_ln610_1_fu_2645_p1));
    sub_ln618_1_fu_2819_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_2803_p3) - unsigned(p_shl2_cast_fu_2811_p3));
    sub_ln618_fu_2768_p2 <= std_logic_vector(unsigned(zext_ln618_fu_2752_p1) - unsigned(zext_ln618_1_fu_2764_p1));
    sub_ln637_fu_2883_p2 <= std_logic_vector(unsigned(tmp_32_fu_2863_p3) - unsigned(zext_ln637_fu_2879_p1));
    sub_ln647_fu_2947_p2 <= std_logic_vector(unsigned(tmp_34_fu_2927_p3) - unsigned(zext_ln647_fu_2943_p1));
    sub_ln665_fu_3011_p2 <= std_logic_vector(unsigned(tmp_36_fu_2991_p3) - unsigned(zext_ln665_fu_3007_p1));
    sub_ln675_fu_3054_p2 <= std_logic_vector(unsigned(tmp_40_fu_3034_p3) - unsigned(zext_ln675_fu_3050_p1));
    sub_ln684_fu_3118_p2 <= std_logic_vector(unsigned(tmp_44_fu_3098_p3) - unsigned(zext_ln684_fu_3114_p1));
    sub_ln698_fu_3199_p2 <= std_logic_vector(unsigned(tmp_46_fu_3179_p3) - unsigned(zext_ln698_fu_3195_p1));
    sub_ln699_fu_3233_p2 <= std_logic_vector(unsigned(zext_ln699_1_fu_3217_p1) - unsigned(zext_ln699_2_fu_3229_p1));
    tmp_1_fu_1154_p3 <= (ap_const_lv1_1 & trunc_ln565_4_fu_1150_p1);
    tmp_24_fu_2497_p3 <= (v338_0_reg_580 & ap_const_lv7_0);
    tmp_25_fu_2505_p3 <= (v338_0_reg_580 & ap_const_lv5_0);
    tmp_26_fu_2561_p3 <= (v342_0_reg_602 & ap_const_lv7_0);
    tmp_27_fu_2569_p3 <= (v342_0_reg_602 & ap_const_lv5_0);
    tmp_28_fu_2625_p3 <= (v346_0_reg_624 & ap_const_lv3_0);
    tmp_29_fu_2637_p3 <= (v346_0_reg_624 & ap_const_lv1_0);
    tmp_30_fu_2744_p3 <= (v350_0_reg_657 & ap_const_lv3_0);
    tmp_31_fu_2756_p3 <= (v350_0_reg_657 & ap_const_lv1_0);
    tmp_32_fu_2863_p3 <= (v358_0_reg_690 & ap_const_lv3_0);
    tmp_33_fu_2871_p3 <= (v358_0_reg_690 & ap_const_lv1_0);
    tmp_34_fu_2927_p3 <= (i12_0_reg_712 & ap_const_lv3_0);
    tmp_35_fu_2935_p3 <= (i12_0_reg_712 & ap_const_lv1_0);
    tmp_36_fu_2991_p3 <= (h6_0_reg_734 & ap_const_lv3_0);
    tmp_37_fu_2999_p3 <= (h6_0_reg_734 & ap_const_lv1_0);
    tmp_39_fu_1514_p3 <= bitcast_ln696_fu_1511_p1(31 downto 31);
    tmp_40_fu_3034_p3 <= (v378_0_reg_745 & ap_const_lv3_0);
    tmp_42_fu_1919_p3 <= bitcast_ln696_2_fu_1916_p1(31 downto 31);
    tmp_43_fu_3042_p3 <= (v378_0_reg_745 & ap_const_lv1_0);
    tmp_44_fu_3098_p3 <= (v382_0_reg_767 & ap_const_lv7_0);
    tmp_45_fu_3106_p3 <= (v382_0_reg_767 & ap_const_lv5_0);
    tmp_46_fu_3179_p3 <= (h7_0_0_reg_800 & ap_const_lv7_0);
    tmp_47_fu_3187_p3 <= (h7_0_0_reg_800 & ap_const_lv5_0);
    tmp_53_fu_2078_p3 <= bitcast_ln696_4_fu_2075_p1(31 downto 31);
    tmp_5_fu_3329_p3 <= (ap_const_lv1_1 & trunc_ln565_5_fu_3325_p1);
    tmp_68_fu_2355_p3 <= bitcast_ln696_6_fu_2352_p1(31 downto 31);
    tmp_69_fu_1128_p3 <= bitcast_ln696_7_fu_1120_p1(63 downto 63);
    tmp_71_fu_1386_p3 <= bitcast_ln696_8_fu_1382_p1(31 downto 31);
    tmp_72_fu_3303_p3 <= bitcast_ln696_9_fu_3295_p1(63 downto 63);
    tmp_74_fu_3443_p3 <= bitcast_ln696_10_fu_3439_p1(31 downto 31);
    tmp_8_fu_1806_p3 <= (ap_const_lv1_1 & trunc_ln565_2_fu_1802_p1);
    tmp_9_fu_2242_p3 <= (ap_const_lv1_1 & trunc_ln565_3_fu_2238_p1);
    tmp_fu_1272_p3 <= (ap_const_lv1_1 & trunc_ln565_fu_1268_p1);
    tmp_s_fu_1688_p3 <= (ap_const_lv1_1 & trunc_ln565_1_fu_1684_p1);
    trunc_ln556_1_fu_1658_p1 <= ireg_V_1_fu_1654_p1(63 - 1 downto 0);
    trunc_ln556_2_fu_1776_p1 <= ireg_V_2_fu_1772_p1(63 - 1 downto 0);
    trunc_ln556_3_fu_2212_p1 <= ireg_V_3_fu_2208_p1(63 - 1 downto 0);
    trunc_ln556_fu_1242_p1 <= ireg_V_fu_1238_p1(63 - 1 downto 0);
    trunc_ln557_1_fu_3299_p1 <= bitcast_ln696_9_fu_3295_p1(63 - 1 downto 0);
    trunc_ln557_fu_1124_p1 <= bitcast_ln696_7_fu_1120_p1(63 - 1 downto 0);
    trunc_ln565_1_fu_1684_p1 <= ireg_V_1_fu_1654_p1(52 - 1 downto 0);
    trunc_ln565_2_fu_1802_p1 <= ireg_V_2_fu_1772_p1(52 - 1 downto 0);
    trunc_ln565_3_fu_2238_p1 <= ireg_V_3_fu_2208_p1(52 - 1 downto 0);
    trunc_ln565_4_fu_1150_p1 <= bitcast_ln696_7_fu_1120_p1(52 - 1 downto 0);
    trunc_ln565_5_fu_3325_p1 <= bitcast_ln696_9_fu_3295_p1(52 - 1 downto 0);
    trunc_ln565_fu_1268_p1 <= ireg_V_fu_1238_p1(52 - 1 downto 0);
    trunc_ln583_1_fu_1758_p1 <= man_V_5_fu_1706_p3(32 - 1 downto 0);
    trunc_ln583_2_fu_1876_p1 <= man_V_8_fu_1824_p3(32 - 1 downto 0);
    trunc_ln583_3_fu_2312_p1 <= man_V_11_fu_2260_p3(32 - 1 downto 0);
    trunc_ln583_4_fu_1224_p1 <= select_ln570_fu_1172_p3(32 - 1 downto 0);
    trunc_ln583_5_fu_3399_p1 <= select_ln570_1_fu_3347_p3(32 - 1 downto 0);
    trunc_ln583_fu_1342_p1 <= man_V_2_fu_1290_p3(32 - 1 downto 0);
    trunc_ln586_1_fu_1912_p1 <= ashr_ln586_1_fu_1907_p2(32 - 1 downto 0);
    trunc_ln586_2_fu_2071_p1 <= ashr_ln586_2_fu_2066_p2(32 - 1 downto 0);
    trunc_ln586_3_fu_2348_p1 <= ashr_ln586_3_fu_2343_p2(32 - 1 downto 0);
    trunc_ln586_4_fu_1378_p1 <= ashr_ln586_4_fu_1373_p2(32 - 1 downto 0);
    trunc_ln586_5_fu_3435_p1 <= ashr_ln586_5_fu_3430_p2(32 - 1 downto 0);
    trunc_ln586_fu_1507_p1 <= ashr_ln586_fu_1502_p2(32 - 1 downto 0);
    trunc_ln610_fu_2680_p1 <= add_ln610_fu_2675_p2(8 - 1 downto 0);
    trunc_ln618_fu_2799_p1 <= add_ln618_fu_2794_p2(8 - 1 downto 0);
    trunc_ln699_fu_3205_p1 <= h7_0_0_reg_800(4 - 1 downto 0);

    updated_k_cache_address0_assign_proc : process(ap_CS_fsm_state25, grp_cache_update_fu_992_v194_address0, grp_transpose_last_two_d_fu_1002_v203_address0, ap_CS_fsm_state31, ap_CS_fsm_state29, zext_ln610_4_fu_2727_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            updated_k_cache_address0 <= zext_ln610_4_fu_2727_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            updated_k_cache_address0 <= grp_transpose_last_two_d_fu_1002_v203_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            updated_k_cache_address0 <= grp_cache_update_fu_992_v194_address0;
        else 
            updated_k_cache_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    updated_k_cache_ce0_assign_proc : process(ap_CS_fsm_state25, grp_cache_update_fu_992_v194_ce0, grp_transpose_last_two_d_fu_1002_v203_ce0, ap_CS_fsm_state31, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            updated_k_cache_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            updated_k_cache_ce0 <= grp_transpose_last_two_d_fu_1002_v203_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            updated_k_cache_ce0 <= grp_cache_update_fu_992_v194_ce0;
        else 
            updated_k_cache_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    updated_k_cache_d0_assign_proc : process(ap_CS_fsm_state25, grp_cache_update_fu_992_v194_d0, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            updated_k_cache_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            updated_k_cache_d0 <= grp_cache_update_fu_992_v194_d0;
        else 
            updated_k_cache_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    updated_k_cache_we0_assign_proc : process(ap_CS_fsm_state25, grp_cache_update_fu_992_v194_we0, icmp_ln609_fu_2706_p2, ap_CS_fsm_state29)
    begin
        if (((icmp_ln609_fu_2706_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            updated_k_cache_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            updated_k_cache_we0 <= grp_cache_update_fu_992_v194_we0;
        else 
            updated_k_cache_we0 <= ap_const_logic_0;
        end if; 
    end process;


    updated_v_cache_address0_assign_proc : process(ap_CS_fsm_state28, grp_GEMM_3D_float2_fu_985_v252_address0, grp_cache_update_fu_992_v194_address0, ap_CS_fsm_state31, ap_CS_fsm_state68, zext_ln618_4_fu_2846_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            updated_v_cache_address0 <= zext_ln618_4_fu_2846_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            updated_v_cache_address0 <= grp_cache_update_fu_992_v194_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            updated_v_cache_address0 <= grp_GEMM_3D_float2_fu_985_v252_address0;
        else 
            updated_v_cache_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    updated_v_cache_ce0_assign_proc : process(ap_CS_fsm_state28, grp_GEMM_3D_float2_fu_985_v252_ce0, grp_cache_update_fu_992_v194_ce0, ap_CS_fsm_state31, ap_CS_fsm_state68)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            updated_v_cache_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            updated_v_cache_ce0 <= grp_cache_update_fu_992_v194_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            updated_v_cache_ce0 <= grp_GEMM_3D_float2_fu_985_v252_ce0;
        else 
            updated_v_cache_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    updated_v_cache_d0_assign_proc : process(ap_CS_fsm_state28, grp_cache_update_fu_992_v194_d0, ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            updated_v_cache_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            updated_v_cache_d0 <= grp_cache_update_fu_992_v194_d0;
        else 
            updated_v_cache_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    updated_v_cache_we0_assign_proc : process(ap_CS_fsm_state28, grp_cache_update_fu_992_v194_we0, icmp_ln617_fu_2825_p2, ap_CS_fsm_state31)
    begin
        if (((icmp_ln617_fu_2825_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            updated_v_cache_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            updated_v_cache_we0 <= grp_cache_update_fu_992_v194_we0;
        else 
            updated_v_cache_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v263_address0 <= grp_rms_norm_fu_931_v0_address0;

    v263_ce0_assign_proc : process(grp_rms_norm_fu_931_v0_ce0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            v263_ce0 <= grp_rms_norm_fu_931_v0_ce0;
        else 
            v263_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v264_0_address0 <= grp_linear_forward_no_mu_fu_844_v80_0_address0;

    v264_0_ce0_assign_proc : process(ap_CS_fsm_state13, grp_linear_forward_no_mu_fu_844_v80_0_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            v264_0_ce0 <= grp_linear_forward_no_mu_fu_844_v80_0_ce0;
        else 
            v264_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v264_1_address0 <= grp_linear_forward_no_mu_fu_844_v80_1_address0;

    v264_1_ce0_assign_proc : process(ap_CS_fsm_state13, grp_linear_forward_no_mu_fu_844_v80_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            v264_1_ce0 <= grp_linear_forward_no_mu_fu_844_v80_1_ce0;
        else 
            v264_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v266_0_address0 <= grp_linear_forward_no_mu_fu_844_v80_0_address0;

    v266_0_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_844_v80_0_ce0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            v266_0_ce0 <= grp_linear_forward_no_mu_fu_844_v80_0_ce0;
        else 
            v266_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v266_1_address0 <= grp_linear_forward_no_mu_fu_844_v80_1_address0;

    v266_1_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_844_v80_1_ce0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            v266_1_ce0 <= grp_linear_forward_no_mu_fu_844_v80_1_ce0;
        else 
            v266_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v268_0_address0 <= grp_linear_forward_no_mu_fu_873_v80_0_address0;
    v268_0_ce0 <= grp_linear_forward_no_mu_fu_873_v80_0_ce0;
    v268_1_address0 <= grp_linear_forward_no_mu_fu_873_v80_1_address0;
    v268_1_ce0 <= grp_linear_forward_no_mu_fu_873_v80_1_ce0;
    v270_0_address0 <= grp_linear_forward_no_mu_fu_844_v80_0_address0;

    v270_0_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_844_v80_0_ce0, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            v270_0_ce0 <= grp_linear_forward_no_mu_fu_844_v80_0_ce0;
        else 
            v270_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v270_1_address0 <= grp_linear_forward_no_mu_fu_844_v80_1_address0;

    v270_1_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_844_v80_1_ce0, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            v270_1_ce0 <= grp_linear_forward_no_mu_fu_844_v80_1_ce0;
        else 
            v270_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v272_address0 <= grp_apply_rotary_pos_emb_fu_955_v162_address0;
    v272_ce0 <= grp_apply_rotary_pos_emb_fu_955_v162_ce0;
    v273_address0 <= grp_apply_rotary_pos_emb_fu_955_v163_address0;
    v273_ce0 <= grp_apply_rotary_pos_emb_fu_955_v163_ce0;
    v274_address0 <= grp_rms_norm_fu_931_v1_address0;

    v274_ce0_assign_proc : process(grp_rms_norm_fu_931_v1_ce0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            v274_ce0 <= grp_rms_norm_fu_931_v1_ce0;
        else 
            v274_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v275_address0 <= grp_rms_norm_fu_931_v1_address0;

    v275_ce0_assign_proc : process(grp_rms_norm_fu_931_v1_ce0, ap_CS_fsm_state74)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            v275_ce0 <= grp_rms_norm_fu_931_v1_ce0;
        else 
            v275_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v276_address0 <= grp_cache_update_fu_992_v192_address0;

    v276_ce0_assign_proc : process(grp_cache_update_fu_992_v192_ce0, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            v276_ce0 <= grp_cache_update_fu_992_v192_ce0;
        else 
            v276_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v277_address0 <= grp_cache_update_fu_992_v192_address0;

    v277_ce0_assign_proc : process(grp_cache_update_fu_992_v192_ce0, ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            v277_ce0 <= grp_cache_update_fu_992_v192_ce0;
        else 
            v277_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v279_address0_assign_proc : process(ap_CS_fsm_state79, grp_linear_forward_no_mu_fu_844_v82_address0, icmp_ln753_fu_3573_p2, ap_CS_fsm_state80, zext_ln754_fu_3585_p1)
    begin
        if (((icmp_ln753_fu_3573_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state79))) then 
            v279_address0 <= zext_ln754_fu_3585_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            v279_address0 <= grp_linear_forward_no_mu_fu_844_v82_address0;
        else 
            v279_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    v279_ce0_assign_proc : process(ap_CS_fsm_state79, grp_linear_forward_no_mu_fu_844_v82_ce0, icmp_ln753_fu_3573_p2, ap_CS_fsm_state80)
    begin
        if (((icmp_ln753_fu_3573_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state79))) then 
            v279_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            v279_ce0 <= grp_linear_forward_no_mu_fu_844_v82_ce0;
        else 
            v279_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v279_d0_assign_proc : process(ap_CS_fsm_state79, grp_linear_forward_no_mu_fu_844_v82_d0, icmp_ln753_fu_3573_p2, ap_CS_fsm_state80)
    begin
        if (((icmp_ln753_fu_3573_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state79))) then 
            v279_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            v279_d0 <= grp_linear_forward_no_mu_fu_844_v82_d0;
        else 
            v279_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    v279_we0_assign_proc : process(ap_CS_fsm_state79, grp_linear_forward_no_mu_fu_844_v82_we0, icmp_ln753_fu_3573_p2, ap_CS_fsm_state80)
    begin
        if (((icmp_ln753_fu_3573_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state79))) then 
            v279_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            v279_we0 <= grp_linear_forward_no_mu_fu_844_v82_we0;
        else 
            v279_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v300_V_fu_1636_p3 <= 
        select_ln603_2_fu_1622_p3 when (or_ln603_2_fu_1630_p2(0) = '1') else 
        ap_const_lv32_0;
    v302_V_fu_2041_p3 <= 
        select_ln603_6_fu_2027_p3 when (or_ln603_5_fu_2035_p2(0) = '1') else 
        ap_const_lv32_0;
    v304_V_fu_2200_p3 <= 
        select_ln603_10_fu_2186_p3 when (or_ln603_8_fu_2194_p2(0) = '1') else 
        ap_const_lv32_0;
    v306_V_fu_2477_p3 <= 
        select_ln603_14_fu_2463_p3 when (or_ln603_11_fu_2471_p2(0) = '1') else 
        ap_const_lv32_0;
    v338_fu_2491_p2 <= std_logic_vector(unsigned(v338_0_reg_580) + unsigned(ap_const_lv5_1));
    v342_fu_2555_p2 <= std_logic_vector(unsigned(v342_0_reg_602) + unsigned(ap_const_lv5_1));
    v346_fu_2619_p2 <= std_logic_vector(unsigned(v346_0_reg_624) + unsigned(ap_const_lv5_1));
    v347_fu_2665_p2 <= std_logic_vector(unsigned(v347_0_reg_635) + unsigned(ap_const_lv3_1));
    v348_fu_2712_p2 <= std_logic_vector(unsigned(v348_0_reg_646) + unsigned(ap_const_lv7_1));
    v350_fu_2738_p2 <= std_logic_vector(unsigned(v350_0_reg_657) + unsigned(ap_const_lv5_1));
    v351_fu_2784_p2 <= std_logic_vector(unsigned(v351_0_reg_668) + unsigned(ap_const_lv3_1));
    v352_fu_2831_p2 <= std_logic_vector(unsigned(v352_0_reg_679) + unsigned(ap_const_lv7_1));
    v358_fu_2857_p2 <= std_logic_vector(unsigned(v358_0_reg_690) + unsigned(ap_const_lv5_1));
    v378_fu_3028_p2 <= std_logic_vector(unsigned(v378_0_reg_745) + unsigned(ap_const_lv5_1));
    v382_fu_3092_p2 <= std_logic_vector(unsigned(v382_0_reg_767) + unsigned(ap_const_lv5_1));

    v_proj_0_address0_assign_proc : process(ap_CS_fsm_state17, grp_cache_update_fu_992_v193_0_address0, grp_reshape_2D_to_3D_fu_1017_v147_0_address0, ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            v_proj_0_address0 <= grp_reshape_2D_to_3D_fu_1017_v147_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            v_proj_0_address0 <= grp_cache_update_fu_992_v193_0_address0;
        else 
            v_proj_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    v_proj_0_ce0_assign_proc : process(ap_CS_fsm_state17, grp_cache_update_fu_992_v193_0_ce0, grp_reshape_2D_to_3D_fu_1017_v147_0_ce0, ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            v_proj_0_ce0 <= grp_reshape_2D_to_3D_fu_1017_v147_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            v_proj_0_ce0 <= grp_cache_update_fu_992_v193_0_ce0;
        else 
            v_proj_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v_proj_0_we0_assign_proc : process(ap_CS_fsm_state17, grp_reshape_2D_to_3D_fu_1017_v147_0_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            v_proj_0_we0 <= grp_reshape_2D_to_3D_fu_1017_v147_0_we0;
        else 
            v_proj_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    v_proj_re_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state17, grp_linear_forward_no_mu_fu_873_v82_address0, grp_reshape_2D_to_3D_fu_1017_v146_address0, ap_CS_fsm_state15, zext_ln513_fu_1115_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            v_proj_re_address0 <= zext_ln513_fu_1115_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            v_proj_re_address0 <= grp_reshape_2D_to_3D_fu_1017_v146_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            v_proj_re_address0 <= grp_linear_forward_no_mu_fu_873_v82_address0;
        else 
            v_proj_re_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    v_proj_re_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state17, grp_linear_forward_no_mu_fu_873_v82_ce0, grp_reshape_2D_to_3D_fu_1017_v146_ce0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            v_proj_re_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            v_proj_re_ce0 <= grp_reshape_2D_to_3D_fu_1017_v146_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            v_proj_re_ce0 <= grp_linear_forward_no_mu_fu_873_v82_ce0;
        else 
            v_proj_re_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v_proj_re_d0_assign_proc : process(ap_CS_fsm_state8, grp_linear_forward_no_mu_fu_873_v82_d0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            v_proj_re_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            v_proj_re_d0 <= grp_linear_forward_no_mu_fu_873_v82_d0;
        else 
            v_proj_re_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    v_proj_re_we0_assign_proc : process(ap_CS_fsm_state8, grp_linear_forward_no_mu_fu_873_v82_we0, icmp_ln512_fu_1103_p2, ap_CS_fsm_state15)
    begin
        if (((icmp_ln512_fu_1103_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            v_proj_re_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            v_proj_re_we0 <= grp_linear_forward_no_mu_fu_873_v82_we0;
        else 
            v_proj_re_we0 <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln571_1_fu_1940_p2 <= (icmp_ln571_1_reg_3757 xor ap_const_lv1_1);
    xor_ln571_2_fu_2099_p2 <= (icmp_ln571_2_reg_3797 xor ap_const_lv1_1);
    xor_ln571_3_fu_2376_p2 <= (icmp_ln571_3_reg_3847 xor ap_const_lv1_1);
    xor_ln571_4_fu_1402_p2 <= (icmp_ln571_4_reg_3651 xor ap_const_lv1_1);
    xor_ln571_5_fu_3464_p2 <= (icmp_ln571_5_reg_4166 xor ap_const_lv1_1);
    xor_ln571_fu_1535_p2 <= (icmp_ln571_reg_3691 xor ap_const_lv1_1);
    xor_ln581_1_fu_1988_p2 <= (or_ln581_1_fu_1983_p2 xor ap_const_lv1_1);
    xor_ln581_2_fu_2147_p2 <= (or_ln581_2_fu_2142_p2 xor ap_const_lv1_1);
    xor_ln581_3_fu_2424_p2 <= (or_ln581_3_fu_2419_p2 xor ap_const_lv1_1);
    xor_ln581_4_fu_1473_p2 <= (or_ln581_4_fu_1468_p2 xor ap_const_lv1_1);
    xor_ln581_5_fu_3512_p2 <= (or_ln581_5_fu_3507_p2 xor ap_const_lv1_1);
    xor_ln581_fu_1583_p2 <= (or_ln581_fu_1578_p2 xor ap_const_lv1_1);
    xor_ln582_1_fu_1954_p2 <= (or_ln582_1_fu_1950_p2 xor ap_const_lv1_1);
    xor_ln582_2_fu_2113_p2 <= (or_ln582_2_fu_2109_p2 xor ap_const_lv1_1);
    xor_ln582_3_fu_2390_p2 <= (or_ln582_3_fu_2386_p2 xor ap_const_lv1_1);
    xor_ln582_4_fu_1423_p2 <= (or_ln582_4_fu_1419_p2 xor ap_const_lv1_1);
    xor_ln582_5_fu_3478_p2 <= (or_ln582_5_fu_3474_p2 xor ap_const_lv1_1);
    xor_ln582_fu_1549_p2 <= (or_ln582_fu_1545_p2 xor ap_const_lv1_1);
    xor_ln585_1_fu_1965_p2 <= (icmp_ln585_1_fu_1893_p2 xor ap_const_lv1_1);
    xor_ln585_2_fu_2124_p2 <= (icmp_ln585_2_fu_2052_p2 xor ap_const_lv1_1);
    xor_ln585_3_fu_2401_p2 <= (icmp_ln585_3_fu_2329_p2 xor ap_const_lv1_1);
    xor_ln585_4_fu_1434_p2 <= (icmp_ln585_4_fu_1359_p2 xor ap_const_lv1_1);
    xor_ln585_5_fu_3489_p2 <= (icmp_ln585_5_fu_3416_p2 xor ap_const_lv1_1);
    xor_ln585_fu_1560_p2 <= (icmp_ln585_fu_1488_p2 xor ap_const_lv1_1);
    zext_ln461_1_fu_1680_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_1_fu_1670_p4),12));
    zext_ln461_2_fu_1798_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_2_fu_1788_p4),12));
    zext_ln461_3_fu_2234_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_3_fu_2224_p4),12));
    zext_ln461_4_fu_1146_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_9_fu_1136_p4),12));
    zext_ln461_5_fu_3321_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_s_97_fu_3311_p4),12));
    zext_ln461_fu_1264_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_fu_1254_p4),12));
    zext_ln480_fu_1064_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v283_0_0_reg_536),64));
    zext_ln501_fu_1081_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v293_0_0_reg_547),64));
    zext_ln507_fu_1098_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v296_0_0_reg_558),64));
    zext_ln513_fu_1115_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v299_0_0_reg_569),64));
    zext_ln569_1_fu_3337_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_3329_p3),54));
    zext_ln569_fu_1162_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_1154_p3),54));
    zext_ln586_1_fu_1903_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln581_1_fu_1890_p1),54));
    zext_ln586_2_fu_2062_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln581_2_fu_2049_p1),54));
    zext_ln586_3_fu_2339_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln581_3_fu_2326_p1),54));
    zext_ln586_4_fu_1369_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln581_4_fu_1356_p1),54));
    zext_ln586_5_fu_3426_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln581_5_fu_3413_p1),54));
    zext_ln586_fu_1498_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln581_fu_1485_p1),54));
    zext_ln593_1_fu_2535_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v340_0_0_reg_591),12));
    zext_ln593_fu_2513_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_25_fu_2505_p3),12));
    zext_ln601_1_fu_2599_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v344_0_0_reg_613),12));
    zext_ln601_fu_2577_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_27_fu_2569_p3),12));
    zext_ln610_1_fu_2645_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_29_fu_2637_p3),9));
    zext_ln610_2_fu_2671_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v347_0_reg_635),10));
    zext_ln610_3_fu_2718_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v348_0_reg_646),15));
    zext_ln610_4_fu_2727_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln610_1_fu_2722_p2),64));
    zext_ln610_fu_2633_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_fu_2625_p3),9));
    zext_ln618_1_fu_2764_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_31_fu_2756_p3),9));
    zext_ln618_2_fu_2790_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v351_0_reg_668),10));
    zext_ln618_3_fu_2837_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v352_0_reg_679),15));
    zext_ln618_4_fu_2846_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln618_1_fu_2841_p2),64));
    zext_ln618_fu_2752_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_30_fu_2744_p3),9));
    zext_ln637_1_fu_2901_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v360_0_0_reg_701),8));
    zext_ln637_fu_2879_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_33_fu_2871_p3),8));
    zext_ln647_1_fu_2965_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k10_0_0_reg_723),8));
    zext_ln647_fu_2943_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_35_fu_2935_p3),8));
    zext_ln665_fu_3007_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_37_fu_2999_p3),8));
    zext_ln675_1_fu_3072_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v380_0_0_reg_756),8));
    zext_ln675_fu_3050_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_43_fu_3042_p3),8));
    zext_ln684_1_fu_3136_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v384_0_0_reg_778),12));
    zext_ln684_fu_3114_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_45_fu_3106_p3),12));
    zext_ln692_fu_3162_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v387_0_0_reg_789),64));
    zext_ln697_fu_3239_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(d4_0_0_reg_811),12));
    zext_ln698_fu_3195_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_47_fu_3187_p3),12));
    zext_ln699_1_fu_3217_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_3209_p3),12));
    zext_ln699_2_fu_3229_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln699_1_fu_3221_p3),12));
    zext_ln699_fu_3273_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln699_fu_3270_p1),64));
    zext_ln706_fu_3290_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v394_0_0_reg_822),64));
    zext_ln754_fu_3585_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v417_0_0_reg_833),64));
end behav;
