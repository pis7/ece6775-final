-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pow_32_20_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x_V : IN STD_LOGIC_VECTOR (31 downto 0);
    y_V : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of pow_32_20_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (51 downto 0) := "0000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (51 downto 0) := "0000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (51 downto 0) := "0000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (51 downto 0) := "0000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (51 downto 0) := "0000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (51 downto 0) := "0000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (51 downto 0) := "0001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (51 downto 0) := "0010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (51 downto 0) := "0100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (51 downto 0) := "1000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv7_55 : STD_LOGIC_VECTOR (6 downto 0) := "1010101";
    constant ap_const_lv6_1E : STD_LOGIC_VECTOR (5 downto 0) := "011110";
    constant ap_const_lv32_1000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000001000000000000";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv42_0 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000000";
    constant ap_const_lv32_5B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011011";
    constant ap_const_lv7_5B : STD_LOGIC_VECTOR (6 downto 0) := "1011011";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010101";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal icmp_ln63_fu_267_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln63_reg_542 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1498_fu_277_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1498_reg_546 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_fu_283_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_reg_550 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln84_fu_305_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln178_fu_335_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal select_ln178_reg_559 : STD_LOGIC_VECTOR (32 downto 0);
    signal ln_x_s_V_fu_363_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal ln_x_s_V_reg_570 : STD_LOGIC_VECTOR (59 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal grp_fu_373_p2 : STD_LOGIC_VECTOR (91 downto 0);
    signal r_V_reg_585 : STD_LOGIC_VECTOR (91 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal tmp_reg_592 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln135_fu_409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal icmp_ln134_fu_391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_fu_415_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal and_ln155_fu_444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln155_reg_610 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal p_Result_11_fu_462_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal r_is_neg_1_reg_108 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_454_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_2_fu_472_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_fu_511_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal p_Result_7_fu_517_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln75_fu_505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_8_fu_527_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_log_75_21_s_fu_232_ap_start : STD_LOGIC;
    signal grp_log_75_21_s_fu_232_ap_done : STD_LOGIC;
    signal grp_log_75_21_s_fu_232_ap_idle : STD_LOGIC;
    signal grp_log_75_21_s_fu_232_ap_ready : STD_LOGIC;
    signal grp_log_75_21_s_fu_232_x_V : STD_LOGIC_VECTOR (74 downto 0);
    signal grp_log_75_21_s_fu_232_ap_return : STD_LOGIC_VECTOR (74 downto 0);
    signal grp_exp_core_32_20_54_s_fu_249_ap_start : STD_LOGIC;
    signal grp_exp_core_32_20_54_s_fu_249_ap_done : STD_LOGIC;
    signal grp_exp_core_32_20_54_s_fu_249_ap_idle : STD_LOGIC;
    signal grp_exp_core_32_20_54_s_fu_249_ap_ready : STD_LOGIC;
    signal grp_exp_core_32_20_54_s_fu_249_x_V : STD_LOGIC_VECTOR (53 downto 0);
    signal grp_exp_core_32_20_54_s_fu_249_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_phi_ln155_phi_fu_124_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln155_reg_120 : STD_LOGIC_VECTOR (0 downto 0);
    signal index_assign_1_reg_132 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_phi_mux_r_V_7_phi_fu_147_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_7_reg_143 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_6_reg_155 : STD_LOGIC_VECTOR (31 downto 0);
    signal index_assign_2_reg_166 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_agg_result_V_0_phi_fu_183_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal agg_result_V_0_reg_177 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1498_1_fu_343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_fu_349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_10_fu_490_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1499_fu_478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_s_reg_210 : STD_LOGIC_VECTOR (31 downto 0);
    signal index_assign_reg_221 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_log_75_21_s_fu_232_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (51 downto 0);
    signal ap_NS_fsm_state2 : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_exp_core_32_20_54_s_fu_249_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm_state38 : STD_LOGIC;
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal trunc_ln612_fu_263_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln612_fu_263_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln1498_fu_273_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1498_fu_273_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_Result_2_fu_283_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln84_fu_291_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_297_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_297_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln84_fu_291_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_e_1_V_fu_311_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal xs_V_1_fu_315_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln703_fu_321_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_Result_9_fu_325_p4 : STD_LOGIC_VECTOR (32 downto 0);
    signal x_e_1_V_fu_311_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln1498_1_fu_343_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1494_fu_349_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln134_fu_387_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_fu_397_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln135_fu_404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_431_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln155_fu_438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln177_fu_450_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_8_fu_484_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln75_fu_501_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_condition_258 : BOOLEAN;
    signal ap_condition_263 : BOOLEAN;
    signal ap_condition_275 : BOOLEAN;
    signal ap_condition_87 : BOOLEAN;

    component log_75_21_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        x_V : IN STD_LOGIC_VECTOR (74 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (74 downto 0) );
    end component;


    component exp_core_32_20_54_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        x_V : IN STD_LOGIC_VECTOR (53 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component attention_mul_60sudo IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (59 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (91 downto 0) );
    end component;



begin
    grp_log_75_21_s_fu_232 : component log_75_21_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_log_75_21_s_fu_232_ap_start,
        ap_done => grp_log_75_21_s_fu_232_ap_done,
        ap_idle => grp_log_75_21_s_fu_232_ap_idle,
        ap_ready => grp_log_75_21_s_fu_232_ap_ready,
        x_V => grp_log_75_21_s_fu_232_x_V,
        ap_return => grp_log_75_21_s_fu_232_ap_return);

    grp_exp_core_32_20_54_s_fu_249 : component exp_core_32_20_54_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_exp_core_32_20_54_s_fu_249_ap_start,
        ap_done => grp_exp_core_32_20_54_s_fu_249_ap_done,
        ap_idle => grp_exp_core_32_20_54_s_fu_249_ap_idle,
        ap_ready => grp_exp_core_32_20_54_s_fu_249_ap_ready,
        x_V => grp_exp_core_32_20_54_s_fu_249_x_V,
        ap_return => grp_exp_core_32_20_54_s_fu_249_ap_return);

    attention_mul_60sudo_U31 : component attention_mul_60sudo
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 60,
        din1_WIDTH => 32,
        dout_WIDTH => 92)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ln_x_s_V_reg_570,
        din1 => y_V,
        ce => ap_const_logic_1,
        dout => grp_fu_373_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv32_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state51) and ((icmp_ln1498_reg_546 = ap_const_lv1_1) or (((r_is_neg_1_reg_108 = ap_const_lv1_1) or ((tmp_12_fu_454_p3 = ap_const_lv1_1) or (ap_const_lv1_0 = and_ln155_reg_610))) or ((p_Result_2_reg_550 = ap_const_lv1_1) and (icmp_ln63_reg_542 = ap_const_lv1_0)))))) then 
                    ap_return_preg <= ap_phi_mux_agg_result_V_0_phi_fu_183_p18;
                end if; 
            end if;
        end if;
    end process;


    grp_exp_core_32_20_54_s_fu_249_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_exp_core_32_20_54_s_fu_249_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state38) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
                    grp_exp_core_32_20_54_s_fu_249_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_exp_core_32_20_54_s_fu_249_ap_ready = ap_const_logic_1)) then 
                    grp_exp_core_32_20_54_s_fu_249_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_log_75_21_s_fu_232_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_log_75_21_s_fu_232_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_logic_1 = ap_NS_fsm_state2))) then 
                    grp_log_75_21_s_fu_232_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_log_75_21_s_fu_232_ap_ready = ap_const_logic_1)) then 
                    grp_log_75_21_s_fu_232_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    agg_result_V_0_reg_177_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state51) and (((tmp_12_fu_454_p3 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln155_reg_610) and (r_is_neg_1_reg_108 = ap_const_lv1_0) and (p_Result_2_reg_550 = ap_const_lv1_0) and (icmp_ln1498_reg_546 = ap_const_lv1_0)) or ((tmp_12_fu_454_p3 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln155_reg_610) and (r_is_neg_1_reg_108 = ap_const_lv1_0) and (icmp_ln1498_reg_546 = ap_const_lv1_0) and (icmp_ln63_reg_542 = ap_const_lv1_1))))) then 
                agg_result_V_0_reg_177 <= p_Val2_6_reg_155;
            elsif (((r_is_neg_1_reg_108 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln155_fu_444_p2) and (ap_const_logic_1 = ap_CS_fsm_state50))) then 
                agg_result_V_0_reg_177 <= ap_const_lv32_80000000;
            elsif (((r_is_neg_1_reg_108 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln155_fu_444_p2) and (ap_const_logic_1 = ap_CS_fsm_state50))) then 
                agg_result_V_0_reg_177 <= ap_phi_mux_r_V_7_phi_fu_147_p4;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state51) and (((r_is_neg_1_reg_108 = ap_const_lv1_1) and (icmp_ln1499_fu_478_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln155_reg_610) and (p_Result_2_reg_550 = ap_const_lv1_0) and (icmp_ln1498_reg_546 = ap_const_lv1_0)) or ((r_is_neg_1_reg_108 = ap_const_lv1_1) and (icmp_ln1499_fu_478_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln155_reg_610) and (icmp_ln1498_reg_546 = ap_const_lv1_0) and (icmp_ln63_reg_542 = ap_const_lv1_1))))) then 
                agg_result_V_0_reg_177 <= p_Result_10_fu_490_p4;
            elsif ((((p_Result_2_fu_283_p3 = ap_const_lv1_1) and (icmp_ln1498_fu_277_p2 = ap_const_lv1_0) and (icmp_ln63_fu_267_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((icmp_ln1494_fu_349_p2 = ap_const_lv1_1) and (icmp_ln1498_1_fu_343_p2 = ap_const_lv1_0) and (icmp_ln1498_fu_277_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state51) and (((icmp_ln1499_fu_478_p2 = ap_const_lv1_1) and (r_is_neg_1_reg_108 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln155_reg_610) and (p_Result_2_reg_550 = ap_const_lv1_0) and (icmp_ln1498_reg_546 = ap_const_lv1_0)) or ((icmp_ln1499_fu_478_p2 = ap_const_lv1_1) and (r_is_neg_1_reg_108 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln155_reg_610) and (icmp_ln1498_reg_546 = ap_const_lv1_0) and (icmp_ln63_reg_542 = ap_const_lv1_1)))))) then 
                agg_result_V_0_reg_177 <= ap_const_lv32_0;
            elsif (((icmp_ln1498_1_fu_343_p2 = ap_const_lv1_1) and (icmp_ln1498_fu_277_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                agg_result_V_0_reg_177 <= ap_const_lv32_1000;
            elsif (((icmp_ln75_fu_505_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state52))) then 
                agg_result_V_0_reg_177 <= p_Result_8_fu_527_p4;
            end if; 
        end if;
    end process;

    index_assign_1_reg_132_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln134_fu_391_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
                index_assign_1_reg_132 <= j_1_fu_415_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
                index_assign_1_reg_132 <= ap_const_lv7_55;
            end if; 
        end if;
    end process;

    index_assign_2_reg_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln155_fu_444_p2) and (r_is_neg_1_reg_108 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state50))) then 
                index_assign_2_reg_166 <= ap_const_lv6_1E;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state51) and (((ap_const_lv1_1 = and_ln155_reg_610) and (tmp_12_fu_454_p3 = ap_const_lv1_0) and (r_is_neg_1_reg_108 = ap_const_lv1_0) and (p_Result_2_reg_550 = ap_const_lv1_0) and (icmp_ln1498_reg_546 = ap_const_lv1_0)) or ((ap_const_lv1_1 = and_ln155_reg_610) and (tmp_12_fu_454_p3 = ap_const_lv1_0) and (r_is_neg_1_reg_108 = ap_const_lv1_0) and (icmp_ln1498_reg_546 = ap_const_lv1_0) and (icmp_ln63_reg_542 = ap_const_lv1_1))))) then 
                index_assign_2_reg_166 <= j_2_fu_472_p2;
            end if; 
        end if;
    end process;

    index_assign_reg_221_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1494_fu_349_p2 = ap_const_lv1_0) and (icmp_ln1498_1_fu_343_p2 = ap_const_lv1_0) and (icmp_ln1498_fu_277_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                index_assign_reg_221 <= ap_const_lv5_0;
            elsif (((icmp_ln75_fu_505_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state52))) then 
                index_assign_reg_221 <= j_fu_511_p2;
            end if; 
        end if;
    end process;

    p_Val2_6_reg_155_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln155_fu_444_p2) and (r_is_neg_1_reg_108 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state50))) then 
                p_Val2_6_reg_155 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state51) and (((ap_const_lv1_1 = and_ln155_reg_610) and (tmp_12_fu_454_p3 = ap_const_lv1_0) and (r_is_neg_1_reg_108 = ap_const_lv1_0) and (p_Result_2_reg_550 = ap_const_lv1_0) and (icmp_ln1498_reg_546 = ap_const_lv1_0)) or ((ap_const_lv1_1 = and_ln155_reg_610) and (tmp_12_fu_454_p3 = ap_const_lv1_0) and (r_is_neg_1_reg_108 = ap_const_lv1_0) and (icmp_ln1498_reg_546 = ap_const_lv1_0) and (icmp_ln63_reg_542 = ap_const_lv1_1))))) then 
                p_Val2_6_reg_155 <= p_Result_11_fu_462_p4;
            end if; 
        end if;
    end process;

    p_Val2_s_reg_210_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1494_fu_349_p2 = ap_const_lv1_0) and (icmp_ln1498_1_fu_343_p2 = ap_const_lv1_0) and (icmp_ln1498_fu_277_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_Val2_s_reg_210 <= ap_const_lv32_0;
            elsif (((icmp_ln75_fu_505_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state52))) then 
                p_Val2_s_reg_210 <= p_Result_7_fu_517_p4;
            end if; 
        end if;
    end process;

    phi_ln155_reg_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln134_fu_391_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
                phi_ln155_reg_120 <= or_ln135_fu_409_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
                phi_ln155_reg_120 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    r_V_7_reg_143_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_phi_ln155_phi_fu_124_p4 = ap_const_lv1_1) and (icmp_ln134_fu_391_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
                r_V_7_reg_143 <= ap_const_lv32_0;
            elsif (((phi_ln155_reg_120 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state50))) then 
                r_V_7_reg_143 <= grp_exp_core_32_20_54_s_fu_249_ap_return;
            end if; 
        end if;
    end process;

    r_is_neg_1_reg_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_87)) then
                if (((p_Result_2_fu_283_p3 = ap_const_lv1_1) and (icmp_ln63_fu_267_p2 = ap_const_lv1_1))) then 
                    r_is_neg_1_reg_108 <= and_ln84_fu_305_p2;
                elsif ((p_Result_2_fu_283_p3 = ap_const_lv1_0)) then 
                    r_is_neg_1_reg_108 <= ap_const_lv1_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state50)) then
                and_ln155_reg_610 <= and_ln155_fu_444_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                icmp_ln1498_reg_546 <= icmp_ln1498_fu_277_p2;
                icmp_ln63_reg_542 <= icmp_ln63_fu_267_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then
                ln_x_s_V_reg_570 <= ln_x_s_V_fu_363_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1498_fu_277_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                p_Result_2_reg_550 <= p_Result_2_fu_283_p1(21 downto 21);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                r_V_reg_585 <= grp_fu_373_p2;
                tmp_reg_592 <= grp_fu_373_p2(91 downto 91);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (((p_Result_2_fu_283_p3 = ap_const_lv1_0) and (icmp_ln1498_fu_277_p2 = ap_const_lv1_0)) or ((icmp_ln1498_fu_277_p2 = ap_const_lv1_0) and (icmp_ln63_fu_267_p2 = ap_const_lv1_1))))) then
                select_ln178_reg_559 <= select_ln178_fu_335_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln63_fu_267_p2, icmp_ln63_reg_542, icmp_ln1498_fu_277_p2, icmp_ln1498_reg_546, p_Result_2_fu_283_p3, p_Result_2_reg_550, ap_CS_fsm_state37, icmp_ln134_fu_391_p2, and_ln155_reg_610, ap_CS_fsm_state51, r_is_neg_1_reg_108, tmp_12_fu_454_p3, ap_CS_fsm_state52, icmp_ln75_fu_505_p2, ap_phi_mux_phi_ln155_phi_fu_124_p4, icmp_ln1498_1_fu_343_p2, icmp_ln1494_fu_349_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((icmp_ln1494_fu_349_p2 = ap_const_lv1_0) and (icmp_ln1498_1_fu_343_p2 = ap_const_lv1_0) and (icmp_ln1498_fu_277_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state52;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and ((((icmp_ln1494_fu_349_p2 = ap_const_lv1_1) and (icmp_ln1498_fu_277_p2 = ap_const_lv1_1)) or ((icmp_ln1498_1_fu_343_p2 = ap_const_lv1_1) and (icmp_ln1498_fu_277_p2 = ap_const_lv1_1))) or ((p_Result_2_fu_283_p3 = ap_const_lv1_1) and (icmp_ln1498_fu_277_p2 = ap_const_lv1_0) and (icmp_ln63_fu_267_p2 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state51;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (((p_Result_2_fu_283_p3 = ap_const_lv1_0) and (icmp_ln1498_fu_277_p2 = ap_const_lv1_0)) or ((icmp_ln1498_fu_277_p2 = ap_const_lv1_0) and (icmp_ln63_fu_267_p2 = ap_const_lv1_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                if (((ap_phi_mux_phi_ln155_phi_fu_124_p4 = ap_const_lv1_1) and (icmp_ln134_fu_391_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then
                    ap_NS_fsm <= ap_ST_fsm_state50;
                elsif (((icmp_ln134_fu_391_p2 = ap_const_lv1_1) and (ap_phi_mux_phi_ln155_phi_fu_124_p4 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37))) then
                    ap_NS_fsm <= ap_ST_fsm_state38;
                else
                    ap_NS_fsm <= ap_ST_fsm_state37;
                end if;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state51) and ((icmp_ln1498_reg_546 = ap_const_lv1_1) or (((r_is_neg_1_reg_108 = ap_const_lv1_1) or ((tmp_12_fu_454_p3 = ap_const_lv1_1) or (ap_const_lv1_0 = and_ln155_reg_610))) or ((p_Result_2_reg_550 = ap_const_lv1_1) and (icmp_ln63_reg_542 = ap_const_lv1_0)))))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state51;
                end if;
            when ap_ST_fsm_state52 => 
                if (((icmp_ln75_fu_505_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state52))) then
                    ap_NS_fsm <= ap_ST_fsm_state51;
                else
                    ap_NS_fsm <= ap_ST_fsm_state52;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    and_ln155_fu_444_p2 <= (xor_ln155_fu_438_p2 and phi_ln155_reg_120);
    and_ln84_fu_305_p2 <= (tmp_6_fu_297_p3 and icmp_ln84_fu_291_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_NS_fsm_state2 <= ap_NS_fsm(1);
    ap_NS_fsm_state38 <= ap_NS_fsm(37);

    ap_condition_258_assign_proc : process(icmp_ln63_reg_542, icmp_ln1498_reg_546, p_Result_2_reg_550, and_ln155_reg_610, r_is_neg_1_reg_108, icmp_ln1499_fu_478_p2)
    begin
                ap_condition_258 <= (((r_is_neg_1_reg_108 = ap_const_lv1_1) and (icmp_ln1499_fu_478_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln155_reg_610) and (p_Result_2_reg_550 = ap_const_lv1_0) and (icmp_ln1498_reg_546 = ap_const_lv1_0)) or ((r_is_neg_1_reg_108 = ap_const_lv1_1) and (icmp_ln1499_fu_478_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln155_reg_610) and (icmp_ln1498_reg_546 = ap_const_lv1_0) and (icmp_ln63_reg_542 = ap_const_lv1_1)));
    end process;


    ap_condition_263_assign_proc : process(icmp_ln63_reg_542, icmp_ln1498_reg_546, p_Result_2_reg_550, and_ln155_reg_610, r_is_neg_1_reg_108, icmp_ln1499_fu_478_p2)
    begin
                ap_condition_263 <= (((icmp_ln1499_fu_478_p2 = ap_const_lv1_1) and (r_is_neg_1_reg_108 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln155_reg_610) and (p_Result_2_reg_550 = ap_const_lv1_0) and (icmp_ln1498_reg_546 = ap_const_lv1_0)) or ((icmp_ln1499_fu_478_p2 = ap_const_lv1_1) and (r_is_neg_1_reg_108 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln155_reg_610) and (icmp_ln1498_reg_546 = ap_const_lv1_0) and (icmp_ln63_reg_542 = ap_const_lv1_1)));
    end process;


    ap_condition_275_assign_proc : process(icmp_ln63_reg_542, icmp_ln1498_reg_546, p_Result_2_reg_550, and_ln155_reg_610, r_is_neg_1_reg_108, tmp_12_fu_454_p3)
    begin
                ap_condition_275 <= (((tmp_12_fu_454_p3 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln155_reg_610) and (r_is_neg_1_reg_108 = ap_const_lv1_0) and (p_Result_2_reg_550 = ap_const_lv1_0) and (icmp_ln1498_reg_546 = ap_const_lv1_0)) or ((tmp_12_fu_454_p3 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln155_reg_610) and (r_is_neg_1_reg_108 = ap_const_lv1_0) and (icmp_ln1498_reg_546 = ap_const_lv1_0) and (icmp_ln63_reg_542 = ap_const_lv1_1)));
    end process;


    ap_condition_87_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln1498_fu_277_p2)
    begin
                ap_condition_87 <= ((icmp_ln1498_fu_277_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln63_reg_542, icmp_ln1498_reg_546, p_Result_2_reg_550, and_ln155_reg_610, ap_CS_fsm_state51, r_is_neg_1_reg_108, tmp_12_fu_454_p3)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state51) and ((icmp_ln1498_reg_546 = ap_const_lv1_1) or (((r_is_neg_1_reg_108 = ap_const_lv1_1) or ((tmp_12_fu_454_p3 = ap_const_lv1_1) or (ap_const_lv1_0 = and_ln155_reg_610))) or ((p_Result_2_reg_550 = ap_const_lv1_1) and (icmp_ln63_reg_542 = ap_const_lv1_0))))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_agg_result_V_0_phi_fu_183_p18_assign_proc : process(ap_CS_fsm_state51, p_Val2_6_reg_155, agg_result_V_0_reg_177, p_Result_10_fu_490_p4, ap_condition_258, ap_condition_263, ap_condition_275)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then
            if ((ap_const_boolean_1 = ap_condition_275)) then 
                ap_phi_mux_agg_result_V_0_phi_fu_183_p18 <= p_Val2_6_reg_155;
            elsif ((ap_const_boolean_1 = ap_condition_263)) then 
                ap_phi_mux_agg_result_V_0_phi_fu_183_p18 <= ap_const_lv32_0;
            elsif ((ap_const_boolean_1 = ap_condition_258)) then 
                ap_phi_mux_agg_result_V_0_phi_fu_183_p18 <= p_Result_10_fu_490_p4;
            else 
                ap_phi_mux_agg_result_V_0_phi_fu_183_p18 <= agg_result_V_0_reg_177;
            end if;
        else 
            ap_phi_mux_agg_result_V_0_phi_fu_183_p18 <= agg_result_V_0_reg_177;
        end if; 
    end process;

    ap_phi_mux_phi_ln155_phi_fu_124_p4 <= phi_ln155_reg_120;

    ap_phi_mux_r_V_7_phi_fu_147_p4_assign_proc : process(ap_CS_fsm_state50, grp_exp_core_32_20_54_s_fu_249_ap_return, phi_ln155_reg_120, r_V_7_reg_143)
    begin
        if (((phi_ln155_reg_120 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            ap_phi_mux_r_V_7_phi_fu_147_p4 <= grp_exp_core_32_20_54_s_fu_249_ap_return;
        else 
            ap_phi_mux_r_V_7_phi_fu_147_p4 <= r_V_7_reg_143;
        end if; 
    end process;


    ap_ready_assign_proc : process(icmp_ln63_reg_542, icmp_ln1498_reg_546, p_Result_2_reg_550, and_ln155_reg_610, ap_CS_fsm_state51, r_is_neg_1_reg_108, tmp_12_fu_454_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state51) and ((icmp_ln1498_reg_546 = ap_const_lv1_1) or (((r_is_neg_1_reg_108 = ap_const_lv1_1) or ((tmp_12_fu_454_p3 = ap_const_lv1_1) or (ap_const_lv1_0 = and_ln155_reg_610))) or ((p_Result_2_reg_550 = ap_const_lv1_1) and (icmp_ln63_reg_542 = ap_const_lv1_0)))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(icmp_ln63_reg_542, icmp_ln1498_reg_546, p_Result_2_reg_550, and_ln155_reg_610, ap_CS_fsm_state51, r_is_neg_1_reg_108, tmp_12_fu_454_p3, ap_phi_mux_agg_result_V_0_phi_fu_183_p18, ap_return_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state51) and ((icmp_ln1498_reg_546 = ap_const_lv1_1) or (((r_is_neg_1_reg_108 = ap_const_lv1_1) or ((tmp_12_fu_454_p3 = ap_const_lv1_1) or (ap_const_lv1_0 = and_ln155_reg_610))) or ((p_Result_2_reg_550 = ap_const_lv1_1) and (icmp_ln63_reg_542 = ap_const_lv1_0)))))) then 
            ap_return <= ap_phi_mux_agg_result_V_0_phi_fu_183_p18;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    grp_exp_core_32_20_54_s_fu_249_ap_start <= grp_exp_core_32_20_54_s_fu_249_ap_start_reg;
    grp_exp_core_32_20_54_s_fu_249_x_V <= r_V_reg_585(85 downto 32);
    grp_log_75_21_s_fu_232_ap_start <= grp_log_75_21_s_fu_232_ap_start_reg;
    grp_log_75_21_s_fu_232_x_V <= (select_ln178_reg_559 & ap_const_lv42_0);
    icmp_ln134_fu_391_p2 <= "1" when (index_assign_1_reg_132 = ap_const_lv7_5B) else "0";
    icmp_ln1494_fu_349_p0 <= y_V;
    icmp_ln1494_fu_349_p2 <= "1" when (signed(icmp_ln1494_fu_349_p0) > signed(ap_const_lv32_0)) else "0";
    icmp_ln1498_1_fu_343_p0 <= y_V;
    icmp_ln1498_1_fu_343_p2 <= "1" when (icmp_ln1498_1_fu_343_p0 = ap_const_lv32_0) else "0";
    icmp_ln1498_fu_277_p2 <= "1" when (trunc_ln1498_fu_273_p1 = ap_const_lv22_0) else "0";
    icmp_ln1499_fu_478_p2 <= "1" when (r_V_7_reg_143 = ap_const_lv32_0) else "0";
    icmp_ln63_fu_267_p2 <= "1" when (trunc_ln612_fu_263_p1 = ap_const_lv12_0) else "0";
    icmp_ln75_fu_505_p2 <= "1" when (index_assign_reg_221 = ap_const_lv5_1F) else "0";
    icmp_ln84_fu_291_p0 <= y_V;
    icmp_ln84_fu_291_p2 <= "0" when (icmp_ln84_fu_291_p0 = ap_const_lv32_0) else "1";
    j_1_fu_415_p2 <= std_logic_vector(unsigned(index_assign_1_reg_132) + unsigned(ap_const_lv7_1));
    j_2_fu_472_p2 <= std_logic_vector(signed(index_assign_2_reg_166) + signed(ap_const_lv6_3F));
    j_fu_511_p2 <= std_logic_vector(unsigned(index_assign_reg_221) + unsigned(ap_const_lv5_1));
    ln_x_s_V_fu_363_p1 <= grp_log_75_21_s_fu_232_ap_return(60 - 1 downto 0);
    or_ln135_fu_409_p2 <= (xor_ln135_fu_404_p2 or phi_ln155_reg_120);
    
    p_Result_10_fu_490_p4_proc : process(r_V_8_fu_484_p2)
    begin
        p_Result_10_fu_490_p4 <= r_V_8_fu_484_p2;
        p_Result_10_fu_490_p4(31) <= ap_const_lv1_1(0);
    end process;

    
    p_Result_11_fu_462_p4_proc : process(p_Val2_6_reg_155, sext_ln177_fu_450_p1)
    begin
        p_Result_11_fu_462_p4 <= p_Val2_6_reg_155;
        if to_integer(unsigned(sext_ln177_fu_450_p1)) >= p_Val2_6_reg_155'low and to_integer(unsigned(sext_ln177_fu_450_p1)) <= p_Val2_6_reg_155'high then
            p_Result_11_fu_462_p4(to_integer(unsigned(sext_ln177_fu_450_p1))) <= ap_const_lv1_1(0);
        end if;
    end process;

    p_Result_2_fu_283_p1 <= x_V;
    p_Result_2_fu_283_p3 <= p_Result_2_fu_283_p1(21 downto 21);
    
    p_Result_7_fu_517_p4_proc : process(p_Val2_s_reg_210, zext_ln75_fu_501_p1)
    begin
        p_Result_7_fu_517_p4 <= p_Val2_s_reg_210;
        if to_integer(unsigned(zext_ln75_fu_501_p1)) >= p_Val2_s_reg_210'low and to_integer(unsigned(zext_ln75_fu_501_p1)) <= p_Val2_s_reg_210'high then
            p_Result_7_fu_517_p4(to_integer(unsigned(zext_ln75_fu_501_p1))) <= ap_const_lv1_1(0);
        end if;
    end process;

    
    p_Result_8_fu_527_p4_proc : process(p_Val2_s_reg_210)
    begin
        p_Result_8_fu_527_p4 <= p_Val2_s_reg_210;
        p_Result_8_fu_527_p4(31) <= ap_const_lv1_0(0);
    end process;

    
    p_Result_9_fu_325_p4_proc : process(sext_ln703_fu_321_p1)
    begin
        p_Result_9_fu_325_p4 <= sext_ln703_fu_321_p1;
        p_Result_9_fu_325_p4(32) <= ap_const_lv1_0(0);
    end process;

    p_Result_s_fu_397_p3 <= r_V_reg_585(to_integer(unsigned(zext_ln134_fu_387_p1)) downto to_integer(unsigned(zext_ln134_fu_387_p1))) when (to_integer(unsigned(zext_ln134_fu_387_p1))>= 0 and to_integer(unsigned(zext_ln134_fu_387_p1))<=91) else "-";
    r_V_8_fu_484_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(r_V_7_reg_143));
    select_ln178_fu_335_p3 <= 
        p_Result_9_fu_325_p4 when (p_Result_2_fu_283_p3(0) = '1') else 
        x_e_1_V_fu_311_p1;
        sext_ln177_fu_450_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(index_assign_2_reg_166),32));

        sext_ln703_fu_321_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(xs_V_1_fu_315_p2),33));

    tmp_10_fu_431_p3 <= r_V_reg_585(91 downto 91);
    tmp_12_fu_454_p3 <= index_assign_2_reg_166(5 downto 5);
    tmp_6_fu_297_p1 <= y_V;
    tmp_6_fu_297_p3 <= tmp_6_fu_297_p1(12 downto 12);
    trunc_ln1498_fu_273_p0 <= x_V;
    trunc_ln1498_fu_273_p1 <= trunc_ln1498_fu_273_p0(22 - 1 downto 0);
    trunc_ln612_fu_263_p0 <= y_V;
    trunc_ln612_fu_263_p1 <= trunc_ln612_fu_263_p0(12 - 1 downto 0);
    x_e_1_V_fu_311_p0 <= x_V;
        x_e_1_V_fu_311_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_e_1_V_fu_311_p0),33));

    xor_ln135_fu_404_p2 <= (tmp_reg_592 xor p_Result_s_fu_397_p3);
    xor_ln155_fu_438_p2 <= (tmp_10_fu_431_p3 xor ap_const_lv1_1);
    xs_V_1_fu_315_p2 <= std_logic_vector(unsigned(ap_const_lv22_0) - unsigned(trunc_ln1498_fu_273_p1));
    zext_ln134_fu_387_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_assign_1_reg_132),32));
    zext_ln75_fu_501_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_assign_reg_221),32));
end behav;
