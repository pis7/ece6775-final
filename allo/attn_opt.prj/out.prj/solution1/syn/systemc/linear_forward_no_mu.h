// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _linear_forward_no_mu_HH_
#define _linear_forward_no_mu_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "attention_sdiv_44yd2.h"

namespace ap_rtl {

struct linear_forward_no_mu : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<11> > v77_0_address0;
    sc_out< sc_logic > v77_0_ce0;
    sc_in< sc_lv<8> > v77_0_q0;
    sc_in< sc_lv<32> > v78_0_V_read;
    sc_out< sc_lv<20> > v79_address0;
    sc_out< sc_logic > v79_ce0;
    sc_in< sc_lv<8> > v79_q0;
    sc_in< sc_lv<32> > v80_V;
    sc_out< sc_lv<11> > v81_V_address0;
    sc_out< sc_logic > v81_V_ce0;
    sc_out< sc_logic > v81_V_we0;
    sc_out< sc_lv<32> > v81_V_d0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    linear_forward_no_mu(sc_module_name name);
    SC_HAS_PROCESS(linear_forward_no_mu);

    ~linear_forward_no_mu();

    sc_trace_file* mVcdFile;

    attention_sdiv_44yd2<1,48,44,32,32>* attention_sdiv_44yd2_U46;
    sc_signal< sc_lv<51> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<11> > indvar_flatten_reg_145;
    sc_signal< sc_lv<9> > k_0_0_reg_156;
    sc_signal< sc_lv<3> > val_assign_0_reg_167;
    sc_signal< sc_lv<32> > v128_V_0_reg_178;
    sc_signal< sc_lv<23> > v126_V_0_reg_189;
    sc_signal< sc_lv<44> > sext_ln1148_fu_224_p1;
    sc_signal< sc_lv<44> > sext_ln1148_reg_516;
    sc_signal< sc_lv<1> > icmp_ln132_fu_228_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<11> > add_ln132_fu_234_p2;
    sc_signal< sc_lv<11> > add_ln132_reg_525;
    sc_signal< sc_lv<21> > zext_ln203_fu_245_p1;
    sc_signal< sc_lv<21> > zext_ln203_reg_530;
    sc_signal< sc_lv<11> > v81_V_addr_reg_535;
    sc_signal< sc_lv<1> > icmp_ln135_fu_279_p2;
    sc_signal< sc_lv<1> > icmp_ln135_reg_540;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln135_reg_540_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln135_reg_540_pp0_iter2_reg;
    sc_signal< sc_lv<11> > add_ln135_2_fu_285_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > icmp_ln141_fu_297_p2;
    sc_signal< sc_lv<1> > icmp_ln141_reg_549;
    sc_signal< sc_lv<1> > icmp_ln141_reg_549_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln141_reg_549_pp0_iter2_reg;
    sc_signal< sc_lv<3> > select_ln135_1_fu_303_p3;
    sc_signal< sc_lv<3> > select_ln135_1_reg_555;
    sc_signal< sc_lv<3> > select_ln135_1_reg_555_pp0_iter1_reg;
    sc_signal< sc_lv<21> > add_ln135_1_fu_349_p2;
    sc_signal< sc_lv<21> > add_ln135_1_reg_561;
    sc_signal< sc_lv<9> > select_ln135_3_fu_354_p3;
    sc_signal< sc_lv<9> > select_ln135_3_reg_566;
    sc_signal< sc_lv<3> > add_ln141_fu_362_p2;
    sc_signal< sc_lv<2> > trunc_ln165_fu_408_p1;
    sc_signal< sc_lv<2> > trunc_ln165_reg_587;
    sc_signal< sc_lv<8> > v77_0_load_reg_593;
    sc_signal< sc_lv<32> > add_ln703_fu_416_p2;
    sc_signal< sc_lv<32> > add_ln703_reg_598;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<32> > select_ln135_4_fu_429_p3;
    sc_signal< sc_lv<23> > add_ln703_3_fu_493_p2;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<11> > j2_0_0_reg_134;
    sc_signal< sc_logic > ap_CS_fsm_state54;
    sc_signal< sc_lv<9> > ap_phi_mux_k_0_0_phi_fu_160_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > zext_ln136_fu_240_p1;
    sc_signal< sc_lv<64> > sext_ln135_fu_368_p1;
    sc_signal< sc_lv<64> > zext_ln185_fu_388_p1;
    sc_signal< sc_lv<32> > mul_ln1118_fu_208_p0;
    sc_signal< sc_lv<32> > mul_ln1118_fu_208_p1;
    sc_signal< sc_lv<44> > mul_ln1118_fu_208_p2;
    sc_signal< sc_lv<32> > trunc_ln_fu_214_p4;
    sc_signal< sc_lv<20> > tmp_s_fu_249_p3;
    sc_signal< sc_lv<18> > tmp_14_fu_261_p3;
    sc_signal< sc_lv<21> > zext_ln136_1_fu_257_p1;
    sc_signal< sc_lv<21> > zext_ln136_2_fu_269_p1;
    sc_signal< sc_lv<9> > add_ln135_fu_291_p2;
    sc_signal< sc_lv<20> > tmp_15_fu_311_p3;
    sc_signal< sc_lv<18> > tmp_16_fu_323_p3;
    sc_signal< sc_lv<21> > zext_ln136_3_fu_319_p1;
    sc_signal< sc_lv<21> > zext_ln136_4_fu_331_p1;
    sc_signal< sc_lv<21> > sub_ln136_1_fu_335_p2;
    sc_signal< sc_lv<21> > sub_ln136_fu_273_p2;
    sc_signal< sc_lv<21> > select_ln135_2_fu_341_p3;
    sc_signal< sc_lv<11> > shl_ln544_mid2_fu_372_p3;
    sc_signal< sc_lv<11> > zext_ln141_fu_379_p1;
    sc_signal< sc_lv<11> > add_ln148_fu_382_p2;
    sc_signal< sc_lv<3> > shl_ln160_fu_393_p2;
    sc_signal< sc_lv<8> > zext_ln160_fu_398_p1;
    sc_signal< sc_lv<8> > ashr_ln162_fu_402_p2;
    sc_signal< sc_lv<32> > sext_ln141_fu_412_p1;
    sc_signal< sc_lv<1> > icmp_ln172_fu_436_p2;
    sc_signal< sc_lv<1> > icmp_ln178_fu_441_p2;
    sc_signal< sc_lv<1> > or_ln172_fu_454_p2;
    sc_signal< sc_lv<2> > select_ln172_fu_446_p3;
    sc_signal< sc_lv<2> > select_ln172_1_fu_460_p3;
    sc_signal< sc_lv<2> > mul_ln728_fu_475_p0;
    sc_signal< sc_lv<8> > mul_ln728_fu_475_p1;
    sc_signal< sc_lv<9> > mul_ln728_fu_475_p2;
    sc_signal< sc_lv<21> > shl_ln728_1_fu_481_p3;
    sc_signal< sc_lv<23> > sext_ln728_2_fu_489_p1;
    sc_signal< sc_lv<23> > select_ln135_fu_422_p3;
    sc_signal< sc_lv<44> > grp_fu_506_p0;
    sc_signal< sc_lv<32> > grp_fu_506_p1;
    sc_signal< sc_lv<32> > grp_fu_506_p2;
    sc_signal< sc_logic > grp_fu_506_ap_start;
    sc_signal< sc_logic > grp_fu_506_ap_done;
    sc_signal< sc_lv<51> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<51> ap_ST_fsm_state1;
    static const sc_lv<51> ap_ST_fsm_state2;
    static const sc_lv<51> ap_ST_fsm_pp0_stage0;
    static const sc_lv<51> ap_ST_fsm_state7;
    static const sc_lv<51> ap_ST_fsm_state8;
    static const sc_lv<51> ap_ST_fsm_state9;
    static const sc_lv<51> ap_ST_fsm_state10;
    static const sc_lv<51> ap_ST_fsm_state11;
    static const sc_lv<51> ap_ST_fsm_state12;
    static const sc_lv<51> ap_ST_fsm_state13;
    static const sc_lv<51> ap_ST_fsm_state14;
    static const sc_lv<51> ap_ST_fsm_state15;
    static const sc_lv<51> ap_ST_fsm_state16;
    static const sc_lv<51> ap_ST_fsm_state17;
    static const sc_lv<51> ap_ST_fsm_state18;
    static const sc_lv<51> ap_ST_fsm_state19;
    static const sc_lv<51> ap_ST_fsm_state20;
    static const sc_lv<51> ap_ST_fsm_state21;
    static const sc_lv<51> ap_ST_fsm_state22;
    static const sc_lv<51> ap_ST_fsm_state23;
    static const sc_lv<51> ap_ST_fsm_state24;
    static const sc_lv<51> ap_ST_fsm_state25;
    static const sc_lv<51> ap_ST_fsm_state26;
    static const sc_lv<51> ap_ST_fsm_state27;
    static const sc_lv<51> ap_ST_fsm_state28;
    static const sc_lv<51> ap_ST_fsm_state29;
    static const sc_lv<51> ap_ST_fsm_state30;
    static const sc_lv<51> ap_ST_fsm_state31;
    static const sc_lv<51> ap_ST_fsm_state32;
    static const sc_lv<51> ap_ST_fsm_state33;
    static const sc_lv<51> ap_ST_fsm_state34;
    static const sc_lv<51> ap_ST_fsm_state35;
    static const sc_lv<51> ap_ST_fsm_state36;
    static const sc_lv<51> ap_ST_fsm_state37;
    static const sc_lv<51> ap_ST_fsm_state38;
    static const sc_lv<51> ap_ST_fsm_state39;
    static const sc_lv<51> ap_ST_fsm_state40;
    static const sc_lv<51> ap_ST_fsm_state41;
    static const sc_lv<51> ap_ST_fsm_state42;
    static const sc_lv<51> ap_ST_fsm_state43;
    static const sc_lv<51> ap_ST_fsm_state44;
    static const sc_lv<51> ap_ST_fsm_state45;
    static const sc_lv<51> ap_ST_fsm_state46;
    static const sc_lv<51> ap_ST_fsm_state47;
    static const sc_lv<51> ap_ST_fsm_state48;
    static const sc_lv<51> ap_ST_fsm_state49;
    static const sc_lv<51> ap_ST_fsm_state50;
    static const sc_lv<51> ap_ST_fsm_state51;
    static const sc_lv<51> ap_ST_fsm_state52;
    static const sc_lv<51> ap_ST_fsm_state53;
    static const sc_lv<51> ap_ST_fsm_state54;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<32> ap_const_lv32_32;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_2B;
    static const sc_lv<11> ap_const_lv11_600;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<12> ap_const_lv12_0;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln132_fu_234_p2();
    void thread_add_ln135_1_fu_349_p2();
    void thread_add_ln135_2_fu_285_p2();
    void thread_add_ln135_fu_291_p2();
    void thread_add_ln141_fu_362_p2();
    void thread_add_ln148_fu_382_p2();
    void thread_add_ln703_3_fu_493_p2();
    void thread_add_ln703_fu_416_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state54();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage0_iter2();
    void thread_ap_block_state6_pp0_stage0_iter3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_k_0_0_phi_fu_160_p4();
    void thread_ap_ready();
    void thread_ashr_ln162_fu_402_p2();
    void thread_grp_fu_506_ap_start();
    void thread_grp_fu_506_p0();
    void thread_grp_fu_506_p1();
    void thread_icmp_ln132_fu_228_p2();
    void thread_icmp_ln135_fu_279_p2();
    void thread_icmp_ln141_fu_297_p2();
    void thread_icmp_ln172_fu_436_p2();
    void thread_icmp_ln178_fu_441_p2();
    void thread_mul_ln1118_fu_208_p0();
    void thread_mul_ln1118_fu_208_p1();
    void thread_mul_ln1118_fu_208_p2();
    void thread_mul_ln728_fu_475_p0();
    void thread_mul_ln728_fu_475_p1();
    void thread_mul_ln728_fu_475_p2();
    void thread_or_ln172_fu_454_p2();
    void thread_select_ln135_1_fu_303_p3();
    void thread_select_ln135_2_fu_341_p3();
    void thread_select_ln135_3_fu_354_p3();
    void thread_select_ln135_4_fu_429_p3();
    void thread_select_ln135_fu_422_p3();
    void thread_select_ln172_1_fu_460_p3();
    void thread_select_ln172_fu_446_p3();
    void thread_sext_ln1148_fu_224_p1();
    void thread_sext_ln135_fu_368_p1();
    void thread_sext_ln141_fu_412_p1();
    void thread_sext_ln728_2_fu_489_p1();
    void thread_shl_ln160_fu_393_p2();
    void thread_shl_ln544_mid2_fu_372_p3();
    void thread_shl_ln728_1_fu_481_p3();
    void thread_sub_ln136_1_fu_335_p2();
    void thread_sub_ln136_fu_273_p2();
    void thread_tmp_14_fu_261_p3();
    void thread_tmp_15_fu_311_p3();
    void thread_tmp_16_fu_323_p3();
    void thread_tmp_s_fu_249_p3();
    void thread_trunc_ln165_fu_408_p1();
    void thread_trunc_ln_fu_214_p4();
    void thread_v77_0_address0();
    void thread_v77_0_ce0();
    void thread_v79_address0();
    void thread_v79_ce0();
    void thread_v81_V_address0();
    void thread_v81_V_ce0();
    void thread_v81_V_d0();
    void thread_v81_V_we0();
    void thread_zext_ln136_1_fu_257_p1();
    void thread_zext_ln136_2_fu_269_p1();
    void thread_zext_ln136_3_fu_319_p1();
    void thread_zext_ln136_4_fu_331_p1();
    void thread_zext_ln136_fu_240_p1();
    void thread_zext_ln141_fu_379_p1();
    void thread_zext_ln160_fu_398_p1();
    void thread_zext_ln185_fu_388_p1();
    void thread_zext_ln203_fu_245_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
