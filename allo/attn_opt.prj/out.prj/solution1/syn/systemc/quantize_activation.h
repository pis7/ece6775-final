// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _quantize_activation_HH_
#define _quantize_activation_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "attention_udiv_32xdS.h"

namespace ap_rtl {

struct quantize_activation : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<11> > v22_0_V_address0;
    sc_out< sc_logic > v22_0_V_ce0;
    sc_in< sc_lv<32> > v22_0_V_q0;
    sc_out< sc_lv<11> > v24_0_address0;
    sc_out< sc_logic > v24_0_ce0;
    sc_out< sc_logic > v24_0_we0;
    sc_out< sc_lv<8> > v24_0_d0;
    sc_out< sc_lv<32> > ap_return;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_lv<32> > ap_var_for_const0;


    // Module declarations
    quantize_activation(sc_module_name name);
    SC_HAS_PROCESS(quantize_activation);

    ~quantize_activation();

    sc_trace_file* mVcdFile;

    attention_udiv_32xdS<1,36,32,32,32>* attention_udiv_32xdS_U42;
    sc_signal< sc_lv<44> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > reg_140;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state41;
    sc_signal< sc_lv<11> > add_ln70_fu_150_p2;
    sc_signal< sc_lv<11> > add_ln70_reg_380;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln70_fu_144_p2;
    sc_signal< sc_lv<32> > select_ln80_fu_215_p3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > grp_fu_161_p2;
    sc_signal< sc_lv<32> > udiv_ln1148_reg_395;
    sc_signal< sc_logic > ap_CS_fsm_state39;
    sc_signal< sc_lv<44> > zext_ln97_fu_223_p1;
    sc_signal< sc_lv<44> > zext_ln97_reg_399;
    sc_signal< sc_lv<11> > add_ln97_fu_233_p2;
    sc_signal< sc_lv<11> > add_ln97_reg_407;
    sc_signal< sc_logic > ap_CS_fsm_state40;
    sc_signal< sc_lv<64> > zext_ln98_fu_239_p1;
    sc_signal< sc_lv<64> > zext_ln98_reg_412;
    sc_signal< sc_lv<1> > icmp_ln97_fu_227_p2;
    sc_signal< sc_lv<32> > trunc_ln708_3_reg_422;
    sc_signal< sc_logic > ap_CS_fsm_state42;
    sc_signal< sc_lv<20> > select_ln850_fu_323_p3;
    sc_signal< sc_lv<20> > select_ln850_reg_428;
    sc_signal< sc_logic > ap_CS_fsm_state43;
    sc_signal< sc_lv<13> > tmp_5_reg_434;
    sc_signal< sc_lv<32> > v45_V_0_reg_106;
    sc_signal< sc_lv<11> > j_0_0_reg_118;
    sc_signal< sc_lv<11> > j1_0_0_reg_129;
    sc_signal< sc_logic > ap_CS_fsm_state44;
    sc_signal< sc_lv<64> > zext_ln71_fu_156_p1;
    sc_signal< sc_lv<44> > shl_ln_fu_173_p3;
    sc_signal< sc_lv<45> > zext_ln1118_fu_181_p1;
    sc_signal< sc_lv<45> > sub_ln1118_fu_185_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_fu_167_p2;
    sc_signal< sc_lv<32> > trunc_ln_fu_191_p4;
    sc_signal< sc_lv<32> > select_ln74_fu_201_p3;
    sc_signal< sc_lv<1> > icmp_ln1495_fu_209_p2;
    sc_signal< sc_lv<32> > mul_ln1118_fu_248_p0;
    sc_signal< sc_lv<32> > mul_ln1118_fu_248_p1;
    sc_signal< sc_lv<44> > mul_ln1118_fu_248_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_1_fu_263_p2;
    sc_signal< sc_lv<32> > select_ln104_fu_268_p3;
    sc_signal< sc_lv<32> > add_ln104_fu_276_p2;
    sc_signal< sc_lv<12> > trunc_ln851_fu_299_p1;
    sc_signal< sc_lv<20> > p_Result_s_fu_281_p4;
    sc_signal< sc_lv<1> > icmp_ln851_fu_303_p2;
    sc_signal< sc_lv<20> > add_ln700_fu_309_p2;
    sc_signal< sc_lv<1> > tmp_4_fu_291_p3;
    sc_signal< sc_lv<20> > select_ln851_fu_315_p3;
    sc_signal< sc_lv<1> > icmp_ln110_fu_341_p2;
    sc_signal< sc_lv<1> > icmp_ln112_fu_346_p2;
    sc_signal< sc_lv<1> > or_ln115_fu_362_p2;
    sc_signal< sc_lv<8> > select_ln115_fu_354_p3;
    sc_signal< sc_lv<8> > trunc_ln115_fu_351_p1;
    sc_signal< sc_logic > grp_fu_161_ap_start;
    sc_signal< sc_logic > grp_fu_161_ap_done;
    sc_signal< sc_lv<44> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<44> ap_ST_fsm_state1;
    static const sc_lv<44> ap_ST_fsm_state2;
    static const sc_lv<44> ap_ST_fsm_state3;
    static const sc_lv<44> ap_ST_fsm_state4;
    static const sc_lv<44> ap_ST_fsm_state5;
    static const sc_lv<44> ap_ST_fsm_state6;
    static const sc_lv<44> ap_ST_fsm_state7;
    static const sc_lv<44> ap_ST_fsm_state8;
    static const sc_lv<44> ap_ST_fsm_state9;
    static const sc_lv<44> ap_ST_fsm_state10;
    static const sc_lv<44> ap_ST_fsm_state11;
    static const sc_lv<44> ap_ST_fsm_state12;
    static const sc_lv<44> ap_ST_fsm_state13;
    static const sc_lv<44> ap_ST_fsm_state14;
    static const sc_lv<44> ap_ST_fsm_state15;
    static const sc_lv<44> ap_ST_fsm_state16;
    static const sc_lv<44> ap_ST_fsm_state17;
    static const sc_lv<44> ap_ST_fsm_state18;
    static const sc_lv<44> ap_ST_fsm_state19;
    static const sc_lv<44> ap_ST_fsm_state20;
    static const sc_lv<44> ap_ST_fsm_state21;
    static const sc_lv<44> ap_ST_fsm_state22;
    static const sc_lv<44> ap_ST_fsm_state23;
    static const sc_lv<44> ap_ST_fsm_state24;
    static const sc_lv<44> ap_ST_fsm_state25;
    static const sc_lv<44> ap_ST_fsm_state26;
    static const sc_lv<44> ap_ST_fsm_state27;
    static const sc_lv<44> ap_ST_fsm_state28;
    static const sc_lv<44> ap_ST_fsm_state29;
    static const sc_lv<44> ap_ST_fsm_state30;
    static const sc_lv<44> ap_ST_fsm_state31;
    static const sc_lv<44> ap_ST_fsm_state32;
    static const sc_lv<44> ap_ST_fsm_state33;
    static const sc_lv<44> ap_ST_fsm_state34;
    static const sc_lv<44> ap_ST_fsm_state35;
    static const sc_lv<44> ap_ST_fsm_state36;
    static const sc_lv<44> ap_ST_fsm_state37;
    static const sc_lv<44> ap_ST_fsm_state38;
    static const sc_lv<44> ap_ST_fsm_state39;
    static const sc_lv<44> ap_ST_fsm_state40;
    static const sc_lv<44> ap_ST_fsm_state41;
    static const sc_lv<44> ap_ST_fsm_state42;
    static const sc_lv<44> ap_ST_fsm_state43;
    static const sc_lv<44> ap_ST_fsm_state44;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_28;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_26;
    static const sc_lv<32> ap_const_lv32_27;
    static const sc_lv<32> ap_const_lv32_29;
    static const sc_lv<32> ap_const_lv32_2A;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<32> ap_const_lv32_2B;
    static const sc_lv<11> ap_const_lv11_600;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<32> ap_const_lv32_7F000000;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<45> ap_const_lv45_0;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_800;
    static const sc_lv<32> ap_const_lv32_FFFFF800;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<20> ap_const_lv20_1;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<20> ap_const_lv20_FFF80;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<8> ap_const_lv8_80;
    static const sc_lv<8> ap_const_lv8_7F;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln104_fu_276_p2();
    void thread_add_ln700_fu_309_p2();
    void thread_add_ln70_fu_150_p2();
    void thread_add_ln97_fu_233_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state39();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state40();
    void thread_ap_CS_fsm_state41();
    void thread_ap_CS_fsm_state42();
    void thread_ap_CS_fsm_state43();
    void thread_ap_CS_fsm_state44();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_grp_fu_161_ap_start();
    void thread_icmp_ln110_fu_341_p2();
    void thread_icmp_ln112_fu_346_p2();
    void thread_icmp_ln1494_1_fu_263_p2();
    void thread_icmp_ln1494_fu_167_p2();
    void thread_icmp_ln1495_fu_209_p2();
    void thread_icmp_ln70_fu_144_p2();
    void thread_icmp_ln851_fu_303_p2();
    void thread_icmp_ln97_fu_227_p2();
    void thread_mul_ln1118_fu_248_p0();
    void thread_mul_ln1118_fu_248_p1();
    void thread_mul_ln1118_fu_248_p2();
    void thread_or_ln115_fu_362_p2();
    void thread_p_Result_s_fu_281_p4();
    void thread_select_ln104_fu_268_p3();
    void thread_select_ln115_fu_354_p3();
    void thread_select_ln74_fu_201_p3();
    void thread_select_ln80_fu_215_p3();
    void thread_select_ln850_fu_323_p3();
    void thread_select_ln851_fu_315_p3();
    void thread_shl_ln_fu_173_p3();
    void thread_sub_ln1118_fu_185_p2();
    void thread_tmp_4_fu_291_p3();
    void thread_trunc_ln115_fu_351_p1();
    void thread_trunc_ln851_fu_299_p1();
    void thread_trunc_ln_fu_191_p4();
    void thread_v22_0_V_address0();
    void thread_v22_0_V_ce0();
    void thread_v24_0_address0();
    void thread_v24_0_ce0();
    void thread_v24_0_d0();
    void thread_v24_0_we0();
    void thread_zext_ln1118_fu_181_p1();
    void thread_zext_ln71_fu_156_p1();
    void thread_zext_ln97_fu_223_p1();
    void thread_zext_ln98_fu_239_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
