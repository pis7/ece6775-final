-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity attention is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    v252_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    v252_V_ce0 : OUT STD_LOGIC;
    v252_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v253_address0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    v253_ce0 : OUT STD_LOGIC;
    v253_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    v253_address1 : OUT STD_LOGIC_VECTOR (19 downto 0);
    v253_ce1 : OUT STD_LOGIC;
    v253_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    v254_V : IN STD_LOGIC_VECTOR (31 downto 0);
    v255_address0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    v255_ce0 : OUT STD_LOGIC;
    v255_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    v255_address1 : OUT STD_LOGIC_VECTOR (19 downto 0);
    v255_ce1 : OUT STD_LOGIC;
    v255_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    v256_V : IN STD_LOGIC_VECTOR (31 downto 0);
    v257_address0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    v257_ce0 : OUT STD_LOGIC;
    v257_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    v257_address1 : OUT STD_LOGIC_VECTOR (19 downto 0);
    v257_ce1 : OUT STD_LOGIC;
    v257_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    v258_V : IN STD_LOGIC_VECTOR (31 downto 0);
    v259_address0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    v259_ce0 : OUT STD_LOGIC;
    v259_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    v259_address1 : OUT STD_LOGIC_VECTOR (19 downto 0);
    v259_ce1 : OUT STD_LOGIC;
    v259_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    v260_V : IN STD_LOGIC_VECTOR (31 downto 0);
    v261_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v261_V_ce0 : OUT STD_LOGIC;
    v261_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v262_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    v262_V_ce0 : OUT STD_LOGIC;
    v262_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v263_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    v263_V_ce0 : OUT STD_LOGIC;
    v263_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v264_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    v264_V_ce0 : OUT STD_LOGIC;
    v264_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v265_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    v265_V_ce0 : OUT STD_LOGIC;
    v265_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v266_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    v266_V_ce0 : OUT STD_LOGIC;
    v266_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    v267 : IN STD_LOGIC_VECTOR (31 downto 0);
    v268_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    v268_V_ce0 : OUT STD_LOGIC;
    v268_V_we0 : OUT STD_LOGIC;
    v268_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of attention is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "attention,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=1427133,HLS_SYN_TPT=none,HLS_SYN_MEM=218,HLS_SYN_DSP=166,HLS_SYN_FF=42301,HLS_SYN_LUT=150585,HLS_VERSION=2019_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (54 downto 0) := "0000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (54 downto 0) := "0000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (54 downto 0) := "0000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (54 downto 0) := "0000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (54 downto 0) := "0000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (54 downto 0) := "0000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (54 downto 0) := "0001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (54 downto 0) := "0010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (54 downto 0) := "0100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (54 downto 0) := "1000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv11_600 : STD_LOGIC_VECTOR (10 downto 0) := "11000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv7_60 : STD_LOGIC_VECTOR (6 downto 0) := "1100000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv89_1A20D0357B2B : STD_LOGIC_VECTOR (88 downto 0) := "00000000000000000000000000000000000000000000110100010000011010000001101010111101100101011";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv89_0 : STD_LOGIC_VECTOR (88 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal quantized_hidden_sta_3_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal quantized_hidden_sta_3_ce0 : STD_LOGIC;
    signal quantized_hidden_sta_3_we0 : STD_LOGIC;
    signal quantized_hidden_sta_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_3_ce1 : STD_LOGIC;
    signal quantized_hidden_sta_3_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_2_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal quantized_hidden_sta_2_ce0 : STD_LOGIC;
    signal quantized_hidden_sta_2_we0 : STD_LOGIC;
    signal quantized_hidden_sta_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_2_ce1 : STD_LOGIC;
    signal quantized_hidden_sta_2_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal quantized_hidden_sta_1_ce0 : STD_LOGIC;
    signal quantized_hidden_sta_1_we0 : STD_LOGIC;
    signal quantized_hidden_sta_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_1_ce1 : STD_LOGIC;
    signal quantized_hidden_sta_1_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal quantized_hidden_sta_ce0 : STD_LOGIC;
    signal quantized_hidden_sta_we0 : STD_LOGIC;
    signal quantized_hidden_sta_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_hidden_sta_ce1 : STD_LOGIC;
    signal quantized_hidden_sta_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal q_proj_V_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal q_proj_V_0_ce0 : STD_LOGIC;
    signal q_proj_V_0_we0 : STD_LOGIC;
    signal q_proj_V_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal q_proj_V_0_ce1 : STD_LOGIC;
    signal q_proj_V_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_proj_V_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_proj_V_0_ce0 : STD_LOGIC;
    signal k_proj_V_0_we0 : STD_LOGIC;
    signal k_proj_V_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_proj_V_0_ce1 : STD_LOGIC;
    signal k_proj_V_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_proj_V_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal v_proj_V_0_ce0 : STD_LOGIC;
    signal v_proj_V_0_we0 : STD_LOGIC;
    signal v_proj_V_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_proj_transposed_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal k_proj_transposed_V_ce0 : STD_LOGIC;
    signal k_proj_transposed_V_we0 : STD_LOGIC;
    signal k_proj_transposed_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal quantized_final_outp_3_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal quantized_final_outp_3_ce0 : STD_LOGIC;
    signal quantized_final_outp_3_we0 : STD_LOGIC;
    signal quantized_final_outp_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_final_outp_3_ce1 : STD_LOGIC;
    signal quantized_final_outp_3_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_final_outp_2_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal quantized_final_outp_2_ce0 : STD_LOGIC;
    signal quantized_final_outp_2_we0 : STD_LOGIC;
    signal quantized_final_outp_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_final_outp_2_ce1 : STD_LOGIC;
    signal quantized_final_outp_2_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_final_outp_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal quantized_final_outp_1_ce0 : STD_LOGIC;
    signal quantized_final_outp_1_we0 : STD_LOGIC;
    signal quantized_final_outp_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_final_outp_1_ce1 : STD_LOGIC;
    signal quantized_final_outp_1_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_final_outp_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal quantized_final_outp_ce0 : STD_LOGIC;
    signal quantized_final_outp_we0 : STD_LOGIC;
    signal quantized_final_outp_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quantized_final_outp_ce1 : STD_LOGIC;
    signal quantized_final_outp_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_quantize_activation_fu_873_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_931 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_quantize_activation_fu_873_ap_ready : STD_LOGIC;
    signal grp_quantize_activation_fu_873_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal add_ln454_fu_942_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln473_fu_959_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal add_ln479_fu_976_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal add_ln485_fu_993_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal v301_fu_1010_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal v301_reg_1919 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal sub_ln203_fu_1036_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln203_reg_1924 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln520_fu_1004_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln522_fu_1048_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal v305_fu_1074_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal v305_reg_1940 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal sub_ln203_3_fu_1100_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln203_3_reg_1945 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln528_fu_1068_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln530_fu_1112_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal v309_fu_1138_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal v309_reg_1961 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal sext_ln203_2_fu_1174_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln203_2_reg_1966 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln537_fu_1132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v310_fu_1184_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal v310_reg_1974 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal sub_ln203_6_fu_1219_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln203_6_reg_1979 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln538_fu_1178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v311_fu_1231_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal v313_fu_1257_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal v313_reg_1995 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal sext_ln203_4_fu_1293_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln203_4_reg_2000 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln545_fu_1251_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v314_fu_1303_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal v314_reg_2008 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal sub_ln203_8_fu_1338_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln203_8_reg_2013 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln546_fu_1297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v315_fu_1350_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal v321_fu_1376_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal v321_reg_2029 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal sub_ln203_7_fu_1402_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln203_7_reg_2034 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln564_fu_1370_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln566_fu_1414_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal i10_fu_1440_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i10_reg_2050 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal sub_ln577_fu_1466_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln577_reg_2055 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln574_fu_1434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln576_fu_1478_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln576_reg_2063 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal attn_weights_0_V_ad_1_reg_2068 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln576_fu_1472_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal attn_weights_0_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal attn_weights_0_V_lo_reg_2073 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal tmp_94_reg_2078 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal grp_fu_1517_p2 : STD_LOGIC_VECTOR (88 downto 0);
    signal mul_ln1148_reg_2089 : STD_LOGIC_VECTOR (88 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal tmp_96_reg_2094 : STD_LOGIC_VECTOR (28 downto 0);
    signal select_ln1148_fu_1548_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal select_ln1148_reg_2099 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal v341_fu_1580_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal v341_reg_2108 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal sub_ln203_9_fu_1606_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln203_9_reg_2113 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln602_fu_1574_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln604_fu_1618_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal v345_fu_1644_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal v345_reg_2129 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal sub_ln203_10_fu_1670_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln203_10_reg_2134 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln611_fu_1638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln613_fu_1682_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal add_ln621_fu_1708_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal add_ln626_fu_1725_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln626_reg_2158 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal sub_ln628_fu_1751_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln628_reg_2163 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln626_fu_1719_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln629_fu_1785_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln629_reg_2168 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln627_fu_1801_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln627_reg_2176 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal icmp_ln627_fu_1795_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln629_fu_1817_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln629_reg_2186 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln635_fu_1836_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal add_ln653_fu_1853_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal rms_hidden_states_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal rms_hidden_states_0_ce0 : STD_LOGIC;
    signal rms_hidden_states_0_we0 : STD_LOGIC;
    signal rms_hidden_states_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rms_hidden_states_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal q_proj_re_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal q_proj_re_V_ce0 : STD_LOGIC;
    signal q_proj_re_V_we0 : STD_LOGIC;
    signal q_proj_re_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal q_proj_re_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_proj_re_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_proj_re_V_ce0 : STD_LOGIC;
    signal k_proj_re_V_we0 : STD_LOGIC;
    signal k_proj_re_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_proj_re_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_proj_re_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal v_proj_re_V_ce0 : STD_LOGIC;
    signal v_proj_re_V_we0 : STD_LOGIC;
    signal v_proj_re_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal v_proj_re_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal q_embed_0_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal q_embed_0_V_ce0 : STD_LOGIC;
    signal q_embed_0_V_we0 : STD_LOGIC;
    signal q_embed_0_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal q_embed_0_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_embed_0_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_embed_0_V_ce0 : STD_LOGIC;
    signal k_embed_0_V_we0 : STD_LOGIC;
    signal k_embed_0_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_embed_0_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal updated_k_cache_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal updated_k_cache_V_ce0 : STD_LOGIC;
    signal updated_k_cache_V_we0 : STD_LOGIC;
    signal updated_k_cache_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal updated_k_cache_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal updated_v_cache_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal updated_v_cache_V_ce0 : STD_LOGIC;
    signal updated_v_cache_V_we0 : STD_LOGIC;
    signal updated_v_cache_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal updated_v_cache_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal attn_weights_0_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal attn_weights_0_V_ce0 : STD_LOGIC;
    signal attn_weights_0_V_we0 : STD_LOGIC;
    signal attn_weights_0_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal softmax_attn_weights_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal softmax_attn_weights_ce0 : STD_LOGIC;
    signal softmax_attn_weights_we0 : STD_LOGIC;
    signal softmax_attn_weights_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal softmax_attn_weights_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal attn_output_0_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal attn_output_0_V_ce0 : STD_LOGIC;
    signal attn_output_0_V_we0 : STD_LOGIC;
    signal attn_output_0_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal attn_output_0_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal attn_output_2D_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal attn_output_2D_V_ce0 : STD_LOGIC;
    signal attn_output_2D_V_we0 : STD_LOGIC;
    signal attn_output_2D_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal attn_output_2D_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rms_attn_output_0_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal rms_attn_output_0_V_ce0 : STD_LOGIC;
    signal rms_attn_output_0_V_we0 : STD_LOGIC;
    signal rms_attn_output_0_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rms_attn_output_0_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_linear_forward_no_mu_fu_778_ap_start : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_778_ap_done : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_778_ap_idle : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_778_ap_ready : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_778_v77_0_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_linear_forward_no_mu_fu_778_v77_0_0_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_778_v77_0_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_778_v77_0_0_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_linear_forward_no_mu_fu_778_v77_0_0_ce1 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_778_v77_0_0_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_778_v77_1_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_linear_forward_no_mu_fu_778_v77_1_0_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_778_v77_1_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_778_v77_1_0_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_linear_forward_no_mu_fu_778_v77_1_0_ce1 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_778_v77_1_0_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_778_v77_2_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_linear_forward_no_mu_fu_778_v77_2_0_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_778_v77_2_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_778_v77_2_0_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_linear_forward_no_mu_fu_778_v77_2_0_ce1 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_778_v77_2_0_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_778_v77_3_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_linear_forward_no_mu_fu_778_v77_3_0_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_778_v77_3_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_778_v77_3_0_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_linear_forward_no_mu_fu_778_v77_3_0_ce1 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_778_v77_3_0_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_778_v79_address0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_linear_forward_no_mu_fu_778_v79_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_778_v79_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_778_v79_address1 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_linear_forward_no_mu_fu_778_v79_ce1 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_778_v79_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_linear_forward_no_mu_fu_778_v80_V : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_linear_forward_no_mu_fu_778_v81_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_linear_forward_no_mu_fu_778_v81_V_ce0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_778_v81_V_we0 : STD_LOGIC;
    signal grp_linear_forward_no_mu_fu_778_v81_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rms_norm_fu_803_ap_start : STD_LOGIC;
    signal grp_rms_norm_fu_803_ap_done : STD_LOGIC;
    signal grp_rms_norm_fu_803_ap_idle : STD_LOGIC;
    signal grp_rms_norm_fu_803_ap_ready : STD_LOGIC;
    signal grp_rms_norm_fu_803_v0_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_rms_norm_fu_803_v0_V_ce0 : STD_LOGIC;
    signal grp_rms_norm_fu_803_v0_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rms_norm_fu_803_v1_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_rms_norm_fu_803_v1_V_ce0 : STD_LOGIC;
    signal grp_rms_norm_fu_803_v1_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rms_norm_fu_803_v3_0_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_rms_norm_fu_803_v3_0_V_ce0 : STD_LOGIC;
    signal grp_rms_norm_fu_803_v3_0_V_we0 : STD_LOGIC;
    signal grp_rms_norm_fu_803_v3_0_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_softmax_fu_833_ap_start : STD_LOGIC;
    signal grp_softmax_fu_833_ap_done : STD_LOGIC;
    signal grp_softmax_fu_833_ap_idle : STD_LOGIC;
    signal grp_softmax_fu_833_ap_ready : STD_LOGIC;
    signal grp_softmax_fu_833_v213_0_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_softmax_fu_833_v213_0_V_ce0 : STD_LOGIC;
    signal grp_softmax_fu_833_v214_0_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_softmax_fu_833_v214_0_V_ce0 : STD_LOGIC;
    signal grp_softmax_fu_833_v214_0_V_we0 : STD_LOGIC;
    signal grp_softmax_fu_833_v214_0_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_apply_rotary_pos_emb_fu_859_ap_start : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_859_ap_done : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_859_ap_idle : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_859_ap_ready : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_859_v151_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_apply_rotary_pos_emb_fu_859_v151_V_ce0 : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_859_v152_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_apply_rotary_pos_emb_fu_859_v152_V_ce0 : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_859_v153_0_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_apply_rotary_pos_emb_fu_859_v153_0_V_ce0 : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_859_v153_0_V_we0 : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_859_v153_0_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_apply_rotary_pos_emb_fu_859_v154_0_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_apply_rotary_pos_emb_fu_859_v154_0_V_ce0 : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_859_v154_0_V_we0 : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_859_v154_0_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_apply_rotary_pos_emb_fu_859_q_proj_V_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_apply_rotary_pos_emb_fu_859_q_proj_V_0_ce0 : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_859_q_proj_V_0_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_apply_rotary_pos_emb_fu_859_q_proj_V_0_ce1 : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_859_k_proj_V_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_apply_rotary_pos_emb_fu_859_k_proj_V_0_ce0 : STD_LOGIC;
    signal grp_apply_rotary_pos_emb_fu_859_k_proj_V_0_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_apply_rotary_pos_emb_fu_859_k_proj_V_0_ce1 : STD_LOGIC;
    signal grp_quantize_activation_fu_873_ap_start : STD_LOGIC;
    signal grp_quantize_activation_fu_873_ap_idle : STD_LOGIC;
    signal grp_quantize_activation_fu_873_v22_0_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_quantize_activation_fu_873_v22_0_V_ce0 : STD_LOGIC;
    signal grp_quantize_activation_fu_873_v22_0_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_quantize_activation_fu_873_v24_0_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_quantize_activation_fu_873_v24_0_0_ce0 : STD_LOGIC;
    signal grp_quantize_activation_fu_873_v24_0_0_we0 : STD_LOGIC;
    signal grp_quantize_activation_fu_873_v24_0_0_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_quantize_activation_fu_873_v24_1_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_quantize_activation_fu_873_v24_1_0_ce0 : STD_LOGIC;
    signal grp_quantize_activation_fu_873_v24_1_0_we0 : STD_LOGIC;
    signal grp_quantize_activation_fu_873_v24_1_0_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_quantize_activation_fu_873_v24_2_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_quantize_activation_fu_873_v24_2_0_ce0 : STD_LOGIC;
    signal grp_quantize_activation_fu_873_v24_2_0_we0 : STD_LOGIC;
    signal grp_quantize_activation_fu_873_v24_2_0_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_quantize_activation_fu_873_v24_3_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_quantize_activation_fu_873_v24_3_0_ce0 : STD_LOGIC;
    signal grp_quantize_activation_fu_873_v24_3_0_we0 : STD_LOGIC;
    signal grp_quantize_activation_fu_873_v24_3_0_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cache_update_fu_890_ap_start : STD_LOGIC;
    signal grp_cache_update_fu_890_ap_done : STD_LOGIC;
    signal grp_cache_update_fu_890_ap_idle : STD_LOGIC;
    signal grp_cache_update_fu_890_ap_ready : STD_LOGIC;
    signal grp_cache_update_fu_890_v181_V_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_cache_update_fu_890_v181_V_ce0 : STD_LOGIC;
    signal grp_cache_update_fu_890_v181_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cache_update_fu_890_v182_0_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_cache_update_fu_890_v182_0_V_ce0 : STD_LOGIC;
    signal grp_cache_update_fu_890_v182_0_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cache_update_fu_890_v183_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_cache_update_fu_890_v183_V_ce0 : STD_LOGIC;
    signal grp_cache_update_fu_890_v183_V_we0 : STD_LOGIC;
    signal grp_cache_update_fu_890_v183_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_GEMM_3D_float_fu_900_ap_start : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_900_ap_done : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_900_ap_idle : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_900_ap_ready : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_900_v198_0_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_GEMM_3D_float_fu_900_v198_0_V_ce0 : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_900_v200_0_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_GEMM_3D_float_fu_900_v200_0_V_ce0 : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_900_v200_0_V_we0 : STD_LOGIC;
    signal grp_GEMM_3D_float_fu_900_v200_0_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_GEMM_3D_float_fu_900_k_proj_transposed_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_GEMM_3D_float_fu_900_k_proj_transposed_V_ce0 : STD_LOGIC;
    signal grp_GEMM_3D_float2_fu_908_ap_start : STD_LOGIC;
    signal grp_GEMM_3D_float2_fu_908_ap_done : STD_LOGIC;
    signal grp_GEMM_3D_float2_fu_908_ap_idle : STD_LOGIC;
    signal grp_GEMM_3D_float2_fu_908_ap_ready : STD_LOGIC;
    signal grp_GEMM_3D_float2_fu_908_v240_0_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_GEMM_3D_float2_fu_908_v240_0_V_ce0 : STD_LOGIC;
    signal grp_GEMM_3D_float2_fu_908_v241_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_GEMM_3D_float2_fu_908_v241_V_ce0 : STD_LOGIC;
    signal grp_GEMM_3D_float2_fu_908_v242_0_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_GEMM_3D_float2_fu_908_v242_0_V_ce0 : STD_LOGIC;
    signal grp_GEMM_3D_float2_fu_908_v242_0_V_we0 : STD_LOGIC;
    signal grp_GEMM_3D_float2_fu_908_v242_0_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_transpose_last_two_d_fu_915_ap_start : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_915_ap_done : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_915_ap_idle : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_915_ap_ready : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_915_v192_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_transpose_last_two_d_fu_915_v192_V_ce0 : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_915_v193_V_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_transpose_last_two_d_fu_915_v193_V_ce0 : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_915_v193_V_we0 : STD_LOGIC;
    signal grp_transpose_last_two_d_fu_915_v193_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_reshape_2D_to_3D_fu_922_ap_start : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_922_ap_done : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_922_ap_idle : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_922_ap_ready : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_922_v135_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_reshape_2D_to_3D_fu_922_v135_V_ce0 : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_922_v135_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_reshape_2D_to_3D_fu_922_v136_0_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_reshape_2D_to_3D_fu_922_v136_0_V_ce0 : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_922_v136_0_V_we0 : STD_LOGIC;
    signal grp_reshape_2D_to_3D_fu_922_v136_0_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal v272_0_0_reg_481 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln454_fu_936_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v281_0_0_reg_492 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln473_fu_953_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v284_0_0_reg_503 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln479_fu_970_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v287_0_0_reg_514 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln485_fu_987_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v301_0_reg_525 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal icmp_ln522_fu_1042_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v303_0_0_reg_536 : STD_LOGIC_VECTOR (6 downto 0);
    signal v305_0_reg_547 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln530_fu_1106_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v307_0_0_reg_558 : STD_LOGIC_VECTOR (6 downto 0);
    signal v309_0_reg_569 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal v310_0_reg_580 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln539_fu_1225_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v311_0_reg_591 : STD_LOGIC_VECTOR (6 downto 0);
    signal v313_0_reg_602 : STD_LOGIC_VECTOR (4 downto 0);
    signal v314_0_reg_613 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln547_fu_1344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v315_0_reg_624 : STD_LOGIC_VECTOR (6 downto 0);
    signal v321_0_reg_635 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_block_state29_on_subcall_done : BOOLEAN;
    signal icmp_ln566_fu_1408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v323_0_0_reg_646 : STD_LOGIC_VECTOR (2 downto 0);
    signal i10_0_reg_657 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal k9_0_0_reg_668 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal v341_0_reg_679 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln604_fu_1612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v343_0_0_reg_690 : STD_LOGIC_VECTOR (2 downto 0);
    signal v345_0_reg_701 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal icmp_ln613_fu_1676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v347_0_0_reg_712 : STD_LOGIC_VECTOR (6 downto 0);
    signal v350_0_0_reg_723 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln621_fu_1702_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal h7_0_0_reg_734 : STD_LOGIC_VECTOR (4 downto 0);
    signal d4_0_0_reg_745 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal v357_0_0_reg_756 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln635_fu_1830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v365_0_0_reg_767 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln653_fu_1847_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_linear_forward_no_mu_fu_778_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal grp_rms_norm_fu_803_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal grp_softmax_fu_833_ap_start_reg : STD_LOGIC := '0';
    signal grp_apply_rotary_pos_emb_fu_859_ap_start_reg : STD_LOGIC := '0';
    signal grp_quantize_activation_fu_873_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal grp_cache_update_fu_890_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal grp_GEMM_3D_float_fu_900_ap_start_reg : STD_LOGIC := '0';
    signal grp_GEMM_3D_float2_fu_908_ap_start_reg : STD_LOGIC := '0';
    signal grp_transpose_last_two_d_fu_915_ap_start_reg : STD_LOGIC := '0';
    signal grp_reshape_2D_to_3D_fu_922_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal zext_ln455_fu_948_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln474_fu_965_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln480_fu_982_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln486_fu_999_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln203_fu_1063_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln203_3_fu_1127_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln203_18_fu_1246_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln203_21_fu_1365_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln203_5_fu_1429_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln577_fu_1493_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln203_6_fu_1633_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln203_7_fu_1697_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln622_fu_1714_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln628_fu_1812_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln629_fu_1825_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln636_fu_1842_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln654_fu_1859_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln1148_2_fu_1566_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_119_fu_1024_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_s_fu_1016_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln203_fu_1032_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln203_8_fu_1054_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln203_fu_1058_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_121_fu_1088_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_120_fu_1080_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln203_7_fu_1096_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln203_11_fu_1118_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln203_6_fu_1122_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_122_fu_1144_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_123_fu_1156_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln203_9_fu_1152_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln203_10_fu_1164_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln203_4_fu_1168_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln203_14_fu_1190_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln203_7_fu_1194_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln203_fu_1199_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl6_cast_fu_1203_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl7_cast_fu_1211_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln203_17_fu_1237_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln203_9_fu_1241_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_124_fu_1263_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_125_fu_1275_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln203_12_fu_1271_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln203_13_fu_1283_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln203_5_fu_1287_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln203_16_fu_1309_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln203_8_fu_1313_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln203_1_fu_1318_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl_cast_fu_1322_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl2_cast_fu_1330_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln203_20_fu_1356_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln203_11_fu_1360_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_127_fu_1390_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_126_fu_1382_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln203_15_fu_1398_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln203_19_fu_1420_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln203_10_fu_1424_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_129_fu_1454_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_128_fu_1446_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln577_fu_1462_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln577_1_fu_1484_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln577_fu_1488_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln_fu_1506_p3 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_1517_p0 : STD_LOGIC_VECTOR (45 downto 0);
    signal sub_ln1148_fu_1533_p2 : STD_LOGIC_VECTOR (88 downto 0);
    signal tmp_95_fu_1538_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal sext_ln703_fu_1554_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln703_fu_1557_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln703_1024_fu_1563_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_131_fu_1594_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_130_fu_1586_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln203_22_fu_1602_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln203_24_fu_1624_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln203_12_fu_1628_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_133_fu_1658_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_132_fu_1650_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln203_23_fu_1666_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln203_25_fu_1688_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln203_13_fu_1692_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_135_fu_1739_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_134_fu_1731_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln628_fu_1747_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln629_fu_1757_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln2_fu_1761_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln629_1_fu_1773_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln629_1_fu_1769_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln629_2_fu_1781_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln627_fu_1791_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln628_fu_1807_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln629_fu_1822_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (54 downto 0);
    signal ap_block_state11_on_subcall_done : BOOLEAN;
    signal ap_block_state13_on_subcall_done : BOOLEAN;

    component linear_forward_no_mu IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v77_0_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        v77_0_0_ce0 : OUT STD_LOGIC;
        v77_0_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        v77_0_0_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        v77_0_0_ce1 : OUT STD_LOGIC;
        v77_0_0_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        v77_1_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        v77_1_0_ce0 : OUT STD_LOGIC;
        v77_1_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        v77_1_0_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        v77_1_0_ce1 : OUT STD_LOGIC;
        v77_1_0_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        v77_2_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        v77_2_0_ce0 : OUT STD_LOGIC;
        v77_2_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        v77_2_0_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        v77_2_0_ce1 : OUT STD_LOGIC;
        v77_2_0_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        v77_3_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        v77_3_0_ce0 : OUT STD_LOGIC;
        v77_3_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        v77_3_0_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        v77_3_0_ce1 : OUT STD_LOGIC;
        v77_3_0_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        v78_0_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        v79_address0 : OUT STD_LOGIC_VECTOR (19 downto 0);
        v79_ce0 : OUT STD_LOGIC;
        v79_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        v79_address1 : OUT STD_LOGIC_VECTOR (19 downto 0);
        v79_ce1 : OUT STD_LOGIC;
        v79_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        v80_V : IN STD_LOGIC_VECTOR (31 downto 0);
        v81_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v81_V_ce0 : OUT STD_LOGIC;
        v81_V_we0 : OUT STD_LOGIC;
        v81_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component rms_norm IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v0_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v0_V_ce0 : OUT STD_LOGIC;
        v0_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v1_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v1_V_ce0 : OUT STD_LOGIC;
        v1_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v3_0_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v3_0_V_ce0 : OUT STD_LOGIC;
        v3_0_V_we0 : OUT STD_LOGIC;
        v3_0_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component softmax IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v213_0_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        v213_0_V_ce0 : OUT STD_LOGIC;
        v213_0_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v214_0_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        v214_0_V_ce0 : OUT STD_LOGIC;
        v214_0_V_we0 : OUT STD_LOGIC;
        v214_0_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        v214_0_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component apply_rotary_pos_emb IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v151_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v151_V_ce0 : OUT STD_LOGIC;
        v151_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v152_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        v152_V_ce0 : OUT STD_LOGIC;
        v152_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v153_0_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v153_0_V_ce0 : OUT STD_LOGIC;
        v153_0_V_we0 : OUT STD_LOGIC;
        v153_0_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        v154_0_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v154_0_V_ce0 : OUT STD_LOGIC;
        v154_0_V_we0 : OUT STD_LOGIC;
        v154_0_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        q_proj_V_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        q_proj_V_0_ce0 : OUT STD_LOGIC;
        q_proj_V_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q_proj_V_0_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        q_proj_V_0_ce1 : OUT STD_LOGIC;
        q_proj_V_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        k_proj_V_0_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k_proj_V_0_ce0 : OUT STD_LOGIC;
        k_proj_V_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        k_proj_V_0_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        k_proj_V_0_ce1 : OUT STD_LOGIC;
        k_proj_V_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component quantize_activation IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v22_0_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v22_0_V_ce0 : OUT STD_LOGIC;
        v22_0_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v24_0_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        v24_0_0_ce0 : OUT STD_LOGIC;
        v24_0_0_we0 : OUT STD_LOGIC;
        v24_0_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        v24_1_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        v24_1_0_ce0 : OUT STD_LOGIC;
        v24_1_0_we0 : OUT STD_LOGIC;
        v24_1_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        v24_2_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        v24_2_0_ce0 : OUT STD_LOGIC;
        v24_2_0_we0 : OUT STD_LOGIC;
        v24_2_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        v24_3_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        v24_3_0_ce0 : OUT STD_LOGIC;
        v24_3_0_we0 : OUT STD_LOGIC;
        v24_3_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cache_update IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v181_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        v181_V_ce0 : OUT STD_LOGIC;
        v181_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v182_0_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v182_0_V_ce0 : OUT STD_LOGIC;
        v182_0_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v183_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        v183_V_ce0 : OUT STD_LOGIC;
        v183_V_we0 : OUT STD_LOGIC;
        v183_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component GEMM_3D_float IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v198_0_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v198_0_V_ce0 : OUT STD_LOGIC;
        v198_0_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v200_0_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        v200_0_V_ce0 : OUT STD_LOGIC;
        v200_0_V_we0 : OUT STD_LOGIC;
        v200_0_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        v200_0_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        k_proj_transposed_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        k_proj_transposed_V_ce0 : OUT STD_LOGIC;
        k_proj_transposed_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component GEMM_3D_float2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v240_0_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        v240_0_V_ce0 : OUT STD_LOGIC;
        v240_0_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v241_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        v241_V_ce0 : OUT STD_LOGIC;
        v241_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v242_0_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v242_0_V_ce0 : OUT STD_LOGIC;
        v242_0_V_we0 : OUT STD_LOGIC;
        v242_0_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        v242_0_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component transpose_last_two_d IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v192_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        v192_V_ce0 : OUT STD_LOGIC;
        v192_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v193_V_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        v193_V_ce0 : OUT STD_LOGIC;
        v193_V_we0 : OUT STD_LOGIC;
        v193_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component reshape_2D_to_3D IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        v135_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v135_V_ce0 : OUT STD_LOGIC;
        v135_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        v136_0_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        v136_0_V_ce0 : OUT STD_LOGIC;
        v136_0_V_we0 : OUT STD_LOGIC;
        v136_0_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component attention_mul_46nvdy IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (45 downto 0);
        din1 : IN STD_LOGIC_VECTOR (43 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (88 downto 0) );
    end component;


    component attention_quantizCeG IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component attention_q_proj_Gfk IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component attention_v_proj_IfE IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component attention_k_proj_JfO IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component apply_rotary_pos_zec IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component attention_updatedUhA IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component attention_attn_weWhU IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    quantized_hidden_sta_3_U : component attention_quantizCeG
    generic map (
        DataWidth => 8,
        AddressRange => 384,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => quantized_hidden_sta_3_address0,
        ce0 => quantized_hidden_sta_3_ce0,
        we0 => quantized_hidden_sta_3_we0,
        d0 => grp_quantize_activation_fu_873_v24_0_0_d0,
        q0 => quantized_hidden_sta_3_q0,
        address1 => grp_linear_forward_no_mu_fu_778_v77_0_0_address1,
        ce1 => quantized_hidden_sta_3_ce1,
        q1 => quantized_hidden_sta_3_q1);

    quantized_hidden_sta_2_U : component attention_quantizCeG
    generic map (
        DataWidth => 8,
        AddressRange => 384,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => quantized_hidden_sta_2_address0,
        ce0 => quantized_hidden_sta_2_ce0,
        we0 => quantized_hidden_sta_2_we0,
        d0 => grp_quantize_activation_fu_873_v24_1_0_d0,
        q0 => quantized_hidden_sta_2_q0,
        address1 => grp_linear_forward_no_mu_fu_778_v77_1_0_address1,
        ce1 => quantized_hidden_sta_2_ce1,
        q1 => quantized_hidden_sta_2_q1);

    quantized_hidden_sta_1_U : component attention_quantizCeG
    generic map (
        DataWidth => 8,
        AddressRange => 384,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => quantized_hidden_sta_1_address0,
        ce0 => quantized_hidden_sta_1_ce0,
        we0 => quantized_hidden_sta_1_we0,
        d0 => grp_quantize_activation_fu_873_v24_2_0_d0,
        q0 => quantized_hidden_sta_1_q0,
        address1 => grp_linear_forward_no_mu_fu_778_v77_2_0_address1,
        ce1 => quantized_hidden_sta_1_ce1,
        q1 => quantized_hidden_sta_1_q1);

    quantized_hidden_sta_U : component attention_quantizCeG
    generic map (
        DataWidth => 8,
        AddressRange => 384,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => quantized_hidden_sta_address0,
        ce0 => quantized_hidden_sta_ce0,
        we0 => quantized_hidden_sta_we0,
        d0 => grp_quantize_activation_fu_873_v24_3_0_d0,
        q0 => quantized_hidden_sta_q0,
        address1 => grp_linear_forward_no_mu_fu_778_v77_3_0_address1,
        ce1 => quantized_hidden_sta_ce1,
        q1 => quantized_hidden_sta_q1);

    q_proj_V_0_U : component attention_q_proj_Gfk
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => q_proj_V_0_address0,
        ce0 => q_proj_V_0_ce0,
        we0 => q_proj_V_0_we0,
        d0 => grp_reshape_2D_to_3D_fu_922_v136_0_V_d0,
        q0 => q_proj_V_0_q0,
        address1 => grp_apply_rotary_pos_emb_fu_859_q_proj_V_0_address1,
        ce1 => q_proj_V_0_ce1,
        q1 => q_proj_V_0_q1);

    k_proj_V_0_U : component attention_q_proj_Gfk
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_proj_V_0_address0,
        ce0 => k_proj_V_0_ce0,
        we0 => k_proj_V_0_we0,
        d0 => grp_reshape_2D_to_3D_fu_922_v136_0_V_d0,
        q0 => k_proj_V_0_q0,
        address1 => grp_apply_rotary_pos_emb_fu_859_k_proj_V_0_address1,
        ce1 => k_proj_V_0_ce1,
        q1 => k_proj_V_0_q1);

    v_proj_V_0_U : component attention_v_proj_IfE
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => v_proj_V_0_address0,
        ce0 => v_proj_V_0_ce0,
        we0 => v_proj_V_0_we0,
        d0 => grp_reshape_2D_to_3D_fu_922_v136_0_V_d0,
        q0 => v_proj_V_0_q0);

    k_proj_transposed_V_U : component attention_k_proj_JfO
    generic map (
        DataWidth => 32,
        AddressRange => 9216,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_proj_transposed_V_address0,
        ce0 => k_proj_transposed_V_ce0,
        we0 => k_proj_transposed_V_we0,
        d0 => grp_transpose_last_two_d_fu_915_v193_V_d0,
        q0 => k_proj_transposed_V_q0);

    quantized_final_outp_3_U : component attention_quantizCeG
    generic map (
        DataWidth => 8,
        AddressRange => 384,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => quantized_final_outp_3_address0,
        ce0 => quantized_final_outp_3_ce0,
        we0 => quantized_final_outp_3_we0,
        d0 => grp_quantize_activation_fu_873_v24_0_0_d0,
        q0 => quantized_final_outp_3_q0,
        address1 => grp_linear_forward_no_mu_fu_778_v77_0_0_address1,
        ce1 => quantized_final_outp_3_ce1,
        q1 => quantized_final_outp_3_q1);

    quantized_final_outp_2_U : component attention_quantizCeG
    generic map (
        DataWidth => 8,
        AddressRange => 384,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => quantized_final_outp_2_address0,
        ce0 => quantized_final_outp_2_ce0,
        we0 => quantized_final_outp_2_we0,
        d0 => grp_quantize_activation_fu_873_v24_1_0_d0,
        q0 => quantized_final_outp_2_q0,
        address1 => grp_linear_forward_no_mu_fu_778_v77_1_0_address1,
        ce1 => quantized_final_outp_2_ce1,
        q1 => quantized_final_outp_2_q1);

    quantized_final_outp_1_U : component attention_quantizCeG
    generic map (
        DataWidth => 8,
        AddressRange => 384,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => quantized_final_outp_1_address0,
        ce0 => quantized_final_outp_1_ce0,
        we0 => quantized_final_outp_1_we0,
        d0 => grp_quantize_activation_fu_873_v24_2_0_d0,
        q0 => quantized_final_outp_1_q0,
        address1 => grp_linear_forward_no_mu_fu_778_v77_2_0_address1,
        ce1 => quantized_final_outp_1_ce1,
        q1 => quantized_final_outp_1_q1);

    quantized_final_outp_U : component attention_quantizCeG
    generic map (
        DataWidth => 8,
        AddressRange => 384,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => quantized_final_outp_address0,
        ce0 => quantized_final_outp_ce0,
        we0 => quantized_final_outp_we0,
        d0 => grp_quantize_activation_fu_873_v24_3_0_d0,
        q0 => quantized_final_outp_q0,
        address1 => grp_linear_forward_no_mu_fu_778_v77_3_0_address1,
        ce1 => quantized_final_outp_ce1,
        q1 => quantized_final_outp_q1);

    rms_hidden_states_0_U : component apply_rotary_pos_zec
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rms_hidden_states_0_address0,
        ce0 => rms_hidden_states_0_ce0,
        we0 => rms_hidden_states_0_we0,
        d0 => rms_hidden_states_0_d0,
        q0 => rms_hidden_states_0_q0);

    q_proj_re_V_U : component apply_rotary_pos_zec
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => q_proj_re_V_address0,
        ce0 => q_proj_re_V_ce0,
        we0 => q_proj_re_V_we0,
        d0 => q_proj_re_V_d0,
        q0 => q_proj_re_V_q0);

    k_proj_re_V_U : component apply_rotary_pos_zec
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_proj_re_V_address0,
        ce0 => k_proj_re_V_ce0,
        we0 => k_proj_re_V_we0,
        d0 => k_proj_re_V_d0,
        q0 => k_proj_re_V_q0);

    v_proj_re_V_U : component apply_rotary_pos_zec
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => v_proj_re_V_address0,
        ce0 => v_proj_re_V_ce0,
        we0 => v_proj_re_V_we0,
        d0 => v_proj_re_V_d0,
        q0 => v_proj_re_V_q0);

    q_embed_0_V_U : component apply_rotary_pos_zec
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => q_embed_0_V_address0,
        ce0 => q_embed_0_V_ce0,
        we0 => q_embed_0_V_we0,
        d0 => q_embed_0_V_d0,
        q0 => q_embed_0_V_q0);

    k_embed_0_V_U : component apply_rotary_pos_zec
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_embed_0_V_address0,
        ce0 => k_embed_0_V_ce0,
        we0 => k_embed_0_V_we0,
        d0 => k_embed_0_V_d0,
        q0 => k_embed_0_V_q0);

    updated_k_cache_V_U : component attention_updatedUhA
    generic map (
        DataWidth => 32,
        AddressRange => 9216,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => updated_k_cache_V_address0,
        ce0 => updated_k_cache_V_ce0,
        we0 => updated_k_cache_V_we0,
        d0 => updated_k_cache_V_d0,
        q0 => updated_k_cache_V_q0);

    updated_v_cache_V_U : component attention_updatedUhA
    generic map (
        DataWidth => 32,
        AddressRange => 9216,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => updated_v_cache_V_address0,
        ce0 => updated_v_cache_V_ce0,
        we0 => updated_v_cache_V_we0,
        d0 => updated_v_cache_V_d0,
        q0 => updated_v_cache_V_q0);

    attn_weights_0_V_U : component attention_attn_weWhU
    generic map (
        DataWidth => 32,
        AddressRange => 96,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => attn_weights_0_V_address0,
        ce0 => attn_weights_0_V_ce0,
        we0 => attn_weights_0_V_we0,
        d0 => attn_weights_0_V_d0,
        q0 => attn_weights_0_V_q0);

    softmax_attn_weights_U : component attention_attn_weWhU
    generic map (
        DataWidth => 32,
        AddressRange => 96,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => softmax_attn_weights_address0,
        ce0 => softmax_attn_weights_ce0,
        we0 => softmax_attn_weights_we0,
        d0 => softmax_attn_weights_d0,
        q0 => softmax_attn_weights_q0);

    attn_output_0_V_U : component apply_rotary_pos_zec
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => attn_output_0_V_address0,
        ce0 => attn_output_0_V_ce0,
        we0 => attn_output_0_V_we0,
        d0 => attn_output_0_V_d0,
        q0 => attn_output_0_V_q0);

    attn_output_2D_V_U : component apply_rotary_pos_zec
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => attn_output_2D_V_address0,
        ce0 => attn_output_2D_V_ce0,
        we0 => attn_output_2D_V_we0,
        d0 => attn_output_2D_V_d0,
        q0 => attn_output_2D_V_q0);

    rms_attn_output_0_V_U : component apply_rotary_pos_zec
    generic map (
        DataWidth => 32,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rms_attn_output_0_V_address0,
        ce0 => rms_attn_output_0_V_ce0,
        we0 => rms_attn_output_0_V_we0,
        d0 => rms_attn_output_0_V_d0,
        q0 => rms_attn_output_0_V_q0);

    grp_linear_forward_no_mu_fu_778 : component linear_forward_no_mu
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_linear_forward_no_mu_fu_778_ap_start,
        ap_done => grp_linear_forward_no_mu_fu_778_ap_done,
        ap_idle => grp_linear_forward_no_mu_fu_778_ap_idle,
        ap_ready => grp_linear_forward_no_mu_fu_778_ap_ready,
        v77_0_0_address0 => grp_linear_forward_no_mu_fu_778_v77_0_0_address0,
        v77_0_0_ce0 => grp_linear_forward_no_mu_fu_778_v77_0_0_ce0,
        v77_0_0_q0 => grp_linear_forward_no_mu_fu_778_v77_0_0_q0,
        v77_0_0_address1 => grp_linear_forward_no_mu_fu_778_v77_0_0_address1,
        v77_0_0_ce1 => grp_linear_forward_no_mu_fu_778_v77_0_0_ce1,
        v77_0_0_q1 => grp_linear_forward_no_mu_fu_778_v77_0_0_q1,
        v77_1_0_address0 => grp_linear_forward_no_mu_fu_778_v77_1_0_address0,
        v77_1_0_ce0 => grp_linear_forward_no_mu_fu_778_v77_1_0_ce0,
        v77_1_0_q0 => grp_linear_forward_no_mu_fu_778_v77_1_0_q0,
        v77_1_0_address1 => grp_linear_forward_no_mu_fu_778_v77_1_0_address1,
        v77_1_0_ce1 => grp_linear_forward_no_mu_fu_778_v77_1_0_ce1,
        v77_1_0_q1 => grp_linear_forward_no_mu_fu_778_v77_1_0_q1,
        v77_2_0_address0 => grp_linear_forward_no_mu_fu_778_v77_2_0_address0,
        v77_2_0_ce0 => grp_linear_forward_no_mu_fu_778_v77_2_0_ce0,
        v77_2_0_q0 => grp_linear_forward_no_mu_fu_778_v77_2_0_q0,
        v77_2_0_address1 => grp_linear_forward_no_mu_fu_778_v77_2_0_address1,
        v77_2_0_ce1 => grp_linear_forward_no_mu_fu_778_v77_2_0_ce1,
        v77_2_0_q1 => grp_linear_forward_no_mu_fu_778_v77_2_0_q1,
        v77_3_0_address0 => grp_linear_forward_no_mu_fu_778_v77_3_0_address0,
        v77_3_0_ce0 => grp_linear_forward_no_mu_fu_778_v77_3_0_ce0,
        v77_3_0_q0 => grp_linear_forward_no_mu_fu_778_v77_3_0_q0,
        v77_3_0_address1 => grp_linear_forward_no_mu_fu_778_v77_3_0_address1,
        v77_3_0_ce1 => grp_linear_forward_no_mu_fu_778_v77_3_0_ce1,
        v77_3_0_q1 => grp_linear_forward_no_mu_fu_778_v77_3_0_q1,
        v78_0_V_read => reg_931,
        v79_address0 => grp_linear_forward_no_mu_fu_778_v79_address0,
        v79_ce0 => grp_linear_forward_no_mu_fu_778_v79_ce0,
        v79_q0 => grp_linear_forward_no_mu_fu_778_v79_q0,
        v79_address1 => grp_linear_forward_no_mu_fu_778_v79_address1,
        v79_ce1 => grp_linear_forward_no_mu_fu_778_v79_ce1,
        v79_q1 => grp_linear_forward_no_mu_fu_778_v79_q1,
        v80_V => grp_linear_forward_no_mu_fu_778_v80_V,
        v81_V_address0 => grp_linear_forward_no_mu_fu_778_v81_V_address0,
        v81_V_ce0 => grp_linear_forward_no_mu_fu_778_v81_V_ce0,
        v81_V_we0 => grp_linear_forward_no_mu_fu_778_v81_V_we0,
        v81_V_d0 => grp_linear_forward_no_mu_fu_778_v81_V_d0);

    grp_rms_norm_fu_803 : component rms_norm
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_rms_norm_fu_803_ap_start,
        ap_done => grp_rms_norm_fu_803_ap_done,
        ap_idle => grp_rms_norm_fu_803_ap_idle,
        ap_ready => grp_rms_norm_fu_803_ap_ready,
        v0_V_address0 => grp_rms_norm_fu_803_v0_V_address0,
        v0_V_ce0 => grp_rms_norm_fu_803_v0_V_ce0,
        v0_V_q0 => grp_rms_norm_fu_803_v0_V_q0,
        v1_V_address0 => grp_rms_norm_fu_803_v1_V_address0,
        v1_V_ce0 => grp_rms_norm_fu_803_v1_V_ce0,
        v1_V_q0 => grp_rms_norm_fu_803_v1_V_q0,
        v3_0_V_address0 => grp_rms_norm_fu_803_v3_0_V_address0,
        v3_0_V_ce0 => grp_rms_norm_fu_803_v3_0_V_ce0,
        v3_0_V_we0 => grp_rms_norm_fu_803_v3_0_V_we0,
        v3_0_V_d0 => grp_rms_norm_fu_803_v3_0_V_d0);

    grp_softmax_fu_833 : component softmax
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_softmax_fu_833_ap_start,
        ap_done => grp_softmax_fu_833_ap_done,
        ap_idle => grp_softmax_fu_833_ap_idle,
        ap_ready => grp_softmax_fu_833_ap_ready,
        v213_0_V_address0 => grp_softmax_fu_833_v213_0_V_address0,
        v213_0_V_ce0 => grp_softmax_fu_833_v213_0_V_ce0,
        v213_0_V_q0 => attn_weights_0_V_q0,
        v214_0_V_address0 => grp_softmax_fu_833_v214_0_V_address0,
        v214_0_V_ce0 => grp_softmax_fu_833_v214_0_V_ce0,
        v214_0_V_we0 => grp_softmax_fu_833_v214_0_V_we0,
        v214_0_V_d0 => grp_softmax_fu_833_v214_0_V_d0,
        v214_0_V_q0 => softmax_attn_weights_q0);

    grp_apply_rotary_pos_emb_fu_859 : component apply_rotary_pos_emb
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_apply_rotary_pos_emb_fu_859_ap_start,
        ap_done => grp_apply_rotary_pos_emb_fu_859_ap_done,
        ap_idle => grp_apply_rotary_pos_emb_fu_859_ap_idle,
        ap_ready => grp_apply_rotary_pos_emb_fu_859_ap_ready,
        v151_V_address0 => grp_apply_rotary_pos_emb_fu_859_v151_V_address0,
        v151_V_ce0 => grp_apply_rotary_pos_emb_fu_859_v151_V_ce0,
        v151_V_q0 => v261_V_q0,
        v152_V_address0 => grp_apply_rotary_pos_emb_fu_859_v152_V_address0,
        v152_V_ce0 => grp_apply_rotary_pos_emb_fu_859_v152_V_ce0,
        v152_V_q0 => v262_V_q0,
        v153_0_V_address0 => grp_apply_rotary_pos_emb_fu_859_v153_0_V_address0,
        v153_0_V_ce0 => grp_apply_rotary_pos_emb_fu_859_v153_0_V_ce0,
        v153_0_V_we0 => grp_apply_rotary_pos_emb_fu_859_v153_0_V_we0,
        v153_0_V_d0 => grp_apply_rotary_pos_emb_fu_859_v153_0_V_d0,
        v154_0_V_address0 => grp_apply_rotary_pos_emb_fu_859_v154_0_V_address0,
        v154_0_V_ce0 => grp_apply_rotary_pos_emb_fu_859_v154_0_V_ce0,
        v154_0_V_we0 => grp_apply_rotary_pos_emb_fu_859_v154_0_V_we0,
        v154_0_V_d0 => grp_apply_rotary_pos_emb_fu_859_v154_0_V_d0,
        q_proj_V_0_address0 => grp_apply_rotary_pos_emb_fu_859_q_proj_V_0_address0,
        q_proj_V_0_ce0 => grp_apply_rotary_pos_emb_fu_859_q_proj_V_0_ce0,
        q_proj_V_0_q0 => q_proj_V_0_q0,
        q_proj_V_0_address1 => grp_apply_rotary_pos_emb_fu_859_q_proj_V_0_address1,
        q_proj_V_0_ce1 => grp_apply_rotary_pos_emb_fu_859_q_proj_V_0_ce1,
        q_proj_V_0_q1 => q_proj_V_0_q1,
        k_proj_V_0_address0 => grp_apply_rotary_pos_emb_fu_859_k_proj_V_0_address0,
        k_proj_V_0_ce0 => grp_apply_rotary_pos_emb_fu_859_k_proj_V_0_ce0,
        k_proj_V_0_q0 => k_proj_V_0_q0,
        k_proj_V_0_address1 => grp_apply_rotary_pos_emb_fu_859_k_proj_V_0_address1,
        k_proj_V_0_ce1 => grp_apply_rotary_pos_emb_fu_859_k_proj_V_0_ce1,
        k_proj_V_0_q1 => k_proj_V_0_q1);

    grp_quantize_activation_fu_873 : component quantize_activation
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_quantize_activation_fu_873_ap_start,
        ap_done => grp_quantize_activation_fu_873_ap_done,
        ap_idle => grp_quantize_activation_fu_873_ap_idle,
        ap_ready => grp_quantize_activation_fu_873_ap_ready,
        v22_0_V_address0 => grp_quantize_activation_fu_873_v22_0_V_address0,
        v22_0_V_ce0 => grp_quantize_activation_fu_873_v22_0_V_ce0,
        v22_0_V_q0 => grp_quantize_activation_fu_873_v22_0_V_q0,
        v24_0_0_address0 => grp_quantize_activation_fu_873_v24_0_0_address0,
        v24_0_0_ce0 => grp_quantize_activation_fu_873_v24_0_0_ce0,
        v24_0_0_we0 => grp_quantize_activation_fu_873_v24_0_0_we0,
        v24_0_0_d0 => grp_quantize_activation_fu_873_v24_0_0_d0,
        v24_1_0_address0 => grp_quantize_activation_fu_873_v24_1_0_address0,
        v24_1_0_ce0 => grp_quantize_activation_fu_873_v24_1_0_ce0,
        v24_1_0_we0 => grp_quantize_activation_fu_873_v24_1_0_we0,
        v24_1_0_d0 => grp_quantize_activation_fu_873_v24_1_0_d0,
        v24_2_0_address0 => grp_quantize_activation_fu_873_v24_2_0_address0,
        v24_2_0_ce0 => grp_quantize_activation_fu_873_v24_2_0_ce0,
        v24_2_0_we0 => grp_quantize_activation_fu_873_v24_2_0_we0,
        v24_2_0_d0 => grp_quantize_activation_fu_873_v24_2_0_d0,
        v24_3_0_address0 => grp_quantize_activation_fu_873_v24_3_0_address0,
        v24_3_0_ce0 => grp_quantize_activation_fu_873_v24_3_0_ce0,
        v24_3_0_we0 => grp_quantize_activation_fu_873_v24_3_0_we0,
        v24_3_0_d0 => grp_quantize_activation_fu_873_v24_3_0_d0,
        ap_return => grp_quantize_activation_fu_873_ap_return);

    grp_cache_update_fu_890 : component cache_update
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cache_update_fu_890_ap_start,
        ap_done => grp_cache_update_fu_890_ap_done,
        ap_idle => grp_cache_update_fu_890_ap_idle,
        ap_ready => grp_cache_update_fu_890_ap_ready,
        v181_V_address0 => grp_cache_update_fu_890_v181_V_address0,
        v181_V_ce0 => grp_cache_update_fu_890_v181_V_ce0,
        v181_V_q0 => grp_cache_update_fu_890_v181_V_q0,
        v182_0_V_address0 => grp_cache_update_fu_890_v182_0_V_address0,
        v182_0_V_ce0 => grp_cache_update_fu_890_v182_0_V_ce0,
        v182_0_V_q0 => grp_cache_update_fu_890_v182_0_V_q0,
        v183_V_address0 => grp_cache_update_fu_890_v183_V_address0,
        v183_V_ce0 => grp_cache_update_fu_890_v183_V_ce0,
        v183_V_we0 => grp_cache_update_fu_890_v183_V_we0,
        v183_V_d0 => grp_cache_update_fu_890_v183_V_d0);

    grp_GEMM_3D_float_fu_900 : component GEMM_3D_float
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_GEMM_3D_float_fu_900_ap_start,
        ap_done => grp_GEMM_3D_float_fu_900_ap_done,
        ap_idle => grp_GEMM_3D_float_fu_900_ap_idle,
        ap_ready => grp_GEMM_3D_float_fu_900_ap_ready,
        v198_0_V_address0 => grp_GEMM_3D_float_fu_900_v198_0_V_address0,
        v198_0_V_ce0 => grp_GEMM_3D_float_fu_900_v198_0_V_ce0,
        v198_0_V_q0 => q_embed_0_V_q0,
        v200_0_V_address0 => grp_GEMM_3D_float_fu_900_v200_0_V_address0,
        v200_0_V_ce0 => grp_GEMM_3D_float_fu_900_v200_0_V_ce0,
        v200_0_V_we0 => grp_GEMM_3D_float_fu_900_v200_0_V_we0,
        v200_0_V_d0 => grp_GEMM_3D_float_fu_900_v200_0_V_d0,
        v200_0_V_q0 => attn_weights_0_V_q0,
        k_proj_transposed_V_address0 => grp_GEMM_3D_float_fu_900_k_proj_transposed_V_address0,
        k_proj_transposed_V_ce0 => grp_GEMM_3D_float_fu_900_k_proj_transposed_V_ce0,
        k_proj_transposed_V_q0 => k_proj_transposed_V_q0);

    grp_GEMM_3D_float2_fu_908 : component GEMM_3D_float2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_GEMM_3D_float2_fu_908_ap_start,
        ap_done => grp_GEMM_3D_float2_fu_908_ap_done,
        ap_idle => grp_GEMM_3D_float2_fu_908_ap_idle,
        ap_ready => grp_GEMM_3D_float2_fu_908_ap_ready,
        v240_0_V_address0 => grp_GEMM_3D_float2_fu_908_v240_0_V_address0,
        v240_0_V_ce0 => grp_GEMM_3D_float2_fu_908_v240_0_V_ce0,
        v240_0_V_q0 => softmax_attn_weights_q0,
        v241_V_address0 => grp_GEMM_3D_float2_fu_908_v241_V_address0,
        v241_V_ce0 => grp_GEMM_3D_float2_fu_908_v241_V_ce0,
        v241_V_q0 => updated_v_cache_V_q0,
        v242_0_V_address0 => grp_GEMM_3D_float2_fu_908_v242_0_V_address0,
        v242_0_V_ce0 => grp_GEMM_3D_float2_fu_908_v242_0_V_ce0,
        v242_0_V_we0 => grp_GEMM_3D_float2_fu_908_v242_0_V_we0,
        v242_0_V_d0 => grp_GEMM_3D_float2_fu_908_v242_0_V_d0,
        v242_0_V_q0 => attn_output_0_V_q0);

    grp_transpose_last_two_d_fu_915 : component transpose_last_two_d
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_transpose_last_two_d_fu_915_ap_start,
        ap_done => grp_transpose_last_two_d_fu_915_ap_done,
        ap_idle => grp_transpose_last_two_d_fu_915_ap_idle,
        ap_ready => grp_transpose_last_two_d_fu_915_ap_ready,
        v192_V_address0 => grp_transpose_last_two_d_fu_915_v192_V_address0,
        v192_V_ce0 => grp_transpose_last_two_d_fu_915_v192_V_ce0,
        v192_V_q0 => updated_k_cache_V_q0,
        v193_V_address0 => grp_transpose_last_two_d_fu_915_v193_V_address0,
        v193_V_ce0 => grp_transpose_last_two_d_fu_915_v193_V_ce0,
        v193_V_we0 => grp_transpose_last_two_d_fu_915_v193_V_we0,
        v193_V_d0 => grp_transpose_last_two_d_fu_915_v193_V_d0);

    grp_reshape_2D_to_3D_fu_922 : component reshape_2D_to_3D
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_reshape_2D_to_3D_fu_922_ap_start,
        ap_done => grp_reshape_2D_to_3D_fu_922_ap_done,
        ap_idle => grp_reshape_2D_to_3D_fu_922_ap_idle,
        ap_ready => grp_reshape_2D_to_3D_fu_922_ap_ready,
        v135_V_address0 => grp_reshape_2D_to_3D_fu_922_v135_V_address0,
        v135_V_ce0 => grp_reshape_2D_to_3D_fu_922_v135_V_ce0,
        v135_V_q0 => grp_reshape_2D_to_3D_fu_922_v135_V_q0,
        v136_0_V_address0 => grp_reshape_2D_to_3D_fu_922_v136_0_V_address0,
        v136_0_V_ce0 => grp_reshape_2D_to_3D_fu_922_v136_0_V_ce0,
        v136_0_V_we0 => grp_reshape_2D_to_3D_fu_922_v136_0_V_we0,
        v136_0_V_d0 => grp_reshape_2D_to_3D_fu_922_v136_0_V_d0);

    attention_mul_46nvdy_U85 : component attention_mul_46nvdy
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 46,
        din1_WIDTH => 44,
        dout_WIDTH => 89)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1517_p0,
        din1 => shl_ln_fu_1506_p3,
        ce => ap_const_logic_1,
        dout => grp_fu_1517_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_GEMM_3D_float2_fu_908_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_GEMM_3D_float2_fu_908_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln611_fu_1638_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
                    grp_GEMM_3D_float2_fu_908_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_GEMM_3D_float2_fu_908_ap_ready = ap_const_logic_1)) then 
                    grp_GEMM_3D_float2_fu_908_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_GEMM_3D_float_fu_900_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_GEMM_3D_float_fu_900_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln564_fu_1370_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
                    grp_GEMM_3D_float_fu_900_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_GEMM_3D_float_fu_900_ap_ready = ap_const_logic_1)) then 
                    grp_GEMM_3D_float_fu_900_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_apply_rotary_pos_emb_fu_859_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_apply_rotary_pos_emb_fu_859_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln528_fu_1068_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                    grp_apply_rotary_pos_emb_fu_859_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_apply_rotary_pos_emb_fu_859_ap_ready = ap_const_logic_1)) then 
                    grp_apply_rotary_pos_emb_fu_859_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cache_update_fu_890_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_cache_update_fu_890_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state28) or ((icmp_ln545_fu_1251_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24)))) then 
                    grp_cache_update_fu_890_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cache_update_fu_890_ap_ready = ap_const_logic_1)) then 
                    grp_cache_update_fu_890_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_linear_forward_no_mu_fu_778_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_linear_forward_no_mu_fu_778_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10) or ((icmp_ln653_fu_1847_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state54)) or ((icmp_ln485_fu_987_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
                    grp_linear_forward_no_mu_fu_778_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_linear_forward_no_mu_fu_778_ap_ready = ap_const_logic_1)) then 
                    grp_linear_forward_no_mu_fu_778_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_quantize_activation_fu_873_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_quantize_activation_fu_873_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    grp_quantize_activation_fu_873_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_quantize_activation_fu_873_ap_ready = ap_const_logic_1)) then 
                    grp_quantize_activation_fu_873_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_reshape_2D_to_3D_fu_922_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_reshape_2D_to_3D_fu_922_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                    grp_reshape_2D_to_3D_fu_922_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_reshape_2D_to_3D_fu_922_ap_ready = ap_const_logic_1)) then 
                    grp_reshape_2D_to_3D_fu_922_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_rms_norm_fu_803_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_rms_norm_fu_803_ap_start_reg <= ap_const_logic_0;
            else
                if ((((icmp_ln635_fu_1830_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state50)) or ((icmp_ln454_fu_936_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
                    grp_rms_norm_fu_803_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_rms_norm_fu_803_ap_ready = ap_const_logic_1)) then 
                    grp_rms_norm_fu_803_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_softmax_fu_833_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_softmax_fu_833_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln602_fu_1574_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state40))) then 
                    grp_softmax_fu_833_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_softmax_fu_833_ap_ready = ap_const_logic_1)) then 
                    grp_softmax_fu_833_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_transpose_last_two_d_fu_915_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_transpose_last_two_d_fu_915_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
                    grp_transpose_last_two_d_fu_915_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_transpose_last_two_d_fu_915_ap_ready = ap_const_logic_1)) then 
                    grp_transpose_last_two_d_fu_915_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    d4_0_0_reg_745_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
                d4_0_0_reg_745 <= add_ln627_reg_2176;
            elsif (((icmp_ln626_fu_1719_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state47))) then 
                d4_0_0_reg_745 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    h7_0_0_reg_734_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln627_fu_1795_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state48))) then 
                h7_0_0_reg_734 <= add_ln626_reg_2158;
            elsif (((icmp_ln621_fu_1702_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
                h7_0_0_reg_734 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    i10_0_reg_657_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln576_fu_1472_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
                i10_0_reg_657 <= i10_reg_2050;
            elsif (((grp_GEMM_3D_float_fu_900_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
                i10_0_reg_657 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    k9_0_0_reg_668_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
                k9_0_0_reg_668 <= add_ln576_reg_2063;
            elsif (((icmp_ln574_fu_1434_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33))) then 
                k9_0_0_reg_668 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    v272_0_0_reg_481_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                v272_0_0_reg_481 <= ap_const_lv11_0;
            elsif (((icmp_ln454_fu_936_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                v272_0_0_reg_481 <= add_ln454_fu_942_p2;
            end if; 
        end if;
    end process;

    v281_0_0_reg_492_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_quantize_activation_fu_873_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                v281_0_0_reg_492 <= ap_const_lv11_0;
            elsif (((icmp_ln473_fu_953_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                v281_0_0_reg_492 <= add_ln473_fu_959_p2;
            end if; 
        end if;
    end process;

    v284_0_0_reg_503_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln473_fu_953_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                v284_0_0_reg_503 <= ap_const_lv11_0;
            elsif (((icmp_ln479_fu_970_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                v284_0_0_reg_503 <= add_ln479_fu_976_p2;
            end if; 
        end if;
    end process;

    v287_0_0_reg_514_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln479_fu_970_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                v287_0_0_reg_514 <= ap_const_lv11_0;
            elsif (((icmp_ln485_fu_987_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                v287_0_0_reg_514 <= add_ln485_fu_993_p2;
            end if; 
        end if;
    end process;

    v301_0_reg_525_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln522_fu_1042_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                v301_0_reg_525 <= v301_reg_1919;
            elsif (((grp_reshape_2D_to_3D_fu_922_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                v301_0_reg_525 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    v303_0_0_reg_536_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln520_fu_1004_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                v303_0_0_reg_536 <= ap_const_lv7_0;
            elsif (((icmp_ln522_fu_1042_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                v303_0_0_reg_536 <= add_ln522_fu_1048_p2;
            end if; 
        end if;
    end process;

    v305_0_reg_547_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln520_fu_1004_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                v305_0_reg_547 <= ap_const_lv5_0;
            elsif (((icmp_ln530_fu_1106_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                v305_0_reg_547 <= v305_reg_1940;
            end if; 
        end if;
    end process;

    v307_0_0_reg_558_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln528_fu_1068_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                v307_0_0_reg_558 <= ap_const_lv7_0;
            elsif (((icmp_ln530_fu_1106_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                v307_0_0_reg_558 <= add_ln530_fu_1112_p2;
            end if; 
        end if;
    end process;

    v309_0_reg_569_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln538_fu_1178_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                v309_0_reg_569 <= v309_reg_1961;
            elsif (((grp_apply_rotary_pos_emb_fu_859_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                v309_0_reg_569 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    v310_0_reg_580_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln539_fu_1225_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                v310_0_reg_580 <= v310_reg_1974;
            elsif (((icmp_ln537_fu_1132_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                v310_0_reg_580 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    v311_0_reg_591_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln538_fu_1178_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                v311_0_reg_591 <= ap_const_lv7_0;
            elsif (((icmp_ln539_fu_1225_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                v311_0_reg_591 <= v311_fu_1231_p2;
            end if; 
        end if;
    end process;

    v313_0_reg_602_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln537_fu_1132_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                v313_0_reg_602 <= ap_const_lv5_0;
            elsif (((icmp_ln546_fu_1297_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
                v313_0_reg_602 <= v313_reg_1995;
            end if; 
        end if;
    end process;

    v314_0_reg_613_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln547_fu_1344_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                v314_0_reg_613 <= v314_reg_2008;
            elsif (((icmp_ln545_fu_1251_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                v314_0_reg_613 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    v315_0_reg_624_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln546_fu_1297_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
                v315_0_reg_624 <= ap_const_lv7_0;
            elsif (((icmp_ln547_fu_1344_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                v315_0_reg_624 <= v315_fu_1350_p2;
            end if; 
        end if;
    end process;

    v321_0_reg_635_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln566_fu_1408_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
                v321_0_reg_635 <= v321_reg_2029;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state29) and (ap_const_boolean_0 = ap_block_state29_on_subcall_done))) then 
                v321_0_reg_635 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    v323_0_0_reg_646_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln564_fu_1370_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
                v323_0_0_reg_646 <= ap_const_lv3_0;
            elsif (((icmp_ln566_fu_1408_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
                v323_0_0_reg_646 <= add_ln566_fu_1414_p2;
            end if; 
        end if;
    end process;

    v341_0_reg_679_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln574_fu_1434_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33))) then 
                v341_0_reg_679 <= ap_const_lv5_0;
            elsif (((icmp_ln604_fu_1612_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state41))) then 
                v341_0_reg_679 <= v341_reg_2108;
            end if; 
        end if;
    end process;

    v343_0_0_reg_690_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln602_fu_1574_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state40))) then 
                v343_0_0_reg_690 <= ap_const_lv3_0;
            elsif (((icmp_ln604_fu_1612_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state41))) then 
                v343_0_0_reg_690 <= add_ln604_fu_1618_p2;
            end if; 
        end if;
    end process;

    v345_0_reg_701_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln613_fu_1676_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state44))) then 
                v345_0_reg_701 <= v345_reg_2129;
            elsif (((grp_softmax_fu_833_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
                v345_0_reg_701 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    v347_0_0_reg_712_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln611_fu_1638_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
                v347_0_0_reg_712 <= ap_const_lv7_0;
            elsif (((icmp_ln613_fu_1676_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state44))) then 
                v347_0_0_reg_712 <= add_ln613_fu_1682_p2;
            end if; 
        end if;
    end process;

    v350_0_0_reg_723_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_GEMM_3D_float2_fu_908_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state45))) then 
                v350_0_0_reg_723 <= ap_const_lv11_0;
            elsif (((icmp_ln621_fu_1702_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
                v350_0_0_reg_723 <= add_ln621_fu_1708_p2;
            end if; 
        end if;
    end process;

    v357_0_0_reg_756_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln626_fu_1719_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state47))) then 
                v357_0_0_reg_756 <= ap_const_lv11_0;
            elsif (((icmp_ln635_fu_1830_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state50))) then 
                v357_0_0_reg_756 <= add_ln635_fu_1836_p2;
            end if; 
        end if;
    end process;

    v365_0_0_reg_767_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_quantize_activation_fu_873_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state53))) then 
                v365_0_0_reg_767 <= ap_const_lv11_0;
            elsif (((icmp_ln653_fu_1847_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state54))) then 
                v365_0_0_reg_767 <= add_ln653_fu_1853_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                add_ln576_reg_2063 <= add_ln576_fu_1478_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state47)) then
                add_ln626_reg_2158 <= add_ln626_fu_1725_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state48)) then
                add_ln627_reg_2176 <= add_ln627_fu_1801_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln627_fu_1795_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state48))) then
                add_ln629_reg_2186 <= add_ln629_fu_1817_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln576_fu_1472_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34))) then
                attn_weights_0_V_ad_1_reg_2068 <= sext_ln577_fu_1493_p1(7 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then
                attn_weights_0_V_lo_reg_2073 <= attn_weights_0_V_q0;
                tmp_94_reg_2078 <= attn_weights_0_V_q0(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                i10_reg_2050 <= i10_fu_1440_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then
                mul_ln1148_reg_2089 <= grp_fu_1517_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((grp_quantize_activation_fu_873_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state53)) or ((grp_quantize_activation_fu_873_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then
                reg_931 <= grp_quantize_activation_fu_873_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state38)) then
                select_ln1148_reg_2099 <= select_ln1148_fu_1548_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln537_fu_1132_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    sext_ln203_2_reg_1966(9 downto 1) <= sext_ln203_2_fu_1174_p1(9 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln545_fu_1251_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    sext_ln203_4_reg_2000(9 downto 1) <= sext_ln203_4_fu_1293_p1(9 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln611_fu_1638_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state43))) then
                    sub_ln203_10_reg_2134(11 downto 5) <= sub_ln203_10_fu_1670_p2(11 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln528_fu_1068_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    sub_ln203_3_reg_1945(11 downto 5) <= sub_ln203_3_fu_1100_p2(11 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln538_fu_1178_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    sub_ln203_6_reg_1979(14 downto 5) <= sub_ln203_6_fu_1219_p2(14 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln564_fu_1370_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                    sub_ln203_7_reg_2034(7 downto 1) <= sub_ln203_7_fu_1402_p2(7 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln546_fu_1297_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    sub_ln203_8_reg_2013(14 downto 5) <= sub_ln203_8_fu_1338_p2(14 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln602_fu_1574_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state40))) then
                    sub_ln203_9_reg_2113(7 downto 1) <= sub_ln203_9_fu_1606_p2(7 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln520_fu_1004_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    sub_ln203_reg_1924(11 downto 5) <= sub_ln203_fu_1036_p2(11 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln574_fu_1434_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                    sub_ln577_reg_2055(7 downto 1) <= sub_ln577_fu_1466_p2(7 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln626_fu_1719_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state47))) then
                    sub_ln628_reg_2163(11 downto 5) <= sub_ln628_fu_1751_p2(11 downto 5);
                    sub_ln629_reg_2168(11 downto 5) <= sub_ln629_fu_1785_p2(11 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_94_reg_2078 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37))) then
                tmp_96_reg_2094 <= grp_fu_1517_p2(88 downto 60);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                v301_reg_1919 <= v301_fu_1010_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                v305_reg_1940 <= v305_fu_1074_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                v309_reg_1961 <= v309_fu_1138_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                v310_reg_1974 <= v310_fu_1184_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                v313_reg_1995 <= v313_fu_1257_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                v314_reg_2008 <= v314_fu_1303_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then
                v321_reg_2029 <= v321_fu_1376_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state40)) then
                v341_reg_2108 <= v341_fu_1580_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state43)) then
                v345_reg_2129 <= v345_fu_1644_p2;
            end if;
        end if;
    end process;
    sub_ln203_reg_1924(4 downto 0) <= "00000";
    sub_ln203_3_reg_1945(4 downto 0) <= "00000";
    sext_ln203_2_reg_1966(0) <= '0';
    sub_ln203_6_reg_1979(4 downto 0) <= "00000";
    sext_ln203_4_reg_2000(0) <= '0';
    sub_ln203_8_reg_2013(4 downto 0) <= "00000";
    sub_ln203_7_reg_2034(0) <= '0';
    sub_ln577_reg_2055(0) <= '0';
    sub_ln203_9_reg_2113(0) <= '0';
    sub_ln203_10_reg_2134(4 downto 0) <= "00000";
    sub_ln628_reg_2163(4 downto 0) <= "00000";
    sub_ln629_reg_2168(4 downto 0) <= "00000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state5, grp_quantize_activation_fu_873_ap_done, ap_CS_fsm_state53, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state16, icmp_ln520_fu_1004_p2, ap_CS_fsm_state17, ap_CS_fsm_state18, icmp_ln528_fu_1068_p2, ap_CS_fsm_state19, ap_CS_fsm_state21, icmp_ln537_fu_1132_p2, ap_CS_fsm_state22, icmp_ln538_fu_1178_p2, ap_CS_fsm_state23, ap_CS_fsm_state24, icmp_ln545_fu_1251_p2, ap_CS_fsm_state25, icmp_ln546_fu_1297_p2, ap_CS_fsm_state26, ap_CS_fsm_state30, icmp_ln564_fu_1370_p2, ap_CS_fsm_state31, ap_CS_fsm_state33, icmp_ln574_fu_1434_p2, ap_CS_fsm_state34, icmp_ln576_fu_1472_p2, ap_CS_fsm_state40, icmp_ln602_fu_1574_p2, ap_CS_fsm_state41, ap_CS_fsm_state43, icmp_ln611_fu_1638_p2, ap_CS_fsm_state44, ap_CS_fsm_state46, ap_CS_fsm_state47, icmp_ln626_fu_1719_p2, ap_CS_fsm_state48, icmp_ln627_fu_1795_p2, ap_CS_fsm_state50, ap_CS_fsm_state54, grp_linear_forward_no_mu_fu_778_ap_done, grp_rms_norm_fu_803_ap_done, grp_softmax_fu_833_ap_done, grp_apply_rotary_pos_emb_fu_859_ap_done, grp_cache_update_fu_890_ap_done, grp_GEMM_3D_float_fu_900_ap_done, grp_GEMM_3D_float2_fu_908_ap_done, grp_reshape_2D_to_3D_fu_922_ap_done, icmp_ln454_fu_936_p2, icmp_ln473_fu_953_p2, icmp_ln479_fu_970_p2, icmp_ln485_fu_987_p2, ap_CS_fsm_state15, icmp_ln522_fu_1042_p2, icmp_ln530_fu_1106_p2, ap_CS_fsm_state20, icmp_ln539_fu_1225_p2, icmp_ln547_fu_1344_p2, ap_CS_fsm_state29, ap_block_state29_on_subcall_done, icmp_ln566_fu_1408_p2, ap_CS_fsm_state32, icmp_ln604_fu_1612_p2, ap_CS_fsm_state42, icmp_ln613_fu_1676_p2, icmp_ln621_fu_1702_p2, ap_CS_fsm_state45, icmp_ln635_fu_1830_p2, icmp_ln653_fu_1847_p2, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state55, ap_CS_fsm_state3, ap_CS_fsm_state51, ap_CS_fsm_state27, ap_block_state11_on_subcall_done, ap_block_state13_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln454_fu_936_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((grp_rms_norm_fu_803_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((grp_quantize_activation_fu_873_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((icmp_ln473_fu_953_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((icmp_ln479_fu_970_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((icmp_ln485_fu_987_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                if (((grp_linear_forward_no_mu_fu_778_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (ap_const_boolean_0 = ap_block_state11_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (ap_const_boolean_0 = ap_block_state13_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((grp_reshape_2D_to_3D_fu_922_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                if (((icmp_ln520_fu_1004_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state17 => 
                if (((icmp_ln522_fu_1042_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                if (((icmp_ln528_fu_1068_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state19 => 
                if (((icmp_ln530_fu_1106_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                if (((grp_apply_rotary_pos_emb_fu_859_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                if (((icmp_ln537_fu_1132_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state22 => 
                if (((icmp_ln538_fu_1178_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state23 => 
                if (((icmp_ln539_fu_1225_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state24 => 
                if (((icmp_ln545_fu_1251_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state25 => 
                if (((icmp_ln546_fu_1297_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state26 => 
                if (((icmp_ln547_fu_1344_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state27 => 
                if (((grp_cache_update_fu_890_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state29) and (ap_const_boolean_0 = ap_block_state29_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state30 => 
                if (((icmp_ln564_fu_1370_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_state31 => 
                if (((icmp_ln566_fu_1408_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state32 => 
                if (((grp_GEMM_3D_float_fu_900_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state32))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_state33 => 
                if (((icmp_ln574_fu_1434_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                    ap_NS_fsm <= ap_ST_fsm_state40;
                else
                    ap_NS_fsm <= ap_ST_fsm_state34;
                end if;
            when ap_ST_fsm_state34 => 
                if (((icmp_ln576_fu_1472_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state34))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state35;
                end if;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state40 => 
                if (((icmp_ln602_fu_1574_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state40))) then
                    ap_NS_fsm <= ap_ST_fsm_state41;
                else
                    ap_NS_fsm <= ap_ST_fsm_state42;
                end if;
            when ap_ST_fsm_state41 => 
                if (((icmp_ln604_fu_1612_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state41))) then
                    ap_NS_fsm <= ap_ST_fsm_state40;
                else
                    ap_NS_fsm <= ap_ST_fsm_state41;
                end if;
            when ap_ST_fsm_state42 => 
                if (((grp_softmax_fu_833_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state42))) then
                    ap_NS_fsm <= ap_ST_fsm_state43;
                else
                    ap_NS_fsm <= ap_ST_fsm_state42;
                end if;
            when ap_ST_fsm_state43 => 
                if (((icmp_ln611_fu_1638_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state43))) then
                    ap_NS_fsm <= ap_ST_fsm_state44;
                else
                    ap_NS_fsm <= ap_ST_fsm_state45;
                end if;
            when ap_ST_fsm_state44 => 
                if (((icmp_ln613_fu_1676_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state44))) then
                    ap_NS_fsm <= ap_ST_fsm_state43;
                else
                    ap_NS_fsm <= ap_ST_fsm_state44;
                end if;
            when ap_ST_fsm_state45 => 
                if (((grp_GEMM_3D_float2_fu_908_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state45))) then
                    ap_NS_fsm <= ap_ST_fsm_state46;
                else
                    ap_NS_fsm <= ap_ST_fsm_state45;
                end if;
            when ap_ST_fsm_state46 => 
                if (((icmp_ln621_fu_1702_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state46))) then
                    ap_NS_fsm <= ap_ST_fsm_state47;
                else
                    ap_NS_fsm <= ap_ST_fsm_state46;
                end if;
            when ap_ST_fsm_state47 => 
                if (((icmp_ln626_fu_1719_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state47))) then
                    ap_NS_fsm <= ap_ST_fsm_state50;
                else
                    ap_NS_fsm <= ap_ST_fsm_state48;
                end if;
            when ap_ST_fsm_state48 => 
                if (((icmp_ln627_fu_1795_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state48))) then
                    ap_NS_fsm <= ap_ST_fsm_state47;
                else
                    ap_NS_fsm <= ap_ST_fsm_state49;
                end if;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state50 => 
                if (((icmp_ln635_fu_1830_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state50))) then
                    ap_NS_fsm <= ap_ST_fsm_state50;
                else
                    ap_NS_fsm <= ap_ST_fsm_state51;
                end if;
            when ap_ST_fsm_state51 => 
                if (((grp_rms_norm_fu_803_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state51))) then
                    ap_NS_fsm <= ap_ST_fsm_state52;
                else
                    ap_NS_fsm <= ap_ST_fsm_state51;
                end if;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                if (((grp_quantize_activation_fu_873_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state53))) then
                    ap_NS_fsm <= ap_ST_fsm_state54;
                else
                    ap_NS_fsm <= ap_ST_fsm_state53;
                end if;
            when ap_ST_fsm_state54 => 
                if (((icmp_ln653_fu_1847_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state54))) then
                    ap_NS_fsm <= ap_ST_fsm_state54;
                else
                    ap_NS_fsm <= ap_ST_fsm_state55;
                end if;
            when ap_ST_fsm_state55 => 
                if (((grp_linear_forward_no_mu_fu_778_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state55))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state55;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln203_10_fu_1424_p2 <= std_logic_vector(unsigned(sub_ln203_7_reg_2034) + unsigned(zext_ln203_19_fu_1420_p1));
    add_ln203_11_fu_1360_p2 <= std_logic_vector(unsigned(sub_ln203_8_reg_2013) + unsigned(zext_ln203_20_fu_1356_p1));
    add_ln203_12_fu_1628_p2 <= std_logic_vector(unsigned(sub_ln203_9_reg_2113) + unsigned(zext_ln203_24_fu_1624_p1));
    add_ln203_13_fu_1692_p2 <= std_logic_vector(unsigned(sub_ln203_10_reg_2134) + unsigned(zext_ln203_25_fu_1688_p1));
    add_ln203_6_fu_1122_p2 <= std_logic_vector(unsigned(sub_ln203_3_reg_1945) + unsigned(zext_ln203_11_fu_1118_p1));
    add_ln203_7_fu_1194_p2 <= std_logic_vector(unsigned(zext_ln203_14_fu_1190_p1) + unsigned(sext_ln203_2_reg_1966));
    add_ln203_8_fu_1313_p2 <= std_logic_vector(unsigned(zext_ln203_16_fu_1309_p1) + unsigned(sext_ln203_4_reg_2000));
    add_ln203_9_fu_1241_p2 <= std_logic_vector(unsigned(sub_ln203_6_reg_1979) + unsigned(zext_ln203_17_fu_1237_p1));
    add_ln203_fu_1058_p2 <= std_logic_vector(unsigned(sub_ln203_reg_1924) + unsigned(zext_ln203_8_fu_1054_p1));
    add_ln454_fu_942_p2 <= std_logic_vector(unsigned(v272_0_0_reg_481) + unsigned(ap_const_lv11_1));
    add_ln473_fu_959_p2 <= std_logic_vector(unsigned(v281_0_0_reg_492) + unsigned(ap_const_lv11_1));
    add_ln479_fu_976_p2 <= std_logic_vector(unsigned(v284_0_0_reg_503) + unsigned(ap_const_lv11_1));
    add_ln485_fu_993_p2 <= std_logic_vector(unsigned(v287_0_0_reg_514) + unsigned(ap_const_lv11_1));
    add_ln522_fu_1048_p2 <= std_logic_vector(unsigned(v303_0_0_reg_536) + unsigned(ap_const_lv7_1));
    add_ln530_fu_1112_p2 <= std_logic_vector(unsigned(v307_0_0_reg_558) + unsigned(ap_const_lv7_1));
    add_ln566_fu_1414_p2 <= std_logic_vector(unsigned(v323_0_0_reg_646) + unsigned(ap_const_lv3_1));
    add_ln576_fu_1478_p2 <= std_logic_vector(unsigned(k9_0_0_reg_668) + unsigned(ap_const_lv3_1));
    add_ln577_fu_1488_p2 <= std_logic_vector(unsigned(sub_ln577_reg_2055) + unsigned(zext_ln577_1_fu_1484_p1));
    add_ln604_fu_1618_p2 <= std_logic_vector(unsigned(v343_0_0_reg_690) + unsigned(ap_const_lv3_1));
    add_ln613_fu_1682_p2 <= std_logic_vector(unsigned(v347_0_0_reg_712) + unsigned(ap_const_lv7_1));
    add_ln621_fu_1708_p2 <= std_logic_vector(unsigned(v350_0_0_reg_723) + unsigned(ap_const_lv11_1));
    add_ln626_fu_1725_p2 <= std_logic_vector(unsigned(h7_0_0_reg_734) + unsigned(ap_const_lv5_1));
    add_ln627_fu_1801_p2 <= std_logic_vector(unsigned(d4_0_0_reg_745) + unsigned(ap_const_lv7_1));
    add_ln628_fu_1807_p2 <= std_logic_vector(unsigned(sub_ln628_reg_2163) + unsigned(zext_ln627_fu_1791_p1));
    add_ln629_fu_1817_p2 <= std_logic_vector(unsigned(zext_ln627_fu_1791_p1) + unsigned(sub_ln629_reg_2168));
    add_ln635_fu_1836_p2 <= std_logic_vector(unsigned(v357_0_0_reg_756) + unsigned(ap_const_lv11_1));
    add_ln653_fu_1853_p2 <= std_logic_vector(unsigned(v365_0_0_reg_767) + unsigned(ap_const_lv11_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state11_on_subcall_done_assign_proc : process(grp_linear_forward_no_mu_fu_778_ap_done, grp_reshape_2D_to_3D_fu_922_ap_done)
    begin
                ap_block_state11_on_subcall_done <= ((grp_reshape_2D_to_3D_fu_922_ap_done = ap_const_logic_0) or (grp_linear_forward_no_mu_fu_778_ap_done = ap_const_logic_0));
    end process;


    ap_block_state13_on_subcall_done_assign_proc : process(grp_linear_forward_no_mu_fu_778_ap_done, grp_reshape_2D_to_3D_fu_922_ap_done)
    begin
                ap_block_state13_on_subcall_done <= ((grp_reshape_2D_to_3D_fu_922_ap_done = ap_const_logic_0) or (grp_linear_forward_no_mu_fu_778_ap_done = ap_const_logic_0));
    end process;


    ap_block_state29_on_subcall_done_assign_proc : process(grp_cache_update_fu_890_ap_done, grp_transpose_last_two_d_fu_915_ap_done)
    begin
                ap_block_state29_on_subcall_done <= ((grp_transpose_last_two_d_fu_915_ap_done = ap_const_logic_0) or (grp_cache_update_fu_890_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(grp_linear_forward_no_mu_fu_778_ap_done, ap_CS_fsm_state55)
    begin
        if (((grp_linear_forward_no_mu_fu_778_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state55))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_linear_forward_no_mu_fu_778_ap_done, ap_CS_fsm_state55)
    begin
        if (((grp_linear_forward_no_mu_fu_778_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state55))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    attn_output_0_V_address0_assign_proc : process(ap_CS_fsm_state44, ap_CS_fsm_state48, grp_GEMM_3D_float2_fu_908_v242_0_V_address0, ap_CS_fsm_state45, sext_ln203_7_fu_1697_p1, sext_ln628_fu_1812_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            attn_output_0_V_address0 <= sext_ln628_fu_1812_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            attn_output_0_V_address0 <= sext_ln203_7_fu_1697_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            attn_output_0_V_address0 <= grp_GEMM_3D_float2_fu_908_v242_0_V_address0;
        else 
            attn_output_0_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    attn_output_0_V_ce0_assign_proc : process(ap_CS_fsm_state44, ap_CS_fsm_state48, grp_GEMM_3D_float2_fu_908_v242_0_V_ce0, ap_CS_fsm_state45)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state44))) then 
            attn_output_0_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            attn_output_0_V_ce0 <= grp_GEMM_3D_float2_fu_908_v242_0_V_ce0;
        else 
            attn_output_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    attn_output_0_V_d0_assign_proc : process(ap_CS_fsm_state44, grp_GEMM_3D_float2_fu_908_v242_0_V_d0, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            attn_output_0_V_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            attn_output_0_V_d0 <= grp_GEMM_3D_float2_fu_908_v242_0_V_d0;
        else 
            attn_output_0_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    attn_output_0_V_we0_assign_proc : process(ap_CS_fsm_state44, grp_GEMM_3D_float2_fu_908_v242_0_V_we0, icmp_ln613_fu_1676_p2, ap_CS_fsm_state45)
    begin
        if (((icmp_ln613_fu_1676_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state44))) then 
            attn_output_0_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            attn_output_0_V_we0 <= grp_GEMM_3D_float2_fu_908_v242_0_V_we0;
        else 
            attn_output_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    attn_output_2D_V_address0_assign_proc : process(ap_CS_fsm_state46, grp_rms_norm_fu_803_v0_V_address0, ap_CS_fsm_state49, ap_CS_fsm_state51, zext_ln622_fu_1714_p1, zext_ln629_fu_1825_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            attn_output_2D_V_address0 <= zext_ln629_fu_1825_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            attn_output_2D_V_address0 <= zext_ln622_fu_1714_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            attn_output_2D_V_address0 <= grp_rms_norm_fu_803_v0_V_address0;
        else 
            attn_output_2D_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    attn_output_2D_V_ce0_assign_proc : process(ap_CS_fsm_state46, grp_rms_norm_fu_803_v0_V_ce0, ap_CS_fsm_state49, ap_CS_fsm_state51)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            attn_output_2D_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            attn_output_2D_V_ce0 <= grp_rms_norm_fu_803_v0_V_ce0;
        else 
            attn_output_2D_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    attn_output_2D_V_d0_assign_proc : process(ap_CS_fsm_state46, attn_output_0_V_q0, ap_CS_fsm_state49)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            attn_output_2D_V_d0 <= attn_output_0_V_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            attn_output_2D_V_d0 <= ap_const_lv32_0;
        else 
            attn_output_2D_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    attn_output_2D_V_we0_assign_proc : process(ap_CS_fsm_state46, icmp_ln621_fu_1702_p2, ap_CS_fsm_state49)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state49) or ((icmp_ln621_fu_1702_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46)))) then 
            attn_output_2D_V_we0 <= ap_const_logic_1;
        else 
            attn_output_2D_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    attn_weights_0_V_address0_assign_proc : process(ap_CS_fsm_state31, ap_CS_fsm_state34, attn_weights_0_V_ad_1_reg_2068, grp_softmax_fu_833_v213_0_V_address0, grp_GEMM_3D_float_fu_900_v200_0_V_address0, ap_CS_fsm_state32, ap_CS_fsm_state39, ap_CS_fsm_state42, sext_ln203_5_fu_1429_p1, sext_ln577_fu_1493_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            attn_weights_0_V_address0 <= attn_weights_0_V_ad_1_reg_2068;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            attn_weights_0_V_address0 <= sext_ln577_fu_1493_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            attn_weights_0_V_address0 <= sext_ln203_5_fu_1429_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            attn_weights_0_V_address0 <= grp_GEMM_3D_float_fu_900_v200_0_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            attn_weights_0_V_address0 <= grp_softmax_fu_833_v213_0_V_address0;
        else 
            attn_weights_0_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    attn_weights_0_V_ce0_assign_proc : process(ap_CS_fsm_state31, ap_CS_fsm_state34, grp_softmax_fu_833_v213_0_V_ce0, grp_GEMM_3D_float_fu_900_v200_0_V_ce0, ap_CS_fsm_state32, ap_CS_fsm_state39, ap_CS_fsm_state42)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state39))) then 
            attn_weights_0_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            attn_weights_0_V_ce0 <= grp_GEMM_3D_float_fu_900_v200_0_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            attn_weights_0_V_ce0 <= grp_softmax_fu_833_v213_0_V_ce0;
        else 
            attn_weights_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    attn_weights_0_V_d0_assign_proc : process(ap_CS_fsm_state31, grp_GEMM_3D_float_fu_900_v200_0_V_d0, ap_CS_fsm_state32, ap_CS_fsm_state39, select_ln1148_2_fu_1566_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            attn_weights_0_V_d0 <= select_ln1148_2_fu_1566_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            attn_weights_0_V_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            attn_weights_0_V_d0 <= grp_GEMM_3D_float_fu_900_v200_0_V_d0;
        else 
            attn_weights_0_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    attn_weights_0_V_we0_assign_proc : process(ap_CS_fsm_state31, grp_GEMM_3D_float_fu_900_v200_0_V_we0, icmp_ln566_fu_1408_p2, ap_CS_fsm_state32, ap_CS_fsm_state39)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state39) or ((icmp_ln566_fu_1408_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31)))) then 
            attn_weights_0_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            attn_weights_0_V_we0 <= grp_GEMM_3D_float_fu_900_v200_0_V_we0;
        else 
            attn_weights_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_GEMM_3D_float2_fu_908_ap_start <= grp_GEMM_3D_float2_fu_908_ap_start_reg;
    grp_GEMM_3D_float_fu_900_ap_start <= grp_GEMM_3D_float_fu_900_ap_start_reg;
    grp_apply_rotary_pos_emb_fu_859_ap_start <= grp_apply_rotary_pos_emb_fu_859_ap_start_reg;
    grp_cache_update_fu_890_ap_start <= grp_cache_update_fu_890_ap_start_reg;

    grp_cache_update_fu_890_v181_V_q0_assign_proc : process(v265_V_q0, v266_V_q0, ap_CS_fsm_state29, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_cache_update_fu_890_v181_V_q0 <= v266_V_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_cache_update_fu_890_v181_V_q0 <= v265_V_q0;
        else 
            grp_cache_update_fu_890_v181_V_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_cache_update_fu_890_v182_0_V_q0_assign_proc : process(v_proj_V_0_q0, k_embed_0_V_q0, ap_CS_fsm_state29, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_cache_update_fu_890_v182_0_V_q0 <= v_proj_V_0_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_cache_update_fu_890_v182_0_V_q0 <= k_embed_0_V_q0;
        else 
            grp_cache_update_fu_890_v182_0_V_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_1517_p0 <= ap_const_lv89_1A20D0357B2B(46 - 1 downto 0);
    grp_linear_forward_no_mu_fu_778_ap_start <= grp_linear_forward_no_mu_fu_778_ap_start_reg;

    grp_linear_forward_no_mu_fu_778_v77_0_0_q0_assign_proc : process(quantized_hidden_sta_3_q0, quantized_final_outp_3_q0, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_linear_forward_no_mu_fu_778_v77_0_0_q0 <= quantized_final_outp_3_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_linear_forward_no_mu_fu_778_v77_0_0_q0 <= quantized_hidden_sta_3_q0;
        else 
            grp_linear_forward_no_mu_fu_778_v77_0_0_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_778_v77_0_0_q1_assign_proc : process(quantized_hidden_sta_3_q1, quantized_final_outp_3_q1, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_linear_forward_no_mu_fu_778_v77_0_0_q1 <= quantized_final_outp_3_q1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_linear_forward_no_mu_fu_778_v77_0_0_q1 <= quantized_hidden_sta_3_q1;
        else 
            grp_linear_forward_no_mu_fu_778_v77_0_0_q1 <= "XXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_778_v77_1_0_q0_assign_proc : process(quantized_hidden_sta_2_q0, quantized_final_outp_2_q0, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_linear_forward_no_mu_fu_778_v77_1_0_q0 <= quantized_final_outp_2_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_linear_forward_no_mu_fu_778_v77_1_0_q0 <= quantized_hidden_sta_2_q0;
        else 
            grp_linear_forward_no_mu_fu_778_v77_1_0_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_778_v77_1_0_q1_assign_proc : process(quantized_hidden_sta_2_q1, quantized_final_outp_2_q1, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_linear_forward_no_mu_fu_778_v77_1_0_q1 <= quantized_final_outp_2_q1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_linear_forward_no_mu_fu_778_v77_1_0_q1 <= quantized_hidden_sta_2_q1;
        else 
            grp_linear_forward_no_mu_fu_778_v77_1_0_q1 <= "XXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_778_v77_2_0_q0_assign_proc : process(quantized_hidden_sta_1_q0, quantized_final_outp_1_q0, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_linear_forward_no_mu_fu_778_v77_2_0_q0 <= quantized_final_outp_1_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_linear_forward_no_mu_fu_778_v77_2_0_q0 <= quantized_hidden_sta_1_q0;
        else 
            grp_linear_forward_no_mu_fu_778_v77_2_0_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_778_v77_2_0_q1_assign_proc : process(quantized_hidden_sta_1_q1, quantized_final_outp_1_q1, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_linear_forward_no_mu_fu_778_v77_2_0_q1 <= quantized_final_outp_1_q1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_linear_forward_no_mu_fu_778_v77_2_0_q1 <= quantized_hidden_sta_1_q1;
        else 
            grp_linear_forward_no_mu_fu_778_v77_2_0_q1 <= "XXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_778_v77_3_0_q0_assign_proc : process(quantized_hidden_sta_q0, quantized_final_outp_q0, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_linear_forward_no_mu_fu_778_v77_3_0_q0 <= quantized_final_outp_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_linear_forward_no_mu_fu_778_v77_3_0_q0 <= quantized_hidden_sta_q0;
        else 
            grp_linear_forward_no_mu_fu_778_v77_3_0_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_778_v77_3_0_q1_assign_proc : process(quantized_hidden_sta_q1, quantized_final_outp_q1, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_linear_forward_no_mu_fu_778_v77_3_0_q1 <= quantized_final_outp_q1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            grp_linear_forward_no_mu_fu_778_v77_3_0_q1 <= quantized_hidden_sta_q1;
        else 
            grp_linear_forward_no_mu_fu_778_v77_3_0_q1 <= "XXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_778_v79_q0_assign_proc : process(v253_q0, v255_q0, v257_q0, v259_q0, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_linear_forward_no_mu_fu_778_v79_q0 <= v259_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_linear_forward_no_mu_fu_778_v79_q0 <= v257_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_linear_forward_no_mu_fu_778_v79_q0 <= v255_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_linear_forward_no_mu_fu_778_v79_q0 <= v253_q0;
        else 
            grp_linear_forward_no_mu_fu_778_v79_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_778_v79_q1_assign_proc : process(v253_q1, v255_q1, v257_q1, v259_q1, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_linear_forward_no_mu_fu_778_v79_q1 <= v259_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_linear_forward_no_mu_fu_778_v79_q1 <= v257_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_linear_forward_no_mu_fu_778_v79_q1 <= v255_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_linear_forward_no_mu_fu_778_v79_q1 <= v253_q1;
        else 
            grp_linear_forward_no_mu_fu_778_v79_q1 <= "XXXXXXXX";
        end if; 
    end process;


    grp_linear_forward_no_mu_fu_778_v80_V_assign_proc : process(v254_V, v256_V, v258_V, v260_V, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            grp_linear_forward_no_mu_fu_778_v80_V <= v260_V;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_linear_forward_no_mu_fu_778_v80_V <= v258_V;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_linear_forward_no_mu_fu_778_v80_V <= v256_V;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_linear_forward_no_mu_fu_778_v80_V <= v254_V;
        else 
            grp_linear_forward_no_mu_fu_778_v80_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_quantize_activation_fu_873_ap_start <= grp_quantize_activation_fu_873_ap_start_reg;

    grp_quantize_activation_fu_873_v22_0_V_q0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state53, rms_hidden_states_0_q0, rms_attn_output_0_V_q0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            grp_quantize_activation_fu_873_v22_0_V_q0 <= rms_attn_output_0_V_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_quantize_activation_fu_873_v22_0_V_q0 <= rms_hidden_states_0_q0;
        else 
            grp_quantize_activation_fu_873_v22_0_V_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_reshape_2D_to_3D_fu_922_ap_start <= grp_reshape_2D_to_3D_fu_922_ap_start_reg;

    grp_reshape_2D_to_3D_fu_922_v135_V_q0_assign_proc : process(q_proj_re_V_q0, k_proj_re_V_q0, v_proj_re_V_q0, ap_CS_fsm_state15, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_reshape_2D_to_3D_fu_922_v135_V_q0 <= v_proj_re_V_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_reshape_2D_to_3D_fu_922_v135_V_q0 <= k_proj_re_V_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_reshape_2D_to_3D_fu_922_v135_V_q0 <= q_proj_re_V_q0;
        else 
            grp_reshape_2D_to_3D_fu_922_v135_V_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_rms_norm_fu_803_ap_start <= grp_rms_norm_fu_803_ap_start_reg;

    grp_rms_norm_fu_803_v0_V_q0_assign_proc : process(v252_V_q0, attn_output_2D_V_q0, ap_CS_fsm_state3, ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            grp_rms_norm_fu_803_v0_V_q0 <= attn_output_2D_V_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_rms_norm_fu_803_v0_V_q0 <= v252_V_q0;
        else 
            grp_rms_norm_fu_803_v0_V_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_rms_norm_fu_803_v1_V_q0_assign_proc : process(v263_V_q0, v264_V_q0, ap_CS_fsm_state3, ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            grp_rms_norm_fu_803_v1_V_q0 <= v264_V_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_rms_norm_fu_803_v1_V_q0 <= v263_V_q0;
        else 
            grp_rms_norm_fu_803_v1_V_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_softmax_fu_833_ap_start <= grp_softmax_fu_833_ap_start_reg;
    grp_transpose_last_two_d_fu_915_ap_start <= grp_transpose_last_two_d_fu_915_ap_start_reg;
    i10_fu_1440_p2 <= std_logic_vector(unsigned(i10_0_reg_657) + unsigned(ap_const_lv5_1));
    icmp_ln454_fu_936_p2 <= "1" when (v272_0_0_reg_481 = ap_const_lv11_600) else "0";
    icmp_ln473_fu_953_p2 <= "1" when (v281_0_0_reg_492 = ap_const_lv11_600) else "0";
    icmp_ln479_fu_970_p2 <= "1" when (v284_0_0_reg_503 = ap_const_lv11_600) else "0";
    icmp_ln485_fu_987_p2 <= "1" when (v287_0_0_reg_514 = ap_const_lv11_600) else "0";
    icmp_ln520_fu_1004_p2 <= "1" when (v301_0_reg_525 = ap_const_lv5_10) else "0";
    icmp_ln522_fu_1042_p2 <= "1" when (v303_0_0_reg_536 = ap_const_lv7_60) else "0";
    icmp_ln528_fu_1068_p2 <= "1" when (v305_0_reg_547 = ap_const_lv5_10) else "0";
    icmp_ln530_fu_1106_p2 <= "1" when (v307_0_0_reg_558 = ap_const_lv7_60) else "0";
    icmp_ln537_fu_1132_p2 <= "1" when (v309_0_reg_569 = ap_const_lv5_10) else "0";
    icmp_ln538_fu_1178_p2 <= "1" when (v310_0_reg_580 = ap_const_lv3_6) else "0";
    icmp_ln539_fu_1225_p2 <= "1" when (v311_0_reg_591 = ap_const_lv7_60) else "0";
    icmp_ln545_fu_1251_p2 <= "1" when (v313_0_reg_602 = ap_const_lv5_10) else "0";
    icmp_ln546_fu_1297_p2 <= "1" when (v314_0_reg_613 = ap_const_lv3_6) else "0";
    icmp_ln547_fu_1344_p2 <= "1" when (v315_0_reg_624 = ap_const_lv7_60) else "0";
    icmp_ln564_fu_1370_p2 <= "1" when (v321_0_reg_635 = ap_const_lv5_10) else "0";
    icmp_ln566_fu_1408_p2 <= "1" when (v323_0_0_reg_646 = ap_const_lv3_6) else "0";
    icmp_ln574_fu_1434_p2 <= "1" when (i10_0_reg_657 = ap_const_lv5_10) else "0";
    icmp_ln576_fu_1472_p2 <= "1" when (k9_0_0_reg_668 = ap_const_lv3_6) else "0";
    icmp_ln602_fu_1574_p2 <= "1" when (v341_0_reg_679 = ap_const_lv5_10) else "0";
    icmp_ln604_fu_1612_p2 <= "1" when (v343_0_0_reg_690 = ap_const_lv3_6) else "0";
    icmp_ln611_fu_1638_p2 <= "1" when (v345_0_reg_701 = ap_const_lv5_10) else "0";
    icmp_ln613_fu_1676_p2 <= "1" when (v347_0_0_reg_712 = ap_const_lv7_60) else "0";
    icmp_ln621_fu_1702_p2 <= "1" when (v350_0_0_reg_723 = ap_const_lv11_600) else "0";
    icmp_ln626_fu_1719_p2 <= "1" when (h7_0_0_reg_734 = ap_const_lv5_10) else "0";
    icmp_ln627_fu_1795_p2 <= "1" when (d4_0_0_reg_745 = ap_const_lv7_60) else "0";
    icmp_ln635_fu_1830_p2 <= "1" when (v357_0_0_reg_756 = ap_const_lv11_600) else "0";
    icmp_ln653_fu_1847_p2 <= "1" when (v365_0_0_reg_767 = ap_const_lv11_600) else "0";

    k_embed_0_V_address0_assign_proc : process(ap_CS_fsm_state19, grp_apply_rotary_pos_emb_fu_859_v154_0_V_address0, grp_cache_update_fu_890_v182_0_V_address0, ap_CS_fsm_state20, ap_CS_fsm_state27, sext_ln203_3_fu_1127_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            k_embed_0_V_address0 <= sext_ln203_3_fu_1127_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            k_embed_0_V_address0 <= grp_cache_update_fu_890_v182_0_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            k_embed_0_V_address0 <= grp_apply_rotary_pos_emb_fu_859_v154_0_V_address0;
        else 
            k_embed_0_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    k_embed_0_V_ce0_assign_proc : process(ap_CS_fsm_state19, grp_apply_rotary_pos_emb_fu_859_v154_0_V_ce0, grp_cache_update_fu_890_v182_0_V_ce0, ap_CS_fsm_state20, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            k_embed_0_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            k_embed_0_V_ce0 <= grp_cache_update_fu_890_v182_0_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            k_embed_0_V_ce0 <= grp_apply_rotary_pos_emb_fu_859_v154_0_V_ce0;
        else 
            k_embed_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_embed_0_V_d0_assign_proc : process(ap_CS_fsm_state19, grp_apply_rotary_pos_emb_fu_859_v154_0_V_d0, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            k_embed_0_V_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            k_embed_0_V_d0 <= grp_apply_rotary_pos_emb_fu_859_v154_0_V_d0;
        else 
            k_embed_0_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    k_embed_0_V_we0_assign_proc : process(ap_CS_fsm_state19, grp_apply_rotary_pos_emb_fu_859_v154_0_V_we0, icmp_ln530_fu_1106_p2, ap_CS_fsm_state20)
    begin
        if (((icmp_ln530_fu_1106_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            k_embed_0_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            k_embed_0_V_we0 <= grp_apply_rotary_pos_emb_fu_859_v154_0_V_we0;
        else 
            k_embed_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_V_0_address0_assign_proc : process(grp_apply_rotary_pos_emb_fu_859_k_proj_V_0_address0, grp_reshape_2D_to_3D_fu_922_v136_0_V_address0, ap_CS_fsm_state20, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            k_proj_V_0_address0 <= grp_reshape_2D_to_3D_fu_922_v136_0_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            k_proj_V_0_address0 <= grp_apply_rotary_pos_emb_fu_859_k_proj_V_0_address0;
        else 
            k_proj_V_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    k_proj_V_0_ce0_assign_proc : process(grp_apply_rotary_pos_emb_fu_859_k_proj_V_0_ce0, grp_reshape_2D_to_3D_fu_922_v136_0_V_ce0, ap_CS_fsm_state20, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            k_proj_V_0_ce0 <= grp_reshape_2D_to_3D_fu_922_v136_0_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            k_proj_V_0_ce0 <= grp_apply_rotary_pos_emb_fu_859_k_proj_V_0_ce0;
        else 
            k_proj_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_V_0_ce1_assign_proc : process(grp_apply_rotary_pos_emb_fu_859_k_proj_V_0_ce1, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            k_proj_V_0_ce1 <= grp_apply_rotary_pos_emb_fu_859_k_proj_V_0_ce1;
        else 
            k_proj_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_V_0_we0_assign_proc : process(grp_reshape_2D_to_3D_fu_922_v136_0_V_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            k_proj_V_0_we0 <= grp_reshape_2D_to_3D_fu_922_v136_0_V_we0;
        else 
            k_proj_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_re_V_address0_assign_proc : process(ap_CS_fsm_state7, grp_linear_forward_no_mu_fu_778_v81_V_address0, grp_reshape_2D_to_3D_fu_922_v135_V_address0, ap_CS_fsm_state11, ap_CS_fsm_state13, zext_ln480_fu_982_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            k_proj_re_V_address0 <= zext_ln480_fu_982_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            k_proj_re_V_address0 <= grp_reshape_2D_to_3D_fu_922_v135_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            k_proj_re_V_address0 <= grp_linear_forward_no_mu_fu_778_v81_V_address0;
        else 
            k_proj_re_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    k_proj_re_V_ce0_assign_proc : process(ap_CS_fsm_state7, grp_linear_forward_no_mu_fu_778_v81_V_ce0, grp_reshape_2D_to_3D_fu_922_v135_V_ce0, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            k_proj_re_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            k_proj_re_V_ce0 <= grp_reshape_2D_to_3D_fu_922_v135_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            k_proj_re_V_ce0 <= grp_linear_forward_no_mu_fu_778_v81_V_ce0;
        else 
            k_proj_re_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_re_V_d0_assign_proc : process(ap_CS_fsm_state7, grp_linear_forward_no_mu_fu_778_v81_V_d0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            k_proj_re_V_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            k_proj_re_V_d0 <= grp_linear_forward_no_mu_fu_778_v81_V_d0;
        else 
            k_proj_re_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    k_proj_re_V_we0_assign_proc : process(ap_CS_fsm_state7, grp_linear_forward_no_mu_fu_778_v81_V_we0, icmp_ln479_fu_970_p2, ap_CS_fsm_state11)
    begin
        if (((icmp_ln479_fu_970_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            k_proj_re_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            k_proj_re_V_we0 <= grp_linear_forward_no_mu_fu_778_v81_V_we0;
        else 
            k_proj_re_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_transposed_V_address0_assign_proc : process(grp_GEMM_3D_float_fu_900_k_proj_transposed_V_address0, grp_transpose_last_two_d_fu_915_v193_V_address0, ap_CS_fsm_state29, ap_CS_fsm_state32)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            k_proj_transposed_V_address0 <= grp_transpose_last_two_d_fu_915_v193_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            k_proj_transposed_V_address0 <= grp_GEMM_3D_float_fu_900_k_proj_transposed_V_address0;
        else 
            k_proj_transposed_V_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    k_proj_transposed_V_ce0_assign_proc : process(grp_GEMM_3D_float_fu_900_k_proj_transposed_V_ce0, grp_transpose_last_two_d_fu_915_v193_V_ce0, ap_CS_fsm_state29, ap_CS_fsm_state32)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            k_proj_transposed_V_ce0 <= grp_transpose_last_two_d_fu_915_v193_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            k_proj_transposed_V_ce0 <= grp_GEMM_3D_float_fu_900_k_proj_transposed_V_ce0;
        else 
            k_proj_transposed_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_proj_transposed_V_we0_assign_proc : process(grp_transpose_last_two_d_fu_915_v193_V_we0, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            k_proj_transposed_V_we0 <= grp_transpose_last_two_d_fu_915_v193_V_we0;
        else 
            k_proj_transposed_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_shl2_cast_fu_1330_p3 <= (add_ln203_8_fu_1313_p2 & ap_const_lv5_0);
    p_shl6_cast_fu_1203_p3 <= (trunc_ln203_fu_1199_p1 & ap_const_lv7_0);
    p_shl7_cast_fu_1211_p3 <= (add_ln203_7_fu_1194_p2 & ap_const_lv5_0);
    p_shl_cast_fu_1322_p3 <= (trunc_ln203_1_fu_1318_p1 & ap_const_lv7_0);

    q_embed_0_V_address0_assign_proc : process(ap_CS_fsm_state17, grp_apply_rotary_pos_emb_fu_859_v153_0_V_address0, grp_GEMM_3D_float_fu_900_v198_0_V_address0, ap_CS_fsm_state20, ap_CS_fsm_state32, sext_ln203_fu_1063_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            q_embed_0_V_address0 <= sext_ln203_fu_1063_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            q_embed_0_V_address0 <= grp_GEMM_3D_float_fu_900_v198_0_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            q_embed_0_V_address0 <= grp_apply_rotary_pos_emb_fu_859_v153_0_V_address0;
        else 
            q_embed_0_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    q_embed_0_V_ce0_assign_proc : process(ap_CS_fsm_state17, grp_apply_rotary_pos_emb_fu_859_v153_0_V_ce0, grp_GEMM_3D_float_fu_900_v198_0_V_ce0, ap_CS_fsm_state20, ap_CS_fsm_state32)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            q_embed_0_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            q_embed_0_V_ce0 <= grp_GEMM_3D_float_fu_900_v198_0_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            q_embed_0_V_ce0 <= grp_apply_rotary_pos_emb_fu_859_v153_0_V_ce0;
        else 
            q_embed_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    q_embed_0_V_d0_assign_proc : process(ap_CS_fsm_state17, grp_apply_rotary_pos_emb_fu_859_v153_0_V_d0, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            q_embed_0_V_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            q_embed_0_V_d0 <= grp_apply_rotary_pos_emb_fu_859_v153_0_V_d0;
        else 
            q_embed_0_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    q_embed_0_V_we0_assign_proc : process(ap_CS_fsm_state17, grp_apply_rotary_pos_emb_fu_859_v153_0_V_we0, icmp_ln522_fu_1042_p2, ap_CS_fsm_state20)
    begin
        if (((icmp_ln522_fu_1042_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            q_embed_0_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            q_embed_0_V_we0 <= grp_apply_rotary_pos_emb_fu_859_v153_0_V_we0;
        else 
            q_embed_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    q_proj_V_0_address0_assign_proc : process(grp_apply_rotary_pos_emb_fu_859_q_proj_V_0_address0, grp_reshape_2D_to_3D_fu_922_v136_0_V_address0, ap_CS_fsm_state20, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            q_proj_V_0_address0 <= grp_reshape_2D_to_3D_fu_922_v136_0_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            q_proj_V_0_address0 <= grp_apply_rotary_pos_emb_fu_859_q_proj_V_0_address0;
        else 
            q_proj_V_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    q_proj_V_0_ce0_assign_proc : process(grp_apply_rotary_pos_emb_fu_859_q_proj_V_0_ce0, grp_reshape_2D_to_3D_fu_922_v136_0_V_ce0, ap_CS_fsm_state20, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            q_proj_V_0_ce0 <= grp_reshape_2D_to_3D_fu_922_v136_0_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            q_proj_V_0_ce0 <= grp_apply_rotary_pos_emb_fu_859_q_proj_V_0_ce0;
        else 
            q_proj_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    q_proj_V_0_ce1_assign_proc : process(grp_apply_rotary_pos_emb_fu_859_q_proj_V_0_ce1, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            q_proj_V_0_ce1 <= grp_apply_rotary_pos_emb_fu_859_q_proj_V_0_ce1;
        else 
            q_proj_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    q_proj_V_0_we0_assign_proc : process(grp_reshape_2D_to_3D_fu_922_v136_0_V_we0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            q_proj_V_0_we0 <= grp_reshape_2D_to_3D_fu_922_v136_0_V_we0;
        else 
            q_proj_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    q_proj_re_V_address0_assign_proc : process(ap_CS_fsm_state6, grp_linear_forward_no_mu_fu_778_v81_V_address0, grp_reshape_2D_to_3D_fu_922_v135_V_address0, ap_CS_fsm_state9, ap_CS_fsm_state11, zext_ln474_fu_965_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            q_proj_re_V_address0 <= zext_ln474_fu_965_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            q_proj_re_V_address0 <= grp_reshape_2D_to_3D_fu_922_v135_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            q_proj_re_V_address0 <= grp_linear_forward_no_mu_fu_778_v81_V_address0;
        else 
            q_proj_re_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    q_proj_re_V_ce0_assign_proc : process(ap_CS_fsm_state6, grp_linear_forward_no_mu_fu_778_v81_V_ce0, grp_reshape_2D_to_3D_fu_922_v135_V_ce0, ap_CS_fsm_state9, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            q_proj_re_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            q_proj_re_V_ce0 <= grp_reshape_2D_to_3D_fu_922_v135_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            q_proj_re_V_ce0 <= grp_linear_forward_no_mu_fu_778_v81_V_ce0;
        else 
            q_proj_re_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    q_proj_re_V_d0_assign_proc : process(ap_CS_fsm_state6, grp_linear_forward_no_mu_fu_778_v81_V_d0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            q_proj_re_V_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            q_proj_re_V_d0 <= grp_linear_forward_no_mu_fu_778_v81_V_d0;
        else 
            q_proj_re_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    q_proj_re_V_we0_assign_proc : process(ap_CS_fsm_state6, grp_linear_forward_no_mu_fu_778_v81_V_we0, icmp_ln473_fu_953_p2, ap_CS_fsm_state9)
    begin
        if (((icmp_ln473_fu_953_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            q_proj_re_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            q_proj_re_V_we0 <= grp_linear_forward_no_mu_fu_778_v81_V_we0;
        else 
            q_proj_re_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_final_outp_1_address0_assign_proc : process(ap_CS_fsm_state53, grp_linear_forward_no_mu_fu_778_v77_2_0_address0, grp_quantize_activation_fu_873_v24_2_0_address0, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            quantized_final_outp_1_address0 <= grp_quantize_activation_fu_873_v24_2_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            quantized_final_outp_1_address0 <= grp_linear_forward_no_mu_fu_778_v77_2_0_address0;
        else 
            quantized_final_outp_1_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    quantized_final_outp_1_ce0_assign_proc : process(ap_CS_fsm_state53, grp_linear_forward_no_mu_fu_778_v77_2_0_ce0, grp_quantize_activation_fu_873_v24_2_0_ce0, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            quantized_final_outp_1_ce0 <= grp_quantize_activation_fu_873_v24_2_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            quantized_final_outp_1_ce0 <= grp_linear_forward_no_mu_fu_778_v77_2_0_ce0;
        else 
            quantized_final_outp_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_final_outp_1_ce1_assign_proc : process(grp_linear_forward_no_mu_fu_778_v77_2_0_ce1, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            quantized_final_outp_1_ce1 <= grp_linear_forward_no_mu_fu_778_v77_2_0_ce1;
        else 
            quantized_final_outp_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_final_outp_1_we0_assign_proc : process(ap_CS_fsm_state53, grp_quantize_activation_fu_873_v24_2_0_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            quantized_final_outp_1_we0 <= grp_quantize_activation_fu_873_v24_2_0_we0;
        else 
            quantized_final_outp_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_final_outp_2_address0_assign_proc : process(ap_CS_fsm_state53, grp_linear_forward_no_mu_fu_778_v77_1_0_address0, grp_quantize_activation_fu_873_v24_1_0_address0, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            quantized_final_outp_2_address0 <= grp_quantize_activation_fu_873_v24_1_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            quantized_final_outp_2_address0 <= grp_linear_forward_no_mu_fu_778_v77_1_0_address0;
        else 
            quantized_final_outp_2_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    quantized_final_outp_2_ce0_assign_proc : process(ap_CS_fsm_state53, grp_linear_forward_no_mu_fu_778_v77_1_0_ce0, grp_quantize_activation_fu_873_v24_1_0_ce0, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            quantized_final_outp_2_ce0 <= grp_quantize_activation_fu_873_v24_1_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            quantized_final_outp_2_ce0 <= grp_linear_forward_no_mu_fu_778_v77_1_0_ce0;
        else 
            quantized_final_outp_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_final_outp_2_ce1_assign_proc : process(grp_linear_forward_no_mu_fu_778_v77_1_0_ce1, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            quantized_final_outp_2_ce1 <= grp_linear_forward_no_mu_fu_778_v77_1_0_ce1;
        else 
            quantized_final_outp_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_final_outp_2_we0_assign_proc : process(ap_CS_fsm_state53, grp_quantize_activation_fu_873_v24_1_0_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            quantized_final_outp_2_we0 <= grp_quantize_activation_fu_873_v24_1_0_we0;
        else 
            quantized_final_outp_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_final_outp_3_address0_assign_proc : process(ap_CS_fsm_state53, grp_linear_forward_no_mu_fu_778_v77_0_0_address0, grp_quantize_activation_fu_873_v24_0_0_address0, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            quantized_final_outp_3_address0 <= grp_quantize_activation_fu_873_v24_0_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            quantized_final_outp_3_address0 <= grp_linear_forward_no_mu_fu_778_v77_0_0_address0;
        else 
            quantized_final_outp_3_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    quantized_final_outp_3_ce0_assign_proc : process(ap_CS_fsm_state53, grp_linear_forward_no_mu_fu_778_v77_0_0_ce0, grp_quantize_activation_fu_873_v24_0_0_ce0, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            quantized_final_outp_3_ce0 <= grp_quantize_activation_fu_873_v24_0_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            quantized_final_outp_3_ce0 <= grp_linear_forward_no_mu_fu_778_v77_0_0_ce0;
        else 
            quantized_final_outp_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_final_outp_3_ce1_assign_proc : process(grp_linear_forward_no_mu_fu_778_v77_0_0_ce1, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            quantized_final_outp_3_ce1 <= grp_linear_forward_no_mu_fu_778_v77_0_0_ce1;
        else 
            quantized_final_outp_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_final_outp_3_we0_assign_proc : process(ap_CS_fsm_state53, grp_quantize_activation_fu_873_v24_0_0_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            quantized_final_outp_3_we0 <= grp_quantize_activation_fu_873_v24_0_0_we0;
        else 
            quantized_final_outp_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_final_outp_address0_assign_proc : process(ap_CS_fsm_state53, grp_linear_forward_no_mu_fu_778_v77_3_0_address0, grp_quantize_activation_fu_873_v24_3_0_address0, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            quantized_final_outp_address0 <= grp_quantize_activation_fu_873_v24_3_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            quantized_final_outp_address0 <= grp_linear_forward_no_mu_fu_778_v77_3_0_address0;
        else 
            quantized_final_outp_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    quantized_final_outp_ce0_assign_proc : process(ap_CS_fsm_state53, grp_linear_forward_no_mu_fu_778_v77_3_0_ce0, grp_quantize_activation_fu_873_v24_3_0_ce0, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            quantized_final_outp_ce0 <= grp_quantize_activation_fu_873_v24_3_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            quantized_final_outp_ce0 <= grp_linear_forward_no_mu_fu_778_v77_3_0_ce0;
        else 
            quantized_final_outp_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_final_outp_ce1_assign_proc : process(grp_linear_forward_no_mu_fu_778_v77_3_0_ce1, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            quantized_final_outp_ce1 <= grp_linear_forward_no_mu_fu_778_v77_3_0_ce1;
        else 
            quantized_final_outp_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_final_outp_we0_assign_proc : process(ap_CS_fsm_state53, grp_quantize_activation_fu_873_v24_3_0_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            quantized_final_outp_we0 <= grp_quantize_activation_fu_873_v24_3_0_we0;
        else 
            quantized_final_outp_we0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_hidden_sta_1_address0_assign_proc : process(ap_CS_fsm_state5, grp_linear_forward_no_mu_fu_778_v77_2_0_address0, grp_quantize_activation_fu_873_v24_2_0_address0, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            quantized_hidden_sta_1_address0 <= grp_quantize_activation_fu_873_v24_2_0_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            quantized_hidden_sta_1_address0 <= grp_linear_forward_no_mu_fu_778_v77_2_0_address0;
        else 
            quantized_hidden_sta_1_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    quantized_hidden_sta_1_ce0_assign_proc : process(ap_CS_fsm_state5, grp_linear_forward_no_mu_fu_778_v77_2_0_ce0, grp_quantize_activation_fu_873_v24_2_0_ce0, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            quantized_hidden_sta_1_ce0 <= grp_quantize_activation_fu_873_v24_2_0_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            quantized_hidden_sta_1_ce0 <= grp_linear_forward_no_mu_fu_778_v77_2_0_ce0;
        else 
            quantized_hidden_sta_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_hidden_sta_1_ce1_assign_proc : process(grp_linear_forward_no_mu_fu_778_v77_2_0_ce1, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            quantized_hidden_sta_1_ce1 <= grp_linear_forward_no_mu_fu_778_v77_2_0_ce1;
        else 
            quantized_hidden_sta_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_hidden_sta_1_we0_assign_proc : process(ap_CS_fsm_state5, grp_quantize_activation_fu_873_v24_2_0_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            quantized_hidden_sta_1_we0 <= grp_quantize_activation_fu_873_v24_2_0_we0;
        else 
            quantized_hidden_sta_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_hidden_sta_2_address0_assign_proc : process(ap_CS_fsm_state5, grp_linear_forward_no_mu_fu_778_v77_1_0_address0, grp_quantize_activation_fu_873_v24_1_0_address0, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            quantized_hidden_sta_2_address0 <= grp_quantize_activation_fu_873_v24_1_0_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            quantized_hidden_sta_2_address0 <= grp_linear_forward_no_mu_fu_778_v77_1_0_address0;
        else 
            quantized_hidden_sta_2_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    quantized_hidden_sta_2_ce0_assign_proc : process(ap_CS_fsm_state5, grp_linear_forward_no_mu_fu_778_v77_1_0_ce0, grp_quantize_activation_fu_873_v24_1_0_ce0, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            quantized_hidden_sta_2_ce0 <= grp_quantize_activation_fu_873_v24_1_0_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            quantized_hidden_sta_2_ce0 <= grp_linear_forward_no_mu_fu_778_v77_1_0_ce0;
        else 
            quantized_hidden_sta_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_hidden_sta_2_ce1_assign_proc : process(grp_linear_forward_no_mu_fu_778_v77_1_0_ce1, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            quantized_hidden_sta_2_ce1 <= grp_linear_forward_no_mu_fu_778_v77_1_0_ce1;
        else 
            quantized_hidden_sta_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_hidden_sta_2_we0_assign_proc : process(ap_CS_fsm_state5, grp_quantize_activation_fu_873_v24_1_0_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            quantized_hidden_sta_2_we0 <= grp_quantize_activation_fu_873_v24_1_0_we0;
        else 
            quantized_hidden_sta_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_hidden_sta_3_address0_assign_proc : process(ap_CS_fsm_state5, grp_linear_forward_no_mu_fu_778_v77_0_0_address0, grp_quantize_activation_fu_873_v24_0_0_address0, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            quantized_hidden_sta_3_address0 <= grp_quantize_activation_fu_873_v24_0_0_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            quantized_hidden_sta_3_address0 <= grp_linear_forward_no_mu_fu_778_v77_0_0_address0;
        else 
            quantized_hidden_sta_3_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    quantized_hidden_sta_3_ce0_assign_proc : process(ap_CS_fsm_state5, grp_linear_forward_no_mu_fu_778_v77_0_0_ce0, grp_quantize_activation_fu_873_v24_0_0_ce0, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            quantized_hidden_sta_3_ce0 <= grp_quantize_activation_fu_873_v24_0_0_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            quantized_hidden_sta_3_ce0 <= grp_linear_forward_no_mu_fu_778_v77_0_0_ce0;
        else 
            quantized_hidden_sta_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_hidden_sta_3_ce1_assign_proc : process(grp_linear_forward_no_mu_fu_778_v77_0_0_ce1, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            quantized_hidden_sta_3_ce1 <= grp_linear_forward_no_mu_fu_778_v77_0_0_ce1;
        else 
            quantized_hidden_sta_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_hidden_sta_3_we0_assign_proc : process(ap_CS_fsm_state5, grp_quantize_activation_fu_873_v24_0_0_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            quantized_hidden_sta_3_we0 <= grp_quantize_activation_fu_873_v24_0_0_we0;
        else 
            quantized_hidden_sta_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_hidden_sta_address0_assign_proc : process(ap_CS_fsm_state5, grp_linear_forward_no_mu_fu_778_v77_3_0_address0, grp_quantize_activation_fu_873_v24_3_0_address0, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            quantized_hidden_sta_address0 <= grp_quantize_activation_fu_873_v24_3_0_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            quantized_hidden_sta_address0 <= grp_linear_forward_no_mu_fu_778_v77_3_0_address0;
        else 
            quantized_hidden_sta_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    quantized_hidden_sta_ce0_assign_proc : process(ap_CS_fsm_state5, grp_linear_forward_no_mu_fu_778_v77_3_0_ce0, grp_quantize_activation_fu_873_v24_3_0_ce0, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            quantized_hidden_sta_ce0 <= grp_quantize_activation_fu_873_v24_3_0_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            quantized_hidden_sta_ce0 <= grp_linear_forward_no_mu_fu_778_v77_3_0_ce0;
        else 
            quantized_hidden_sta_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_hidden_sta_ce1_assign_proc : process(grp_linear_forward_no_mu_fu_778_v77_3_0_ce1, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            quantized_hidden_sta_ce1 <= grp_linear_forward_no_mu_fu_778_v77_3_0_ce1;
        else 
            quantized_hidden_sta_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    quantized_hidden_sta_we0_assign_proc : process(ap_CS_fsm_state5, grp_quantize_activation_fu_873_v24_3_0_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            quantized_hidden_sta_we0 <= grp_quantize_activation_fu_873_v24_3_0_we0;
        else 
            quantized_hidden_sta_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rms_attn_output_0_V_address0_assign_proc : process(ap_CS_fsm_state53, ap_CS_fsm_state50, grp_rms_norm_fu_803_v3_0_V_address0, grp_quantize_activation_fu_873_v22_0_V_address0, icmp_ln635_fu_1830_p2, ap_CS_fsm_state51, zext_ln636_fu_1842_p1)
    begin
        if (((icmp_ln635_fu_1830_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            rms_attn_output_0_V_address0 <= zext_ln636_fu_1842_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            rms_attn_output_0_V_address0 <= grp_quantize_activation_fu_873_v22_0_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            rms_attn_output_0_V_address0 <= grp_rms_norm_fu_803_v3_0_V_address0;
        else 
            rms_attn_output_0_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    rms_attn_output_0_V_ce0_assign_proc : process(ap_CS_fsm_state53, ap_CS_fsm_state50, grp_rms_norm_fu_803_v3_0_V_ce0, grp_quantize_activation_fu_873_v22_0_V_ce0, icmp_ln635_fu_1830_p2, ap_CS_fsm_state51)
    begin
        if (((icmp_ln635_fu_1830_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            rms_attn_output_0_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            rms_attn_output_0_V_ce0 <= grp_quantize_activation_fu_873_v22_0_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            rms_attn_output_0_V_ce0 <= grp_rms_norm_fu_803_v3_0_V_ce0;
        else 
            rms_attn_output_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rms_attn_output_0_V_d0_assign_proc : process(ap_CS_fsm_state50, grp_rms_norm_fu_803_v3_0_V_d0, icmp_ln635_fu_1830_p2, ap_CS_fsm_state51)
    begin
        if (((icmp_ln635_fu_1830_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            rms_attn_output_0_V_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            rms_attn_output_0_V_d0 <= grp_rms_norm_fu_803_v3_0_V_d0;
        else 
            rms_attn_output_0_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    rms_attn_output_0_V_we0_assign_proc : process(ap_CS_fsm_state50, grp_rms_norm_fu_803_v3_0_V_we0, icmp_ln635_fu_1830_p2, ap_CS_fsm_state51)
    begin
        if (((icmp_ln635_fu_1830_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            rms_attn_output_0_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            rms_attn_output_0_V_we0 <= grp_rms_norm_fu_803_v3_0_V_we0;
        else 
            rms_attn_output_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rms_hidden_states_0_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state2, grp_rms_norm_fu_803_v3_0_V_address0, grp_quantize_activation_fu_873_v22_0_V_address0, icmp_ln454_fu_936_p2, ap_CS_fsm_state3, zext_ln455_fu_948_p1)
    begin
        if (((icmp_ln454_fu_936_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rms_hidden_states_0_address0 <= zext_ln455_fu_948_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            rms_hidden_states_0_address0 <= grp_quantize_activation_fu_873_v22_0_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rms_hidden_states_0_address0 <= grp_rms_norm_fu_803_v3_0_V_address0;
        else 
            rms_hidden_states_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    rms_hidden_states_0_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state2, grp_rms_norm_fu_803_v3_0_V_ce0, grp_quantize_activation_fu_873_v22_0_V_ce0, icmp_ln454_fu_936_p2, ap_CS_fsm_state3)
    begin
        if (((icmp_ln454_fu_936_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rms_hidden_states_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            rms_hidden_states_0_ce0 <= grp_quantize_activation_fu_873_v22_0_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rms_hidden_states_0_ce0 <= grp_rms_norm_fu_803_v3_0_V_ce0;
        else 
            rms_hidden_states_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rms_hidden_states_0_d0_assign_proc : process(ap_CS_fsm_state2, grp_rms_norm_fu_803_v3_0_V_d0, icmp_ln454_fu_936_p2, ap_CS_fsm_state3)
    begin
        if (((icmp_ln454_fu_936_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rms_hidden_states_0_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rms_hidden_states_0_d0 <= grp_rms_norm_fu_803_v3_0_V_d0;
        else 
            rms_hidden_states_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    rms_hidden_states_0_we0_assign_proc : process(ap_CS_fsm_state2, grp_rms_norm_fu_803_v3_0_V_we0, icmp_ln454_fu_936_p2, ap_CS_fsm_state3)
    begin
        if (((icmp_ln454_fu_936_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rms_hidden_states_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rms_hidden_states_0_we0 <= grp_rms_norm_fu_803_v3_0_V_we0;
        else 
            rms_hidden_states_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln1148_2_fu_1566_p3 <= 
        sub_ln703_fu_1557_p2 when (tmp_94_reg_2078(0) = '1') else 
        sext_ln703_1024_fu_1563_p1;
    select_ln1148_fu_1548_p3 <= 
        tmp_95_fu_1538_p4 when (tmp_94_reg_2078(0) = '1') else 
        tmp_96_reg_2094;
        sext_ln203_2_fu_1174_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln203_4_fu_1168_p2),10));

        sext_ln203_3_fu_1127_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln203_6_fu_1122_p2),64));

        sext_ln203_4_fu_1293_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln203_5_fu_1287_p2),10));

        sext_ln203_5_fu_1429_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln203_10_fu_1424_p2),64));

        sext_ln203_6_fu_1633_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln203_12_fu_1628_p2),64));

        sext_ln203_7_fu_1697_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln203_13_fu_1692_p2),64));

        sext_ln203_fu_1063_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln203_fu_1058_p2),64));

        sext_ln577_fu_1493_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln577_fu_1488_p2),64));

        sext_ln628_fu_1812_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln628_fu_1807_p2),64));

        sext_ln629_fu_1822_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln629_reg_2186),32));

        sext_ln703_1024_fu_1563_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln1148_reg_2099),32));

        sext_ln703_fu_1554_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln1148_reg_2099),32));

    shl_ln2_fu_1761_p3 <= (trunc_ln629_fu_1757_p1 & ap_const_lv7_0);
    shl_ln629_1_fu_1773_p3 <= (trunc_ln629_fu_1757_p1 & ap_const_lv5_0);
    shl_ln_fu_1506_p3 <= (attn_weights_0_V_lo_reg_2073 & ap_const_lv12_0);

    softmax_attn_weights_address0_assign_proc : process(ap_CS_fsm_state41, grp_softmax_fu_833_v214_0_V_address0, grp_GEMM_3D_float2_fu_908_v240_0_V_address0, ap_CS_fsm_state42, ap_CS_fsm_state45, sext_ln203_6_fu_1633_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            softmax_attn_weights_address0 <= sext_ln203_6_fu_1633_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            softmax_attn_weights_address0 <= grp_GEMM_3D_float2_fu_908_v240_0_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            softmax_attn_weights_address0 <= grp_softmax_fu_833_v214_0_V_address0;
        else 
            softmax_attn_weights_address0 <= "XXXXXXX";
        end if; 
    end process;


    softmax_attn_weights_ce0_assign_proc : process(ap_CS_fsm_state41, grp_softmax_fu_833_v214_0_V_ce0, grp_GEMM_3D_float2_fu_908_v240_0_V_ce0, ap_CS_fsm_state42, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            softmax_attn_weights_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            softmax_attn_weights_ce0 <= grp_GEMM_3D_float2_fu_908_v240_0_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            softmax_attn_weights_ce0 <= grp_softmax_fu_833_v214_0_V_ce0;
        else 
            softmax_attn_weights_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    softmax_attn_weights_d0_assign_proc : process(ap_CS_fsm_state41, grp_softmax_fu_833_v214_0_V_d0, ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            softmax_attn_weights_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            softmax_attn_weights_d0 <= grp_softmax_fu_833_v214_0_V_d0;
        else 
            softmax_attn_weights_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    softmax_attn_weights_we0_assign_proc : process(ap_CS_fsm_state41, grp_softmax_fu_833_v214_0_V_we0, icmp_ln604_fu_1612_p2, ap_CS_fsm_state42)
    begin
        if (((icmp_ln604_fu_1612_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state41))) then 
            softmax_attn_weights_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            softmax_attn_weights_we0 <= grp_softmax_fu_833_v214_0_V_we0;
        else 
            softmax_attn_weights_we0 <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln1148_fu_1533_p2 <= std_logic_vector(unsigned(ap_const_lv89_0) - unsigned(mul_ln1148_reg_2089));
    sub_ln203_10_fu_1670_p2 <= std_logic_vector(unsigned(tmp_132_fu_1650_p3) - unsigned(zext_ln203_23_fu_1666_p1));
    sub_ln203_3_fu_1100_p2 <= std_logic_vector(unsigned(tmp_120_fu_1080_p3) - unsigned(zext_ln203_7_fu_1096_p1));
    sub_ln203_4_fu_1168_p2 <= std_logic_vector(unsigned(zext_ln203_9_fu_1152_p1) - unsigned(zext_ln203_10_fu_1164_p1));
    sub_ln203_5_fu_1287_p2 <= std_logic_vector(unsigned(zext_ln203_12_fu_1271_p1) - unsigned(zext_ln203_13_fu_1283_p1));
    sub_ln203_6_fu_1219_p2 <= std_logic_vector(unsigned(p_shl6_cast_fu_1203_p3) - unsigned(p_shl7_cast_fu_1211_p3));
    sub_ln203_7_fu_1402_p2 <= std_logic_vector(unsigned(tmp_126_fu_1382_p3) - unsigned(zext_ln203_15_fu_1398_p1));
    sub_ln203_8_fu_1338_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_1322_p3) - unsigned(p_shl2_cast_fu_1330_p3));
    sub_ln203_9_fu_1606_p2 <= std_logic_vector(unsigned(tmp_130_fu_1586_p3) - unsigned(zext_ln203_22_fu_1602_p1));
    sub_ln203_fu_1036_p2 <= std_logic_vector(unsigned(tmp_s_fu_1016_p3) - unsigned(zext_ln203_fu_1032_p1));
    sub_ln577_fu_1466_p2 <= std_logic_vector(unsigned(tmp_128_fu_1446_p3) - unsigned(zext_ln577_fu_1462_p1));
    sub_ln628_fu_1751_p2 <= std_logic_vector(unsigned(tmp_134_fu_1731_p3) - unsigned(zext_ln628_fu_1747_p1));
    sub_ln629_fu_1785_p2 <= std_logic_vector(unsigned(zext_ln629_1_fu_1769_p1) - unsigned(zext_ln629_2_fu_1781_p1));
    sub_ln703_fu_1557_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(sext_ln703_fu_1554_p1));
    tmp_119_fu_1024_p3 <= (v301_0_reg_525 & ap_const_lv5_0);
    tmp_120_fu_1080_p3 <= (v305_0_reg_547 & ap_const_lv7_0);
    tmp_121_fu_1088_p3 <= (v305_0_reg_547 & ap_const_lv5_0);
    tmp_122_fu_1144_p3 <= (v309_0_reg_569 & ap_const_lv3_0);
    tmp_123_fu_1156_p3 <= (v309_0_reg_569 & ap_const_lv1_0);
    tmp_124_fu_1263_p3 <= (v313_0_reg_602 & ap_const_lv3_0);
    tmp_125_fu_1275_p3 <= (v313_0_reg_602 & ap_const_lv1_0);
    tmp_126_fu_1382_p3 <= (v321_0_reg_635 & ap_const_lv3_0);
    tmp_127_fu_1390_p3 <= (v321_0_reg_635 & ap_const_lv1_0);
    tmp_128_fu_1446_p3 <= (i10_0_reg_657 & ap_const_lv3_0);
    tmp_129_fu_1454_p3 <= (i10_0_reg_657 & ap_const_lv1_0);
    tmp_130_fu_1586_p3 <= (v341_0_reg_679 & ap_const_lv3_0);
    tmp_131_fu_1594_p3 <= (v341_0_reg_679 & ap_const_lv1_0);
    tmp_132_fu_1650_p3 <= (v345_0_reg_701 & ap_const_lv7_0);
    tmp_133_fu_1658_p3 <= (v345_0_reg_701 & ap_const_lv5_0);
    tmp_134_fu_1731_p3 <= (h7_0_0_reg_734 & ap_const_lv7_0);
    tmp_135_fu_1739_p3 <= (h7_0_0_reg_734 & ap_const_lv5_0);
    tmp_95_fu_1538_p4 <= sub_ln1148_fu_1533_p2(88 downto 60);
    tmp_s_fu_1016_p3 <= (v301_0_reg_525 & ap_const_lv7_0);
    trunc_ln203_1_fu_1318_p1 <= add_ln203_8_fu_1313_p2(8 - 1 downto 0);
    trunc_ln203_fu_1199_p1 <= add_ln203_7_fu_1194_p2(8 - 1 downto 0);
    trunc_ln629_fu_1757_p1 <= h7_0_0_reg_734(4 - 1 downto 0);

    updated_k_cache_V_address0_assign_proc : process(ap_CS_fsm_state23, grp_cache_update_fu_890_v183_V_address0, grp_transpose_last_two_d_fu_915_v192_V_address0, ap_CS_fsm_state29, ap_CS_fsm_state27, zext_ln203_18_fu_1246_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            updated_k_cache_V_address0 <= zext_ln203_18_fu_1246_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            updated_k_cache_V_address0 <= grp_transpose_last_two_d_fu_915_v192_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            updated_k_cache_V_address0 <= grp_cache_update_fu_890_v183_V_address0;
        else 
            updated_k_cache_V_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    updated_k_cache_V_ce0_assign_proc : process(ap_CS_fsm_state23, grp_cache_update_fu_890_v183_V_ce0, grp_transpose_last_two_d_fu_915_v192_V_ce0, ap_CS_fsm_state29, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            updated_k_cache_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            updated_k_cache_V_ce0 <= grp_transpose_last_two_d_fu_915_v192_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            updated_k_cache_V_ce0 <= grp_cache_update_fu_890_v183_V_ce0;
        else 
            updated_k_cache_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    updated_k_cache_V_d0_assign_proc : process(ap_CS_fsm_state23, grp_cache_update_fu_890_v183_V_d0, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            updated_k_cache_V_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            updated_k_cache_V_d0 <= grp_cache_update_fu_890_v183_V_d0;
        else 
            updated_k_cache_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    updated_k_cache_V_we0_assign_proc : process(ap_CS_fsm_state23, grp_cache_update_fu_890_v183_V_we0, icmp_ln539_fu_1225_p2, ap_CS_fsm_state27)
    begin
        if (((icmp_ln539_fu_1225_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            updated_k_cache_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            updated_k_cache_V_we0 <= grp_cache_update_fu_890_v183_V_we0;
        else 
            updated_k_cache_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    updated_v_cache_V_address0_assign_proc : process(ap_CS_fsm_state26, grp_cache_update_fu_890_v183_V_address0, grp_GEMM_3D_float2_fu_908_v241_V_address0, ap_CS_fsm_state29, ap_CS_fsm_state45, zext_ln203_21_fu_1365_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            updated_v_cache_V_address0 <= zext_ln203_21_fu_1365_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            updated_v_cache_V_address0 <= grp_GEMM_3D_float2_fu_908_v241_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            updated_v_cache_V_address0 <= grp_cache_update_fu_890_v183_V_address0;
        else 
            updated_v_cache_V_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    updated_v_cache_V_ce0_assign_proc : process(ap_CS_fsm_state26, grp_cache_update_fu_890_v183_V_ce0, grp_GEMM_3D_float2_fu_908_v241_V_ce0, ap_CS_fsm_state29, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            updated_v_cache_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            updated_v_cache_V_ce0 <= grp_GEMM_3D_float2_fu_908_v241_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            updated_v_cache_V_ce0 <= grp_cache_update_fu_890_v183_V_ce0;
        else 
            updated_v_cache_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    updated_v_cache_V_d0_assign_proc : process(ap_CS_fsm_state26, grp_cache_update_fu_890_v183_V_d0, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            updated_v_cache_V_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            updated_v_cache_V_d0 <= grp_cache_update_fu_890_v183_V_d0;
        else 
            updated_v_cache_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    updated_v_cache_V_we0_assign_proc : process(ap_CS_fsm_state26, grp_cache_update_fu_890_v183_V_we0, icmp_ln547_fu_1344_p2, ap_CS_fsm_state29)
    begin
        if (((icmp_ln547_fu_1344_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            updated_v_cache_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            updated_v_cache_V_we0 <= grp_cache_update_fu_890_v183_V_we0;
        else 
            updated_v_cache_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v252_V_address0 <= grp_rms_norm_fu_803_v0_V_address0;

    v252_V_ce0_assign_proc : process(grp_rms_norm_fu_803_v0_V_ce0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            v252_V_ce0 <= grp_rms_norm_fu_803_v0_V_ce0;
        else 
            v252_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v253_address0 <= grp_linear_forward_no_mu_fu_778_v79_address0;
    v253_address1 <= grp_linear_forward_no_mu_fu_778_v79_address1;

    v253_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_778_v79_ce0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            v253_ce0 <= grp_linear_forward_no_mu_fu_778_v79_ce0;
        else 
            v253_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v253_ce1_assign_proc : process(grp_linear_forward_no_mu_fu_778_v79_ce1, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            v253_ce1 <= grp_linear_forward_no_mu_fu_778_v79_ce1;
        else 
            v253_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    v255_address0 <= grp_linear_forward_no_mu_fu_778_v79_address0;
    v255_address1 <= grp_linear_forward_no_mu_fu_778_v79_address1;

    v255_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_778_v79_ce0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            v255_ce0 <= grp_linear_forward_no_mu_fu_778_v79_ce0;
        else 
            v255_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v255_ce1_assign_proc : process(grp_linear_forward_no_mu_fu_778_v79_ce1, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            v255_ce1 <= grp_linear_forward_no_mu_fu_778_v79_ce1;
        else 
            v255_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    v257_address0 <= grp_linear_forward_no_mu_fu_778_v79_address0;
    v257_address1 <= grp_linear_forward_no_mu_fu_778_v79_address1;

    v257_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_778_v79_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            v257_ce0 <= grp_linear_forward_no_mu_fu_778_v79_ce0;
        else 
            v257_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v257_ce1_assign_proc : process(grp_linear_forward_no_mu_fu_778_v79_ce1, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            v257_ce1 <= grp_linear_forward_no_mu_fu_778_v79_ce1;
        else 
            v257_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    v259_address0 <= grp_linear_forward_no_mu_fu_778_v79_address0;
    v259_address1 <= grp_linear_forward_no_mu_fu_778_v79_address1;

    v259_ce0_assign_proc : process(grp_linear_forward_no_mu_fu_778_v79_ce0, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            v259_ce0 <= grp_linear_forward_no_mu_fu_778_v79_ce0;
        else 
            v259_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v259_ce1_assign_proc : process(grp_linear_forward_no_mu_fu_778_v79_ce1, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            v259_ce1 <= grp_linear_forward_no_mu_fu_778_v79_ce1;
        else 
            v259_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    v261_V_address0 <= grp_apply_rotary_pos_emb_fu_859_v151_V_address0;
    v261_V_ce0 <= grp_apply_rotary_pos_emb_fu_859_v151_V_ce0;
    v262_V_address0 <= grp_apply_rotary_pos_emb_fu_859_v152_V_address0;
    v262_V_ce0 <= grp_apply_rotary_pos_emb_fu_859_v152_V_ce0;
    v263_V_address0 <= grp_rms_norm_fu_803_v1_V_address0;

    v263_V_ce0_assign_proc : process(grp_rms_norm_fu_803_v1_V_ce0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            v263_V_ce0 <= grp_rms_norm_fu_803_v1_V_ce0;
        else 
            v263_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v264_V_address0 <= grp_rms_norm_fu_803_v1_V_address0;

    v264_V_ce0_assign_proc : process(grp_rms_norm_fu_803_v1_V_ce0, ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            v264_V_ce0 <= grp_rms_norm_fu_803_v1_V_ce0;
        else 
            v264_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v265_V_address0 <= grp_cache_update_fu_890_v181_V_address0;

    v265_V_ce0_assign_proc : process(grp_cache_update_fu_890_v181_V_ce0, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            v265_V_ce0 <= grp_cache_update_fu_890_v181_V_ce0;
        else 
            v265_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    v266_V_address0 <= grp_cache_update_fu_890_v181_V_address0;

    v266_V_ce0_assign_proc : process(grp_cache_update_fu_890_v181_V_ce0, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            v266_V_ce0 <= grp_cache_update_fu_890_v181_V_ce0;
        else 
            v266_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v268_V_address0_assign_proc : process(ap_CS_fsm_state54, grp_linear_forward_no_mu_fu_778_v81_V_address0, icmp_ln653_fu_1847_p2, ap_CS_fsm_state55, zext_ln654_fu_1859_p1)
    begin
        if (((icmp_ln653_fu_1847_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            v268_V_address0 <= zext_ln654_fu_1859_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            v268_V_address0 <= grp_linear_forward_no_mu_fu_778_v81_V_address0;
        else 
            v268_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    v268_V_ce0_assign_proc : process(ap_CS_fsm_state54, grp_linear_forward_no_mu_fu_778_v81_V_ce0, icmp_ln653_fu_1847_p2, ap_CS_fsm_state55)
    begin
        if (((icmp_ln653_fu_1847_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            v268_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            v268_V_ce0 <= grp_linear_forward_no_mu_fu_778_v81_V_ce0;
        else 
            v268_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v268_V_d0_assign_proc : process(ap_CS_fsm_state54, grp_linear_forward_no_mu_fu_778_v81_V_d0, icmp_ln653_fu_1847_p2, ap_CS_fsm_state55)
    begin
        if (((icmp_ln653_fu_1847_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            v268_V_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            v268_V_d0 <= grp_linear_forward_no_mu_fu_778_v81_V_d0;
        else 
            v268_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    v268_V_we0_assign_proc : process(ap_CS_fsm_state54, grp_linear_forward_no_mu_fu_778_v81_V_we0, icmp_ln653_fu_1847_p2, ap_CS_fsm_state55)
    begin
        if (((icmp_ln653_fu_1847_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            v268_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            v268_V_we0 <= grp_linear_forward_no_mu_fu_778_v81_V_we0;
        else 
            v268_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    v301_fu_1010_p2 <= std_logic_vector(unsigned(v301_0_reg_525) + unsigned(ap_const_lv5_1));
    v305_fu_1074_p2 <= std_logic_vector(unsigned(v305_0_reg_547) + unsigned(ap_const_lv5_1));
    v309_fu_1138_p2 <= std_logic_vector(unsigned(v309_0_reg_569) + unsigned(ap_const_lv5_1));
    v310_fu_1184_p2 <= std_logic_vector(unsigned(v310_0_reg_580) + unsigned(ap_const_lv3_1));
    v311_fu_1231_p2 <= std_logic_vector(unsigned(v311_0_reg_591) + unsigned(ap_const_lv7_1));
    v313_fu_1257_p2 <= std_logic_vector(unsigned(v313_0_reg_602) + unsigned(ap_const_lv5_1));
    v314_fu_1303_p2 <= std_logic_vector(unsigned(v314_0_reg_613) + unsigned(ap_const_lv3_1));
    v315_fu_1350_p2 <= std_logic_vector(unsigned(v315_0_reg_624) + unsigned(ap_const_lv7_1));
    v321_fu_1376_p2 <= std_logic_vector(unsigned(v321_0_reg_635) + unsigned(ap_const_lv5_1));
    v341_fu_1580_p2 <= std_logic_vector(unsigned(v341_0_reg_679) + unsigned(ap_const_lv5_1));
    v345_fu_1644_p2 <= std_logic_vector(unsigned(v345_0_reg_701) + unsigned(ap_const_lv5_1));

    v_proj_V_0_address0_assign_proc : process(grp_cache_update_fu_890_v182_0_V_address0, grp_reshape_2D_to_3D_fu_922_v136_0_V_address0, ap_CS_fsm_state15, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            v_proj_V_0_address0 <= grp_reshape_2D_to_3D_fu_922_v136_0_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            v_proj_V_0_address0 <= grp_cache_update_fu_890_v182_0_V_address0;
        else 
            v_proj_V_0_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    v_proj_V_0_ce0_assign_proc : process(grp_cache_update_fu_890_v182_0_V_ce0, grp_reshape_2D_to_3D_fu_922_v136_0_V_ce0, ap_CS_fsm_state15, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            v_proj_V_0_ce0 <= grp_reshape_2D_to_3D_fu_922_v136_0_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            v_proj_V_0_ce0 <= grp_cache_update_fu_890_v182_0_V_ce0;
        else 
            v_proj_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v_proj_V_0_we0_assign_proc : process(grp_reshape_2D_to_3D_fu_922_v136_0_V_we0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            v_proj_V_0_we0 <= grp_reshape_2D_to_3D_fu_922_v136_0_V_we0;
        else 
            v_proj_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    v_proj_re_V_address0_assign_proc : process(ap_CS_fsm_state8, grp_linear_forward_no_mu_fu_778_v81_V_address0, grp_reshape_2D_to_3D_fu_922_v135_V_address0, ap_CS_fsm_state15, ap_CS_fsm_state13, zext_ln486_fu_999_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            v_proj_re_V_address0 <= zext_ln486_fu_999_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            v_proj_re_V_address0 <= grp_reshape_2D_to_3D_fu_922_v135_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            v_proj_re_V_address0 <= grp_linear_forward_no_mu_fu_778_v81_V_address0;
        else 
            v_proj_re_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    v_proj_re_V_ce0_assign_proc : process(ap_CS_fsm_state8, grp_linear_forward_no_mu_fu_778_v81_V_ce0, grp_reshape_2D_to_3D_fu_922_v135_V_ce0, ap_CS_fsm_state15, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            v_proj_re_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            v_proj_re_V_ce0 <= grp_reshape_2D_to_3D_fu_922_v135_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            v_proj_re_V_ce0 <= grp_linear_forward_no_mu_fu_778_v81_V_ce0;
        else 
            v_proj_re_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    v_proj_re_V_d0_assign_proc : process(ap_CS_fsm_state8, grp_linear_forward_no_mu_fu_778_v81_V_d0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            v_proj_re_V_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            v_proj_re_V_d0 <= grp_linear_forward_no_mu_fu_778_v81_V_d0;
        else 
            v_proj_re_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    v_proj_re_V_we0_assign_proc : process(ap_CS_fsm_state8, grp_linear_forward_no_mu_fu_778_v81_V_we0, icmp_ln485_fu_987_p2, ap_CS_fsm_state13)
    begin
        if (((icmp_ln485_fu_987_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            v_proj_re_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            v_proj_re_V_we0 <= grp_linear_forward_no_mu_fu_778_v81_V_we0;
        else 
            v_proj_re_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln203_10_fu_1164_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_123_fu_1156_p3),9));
    zext_ln203_11_fu_1118_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v307_0_0_reg_558),12));
    zext_ln203_12_fu_1271_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_124_fu_1263_p3),9));
    zext_ln203_13_fu_1283_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_125_fu_1275_p3),9));
    zext_ln203_14_fu_1190_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v310_0_reg_580),10));
    zext_ln203_15_fu_1398_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_127_fu_1390_p3),8));
    zext_ln203_16_fu_1309_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v314_0_reg_613),10));
    zext_ln203_17_fu_1237_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v311_0_reg_591),15));
    zext_ln203_18_fu_1246_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln203_9_fu_1241_p2),64));
    zext_ln203_19_fu_1420_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v323_0_0_reg_646),8));
    zext_ln203_20_fu_1356_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v315_0_reg_624),15));
    zext_ln203_21_fu_1365_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln203_11_fu_1360_p2),64));
    zext_ln203_22_fu_1602_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_131_fu_1594_p3),8));
    zext_ln203_23_fu_1666_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_133_fu_1658_p3),12));
    zext_ln203_24_fu_1624_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v343_0_0_reg_690),8));
    zext_ln203_25_fu_1688_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v347_0_0_reg_712),12));
    zext_ln203_7_fu_1096_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_121_fu_1088_p3),12));
    zext_ln203_8_fu_1054_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v303_0_0_reg_536),12));
    zext_ln203_9_fu_1152_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_122_fu_1144_p3),9));
    zext_ln203_fu_1032_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_119_fu_1024_p3),12));
    zext_ln455_fu_948_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v272_0_0_reg_481),64));
    zext_ln474_fu_965_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v281_0_0_reg_492),64));
    zext_ln480_fu_982_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v284_0_0_reg_503),64));
    zext_ln486_fu_999_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v287_0_0_reg_514),64));
    zext_ln577_1_fu_1484_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k9_0_0_reg_668),8));
    zext_ln577_fu_1462_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_129_fu_1454_p3),8));
    zext_ln622_fu_1714_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v350_0_0_reg_723),64));
    zext_ln627_fu_1791_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(d4_0_0_reg_745),12));
    zext_ln628_fu_1747_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_135_fu_1739_p3),12));
    zext_ln629_1_fu_1769_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln2_fu_1761_p3),12));
    zext_ln629_2_fu_1781_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln629_1_fu_1773_p3),12));
    zext_ln629_fu_1825_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln629_fu_1822_p1),64));
    zext_ln636_fu_1842_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v357_0_0_reg_756),64));
    zext_ln654_fu_1859_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(v365_0_0_reg_767),64));
end behav;
