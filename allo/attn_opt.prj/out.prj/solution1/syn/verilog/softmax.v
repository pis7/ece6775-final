// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module softmax (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v213_0_V_address0,
        v213_0_V_ce0,
        v213_0_V_q0,
        v214_0_V_address0,
        v214_0_V_ce0,
        v214_0_V_we0,
        v214_0_V_d0,
        v214_0_V_q0
);

parameter    ap_ST_fsm_state1 = 60'd1;
parameter    ap_ST_fsm_state2 = 60'd2;
parameter    ap_ST_fsm_state3 = 60'd4;
parameter    ap_ST_fsm_state4 = 60'd8;
parameter    ap_ST_fsm_state5 = 60'd16;
parameter    ap_ST_fsm_state6 = 60'd32;
parameter    ap_ST_fsm_state7 = 60'd64;
parameter    ap_ST_fsm_state8 = 60'd128;
parameter    ap_ST_fsm_state9 = 60'd256;
parameter    ap_ST_fsm_state10 = 60'd512;
parameter    ap_ST_fsm_state11 = 60'd1024;
parameter    ap_ST_fsm_state12 = 60'd2048;
parameter    ap_ST_fsm_state13 = 60'd4096;
parameter    ap_ST_fsm_state14 = 60'd8192;
parameter    ap_ST_fsm_state15 = 60'd16384;
parameter    ap_ST_fsm_state16 = 60'd32768;
parameter    ap_ST_fsm_state17 = 60'd65536;
parameter    ap_ST_fsm_state18 = 60'd131072;
parameter    ap_ST_fsm_state19 = 60'd262144;
parameter    ap_ST_fsm_state20 = 60'd524288;
parameter    ap_ST_fsm_state21 = 60'd1048576;
parameter    ap_ST_fsm_state22 = 60'd2097152;
parameter    ap_ST_fsm_state23 = 60'd4194304;
parameter    ap_ST_fsm_state24 = 60'd8388608;
parameter    ap_ST_fsm_state25 = 60'd16777216;
parameter    ap_ST_fsm_state26 = 60'd33554432;
parameter    ap_ST_fsm_state27 = 60'd67108864;
parameter    ap_ST_fsm_state28 = 60'd134217728;
parameter    ap_ST_fsm_state29 = 60'd268435456;
parameter    ap_ST_fsm_state30 = 60'd536870912;
parameter    ap_ST_fsm_state31 = 60'd1073741824;
parameter    ap_ST_fsm_state32 = 60'd2147483648;
parameter    ap_ST_fsm_state33 = 60'd4294967296;
parameter    ap_ST_fsm_state34 = 60'd8589934592;
parameter    ap_ST_fsm_state35 = 60'd17179869184;
parameter    ap_ST_fsm_state36 = 60'd34359738368;
parameter    ap_ST_fsm_state37 = 60'd68719476736;
parameter    ap_ST_fsm_state38 = 60'd137438953472;
parameter    ap_ST_fsm_state39 = 60'd274877906944;
parameter    ap_ST_fsm_state40 = 60'd549755813888;
parameter    ap_ST_fsm_state41 = 60'd1099511627776;
parameter    ap_ST_fsm_state42 = 60'd2199023255552;
parameter    ap_ST_fsm_state43 = 60'd4398046511104;
parameter    ap_ST_fsm_state44 = 60'd8796093022208;
parameter    ap_ST_fsm_state45 = 60'd17592186044416;
parameter    ap_ST_fsm_state46 = 60'd35184372088832;
parameter    ap_ST_fsm_state47 = 60'd70368744177664;
parameter    ap_ST_fsm_state48 = 60'd140737488355328;
parameter    ap_ST_fsm_state49 = 60'd281474976710656;
parameter    ap_ST_fsm_state50 = 60'd562949953421312;
parameter    ap_ST_fsm_state51 = 60'd1125899906842624;
parameter    ap_ST_fsm_state52 = 60'd2251799813685248;
parameter    ap_ST_fsm_state53 = 60'd4503599627370496;
parameter    ap_ST_fsm_state54 = 60'd9007199254740992;
parameter    ap_ST_fsm_state55 = 60'd18014398509481984;
parameter    ap_ST_fsm_state56 = 60'd36028797018963968;
parameter    ap_ST_fsm_state57 = 60'd72057594037927936;
parameter    ap_ST_fsm_state58 = 60'd144115188075855872;
parameter    ap_ST_fsm_state59 = 60'd288230376151711744;
parameter    ap_ST_fsm_state60 = 60'd576460752303423488;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] v213_0_V_address0;
output   v213_0_V_ce0;
input  [31:0] v213_0_V_q0;
output  [6:0] v214_0_V_address0;
output   v214_0_V_ce0;
output   v214_0_V_we0;
output  [31:0] v214_0_V_d0;
input  [31:0] v214_0_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg v213_0_V_ce0;
reg[6:0] v214_0_V_address0;
reg v214_0_V_ce0;
reg v214_0_V_we0;
reg[31:0] v214_0_V_d0;

(* fsm_encoding = "none" *) reg   [59:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] i7_fu_257_p2;
reg   [4:0] i7_reg_482;
wire    ap_CS_fsm_state2;
wire   [7:0] sub_ln370_fu_283_p2;
reg   [7:0] sub_ln370_reg_487;
wire   [0:0] icmp_ln367_fu_251_p2;
wire   [2:0] add_ln369_fu_295_p2;
reg   [2:0] add_ln369_reg_495;
wire    ap_CS_fsm_state3;
wire  signed [63:0] sext_ln370_fu_310_p1;
reg  signed [63:0] sext_ln370_reg_500;
wire   [0:0] icmp_ln369_fu_289_p2;
wire   [4:0] i8_fu_321_p2;
reg   [4:0] i8_reg_513;
wire    ap_CS_fsm_state5;
wire   [7:0] sub_ln380_fu_347_p2;
reg   [7:0] sub_ln380_reg_518;
wire   [0:0] icmp_ln375_fu_315_p2;
wire   [2:0] add_ln379_fu_359_p2;
reg   [2:0] add_ln379_reg_528;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln379_fu_353_p2;
wire   [31:0] select_ln383_fu_385_p3;
wire    ap_CS_fsm_state7;
wire   [2:0] add_ln390_fu_399_p2;
reg   [2:0] add_ln390_reg_546;
wire    ap_CS_fsm_state8;
reg   [6:0] v214_0_V_addr_2_reg_551;
wire   [0:0] icmp_ln390_fu_393_p2;
wire  signed [43:0] sext_ln1148_fu_419_p1;
reg  signed [43:0] sext_ln1148_reg_556;
wire   [31:0] sub_ln703_fu_423_p2;
reg   [31:0] sub_ln703_reg_561;
wire    ap_CS_fsm_state9;
wire   [31:0] add_ln703_fu_429_p2;
wire    ap_CS_fsm_state11;
wire    grp_pow_32_20_s_fu_223_ap_ready;
wire    grp_pow_32_20_s_fu_223_ap_done;
wire   [2:0] add_ln401_fu_441_p2;
reg   [2:0] add_ln401_reg_574;
wire    ap_CS_fsm_state12;
reg   [6:0] v214_0_V_addr_3_reg_579;
wire   [0:0] icmp_ln401_fu_435_p2;
wire    ap_CS_fsm_state13;
wire    grp_pow_32_20_s_fu_223_ap_start;
wire    grp_pow_32_20_s_fu_223_ap_idle;
wire   [31:0] grp_pow_32_20_s_fu_223_ap_return;
reg   [4:0] i7_0_reg_133;
reg   [2:0] k4_0_0_reg_144;
wire    ap_CS_fsm_state4;
reg   [4:0] i8_0_reg_155;
reg   [31:0] v224_V_0_reg_166;
reg   [2:0] k5_0_0_reg_178;
reg  signed [31:0] v234_V_0_reg_189;
reg   [2:0] k6_0_0_reg_201;
reg   [2:0] k7_0_0_reg_212;
wire    ap_CS_fsm_state60;
reg    grp_pow_32_20_s_fu_223_ap_start_reg;
wire    ap_CS_fsm_state10;
wire  signed [63:0] sext_ln380_fu_374_p1;
wire  signed [63:0] sext_ln391_fu_414_p1;
wire  signed [63:0] sext_ln402_fu_456_p1;
wire   [31:0] trunc_ln703_fu_474_p1;
wire   [5:0] tmp_1_fu_271_p3;
wire   [7:0] tmp_s_fu_263_p3;
wire   [7:0] zext_ln370_fu_279_p1;
wire   [7:0] zext_ln370_1_fu_301_p1;
wire   [7:0] add_ln370_fu_305_p2;
wire   [5:0] tmp_4_fu_335_p3;
wire   [7:0] tmp_3_fu_327_p3;
wire   [7:0] zext_ln380_fu_343_p1;
wire   [7:0] zext_ln380_1_fu_365_p1;
wire   [7:0] add_ln380_fu_369_p2;
wire   [0:0] icmp_ln1494_fu_379_p2;
wire   [7:0] zext_ln391_fu_405_p1;
wire   [7:0] add_ln391_fu_409_p2;
wire   [7:0] zext_ln402_fu_447_p1;
wire   [7:0] add_ln402_fu_451_p2;
wire   [43:0] grp_fu_469_p0;
wire  signed [31:0] grp_fu_469_p1;
wire   [31:0] grp_fu_469_p2;
reg    grp_fu_469_ap_start;
wire    grp_fu_469_ap_done;
reg   [59:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 60'd1;
#0 grp_pow_32_20_s_fu_223_ap_start_reg = 1'b0;
end

pow_32_20_s grp_pow_32_20_s_fu_223(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_pow_32_20_s_fu_223_ap_start),
    .ap_done(grp_pow_32_20_s_fu_223_ap_done),
    .ap_idle(grp_pow_32_20_s_fu_223_ap_idle),
    .ap_ready(grp_pow_32_20_s_fu_223_ap_ready),
    .x_V(32'd11134),
    .y_V(sub_ln703_reg_561),
    .ap_return(grp_pow_32_20_s_fu_223_ap_return)
);

attention_sdiv_44Bew #(
    .ID( 1 ),
    .NUM_STAGE( 48 ),
    .din0_WIDTH( 44 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
attention_sdiv_44Bew_U78(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_469_ap_start),
    .done(grp_fu_469_ap_done),
    .din0(grp_fu_469_p0),
    .din1(grp_fu_469_p1),
    .ce(1'b1),
    .dout(grp_fu_469_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_pow_32_20_s_fu_223_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            grp_pow_32_20_s_fu_223_ap_start_reg <= 1'b1;
        end else if ((grp_pow_32_20_s_fu_223_ap_ready == 1'b1)) begin
            grp_pow_32_20_s_fu_223_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln369_fu_289_p2 == 1'd1))) begin
        i7_0_reg_133 <= i7_reg_482;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i7_0_reg_133 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln367_fu_251_p2 == 1'd1))) begin
        i8_0_reg_155 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln401_fu_435_p2 == 1'd1))) begin
        i8_0_reg_155 <= i8_reg_513;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        k4_0_0_reg_144 <= add_ln369_reg_495;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln367_fu_251_p2 == 1'd0))) begin
        k4_0_0_reg_144 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        k5_0_0_reg_178 <= add_ln379_reg_528;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln375_fu_315_p2 == 1'd0))) begin
        k5_0_0_reg_178 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln379_fu_353_p2 == 1'd1))) begin
        k6_0_0_reg_201 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (grp_pow_32_20_s_fu_223_ap_done == 1'b1))) begin
        k6_0_0_reg_201 <= add_ln390_reg_546;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln390_fu_393_p2 == 1'd1))) begin
        k7_0_0_reg_212 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        k7_0_0_reg_212 <= add_ln401_reg_574;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        v224_V_0_reg_166 <= select_ln383_fu_385_p3;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln375_fu_315_p2 == 1'd0))) begin
        v224_V_0_reg_166 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln379_fu_353_p2 == 1'd1))) begin
        v234_V_0_reg_189 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (grp_pow_32_20_s_fu_223_ap_done == 1'b1))) begin
        v234_V_0_reg_189 <= add_ln703_fu_429_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln369_reg_495 <= add_ln369_fu_295_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln379_reg_528 <= add_ln379_fu_359_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln390_reg_546 <= add_ln390_fu_399_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        add_ln401_reg_574 <= add_ln401_fu_441_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i7_reg_482 <= i7_fu_257_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i8_reg_513 <= i8_fu_321_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln390_fu_393_p2 == 1'd1))) begin
        sext_ln1148_reg_556 <= sext_ln1148_fu_419_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln369_fu_289_p2 == 1'd0))) begin
        sext_ln370_reg_500 <= sext_ln370_fu_310_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln367_fu_251_p2 == 1'd0))) begin
        sub_ln370_reg_487[7 : 1] <= sub_ln370_fu_283_p2[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln375_fu_315_p2 == 1'd0))) begin
        sub_ln380_reg_518[7 : 1] <= sub_ln380_fu_347_p2[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sub_ln703_reg_561 <= sub_ln703_fu_423_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln390_fu_393_p2 == 1'd0))) begin
        v214_0_V_addr_2_reg_551 <= sext_ln391_fu_414_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln401_fu_435_p2 == 1'd0))) begin
        v214_0_V_addr_3_reg_579 <= sext_ln402_fu_456_p1;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state5) & (icmp_ln375_fu_315_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln375_fu_315_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_469_ap_start = 1'b1;
    end else begin
        grp_fu_469_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        v213_0_V_ce0 = 1'b1;
    end else begin
        v213_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        v214_0_V_address0 = v214_0_V_addr_3_reg_579;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        v214_0_V_address0 = sext_ln402_fu_456_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        v214_0_V_address0 = v214_0_V_addr_2_reg_551;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        v214_0_V_address0 = sext_ln391_fu_414_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        v214_0_V_address0 = sext_ln380_fu_374_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        v214_0_V_address0 = sext_ln370_reg_500;
    end else begin
        v214_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state11) & (grp_pow_32_20_s_fu_223_ap_done == 1'b1)))) begin
        v214_0_V_ce0 = 1'b1;
    end else begin
        v214_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        v214_0_V_d0 = trunc_ln703_fu_474_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        v214_0_V_d0 = grp_pow_32_20_s_fu_223_ap_return;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        v214_0_V_d0 = v213_0_V_q0;
    end else begin
        v214_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state11) & (grp_pow_32_20_s_fu_223_ap_done == 1'b1)))) begin
        v214_0_V_we0 = 1'b1;
    end else begin
        v214_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln367_fu_251_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln369_fu_289_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln375_fu_315_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln379_fu_353_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln390_fu_393_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (grp_pow_32_20_s_fu_223_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln401_fu_435_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln369_fu_295_p2 = (k4_0_0_reg_144 + 3'd1);

assign add_ln370_fu_305_p2 = (sub_ln370_reg_487 + zext_ln370_1_fu_301_p1);

assign add_ln379_fu_359_p2 = (k5_0_0_reg_178 + 3'd1);

assign add_ln380_fu_369_p2 = (sub_ln380_reg_518 + zext_ln380_1_fu_365_p1);

assign add_ln390_fu_399_p2 = (k6_0_0_reg_201 + 3'd1);

assign add_ln391_fu_409_p2 = (sub_ln380_reg_518 + zext_ln391_fu_405_p1);

assign add_ln401_fu_441_p2 = (k7_0_0_reg_212 + 3'd1);

assign add_ln402_fu_451_p2 = (sub_ln380_reg_518 + zext_ln402_fu_447_p1);

assign add_ln703_fu_429_p2 = ($signed(v234_V_0_reg_189) + $signed(grp_pow_32_20_s_fu_223_ap_return));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign grp_fu_469_p0 = {{v214_0_V_q0}, {12'd0}};

assign grp_fu_469_p1 = sext_ln1148_reg_556;

assign grp_pow_32_20_s_fu_223_ap_start = grp_pow_32_20_s_fu_223_ap_start_reg;

assign i7_fu_257_p2 = (i7_0_reg_133 + 5'd1);

assign i8_fu_321_p2 = (i8_0_reg_155 + 5'd1);

assign icmp_ln1494_fu_379_p2 = (($signed(v214_0_V_q0) > $signed(v224_V_0_reg_166)) ? 1'b1 : 1'b0);

assign icmp_ln367_fu_251_p2 = ((i7_0_reg_133 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln369_fu_289_p2 = ((k4_0_0_reg_144 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln375_fu_315_p2 = ((i8_0_reg_155 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln379_fu_353_p2 = ((k5_0_0_reg_178 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln390_fu_393_p2 = ((k6_0_0_reg_201 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln401_fu_435_p2 = ((k7_0_0_reg_212 == 3'd6) ? 1'b1 : 1'b0);

assign select_ln383_fu_385_p3 = ((icmp_ln1494_fu_379_p2[0:0] === 1'b1) ? v214_0_V_q0 : v224_V_0_reg_166);

assign sext_ln1148_fu_419_p1 = v234_V_0_reg_189;

assign sext_ln370_fu_310_p1 = $signed(add_ln370_fu_305_p2);

assign sext_ln380_fu_374_p1 = $signed(add_ln380_fu_369_p2);

assign sext_ln391_fu_414_p1 = $signed(add_ln391_fu_409_p2);

assign sext_ln402_fu_456_p1 = $signed(add_ln402_fu_451_p2);

assign sub_ln370_fu_283_p2 = (tmp_s_fu_263_p3 - zext_ln370_fu_279_p1);

assign sub_ln380_fu_347_p2 = (tmp_3_fu_327_p3 - zext_ln380_fu_343_p1);

assign sub_ln703_fu_423_p2 = (v214_0_V_q0 - v224_V_0_reg_166);

assign tmp_1_fu_271_p3 = {{i7_0_reg_133}, {1'd0}};

assign tmp_3_fu_327_p3 = {{i8_0_reg_155}, {3'd0}};

assign tmp_4_fu_335_p3 = {{i8_0_reg_155}, {1'd0}};

assign tmp_s_fu_263_p3 = {{i7_0_reg_133}, {3'd0}};

assign trunc_ln703_fu_474_p1 = grp_fu_469_p2[31:0];

assign v213_0_V_address0 = sext_ln370_fu_310_p1;

assign zext_ln370_1_fu_301_p1 = k4_0_0_reg_144;

assign zext_ln370_fu_279_p1 = tmp_1_fu_271_p3;

assign zext_ln380_1_fu_365_p1 = k5_0_0_reg_178;

assign zext_ln380_fu_343_p1 = tmp_4_fu_335_p3;

assign zext_ln391_fu_405_p1 = k6_0_0_reg_201;

assign zext_ln402_fu_447_p1 = k7_0_0_reg_212;

always @ (posedge ap_clk) begin
    sub_ln370_reg_487[0] <= 1'b0;
    sub_ln380_reg_518[0] <= 1'b0;
end

endmodule //softmax
